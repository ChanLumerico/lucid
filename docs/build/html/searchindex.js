Search.setIndex({"alltitles": {"@ Operator": [[407, "operator"]], "About Dagger (^\\dagger) Variants": [[161, "about-dagger-dagger-variants"], [163, "about-dagger-dagger-variants"], [165, "about-dagger-dagger-variants"]], "Activation Functions": [[223, null], [245, null]], "Activation Layers": [[304, null], [323, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[305, "additional-options"]], "Advanced Example with Dilation": [[236, "advanced-example-with-dilation"]], "Advanced Features": [[485, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [321, "advantages"]], "AlexNet": [[28, null], [85, "alexnet"]], "Algorithm": [[376, "algorithm"], [377, "algorithm"], [378, "algorithm"], [379, "algorithm"], [380, "algorithm"], [381, "algorithm"], [382, "algorithm"], [383, "algorithm"], [384, "algorithm"], [385, "algorithm"], [386, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"], [159, "architecture"], [174, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[230, null], [245, null]], "Attention Layers": [[307, null], [323, null]], "Attention Mechanism": [[231, "attention-mechanism"], [282, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [212, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [278, "attributes"], [279, "attributes"], [280, "attributes"], [281, "attributes"], [292, "attributes"], [293, "attributes"], [296, "attributes"], [297, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [303, "attributes"], [308, "attributes"], [309, "attributes"], [310, "attributes"], [313, "attributes"], [315, "attributes"], [316, "attributes"], [317, "attributes"], [318, "attributes"], [319, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [332, "attributes"], [334, "attributes"], [335, "attributes"], [336, "attributes"], [338, "attributes"], [339, "attributes"], [340, "attributes"], [341, "attributes"], [343, "attributes"], [344, "attributes"], [345, "attributes"], [346, "attributes"], [347, "attributes"], [348, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [388, "attributes"], [402, "attributes"], [476, "attributes"], [477, "attributes"], [478, "attributes"], [479, "attributes"], [480, "attributes"], [481, "attributes"], [482, "attributes"], [483, "attributes"]], "Automatic Differentiation (Autodiff)": [[15, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[446, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [429, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [434, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [437, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [440, "backward-gradient-calculation"], [441, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [447, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [457, "backward-gradient-calculation"], [460, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [462, "backward-gradient-calculation"], [463, "backward-gradient-calculation"], [464, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [470, "backward-gradient-calculation"], [471, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [473, "backward-gradient-calculation"]], "Base Class": [[374, null]], "Basic Installation": [[15, "basic-installation"]], "Behavior": [[261, "behavior"], [262, "behavior"], [263, "behavior"], [343, "behavior"], [344, "behavior"], [345, "behavior"]], "Benefits": [[389, "benefits"], [392, "benefits"]], "Binary Functions": [[424, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[453, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [159, "class-signature"], [169, "class-signature"], [174, "class-signature"], [194, "class-signature"], [195, "class-signature"], [206, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [275, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [305, "class-signature"], [306, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [317, "class-signature"], [318, "class-signature"], [319, "class-signature"], [321, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [334, "class-signature"], [335, "class-signature"], [336, "class-signature"], [337, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [353, "class-signature"], [355, "class-signature"], [356, "class-signature"], [357, "class-signature"], [358, "class-signature"], [359, "class-signature"], [361, "class-signature"], [364, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [388, "class-signature"], [402, "class-signature"], [474, "class-signature"], [475, "class-signature"], [476, "class-signature"], [477, "class-signature"], [478, "class-signature"], [479, "class-signature"], [480, "class-signature"], [481, "class-signature"], [482, "class-signature"], [483, "class-signature"]], "CoAtNet": [[30, null], [85, "coatnet"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [321, "conclusion"], [363, "conclusion"], [365, "conclusion"], [390, "conclusion"], [391, "conclusion"], [401, "conclusion"], [475, "conclusion"], [485, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[220, null]], "Conv-BatchNorm-ReLU": [[283, null]], "ConvNeXt": [[39, null], [85, "convnext"]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null]], "Convolution Functions": [[235, null], [245, null]], "Convolution Layers": [[312, null], [323, null]], "Convolutional Transformer (CvT)": [[173, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[452, null]], "Creating a Parameter": [[214, null]], "Creating a tensor on GPU with gradient tracking": [[402, null]], "CrossViT": [[159, null], [173, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[485, "custom-pipelines"]], "CvT": [[169, null]], "Defining a Custom Optimizer": [[375, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[213, null]], "Defining a custom optimizer": [[364, null]], "DenseNet": [[54, null], [85, "densenet"]], "Depthwise Separable Convolution": [[283, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [393, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Device-based dtype inference": [[402, null]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[244, null], [245, null]], "Dropout Layers": [[320, null], [323, null]], "Educational by Design": [[15, "educational-by-design"]], "EfficientNet": [[59, null], [85, "efficientnet"]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[322, null], [323, null]], "Embedding Process": [[271, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[15, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [236, "example"], [363, null], [363, null], [363, null], [390, "example"], [394, "example"], [396, "example"], [397, "example"], [398, "example"], [399, "example"], [400, "example"], [401, null], [401, null], [401, null], [414, "example"], [415, "example"], [416, "example"], [417, "example"], [418, "example"], [420, "example"], [421, "example"], [422, "example"], [423, "example"], [425, "example"], [426, "example"], [427, "example"], [428, "example"], [429, "example"], [430, "example"], [431, "example"], [432, "example"], [434, "example"], [435, "example"], [437, "example"], [439, "example"], [440, "example"], [441, "example"], [442, "example"], [443, "example"], [444, "example"], [445, "example"], [447, "example"], [448, "example"], [449, "example"], [450, "example"], [451, "example"], [454, "example"], [455, "example"], [457, "example"], [462, "example"], [464, "example"], [467, "example"], [468, "example"], [470, "example"], [471, "example"], [472, "example"], [473, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[391, null]], "Example 2: Adding a new axis to a 2D tensor": [[391, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[391, null]], "Example Usage": [[74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [274, "example-usage"], [474, "example-usage"], [475, "example-usage"], [485, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [180, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [221, "examples"], [222, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [246, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [273, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [284, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [306, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [321, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [334, "examples"], [335, "examples"], [336, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [353, "examples"], [361, "examples"], [364, "examples"], [375, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [389, "examples"], [392, "examples"], [393, "examples"], [402, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [406, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [419, "examples"], [433, "examples"], [436, "examples"], [438, "examples"], [446, "examples"], [452, "examples"], [453, "examples"], [456, "examples"], [459, "examples"], [460, "examples"], [461, "examples"], [463, "examples"], [465, "examples"], [466, "examples"], [469, "examples"], [476, "examples"], [477, "examples"], [478, "examples"], [479, "examples"], [480, "examples"], [481, "examples"], [482, "examples"], [483, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [236, "forward-calculation"], [239, "forward-calculation"], [246, "forward-calculation"], [248, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [273, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [306, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [429, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [437, "forward-calculation"], [438, "forward-calculation"], [439, "forward-calculation"], [440, "forward-calculation"], [441, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [447, "forward-calculation"], [448, "forward-calculation"], [449, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [455, "forward-calculation"], [457, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [464, "forward-calculation"], [467, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [471, "forward-calculation"], [472, "forward-calculation"], [473, "forward-calculation"], [476, "forward-calculation"], [477, "forward-calculation"], [478, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [481, "forward-calculation"], [482, "forward-calculation"], [483, "forward-calculation"]], "Forward Method": [[355, "forward-method"], [356, "forward-method"], [357, "forward-method"], [358, "forward-method"], [359, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [221, "function-signature"], [222, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [246, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [273, "function-signature"], [274, "function-signature"], [284, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [389, "function-signature"], [390, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [406, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"]], "Fused Layers": [[283, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[375, "getting-started"]], "Gradient Computation": [[454, "gradient-computation"], [459, "gradient-computation"], [465, "gradient-computation"]], "Gradient hooks": [[402, null]], "Hooks & Shape Alignment": [[15, "hooks-shape-alignment"]], "How It Works": [[390, "how-it-works"]], "How to Install": [[15, "how-to-install"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[484, null]], "Implementation Details": [[159, "implementation-details"], [174, "implementation-details"]], "Inception": [[73, null], [85, "inception"]], "Inception-ResNet": [[85, "inception-resnet"]], "InceptionNeXt": [[77, null], [85, "inceptionnext"]], "InceptionResNet": [[82, null]], "Inspecting Optimizer State": [[375, null], [376, null], [377, null], [378, null], [379, null], [380, null], [381, null], [382, null], [383, null], [384, null], [385, null], [386, null]], "Integration with lucid": [[3, "integration-with-lucid"], [363, "integration-with-lucid"], [401, "integration-with-lucid"], [485, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [363, "key-components"]], "Key Enhancements": [[181, "key-enhancements"]], "Key Features": [[4, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [375, "key-features"], [401, "key-features"]], "Key Transformations": [[485, "key-transformations"]], "LR Schedulers": [[374, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[85, "lenet"], [86, null]], "Learn More": [[401, null]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[245, null], [247, null]], "Linear Layers": [[323, null], [327, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[245, null], [252, null]], "Loss Layers": [[323, null], [333, null]], "Lucid\u00b2 \ud83d\udc8e": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [260, "mathematical-definition"], [321, "mathematical-definition"]], "Mathematical Details": [[305, "mathematical-details"], [355, "mathematical-details"], [356, "mathematical-details"], [357, "mathematical-details"], [358, "mathematical-details"], [359, "mathematical-details"]], "Mathematical Expression": [[256, "mathematical-expression"], [466, "mathematical-expression"]], "Mathematical Formula": [[366, "mathematical-formula"], [367, "mathematical-formula"], [368, "mathematical-formula"], [370, "mathematical-formula"], [371, "mathematical-formula"], [372, "mathematical-formula"], [373, "mathematical-formula"]], "Mathematical Representation": [[159, "mathematical-representation"], [174, "mathematical-representation"], [402, "mathematical-representation"]], "Matrix Multiplication Rules": [[407, "matrix-multiplication-rules"]], "MaxViT": [[173, "maxvit"], [174, null]], "Metadata Captured": [[393, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[15, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [213, "methods"], [214, "methods"], [364, "methods"], [366, "methods"], [367, "methods"], [368, "methods"], [369, "methods"], [370, "methods"], [371, "methods"], [372, "methods"], [373, "methods"], [388, "methods"], [402, "methods"]], "MobileNet": [[85, "mobilenet"], [90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Model Configuration": [[175, "model-configuration"], [176, "model-configuration"], [177, "model-configuration"], [178, "model-configuration"], [179, "model-configuration"]], "Modules": [[323, null]], "Moving tensor between devices": [[402, null]], "Neural Networks with lucid.nn": [[15, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[245, null], [257, null]], "Normalization Layers": [[323, null], [342, null]], "Optimizers": [[387, null]], "Organizing Models": [[363, "organizing-models"]], "Others": [[15, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [305, "overview"], [355, "overview"], [356, "overview"], [357, "overview"], [358, "overview"], [359, "overview"], [363, "overview"], [365, "overview"], [375, "overview"], [389, "overview"], [392, "overview"], [401, "overview"], [485, "overview"]], "PVT": [[180, null]], "PVT_V2": [[181, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [221, "parameters"], [222, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [246, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [284, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [296, "parameters"], [297, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [303, "parameters"], [305, "parameters"], [306, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [321, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [361, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [388, "parameters"], [389, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"]], "Performing backpropagation": [[402, null]], "Pooling Functions": [[245, null], [267, null]], "Pooling Layers": [[323, null], [352, null]], "Potential Pitfalls": [[390, "potential-pitfalls"]], "Properties": [[214, "properties"], [402, "properties"]], "Pyramid Vision Transformer (PVT)": [[173, "pyramid-vision-transformer-pvt"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[395, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [281, "references"], [375, "references"]], "Regularization": [[238, "regularization"]], "Representation": [[388, "representation"]], "ResNeSt": [[85, "resnest"], [103, null]], "ResNeXt": [[85, "resnext"], [123, null]], "ResNet": [[85, "resnet"], [112, null]], "Return Values": [[466, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [221, "returns"], [222, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [246, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [273, "returns"], [274, "returns"], [282, "returns"], [284, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [298, "returns"], [321, "returns"], [353, "returns"], [389, "returns"], [390, "returns"], [392, "returns"], [394, "returns"], [396, "returns"], [397, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"]], "SENet": [[85, "senet"], [130, null]], "SKNet": [[85, "sknet"], [140, null]], "Schedulers": [[374, null]], "See Also": [[375, "see-also"]], "Selective Kernel": [[283, null]], "Sparse Layers": [[323, null], [354, null]], "Specifications": [[160, "specifications"], [161, "specifications"], [162, "specifications"], [163, "specifications"], [164, "specifications"], [165, "specifications"], [166, "specifications"], [167, "specifications"], [168, "specifications"]], "Squeeze-and-Excitation": [[283, null]], "Summary Table": [[155, "summary-table"]], "Swin Transformer": [[173, "swin-transformer"]], "SwinTransformer": [[194, null]], "SwinTransformer_V2": [[195, null]], "Switching Between Devices": [[15, "switching-between-devices"]], "Tensor Generating Functions": [[424, null]], "Tensor Operations": [[424, null]], "Tensor Utilites": [[458, null]], "Tensor: The Core Abstraction": [[15, "tensor-the-core-abstraction"]], "Training & Evaluation": [[15, "training-evaluation"]], "Transformer": [[156, null], [173, "transformer"]], "Transformer Layers": [[323, null], [360, null]], "Transformers": [[173, null]], "Unary Functions": [[424, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [212, "usage"], [274, "usage"], [365, "usage"], [390, "usage"], [391, "usage"], [460, "usage"], [474, "usage"], [475, "usage"], [485, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [305, "usage-example"], [355, "usage-example"], [356, "usage-example"], [357, "usage-example"], [358, "usage-example"], [359, "usage-example"], [366, "usage-example"], [367, "usage-example"], [368, "usage-example"], [369, "usage-example"], [370, "usage-example"], [371, "usage-example"], [372, "usage-example"], [373, "usage-example"]], "Usage Examples": [[388, "usage-examples"]], "Use another Tensor as input": [[452, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[402, null]], "Using the ASGD Optimizer": [[376, null]], "Using the Adadelta Optimizer": [[377, null]], "Using the Adagrad Optimizer": [[378, null]], "Using the Adam Optimizer": [[379, null]], "Using the AdamW Optimizer": [[380, null]], "Using the Adamax Optimizer": [[381, null]], "Using the NAdam Optimizer": [[382, null]], "Using the RAdam Optimizer": [[383, null]], "Using the RMSprop Optimizer": [[384, null]], "Using the Rprop Optimizer": [[385, null]], "Using the SGD Optimizer": [[386, null]], "Utility Functions": [[245, null], [272, null]], "VGGNet": [[85, "vggnet"], [145, null]], "Verification": [[15, "verification"]], "ViT": [[206, null]], "Vision Layers": [[323, null], [362, null]], "Visual Transformer (ViT)": [[173, "visual-transformer-vit"]], "Weight Initializations": [[285, null]], "Xception": [[85, "xception"], [150, null]], "ZFNet": [[85, "zfnet"], [152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "crossvit_15": [[160, null]], "crossvit_15_dagger": [[161, null]], "crossvit_18": [[162, null]], "crossvit_18_dagger": [[163, null]], "crossvit_9": [[164, null]], "crossvit_9_dagger": [[165, null]], "crossvit_base": [[166, null]], "crossvit_small": [[167, null]], "crossvit_tiny": [[168, null]], "cvt_13": [[170, null]], "cvt_21": [[171, null]], "cvt_w24": [[172, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[366, null]], "lr_scheduler.CyclicLR": [[367, null]], "lr_scheduler.ExponentialLR": [[368, null]], "lr_scheduler.LRScheduler": [[369, null]], "lr_scheduler.LambdaLR": [[370, null]], "lr_scheduler.MultiStepLR": [[371, null]], "lr_scheduler.ReduceLROnPlateau": [[372, null]], "lr_scheduler.StepLR": [[373, null]], "lucid.Numeric": [[388, null]], "lucid.Tensor": [[402, null]], "lucid.abs": [[425, null]], "lucid.add": [[403, null]], "lucid.arange": [[414, null]], "lucid.arccos": [[426, null]], "lucid.arcsin": [[427, null]], "lucid.arctan": [[428, null]], "lucid.broadcast_to": [[453, null]], "lucid.chunk": [[454, null]], "lucid.clip": [[429, null]], "lucid.concatenate": [[455, null]], "lucid.cos": [[430, null]], "lucid.cosh": [[431, null]], "lucid.count_flops": [[389, null]], "lucid.cube": [[432, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[415, null]], "lucid.div": [[404, null]], "lucid.dot": [[405, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[416, null]], "lucid.empty_like": [[417, null]], "lucid.exp": [[433, null]], "lucid.eye": [[418, null]], "lucid.flatten": [[456, null]], "lucid.grad_enabled": [[390, null]], "lucid.hstack": [[457, null]], "lucid.inner": [[406, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[419, null]], "lucid.log": [[434, null]], "lucid.log2": [[435, null]], "lucid.masked_fill": [[459, null]], "lucid.matmul": [[407, null]], "lucid.max": [[436, null]], "lucid.maximum": [[408, null]], "lucid.mean": [[437, null]], "lucid.meshgrid": [[460, null]], "lucid.min": [[438, null]], "lucid.minimum": [[409, null]], "lucid.models": [[154, null]], "lucid.multiply": [[410, null]], "lucid.newaxis": [[391, null]], "lucid.nn": [[363, null]], "lucid.nn.functional": [[245, null]], "lucid.no_grad": [[392, null]], "lucid.ones": [[420, null]], "lucid.ones_like": [[421, null]], "lucid.optim": [[375, null]], "lucid.outer": [[411, null]], "lucid.pad": [[461, null]], "lucid.power": [[412, null]], "lucid.random": [[401, null]], "lucid.random.bernoulli": [[394, null]], "lucid.random.rand": [[396, null]], "lucid.random.randint": [[397, null]], "lucid.random.randn": [[398, null]], "lucid.random.seed": [[399, null]], "lucid.random.uniform": [[400, null]], "lucid.ravel": [[462, null]], "lucid.reciprocal": [[439, null]], "lucid.register_model": [[393, null]], "lucid.repeat": [[463, null]], "lucid.reshape": [[464, null]], "lucid.roll": [[465, null]], "lucid.sign": [[440, null]], "lucid.sin": [[441, null]], "lucid.sinh": [[442, null]], "lucid.split": [[466, null]], "lucid.sqrt": [[443, null]], "lucid.square": [[444, null]], "lucid.squeeze": [[467, null]], "lucid.stack": [[468, null]], "lucid.sub": [[413, null]], "lucid.sum": [[445, null]], "lucid.swapaxes": [[446, null]], "lucid.tan": [[447, null]], "lucid.tanh": [[448, null]], "lucid.tensor": [[452, null]], "lucid.tile": [[469, null]], "lucid.trace": [[449, null]], "lucid.transforms": [[485, null]], "lucid.transpose": [[450, null]], "lucid.tril": [[470, null]], "lucid.triu": [[471, null]], "lucid.unsqueeze": [[472, null]], "lucid.var": [[451, null]], "lucid.vstack": [[473, null]], "lucid.zeros": [[422, null]], "lucid.zeros_like": [[423, null]], "maxvit_base": [[175, null], [176, null]], "maxvit_small": [[177, null]], "maxvit_tiny": [[178, null]], "maxvit_xlarge": [[179, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[343, null]], "nn.AdaptiveAvgPool2d": [[344, null]], "nn.AdaptiveAvgPool3d": [[345, null]], "nn.AlphaDropout": [[313, null]], "nn.AvgPool1d": [[346, null]], "nn.AvgPool2d": [[347, null]], "nn.AvgPool3d": [[348, null]], "nn.BCELoss": [[328, null]], "nn.BatchNorm1d": [[334, null]], "nn.BatchNorm2d": [[335, null]], "nn.BatchNorm3d": [[336, null]], "nn.Bilinear": [[324, null]], "nn.Buffer": [[212, null]], "nn.Conv1d": [[308, null]], "nn.Conv2d": [[309, null]], "nn.Conv3d": [[310, null]], "nn.ConvBNReLU1d": [[275, null]], "nn.ConvBNReLU2d": [[276, null]], "nn.ConvBNReLU3d": [[277, null]], "nn.CrossEntropyLoss": [[329, null]], "nn.DepthSeparableConv1d": [[278, null]], "nn.DepthSeparableConv2d": [[279, null]], "nn.DepthSeparableConv3d": [[280, null]], "nn.DropBlock": [[314, null]], "nn.DropPath": [[315, null]], "nn.Dropout": [[316, null]], "nn.Dropout1d": [[317, null]], "nn.Dropout2d": [[318, null]], "nn.Dropout3d": [[319, null]], "nn.ELU": [[292, null]], "nn.Embedding": [[353, null]], "nn.GELU": [[293, null]], "nn.GlobalResponseNorm": [[337, null]], "nn.HardSigmoid": [[294, null]], "nn.HardSwish": [[295, null]], "nn.HuberLoss": [[330, null]], "nn.Identity": [[325, null]], "nn.InstanceNorm1d": [[338, null]], "nn.InstanceNorm2d": [[339, null]], "nn.InstanceNorm3d": [[340, null]], "nn.LayerNorm": [[341, null]], "nn.LeakyReLU": [[296, null]], "nn.Linear": [[326, null]], "nn.MSELoss": [[331, null]], "nn.MaxPool1d": [[349, null]], "nn.MaxPool2d": [[350, null]], "nn.MaxPool3d": [[351, null]], "nn.Module": [[213, null]], "nn.ModuleDict": [[215, null]], "nn.ModuleList": [[216, null]], "nn.MultiHeadAttention": [[305, null]], "nn.NLLLoss": [[332, null]], "nn.Parameter": [[214, null]], "nn.ParameterDict": [[217, null]], "nn.ParameterList": [[218, null]], "nn.ReLU": [[297, null]], "nn.ReLU6": [[298, null]], "nn.Rearrange": [[321, null]], "nn.SELU": [[299, null]], "nn.SEModule": [[281, null]], "nn.ScaledDotProductAttention": [[306, null]], "nn.SelectiveKernel": [[282, null]], "nn.Sequential": [[219, null]], "nn.Sigmoid": [[300, null]], "nn.Softmax": [[301, null]], "nn.Swish": [[302, null]], "nn.Tanh": [[303, null]], "nn.Transformer": [[355, null]], "nn.TransformerDecoder": [[356, null]], "nn.TransformerDecoderLayer": [[357, null]], "nn.TransformerEncoder": [[358, null]], "nn.TransformerEncoderLayer": [[359, null]], "nn.Unfold": [[311, null]], "nn.Upsample": [[361, null]], "nn.functional.adaptive_avg_pool1d": [[261, null]], "nn.functional.adaptive_avg_pool2d": [[262, null]], "nn.functional.adaptive_avg_pool3d": [[263, null]], "nn.functional.alpha_dropout": [[237, null]], "nn.functional.avg_pool1d": [[264, null]], "nn.functional.avg_pool2d": [[265, null]], "nn.functional.avg_pool3d": [[266, null]], "nn.functional.batch_norm": [[255, null]], "nn.functional.bilinear": [[246, null]], "nn.functional.binary_cross_entropy": [[249, null]], "nn.functional.conv1d": [[232, null]], "nn.functional.conv2d": [[233, null]], "nn.functional.conv3d": [[234, null]], "nn.functional.cross_entropy": [[250, null]], "nn.functional.drop_block": [[238, null]], "nn.functional.drop_path": [[239, null]], "nn.functional.dropout": [[240, null]], "nn.functional.dropout1d": [[241, null]], "nn.functional.dropout2d": [[242, null]], "nn.functional.dropout3d": [[243, null]], "nn.functional.elu": [[221, null]], "nn.functional.embedding": [[271, null]], "nn.functional.gelu": [[222, null]], "nn.functional.global_response_norm": [[256, null]], "nn.functional.huber_loss": [[251, null]], "nn.functional.instance_norm": [[258, null]], "nn.functional.interpolate": [[273, null]], "nn.functional.layer_norm": [[259, null]], "nn.functional.leaky_relu": [[224, null]], "nn.functional.linear": [[248, null]], "nn.functional.max_pool1d": [[268, null]], "nn.functional.max_pool2d": [[269, null]], "nn.functional.max_pool3d": [[270, null]], "nn.functional.mse_loss": [[253, null]], "nn.functional.nll_loss": [[254, null]], "nn.functional.normalize": [[260, null]], "nn.functional.relu": [[225, null]], "nn.functional.rotate": [[274, null]], "nn.functional.scaled_dot_product_attention": [[231, null]], "nn.functional.selu": [[226, null]], "nn.functional.sigmoid": [[227, null]], "nn.functional.softmax": [[228, null]], "nn.functional.tanh": [[229, null]], "nn.functional.unfold": [[236, null]], "nn.init.constant": [[284, null]], "nn.init.kaiming_normal": [[286, null]], "nn.init.kaiming_uniform": [[287, null]], "nn.init.normal": [[288, null]], "nn.init.uniform": [[289, null]], "nn.init.xavier_normal": [[290, null]], "nn.init.xavier_uniform": [[291, null]], "optim.ASGD": [[376, null]], "optim.Adadelta": [[377, null]], "optim.Adagrad": [[378, null]], "optim.Adam": [[379, null]], "optim.AdamW": [[380, null]], "optim.Adamax": [[381, null]], "optim.NAdam": [[382, null]], "optim.Optimizer": [[364, null]], "optim.RAdam": [[383, null]], "optim.RMSprop": [[384, null]], "optim.Rprop": [[385, null]], "optim.SGD": [[386, null]], "optim.lr_scheduler": [[365, null]], "pvt_huge": [[182, null]], "pvt_large": [[183, null]], "pvt_medium": [[184, null]], "pvt_small": [[185, null]], "pvt_tiny": [[186, null]], "pvt_v2_b0": [[187, null]], "pvt_v2_b1": [[188, null]], "pvt_v2_b2": [[189, null]], "pvt_v2_b2_li": [[190, null]], "pvt_v2_b3": [[191, null]], "pvt_v2_b4": [[192, null]], "pvt_v2_b5": [[193, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[196, null]], "swin_large": [[197, null]], "swin_small": [[198, null]], "swin_tiny": [[199, null]], "swin_v2_base": [[200, null]], "swin_v2_giant": [[201, null]], "swin_v2_huge": [[202, null]], "swin_v2_large": [[203, null]], "swin_v2_small": [[204, null]], "swin_v2_tiny": [[205, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[476, null]], "transforms.Compose": [[474, null]], "transforms.Normalize": [[477, null]], "transforms.RandomCrop": [[478, null]], "transforms.RandomGrayscale": [[479, null]], "transforms.RandomHorizontalFlip": [[480, null]], "transforms.RandomRotation": [[481, null]], "transforms.RandomVerticalFlip": [[482, null]], "transforms.Resize": [[483, null]], "transforms.ToTensor": [[475, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[207, null]], "vit_huge": [[208, null]], "vit_large": [[209, null]], "vit_small": [[210, null]], "vit_tiny": [[211, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/crossvit/CrossViT", "models/transformer/crossvit/crossvit_15", "models/transformer/crossvit/crossvit_15_dagger", "models/transformer/crossvit/crossvit_18", "models/transformer/crossvit/crossvit_18_dagger", "models/transformer/crossvit/crossvit_9", "models/transformer/crossvit/crossvit_9_dagger", "models/transformer/crossvit/crossvit_base", "models/transformer/crossvit/crossvit_small", "models/transformer/crossvit/crossvit_tiny", "models/transformer/cvt/CvT", "models/transformer/cvt/cvt_13", "models/transformer/cvt/cvt_21", "models/transformer/cvt/cvt_w24", "models/transformer/index", "models/transformer/maxvit/MaxViT", "models/transformer/maxvit/maxvit_base", "models/transformer/maxvit/maxvit_large", "models/transformer/maxvit/maxvit_small", "models/transformer/maxvit/maxvit_tiny", "models/transformer/maxvit/maxvit_xlarge", "models/transformer/pvt/PVT", "models/transformer/pvt/PVT_V2", "models/transformer/pvt/pvt_huge", "models/transformer/pvt/pvt_large", "models/transformer/pvt/pvt_medium", "models/transformer/pvt/pvt_small", "models/transformer/pvt/pvt_tiny", "models/transformer/pvt/pvt_v2_b0", "models/transformer/pvt/pvt_v2_b1", "models/transformer/pvt/pvt_v2_b2", "models/transformer/pvt/pvt_v2_b2_li", "models/transformer/pvt/pvt_v2_b3", "models/transformer/pvt/pvt_v2_b4", "models/transformer/pvt/pvt_v2_b5", "models/transformer/swin/SwinTransformer", "models/transformer/swin/SwinTransformer_V2", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/swin/swin_v2_base", "models/transformer/swin/swin_v2_giant", "models/transformer/swin/swin_v2_huge", "models/transformer/swin/swin_v2_large", "models/transformer/swin/swin_v2_small", "models/transformer/swin/swin_v2_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/crossvit/CrossViT.rst", "models/transformer/crossvit/crossvit_15.rst", "models/transformer/crossvit/crossvit_15_dagger.rst", "models/transformer/crossvit/crossvit_18.rst", "models/transformer/crossvit/crossvit_18_dagger.rst", "models/transformer/crossvit/crossvit_9.rst", "models/transformer/crossvit/crossvit_9_dagger.rst", "models/transformer/crossvit/crossvit_base.rst", "models/transformer/crossvit/crossvit_small.rst", "models/transformer/crossvit/crossvit_tiny.rst", "models/transformer/cvt/CvT.rst", "models/transformer/cvt/cvt_13.rst", "models/transformer/cvt/cvt_21.rst", "models/transformer/cvt/cvt_w24.rst", "models/transformer/index.rst", "models/transformer/maxvit/MaxViT.rst", "models/transformer/maxvit/maxvit_base.rst", "models/transformer/maxvit/maxvit_large.rst", "models/transformer/maxvit/maxvit_small.rst", "models/transformer/maxvit/maxvit_tiny.rst", "models/transformer/maxvit/maxvit_xlarge.rst", "models/transformer/pvt/PVT.rst", "models/transformer/pvt/PVT_V2.rst", "models/transformer/pvt/pvt_huge.rst", "models/transformer/pvt/pvt_large.rst", "models/transformer/pvt/pvt_medium.rst", "models/transformer/pvt/pvt_small.rst", "models/transformer/pvt/pvt_tiny.rst", "models/transformer/pvt/pvt_v2_b0.rst", "models/transformer/pvt/pvt_v2_b1.rst", "models/transformer/pvt/pvt_v2_b2.rst", "models/transformer/pvt/pvt_v2_b2_li.rst", "models/transformer/pvt/pvt_v2_b3.rst", "models/transformer/pvt/pvt_v2_b4.rst", "models/transformer/pvt/pvt_v2_b5.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/SwinTransformer_V2.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/swin/swin_v2_base.rst", "models/transformer/swin/swin_v2_giant.rst", "models/transformer/swin/swin_v2_huge.rst", "models/transformer/swin/swin_v2_large.rst", "models/transformer/swin/swin_v2_small.rst", "models/transformer/swin/swin_v2_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[425, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[377, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[378, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[379, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[381, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[380, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[343, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[344, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[345, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[403, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[313, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[414, "lucid.arange", false]], "arccos() (in module lucid)": [[426, "lucid.arccos", false]], "arcsin() (in module lucid)": [[427, "lucid.arcsin", false]], "arctan() (in module lucid)": [[428, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[376, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[346, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[347, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[348, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[334, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[335, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[336, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[328, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[394, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[324, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[453, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[212, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[476, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[454, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[429, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[474, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[455, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[284, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[308, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[309, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[310, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[275, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[276, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[277, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[430, "lucid.cos", false]], "cosh() (in module lucid)": [[431, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[366, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[389, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[329, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[159, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[160, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[161, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[162, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[163, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[164, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[165, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[166, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[167, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[168, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[432, "lucid.cube", false]], "cvt (class in lucid.models)": [[169, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[170, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[171, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[172, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[367, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[278, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[279, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[280, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[415, "lucid.diag", false]], "div() (in module lucid)": [[404, "lucid.div", false]], "dot() (in module lucid)": [[405, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[314, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[316, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[317, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[241, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[318, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[319, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[315, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[292, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[353, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[271, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[416, "lucid.empty", false]], "empty_like() (in module lucid)": [[417, "lucid.empty_like", false]], "exp() (in module lucid)": [[433, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[368, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[418, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[456, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[293, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[337, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[390, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[294, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[295, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[457, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[251, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[330, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[325, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[406, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[338, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[339, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[340, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[286, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[287, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[370, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[259, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[341, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[296, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[326, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[419, "lucid.linspace", false]], "log() (in module lucid)": [[434, "lucid.log", false]], "log2() (in module lucid)": [[435, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[369, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[459, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[407, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[436, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[269, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[408, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[349, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[350, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[351, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[174, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[175, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[176, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[177, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[178, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[179, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[437, "lucid.mean", false]], "meshgrid() (in module lucid)": [[460, "lucid.meshgrid", false]], "min() (in module lucid)": [[438, "lucid.min", false]], "minimum() (in module lucid)": [[409, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[213, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[215, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[216, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[331, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[305, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[410, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[371, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[382, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[332, "lucid.nn.NLLLoss", false]], "no_grad (in module lucid)": [[392, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[288, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[477, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[388, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[420, "lucid.ones", false]], "ones_like() (in module lucid)": [[421, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[364, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[411, "lucid.outer", false]], "pad() (in module lucid)": [[461, "lucid.pad", false]], "parameter (class in lucid.nn)": [[214, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[217, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[218, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[412, "lucid.power", false]], "pvt (class in lucid.models)": [[180, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[182, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[183, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[184, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[185, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[186, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[181, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[187, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[188, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[189, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[190, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[191, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[192, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[193, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[383, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[396, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[397, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[398, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[478, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[479, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[480, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[481, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[482, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[462, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[321, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[439, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[372, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[393, "lucid.register_model", false]], "relu (class in lucid.nn)": [[297, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[298, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[463, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[464, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[483, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[384, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[465, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[385, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[306, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[399, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[282, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[299, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[281, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[219, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[386, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[300, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[440, "lucid.sign", false]], "sin() (in module lucid)": [[441, "lucid.sin", false]], "sinh() (in module lucid)": [[442, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[301, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[466, "lucid.split", false]], "sqrt() (in module lucid)": [[443, "lucid.sqrt", false]], "square() (in module lucid)": [[444, "lucid.square", false]], "squeeze() (in module lucid)": [[467, "lucid.squeeze", false]], "stack() (in module lucid)": [[468, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[373, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[413, "lucid.sub", false]], "sum() (in module lucid)": [[445, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[446, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[196, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[197, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[198, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[199, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[200, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[201, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[202, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[203, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[204, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[205, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[194, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[195, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[302, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[447, "lucid.tan", false]], "tanh (class in lucid.nn)": [[303, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[448, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[229, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[402, "lucid.Tensor", false]], "tensor() (in module lucid)": [[452, "lucid.tensor", false]], "tile() (in module lucid)": [[469, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[475, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[449, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[355, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[356, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[357, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[358, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[359, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[450, "lucid.transpose", false]], "tril() (in module lucid)": [[470, "lucid.tril", false]], "triu() (in module lucid)": [[471, "lucid.triu", false]], "unfold (class in lucid.nn)": [[311, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[236, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[289, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[400, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[472, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[361, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[451, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[206, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[207, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[208, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[209, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[210, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[211, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[473, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[290, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[291, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[422, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[423, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[402, 1, 1, "", "Tensor"], [425, 2, 1, "", "abs"], [403, 2, 1, "", "add"], [414, 2, 1, "", "arange"], [426, 2, 1, "", "arccos"], [427, 2, 1, "", "arcsin"], [428, 2, 1, "", "arctan"], [453, 2, 1, "", "broadcast_to"], [454, 2, 1, "", "chunk"], [429, 2, 1, "", "clip"], [455, 2, 1, "", "concatenate"], [430, 2, 1, "", "cos"], [431, 2, 1, "", "cosh"], [389, 2, 1, "", "count_flops"], [432, 2, 1, "", "cube"], [415, 2, 1, "", "diag"], [404, 2, 1, "", "div"], [405, 2, 1, "", "dot"], [416, 2, 1, "", "empty"], [417, 2, 1, "", "empty_like"], [433, 2, 1, "", "exp"], [418, 2, 1, "", "eye"], [456, 2, 1, "", "flatten"], [390, 2, 1, "", "grad_enabled"], [457, 2, 1, "", "hstack"], [406, 2, 1, "", "inner"], [419, 2, 1, "", "linspace"], [434, 2, 1, "", "log"], [435, 2, 1, "", "log2"], [459, 2, 1, "", "masked_fill"], [407, 2, 1, "", "matmul"], [436, 2, 1, "", "max"], [408, 2, 1, "", "maximum"], [437, 2, 1, "", "mean"], [460, 2, 1, "", "meshgrid"], [438, 2, 1, "", "min"], [409, 2, 1, "", "minimum"], [410, 2, 1, "", "multiply"], [392, 3, 1, "", "no_grad"], [420, 2, 1, "", "ones"], [421, 2, 1, "", "ones_like"], [411, 2, 1, "", "outer"], [461, 2, 1, "", "pad"], [412, 2, 1, "", "power"], [462, 2, 1, "", "ravel"], [439, 2, 1, "", "reciprocal"], [393, 2, 1, "", "register_model"], [463, 2, 1, "", "repeat"], [464, 2, 1, "", "reshape"], [465, 2, 1, "", "roll"], [440, 2, 1, "", "sign"], [441, 2, 1, "", "sin"], [442, 2, 1, "", "sinh"], [466, 2, 1, "", "split"], [443, 2, 1, "", "sqrt"], [444, 2, 1, "", "square"], [467, 2, 1, "", "squeeze"], [468, 2, 1, "", "stack"], [413, 2, 1, "", "sub"], [445, 2, 1, "", "sum"], [446, 2, 1, "", "swapaxes"], [447, 2, 1, "", "tan"], [448, 2, 1, "", "tanh"], [452, 2, 1, "", "tensor"], [469, 2, 1, "", "tile"], [449, 2, 1, "", "trace"], [450, 2, 1, "", "transpose"], [470, 2, 1, "", "tril"], [471, 2, 1, "", "triu"], [472, 2, 1, "", "unsqueeze"], [451, 2, 1, "", "var"], [473, 2, 1, "", "vstack"], [422, 2, 1, "", "zeros"], [423, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [159, 1, 1, "", "CrossViT"], [169, 1, 1, "", "CvT"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [174, 1, 1, "", "MaxViT"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [180, 1, 1, "", "PVT"], [181, 1, 1, "", "PVT_V2"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [194, 1, 1, "", "SwinTransformer"], [195, 1, 1, "", "SwinTransformer_V2"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [206, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [160, 2, 1, "", "crossvit_15"], [161, 2, 1, "", "crossvit_15_dagger"], [162, 2, 1, "", "crossvit_18"], [163, 2, 1, "", "crossvit_18_dagger"], [164, 2, 1, "", "crossvit_9"], [165, 2, 1, "", "crossvit_9_dagger"], [166, 2, 1, "", "crossvit_base"], [167, 2, 1, "", "crossvit_small"], [168, 2, 1, "", "crossvit_tiny"], [170, 2, 1, "", "cvt_13"], [171, 2, 1, "", "cvt_21"], [172, 2, 1, "", "cvt_w24"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [175, 2, 1, "", "maxvit_base"], [176, 2, 1, "", "maxvit_large"], [177, 2, 1, "", "maxvit_small"], [178, 2, 1, "", "maxvit_tiny"], [179, 2, 1, "", "maxvit_xlarge"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [182, 2, 1, "", "pvt_huge"], [183, 2, 1, "", "pvt_large"], [184, 2, 1, "", "pvt_medium"], [185, 2, 1, "", "pvt_small"], [186, 2, 1, "", "pvt_tiny"], [187, 2, 1, "", "pvt_v2_b0"], [188, 2, 1, "", "pvt_v2_b1"], [189, 2, 1, "", "pvt_v2_b2"], [190, 2, 1, "", "pvt_v2_b2_li"], [191, 2, 1, "", "pvt_v2_b3"], [192, 2, 1, "", "pvt_v2_b4"], [193, 2, 1, "", "pvt_v2_b5"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [196, 2, 1, "", "swin_base"], [197, 2, 1, "", "swin_large"], [198, 2, 1, "", "swin_small"], [199, 2, 1, "", "swin_tiny"], [200, 2, 1, "", "swin_v2_base"], [201, 2, 1, "", "swin_v2_giant"], [202, 2, 1, "", "swin_v2_huge"], [203, 2, 1, "", "swin_v2_large"], [204, 2, 1, "", "swin_v2_small"], [205, 2, 1, "", "swin_v2_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [207, 2, 1, "", "vit_base"], [208, 2, 1, "", "vit_huge"], [209, 2, 1, "", "vit_large"], [210, 2, 1, "", "vit_small"], [211, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[343, 1, 1, "", "AdaptiveAvgPool1d"], [344, 1, 1, "", "AdaptiveAvgPool2d"], [345, 1, 1, "", "AdaptiveAvgPool3d"], [313, 1, 1, "", "AlphaDropout"], [346, 1, 1, "", "AvgPool1d"], [347, 1, 1, "", "AvgPool2d"], [348, 1, 1, "", "AvgPool3d"], [328, 1, 1, "", "BCELoss"], [334, 1, 1, "", "BatchNorm1d"], [335, 1, 1, "", "BatchNorm2d"], [336, 1, 1, "", "BatchNorm3d"], [324, 1, 1, "", "Bilinear"], [212, 1, 1, "", "Buffer"], [308, 1, 1, "", "Conv1d"], [309, 1, 1, "", "Conv2d"], [310, 1, 1, "", "Conv3d"], [275, 1, 1, "", "ConvBNReLU1d"], [276, 1, 1, "", "ConvBNReLU2d"], [277, 1, 1, "", "ConvBNReLU3d"], [329, 1, 1, "", "CrossEntropyLoss"], [278, 1, 1, "", "DepthSeparableConv1d"], [279, 1, 1, "", "DepthSeparableConv2d"], [280, 1, 1, "", "DepthSeparableConv3d"], [314, 1, 1, "", "DropBlock"], [315, 1, 1, "", "DropPath"], [316, 1, 1, "", "Dropout"], [317, 1, 1, "", "Dropout1d"], [318, 1, 1, "", "Dropout2d"], [319, 1, 1, "", "Dropout3d"], [292, 1, 1, "", "ELU"], [353, 1, 1, "", "Embedding"], [293, 1, 1, "", "GELU"], [337, 1, 1, "", "GlobalResponseNorm"], [294, 1, 1, "", "HardSigmoid"], [295, 1, 1, "", "HardSwish"], [330, 1, 1, "", "HuberLoss"], [325, 1, 1, "", "Identity"], [338, 1, 1, "", "InstanceNorm1d"], [339, 1, 1, "", "InstanceNorm2d"], [340, 1, 1, "", "InstanceNorm3d"], [341, 1, 1, "", "LayerNorm"], [296, 1, 1, "", "LeakyReLU"], [326, 1, 1, "", "Linear"], [331, 1, 1, "", "MSELoss"], [349, 1, 1, "", "MaxPool1d"], [350, 1, 1, "", "MaxPool2d"], [351, 1, 1, "", "MaxPool3d"], [213, 1, 1, "", "Module"], [215, 1, 1, "", "ModuleDict"], [216, 1, 1, "", "ModuleList"], [305, 1, 1, "", "MultiHeadAttention"], [332, 1, 1, "", "NLLLoss"], [214, 1, 1, "", "Parameter"], [217, 1, 1, "", "ParameterDict"], [218, 1, 1, "", "ParameterList"], [297, 1, 1, "", "ReLU"], [298, 1, 1, "", "ReLU6"], [321, 1, 1, "", "Rearrange"], [299, 1, 1, "", "SELU"], [281, 1, 1, "", "SEModule"], [306, 1, 1, "", "ScaledDotProductAttention"], [282, 1, 1, "", "SelectiveKernel"], [219, 1, 1, "", "Sequential"], [300, 1, 1, "", "Sigmoid"], [301, 1, 1, "", "Softmax"], [302, 1, 1, "", "Swish"], [303, 1, 1, "", "Tanh"], [355, 1, 1, "", "Transformer"], [356, 1, 1, "", "TransformerDecoder"], [357, 1, 1, "", "TransformerDecoderLayer"], [358, 1, 1, "", "TransformerEncoder"], [359, 1, 1, "", "TransformerEncoderLayer"], [311, 1, 1, "", "Unfold"], [361, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[261, 2, 1, "", "adaptive_avg_pool1d"], [262, 2, 1, "", "adaptive_avg_pool2d"], [263, 2, 1, "", "adaptive_avg_pool3d"], [237, 2, 1, "", "alpha_dropout"], [264, 2, 1, "", "avg_pool1d"], [265, 2, 1, "", "avg_pool2d"], [266, 2, 1, "", "avg_pool3d"], [255, 2, 1, "", "batch_norm"], [246, 2, 1, "", "bilinear"], [249, 2, 1, "", "binary_cross_entropy"], [232, 2, 1, "", "conv1d"], [233, 2, 1, "", "conv2d"], [234, 2, 1, "", "conv3d"], [250, 2, 1, "", "cross_entropy"], [238, 2, 1, "", "drop_block"], [239, 2, 1, "", "drop_path"], [240, 2, 1, "", "dropout"], [241, 2, 1, "", "dropout1d"], [242, 2, 1, "", "dropout2d"], [243, 2, 1, "", "dropout3d"], [221, 2, 1, "", "elu"], [271, 2, 1, "", "embedding"], [222, 2, 1, "", "gelu"], [256, 2, 1, "", "global_response_norm"], [251, 2, 1, "", "huber_loss"], [258, 2, 1, "", "instance_norm"], [273, 2, 1, "", "interpolate"], [259, 2, 1, "", "layer_norm"], [224, 2, 1, "", "leaky_relu"], [248, 2, 1, "", "linear"], [268, 2, 1, "", "max_pool1d"], [269, 2, 1, "", "max_pool2d"], [270, 2, 1, "", "max_pool3d"], [253, 2, 1, "", "mse_loss"], [254, 2, 1, "", "nll_loss"], [260, 2, 1, "", "normalize"], [225, 2, 1, "", "relu"], [274, 2, 1, "", "rotate"], [231, 2, 1, "", "scaled_dot_product_attention"], [226, 2, 1, "", "selu"], [227, 2, 1, "", "sigmoid"], [228, 2, 1, "", "softmax"], [229, 2, 1, "", "tanh"], [236, 2, 1, "", "unfold"]], "lucid.nn.init": [[284, 2, 1, "", "constant"], [286, 2, 1, "", "kaiming_normal"], [287, 2, 1, "", "kaiming_uniform"], [288, 2, 1, "", "normal"], [289, 2, 1, "", "uniform"], [290, 2, 1, "", "xavier_normal"], [291, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[376, 1, 1, "", "ASGD"], [377, 1, 1, "", "Adadelta"], [378, 1, 1, "", "Adagrad"], [379, 1, 1, "", "Adam"], [380, 1, 1, "", "AdamW"], [381, 1, 1, "", "Adamax"], [382, 1, 1, "", "NAdam"], [364, 1, 1, "", "Optimizer"], [383, 1, 1, "", "RAdam"], [384, 1, 1, "", "RMSprop"], [385, 1, 1, "", "Rprop"], [386, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[366, 1, 1, "", "CosineAnnealingLR"], [367, 1, 1, "", "CyclicLR"], [368, 1, 1, "", "ExponentialLR"], [369, 1, 1, "", "LRScheduler"], [370, 1, 1, "", "LambdaLR"], [371, 1, 1, "", "MultiStepLR"], [372, 1, 1, "", "ReduceLROnPlateau"], [373, 1, 1, "", "StepLR"]], "lucid.random": [[394, 2, 1, "", "bernoulli"], [396, 2, 1, "", "rand"], [397, 2, 1, "", "randint"], [398, 2, 1, "", "randn"], [399, 2, 1, "", "seed"], [400, 2, 1, "", "uniform"]], "lucid.transforms": [[476, 1, 1, "", "CenterCrop"], [474, 1, 1, "", "Compose"], [477, 1, 1, "", "Normalize"], [478, 1, 1, "", "RandomCrop"], [479, 1, 1, "", "RandomGrayscale"], [480, 1, 1, "", "RandomHorizontalFlip"], [481, 1, 1, "", "RandomRotation"], [482, 1, 1, "", "RandomVerticalFlip"], [483, 1, 1, "", "Resize"], [475, 1, 1, "", "ToTensor"]], "lucid.types": [[388, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 85, 96, 97, 102, 104, 105, 106, 107, 108, 109, 155, 156, 159, 173, 174, 183, 206, 210, 212, 213, 214, 215, 217, 218, 219, 231, 261, 262, 263, 282, 306, 311, 329, 332, 343, 344, 345, 346, 349, 350, 355, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 388, 391, 393, 402, 407, 415, 437, 445, 446, 449, 451, 452, 465, 467, 475, 477, 485], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 85, 86, 94, 130, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 182, 183, 184, 185, 186, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485], "000": [5, 6, 7, 8, 157, 158, 173, 188, 201, 416, 417], "0000": [329, 330, 332], "0001": [372, 376], "000e": [416, 417], "001": [367, 376, 379, 380, 382, 383, 386], "002": [381, 382], "003": [173, 185], "004": 382, "005": 296, "006": 367, "008": [85, 94, 161, 173], "00808": 85, "009": [173, 188], "00b": 85, "01": [15, 224, 296, 364, 366, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386], "01051757": 398, "011": [37, 85], "013": [57, 85], "014": [168, 173], "016": [85, 113], "01697": 173, "01b": [85, 173], "0205": 329, "0217": 329, "0227": 329, "024": [85, 100, 135, 173, 179], "025": [166, 173], "026": [85, 124], "028": [85, 129], "0299": 329, "02b": 173, "032": [69, 85, 120], "03545": 85, "03b": 85, "044715": [222, 293], "0450": 329, "0451": 329, "046": [67, 85], "047": [85, 147], "04719755": 426, "0474259": 227, "048": [85, 137, 173, 185], "0480": 329, "04861": 85, "04b": 85, "05": [255, 258, 259, 275, 276, 277, 296, 334, 335, 336, 338, 339, 340, 341, 355, 357, 359], "050": [173, 210], "0507": [226, 299], "05m": 85, "06": [39, 77, 256, 337, 377, 385], "066": [51, 85], "069": [85, 107, 118], "06m": 85, "07": [238, 249, 250, 314, 328, 329], "070": [85, 102], "0700": 329, "0706508": 303, "071": [85, 113], "072": [173, 192], "0721": 329, "073": [85, 143], "07722396": 302, "0794": 332, "08": [372, 379, 380, 381, 382, 383, 384], "0802": 332, "081": [173, 178], "083": [81, 85], "08333333": 24, "085537": 433, "088": [85, 135], "08955": 85, "08b": [85, 173], "08m": 85, "0900": [301, 329], "096": [33, 85, 151], "0986": [228, 301], "09861229": 434, "09883": 173, "0992": 329, "09b": 85, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "10": [0, 1, 2, 3, 5, 6, 7, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 182, 215, 216, 219, 233, 234, 246, 248, 261, 305, 308, 309, 310, 318, 319, 324, 326, 335, 336, 339, 343, 347, 348, 350, 355, 356, 357, 358, 359, 365, 368, 370, 371, 372, 378, 393, 397, 400, 401, 404, 407, 410, 411, 419, 428, 445, 476, 478, 479, 481], "100": [6, 15, 29, 69, 70, 71, 72, 85, 146, 147, 148, 149, 159, 366, 393, 485], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "1000000": 376, "1001": [85, 113, 329], "1003": 329, "1007": 85, "10096": 85, "101": [85, 103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138], "10106": 85, "1014": 226, "102": [85, 118], "1024": [15, 33, 38, 158, 172, 321], "1025": [216, 219], "1026": [216, 219], "1027": [216, 219], "10499": 227, "105": [166, 173], "1050": 300, "1054": 332, "1056": [216, 219], "10590": 85, "106": [173, 204], "107": [38, 85], "108": [70, 85], "1097": 85, "11": [85, 102, 116, 133, 145, 146, 246, 308, 309, 310, 318, 324, 335, 336, 339, 347, 348, 350, 407, 476, 477, 478, 479, 481], "110": [85, 108], "1105": 85, "1109": 85, "111": [63, 85], "1111": 328, "112": [85, 96, 109], "1134": 246, "114b": 479, "119": [173, 246], "1192": [227, 228, 301], "12": [19, 24, 35, 36, 54, 55, 56, 57, 58, 64, 85, 87, 88, 157, 158, 159, 166, 172, 173, 182, 186, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 217, 246, 260, 263, 308, 309, 310, 318, 319, 324, 335, 336, 339, 345, 347, 348, 350, 407, 411, 412, 476, 478, 479, 481], "120": [69, 85, 86, 89, 96, 97], "12000": [157, 158], "121": [54, 55, 85], "12122": 173, "123": [286, 287, 288, 289, 290, 291, 399, 400], "124": [36, 85, 286, 287, 290, 291], "125": 348, "1250": 330, "1251": 85, "1258": 85, "126": [85, 121], "128": [15, 30, 33, 39, 44, 67, 83, 85, 112, 121, 122, 145, 164, 165, 174, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 219, 282, 474, 485], "1280": [36, 92], "128x128": [474, 485], "12b": 85, "13": [74, 85, 145, 147, 170, 173, 246, 308, 309, 310, 324, 336, 347, 348, 350, 407, 476, 478, 479, 481], "1314": 85, "132": [85, 146], "1324": 85, "133": [85, 147], "136": [71, 85, 102], "138": [85, 148], "13b": 173, "13k": 85, "14": [32, 33, 34, 56, 85, 105, 173, 175, 176, 179, 188, 308, 309, 310, 318, 319, 324, 336, 347, 348, 350, 407, 411, 476, 478, 479, 481], "14030": 173, "1409": 85, "143": [85, 149], "144": 97, "145": 246, "148": [43, 85], "14899": 173, "149": [56, 85, 113], "14b": 85, "15": [0, 50, 85, 160, 161, 173, 246, 308, 309, 310, 324, 336, 347, 348, 350, 407, 411, 449, 476, 478, 479, 481, 485], "1513": 332, "152": [85, 101, 115, 132], "1536": [34, 35, 37, 179], "155": 407, "1556": 85, "156": [78, 85], "157": [34, 85], "1588": [222, 293], "15b": 173, "15m": 85, "16": [54, 55, 85, 86, 89, 92, 96, 97, 124, 130, 145, 148, 159, 171, 172, 173, 180, 196, 200, 206, 207, 208, 209, 210, 211, 216, 217, 219, 231, 262, 263, 275, 276, 277, 281, 282, 305, 306, 308, 309, 310, 318, 319, 321, 324, 335, 336, 344, 345, 347, 348, 350, 355, 356, 357, 358, 359, 363, 407, 411, 443, 476, 478, 479, 481], "160": [85, 96, 114, 187], "16227766": 25, "16425": 332, "1643": 328, "166": 407, "167": [85, 295], "169": [54, 56, 85, 173], "16b": 85, "16x16": 173, "17": [85, 107, 173, 308, 309, 310, 324, 336, 348, 406, 476, 478, 479, 481], "170": 246, "1704": 85, "171": [173, 176], "174": [31, 85], "17520119": 442, "177": [85, 126], "17b": 85, "18": [85, 88, 116, 133, 141, 162, 163, 173, 184, 191, 196, 197, 198, 200, 201, 202, 203, 204, 308, 309, 310, 318, 324, 336, 348, 410, 411, 476, 478, 479, 481], "1800": 329, "182": 85, "184": 96, "187": [173, 176], "18877099": 302, "189": 85, "19": [65, 85, 145, 149, 170, 173, 233, 234, 246, 309, 310, 336, 405, 407], "192": [31, 32, 34, 35, 37, 39, 40, 77, 85, 87, 88, 115, 159, 160, 161, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 186, 197], "194": [85, 124], "196": [53, 85, 172, 173, 197, 203], "1966": [228, 300, 301], "197": [42, 49, 85], "198": [85, 96], "199": [173, 208], "1998": [85, 329], "19b": 85, "1_53": 85, "1d": [232, 261, 264, 268, 275, 278, 311, 334, 338, 343, 400, 407, 415, 449, 460, 461, 462, 463, 469], "1e": [19, 24, 39, 77, 187, 188, 189, 191, 192, 193, 238, 249, 250, 255, 256, 258, 259, 260, 275, 276, 277, 314, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 355, 357, 359, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "1e6": 376, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 85, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 155, 159, 161, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 363, 366, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "20": [0, 5, 6, 7, 8, 57, 85, 172, 215, 216, 219, 309, 310, 318, 336, 356, 357, 365, 369, 371, 373, 411, 433], "200": [85, 96, 106, 117], "2004": 85, "201": [57, 85, 106], "2011": 281, "2012": 85, "2014": 85, "2015": 85, "2016": 85, "2017": [85, 173, 355], "2018": [85, 281], "2019": 85, "2020": [85, 173], "2021": [85, 173], "2022": [85, 173], "2023": [85, 281], "2024": 85, "2039": 332, "204": 310, "2048": [36, 37, 38, 156, 355, 357, 359], "209": [161, 173], "20b": 85, "21": [71, 85, 119, 134, 171, 173, 217, 246, 309, 310, 336, 411], "210": [72, 85], "2102": 173, "2103": 173, "211": 407, "2111": 173, "213": [158, 173], "21841": [48, 53], "21m": 85, "22": [83, 85, 151, 173, 190, 210, 246, 309, 310, 318, 336, 405, 407], "2201": 85, "2204": 173, "221": [72, 85], "2231": [329, 332], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "2247": [334, 335, 336, 338, 339, 340, 341], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 407, "22752314": 398, "2278": 85, "22b": 85, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 173, 185, 309, 310, 336], "2301": 85, "232": [85, 94, 138, 166, 173], "2324": [85, 299], "233": [47, 85], "234": [286, 287, 288, 289, 290, 291, 400], "235": [64, 85], "237": [158, 173], "238": [85, 97, 173, 191], "23840584": 302, "23b": 85, "24": [54, 55, 92, 96, 97, 106, 110, 117, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 246, 262, 309, 310, 318, 336, 344, 411], "240": [32, 47, 85, 96, 97, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168], "240x240": 59, "2424": [228, 301], "2447": 301, "246": [85, 87], "24d": 110, "25": [0, 85, 110, 120, 129, 141, 173, 178, 189, 227, 239, 300, 310, 331, 336, 347, 348, 404, 419, 439, 451], "2500": [328, 330, 332], "2512": 292, "2547": 299, "256": [30, 33, 36, 38, 39, 112, 145, 159, 164, 165, 174, 178, 180, 181, 182, 187], "258": [173, 198], "25m": 85, "26": [85, 107, 167, 173, 217, 248, 310, 326, 336, 411], "260": 85, "260x260": 59, "26325684": 398, "264": [58, 85], "265": 85, "266": [85, 163, 173], "2689": [228, 300, 301], "26894142": 302, "269": [85, 108, 118], "27": [31, 85, 109, 139, 160, 173, 183, 192, 246, 308, 310, 336, 432], "271": [162, 173], "272": [85, 128, 167, 173], "274": [85, 104, 144], "276": [286, 287, 290, 291], "277": [35, 85, 172, 173], "27b": 173, "28": [35, 36, 44, 52, 81, 85, 87, 88, 135, 161, 173, 199, 205, 246, 310, 411], "280": [51, 85], "286": [173, 182], "288": [85, 97, 106, 173, 199], "289": [48, 61, 85], "28x28": [7, 8, 87, 88], "29": [85, 144, 310], "293": 85, "296": [164, 173], "299": [85, 150], "299r": 479, "299x299": [75, 76, 83, 84], "29b": 173, "2_i": [338, 339, 340], "2c": 367, "2d": [233, 242, 262, 265, 269, 276, 279, 335, 339, 344, 407, 415, 418, 446, 449, 456, 460, 461, 463, 469, 481], "2e": 381, "2nd": [28, 152], "2x": 111, "2x2": [236, 476, 478], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 204, 205, 206, 212, 213, 214, 216, 217, 218, 219, 222, 227, 228, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483], "30": [66, 75, 85, 108, 111, 118, 216, 274, 310, 367, 371, 372, 481], "300": 85, "300x300": 59, "301": [35, 85], "302": [70, 85], "3026": 332, "304": [173, 177, 209], "3072": [38, 206], "308": [173, 203], "30823025": 302, "31": [171, 173, 246, 310, 407], "310": [416, 417], "31622777": 25, "319": 85, "31b": 85, "32": [15, 30, 54, 56, 57, 85, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 159, 174, 187, 196, 200, 216, 219, 246, 248, 262, 275, 276, 277, 281, 282, 309, 310, 321, 326, 344, 363, 388, 405, 406, 411], "320": [85, 107, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193], "321": [286, 287, 290, 291], "326": [85, 131, 173, 209], "32b": [85, 173], "32m": 85, "32x16d": 85, "32x32": [5, 6, 86, 89], "32x32d": 85, "32x4d": [85, 136, 139, 144], "32x8d": [85, 137], "33": [58, 85, 216, 219, 248, 310, 326], "330": [32, 85], "3333": 260, "33333333": 24, "336": [37, 42, 85, 127, 146], "337": [58, 85], "33b": 85, "34": [85, 119, 134, 142, 216, 219, 246, 310, 407, 411], "342": [286, 287, 290, 291], "344": [65, 85], "345": [286, 287, 288, 289, 290, 291, 400], "349": [173, 205], "34b": 85, "35": [84, 85, 216, 219, 310], "350": [53, 85], "352": [74, 85], "354": [173, 199], "355": [68, 85], "3567": [328, 332], "357": [85, 148, 153], "359": [173, 183], "35b": [85, 173], "36": [85, 106, 115, 117, 132, 173, 310], "362": [173, 189], "364": 85, "367": 85, "3679": [221, 226, 292], "368": [85, 141, 143], "36b": 173, "36th": 85, "37": [85, 101, 308], "370": [63, 85], "372": 246, "375": 331, "3750": 330, "37754067": 302, "378": [85, 88], "37b": 173, "38": 173, "380": 85, "380x380": 59, "383": [173, 179], "38344152": 396, "384": [31, 32, 34, 35, 37, 39, 40, 77, 159, 160, 161, 166, 167, 170, 171, 173, 175, 176, 177, 179], "38629436": 434, "389056": 433, "38b": 85, "38th": 85, "392": [75, 85, 172, 173], "393": [66, 74, 85], "3935": 292, "3965": 85, "3977": 85, "39b": 173, "39m": 85, "3d": [234, 243, 263, 266, 270, 277, 280, 310, 311, 336, 340, 345], "3x3": [85, 311, 401], "4": [0, 1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 85, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 155, 159, 164, 165, 166, 167, 168, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 217, 219, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 246, 248, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 372, 376, 379, 383, 384, 386, 391, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 421, 423, 429, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483], "40": [76, 85, 92, 96, 97, 111, 193, 371], "400": [45, 85, 89, 173, 200, 208], "4044": 328, "4076": 329, "408": [162, 173], "4096": [28, 152], "40b": 85, "40d": 111, "41": [173, 184], "41421356": 17, "415": 173, "416": [85, 118, 136, 173, 178, 211], "41666667": 24, "417": [85, 111], "41808962": 398, "419974": 229, "4199743": 303, "41b": 85, "42": [37, 38, 201, 246, 281, 401], "421": [286, 287, 290, 291], "423": [286, 287, 288, 289], "424": 173, "42718872": 25, "4278": 85, "4284": 85, "4286": [260, 328], "42b": [85, 173], "43": [67, 85, 162, 173, 405, 407], "431": [80, 85], "432": [66, 85], "4323": 292, "4375": 330, "43758721": 396, "43b": 85, "44": [85, 114, 126, 163, 173], "440": [71, 85], "4472": 260, "4472136": 19, "448": [68, 85, 162, 163], "4495": [336, 340], "45": [85, 142, 173, 191, 246, 274, 481], "4510": 85, "4520": 85, "4545": 313, "455": [85, 128], "456": 85, "456x456": 59, "457": [173, 186], "45b": 173, "46": [43, 85], "463": 85, "464": [41, 85, 111, 160, 173], "468": [85, 125], "46b": 85, "4700": 85, "4708": 85, "47112767": 428, "472": [85, 125, 158, 173], "476": [173, 197], "47b": [85, 173], "48": [54, 57, 58, 85, 97, 104, 108, 118, 136, 173, 197, 201, 202, 203, 248, 326], "480": [56, 85, 96, 170, 173], "481": [85, 96], "483": [85, 109], "48b": [85, 173], "48m": 85, "49": [80, 85, 131, 173, 198, 204], "492": [173, 184], "496": [52, 85], "4979": 292, "49b": 173, "49k": 85, "4s2x40d": [85, 111], "4x": 110, "4x4": 483, "5": [1, 2, 12, 13, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 85, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 155, 159, 160, 161, 173, 174, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 211, 213, 214, 215, 216, 217, 219, 222, 227, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 251, 253, 255, 258, 259, 261, 264, 265, 271, 273, 275, 276, 277, 282, 284, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 346, 347, 348, 350, 351, 355, 357, 359, 365, 367, 369, 371, 372, 373, 385, 391, 394, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 423, 425, 426, 427, 436, 437, 438, 439, 440, 445, 446, 449, 450, 451, 452, 457, 460, 464, 465, 466, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "50": [5, 6, 85, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 248, 326, 366, 385, 405, 407, 419, 479, 480, 482, 485], "5000": [156, 328, 330, 332], "504": [85, 95], "50_1s4x24d": 85, "50b": 85, "510": 85, "5108": 332, "512": [30, 33, 36, 38, 39, 84, 85, 99, 112, 116, 142, 156, 157, 159, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 305, 355, 356, 357, 358, 359], "516": [33, 85], "519": 85, "51b": [85, 173], "520": [78, 85], "52359878": 427, "528": [85, 160, 173], "528x528": 59, "52b": 85, "53": [32, 85, 246, 406], "530": [85, 125], "531": 173, "532": [173, 197], "536": [64, 85], "537": [85, 97], "543": [286, 287, 288, 289, 290, 291, 400], "54308063": 431, "544": [80, 85, 148, 157, 173], "545": 412, "5455": 313, "549": [85, 114], "54b": 85, "55": [70, 85, 173, 177, 183], "553": [164, 173, 190], "556": [173, 192], "557": [85, 120], "558": [37, 85], "559": [85, 139], "55b": 85, "560": [62, 85, 105], "563": [286, 287, 290, 291], "564": [173, 201], "567": [173, 207], "5672": 85, "568": [72, 85], "5683": 85, "569": [85, 137], "57": [85, 143, 246], "57079633": [426, 427], "5714": 260, "5720": 85, "5730": 85, "57366333": 399, "576": 97, "57b": 173, "582": 85, "584": [85, 157, 173], "5849625": 435, "586": [76, 85], "587g": 479, "589": [44, 85], "590": [85, 98], "591": [41, 85], "592": [85, 133, 165, 173], "5987": 85, "5995": 85, "5998": 173, "59b": 173, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 85, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 156, 159, 160, 161, 162, 163, 167, 170, 171, 173, 175, 176, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 217, 218, 232, 233, 234, 236, 238, 243, 246, 248, 256, 260, 261, 271, 287, 291, 294, 298, 308, 309, 310, 311, 314, 316, 317, 318, 319, 324, 326, 328, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 350, 351, 355, 356, 358, 377, 385, 391, 400, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 421, 423, 436, 437, 438, 445, 446, 449, 450, 451, 452, 454, 457, 463, 464, 465, 466, 470, 471, 473, 475, 476, 477, 478, 479, 481, 483], "60": [5, 6, 85, 115, 182], "600": [59, 85], "6008": 173, "600x600": 59, "6052": 332, "606": [173, 198], "6065": 292, "608": [36, 85, 153], "60b": 173, "61": [29, 85, 89], "6105": 85, "611": [85, 105], "6114": 85, "6124": [334, 335, 336, 338, 339, 340, 341], "617": [69, 85], "62": [85, 153, 157, 173, 192, 246], "622": [171, 173], "623": [50, 85], "626": [173, 175], "62686041": 442, "62b": 85, "630": 85, "632": [35, 85, 173, 208, 209], "6321": [221, 292], "63245553": 25, "635": [52, 85], "636": [61, 85], "63b": [85, 173], "64": [30, 39, 54, 58, 85, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 170, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 216, 219, 246, 281, 282, 388], "640": [48, 65, 85], "641": 85, "645": 85, "64589411": 396, "647": [85, 141], "648": [173, 184], "64b": 85, "64x4d": [85, 138], "654": [286, 287, 288, 289, 290, 291, 400], "656": [34, 85, 173, 207], "657": [173, 202, 286, 287, 290, 291], "6590": [228, 301], "65b": 85, "66": [68, 85, 132], "660": [48, 85], "664": [173, 210], "6652": 301, "666": [173, 187], "66666667": 24, "6667": [260, 328], "667": [85, 149], "668": [173, 202], "6682": 328, "669": [85, 117], "66b": [85, 173], "67": 407, "672": [85, 96, 119], "67326": 299, "6733": 226, "676": [85, 110], "677": 173, "678": [286, 287, 288, 289, 290, 291], "67b": [85, 173], "67m": 173, "688": [38, 85], "68811989": 398, "689": [85, 116], "68b": 85, "69314718": 434, "696": [85, 121, 171, 173, 191], "69b": 173, "7": [10, 13, 23, 38, 55, 62, 85, 145, 162, 163, 168, 173, 174, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 232, 233, 234, 236, 238, 243, 246, 248, 249, 250, 261, 271, 282, 293, 298, 299, 300, 303, 308, 309, 310, 311, 314, 318, 319, 324, 326, 328, 329, 331, 335, 336, 339, 340, 343, 347, 348, 350, 351, 394, 397, 400, 403, 405, 406, 407, 411, 413, 415, 419, 433, 437, 445, 446, 449, 450, 451, 466, 469, 470, 471, 475, 476, 477, 478, 479, 481, 483], "70": [7, 8, 85, 106], "7001": 329, "704": [58, 85, 126], "706": [85, 89, 173, 182], "70710678": [19, 441], "708": [45, 85], "70b": 85, "7132": 85, "7141": 85, "7147": 332, "715": [85, 99], "717": [46, 85, 173, 211], "7182818": 433, "71b": [85, 173], "72": [92, 96, 97], "726791": 85, "72b": 85, "73": 85, "731": [173, 204], "7311": [228, 300, 301], "734": [173, 179], "739": [83, 85], "73b": [85, 173], "74": 407, "745": [173, 203], "748": [79, 85], "74b": 173, "75": [248, 326, 331, 376, 419], "755": [85, 101], "757": [173, 177], "7581": 226, "75b": 85, "760": [85, 104, 144, 173, 187], "76159416": [302, 448], "7616": [229, 303], "76219569": 431, "7635": 299, "767": [42, 85], "768": [31, 32, 34, 35, 37, 39, 40, 77, 166, 172, 173, 175, 176, 177, 179, 182, 196, 206], "770": [36, 85], "772": 412, "774": [85, 100], "776": [165, 173, 175], "778": [85, 133], "77b": 85, "78": [85, 122], "78357324": 398, "784": 15, "78539816": 428, "789": 85, "78b": 85, "790": [34, 85], "791": [85, 127], "79172504": 396, "792": [85, 124], "795": [62, 85], "796": [173, 202], "797": [85, 119], "79b": 85, "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 85, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 159, 164, 165, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 200, 216, 217, 219, 231, 232, 233, 234, 236, 238, 243, 246, 248, 249, 260, 261, 262, 263, 271, 275, 276, 277, 281, 293, 294, 299, 300, 303, 305, 306, 308, 309, 310, 311, 314, 316, 317, 318, 319, 324, 326, 328, 331, 335, 336, 339, 340, 343, 344, 345, 347, 348, 350, 351, 355, 356, 357, 358, 359, 372, 379, 380, 381, 382, 383, 384, 394, 397, 404, 405, 406, 407, 411, 412, 414, 415, 432, 437, 445, 446, 449, 450, 451, 466, 470, 471, 475, 476, 477, 478, 479, 481, 483], "80": [5, 6, 7, 8, 96], "800": [46, 50, 85, 168, 173], "8005": 329, "808": [85, 115], "80b": [85, 173], "817": [75, 85], "818": 85, "8182": 313, "81b": [85, 173], "82": [33, 85, 173, 193, 246], "821": [85, 132], "82b": 85, "83": [85, 128, 173], "832": [81, 85], "833": 85, "83b": 173, "84": [86, 88, 89], "840": [29, 49, 79, 85], "8413": [222, 293], "842": [173, 205], "847": [84, 85], "848": [85, 132, 147, 173, 183], "849": 85, "84b": 85, "856": [55, 85, 167, 173, 189], "85772238": 302, "8584": 299, "85b": [85, 173], "86": [79, 85, 173, 207], "862": [85, 151], "863": [85, 146], "864": [85, 98, 117], "868": [85, 134], "869": [173, 201], "87": [173, 196, 200], "872": [85, 95, 110, 131], "876": [286, 287, 290, 291, 400], "87m": 85, "88": [41, 46, 85, 97, 127, 138], "880": [173, 176], "8808": [228, 300, 301], "882": [173, 193], "884": [43, 85], "886": [85, 121], "887": 412, "88m": 85, "891773": 396, "893": 85, "8944": 260, "89442719": 19, "895": [85, 142], "896": [85, 139], "89b": 85, "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 85, 99, 164, 165, 173, 233, 236, 238, 246, 248, 261, 271, 308, 309, 310, 311, 314, 318, 324, 326, 328, 335, 336, 339, 343, 347, 348, 350, 365, 368, 376, 377, 379, 380, 381, 382, 383, 384, 386, 394, 397, 400, 403, 407, 411, 412, 413, 415, 443, 444, 470, 471, 475, 476, 477, 478, 479, 481], "904": [85, 129], "90709145": 399, "9091": 313, "9120": 332, "9163": 332, "91m": 85, "920": [173, 182], "922": [173, 200], "928": [57, 85], "929": [85, 108], "92b": 85, "93": [85, 137], "93b": [85, 173], "93k": 85, "94": 113, "944": [31, 85], "9486833": 25, "949e": [416, 417], "94b": [85, 173], "95": 370, "9526": 227, "9545": 293, "955": [85, 136], "956": [49, 85], "958": [85, 134], "95b": 173, "96": [31, 32, 39, 40, 77, 97, 168, 173, 174, 175, 176, 177, 194, 195], "960": 96, "96366276": 396, "9640": 303, "96402758": 448, "968": [53, 85], "973": [85, 122], "976": [163, 173], "978": [38, 55, 85], "97b": 85, "984": [76, 85, 138, 173, 193], "98b": 85, "99": 384, "9957": 332, "997": [170, 173], "99734545": 399, "999": [0, 379, 380, 381, 382, 383], "99b": [85, 173], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 85, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 170, 171, 172, 173, 180, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 258, 259, 260, 273, 282, 306, 313, 314, 316, 317, 318, 319, 321, 328, 329, 332, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 356, 357, 358, 359, 363, 364, 365, 370, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 394, 396, 397, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 481], "As": 399, "At": [15, 361, 372], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 214, 274, 363, 383, 391, 394, 396, 397, 398, 400, 475, 485], "For": [2, 3, 4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 219, 221, 222, 224, 225, 226, 227, 229, 246, 248, 260, 273, 286, 287, 290, 291, 299, 308, 309, 310, 311, 324, 326, 334, 335, 336, 338, 339, 340, 363, 375, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 433, 434, 435, 436, 437, 438, 441, 443, 445, 446, 449, 450, 451, 461, 463, 467, 469, 472, 485], "If": [0, 1, 2, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 159, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 239, 243, 246, 248, 255, 258, 262, 263, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 286, 287, 305, 306, 308, 309, 310, 315, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 384, 385, 388, 393, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 475, 479, 480, 482, 483], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 85, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 159, 173, 174, 175, 176, 179, 184, 191, 193, 195, 202, 204, 213, 215, 216, 217, 218, 219, 239, 243, 246, 271, 273, 274, 275, 276, 277, 281, 293, 294, 297, 298, 303, 305, 306, 315, 321, 324, 325, 328, 329, 330, 331, 332, 343, 344, 345, 353, 355, 356, 358, 361, 363, 364, 375, 376, 382, 384, 385, 386, 388, 391, 392, 399, 402, 403, 404, 405, 408, 409, 410, 412, 413, 419, 436, 438, 455, 457, 460, 461, 462, 463, 464, 466, 467, 468, 469, 473, 474, 475], "Its": [26, 401], "Near": 24, "No": [236, 239, 389], "Not": 325, "One": [87, 485], "Such": 402, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "There": 464, "These": [4, 10, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 174, 179, 182, 313, 316, 317, 318, 319, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 385, 401, 485], "To": [3, 15, 85, 173, 365, 375, 394, 398, 401, 416, 417, 460, 485], "With": [3, 85, 188, 192, 236, 239, 475, 485], "_": [12, 13, 14, 22, 215, 216, 218, 219, 221, 222, 224, 225, 226, 227, 229, 248, 271, 273, 321, 335, 336, 338, 339, 340, 346, 347, 348, 349, 350, 351, 353, 376, 377, 379, 380, 381, 382, 384, 386, 405, 406, 407, 411, 449, 450, 470, 471, 476, 477, 478, 480, 481, 482], "_1": [19, 215, 216, 217, 218, 219, 246, 324, 411, 455, 457, 473], "_2": [19, 215, 216, 217, 218, 219, 246, 324, 411, 455, 457, 473], "__call__": [1, 213, 392], "__enter__": 392, "__exit__": 392, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 159, 174, 180, 181, 212, 213, 214, 215, 216, 217, 218, 239, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 321, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 363, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 393, 402, 474, 475], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 364, "__setattr__": 213, "_activ": 228, "_arraylik": [415, 417, 421, 423], "_arraylikeint": 461, "_arrayorscalar": [212, 214, 394, 402, 452], "_backward_op": 15, "_base_activ": 86, "_base_dtyp": [416, 419], "_block": 314, "_builtinnumer": 402, "_c": 477, "_decai": 382, "_devicetyp": [394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "_dtype_bit": 388, "_einopspattern": [12, 13, 14, 321], "_fanmod": [286, 287], "_grad_en": 390, "_i": [19, 23, 228, 239, 246, 301, 315, 331, 334, 341, 346, 349, 402, 405, 406, 408, 409, 411, 412, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 455, 457, 463, 467, 472, 473], "_in": [286, 287, 290, 291], "_interpolatetyp": 361, "_j": [228, 301, 346, 349, 411, 437, 445, 450, 451], "_k": 468, "_layer": [356, 358], "_left": 273, "_make_lay": 145, "_mlphead": 77, "_mlx_dtype": 388, "_mlxarrai": 402, "_modul": 213, "_n": [19, 215, 216, 217, 218, 219, 455, 457, 473], "_nograd": 392, "_np_dtype": 388, "_out": [286, 287, 290, 291, 463, 469], "_p": [23, 260, 271, 353], "_pad": 461, "_paddingstr": [275, 276, 277, 278, 279, 280, 308, 309, 310], "_paramet": 213, "_reducestr": 13, "_reductiontyp": [249, 250, 251, 253, 254, 328, 329, 330, 331, 332], "_resnestbottleneck": 103, "_right": 273, "_scalar": [231, 284, 288, 289, 290, 291, 306, 414, 419, 429, 459], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 259, 341, 397, 420, 422, 453, 464, 467, 472], "_size": [261, 262, 263, 314], "_skresnetmodul": [141, 142, 143], "_slope": 296, "_statedict": 364, "_t": [383, 384], "_tensor": [305, 355, 357, 359], "_tensorop": 402, "_u": 24, "_v": 24, "_valu": [429, 461], "_weight": 353, "_width": 461, "a_": [30, 357], "a_1": [305, 466], "a_2": 466, "a_h": 305, "a_i": [305, 408, 409, 412, 466], "a_k": 466, "aaai": 85, "ab": [372, 424], "abc": [2, 364], "abil": [85, 485], "about": [10, 155], "abov": [390, 399, 415, 418, 470], "abs_pos_emb": [194, 195], "absolut": [22, 23, 30, 194, 195, 251, 372, 381, 425], "abstract": [2, 3, 182, 184, 363, 364, 375, 376, 384, 386, 388], "abstractmethod": 364, "abund": [48, 101], "acceler": [85, 299, 334, 335, 336, 367, 376, 382, 384, 386, 402], "accept": [325, 396], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 212, 214, 215, 216, 217, 218, 219, 389, 464], "accord": [12, 14, 239, 273, 308, 309, 310, 321, 324, 326, 329, 332, 377, 378, 379, 380, 381, 382, 383, 450, 453], "accordingli": [18, 446], "account": [22, 24, 25, 302, 389], "accumul": [376, 377, 378, 389, 402, 403, 404, 408, 409, 410, 413, 453], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 85, 90, 91, 92, 98, 99, 100, 101, 102, 135, 173, 207, 208, 209], "achiev": [12, 85, 123, 124, 125, 126, 127, 128, 129, 188, 232, 233, 234, 261, 321, 343, 344, 345, 382, 480, 482], "across": [0, 5, 6, 10, 12, 13, 15, 30, 39, 52, 85, 94, 173, 174, 182, 187, 188, 189, 191, 192, 193, 195, 203, 212, 216, 219, 256, 259, 261, 262, 263, 290, 291, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 388, 394, 396, 397, 398, 399, 400, 401, 416, 417, 437, 451], "act": [15, 380, 465], "act_lay": [169, 174], "activ": [28, 39, 85, 86, 96, 97, 113, 117, 118, 130, 145, 152, 161, 163, 165, 169, 174, 177, 178, 215, 219, 221, 222, 224, 225, 226, 227, 228, 229, 237, 275, 276, 277, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 314, 316, 317, 318, 319, 328, 329, 332, 334, 335, 336, 341, 355, 357, 359, 389, 436, 438], "actual": [214, 328, 329, 331, 332, 478], "acycl": 15, "ad": [14, 54, 92, 112, 213, 215, 216, 217, 218, 219, 232, 233, 234, 238, 246, 248, 249, 250, 255, 256, 258, 259, 264, 265, 266, 268, 269, 270, 275, 276, 277, 305, 308, 309, 310, 311, 314, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 355, 357, 359, 377, 378, 379, 380, 381, 382, 383, 384, 393, 472, 485], "adadelta": 387, "adagrad": [377, 387], "adam": [85, 380, 381, 382, 383, 387], "adamax": 387, "adamw": 387, "adapt": [10, 28, 73, 85, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 261, 262, 263, 281, 282, 343, 344, 345, 368, 372, 377, 378, 379, 382, 383, 384, 385], "adaptive_avg_pool1d": [245, 267, 343], "adaptive_avg_pool2d": [245, 267, 344], "adaptive_avg_pool3d": [245, 267, 345], "adaptiveavgpool1d": [323, 352], "adaptiveavgpool2d": [28, 130, 145, 152, 323, 352], "adaptiveavgpool3d": [323, 352], "add": [4, 15, 159, 213, 215, 216, 219, 246, 248, 305, 308, 309, 310, 324, 326, 341, 364, 376, 379, 384, 386, 391, 424, 461, 472], "add_bias_kv": 305, "add_modul": [213, 219], "add_param_group": 364, "add_zero_attn": 305, "addit": [4, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 216, 219, 246, 248, 255, 258, 324, 326, 334, 335, 336, 338, 339, 340, 376, 382, 391, 401, 403, 468], "addition": 382, "address": [329, 332, 379, 380, 383], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 261, 262, 263, 282, 313, 314, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 365, 366, 369, 370, 371, 372, 373, 375, 379, 383, 384, 385, 457, 473], "adopt": 402, "advanc": [3, 15, 24, 60, 77, 85, 91, 101, 117, 173, 183, 185, 200, 202, 216, 219, 232, 233, 234, 261, 262, 263, 343, 344, 345, 363, 376], "advantag": 84, "affect": [390, 462, 467, 474], "affin": [275, 276, 277, 334, 335, 336, 338, 339, 340, 341, 481], "after": [10, 14, 15, 22, 28, 96, 97, 152, 194, 195, 214, 215, 216, 217, 218, 219, 243, 281, 282, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 309, 310, 313, 316, 317, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 355, 357, 359, 365, 372, 380, 389, 402, 403, 404, 408, 409, 410, 412, 413, 419, 461, 466, 475], "afterward": 389, "aggreg": [10, 85, 159, 282, 411, 463, 469], "agnost": 388, "aim": 4, "al": [74, 85, 159, 173, 174, 355], "alex": [5, 6, 85], "alexei": 173, "alexnet": 152, "algebra": [16, 418], "algorithm": [7, 22, 24, 25, 364, 375, 401], "alia": 392, "align": [10, 26, 101, 273, 361, 406, 407, 446], "align_corn": [273, 361], "all": [0, 3, 4, 15, 25, 59, 85, 173, 213, 215, 216, 217, 218, 219, 233, 234, 260, 261, 262, 263, 265, 266, 269, 270, 273, 276, 277, 282, 296, 297, 305, 310, 343, 344, 345, 347, 348, 351, 355, 363, 364, 369, 375, 376, 379, 384, 385, 386, 389, 402, 412, 436, 437, 438, 445, 449, 451, 455, 456, 457, 463, 467, 468, 469, 470, 471, 473, 476, 477, 485], "allevi": [85, 221], "alloc": [15, 416, 417], "allow": [0, 1, 3, 4, 10, 12, 24, 25, 84, 85, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 159, 174, 181, 182, 194, 198, 199, 200, 201, 202, 204, 214, 215, 216, 217, 218, 219, 221, 224, 225, 228, 234, 236, 274, 282, 292, 293, 296, 299, 300, 301, 303, 306, 308, 309, 310, 321, 353, 361, 363, 365, 366, 368, 370, 372, 377, 378, 391, 414, 420, 422, 423, 446, 450, 452, 460, 474, 475, 485], "along": [10, 13, 14, 228, 260, 273, 282, 301, 389, 406, 407, 411, 436, 437, 438, 445, 449, 451, 453, 454, 455, 457, 460, 463, 465, 466, 468, 469, 472, 473, 480, 482], "alongsid": 212, "alpha": [221, 224, 226, 237, 292, 299, 313, 376, 384], "alpha_dropout": [244, 245, 313], "alphadropout": [320, 323], "alphadropoutmodel": 313, "alreadi": 393, "also": [155, 221, 222, 224, 225, 226, 227, 229, 246, 248, 273, 382, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 453, 455, 457, 461, 462, 463, 464, 467, 468, 469, 472, 473], "alter": [219, 464, 465], "altern": [1, 15, 174, 293, 377, 407], "alwai": [10, 214, 365, 459, 462, 479, 480, 482], "among": [75, 282], "amount": [232, 233, 234, 264, 265, 266, 268, 269, 270, 278, 279, 280, 311, 382], "ampl": 98, "amsgrad": [379, 380], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 222, 232, 233, 234, 236, 237, 240, 241, 242, 243, 246, 262, 263, 271, 273, 274, 278, 279, 280, 282, 290, 291, 292, 298, 300, 305, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 324, 326, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 358, 359, 364, 365, 370, 375, 376, 379, 382, 384, 388, 389, 392, 393, 402, 407, 415, 418, 429, 437, 445, 451, 453, 455, 463, 466, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "analog": [463, 469], "analysi": [4, 281, 308, 309, 310, 340, 346, 348, 349, 351], "andreetto": 85, "andrew": 85, "angl": [274, 481], "ani": [0, 1, 2, 3, 12, 15, 22, 24, 29, 112, 140, 151, 153, 175, 176, 177, 178, 179, 212, 213, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 237, 240, 246, 248, 255, 258, 300, 321, 341, 363, 364, 369, 389, 390, 392, 393, 399, 402, 414, 415, 416, 418, 420, 421, 422, 423, 436, 438, 450, 452, 455, 456, 457, 461, 463, 468, 469, 472, 473, 474, 485], "anneal": 366, "anoth": [93, 218, 413, 421, 423, 475, 485], "api": [4, 15, 343, 344, 345, 485], "appear": 364, "append": [216, 218, 219, 305], "appl": [15, 179, 388, 402], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 22, 28, 30, 39, 59, 60, 77, 85, 123, 140, 150, 152, 156, 173, 194, 195, 206, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 256, 260, 275, 276, 277, 281, 282, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 369, 370, 376, 377, 378, 380, 381, 382, 383, 407, 461, 463, 470, 471, 474, 477, 479, 480, 481, 482, 483, 485], "applic": [4, 10, 13, 15, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 211, 232, 258, 308, 309, 310, 324, 326, 401, 414, 422, 461, 466, 470, 471, 483], "approach": [3, 10, 12, 14, 82, 159, 161, 163, 165, 169, 219, 321, 366, 380], "appropri": [24, 85, 92, 96, 97, 213, 217, 219, 239, 308, 309, 310, 313, 316, 317, 329, 347, 348, 388, 390], "approx": 226, "approxim": [24, 222, 293, 294, 295, 347, 350, 389], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 85, 98, 100, 101, 154, 170, 171, 172, 181, 182, 183, 184, 185, 186, 190, 212, 213, 214, 215, 216, 217, 218, 219, 228, 232, 233, 234, 236, 239, 246, 248, 256, 262, 263, 271, 273, 278, 279, 280, 281, 282, 286, 287, 289, 290, 291, 294, 301, 305, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 326, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 359, 361, 363, 367, 371, 376, 379, 380, 382, 383, 384, 385, 386, 389, 390, 392, 393, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 425, 429, 433, 436, 437, 438, 439, 440, 445, 446, 449, 450, 453, 454, 455, 460, 463, 464, 465, 466, 469, 470, 471, 474, 475, 476, 478, 479, 483, 485], "arang": 424, "arbitrari": [216, 325, 416, 417, 429, 434, 435, 437, 441, 443, 445, 450, 451], "arcco": 424, "arch": 393, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 186, 188, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 222, 281, 294, 295, 297, 302, 305, 306, 321, 324, 325, 355, 363, 393], "arcsin": 424, "arctan": 424, "area": [273, 361], "arg": [213, 325, 393, 416], "argmax": 392, "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 213, 219, 325, 389, 392, 396, 416, 450], "around": [19, 274, 303], "arr": [455, 457, 468, 473], "arrai": [15, 212, 214, 391, 394, 402, 407, 415, 417, 421, 423, 452, 462, 463, 475, 485], "art": [48, 85, 208], "artifici": 85, "arxiv": [85, 173], "asgd": 387, "ashish": 173, "aspect": 483, "assign": [15, 213, 215, 217, 219, 273, 329, 332, 459], "assist": [73, 74, 75], "associ": [217, 218], "assum": [0, 1, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 364, 375, 390], "astyp": 402, "attach": 389, "attempt": [215, 219], "attend": [231, 306, 356, 358, 359], "attent": [30, 85, 103, 110, 111, 140, 154, 156, 159, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 246, 281, 305, 306, 355, 356, 357, 358, 359], "attn": [231, 306], "attn_drop": 174, "attn_drop_r": [159, 180, 181, 194, 195], "attn_mask": [231, 306], "atto": [45, 78, 85], "attribut": [15, 213, 365], "audio": 308, "augment": [3, 4, 133, 274, 401, 463, 469, 474, 478, 479, 480, 481, 482, 485], "auto_pars": 388, "autodiff": 402, "autoencod": 85, "autograd": [15, 363], "automat": [4, 214, 215, 216, 217, 218, 363, 389, 394, 396, 397, 398, 400, 402, 416, 417, 423, 460, 475], "autoregress": [231, 306], "auxiliari": [73, 74, 75, 212], "avail": [4, 5, 6, 7, 8], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 174, 212, 261, 262, 263, 264, 265, 266, 273, 281, 282, 331, 343, 344, 345, 346, 347, 348, 376, 377, 379, 384, 437], "avg_down": 112, "avg_pool": [346, 347, 348], "avg_pool1d": [245, 267], "avg_pool2d": [245, 267], "avg_pool3d": [245, 267], "avgpool": [28, 130, 145, 152, 282], "avgpool1d": [323, 352], "avgpool1dmodel": 346, "avgpool2d": [323, 352], "avgpool2dmodel": 347, "avgpool3d": [323, 352], "avgpool3dmodel": 348, "avoid": [2, 3, 12, 13, 24, 60, 190, 217, 260, 321, 367, 389, 392, 419], "awar": 203, "ax": [10, 12, 13, 14, 16, 321, 391, 436, 437, 438, 445, 446, 450, 451, 453, 463, 467, 469], "axi": [13, 23, 173, 174, 228, 260, 301, 406, 407, 436, 437, 438, 445, 451, 454, 455, 456, 457, 460, 461, 463, 465, 466, 467, 468, 469, 472, 473, 480, 482], "axis1": 446, "axis2": 446, "b": [12, 13, 14, 16, 26, 30, 85, 173, 207, 246, 248, 289, 308, 309, 310, 321, 324, 326, 391, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 453, 455, 457, 460, 468, 473, 479], "b0": [59, 61, 85, 173, 187], "b1": [59, 62, 85, 173, 188, 189], "b2": [59, 63, 85, 173, 189, 190], "b3": [59, 64, 85, 173, 191], "b4": [59, 65, 85, 173, 192], "b5": [59, 66, 85, 173, 193], "b6": [59, 67, 85], "b7": [59, 68, 85], "b_": 30, "b_1": [357, 359], "b_2": [357, 359], "b_i": [408, 409, 412], "b_k": 305, "b_v": 305, "back": [15, 273, 305, 347, 348, 393, 406, 411, 454, 463, 469], "backbon": [141, 142, 143, 173, 191], "backend": [179, 402], "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 85, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 273, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 363, 398, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 433, 436, 438, 452, 453, 454, 459, 461, 463, 465, 469, 470, 471, 475], "backward": [15, 212, 214, 311, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 402, 419, 454, 459, 465, 475], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 85, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 166, 167, 170, 182, 185, 207, 210, 330], "bar": 376, "base": [3, 12, 13, 15, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 156, 157, 166, 173, 175, 176, 196, 200, 207, 211, 213, 215, 216, 217, 218, 231, 236, 246, 261, 262, 263, 282, 306, 311, 313, 321, 329, 330, 343, 344, 345, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 380, 384, 385, 386, 388, 394, 403, 404, 408, 409, 410, 412, 413, 423, 433, 434, 435, 436, 438, 450, 460, 461, 466, 478, 479, 480, 481, 482], "base_dtyp": 388, "base_lr": 367, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "baselin": 173, "basic": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 159, 174, 231, 232, 233, 234, 238, 239, 261, 262, 263, 271, 275, 276, 277, 278, 279, 280, 281, 286, 287, 290, 291, 306, 314, 343, 344, 345, 353, 419, 453, 476, 477, 478, 479, 480, 481, 482, 483], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 15, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 231, 232, 233, 234, 236, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 305, 306, 308, 309, 310, 311, 324, 326, 328, 329, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 383, 392, 407, 446, 476, 477, 478, 479, 481, 483], "batch_norm": [245, 257, 334, 335, 336], "batch_norm1": 219, "batch_norm2": 219, "batch_siz": [1, 2, 3, 150, 282], "batch_tensor": 446, "batchnorm": [275, 276, 277], "batchnorm1d": [275, 323, 342], "batchnorm1dmodel": 334, "batchnorm2d": [174, 219, 276, 323, 342], "batchnorm2dmodel": 335, "batchnorm3d": [277, 323, 342], "batchnorm3dmodel": 336, "bceloss": [323, 333], "becaus": [2, 389, 392, 397], "becom": [23, 213, 377, 385], "been": [302, 459], "befor": [10, 14, 22, 30, 130, 155, 214, 231, 306, 355, 357, 359, 366, 372, 376, 382, 399, 461, 465, 477, 485], "begin": [1, 23, 221, 224, 225, 226, 239, 292, 294, 295, 296, 297, 299, 315, 330, 331, 332, 346, 347, 348, 349, 350, 351, 383, 385, 391, 401, 408, 409, 411, 425, 429, 436, 438, 440, 459, 461, 470, 471], "behav": [315, 330, 449], "behavior": [10, 15, 85, 216, 219, 231, 260, 306, 311, 369, 390, 401, 407, 417, 485], "being": [218, 274, 313, 316, 317, 318, 319, 383, 390, 402, 454, 455, 457, 473], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 407, 415, 418, 471], "benchmark": [5, 6, 7, 8, 15, 101, 175, 176], "benefici": 219, "benefit": [102, 221, 363, 382], "bernoulli": [313, 316, 317, 318, 319, 395], "best": [101, 286, 287, 290, 291], "beta": [256, 334, 335, 336, 337, 338, 339, 340, 341, 379, 380, 381, 382, 383], "beta1": [379, 380, 381, 382, 383], "beta2": [379, 380, 381, 382, 383], "beta_1": [379, 380, 381, 382, 383], "beta_2": [379, 380, 381, 382, 383], "beta_c": [256, 337], "better": [21, 85, 100, 152, 161, 163, 165, 189, 190, 195, 203, 222, 286, 287, 290, 291, 302, 314, 338, 339, 340, 363, 372, 373, 380, 382, 384, 477], "between": [43, 46, 50, 69, 70, 71, 72, 81, 85, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 159, 167, 174, 185, 207, 210, 213, 232, 233, 234, 236, 246, 251, 275, 276, 277, 278, 279, 280, 282, 298, 308, 309, 310, 311, 313, 316, 317, 318, 319, 324, 328, 329, 330, 331, 332, 367, 372, 373, 376, 384, 385, 386, 401, 403, 404, 407, 410, 413, 414, 419, 451, 479, 480, 482, 483], "beyond": [10, 216, 372], "bia": [30, 159, 161, 163, 165, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 232, 233, 234, 246, 248, 255, 258, 259, 275, 276, 277, 278, 279, 280, 305, 308, 309, 310, 324, 326, 334, 335, 336, 338, 339, 340, 341, 355, 357, 359, 379, 380, 381, 382, 383], "bias": [169, 173, 308, 309, 310, 326, 341, 363], "bias1": 217, "bias2": 217, "big": [173, 278, 279, 280], "bilinear": [245, 247, 273, 323, 327, 361], "bilinearmodel": 324, "binari": [227, 249, 300, 313, 316, 317, 318, 319, 328], "binary_cross_entropi": [245, 252], "bit": 388, "black": 15, "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 85, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 236, 238, 239, 275, 276, 277, 282, 308, 309, 310, 311, 314, 389, 392], "block1": [155, 363], "block2": [155, 363], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [238, 314], "block_typ": 30, "blue": 479, "bmatrix": 411, "bn": [275, 276, 277], "bn_affin": [275, 276, 277], "bookkeep": 392, "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 213, 214, 231, 237, 239, 240, 241, 242, 243, 255, 258, 273, 275, 276, 277, 278, 279, 280, 305, 306, 308, 309, 310, 315, 324, 326, 334, 335, 336, 338, 339, 340, 341, 355, 356, 357, 358, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 384, 388, 390, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 436, 437, 438, 445, 451, 452, 475], "boolean": 459, "boost": 98, "both": [30, 93, 159, 161, 163, 165, 169, 173, 174, 179, 181, 182, 194, 196, 197, 198, 199, 232, 248, 262, 264, 268, 275, 293, 302, 308, 309, 311, 344, 346, 347, 349, 350, 359, 361, 388, 392, 405, 406, 407, 411, 415, 460, 466, 483], "bottleneck": [54, 85, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 281], "bottleneck_cfg": 92, "bottom": 273, "bound": [287, 289, 291, 367, 385, 400, 402], "box": [4, 15], "branch": [73, 74, 75, 85, 159, 282], "break": [10, 363], "brief": 485, "bright": 485, "bring": [10, 321], "broadcast": [14, 15, 318, 319, 437, 445, 451, 464, 472], "broadcast_to": 458, "budget": [50, 191], "buffer": [15, 376, 382, 384, 386], "build": [15, 40, 60, 84, 85, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 156, 205, 213, 216, 219, 363, 485], "built": [3, 15, 113, 117, 118, 219, 363, 388, 392], "burg": 8, "c": [5, 6, 8, 12, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 236, 238, 241, 242, 243, 250, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 281, 311, 318, 319, 321, 329, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 367, 391, 457, 473, 477], "c_": [308, 309, 310], "c_in": [232, 233, 234, 275, 276, 277], "c_out": [232, 233, 234], "calcul": [0, 1, 16, 214, 361, 377, 378, 381, 382, 383, 392, 397], "calculu": [17, 24], "call": [1, 15, 213, 365, 390, 392, 393, 403, 404, 407, 408, 409, 410, 412, 413], "callabl": [187, 188, 189, 191, 192, 193, 355, 357, 359, 364, 367, 370, 393, 402, 474], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 85, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 155, 159, 212, 214, 215, 216, 217, 218, 219, 224, 232, 233, 234, 239, 274, 282, 293, 296, 298, 303, 308, 309, 310, 311, 338, 339, 340, 347, 348, 349, 350, 351, 353, 356, 363, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 390, 391, 392, 400, 401, 402, 407, 416, 417, 418, 420, 422, 423, 437, 445, 446, 451, 453, 457, 460, 461, 463, 464, 469, 472, 473, 474, 475, 478, 480, 481, 482, 485], "cannot": [18, 19, 21, 22, 25, 26, 27, 394, 454], "cap": 298, "capabl": [10, 30, 52, 110, 111, 173, 414, 415, 418, 420, 421, 422, 423], "capac": [41, 42, 43, 49, 53, 85, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 158, 173, 174, 175, 176, 177, 179, 183, 188, 192, 193, 202, 208], "captur": [15, 30, 85, 140, 159, 161, 163, 165, 169, 173, 174, 182, 183, 184, 194, 196, 197, 198, 199, 200, 201, 204, 236, 308, 309, 310, 324], "cardin": [85, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140], "care": 159, "carefulli": [365, 389], "cartesian": 460, "case": [3, 23, 86, 92, 94, 221, 224, 225, 226, 239, 292, 294, 295, 296, 297, 299, 315, 330, 331, 332, 346, 347, 348, 349, 350, 351, 363, 371, 378, 383, 385, 391, 408, 409, 425, 429, 436, 438, 440, 459, 461, 470, 471, 485], "categor": [271, 353], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 175, 176, 353, 388], "caus": [3, 24, 365, 376, 384, 386], "causal": [231, 306], "cautiou": [0, 10], "cdot": [15, 17, 18, 21, 22, 23, 26, 159, 173, 174, 221, 222, 224, 226, 227, 231, 232, 233, 234, 246, 248, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 281, 290, 291, 293, 294, 295, 300, 302, 306, 311, 313, 324, 326, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 353, 366, 367, 368, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 385, 405, 406, 407, 410, 412], "center": [274, 303, 384, 476, 485], "centercrop": [484, 485], "certain": [18, 222, 231, 246, 302, 306, 324, 359, 372, 379, 380, 390, 436, 438], "cfg": [93, 96, 97], "chain": [15, 21, 22, 219, 474, 485], "challeng": [7, 85, 182], "cham": 85, "chanc": [479, 480, 482], "chang": [10, 251, 330, 371, 385, 389, 391, 393, 402, 462, 464, 472, 479, 485], "chanlumerico": 15, "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 159, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 232, 233, 234, 236, 241, 242, 243, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 308, 309, 310, 318, 319, 334, 335, 336, 337, 338, 339, 340, 343, 346, 347, 348, 349, 350, 351, 477, 479, 483], "character": [121, 122], "check": [15, 390, 402, 476, 478], "checkpoint": 375, "chen": [85, 159, 173], "choic": [100, 102, 460], "choleski": 20, "chollet": 85, "choos": 85, "chosen": [313, 314, 365], "christian": 85, "christoph": 8, "chu": 85, "chun": 173, "chunk": 458, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 228, 239, 250, 254, 363, 375, 392, 393, 485], "classic": 89, "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152, 174], "clean": 392, "cleaner": [1, 407], "cleanli": 174, "cleanup": 389, "clear": [214, 416, 417, 419], "clf_in_featur": 86, "clf_layer": 86, "clip": [274, 294, 298, 385, 424], "clockwis": 274, "close": [21, 24, 299, 328, 384], "closer": 292, "closur": [364, 375], "cloth": 7, "cnn": [30, 85, 161, 163, 165, 173], "co": [85, 366, 424, 441], "coars": 173, "coatnet": [31, 32, 33, 34, 35, 36, 37, 38], "coatnet_0": 85, "coatnet_1": 85, "coatnet_2": 85, "coatnet_3": 85, "coatnet_4": 85, "coatnet_5": 85, "coatnet_6": 85, "coatnet_7": 85, "code": [10, 15, 22, 215, 217, 219, 389, 390, 392, 401], "coeffici": [26, 59, 273, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "col": 236, "collaps": 10, "collect": [4, 16, 154, 215, 216, 218, 219, 375], "color": [479, 485], "colorjitt": 485, "column": [18, 19, 21, 25, 26, 27, 155, 236, 311, 418, 457, 460], "com": [7, 8, 15], "combin": [1, 3, 12, 30, 76, 82, 83, 85, 102, 144, 159, 173, 174, 183, 216, 219, 221, 222, 275, 276, 277, 281, 282, 293, 311, 314, 321, 329, 363, 382, 383, 437, 445, 451, 455, 485], "combined_dataset": [0, 1], "common": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 236, 274, 375, 388, 485], "commonli": [90, 91, 92, 94, 95, 96, 97, 100, 102, 222, 227, 228, 229, 232, 234, 239, 246, 253, 255, 258, 271, 274, 281, 290, 291, 294, 295, 298, 301, 306, 310, 328, 331, 332, 346, 347, 348, 349, 350, 351, 353, 355, 391, 420, 467, 475, 476, 477, 478, 480, 481, 482, 485], "compact": [44, 45, 47, 52, 81, 100, 177, 187, 188], "compar": [30, 43, 44, 85, 121, 122, 152, 172, 177, 181, 189, 401, 468], "compat": [4, 10, 15, 16, 140, 321, 325, 341, 363, 391, 401, 419, 453, 475, 485], "competit": [45, 51, 52], "complet": [156, 355, 356, 358], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 175, 176, 181, 182, 183, 184, 185, 189, 190, 191, 201, 212, 214, 215, 216, 219, 225, 231, 274, 284, 288, 289, 290, 291, 297, 306, 349, 351, 363, 370, 375, 379, 380, 381, 382, 383, 385, 388, 394, 400, 402, 414, 415, 416, 417, 418, 419, 420, 422, 429, 452, 459, 475, 485], "complex64": 388, "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 177, 178, 213, 216, 375, 402, 485], "compos": [5, 6, 7, 8, 150, 174, 308, 309, 310, 346, 347, 348, 349, 350, 351, 363, 485], "compound": 60, "comprehens": [3, 166], "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 85, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 159, 169, 173, 174, 181, 182, 185, 186, 190, 194, 208, 209, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 363, 364, 366, 367, 368, 369, 370, 371, 373, 375, 376, 384, 389, 390, 391, 392, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 460, 461, 463, 469, 475, 485], "computation": [3, 12, 24, 113, 294, 295, 321], "compute_grad": 454, "compute_loss": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "concat": 305, "concaten": [0, 232, 233, 234, 305, 457, 458, 468, 473], "concept": [24, 85, 91, 154], "concis": [10, 12, 14], "concurr": 389, "condit": [17, 18, 21], "confer": [85, 173], "config": 145, "configur": [15, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 218, 275, 276, 277, 306, 388], "confirm": 15, "conjunct": [236, 332], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 174, 248, 281, 282, 308, 309, 310, 326, 357, 359], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 219, 286, 287, 290, 291, 311, 363, 385, 388, 390, 416, 417, 470, 471, 485], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 159, 212, 261, 262, 263, 282, 305, 343, 344, 345, 355, 357, 359, 399, 401, 461, 476, 483, 485], "consistent_tensor": 401, "consol": 155, "constant": [249, 250, 255, 256, 258, 259, 260, 285, 299, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 355, 357, 359, 373, 377, 378, 379, 380, 381, 382, 383, 384, 459, 461], "constant_pad": 461, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 190, 282, 321], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 175, 176, 177, 216, 363, 415, 463, 469, 470, 471], "constructor": [15, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149, 175, 176, 177, 178, 179], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 213, 215, 216, 217, 218, 219, 228, 231, 236, 246, 248, 249, 250, 254, 271, 273, 328, 329, 332, 364, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 417, 419, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 454, 456, 460, 466], "content": 274, "context": [85, 174, 200, 202, 203, 389, 390, 392, 402], "contextmanag": 389, "contextu": [170, 171, 172, 182, 196, 197, 198, 199], "contigu": [238, 314, 462], "continu": [296, 368, 373, 398], "contract": 12, "contrast": [156, 338, 339, 340, 485], "contribut": [238, 273, 313, 316, 317, 318, 319, 346, 349, 350, 351, 376, 382, 449], "control": [10, 14, 30, 39, 123, 181, 182, 282, 292, 330, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 401, 402, 475, 485], "conv": [77, 82, 85, 130, 275, 276, 277, 335, 336], "conv1": [87, 88, 89, 219, 308, 309, 310, 346, 347, 348, 349, 350, 351], "conv1d": [235, 245, 275, 278, 312, 323, 346, 349], "conv1dmodel": 308, "conv2": [87, 88, 89, 219, 308, 309, 310], "conv2d": [216, 219, 235, 245, 276, 279, 312, 321, 323, 335, 347, 350, 363], "conv2dmodel": 309, "conv3d": [235, 245, 277, 280, 312, 323, 336, 348, 351], "conv3dmodel": 310, "conv_bia": [275, 276, 277], "conv_config": 145, "conv_lay": [86, 216], "convblock": 363, "convbnrelu1d": 283, "convbnrelu2d": 283, "convbnrelu3d": 283, "conveni": [4, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168], "convent": 407, "converg": [24, 303, 365, 366, 367, 369, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 477], "convers": [329, 332, 479, 485], "convert": [5, 6, 7, 8, 145, 159, 212, 214, 228, 271, 301, 460, 474, 475, 479, 485], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "convnetwork": 216, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "convnext_bas": 85, "convnext_larg": 85, "convnext_smal": 85, "convnext_tini": 85, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 85, "convnext_v2_bas": 85, "convnext_v2_femto": 85, "convnext_v2_hug": 85, "convnext_v2_larg": 85, "convnext_v2_nano": 85, "convnext_v2_pico": 85, "convnext_v2_tini": 85, "convnext_xlarg": 85, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 174, 216, 232, 233, 234, 236, 275, 276, 277, 278, 279, 280, 281, 282, 308, 309, 310, 311, 347, 348, 350, 351, 446, 461], "convolv": [232, 233, 234, 308, 309, 310], "cooldown": 372, "coordin": 460, "copi": [10, 453], "core": [0, 1, 2, 3, 159, 213, 363, 364, 388, 402, 485], "corinna": 8, "corner": [273, 361, 476, 478], "correct": [215, 329, 332, 379, 380, 381, 382, 383, 459, 470, 471, 475], "correctli": [24, 213, 215, 216, 217, 218, 219, 329, 332, 401, 453, 454], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 196, 197, 198, 199, 205, 215, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 271, 273, 294, 297, 301, 324, 326, 334, 335, 336, 338, 339, 340, 347, 348, 353, 376, 384, 386, 388, 394, 405, 406, 408, 409, 412, 433, 434, 435, 441, 443, 453, 454, 457, 461, 463, 465, 469, 473], "cort": 8, "cosh": [424, 442, 448], "cosin": [366, 426, 430, 431, 441], "cosineannealinglr": 374, "cost": [85, 90, 92, 93, 99, 100, 102, 123, 169, 190, 278, 279, 280, 389], "could": 213, "count": [85, 93, 155, 173, 187, 188, 189, 191, 192, 193, 366, 371, 389, 455], "counterclockwis": [274, 481], "cover": [16, 232, 233, 234], "coverag": [174, 261, 262, 263], "cpu": [15, 212, 214, 388, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "craft": 15, "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 212, 213, 216, 219, 282, 298, 305, 355, 356, 357, 358, 359, 363, 391, 392, 393, 401, 414, 418, 419, 420, 421, 422, 423, 453, 460, 468, 474, 485], "creation": [69, 70, 71, 72, 216, 219, 389, 485], "criterion": [328, 329, 330, 331, 332], "critic": [24, 100, 192, 375, 401], "crop": [476, 478, 485], "cross": [159, 173, 194, 249, 250, 328, 329, 355, 356, 357], "cross_entropi": [245, 252], "crossattent": 159, "crossentropyloss": [323, 333], "crossvit": [160, 161, 162, 163, 164, 165, 166, 167, 168], "crossvit_15": 173, "crossvit_15_dagg": 173, "crossvit_18": 173, "crossvit_18_dagg": 173, "crossvit_9": 173, "crossvit_9_dagg": 173, "crossvit_bas": 173, "crossvit_smal": 173, "crossvit_tini": 173, "crucial": [10, 365], "cube": 424, "cumul": [222, 293], "current": [213, 366, 367, 368, 369, 370, 371, 372, 373, 376, 379, 385, 390], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 274, 275, 276, 277, 292, 296, 311, 355, 363, 367, 370, 389, 401, 418, 419, 466], "custom_config": 145, "custom_decod": 355, "custom_encod": 355, "custom_lenet": 86, "customiz": [187, 485], "custommodul": 212, "customnetwork": 215, "customparametermodel": [217, 218], "cut": 101, "cvf": [85, 173], "cvpr": 85, "cvt": [170, 171, 172], "cvt_13": 173, "cvt_21": 173, "cvt_w24": 173, "cvtspec": 169, "cycl": 367, "cycle_momentum": 367, "cyclic": [366, 367, 465], "cycliclr": 374, "d": [30, 85, 231, 234, 243, 263, 266, 270, 277, 306, 311, 336, 340, 341, 345, 348, 351, 391, 415, 481], "d_": [173, 234, 263, 266, 270, 305, 310, 345, 348, 351, 355, 356, 357, 358, 359], "d_1": [12, 13, 14, 321, 341], "d_2": [12, 13, 14, 321, 341], "d_h": [305, 311, 357, 359], "d_k": [30, 159, 174], "d_model": [156, 157, 158, 206, 355, 356, 357, 358, 359], "d_n": [12, 13, 14, 321, 341], "d_out": [234, 266, 270], "d_w": 311, "dag": 15, "dai": 85, "dampen": [376, 384, 386], "data": [4, 5, 6, 7, 8, 10, 15, 22, 85, 154, 173, 201, 212, 214, 218, 229, 232, 234, 236, 242, 243, 248, 271, 274, 275, 276, 277, 282, 297, 303, 308, 309, 310, 326, 340, 346, 348, 351, 358, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 391, 401, 402, 403, 404, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 446, 452, 453, 461, 462, 463, 464, 466, 467, 469, 474, 475, 478, 479, 480, 481, 482, 485], "data_dtyp": 388, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 174, 175, 176, 179, 182, 193, 274, 378, 474, 476, 485], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 411, "debug": [15, 155, 219, 390, 399, 485], "decai": [314, 365, 366, 368, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "declar": [12, 13, 14, 321], "decod": [156, 355, 356, 357], "decoder_lay": [356, 357], "decoderlay": 356, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 392, 393], "decoupl": [85, 377, 378, 380, 381, 382, 383], "decreas": [367, 372, 379, 380, 385], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 85, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 173, 182, 255, 293, 299, 321, 363, 365, 401, 419, 466, 470, 471, 474, 475, 485], "deepen": 191, "deeper": [74, 76, 84, 85, 112, 119, 171, 175, 176, 181, 184, 189, 192, 201, 202, 299], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 321, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 363, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 228, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 296, 301, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 382, 390, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 436, 437, 438, 445, 450, 451, 452, 454, 455, 457, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 479, 480, 482], "defer": 15, "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 159, 169, 215, 216, 217, 218, 219, 239, 293, 295, 298, 302, 328, 329, 330, 331, 332, 346, 361, 363, 365, 367, 370, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 397, 398, 412, 417, 429, 450, 474, 485], "definit": [15, 17, 275, 276, 277, 485], "degre": [274, 481, 485], "delai": 376, "deliv": [15, 100, 101, 193], "delta": [12, 228, 251, 301, 321, 330, 377], "delta_": [12, 228, 301, 321], "demand": [101, 179, 191, 192], "demonstr": [16, 136, 137, 138, 139, 144, 154, 363], "demystifi": 15, "denomin": [255, 256, 258, 259, 275, 276, 277, 334, 335, 336, 337, 338, 339, 340, 341, 355, 357, 359, 377, 378, 379, 380, 381, 382, 383, 384, 404], "denot": [22, 110, 111, 300, 305, 308, 309, 310, 313, 316, 317, 318, 319, 450], "dens": [54, 55, 56, 57, 58, 85, 173, 194, 196, 197, 198, 199, 239, 271, 353, 378], "densenet": [55, 56, 57, 58, 281], "densenet_121": 85, "densenet_169": 85, "densenet_201": 85, "densenet_264": 85, "densiti": [222, 293], "depend": [15, 22, 23, 30, 92, 154, 173, 174, 182, 183, 194, 196, 197, 198, 199, 200, 201, 218, 249, 250, 251, 253, 254, 273, 308, 405, 415, 436, 438, 463, 469, 478, 479, 483], "deploy": [102, 187, 190], "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 85, 98, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 234, 239, 243, 263, 266, 270, 310, 315, 336, 340, 345, 348, 351], "depth_coef": 59, "depthseparableconv1d": 283, "depthseparableconv2d": 283, "depthseparableconv3d": 283, "depthwis": [30, 39, 77, 85, 90, 150, 169, 170, 171, 172, 173, 232, 233, 234, 278, 279, 280], "depthwise_separ": [278, 279, 280], "der": 85, "deriv": [15, 24, 25, 228, 261, 262, 263, 293, 301, 303, 308, 309, 310, 324, 326, 393], "descend": 27, "descent": [376, 386], "describ": [10, 18, 19, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "descript": [154, 485], "deseri": 212, "design": [3, 4, 13, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 85, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 159, 170, 171, 172, 173, 174, 175, 176, 180, 182, 185, 192, 194, 201, 202, 208, 214, 216, 217, 218, 219, 221, 226, 299, 313, 363, 485], "desir": [10, 14, 151, 212, 261, 262, 263, 314, 343, 344, 345, 361, 365, 450, 452], "despit": 260, "destin": 213, "det": [16, 20], "det_a": 18, "detail": [155, 161, 163, 165, 169, 182, 201, 375, 401, 407], "detect": [85, 173, 193, 200, 201, 202, 203, 204, 372], "determin": [0, 16, 17, 18, 86, 121, 122, 159, 174, 261, 262, 263, 286, 287, 290, 291, 308, 309, 310, 343, 344, 345, 347, 348, 350, 351, 367, 384, 390, 394, 396, 397, 398, 400, 416, 417, 466, 476, 478], "determinist": 274, "develop": [10, 15, 93, 363, 401, 485], "deviat": [286, 288, 290, 474, 477, 485], "devic": [91, 92, 98, 99, 212, 214, 388, 394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "diag": [24, 424], "diagon": [24, 25, 27, 415, 418, 449, 470, 471], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 217, 321, 325, 364, 369], "dictionari": [86, 93, 100, 213, 214, 215, 217, 219, 364, 369], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 159, 170, 171, 172, 173, 180, 182, 183, 184, 185, 186, 195, 204, 216, 219, 228, 246, 273, 282, 301, 324, 331, 365, 372, 375, 388, 391, 399, 401, 413, 423, 451, 467, 485], "differenti": [17, 26, 271, 293, 363, 394, 396, 397, 398, 400, 402, 414, 416, 417, 420, 422], "difficult": 184, "digit": [7, 8, 85, 89], "dilat": [232, 233, 234, 275, 276, 277, 278, 279, 280, 308, 309, 310, 311], "dilation_height": 236, "dilation_width": 236, "dim": [39, 40, 77, 159, 231, 260, 306, 329, 332, 465], "dim_feedforward": [156, 355, 357, 359], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 85, 112, 123, 140, 145, 152, 156, 159, 170, 171, 172, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 206, 214, 228, 231, 246, 248, 255, 256, 258, 259, 260, 262, 263, 273, 281, 282, 301, 305, 306, 308, 309, 310, 311, 314, 321, 334, 335, 336, 338, 339, 340, 341, 344, 345, 347, 348, 349, 350, 351, 355, 357, 358, 359, 361, 391, 396, 400, 402, 406, 416, 436, 437, 438, 445, 446, 449, 450, 451, 453, 454, 455, 457, 461, 463, 465, 467, 468, 469, 472, 473, 476, 478, 483], "dimension": [10, 22, 24, 25, 27, 77, 232, 233, 234, 264, 265, 266, 268, 269, 270, 282, 305, 308, 309, 310, 311, 317, 318, 319, 334, 335, 336, 338, 339, 340, 346, 347, 348, 349, 350, 351, 355, 357, 359, 391, 406, 407, 411, 415, 433, 437, 445, 446, 449, 451, 456, 462, 463, 467, 469, 470, 471], "diminish": [365, 378], "direct": [15, 19, 328, 329, 330, 331, 332, 376, 384, 385, 386, 465], "directli": [69, 70, 71, 72, 85, 215, 216, 217, 218, 273, 321, 361, 377, 378, 380, 381, 382, 383, 399, 401, 452, 485], "directori": [3, 4, 5, 6, 7, 8], "disabl": [239, 314, 315, 390, 392], "discontinu": 440, "discrep": [328, 329, 332], "discret": [394, 397, 401], "disk": 3, "displai": [29, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168], "distinct": [93, 156, 174], "distribut": [201, 222, 228, 238, 273, 286, 287, 288, 289, 290, 291, 293, 301, 308, 309, 310, 313, 314, 316, 317, 318, 319, 324, 326, 329, 332, 346, 347, 348, 394, 396, 397, 398, 400, 401, 437, 445, 449, 451, 468, 477, 479, 480, 481, 482], "div": 424, "divers": [46, 85, 174, 274, 480, 482, 485], "diversifi": 485, "divid": [1, 24, 85, 173, 174, 194, 195, 206, 207, 208, 209, 210, 211, 216, 219, 228, 232, 233, 234, 301, 328, 329, 330, 331, 332, 404, 454, 466, 477], "divis": [24, 232, 233, 234, 260, 305, 313, 316, 317, 318, 319, 355, 357, 359, 377, 378, 379, 380, 381, 382, 383, 384, 404, 466], "dl": 15, "do": [24, 26, 212, 215, 216, 217, 218, 237, 240, 241, 242, 363, 365, 383, 390, 392, 423, 449, 461], "do_ev": 155, "doc": 154, "document": [4, 85, 375, 401], "doe": [22, 23, 24, 25, 27, 155, 156, 212, 215, 216, 217, 218, 219, 260, 291, 372, 379, 380, 385, 389, 390, 392, 394, 396, 397, 398, 399, 400, 414, 415, 416, 417, 418, 420, 421, 422, 423, 453, 459, 464, 465], "doi": 85, "domain": [4, 190], "dosovitskii": 173, "dot": [12, 13, 14, 19, 22, 180, 181, 215, 216, 217, 218, 219, 231, 305, 306, 321, 341, 349, 350, 351, 406, 411, 424, 455, 457, 468, 473], "down": [3, 363, 483], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 221, "drawn": [396, 397, 398, 400, 401, 481], "drop": [39, 40, 77, 174, 238, 239, 313, 314, 315, 316, 317, 318, 319], "drop_block": [244, 245], "drop_path": [39, 40, 174, 244, 245, 315], "drop_path_r": [60, 77, 159, 180, 181, 194, 195], "drop_prob": 315, "drop_rat": [77, 159, 180, 181, 194, 195], "dropblock": [238, 320, 323], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 85, 145, 152, 156, 159, 174, 177, 178, 180, 181, 194, 195, 206, 222, 231, 237, 241, 242, 243, 305, 306, 313, 314, 317, 318, 319, 355, 357, 359], "dropout1d": [244, 245, 320, 323], "dropout1dmodel": 317, "dropout2d": [244, 245, 320, 323], "dropout3d": [244, 245, 320, 323], "dropout_p": [231, 306], "dropout_prob": 75, "dropout_r": 206, "dropoutmodel": 316, "droppath": [320, 323], "dtype": [212, 214, 271, 353, 388, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 452, 475], "due": [22, 24, 54, 101, 179, 232, 233, 297, 481], "dummi": 155, "duplic": [10, 14, 215, 217], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 85, 112, 181, 212, 213, 214, 215, 216, 217, 218, 219, 228, 237, 238, 239, 240, 241, 242, 243, 255, 258, 274, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 361, 363, 365, 369, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 389, 390, 392, 402, 403, 436, 437, 438, 445, 451, 459, 465, 475, 478, 481, 485], "dy": [224, 296], "dynam": [0, 2, 3, 15, 30, 85, 140, 144, 213, 216, 217, 218, 219, 261, 262, 263, 282, 314, 341, 343, 344, 345, 365, 369, 370, 372, 378, 383, 388, 390], "dynamicnetwork": 216, "e": [0, 10, 15, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 159, 169, 179, 194, 195, 212, 228, 282, 300, 301, 302, 305, 313, 329, 364, 377, 384, 385, 388, 402, 418, 431, 433, 434, 442, 448, 449, 455, 479], "each": [1, 2, 3, 4, 15, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 85, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 156, 159, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 255, 258, 261, 262, 263, 271, 281, 282, 294, 297, 301, 305, 308, 309, 310, 311, 313, 316, 317, 318, 319, 324, 326, 328, 329, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 394, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 454, 455, 457, 460, 461, 463, 465, 466, 468, 469, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485], "earli": [30, 85, 383], "earlier": 93, "eas": 4, "easi": [2, 3, 4, 10, 124, 125, 126, 127, 128, 129, 214, 215, 217], "easier": [3, 215, 216, 219], "easili": [4, 93, 214, 218, 485], "eccv": 85, "economi": 27, "edg": [15, 92, 101, 187, 461], "edu": [5, 6], "educ": 154, "effect": [13, 85, 159, 161, 163, 165, 169, 173, 178, 200, 204, 215, 216, 217, 218, 219, 228, 232, 233, 234, 236, 292, 293, 297, 300, 301, 303, 334, 335, 336, 338, 339, 340, 341, 361, 365, 366, 367, 372, 390, 391, 457, 473], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 159, 164, 169, 170, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 196, 197, 198, 199, 201, 207, 210, 236, 278, 279, 280, 294, 295, 298, 321, 329, 363, 365, 366], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "efficientnet_b0": 85, "efficientnet_b1": 85, "efficientnet_b2": 85, "efficientnet_b3": 85, "efficientnet_b4": 85, "efficientnet_b5": 85, "efficientnet_b6": 85, "efficientnet_b7": 85, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 85, "efficientnet_v2_l": 85, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 85, "efficientnetv2": 85, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 321, "einstein": [10, 12, 13, 14, 321], "either": [15, 248, 361, 392, 394, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 452, 460], "element": [0, 10, 12, 14, 24, 25, 75, 85, 214, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 271, 275, 276, 277, 278, 279, 280, 281, 294, 295, 297, 301, 302, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 328, 329, 330, 331, 332, 341, 346, 347, 348, 349, 350, 351, 391, 394, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 456, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471], "elementwise_affin": 341, "elimin": [12, 14], "elsewher": [349, 350, 351, 418], "elu": [223, 245, 304, 323], "elumodel": 292, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 159, 161, 163, 165, 170, 171, 172, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 206, 231, 245, 272, 305, 306, 323, 354, 355, 357, 358, 359], "embed_dim": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 305, 355, 356, 357, 358, 359], "embedding_dim": [206, 271, 353], "embedding_lay": 353, "embedding_matrix": 271, "emphas": [93, 100], "emploi": [30, 60, 101, 159, 161, 163, 165], "empti": [213, 219, 424, 454], "empty_lik": 424, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 22, 27, 59, 83, 85, 103, 140, 141, 142, 143, 154, 170, 171, 172, 173, 174, 177, 180, 181, 186, 190, 194, 196, 197, 205, 213, 214, 215, 216, 217, 218, 231, 239, 297, 305, 306, 308, 309, 310, 324, 326, 355, 357, 359, 363, 375, 388, 389, 390, 394, 396, 397, 398, 400, 402, 474], "encapsul": [15, 306, 363, 388, 402], "enclos": [389, 392], "encod": [30, 85, 156, 159, 206, 329, 332, 355, 356, 357, 358, 359, 388], "encoder_lay": [358, 359], "encoderlay": 358, "encompass": 59, "encourag": [238, 314, 316, 317, 318, 319, 328, 329, 332, 379], "end": [23, 193, 221, 224, 225, 226, 239, 292, 294, 295, 296, 297, 299, 315, 330, 331, 332, 346, 347, 348, 349, 350, 351, 383, 385, 408, 409, 411, 414, 419, 425, 429, 436, 438, 440, 455, 459, 461, 470, 471, 485], "enforc": [12, 213, 215, 217, 321, 356, 357, 358, 359], "engin": [15, 24, 402], "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 85, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 161, 163, 165, 169, 170, 171, 172, 173, 175, 176, 185, 188, 195, 204, 215, 217, 282, 298, 369, 485], "enough": 15, "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 174, 183, 203, 212, 213, 214, 215, 216, 217, 218, 219, 228, 231, 260, 261, 262, 263, 271, 275, 276, 277, 296, 301, 306, 313, 314, 315, 316, 317, 318, 319, 321, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 353, 363, 364, 365, 376, 377, 379, 380, 382, 383, 384, 385, 386, 390, 391, 394, 396, 397, 398, 399, 400, 401, 412, 419, 437, 445, 451, 453, 454, 459, 461, 465, 470, 471, 475, 476, 477, 478, 479, 483, 485], "entir": [3, 15, 239, 241, 242, 243, 315, 318, 319, 401], "entri": [60, 86, 96, 97, 459, 465, 467], "entropi": [249, 250, 328, 329], "environ": [15, 45, 47, 96, 97, 100, 402], "ep": [19, 187, 188, 189, 191, 192, 193, 238, 249, 250, 255, 256, 258, 259, 260, 275, 276, 277, 314, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 372, 377, 378, 379, 380, 381, 382, 383, 384], "epoch": [1, 3, 15, 365, 366, 367, 368, 369, 370, 371, 372, 373], "epsilon": [30, 256, 260, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 377, 378, 379, 380, 381, 382, 383, 384], "equal": [22, 273, 346, 347, 348, 419, 454, 466, 476, 478], "equat": [19, 24, 26], "equival": [407, 449, 462], "error": [0, 3, 10, 12, 14, 15, 19, 21, 60, 213, 216, 217, 218, 219, 222, 251, 253, 293, 315, 321, 328, 329, 330, 331, 363, 364, 419, 453], "escap": 367, "especi": [3, 15, 179, 215, 217, 218, 300, 391, 399, 474, 475, 479, 485], "essenti": [1, 3, 16, 22, 24, 82, 233, 236, 363, 399, 401, 436, 474, 475, 479, 485], "estim": [331, 379, 380, 381, 382, 383, 384, 389], "et": [74, 85, 159, 173, 174, 355], "eta": 385, "eta_": [366, 367, 372, 385], "eta_0": [366, 368, 370, 371, 373], "eta_min": 366, "eta_t": [366, 367, 368, 370, 371, 372, 373], "etc": [10, 54, 60, 93, 103, 328, 361, 475], "euclidean": [23, 260], "european": 85, "eval": [15, 315, 402], "evalu": [213, 255, 258, 313, 314, 315, 316, 317, 318, 319, 334, 335, 336, 338, 339, 340, 392, 402, 485], "evaluate_model": 372, "even": [377, 389, 392, 414, 415, 418, 420, 421, 422, 423], "evenli": [261, 262, 263, 343, 344, 345, 414, 419, 454, 466], "everi": [1, 15, 368, 373, 389, 485], "everywher": 440, "exact": [213, 216, 450, 479, 481], "exactli": 219, "exampl": [4, 15, 365, 407], "exc_typ": 392, "exc_valu": 392, "excel": [76, 100, 182, 183], "except": [0, 193, 389, 392, 440, 455, 457, 473], "exchang": 159, "excit": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 281], "exclud": [470, 471], "exclus": [397, 400, 414], "exdb": 8, "execut": [15, 216, 389, 392, 402], "exist": [14, 26, 215, 217, 219, 393, 455], "exit": 389, "exp": [221, 226, 227, 229, 292, 299, 424], "exp_rang": 367, "expand": [4, 10, 14, 49, 85, 236, 453, 463, 469], "expans": [10, 12, 14, 53, 77, 93, 96, 97, 180, 181, 186, 187, 188, 189, 191, 192, 193], "expansion_factor": 92, "expect": [17, 216, 219, 239, 305, 313, 315, 316, 317, 318, 319, 341, 355, 356, 357, 358, 359, 363], "expens": 3, "experi": [15, 93, 399, 401, 485], "experiment": [15, 401], "explan": [22, 24, 28, 39, 145, 152, 261, 262, 263, 343, 344, 345, 376], "explicit": [12, 13, 14, 219, 321], "explicitli": [14, 15, 85, 215, 217, 402], "explod": [299, 334, 335, 336], "explor": [15, 99, 363, 401], "expon": [22, 260, 412], "exponenti": [221, 226, 228, 292, 299, 301, 313, 368, 370, 379, 380, 381, 382, 383, 433], "exponentiallr": [365, 374], "expos": [15, 389], "express": [10, 12, 14, 42, 175, 176, 177, 182], "extend": [4, 85, 103, 123, 140, 159, 195, 202, 311], "extens": [85, 375], "extern": [4, 389], "extra": [53, 72, 101, 202, 453], "extract": [30, 73, 79, 82, 85, 112, 123, 140, 150, 154, 161, 163, 165, 170, 171, 172, 173, 181, 182, 185, 201, 202, 203, 205, 236, 310, 311, 346, 348, 388, 393, 415, 436, 438, 470, 471, 476, 478], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 85, 113, 201, 208], "ey": 424, "f": [1, 4, 5, 6, 7, 8, 15, 85, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 298, 301, 355, 357, 359, 365, 366, 367, 368, 369, 370, 371, 372, 373, 389], "f_1": 281, "f_2": 281, "facilit": [10, 13, 73, 215, 219, 228, 301, 308, 309, 310, 363, 375, 477, 485], "factor": [59, 75, 93, 180, 221, 231, 232, 233, 234, 236, 281, 290, 291, 305, 306, 361, 365, 367, 368, 370, 371, 372, 373, 376, 383, 384, 385, 386], "factori": 151, "failur": [215, 216, 217, 218, 363], "faithfulli": 15, "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 212, 213, 214, 231, 237, 239, 240, 241, 242, 243, 255, 258, 273, 284, 286, 287, 288, 289, 290, 291, 305, 306, 308, 309, 310, 315, 324, 326, 355, 356, 357, 358, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 384, 390, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 436, 437, 438, 445, 451, 452, 459, 475], "famili": [53, 85, 93, 188, 192, 193, 202, 393], "fan": [173, 286, 287, 290, 291], "fan_in": [286, 287], "fan_out": [286, 287], "fashion": [7, 161, 163, 165], "fashion_train": 7, "fashionmnist": 9, "fast": 383, "faster": [85, 181, 365, 378, 382, 392], "fc": [15, 82, 112, 123, 130, 140, 216, 281, 309, 310, 346, 347, 348, 349, 350, 351], "fc1": [15, 88, 89, 155, 215, 219, 293, 294, 295, 297, 298, 299, 300, 302, 303, 326], "fc2": [15, 88, 89, 155, 215, 219, 293, 294, 295, 297, 299, 300, 302, 303, 326], "fc3": 89, "featur": [3, 15, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 85, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 189, 193, 201, 202, 203, 205, 238, 246, 248, 255, 256, 275, 276, 277, 281, 282, 310, 314, 316, 317, 318, 319, 324, 326, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 363, 378], "feature_extractor": 86, "fed": [3, 485], "feed": [3, 485], "feedforward": [155, 156, 206, 355, 357, 359], "femto": [47, 85], "fergu": [85, 152], "fetch": 0, "few": 155, "fewer": [1, 85, 104, 105, 106, 107, 108, 109, 190, 453], "field": [5, 6, 8, 85, 140, 144, 174, 190, 282], "file": [3, 393], "fill": [284, 288, 289, 396, 397, 398, 400, 420, 421, 422, 423], "filter": [60, 85, 93, 152, 232, 233, 234, 236, 275, 276, 277, 309, 310], "filter_height": 236, "filter_s": 236, "filter_width": 236, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 159, 206, 215, 216, 217, 218, 219, 231, 282, 305, 355, 356, 358, 389, 402, 474, 485], "find": [26, 436, 438], "fine": [99, 102, 159, 173, 174, 281, 485], "finer": 181, "finest": 182, "first": [5, 6, 7, 8, 19, 86, 152, 155, 194, 195, 196, 197, 216, 217, 246, 281, 324, 365, 379, 380, 381, 382, 383, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 446, 454, 460, 473, 474, 475, 485], "fit": [14, 363], "fix": [173, 190, 194, 216, 368, 371, 373, 402, 461], "flag": [15, 389, 392], "flat": [173, 194], "flatten": [12, 82, 86, 219, 236, 311, 411, 458, 462, 463, 465], "flexibl": [1, 3, 4, 10, 12, 14, 40, 73, 82, 83, 84, 85, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 215, 216, 217, 218, 219, 321, 361, 363, 370, 375, 402, 420, 421, 475, 485], "flexibli": 13, "flip": [480, 482, 485], "float": [2, 5, 6, 7, 8, 19, 24, 39, 40, 59, 60, 75, 77, 90, 94, 156, 159, 174, 180, 181, 182, 183, 184, 185, 186, 194, 195, 206, 212, 214, 221, 224, 231, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 255, 256, 258, 259, 260, 271, 274, 275, 276, 277, 284, 288, 289, 290, 291, 292, 296, 305, 306, 313, 314, 315, 316, 317, 318, 319, 328, 329, 330, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 357, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 394, 400, 402, 414, 415, 416, 417, 418, 419, 420, 422, 429, 452, 459, 475, 477, 479, 480, 481, 482], "float32": [212, 214, 388, 402, 414, 415, 418, 420, 422, 452, 475], "float64": [388, 423, 452, 475], "floor": 373, "flop": [85, 173, 389], "flow": [30, 76, 82, 85, 130, 219, 238, 291, 293, 300, 303, 308, 309, 310, 324, 326, 390, 459], "fluctuat": 367, "fly": [2, 3], "fn": 392, "fname": 3, "focu": 30, "follow": [0, 12, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 221, 222, 224, 225, 226, 227, 228, 229, 231, 246, 248, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 313, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 363, 367, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 393, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 436, 438, 446, 453, 460, 464, 476, 477, 478, 479, 480, 481, 482, 485], "footprint": 178, "foral": [356, 358], "forc": [15, 238], "form": [15, 25, 159, 282, 356, 358, 411, 460, 463, 469, 485], "format": [2, 3, 5, 6, 7, 8, 155, 329, 332, 475], "formul": [222, 260], "formula": [19, 27, 228, 261, 262, 263, 301, 302, 330, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 407, 451, 479], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 159, 212, 213, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389], "foundat": [15, 82, 93, 130, 213, 363, 375], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 174, 187, 188, 189, 191, 192, 193, 461], "frac": [13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 159, 174, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 239, 246, 248, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 357, 359, 366, 377, 378, 379, 380, 381, 382, 383, 384, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 477], "frame": 243, "framework": [4, 10, 15, 154, 329, 332, 334, 335, 336, 338, 339, 340, 364, 375, 485], "free": [15, 388], "frequent": [329, 332], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 159, 174, 175, 176, 177, 178, 179, 181, 212, 213, 214, 215, 216, 217, 218, 219, 236, 238, 246, 255, 258, 271, 273, 275, 276, 277, 281, 282, 284, 286, 287, 288, 289, 290, 291, 298, 305, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 356, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 393, 394, 396, 397, 398, 400, 401, 402, 407, 408, 409, 413, 415, 436, 437, 438, 445, 451, 455, 457, 460, 463, 466, 467, 468, 469, 473, 476, 477, 478, 479, 480, 481, 482, 485], "fu": 173, "full": [15, 27, 94, 96, 97, 156, 206], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 248, 281, 282, 326, 401, 402], "func": 393, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 169, 213, 215, 216, 217, 218, 219, 275, 276, 277, 281, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 314, 316, 317, 318, 319, 321, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 355, 357, 359, 363, 366, 367, 369, 370, 373, 375, 401, 474, 485], "fundament": [231, 248, 326, 402, 475], "further": [13, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 203, 401, 437, 445, 451], "fuse": [30, 140, 173, 389], "fusion": [141, 142, 143, 159], "futur": [231, 306, 325, 358, 359], "g": [0, 10, 15, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 103, 145, 154, 159, 169, 173, 179, 194, 195, 281, 282, 313, 364, 377, 384, 388, 402, 455, 479], "g_": 378, "g_t": 384, "gain": [290, 291], "gamma": [256, 334, 335, 336, 337, 338, 339, 340, 341, 365, 367, 368, 369, 371, 373], "gamma_c": [256, 337], "gap": [112, 123, 140, 281], "gaussian": [222, 293], "gelu": [169, 174, 223, 245, 304, 323], "gelunetwork": 293, "gener": [15, 24, 41, 46, 50, 155, 156, 239, 274, 311, 313, 314, 316, 317, 318, 319, 339, 355, 380, 382, 383, 389, 394, 396, 397, 398, 399, 400, 401, 406, 414, 416, 417, 419, 460, 478, 479, 480, 482, 485], "geoffrei": [5, 6], "geq": 470, "get": [5, 6, 7, 8], "get_lr": [366, 367, 368, 369, 370, 371, 372, 373], "git": 15, "github": [7, 15], "give": [376, 384], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 236, 260, 271, 305, 306, 311, 321, 328, 329, 332, 364, 388, 390, 394, 421, 423, 459, 466, 474, 479, 480, 482, 485], "global": [0, 59, 85, 112, 123, 130, 140, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 180, 182, 185, 186, 190, 194, 196, 197, 198, 199, 201, 202, 203, 256, 281, 337, 389, 390, 392, 399, 401], "global_response_norm": [245, 257], "globalresponsenorm": [323, 342], "go": [10, 74, 85], "goal": [328, 329, 332], "googlenet": [74, 85], "gpu": [85, 179, 212, 214, 388, 394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "grad": [15, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 239, 246, 248, 273, 278, 279, 280, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 364, 375, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 480, 482, 483], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 85, 212, 214, 311, 314, 363, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 392, 394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 452, 475], "gradual": [365, 366, 368], "grain": [159, 173, 174, 281], "graph": [15, 291, 389, 392, 402, 414, 415, 418, 420, 421, 422, 423, 475], "grayscal": [7, 8, 86, 87, 88, 89, 479, 485], "great": 185, "greater": [49, 184, 429, 454], "green": 479, "grid": [154, 173, 174, 460], "grid_window_s": 174, "gridattent": 174, "grn": 337, "groundbreak": 85, "group": [85, 93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 216, 232, 233, 234, 275, 276, 277, 282, 308, 309, 310, 364, 365, 375], "group1": 216, "group2": 216, "groupedconvblock": 123, "grow": 15, "growth_rat": [54, 55, 56, 57, 58], "guarante": 399, "h": [10, 12, 13, 14, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 208, 231, 233, 234, 236, 238, 242, 243, 256, 262, 263, 265, 266, 269, 270, 273, 274, 276, 277, 281, 305, 306, 321, 335, 336, 337, 339, 340, 344, 345, 348, 351, 355, 357, 359, 476, 478], "h_": [233, 234, 262, 263, 265, 266, 269, 270, 273, 309, 310, 311, 344, 345, 347, 348, 350, 351], "h_out": [233, 234, 265, 266, 269, 270], "h_stack": 457, "ha": [0, 19, 41, 155, 159, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 219, 232, 233, 234, 275, 276, 277, 298, 302, 328, 329, 334, 335, 336, 338, 339, 340, 341, 361, 364, 375, 402, 407, 449, 453, 455, 457, 468, 473, 479], "hackabl": 15, "haip": 173, "half": [367, 443], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 173, 201, 213, 215, 216, 217, 218, 219, 271, 329, 332, 363, 375, 388], "handwritten": [7, 8, 89], "hang": 85, "hard": [96, 97, 295], "hard_sigmoid": 294, "hardsigmoid": [295, 304, 323], "hardswish": [304, 323], "hardwar": 179, "hashabl": 402, "hat": [30, 379, 380, 381, 382, 383], "have": [0, 1, 15, 18, 19, 21, 24, 25, 27, 214, 216, 218, 219, 233, 234, 238, 260, 271, 291, 353, 363, 418, 420, 421, 422, 423, 436, 438, 455, 457, 459, 460, 467, 468, 473, 477, 483], "he": 85, "head": [30, 39, 77, 92, 150, 156, 159, 170, 171, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 231, 305, 306, 355, 357, 359], "head_dim": 159, "head_fn": 77, "heart": 15, "height": [30, 150, 233, 234, 236, 242, 243, 256, 262, 263, 265, 266, 269, 270, 273, 274, 282, 309, 310, 311, 335, 336, 337, 339, 340, 344, 345, 347, 348, 350, 351, 361, 476, 478, 483], "help": [30, 75, 161, 163, 165, 169, 224, 226, 243, 271, 292, 296, 298, 299, 303, 334, 335, 336, 346, 347, 349, 350, 353, 365, 367, 372, 373, 376, 379, 380, 382, 390, 391, 446], "henc": 464, "here": [3, 17, 213, 246, 363, 375, 391, 401, 474, 475, 485], "hidden": [28, 152, 156, 159, 174, 182, 183, 184, 185, 194, 195, 206, 216], "hidden_s": 216, "hierarch": [39, 40, 85, 161, 163, 165, 173, 180, 181, 182, 183, 184, 185, 186, 187, 192, 194, 195, 216, 219, 363], "hierarchi": 309, "hierarchicalnetwork": 216, "high": [42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 172, 173, 174, 175, 176, 179, 181, 183, 191, 192, 193, 201, 202, 203, 208, 209, 365, 397, 400], "higher": [49, 60, 90, 98, 123, 201, 329, 332, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 406, 407, 411, 433, 446], "highest": [53, 101, 179, 397], "highli": [15, 30, 45, 53, 85, 95, 173, 182, 200, 370], "highlight": [281, 349, 350, 351], "hinton": [5, 6], "histor": 378, "histori": [394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 420, 421, 422, 423], "hold": [93, 215, 216, 217, 218], "horizont": [457, 468, 480, 485], "hot": [329, 332], "how": [2, 3, 12, 14, 136, 137, 138, 139, 144, 182, 216, 219, 321, 363, 485], "howard": 85, "howev": [212, 291], "hstack": 458, "html": [5, 6], "http": [5, 6, 7, 8, 15], "hu": [85, 281], "huang": 85, "huber": [251, 330], "huber_loss": [245, 252], "huberloss": [323, 333], "huberregressionmodel": 330, "hue": 485, "huge": [48, 85, 173, 182], "hybrid": [85, 101, 102, 169, 173], "hyperbol": [229, 303, 431, 442, 448], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 180, 364, 376], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "i_1": [12, 13, 14, 321], "i_2": [12, 13, 14, 321], "i_k": 14, "i_m": [12, 14, 321], "iccv": 85, "iclr": 173, "idea": 85, "ideal": [42, 46, 50, 90, 93, 102, 179, 182, 219], "ident": [21, 22, 77, 85, 274, 315, 323, 327, 399, 401, 418, 464], "identifi": 217, "idx": [2, 3], "ieee": [85, 173, 281], "ignor": [355, 356, 357, 358, 359], "ii": 449, "ij": [30, 228, 273, 301, 405, 406, 407, 411, 460, 470, 471], "ik": [405, 406, 407], "ill": [18, 24], "ilsvrc": 85, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "image_dir": 3, "image_path": 3, "image_s": [206, 207, 208, 209, 210, 211], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144], "imbal": [329, 332], "img_siz": [30, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "impact": [85, 382], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 85, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 156, 169, 173, 180, 181, 194, 206, 213, 236, 239, 278, 279, 280, 282, 305, 306, 311, 315, 337, 357, 359, 364, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 457, 473, 479], "impli": [308, 309], "implicit": 311, "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "improp": [10, 216, 219, 401], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 85, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 158, 161, 163, 165, 169, 171, 173, 174, 181, 188, 190, 194, 195, 202, 203, 205, 238, 239, 255, 271, 274, 281, 293, 299, 303, 321, 353, 365, 366, 367, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 478, 481, 485], "imread": 3, "in1_featur": [246, 324], "in2_featur": [246, 324], "in_channel": [30, 112, 159, 169, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 216, 219, 275, 276, 277, 278, 279, 280, 281, 282, 308, 309, 310, 335, 336, 346, 347, 348, 349, 350, 351, 363], "in_featur": [215, 216, 219, 248, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 309, 310, 313, 316, 317, 324, 326, 328, 329, 330, 331, 332, 334, 338, 341, 346, 347, 348, 349, 350, 351], "incept": [74, 75, 76, 77, 82, 83, 84], "inception_next": 77, "inception_next_atto": 85, "inception_next_bas": 85, "inception_next_smal": 85, "inception_next_tini": 85, "inception_resnet_v1": 85, "inception_resnet_v2": 85, "inception_v1": 85, "inception_v3": 85, "inception_v4": 85, "inceptionnext": [78, 79, 80, 81], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 170, 171, 172, 174, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 216, 218, 219, 273, 275, 276, 277, 278, 279, 280, 357, 359, 361, 363, 364, 369, 375, 382, 389, 401, 407, 461, 470, 471], "inclus": [214, 217, 397, 400, 419], "incom": [248, 326], "incompat": 453, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 85, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 202, 204, 293], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 174, 177, 179, 182, 183, 185, 188, 193, 232, 233, 234, 236, 274, 367, 372, 378, 385, 391, 457, 473, 479, 480, 482, 485], "independ": [159, 216, 232, 233, 234, 305, 313, 316, 317, 318, 319, 341, 407, 417, 477, 479, 481, 483], "index": [0, 2, 5, 6, 7, 8, 10, 12, 256, 271, 321, 337, 353, 366, 367, 368, 369, 370, 371, 373, 391, 402, 414, 415, 418, 460, 464], "indexerror": 0, "indic": [0, 1, 13, 14, 15, 110, 111, 145, 155, 170, 171, 172, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 216, 218, 219, 250, 254, 271, 329, 332, 346, 353, 355, 356, 357, 358, 359, 371, 388, 390, 402, 476, 478], "individu": [3, 216, 219, 330, 341, 375, 378, 385], "induc": [226, 299], "induct": [161, 163, 165, 169, 173], "inf": 447, "infer": [136, 137, 138, 139, 144, 181, 216, 219, 388, 392], "infin": [25, 27, 381], "inform": [30, 85, 155, 159, 173, 182, 196, 197, 198, 199, 204, 212, 281, 369, 375, 377], "infti": [23, 383], "inherit": [1, 376, 384, 386], "init": 285, "initi": [1, 15, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 174, 178, 200, 201, 202, 203, 212, 214, 215, 216, 217, 218, 219, 282, 284, 286, 287, 288, 289, 290, 291, 305, 308, 309, 310, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 341, 353, 357, 359, 361, 363, 364, 366, 368, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 396, 399, 400, 401, 414, 418, 419, 420, 421, 422, 423, 452], "initial_accumulator_valu": 378, "inner": [405, 424], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 155, 159, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 392, 401, 402, 403, 405, 406, 407, 411, 415, 417, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "input1": 324, "input2": 324, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 337, 343, 344, 345, 353, 454, 470, 471], "input_1": 246, "input_2": 246, "input_data": [292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 316, 317, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351], "input_indic": [271, 353], "input_s": [216, 218, 301, 329, 332], "input_shap": 155, "input_tensor": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 159, 174, 175, 176, 177, 178, 179, 212, 215, 216, 217, 218, 219, 228, 238, 239, 260, 278, 279, 280, 281, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 361, 363, 476, 477, 478, 479, 480, 481, 482, 483], "insid": [3, 389, 390], "insight": 85, "inspect": [15, 213, 214, 219, 364], "inspir": [10, 12, 14, 15, 39, 85], "instabl": [24, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "instanc": [0, 1, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 258, 298, 338, 339, 340, 341, 355, 356, 358, 364, 388, 392, 393, 452, 463, 469, 485], "instance_norm": [245, 257, 338, 339, 340], "instancenorm1d": [323, 342], "instancenorm1dmodel": 338, "instancenorm2d": [323, 342], "instancenorm3d": [323, 342], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 393], "instead": [155, 161, 163, 165, 215, 216, 217, 218, 219, 286, 287, 290, 291, 353, 355, 357, 359, 379, 380, 381, 416, 417], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 228, 231, 232, 233, 234, 236, 238, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 289, 290, 291, 301, 305, 306, 308, 309, 310, 311, 314, 321, 324, 326, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 381, 382, 383, 385, 388, 393, 394, 396, 397, 398, 399, 400, 402, 414, 415, 416, 417, 418, 419, 420, 422, 429, 436, 437, 438, 445, 446, 450, 451, 452, 453, 454, 455, 456, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 478, 483], "int32": 353, "int64": [388, 402], "integ": [1, 3, 22, 130, 145, 232, 233, 234, 262, 263, 305, 308, 309, 310, 311, 341, 344, 345, 347, 348, 349, 350, 351, 397, 398, 400, 401, 416, 420, 422, 437, 445, 450, 451, 461, 463, 464, 466, 469], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 15, 16, 85, 101, 103, 156, 159, 169, 170, 171, 172, 174, 214, 216, 218, 219, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 321, 324, 326, 346, 347, 348, 349, 350, 351, 402], "intellig": [85, 281], "intend": [10, 183, 212, 217, 218], "intens": [24, 54, 113, 477, 479], "interact": [174, 194, 246, 324, 363, 401], "interdepend": 85, "interfac": [2, 15, 213, 216, 375], "interfer": 390, "intermedi": [24, 110, 111, 182, 281, 355, 357, 359, 402], "intern": [15, 85, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 173, 215, 216, 217, 218, 219, 329, 332, 363, 476, 477, 478, 479, 480, 481, 482, 483], "interpol": [245, 272, 361, 419, 483], "interpret": [10, 85, 228, 301, 455], "interv": [371, 373, 396, 400, 414], "introduc": [40, 60, 74, 75, 85, 90, 91, 92, 123, 161, 163, 165, 169, 173, 174, 180, 181, 189, 205, 225, 281, 293, 297, 298, 300, 303, 313, 316, 317, 318, 319, 355, 478, 481, 485], "introspect": [15, 219], "intuit": [10, 12, 15, 215, 217, 363, 485], "inv": 20, "inv_a": 21, "invari": [347, 350], "invers": [18, 21, 22, 24, 367, 378, 426, 427, 428], "invert": [18, 21, 22, 26, 85, 91, 92, 95], "invit": 15, "invok": 393, "involv": [12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 140, 221, 222, 224, 225, 226, 227, 229, 246, 248, 273, 308, 309, 310, 321, 324, 326, 394, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 423, 433, 434, 435, 436, 438, 441, 443, 460, 461, 463, 469], "is_all_fre": 402, "is_bit_fre": 388, "is_caus": [231, 306, 358, 359], "is_fre": 402, "is_leaf": 402, "isn": 15, "issu": [3, 15, 299, 334, 335, 336, 379, 380], "item": [7, 15, 331], "iter": [0, 1, 2, 3, 212, 213, 216, 218, 356, 358, 364, 367, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 414], "ith": [228, 301], "its": [4, 15, 22, 24, 28, 40, 85, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 155, 179, 181, 212, 215, 216, 217, 218, 232, 233, 234, 236, 274, 282, 291, 293, 297, 302, 314, 349, 350, 351, 363, 364, 377, 385, 389, 390, 391, 393, 414, 416, 417, 422, 436, 438, 452, 453, 464, 466, 477, 480, 482, 485], "itself": [17, 22, 215, 216, 217, 218, 365, 392], "j": [8, 10, 12, 13, 14, 30, 228, 271, 281, 301, 321, 334, 335, 336, 338, 339, 340, 346, 347, 349, 350, 353, 460, 468, 470, 471, 476, 478], "j_1": [12, 14, 321], "j_2": [12, 14, 321], "j_k": 14, "j_n": [12, 14, 321], "jie": 85, "jk": 406, "join": [3, 455], "json": 393, "k": [22, 30, 85, 159, 174, 181, 231, 232, 305, 306, 308, 329, 335, 336, 339, 340, 346, 349, 350, 359, 405, 406, 415, 418, 455, 466], "k_2": 159, "k_d": [234, 310, 348, 351], "k_h": [233, 234, 309, 310, 311, 347, 348, 351], "k_i": 305, "k_j": 30, "k_w": [233, 234, 309, 310, 311, 347, 348, 351], "kaim": [85, 286, 287, 290, 291], "kaiming_norm": 285, "kaiming_uniform": 285, "kalenichenko": 85, "karen": 85, "kashif": 7, "kdim": 305, "keep": [213, 239, 297, 377, 389, 464, 470, 471], "keep_grad": [214, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 452, 475], "keep_var": 213, "keepdim": [23, 436, 437, 438, 445, 451], "kei": [15, 93, 154, 159, 169, 174, 180, 186, 187, 188, 189, 191, 192, 193, 194, 195, 213, 215, 217, 219, 231, 305, 306, 359, 364], "kept": [437, 445, 451], "kernel": [85, 86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 311, 343, 344, 345, 347, 348, 351, 389], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 216, 219, 264, 265, 266, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 311, 321, 335, 336, 346, 347, 348, 349, 350, 351], "keyerror": 213, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 213, 325], "kj": [405, 407], "known": 85, "kriz": [5, 6], "krizhevski": [5, 6, 85], "kroneck": [12, 228, 301, 321], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 325, 393], "l": [17, 24, 69, 85, 173, 209, 231, 232, 241, 261, 264, 268, 275, 281, 306, 311, 313, 316, 317, 318, 319, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 358, 359, 446, 453], "l1": 260, "l2": [260, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "l_": [173, 232, 261, 264, 268, 308, 343, 346, 349, 355], "l_k": 305, "l_m": [356, 357], "l_out": [232, 264, 268], "l_q": 305, "l_t": [355, 356, 357], "l_v": 305, "label": [4, 5, 6, 7, 8, 75, 328, 329, 332], "lambd": 376, "lambda": [19, 226, 299, 370, 376, 380], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 370, "lambda_i": 19, "lambda_n": 19, "lambdalr": 374, "languag": [4, 308, 324, 346, 349, 355], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 85, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 161, 163, 165, 173, 174, 175, 176, 179, 182, 183, 193, 197, 201, 202, 203, 207, 208, 209, 278, 279, 280, 298, 330, 363, 376, 379, 380, 381, 384, 385, 386], "larger": [41, 59, 60, 112, 140, 158, 159, 162, 171, 172, 174, 175, 176, 202, 215, 217, 232, 233, 234, 236, 238, 314, 376, 408, 454, 461, 476, 478, 483], "largest": [53, 182, 193, 201, 436], "last": [1, 228, 259, 301, 366, 367, 368, 369, 370, 371, 373, 406, 407, 454, 455, 480, 482], "last_channel": 92, "last_epoch": [366, 367, 368, 369, 370, 371, 373], "last_lr": [365, 366, 367, 368, 369, 370, 371, 372, 373], "later": [30, 85], "latest": [4, 15], "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195, 201, 202, 206, 213, 215, 216, 219, 228, 239, 248, 255, 258, 259, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 301, 306, 308, 309, 310, 315, 324, 325, 326, 332, 341, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 363, 401, 461, 475], "layer1": 393, "layer2": 393, "layer_group": 216, "layer_norm": [245, 257, 341], "layer_norm_ep": [355, 357, 359], "layer_scale_init": 39, "layer_sequ": [216, 219], "layernorm": [159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 323, 342, 355, 356, 357, 358, 359], "layernormmodel": 341, "le": 85, "lead": [10, 15, 216, 219, 260, 293, 338, 339, 340, 341, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 401, 453], "leaf": 402, "leaki": [224, 296], "leaky_relu": [223, 245, 296], "leakyrelu": [304, 323], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 85, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 173, 174, 182, 186, 215, 216, 217, 218, 225, 228, 281, 292, 296, 297, 301, 308, 309, 310, 316, 317, 318, 319, 321, 324, 326, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 399, 419, 466, 470, 471, 474, 475, 485], "learnabl": [30, 159, 194, 195, 212, 213, 214, 255, 256, 258, 259, 275, 276, 277, 305, 308, 309, 310, 324, 326, 334, 335, 336, 337, 338, 339, 340, 341, 359, 363], "least": [24, 25, 27, 361, 449, 470, 471], "lecun": [8, 85], "left": [22, 23, 24, 27, 30, 159, 174, 222, 228, 260, 293, 301, 305, 311, 328, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 349, 350, 351, 357, 359, 446, 476, 478], "leftarrow": 382, "len": [0, 1, 2, 3, 460], "lenet": [87, 88, 89], "lenet_1": 85, "lenet_4": 85, "lenet_5": 85, "length": [159, 174, 216, 231, 232, 241, 261, 264, 268, 308, 325, 334, 338, 343, 346, 349, 358, 359, 461, 477], "leq": [294, 295, 330, 371, 383, 412, 429, 471], "lerp": 273, "less": [0, 221, 224, 251, 292, 296, 329, 330, 332, 419, 429], "let": 19, "level": [82, 174, 182, 183, 184, 185, 311], "leverag": [12, 13, 14, 15, 26, 30, 76, 77, 84, 85, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 187, 190, 196, 197, 198, 199, 200, 201, 282, 363], "lfloor": [311, 373], "li": [85, 190], "librari": [3, 10, 15, 16, 213, 363, 364, 375, 393, 401, 402, 485], "lie": 394, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 164, 178, 186, 190, 198, 199, 205, 211, 282, 295, 298], "like": [12, 13, 14, 15, 60, 82, 85, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 161, 163, 165, 173, 203, 212, 213, 216, 219, 232, 238, 290, 291, 299, 313, 314, 321, 334, 335, 336, 338, 339, 340, 390, 391, 452, 475, 485], "likelihood": [254, 329, 332], "limit": [44, 51, 96, 97, 98, 100, 155, 298, 377, 429], "linalg": 20, "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "line": [15, 392], "linear": [15, 16, 17, 24, 25, 26, 77, 85, 91, 95, 130, 155, 173, 174, 181, 187, 188, 189, 190, 191, 192, 193, 215, 216, 217, 219, 221, 222, 224, 225, 226, 239, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 313, 315, 316, 317, 324, 325, 328, 329, 330, 331, 332, 334, 338, 341, 346, 347, 348, 349, 350, 351, 355, 357, 359, 365, 393, 418], "linearli": 330, "linspac": 424, "linspace_tensor": 419, "list": [0, 1, 15, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 159, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 214, 215, 216, 217, 218, 259, 282, 325, 341, 364, 366, 367, 368, 369, 370, 371, 372, 373, 394, 396, 397, 398, 400, 402, 415, 416, 417, 420, 421, 422, 423, 450, 453, 464, 466, 467, 472, 474], "listdir": 3, "liter": [13, 112, 212, 214, 249, 250, 251, 253, 254, 273, 275, 276, 277, 278, 279, 280, 282, 286, 287, 308, 309, 310, 328, 329, 330, 331, 332, 361, 367, 372, 388, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 460], "liu": [85, 173], "ln": 412, "load": [3, 4, 5, 6, 7, 8, 212, 213, 214, 364, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393], "load_state_dict": [213, 364, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "loader": [1, 2, 3], "local": [15, 30, 85, 161, 163, 165, 169, 170, 171, 172, 173, 174, 180, 182, 185, 194, 195, 196, 197, 198, 199, 236, 308, 311, 367], "locat": [85, 273], "log": [195, 254, 328, 329, 332, 366, 367, 368, 369, 370, 371, 372, 373, 424, 435], "log2": 424, "log_2": 435, "log_softmax": 332, "logarithm": [412, 433, 434, 435], "logic": [3, 343, 344, 345, 363, 364], "logit": [28, 39, 152, 228, 301, 329, 389], "logsoftmax": [329, 332], "long": [30, 154, 173, 174, 183, 382, 450], "lookup": [271, 353], "loop": [1, 12, 13, 14, 15, 216, 321, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "loss": [15, 24, 215, 216, 217, 218, 219, 228, 249, 250, 251, 253, 254, 292, 293, 296, 297, 299, 300, 301, 303, 313, 316, 317, 318, 319, 325, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "low": [82, 91, 96, 97, 100, 397, 400], "lower": [17, 90, 289, 311, 356, 357, 358, 359, 367, 376, 384, 385, 386, 400, 470, 471], "lower_triangular": 470, "lowest": 397, "lp": 260, "lr": [15, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "lr_lambda": 370, "lr_schedul": 374, "lrschedul": 374, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 395, 424, 458, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "m": [70, 85, 145, 173, 215, 216, 219, 305, 347, 348, 350, 351, 355, 356, 359, 371, 379, 380, 381, 382, 383, 418, 470, 471], "m1": 15, "m2": 15, "m3": 15, "m_": [379, 380, 381, 382, 383, 470, 471], "m_m": 357, "m_t": [357, 382, 383], "maaten": 85, "mac": 15, "machin": [3, 7, 8, 24, 85, 156, 281, 355, 379, 391, 399], "magnitud": [239, 271, 353, 384, 385, 485], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 216, 218, 260, 274, 315, 321, 330, 365, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 389, 401, 454, 479, 485], "main": [25, 82, 216, 415, 418, 470, 471], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 85, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 159, 168, 170, 171, 172, 177, 184, 185, 186, 188, 189, 190, 191, 195, 212, 213, 215, 216, 217, 219, 226, 239, 286, 287, 290, 291, 292, 293, 299, 313, 315, 316, 317, 318, 319, 334, 335, 336, 338, 339, 340, 379, 384, 476, 479, 483], "major": 15, "make": [1, 3, 10, 30, 42, 43, 46, 47, 73, 82, 85, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 173, 179, 182, 191, 196, 197, 198, 199, 200, 204, 205, 207, 210, 216, 219, 300, 329, 330, 341, 347, 350, 363, 378, 379, 380, 381, 391, 393, 401, 407, 460, 466, 474, 485], "manag": [213, 215, 216, 217, 218, 219, 363, 375, 389, 390, 392, 393, 401], "manhattan": 23, "mani": 155, "manipul": [10, 12, 215, 217, 485], "manner": [10, 12, 13, 194, 216, 219, 388], "manual": [10, 249, 250, 254, 311, 328, 329, 332], "map": [12, 14, 77, 85, 110, 111, 112, 123, 133, 140, 174, 213, 227, 229, 238, 256, 281, 300, 303, 315, 321, 337, 353, 389, 454], "mark": 459, "marri": 85, "mask": [85, 212, 231, 305, 306, 313, 316, 317, 318, 319, 355, 356, 357, 358, 359, 459, 470, 471], "masked_fil": 458, "match": [10, 14, 15, 26, 159, 213, 216, 219, 231, 249, 251, 253, 259, 275, 276, 277, 314, 353, 364, 433, 453, 463, 464, 466, 469, 472, 477, 485], "math": [305, 430, 441, 447], "mathbb": [305, 466], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 246, 248, 273, 278, 279, 280, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 306, 308, 309, 310, 313, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 405, 406, 407, 411, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 457, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483], "mathcal": [286, 288, 290, 313, 316, 317, 318, 319, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341], "mathemat": [15, 21, 275, 276, 277, 478, 480, 481, 482], "mathrm": 24, "matmul": [311, 424], "matric": [16, 18, 19, 21, 24, 26, 27, 305, 359, 405, 406, 407, 418, 460, 470, 471], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 236, 246, 271, 311, 325, 326, 353, 363, 405, 446, 460], "matrix_pow": 20, "matthew": 85, "max": [10, 23, 130, 145, 225, 260, 268, 269, 270, 271, 294, 295, 297, 298, 349, 350, 351, 353, 366, 367, 372, 381, 408, 424, 429], "max_lr": 367, "max_norm": [271, 353], "max_pool": [349, 350, 351], "max_pool1d": [245, 267], "max_pool2d": [245, 267], "max_pool3d": [245, 267], "max_valu": 429, "maxim": [3, 48, 101], "maximum": [23, 179, 297, 298, 349, 350, 351, 366, 367, 379, 381, 424, 429, 436, 481], "maxpool": [28, 152], "maxpool1d": [323, 352], "maxpool1dmodel": 349, "maxpool2d": [216, 219, 309, 323, 352], "maxpool2dmodel": 350, "maxpool3d": [310, 323, 352], "maxpool3dmodel": 351, "maxvit": [175, 176, 177, 178, 179], "maxvit_bas": 173, "maxvit_larg": [173, 176], "maxvit_smal": 173, "maxvit_tini": [173, 177], "maxvit_xlarg": 173, "mbconv": 174, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 212, 226, 232, 233, 234, 237, 249, 250, 251, 253, 254, 255, 258, 275, 276, 277, 288, 292, 293, 294, 296, 297, 299, 300, 303, 310, 313, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 372, 379, 380, 381, 382, 383, 384, 390, 398, 424, 429, 433, 434, 435, 436, 438, 441, 443, 445, 449, 450, 451, 474, 477, 485], "meaning": [13, 219], "measur": [328, 329, 331, 332], "mechan": [30, 110, 111, 130, 140, 144, 154, 156, 159, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 190, 195, 196, 197, 198, 199, 200, 203, 204, 206, 218, 246, 305, 454], "media": 173, "medium": [47, 51, 70, 85, 98, 99, 102, 160, 173, 184], "meet": 85, "mem_is_caus": [356, 357], "mem_key_padding_mask": [355, 356, 357], "mem_mask": [355, 356, 357], "membership": 328, "memori": [2, 3, 15, 54, 190, 355, 356, 357, 392, 416, 417], "merg": [12, 321], "meshgrid": 458, "metal": [388, 402], "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 215, 216, 217, 218, 219, 249, 250, 251, 253, 254, 286, 287, 290, 291, 328, 329, 330, 331, 332, 361, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 401], "metric": 372, "mha": 305, "mid": [80, 210], "mid_channel": [96, 97], "middl": [175, 176, 391], "might": 363, "migrat": 15, "mileston": 371, "min": [294, 295, 298, 366, 367, 372, 409, 424, 429], "min_lr": 372, "min_valu": 429, "mind": [0, 3, 216, 219, 392], "mingx": 85, "mini": 1, "minim": [4, 78, 85, 92, 219, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 375], "minima": 367, "minimalist": 15, "minimum": [366, 367, 372, 424, 429, 438], "minu": 300, "mirror": [421, 423], "mismatch": [10, 12, 14, 60, 174, 213, 321, 363, 364], "miss": [213, 363], "mitig": [224, 292, 296, 299, 334, 335, 336], "mix": [77, 389, 392], "mixer": 77, "mlp": [15, 77, 159, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 282], "mlp_dim": 206, "mlp_ratio": [77, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195], "mlx": [179, 388, 402], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [85, 90, 91, 92, 93, 95, 96, 97, 100, 187], "mobilenet": [91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 298], "mobilenet_v2": 85, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 85, "mobilenet_v3_smal": 85, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 85, "mobilenet_v4_conv_medium": 85, "mobilenet_v4_conv_smal": 85, "mobilenet_v4_hybrid_larg": 85, "mobilenet_v4_hybrid_medium": 85, "mobilenetv2": [85, 91], "mobilenetv3": [85, 92, 96, 97], "mode": [15, 243, 255, 258, 273, 286, 287, 313, 315, 316, 317, 318, 319, 361, 367, 372, 402, 461], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 231, 238, 271, 274, 275, 276, 277, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392, 393, 401, 474, 475, 485], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134, 191], "modern": [15, 39, 40, 77, 85], "modif": [151, 219], "modifi": [15, 29, 98, 112, 150, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 215, 216, 217, 218, 284, 286, 287, 288, 289, 290, 291, 313, 365, 390, 399, 402, 457, 459, 465, 473], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 85, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 180, 181, 194, 195, 212, 214, 215, 216, 217, 218, 219, 239, 275, 276, 277, 278, 279, 280, 281, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 364, 365, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 401, 475, 485], "modular": [3, 15, 154, 156, 213, 216, 219, 363, 485], "moduledict": [216, 217, 219, 220], "modulelist": [218, 219, 220], "moment": [379, 380, 381, 382, 383], "momentum": [255, 258, 275, 276, 277, 334, 335, 336, 338, 339, 340, 367, 376, 382, 384, 386], "momentum_decai": 382, "monitor": 372, "monoton": 302, "moor": 24, "more": [3, 4, 7, 10, 19, 42, 112, 119, 158, 161, 163, 165, 172, 175, 176, 177, 183, 184, 185, 189, 201, 202, 204, 205, 215, 216, 219, 238, 278, 279, 280, 292, 316, 317, 318, 319, 355, 363, 364, 375, 376, 377, 380, 381, 384, 385, 386, 398, 407, 449, 468, 470, 471, 485], "most": [16, 46, 85, 182, 350, 475, 476, 485], "move": [15, 376, 384], "mse": [251, 253, 330, 331], "mse_loss": [15, 245, 252], "mseloss": [323, 333], "mu": [30, 288, 334, 335, 336, 338, 339, 340, 341, 451], "mu_c": 477, "mu_i": [338, 339, 340], "much": [182, 485], "mul": 410, "multi": [3, 4, 77, 83, 85, 140, 141, 142, 143, 156, 159, 161, 163, 165, 170, 171, 172, 173, 174, 180, 181, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 228, 231, 250, 254, 282, 301, 305, 329, 332, 355, 357, 359, 389, 402, 437, 445, 451], "multi_conv": [159, 161, 163, 165], "multidimension": [396, 400, 416], "multiheadattent": [307, 323], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 159, 161, 163, 165, 217, 218, 219, 236, 273, 274, 281, 282, 305, 311, 313, 316, 317, 318, 319, 321, 329, 332, 356, 358, 363, 365, 368, 372, 391, 394, 396, 397, 398, 400, 405, 410, 416, 417, 446, 454, 466, 474, 479, 485], "multipli": [22, 94, 218, 248, 326, 361, 371, 372, 373, 385, 411, 424, 435], "multisteplr": 374, "must": [0, 1, 3, 15, 17, 18, 19, 21, 22, 25, 26, 27, 155, 159, 213, 215, 216, 217, 218, 219, 239, 259, 305, 313, 315, 316, 317, 318, 319, 332, 353, 355, 357, 359, 361, 364, 369, 394, 449, 453, 454, 455, 457, 459, 461, 463, 464, 466, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 482], "mx": [388, 402], "my_simple_model": 393, "mymodel": [213, 214, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "myoptim": [364, 375], "n": [12, 22, 23, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 215, 216, 219, 231, 232, 233, 234, 236, 238, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 281, 286, 288, 290, 305, 306, 308, 309, 310, 311, 318, 319, 324, 326, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 418, 437, 449, 451], "n1": 23, "nabla_": [377, 378, 379, 380, 381, 382, 383, 385], "nabla_t": 383, "nadam": 387, "nair": [5, 6], "name": [10, 12, 13, 14, 85, 155, 173, 213, 215, 217, 219, 321, 393], "nan": [25, 27], "nano": [50, 85], "natur": [24, 154, 308, 324, 346, 349, 355, 412, 433, 434], "ndarrai": [15, 212, 214, 394, 402, 415, 417, 421, 423, 452], "ndim": [25, 27, 214, 402], "ne": 22, "nearest": [273, 361], "nearli": 402, "necessari": [4, 5, 6, 7, 8, 15, 24, 457, 473], "need": [2, 4, 13, 14, 102, 173, 216, 217, 218, 228, 324, 355, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 416, 417, 474, 475, 485], "neg": [22, 24, 27, 221, 254, 274, 292, 296, 297, 299, 329, 332, 385, 455], "negative_slop": [224, 296], "neglect": 218, "neighbor": 273, "neq": 23, "nest": [155, 216, 219, 363, 389, 392], "nestedmodel": 155, "nesterov": 382, "net": [85, 152], "network": [3, 4, 10, 13, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 85, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 171, 173, 206, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 246, 248, 255, 274, 281, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 346, 347, 348, 349, 350, 351, 353, 355, 357, 359, 363, 364, 375, 376, 384, 386, 400, 401, 402, 414, 420, 422, 436, 438, 461, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "neural": [3, 4, 10, 13, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 89, 153, 154, 155, 173, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227, 228, 229, 232, 233, 234, 239, 246, 248, 255, 274, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 346, 347, 348, 349, 350, 351, 353, 363, 364, 375, 376, 384, 386, 400, 401, 402, 414, 420, 422, 436, 438, 461, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "neuralnetwork": [294, 295, 297, 302], "neuron": 296, "never": 479, "new": [14, 213, 214, 221, 222, 224, 225, 226, 227, 229, 246, 248, 273, 282, 286, 287, 288, 289, 290, 291, 364, 369, 372, 392, 393, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 455, 457, 459, 461, 463, 464, 465, 468, 469, 470, 471, 472, 473], "new_tensor": 446, "next": [219, 474], "nll": 254, "nll_loss": [245, 252], "nllloss": [323, 333], "nlp": [271, 353], "nn": [5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 220, 223, 230, 235, 244, 247, 252, 257, 267, 272, 283, 285, 304, 307, 312, 320, 322, 323, 327, 333, 342, 352, 354, 360, 362, 364, 365, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 475, 485], "no_grad": [15, 390], "node": [15, 402], "nois": [27, 401], "non": [19, 22, 24, 27, 173, 174, 218, 222, 224, 225, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 313, 316, 317, 318, 319, 355, 356, 357, 358, 359, 379, 380, 412, 429], "nonconform": 15, "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 159, 169, 180, 181, 194, 195, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 246, 248, 249, 250, 251, 253, 254, 255, 258, 259, 271, 274, 275, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 391, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 457, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483], "norm": [16, 20, 159, 169, 174, 177, 178, 180, 181, 194, 195, 260, 271, 353, 356, 358, 381], "norm_first": [355, 357, 359], "norm_lay": [159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195], "norm_layer_tf": 174, "norm_typ": [271, 353], "normal": [5, 6, 7, 8, 30, 39, 85, 130, 159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 222, 226, 228, 229, 238, 255, 256, 258, 259, 271, 275, 276, 277, 285, 286, 290, 293, 299, 301, 313, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 356, 357, 358, 359, 384, 398, 401, 474, 484, 485], "normalized_shap": [259, 341], "notat": [10, 12, 13, 14, 321], "note": [232, 313], "noth": [237, 240, 241, 242], "notimplementederror": [2, 213, 364], "notin": 429, "nov": 85, "novel": [7, 85, 173, 174], "now": 15, "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 212, 214, 281, 329, 332, 353, 388, 402, 407, 414, 415, 418, 420, 422, 423, 446, 452, 475], "npy": [5, 6, 7, 8], "num": [356, 358, 419], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 301, 329, 332], "num_decoder_lay": [156, 355], "num_embed": [271, 353], "num_encoder_lay": [156, 355], "num_featur": [219, 275, 276, 277, 334, 335, 336, 338, 339, 340], "num_head": [30, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 305, 355, 356, 357, 358, 359], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [206, 356, 358], "num_paramet": 218, "num_stag": 181, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 231, 232, 233, 234, 236, 241, 242, 243, 246, 248, 250, 254, 255, 256, 258, 261, 262, 263, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 300, 305, 308, 309, 310, 311, 321, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 366, 367, 371, 372, 373, 376, 388, 396, 399, 400, 402, 412, 414, 416, 418, 419, 436, 437, 438, 450, 451, 454, 455, 457, 461, 463, 464, 465, 467, 469, 473, 477, 479, 480, 482, 485], "numer": [13, 21, 24, 238, 249, 250, 255, 256, 258, 259, 260, 275, 276, 277, 298, 314, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 355, 357, 359, 377, 378, 379, 380, 381, 382, 383, 384, 402, 404, 414, 415, 416, 417, 418, 419, 420, 422, 452, 475], "numpi": [15, 212, 214, 329, 332, 388, 402, 407, 446, 449, 453, 461, 463, 469, 475, 485], "o": [3, 173, 305, 348, 351, 420, 421], "object": [1, 3, 16, 85, 140, 159, 174, 200, 201, 202, 203, 204, 213, 217, 218, 331, 363, 388, 389, 403, 404, 408, 409, 410, 413, 452], "observ": 379, "obtain": [1, 174], "occur": [14, 274, 389, 392, 393, 455], "occurr": 22, "odot": [313, 316, 317, 318, 319], "off": [43, 99, 390], "offer": [4, 10, 40, 41, 43, 53, 80, 99, 172, 175, 176, 179, 184, 185, 187, 189, 207, 363, 375, 401, 485], "offset": 418, "often": [22, 121, 122, 232, 233, 234, 236, 271, 314, 329, 332, 414, 422, 475, 479, 483, 485], "old": 372, "older": 382, "one": [0, 13, 136, 137, 138, 139, 144, 218, 219, 228, 232, 248, 264, 268, 275, 276, 277, 299, 300, 301, 308, 317, 329, 332, 334, 338, 346, 349, 361, 364, 389, 391, 392, 398, 413, 421, 436, 438, 456, 462, 468, 475], "ones": [15, 246, 248, 308, 309, 310, 326, 334, 335, 336, 338, 339, 340, 341, 363, 418, 421, 424, 454], "ones_lik": 424, "onli": [155, 273, 294, 297, 313, 314, 316, 317, 318, 319, 328, 329, 332, 334, 335, 336, 338, 339, 340, 341, 349, 350, 351, 385, 389, 390, 414, 429, 436, 438, 446, 449, 461, 462, 464, 465, 467, 470, 471], "onto": [25, 27], "openml": [5, 6, 7, 8, 15], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 159, 161, 163, 165, 174, 190, 212, 213, 216, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 239, 243, 246, 248, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 324, 325, 326, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 363, 389, 390, 391, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 422, 433, 434, 435, 436, 437, 438, 441, 443, 445, 446, 449, 451, 455, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 483], "operand": 402, "operatornam": [22, 24, 305, 355, 356, 357, 358, 359], "opposit": [376, 465], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 91, 92, 96, 97, 99, 100, 101, 102, 164, 167, 168, 182, 200, 201, 212, 214, 217, 218, 236, 308, 309, 310, 353, 363, 366, 367, 368, 369, 370, 371, 372, 373], "optimizer_st": [364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 228, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 296, 301, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 376, 384, 386, 394, 396, 397, 398, 400, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 436, 437, 438, 445, 450, 451, 452, 454, 455, 460, 463, 465, 466, 467, 468, 470, 471, 475, 479, 480, 482], "ord": [23, 260], "order": [1, 3, 10, 15, 23, 27, 215, 216, 217, 218, 219, 450, 474], "ordered_dict": 219, "ordereddict": [213, 215, 216, 219], "organ": [159, 215, 216, 217, 219, 393], "orient": 485, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 173, 194, 195, 205, 237, 274, 281, 303, 389, 454, 461, 462, 463, 464, 465, 469, 472, 483], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [376, 384, 386], "other": [2, 3, 21, 75, 84, 86, 89, 99, 161, 163, 165, 180, 212, 213, 216, 219, 286, 287, 313, 314, 363, 364, 390, 401, 414, 416, 420, 422, 449, 460, 485], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 221, 224, 225, 226, 228, 239, 292, 294, 295, 296, 297, 299, 301, 315, 316, 317, 318, 319, 330, 346, 347, 348, 349, 350, 351, 356, 358, 364, 385, 393, 408, 409, 436, 438, 459, 470, 471], "otim": [24, 246, 324], "out": [0, 3, 4, 10, 15, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 286, 287, 290, 291, 306, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 376, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 455, 456, 457, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473], "out_channel": [86, 92, 96, 97, 216, 219, 275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 335, 336, 346, 347, 348, 349, 350, 351, 363], "out_featur": [215, 216, 219, 246, 248, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 309, 310, 313, 316, 317, 324, 326, 328, 329, 330, 331, 332, 334, 338, 341, 346, 347, 348, 349, 350, 351], "outcom": [479, 480, 482], "outer": 424, "outlier": [251, 330], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 248, 260, 261, 262, 263, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 420, 422, 423, 433, 434, 435, 436, 437, 438, 441, 443, 445, 446, 449, 450, 451, 459, 460, 461, 463, 465, 466, 469, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "output_height": 236, "output_lay": [216, 219], "output_s": [216, 261, 262, 263, 343, 344, 345], "output_width": 236, "output_with_norm": [271, 353], "output_with_pad": [271, 353], "outsid": [0, 315, 389], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 213, 216, 218, 228, 261, 262, 263, 281, 301, 308, 309, 310, 329, 332, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 365, 367, 373, 376, 377, 378, 379, 380, 396, 400, 436, 437, 438, 445, 449, 451, 479, 480, 482], "overal": [150, 239], "overdetermin": 24, "overfit": [1, 28, 152, 240, 243, 314, 316, 317, 318, 319, 376, 379, 384, 386], "overhead": [85, 92, 281], "overlap": [173, 174], "overli": 298, "overrid": [2, 3, 99, 100, 101, 159, 177, 178, 194, 195], "overridden": [213, 364], "overshoot": 365, "overwrit": [215, 217], "own": [4, 15, 215, 216, 217, 218, 232, 233, 234, 291, 363, 477], "p": [23, 24, 59, 214, 217, 218, 237, 238, 239, 240, 241, 242, 243, 260, 271, 311, 313, 314, 316, 317, 318, 319, 346, 349, 350, 353, 479, 480, 482, 485], "p_d": [348, 351], "p_h": [311, 347, 348, 351], "p_w": [311, 347, 348, 351], "packag": [2, 3, 4, 10, 16, 154, 363, 375, 393, 399, 401, 475, 485], "pad": [86, 216, 219, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 311, 335, 336, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 458], "pad_after_dim1": 461, "pad_after_dim2": 461, "pad_before_dim1": 461, "pad_before_dim2": 461, "pad_width": 461, "padding_height": 236, "padding_idx": [271, 353], "padding_width": 236, "pair": 246, "panda": [15, 173], "pang": 85, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 190], "paradigm": 85, "parallel": [1, 3, 85, 140, 154, 159, 173, 305], "param": [213, 214, 217, 218, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "param1": 213, "param_dict": 217, "param_group": [364, 375], "param_groups_setup": 364, "param_list": 218, "param_s": 393, "paramet": [0, 2, 15, 85, 87, 88, 89, 173, 213, 363, 364, 365, 375, 401, 485], "parameter": 93, "parameterdict": 220, "parameterlist": 220, "parent": [15, 363, 402], "pars": 388, "part": [212, 213, 291, 353, 363, 390, 401, 414, 415, 418, 420, 421, 422, 423, 454, 466, 470, 471, 475, 485], "partial": [15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473], "particip": [15, 214, 475], "particular": [215, 217], "particularli": [24, 91, 99, 124, 125, 126, 127, 128, 129, 159, 161, 163, 165, 174, 216, 217, 218, 219, 228, 238, 248, 275, 276, 277, 278, 279, 280, 301, 326, 329, 332, 338, 339, 340, 341, 366, 380, 390, 393, 419, 474], "partit": [174, 466], "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 159, 175, 176, 177, 178, 179, 190, 213, 214, 215, 216, 217, 218, 219, 273, 275, 276, 277, 281, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 310, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 363, 389, 402, 419, 437, 445, 449, 450, 451, 455, 457, 462, 464, 467, 470, 471, 473, 475, 485], "past": [376, 377, 379, 384], "patch": [159, 161, 163, 165, 173, 174, 180, 181, 194, 195, 206, 207, 208, 209, 210, 211, 236, 311, 347], "patch_norm": [194, 195], "patch_siz": [159, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 209, 210, 211], "path": [3, 5, 6, 7, 8, 39, 40, 77, 159, 174, 181, 239, 315], "pathwai": 85, "patienc": 372, "pattern": [10, 12, 13, 14, 15, 30, 85, 161, 163, 165, 225, 281, 297, 308, 309, 310, 321], "pedagog": 15, "penal": [376, 384, 386], "penalti": [377, 378, 379, 380, 381, 382, 383], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 178, 181, 187, 188, 189, 191, 192, 193, 231, 261, 305, 311, 321, 338, 339, 340, 341, 343, 359, 367, 453], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 158, 161, 163, 165, 167, 168, 170, 171, 172, 173, 174, 178, 182, 183, 184, 185, 187, 190, 195, 201, 202, 203, 210, 213, 214, 218, 222, 231, 232, 233, 234, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 308, 309, 310, 311, 313, 316, 317, 318, 319, 321, 324, 325, 326, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 361, 364, 365, 369, 372, 389, 390, 399, 401, 403, 404, 407, 410, 413, 433, 436, 438, 445, 450, 453, 466, 474, 476, 478, 483, 485], "period": 366, "permut": [12, 321, 450], "persist": [212, 394, 396, 397, 398, 400, 416, 417], "perturb": [19, 26, 27, 485], "phase": 30, "phi": [222, 293], "pi": [222, 293, 366, 430, 441, 447], "pico": [51, 85], "piecewis": [294, 295], "pil": [475, 485], "pinv": 20, "pioneer": 85, "pip": 15, "pipelin": [5, 6, 7, 8, 321, 401, 474, 475, 477], "pixel": [5, 6, 7, 8, 273, 361, 477, 479], "place": [284, 286, 287, 288, 289, 290, 291, 402, 459, 465], "placehold": [213, 325], "placement": [15, 402], "plai": 401, "platform": 388, "plot": 460, "point": [4, 274, 371, 389, 390], "pointwis": [278, 279, 280], "pool": [10, 28, 85, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 174, 261, 262, 263, 264, 265, 266, 268, 269, 270, 281, 282, 309, 310, 343, 344, 345, 346, 347, 348, 349, 350, 351, 436, 438], "pool1": 219, "pool2": 219, "poorli": 21, "popul": 213, "popular": [4, 85], "portion": [454, 470, 471, 485], "pose": 24, "posit": [1, 17, 22, 30, 85, 156, 194, 195, 206, 213, 219, 231, 274, 292, 296, 297, 299, 306, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 385, 391, 412, 454, 459, 463, 469, 478], "possibl": 485, "potenti": [24, 325, 384, 467], "power": [10, 15, 22, 50, 85, 91, 96, 97, 103, 179, 181, 182, 184, 188, 191, 200, 208, 281, 321, 365, 391, 424, 474, 475, 485], "pp": [85, 173], "practic": [24, 80, 329, 332], "practition": 485, "pre": [30, 69, 70, 71, 72, 85, 113, 117, 118], "preactbottleneck": [113, 117, 118], "preced": [85, 214, 361], "precis": [192, 388], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84, 178], "pred": [15, 392], "predecessor": [40, 181], "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 216, 299, 353, 365, 388], "predict": [150, 159, 173, 194, 196, 197, 198, 199, 328, 329, 331, 332], "prefer": 373, "prefix": [213, 393], "prepar": [3, 391, 461, 463, 469, 475, 485], "prepend": [213, 453], "preprint": [85, 173], "preprocess": [3, 4, 236, 274, 401, 474, 475, 485], "present": [328, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 347], "preserv": [13, 85, 182, 237, 239, 274, 313, 315, 414, 415, 418, 420, 421, 422, 423, 437, 445, 446, 451, 454, 465], "preset": [4, 175, 176, 177, 178], "prevent": [1, 10, 15, 174, 215, 216, 217, 218, 219, 231, 240, 243, 260, 298, 306, 314, 316, 317, 318, 319, 328, 329, 358, 359, 365, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392], "previou": [85, 376, 385, 389, 392], "previous": [369, 379], "primarili": 219, "principl": 85, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483], "print_grad": 402, "prior": 389, "priorit": [96, 97, 101, 282, 294], "prob": 394, "probabilist": 401, "probabl": [59, 75, 156, 180, 194, 195, 206, 222, 228, 231, 237, 238, 239, 240, 241, 242, 243, 249, 293, 301, 305, 306, 313, 314, 315, 316, 317, 318, 319, 328, 329, 332, 355, 357, 359, 394, 479, 480, 482, 485], "problem": [24, 25, 27, 85, 224, 292, 296, 383], "proceed": [85, 173], "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 85, 110, 111, 112, 140, 151, 152, 154, 159, 161, 163, 165, 173, 174, 180, 194, 218, 232, 233, 234, 258, 274, 275, 276, 277, 281, 282, 299, 303, 308, 310, 324, 334, 335, 336, 338, 339, 340, 341, 346, 348, 349, 351, 355, 356, 358, 376, 460, 475, 476, 477, 478, 483, 485], "produc": [15, 28, 152, 155, 261, 262, 263, 281, 308, 309, 310, 343, 344, 345, 389, 399, 401], "product": [25, 27, 180, 181, 231, 295, 300, 302, 305, 306, 324, 341, 363, 405, 406, 410, 411], "profil": 389, "program": [390, 401], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "project": [25, 27, 156, 159, 161, 163, 165, 169, 174, 180, 181, 186, 187, 188, 189, 191, 192, 193, 194, 195, 305], "projector": 24, "promin": [346, 348, 349, 350, 351], "promot": [219, 329, 332, 363], "propag": [15, 18, 19, 21, 24, 25, 26, 27, 85, 213, 219, 246, 248, 273, 281, 347, 348, 384, 385, 394, 405, 406, 407, 411, 436, 438, 454, 460, 461, 464, 472], "proper": [271, 454], "properli": [0, 218, 228, 301, 363, 365], "properti": [16, 18, 21, 22, 222, 226, 237, 293, 299, 313, 378, 383, 389], "proport": [5, 6, 7, 8, 451], "proportion": 483, "propos": 190, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 85, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 184, 185, 192, 194, 195, 203, 206, 208, 209, 213, 215, 216, 217, 218, 222, 231, 248, 262, 263, 271, 274, 306, 321, 328, 329, 330, 332, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 358, 361, 363, 364, 365, 369, 370, 375, 376, 377, 384, 386, 390, 399, 401, 402, 407, 414, 421, 436, 438, 450, 452, 463, 467, 469, 485], "pseudo": [21, 24], "purpos": [41, 46, 50, 396, 400, 414, 420, 422], "pvt": [181, 182, 183, 184, 185, 186], "pvt_huge": 173, "pvt_larg": 173, "pvt_medium": 173, "pvt_small": 173, "pvt_tini": 173, "pvt_v2": [187, 188, 189, 190, 191, 192, 193], "pvt_v2_b0": 173, "pvt_v2_b1": 173, "pvt_v2_b2": [173, 190], "pvt_v2_b2_li": 173, "pvt_v2_b3": 173, "pvt_v2_b4": 173, "pvt_v2_b5": 173, "pvtv2": [173, 187, 188, 189, 190, 191, 192, 193], "pypi": 15, "pyramid": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193], "python": [15, 388, 402], "pytorch": [15, 452], "q": [25, 85, 159, 174, 181, 231, 305, 306, 359], "q_1": 159, "q_i": [30, 305], "qk": [30, 159, 174, 357, 359], "qk_scale": [159, 180, 181, 194, 195], "qkv_bia": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195], "qr": 20, "quad": [24, 159, 271, 305, 328, 329, 330, 331, 332, 349, 350, 351, 356, 358, 403, 404, 408, 409, 410, 413, 470, 471, 476], "quadrat": [181, 190, 330], "qualifi": 372, "quanfu": 173, "queri": [159, 169, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 231, 305, 306, 359], "quick": 389, "quickli": 365, "quoc": 85, "quotient": 404, "r": [13, 14, 25, 30, 85, 305, 466, 479, 480, 481, 482], "r_t": 383, "radam": 387, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 213, 363, 364, 412, 453], "rameswar": 173, "rand": [395, 401], "randint": [395, 401], "randn": [12, 14, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 159, 174, 175, 176, 177, 178, 179, 231, 278, 279, 280, 281, 282, 305, 306, 321, 355, 356, 357, 358, 359, 363, 395, 399, 401], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 231, 278, 279, 280, 281, 282, 305, 315, 321, 353, 355, 356, 357, 358, 359, 478, 479, 480, 481, 482, 485], "random_integ": 401, "random_tensor": 401, "randomcrop": [484, 485], "randomgrayscal": [484, 485], "randomhorizontalflip": [484, 485], "randomli": [1, 237, 239, 240, 241, 242, 243, 274, 313, 316, 317, 318, 319, 478, 479, 480, 481, 482, 485], "randomnoisedataset": [0, 1, 2], "randomrot": [484, 485], "randomverticalflip": 484, "rang": [0, 1, 15, 16, 30, 43, 52, 85, 102, 112, 120, 154, 173, 174, 183, 204, 218, 227, 229, 232, 233, 239, 250, 254, 291, 298, 300, 303, 315, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 384, 386, 394, 397, 419, 426, 427, 429, 477, 481, 485], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 159, 174, 180, 181, 194, 195, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "rather": [7, 12, 14, 217, 218, 321, 371, 380, 464], "ratio": [59, 77, 130, 159, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 281, 282, 483], "ravel": 458, "raw": [228, 301, 329, 402], "rcond": 24, "re": [15, 214], "reach": 371, "readabl": [10, 15, 215, 216, 217, 219, 321, 363], "readi": [3, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 300], "rearrang": [11, 236, 322, 323], "reassembl": 85, "recalibr": [85, 131, 133, 134, 136, 137, 138, 139, 281], "receiv": [349, 350, 351, 461, 470, 471], "recent": 384, "recept": [85, 140, 144, 174, 190, 282], "reciproc": [24, 424, 434, 435, 443], "recogn": 159, "recognit": [85, 89, 110, 111, 173, 184, 194, 196, 197, 198, 199, 205, 309], "recommend": [15, 179], "rectangular": 418, "rectif": 383, "rectifi": [224, 225, 296, 297, 383], "recurr": [173, 216, 341], "recurs": [155, 213], "red": 479, "reduc": [11, 28, 30, 85, 90, 112, 123, 140, 145, 152, 169, 173, 181, 190, 278, 279, 280, 281, 334, 335, 336, 338, 339, 340, 346, 347, 348, 349, 350, 351, 365, 368, 371, 372, 373, 382, 385, 392, 436, 437, 438, 445, 451, 479], "reducelronplateau": 374, "reduct": [10, 13, 27, 59, 130, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 249, 250, 251, 253, 254, 281, 282, 328, 329, 330, 331, 332, 366, 372, 373, 436, 438], "reevalu": 364, "refer": [4, 161, 163, 165, 190, 213, 401, 415, 418, 455], "refin": [85, 203, 365], "reflect": [183, 390], "regardless": [24, 462], "region": [234, 238, 261, 262, 263, 273, 294, 314, 344, 345, 461, 476, 485], "regist": [15, 31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 212, 213, 214, 218, 363, 393, 402], "register_buff": 212, "register_hook": 402, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211], "register_paramet": 213, "registr": [15, 213, 363], "registri": [124, 125, 126, 127, 128, 129, 393], "registry_path": 393, "regress": [4, 253, 330, 331], "regul": [271, 353], "regular": [24, 28, 39, 59, 60, 75, 152, 194, 195, 239, 243, 306, 314, 316, 317, 318, 319, 371, 373, 376, 377, 378, 381, 382, 383, 384, 386], "reimagin": 85, "rel": [30, 85, 194, 195, 365, 372], "relat": [418, 420], "relationship": [30, 182, 184, 483], "relev": [273, 376, 384, 386], "reli": 238, "reliabl": [5, 6, 7, 8], "reliant": [316, 317, 318, 319], "relu": [15, 28, 85, 130, 145, 152, 155, 215, 216, 217, 219, 221, 223, 224, 245, 275, 276, 277, 281, 282, 286, 287, 290, 291, 292, 296, 298, 302, 304, 308, 309, 310, 323, 324, 325, 326, 355, 357, 359], "relu1": 219, "relu2": 219, "relu3": 219, "relu6": [304, 323], "remain": [5, 6, 7, 8, 15, 52, 212, 239, 259, 313, 315, 316, 317, 318, 319, 353, 385], "rememb": 401, "remov": [393, 467], "reorder": [10, 12, 321, 446, 465], "rep": 469, "repeat": [11, 458, 460, 469], "repetit": [10, 14, 463, 469], "replac": [7, 161, 163, 165, 173, 355, 401, 459, 479], "replic": [14, 15, 311, 356, 358, 453], "repr": 388, "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 159, 170, 171, 172, 180, 186, 213, 214, 219, 246, 248, 255, 258, 259, 271, 308, 309, 310, 321, 324, 326, 329, 332, 341, 353, 356, 364, 373, 375, 376, 382, 383, 384, 385, 386, 388, 394, 403, 404, 410, 413, 415, 437, 449, 450, 451, 460, 476, 478, 480, 481, 482, 483], "represent": [30, 85, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 156, 173, 177, 181, 182, 183, 184, 185, 188, 192, 193, 206, 271, 281, 347, 350, 353, 364], "reproduc": [394, 396, 397, 398, 399, 400, 401, 485], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 178, 209, 211, 212, 215, 219, 221, 222, 224, 225, 226, 227, 229, 246, 248, 273, 281, 282, 291, 325, 329, 332, 363, 371, 390, 392, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 453, 455, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 472, 473, 475, 476, 483], "requires_grad": [15, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 246, 248, 271, 273, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 361, 363, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475], "rescal": [249, 250, 254, 328, 329, 332], "research": [15, 363], "reset": [214, 366, 399, 402], "reshap": [10, 12, 130, 248, 309, 310, 321, 361, 391, 446, 458, 462], "resid": 402, "residu": [76, 82, 83, 84, 85, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 174, 181, 357, 359], "residualblock": 112, "resili": 385, "resiz": [273, 474, 484, 485], "resnest": [104, 105, 106, 107, 108, 109, 110, 111], "resnest_101": 85, "resnest_14": 85, "resnest_200": 85, "resnest_26": 85, "resnest_269": 85, "resnest_50": 85, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 85, "resnet": [82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 161, 163, 165, 281], "resnet_1001": 85, "resnet_101": 85, "resnet_152": 85, "resnet_18": 85, "resnet_200": 85, "resnet_269": 85, "resnet_34": 85, "resnet_50": 85, "resnet_arg": 140, "resnext": [124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144], "resnext_101_32x16d": 85, "resnext_101_32x32d": 85, "resnext_101_32x4d": 85, "resnext_101_32x8d": 85, "resnext_101_64x4d": 85, "resnext_50_32x4d": 85, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 136, 137, 138, 139, 144, 173, 174, 175, 176, 179, 181, 182, 190, 195, 402], "resolv": [12, 13, 14, 321, 388], "resourc": [15, 44, 45, 47, 48, 51, 52, 78, 85, 92, 96, 97, 98, 99, 100, 101, 102, 209], "respect": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 273, 282, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 367, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 429, 433, 434, 435, 436, 437, 438, 441, 443, 445, 449, 450, 451, 460, 461, 463, 469, 479], "respons": [85, 136, 137, 138, 139, 215, 256, 337, 375], "rest": [470, 471], "restor": [281, 369, 389, 392], "restructur": 464, "result": [10, 12, 14, 17, 21, 22, 24, 85, 213, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 282, 294, 298, 301, 305, 315, 321, 363, 364, 390, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 452, 455, 457, 460, 461, 462, 463, 464, 466, 467, 468, 469, 472, 473, 475, 478, 479, 485], "resum": [366, 367, 368, 369, 370, 371, 372, 373, 375], "retain": [173, 181, 214, 238, 314, 402, 414, 422, 436, 437, 438, 445, 451, 454, 459, 470, 471, 475], "retent": 475, "rethink": 85, "retriev": [0, 2, 215, 217, 218, 271], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 178, 179, 212, 213, 215, 216, 217, 218, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 315, 316, 317, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 356, 358, 363, 364, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 393, 474, 485], "reus": [85, 475], "reusabl": [219, 315, 363, 474], "revers": [15, 219, 402, 450, 480, 482], "revolution": 85, "rfloor": [311, 373], "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 169, 178, 179, 180, 194, 195], "rho": 377, "rho_": 383, "rho_t": 383, "rich": [15, 192], "richer": 182, "right": [22, 23, 24, 26, 27, 30, 159, 174, 222, 228, 260, 293, 301, 305, 311, 328, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 349, 350, 351, 357, 359, 446, 476], "rightarrow": [12, 305, 321, 466], "rmsprop": 387, "rob": 85, "robust": [41, 46, 79, 100, 204, 205, 238, 274, 313, 316, 317, 318, 319, 330, 363, 377, 478, 479, 481, 485], "roland": 7, "role": [401, 485], "roll": 458, "root": [4, 5, 6, 7, 8, 378, 384, 443], "rotat": [245, 272, 481, 485], "rotated_imag": 274, "rout": [349, 350, 351], "row": [18, 19, 21, 26, 248, 271, 418, 460, 470, 471, 473], "rprop": 387, "rule": [14, 15, 21, 22, 321, 391, 403, 404, 408, 409, 410, 412, 413], "run": [15, 212, 255, 258, 275, 276, 277, 334, 335, 336, 338, 339, 340, 377, 389, 399, 401], "running_mean": [212, 255, 258, 334, 335, 336, 338, 339, 340], "running_var": [255, 258, 334, 335, 336, 338, 339, 340], "runtim": [60, 216, 219, 315, 363, 419], "s_": 385, "s_1": 466, "s_2": 466, "s_d": [348, 351], "s_h": [311, 347, 348, 351], "s_i": 466, "s_n": 466, "s_w": [311, 347, 348, 351], "safe": [389, 392], "safeguard": 260, "sain": 85, "same": [18, 19, 21, 22, 26, 189, 228, 237, 238, 239, 240, 241, 242, 243, 255, 256, 258, 259, 260, 262, 263, 274, 275, 276, 277, 278, 279, 280, 282, 298, 308, 309, 310, 313, 316, 317, 318, 319, 325, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 385, 388, 394, 399, 401, 407, 417, 421, 423, 433, 436, 437, 438, 446, 455, 457, 459, 462, 464, 467, 468, 470, 471, 473, 477], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 261, 262, 263, 286, 287, 288, 289, 290, 291, 313, 316, 317, 318, 319, 324, 326, 329, 332, 341, 343, 344, 345, 394, 398, 401, 419, 476, 478, 480, 481, 482, 483], "sandbox": 15, "sandler": 85, "satisfi": [17, 19, 26, 466], "satur": [292, 485], "save": [2, 212, 214, 364, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393], "scalabl": [3, 46, 59, 85, 124, 125, 126, 127, 128, 129, 150, 173, 195, 363], "scalar": [15, 18, 23, 249, 250, 251, 253, 254, 394, 402, 459], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 85, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 186, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 221, 226, 228, 231, 239, 255, 256, 258, 259, 271, 281, 282, 290, 291, 292, 294, 296, 299, 300, 301, 303, 305, 306, 313, 315, 316, 317, 318, 319, 329, 334, 335, 336, 337, 338, 339, 340, 341, 353, 361, 367, 370, 376, 378, 379, 380, 401, 451, 483], "scale_by_keep": [239, 315], "scale_factor": 361, "scale_fn": 367, "scaled_dot_product_attent": [230, 245], "scaleddotproductattent": [307, 323], "scenario": [44, 49, 51, 99, 100, 101, 102, 190, 217, 218, 341, 366, 367, 373, 380, 381, 475, 479], "schedul": [314, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376], "scientif": 391, "score": [112, 123, 140, 228, 231, 306, 329], "scratch": 15, "script": 401, "se": [59, 85, 131, 132, 133, 134, 135, 136, 137, 138, 139], "se_resnet_101": 85, "se_resnet_152": 85, "se_resnet_18": 85, "se_resnet_34": 85, "se_resnet_50": 85, "se_resnext_101_32x4d": 85, "se_resnext_101_32x8d": 85, "se_resnext_101_64x4d": 85, "se_resnext_50_32x4d": 85, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 321, 363, 401], "seamlessli": [3, 4, 10, 12, 14, 16, 214, 216, 219, 363, 485], "search": 85, "second": [19, 181, 192, 216, 217, 246, 281, 324, 379, 380, 381, 382, 383, 391, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 446, 457, 460, 482], "section": 407, "see": [15, 407], "seed": [394, 395, 396, 397, 398, 400, 401, 485], "seek": [15, 102], "seen": 377, "segment": [173, 193, 200, 201, 202, 203, 204, 205], "select": [13, 14, 85, 140, 141, 142, 143, 144, 273, 281, 282, 349, 351, 367, 445], "selectivekernel": 283, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 85, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 159, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 226, 239, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 314, 315, 316, 317, 321, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 359, 363, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 402, 459, 465, 474, 475], "selfattent": 359, "selu": [223, 237, 245, 304, 313, 323], "selunetwork": 299, "semant": [159, 191], "semodul": 283, "senet": [131, 132, 133, 134, 135, 136, 137, 138, 139], "sensit": [251, 330, 334, 335, 336], "sentiment": 4, "separ": [0, 85, 90, 110, 111, 150, 159, 232, 233, 234, 278, 279, 280, 338, 339, 340], "seq_len": [231, 305, 306, 355, 356, 357, 358, 359], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 173, 215, 216, 220, 232, 275, 276, 277, 321, 325, 356, 358, 474, 485], "seri": [73, 87, 88, 140, 174, 189, 191, 232, 275, 308, 346, 349], "serial": [212, 213, 375], "serv": [3, 7, 15, 54, 82, 130, 145, 156, 213, 215, 216, 217, 218, 219, 363, 385, 402, 475], "set": [3, 4, 5, 6, 7, 8, 15, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 214, 218, 231, 232, 233, 234, 271, 296, 297, 299, 306, 308, 309, 310, 313, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 353, 364, 379, 380, 384, 394, 396, 397, 398, 399, 400, 401, 414, 416, 417, 422, 423, 429, 436, 438, 452, 459, 470, 471, 475, 479, 485], "setup": [4, 124, 125, 126, 127, 128, 129, 177, 178], "sever": [24, 308, 309, 310, 346, 347, 348, 349, 350, 351, 474, 485], "sgd": [15, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 383, 387], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 85, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 155, 159, 173, 174, 175, 176, 177, 178, 179, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 363, 367, 391, 394, 396, 397, 398, 400, 401, 402, 405, 416, 417, 418, 420, 421, 422, 423, 429, 434, 435, 436, 437, 438, 441, 443, 445, 446, 450, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 483, 485], "shapelik": 397, "share": [85, 159], "sharp": 367, "shen": 281, "shift": [173, 174, 194, 195, 196, 197, 198, 199, 200, 203, 204, 255, 256, 258, 259, 294, 334, 335, 336, 337, 338, 339, 340, 341, 465], "shorthand": 407, "should": [12, 13, 14, 15, 86, 212, 321, 355, 356, 357, 358, 359, 371, 394, 396, 397, 398, 400, 402, 416, 417, 426, 427, 449, 453, 461, 474], "show": [390, 393], "shown": [159, 302, 399], "shrink": 377, "shuffl": [1, 2, 3], "side": [26, 216, 219, 232, 233, 234, 264, 265, 266, 268, 269, 270, 275, 276, 277, 308, 309, 310, 311, 346, 347, 348, 349, 350, 351], "sigma": [24, 30, 281, 286, 288, 290, 300, 302, 334, 335, 336, 338, 339, 340, 341, 450], "sigma_c": 477, "sigma_i": 24, "sigmoid": [223, 245, 281, 286, 287, 290, 291, 294, 295, 302, 304, 323, 328], "sigmoidnetwork": 300, "sign": [22, 330, 385, 424], "signal": [275, 308, 309, 310, 334, 338, 346, 347, 348, 349, 350, 351], "signific": 42, "significantli": [85, 91, 123, 179, 190, 191, 192, 193, 202, 281, 474], "silicon": [15, 179, 388], "sim": [313, 316, 317, 318, 319], "similar": [10, 161, 163, 165, 286, 287, 407, 446, 452, 453, 461], "similarli": [27, 449], "simonyan": 85, "simpl": [3, 4, 15, 155, 219, 232, 233, 234, 246, 248, 264, 265, 266, 268, 269, 270, 293, 294, 295, 297, 298, 299, 300, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 405, 406, 411, 474], "simplebinaryclassificationmodel": 328, "simpleblock": 239, "simpleclassificationmodel": [329, 332], "simplegelumodel": 293, "simplehardsigmoidmodel": 294, "simplehardswishmodel": 295, "simpleleakyrelumodel": 296, "simplemodel": [155, 298, 315, 326, 393], "simpleregressionmodel": 331, "simplerelumodel": 297, "simpleselumodel": 299, "simplesigmoidmodel": 300, "simpleswishmodel": 302, "simpletanhmodel": 303, "simpli": [15, 390, 449, 450, 464], "simplic": [85, 294, 297], "simplifi": [4, 12, 14, 69, 70, 71, 72, 85, 87, 151, 219, 275, 276, 277, 321], "simul": [155, 485], "simultan": [159, 274], "sin": [424, 430], "sinc": [22, 25, 215, 216, 217, 218, 232, 233, 234, 291, 390, 394, 398, 446, 460, 485], "sine": [427, 441, 442], "singl": [0, 4, 22, 25, 27, 112, 161, 163, 165, 228, 275, 276, 277, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 311, 329, 341, 347, 348, 349, 350, 351, 356, 357, 358, 359, 364, 389, 400, 416, 419, 455, 467, 477, 479, 485], "singleton": [14, 341], "singular": [18, 21, 22, 24, 26, 27], "sinh": [424, 431, 448], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 155, 156, 157, 158, 159, 160, 167, 168, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 231, 232, 233, 234, 236, 238, 241, 242, 243, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 305, 308, 309, 310, 311, 314, 321, 324, 326, 328, 329, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 358, 359, 361, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 397, 400, 401, 402, 436, 437, 438, 445, 451, 453, 454, 455, 457, 466, 467, 472, 473, 476, 478, 483, 485], "size_or_sect": 466, "sk": [85, 140, 141, 142, 143, 144, 282], "sk_resnet_18": 85, "sk_resnet_34": 85, "sk_resnet_50": 85, "sk_resnext_50_32x4d": 85, "skblock": 140, "skip": [85, 392], "sknet": [141, 142, 143, 144], "slice": [246, 402, 449], "slide": [236, 311, 346, 348, 349, 351], "slight": 281, "slightli": 485, "slope": [224, 292, 296], "slow": [3, 383], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 85, 87, 88, 89, 92, 96, 97, 100, 167, 173, 178, 185, 198, 199, 204, 205, 210, 211, 224, 238, 249, 250, 255, 256, 258, 259, 260, 296, 299, 314, 328, 329, 330, 334, 335, 336, 337, 338, 339, 340, 341, 347, 350, 355, 357, 359, 365, 377, 378, 379, 380, 381, 382, 383, 384, 385], "smaller": [10, 44, 69, 70, 71, 72, 85, 98, 152, 159, 161, 163, 165, 168, 172, 216, 219, 363, 378, 379, 409, 454, 476, 478, 483], "smallest": 438, "smooth": [75, 222, 292, 293, 302, 368, 376, 384, 485], "smoother": [368, 376], "so": [215, 216, 217, 218, 274, 363, 383, 389, 392, 416, 417, 474], "softmax": [30, 159, 174, 223, 231, 245, 282, 304, 305, 306, 323, 329, 357, 359], "softmaxmodel": 301, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [221, 239, 240, 274, 313, 315, 316, 317, 334, 335, 336, 338, 339, 340, 378, 379, 380, 454], "sometim": 391, "sophist": [216, 219], "sort": 15, "sourc": [156, 157, 158, 231, 355, 401], "space": [19, 25, 27, 156, 161, 163, 165, 174, 195, 232, 233, 234, 236, 261, 262, 263, 275, 276, 277, 278, 279, 280, 308, 309, 310, 311, 343, 344, 345, 414, 419, 485], "span": 4, "spars": [378, 379], "spatial": [28, 30, 85, 112, 123, 140, 145, 152, 154, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 238, 256, 276, 281, 309, 310, 311, 334, 335, 336, 338, 339, 340, 341, 347, 348, 349, 350, 351, 361, 460], "spatial_dim": 281, "spatio": 310, "spec": 169, "special": [0, 1, 24, 212, 213, 214, 313, 401], "specif": [4, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 169, 215, 216, 217, 218, 219, 282, 291, 313, 316, 317, 318, 319, 338, 339, 340, 353, 363, 364, 371, 390, 401, 416, 436, 438, 459, 463, 469], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 170, 171, 172, 180, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 216, 228, 236, 243, 249, 250, 251, 253, 254, 259, 260, 261, 262, 263, 271, 273, 274, 281, 301, 305, 308, 309, 310, 311, 321, 328, 329, 330, 331, 332, 341, 343, 344, 345, 347, 348, 349, 350, 351, 353, 361, 364, 367, 371, 388, 396, 397, 398, 399, 400, 402, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 429, 436, 437, 438, 445, 446, 450, 451, 452, 453, 454, 455, 457, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 485], "speech": 338, "speed": [96, 97, 294, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392], "split": [4, 85, 103, 110, 111, 173, 305, 454, 455, 457, 458, 473], "split_tensor": 466, "springer": 85, "sqrt": [30, 159, 174, 222, 231, 256, 286, 287, 290, 291, 293, 305, 306, 334, 335, 336, 337, 338, 339, 340, 341, 357, 359, 377, 378, 379, 380, 382, 383, 384, 424, 426, 427], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 251, 253, 314, 330, 331, 377, 378, 379, 384, 424, 443], "squaredataset": [0, 1, 2, 3], "squeez": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 281, 458], "sr_ratio": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "sra": 173, "src": [173, 355, 358, 359], "src_key_pad": 358, "src_key_padding_mask": [355, 359], "src_mask": [355, 358, 359], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 85, 174, 238, 249, 250, 255, 256, 258, 259, 260, 271, 275, 276, 277, 298, 314, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 357, 359, 365, 376, 377, 378, 379, 380, 381, 382, 383, 384, 477], "stabl": [204, 286, 287, 290, 291, 313, 329, 376, 380, 381, 384, 385, 386], "stack": [14, 219, 282, 355, 356, 358, 457, 458, 473, 485], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 85, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 159, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 372, "stand": 190, "standalon": 298, "standard": [15, 41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 161, 163, 165, 222, 224, 278, 279, 280, 286, 288, 290, 292, 293, 296, 313, 355, 385, 389, 398, 401, 407, 474, 477, 485], "start": [1, 3, 10, 365, 376, 378, 385, 402, 414, 419, 476, 478], "state": [48, 85, 208, 212, 213, 214, 216, 219, 364, 369, 389, 390, 392, 399], "state_dict": [213, 214, 364, 369, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "statement": [389, 392], "static": 219, "statist": [24, 237, 255, 258], "std": [5, 6, 7, 8, 288, 474, 477, 485], "stem": [82, 85, 103, 112, 123, 140, 174], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 15, 30, 214, 236, 282, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 414, 474, 475], "step_siz": [365, 367, 369, 373, 385], "step_size_down": 367, "step_size_up": 367, "steplr": [365, 369, 374], "still": [51, 377], "stochast": [39, 40, 59, 60, 77, 159, 174, 180, 194, 195, 239, 315, 376, 386], "stochastic_depth": 59, "stop": [372, 414, 419], "storag": [215, 217], "store": [2, 4, 5, 6, 7, 8, 15, 112, 123, 140, 212, 213, 214, 215, 216, 217, 218, 281, 343, 344, 345, 392, 476, 477, 478, 479, 480, 481, 482, 483], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 213, 215, 217, 219, 249, 250, 251, 253, 254, 273, 321, 361, 364, 367, 369, 372, 393, 402, 460], "straightforward": [386, 390, 403], "strategi": [30, 85, 101, 203, 365, 369, 375], "streamlin": [2, 3, 85], "strength": [30, 314], "strict": [213, 364], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 161, 163, 165, 216, 219, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 311, 343, 344, 345, 346, 347, 348, 349, 350, 351], "stride_height": 236, "stride_width": 236, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 213, 215, 217, 219, 308, 309, 310, 321, 364, 388], "strong": [30, 184, 187, 190, 207], "stronger": [177, 185, 189, 203], "structur": [0, 10, 13, 25, 30, 60, 92, 150, 173, 195, 212, 213, 216, 238, 314, 321, 363, 364, 393, 402, 418, 475], "student": 15, "studi": 15, "style": [10, 15, 82, 258, 338, 339, 402, 460], "sub": [215, 216, 217, 218, 219, 363, 424, 454, 466, 476, 478], "subclass": [1, 2, 3, 15, 213, 214, 215, 363, 364, 369], "sublay": [155, 355, 357, 359], "submodul": [155, 213, 363], "subsequ": [216, 219, 291, 401], "subset": [110, 111, 316, 317], "subspac": 305, "substanti": 209, "subtract": [413, 477], "suffer": 378, "suffix": 190, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 190, 191, 193, 205, 207, 286, 287, 290, 291, 365], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 157, 175, 176, 178, 179, 182, 187, 196, 197, 198, 199, 210, 330, 378, 379, 396], "sum": [10, 13, 15, 23, 215, 216, 217, 218, 219, 228, 231, 249, 250, 251, 253, 254, 260, 282, 301, 311, 328, 329, 330, 331, 332, 378, 402, 403, 406, 411, 424, 449, 451, 453, 455, 457, 460, 463, 466, 469, 473], "sum_": [12, 13, 22, 30, 228, 256, 301, 321, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 371, 405, 406, 437, 445, 449, 451, 453, 460, 463], "sum_i": [23, 411], "sum_j": 411, "sum_k": 407, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 346, 347, 348], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 371], "sun": 281, "super": [15, 155, 212, 213, 214, 215, 216, 217, 218, 239, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 363, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393], "superior": [53, 85, 203], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 180, 215, 216, 217, 218, 219, 231, 273, 274, 306, 311, 353, 361, 363, 375, 382, 401, 402, 403, 404, 407, 408, 409, 410, 412, 413, 415, 418, 429, 434, 435, 437, 441, 443, 445, 449, 450, 451, 455, 460, 464, 466, 475, 485], "suppos": 485, "sure": [363, 485], "svd": [20, 24], "swap": [12, 321], "swapax": 424, "swin": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "swin_bas": 173, "swin_larg": 173, "swin_smal": 173, "swin_tini": 173, "swin_v2": 195, "swin_v2_bas": 173, "swin_v2_giant": 173, "swin_v2_hug": 173, "swin_v2_larg": 173, "swin_v2_smal": 173, "swin_v2_tini": 173, "swintransform": [196, 197, 198, 199], "swintransformer_v2": [200, 201, 202, 203, 204, 205], "swish": [96, 97, 304, 323], "symbol": [12, 13, 14, 321], "symmetr": [17, 261, 262, 263, 290, 291, 303], "syntax": [1, 10, 12, 13, 14, 321, 392, 407], "system": [15, 16, 17, 24, 25, 26, 85, 100, 173, 390, 402, 460], "systemat": [85, 485], "szegedi": [74, 85], "t": [10, 15, 24, 30, 85, 159, 173, 174, 355, 356, 357, 359, 366, 367, 368, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 402, 407, 452, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "t0": 376, "t1": [402, 452], "t2": [402, 452], "t_": [356, 366], "t_0": 356, "t_cpu": 402, "t_i": 356, "t_max": 366, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 353], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 363, 485], "take": [25, 346, 347, 348, 349, 350, 351, 361, 370, 389, 392, 474], "taken": 449, "tan": [85, 424], "tangent": [229, 303, 428, 447, 448], "tanh": [86, 216, 219, 222, 223, 245, 286, 287, 290, 291, 293, 304, 323, 424], "tanhnetwork": 303, "target": [5, 6, 7, 8, 51, 156, 157, 158, 219, 249, 250, 251, 253, 254, 261, 262, 263, 273, 328, 329, 330, 331, 332, 343, 344, 345, 355, 356, 357, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 453, 476, 478, 483], "target_tensor": [328, 329, 330, 331, 332], "target_transform": [5, 6, 7, 8], "task": [4, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 227, 228, 233, 246, 249, 250, 253, 254, 281, 282, 300, 301, 308, 309, 310, 328, 329, 330, 331, 332, 338, 339, 340, 346, 348, 349, 351, 355, 379, 391, 401, 418, 419, 485], "techniqu": [17, 21, 39, 60, 77, 85, 101, 152, 200, 202, 205, 239, 255, 313, 314, 316, 317, 318, 319, 338, 339, 340, 365, 375, 483, 485], "templat": 156, "tempor": [308, 310, 348, 351], "temporarili": [389, 392], "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 389, 390, 392, 394, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "term": [12, 24, 52, 187, 188, 189, 191, 192, 193, 246, 275, 276, 277, 278, 279, 280, 305, 355, 357, 359, 376, 380, 382, 383, 384, 386], "test": [4, 5, 6, 7, 8, 419], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 159, 174, 215, 221, 224, 225, 226, 228, 231, 232, 233, 234, 239, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 328, 329, 330, 331, 332, 346, 347, 348, 349, 350, 351, 353, 355, 356, 358, 367, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 397, 402, 403, 404, 406, 408, 409, 410, 412, 413, 425, 429, 436, 437, 438, 440, 445, 446, 451, 453, 455, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 477, 478, 480, 481, 482], "tgt": [173, 355, 356, 357], "tgt_is_caus": [356, 357], "tgt_key_padding_mask": [355, 356, 357], "tgt_mask": [355, 356, 357], "tgt_vocab_s": [156, 157, 158], "th": [246, 328, 329, 331, 332, 338, 339, 340, 408, 409, 412], "than": [0, 1, 7, 12, 14, 217, 218, 221, 224, 251, 278, 279, 280, 292, 296, 302, 321, 330, 364, 371, 380, 419, 429, 449, 453, 454, 461, 468, 476, 478, 483], "thei": [0, 27, 85, 159, 212, 216, 218, 219, 305, 460, 464, 476, 478, 485], "them": [3, 10, 15, 85, 173, 213, 218, 236, 311, 376, 391, 455, 468, 474, 477, 485], "therebi": [313, 347, 348, 350, 351], "theta": [376, 377, 481], "theta_": [376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "theta_t": [383, 384], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 159, 161, 163, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 187, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 225, 227, 228, 229, 232, 233, 234, 236, 238, 239, 246, 248, 261, 271, 273, 274, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 353, 363, 365, 366, 367, 368, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 397, 398, 399, 401, 402, 406, 407, 411, 414, 416, 420, 421, 422, 423, 429, 433, 434, 435, 436, 437, 438, 441, 443, 445, 446, 449, 450, 451, 452, 453, 454, 459, 461, 463, 464, 465, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "third": [191, 192, 193], "those": [87, 88, 89, 218, 291], "thread": 389, "three": [27, 89, 234, 263, 266, 270, 275, 276, 277, 310, 319, 336, 340, 345, 348, 351], "threshold": [24, 251, 330, 372], "threshold_mod": 372, "through": [0, 3, 4, 14, 19, 24, 25, 27, 28, 39, 73, 82, 85, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 159, 215, 216, 219, 238, 246, 248, 273, 281, 282, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 326, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 355, 356, 358, 359, 389, 394, 398, 405, 406, 411, 460, 462, 464, 467, 470, 471, 472, 485], "throughout": [156, 194, 195, 206, 226, 475], "ti": [173, 211], "tier": 48, "tight": 190, "tile": [14, 458], "time": [0, 3, 15, 22, 87, 88, 89, 91, 232, 275, 296, 299, 305, 308, 346, 347, 348, 349, 350, 351, 356, 358, 365, 372, 376, 377, 378, 379, 380, 384, 386, 463, 469], "tini": [43, 44, 52, 77, 81, 85, 168, 173, 178, 186], "tinynet": 15, "to_tensor": [5, 6, 7, 8], "togeth": [219, 474, 485], "toggl": [389, 392], "token": [77, 159, 173, 181, 188, 353], "token_mix": 77, "too": [15, 365, 385], "tool": [3, 363, 365, 389, 391, 401, 474, 485], "top": [17, 18, 19, 25, 27, 48, 231, 246, 248, 273, 305, 306, 308, 309, 310, 324, 326, 476, 478], "topolog": 15, "torch": [145, 311, 452], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 305, 321, 389, 402, 464], "total_op": 389, "totensor": [474, 485], "touch": 15, "trace": [16, 424], "traceback": 392, "track": [15, 275, 276, 277, 334, 335, 336, 338, 339, 340, 363, 389, 390, 392, 394, 396, 397, 398, 400, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 446, 452, 453, 459, 475], "track_running_stat": [275, 276, 277, 334, 335, 336, 338, 339, 340], "trade": [43, 99], "tradit": [7, 10, 30, 85, 102, 159, 169, 173, 377, 378, 381, 382, 383], "trail": 259, "train": [1, 2, 3, 4, 5, 6, 7, 8, 30, 39, 60, 73, 74, 75, 85, 136, 137, 138, 139, 144, 155, 156, 173, 174, 212, 213, 216, 218, 219, 228, 237, 238, 239, 240, 241, 242, 243, 255, 258, 271, 274, 293, 296, 299, 300, 301, 303, 313, 314, 315, 316, 317, 318, 319, 334, 335, 336, 338, 339, 340, 353, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 474, 477, 478, 479, 480, 481, 482, 485], "trainabl": [155, 334, 335, 336, 338, 339, 340, 353, 363], "transact": 281, "transfer": [258, 338, 339], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "transform_pipelin": [474, 485], "transformed_imag": [474, 485], "transformer_bas": 173, "transformer_big": 173, "transformer_decod": 356, "transformer_encod": 358, "transformerdecod": [323, 355, 360], "transformerdecoderlay": [323, 355, 356, 360], "transformerencod": [323, 355, 360], "transformerencoderlay": [323, 355, 358, 360], "transit": [30, 54, 330], "translat": [156, 347, 350, 355], "transpar": 15, "transpos": [12, 17, 424], "transposit": [12, 321], "treat": [0, 212, 341, 363], "triangular": [17, 25, 356, 357, 358, 359, 367, 470, 471], "triangular2": 367, "tril": 458, "triu": 458, "true": [1, 2, 3, 4, 5, 6, 7, 8, 15, 27, 73, 74, 75, 96, 97, 103, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 187, 188, 189, 190, 191, 192, 193, 194, 195, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 236, 237, 239, 240, 241, 242, 243, 246, 248, 255, 258, 271, 273, 275, 276, 277, 278, 279, 280, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 384, 388, 390, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475], "truli": 15, "truncat": 155, "truncate_from": 155, "try": 0, "tu": [173, 174], "tune": [99, 102, 485], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 174, 213, 214, 232, 233, 234, 236, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 308, 309, 310, 311, 325, 341, 344, 345, 346, 347, 348, 349, 350, 351, 361, 379, 380, 381, 382, 383, 385, 396, 397, 398, 400, 402, 416, 420, 422, 436, 437, 438, 445, 451, 453, 454, 455, 457, 460, 461, 464, 465, 466, 467, 468, 472, 473, 476, 477, 478, 483], "twice": 461, "two": [18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 174, 232, 233, 234, 246, 265, 269, 281, 282, 309, 318, 324, 335, 339, 347, 350, 359, 379, 380, 381, 382, 383, 385, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 446, 449, 454, 460, 466], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 159, 169, 174, 180, 181, 194, 195, 212, 213, 214, 246, 324, 355, 357, 359, 388, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 452, 460, 475], "typeerror": [0, 1, 2, 213, 364], "typic": [15, 16, 30, 93, 99, 112, 123, 140, 170, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 228, 237, 238, 274, 281, 298, 299, 301, 314, 315, 332, 334, 335, 336, 338, 339, 340, 375, 376, 384, 386, 472, 475, 477, 481, 483, 485], "u": [24, 27, 287, 289, 291], "u_": 381, "ultra": [45, 118, 201], "unchang": [15, 212, 243, 292, 296, 297, 299, 313, 316, 317, 318, 319, 325, 462, 467], "uncontrol": 15, "undefin": 412, "under": [124, 125, 126, 127, 128, 129, 363], "underbrac": 22, "underdetermin": 24, "undergo": [239, 359, 485], "underli": [0, 69, 70, 71, 72, 74, 75, 76, 83, 84, 402, 446, 452, 457, 462, 464, 473], "understand": [15, 85, 152, 155, 170, 171, 172, 191, 192, 202, 219, 485], "understood": 12, "unexpect": [10, 213, 216, 219, 260, 401], "unfold": [235, 245, 312, 323], "unifi": [0, 15, 388], "uniform": [285, 287, 291, 308, 309, 310, 324, 326, 395, 396, 397, 401, 479, 480, 481, 482], "uniformli": [396, 400], "uniniti": [416, 417], "unintend": [10, 13], "union": 145, "uniqu": [17, 24, 26, 215, 217, 353], "unit": [28, 86, 152, 221, 222, 224, 225, 226, 286, 287, 290, 291, 292, 293, 296, 297, 299, 313], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 389], "unlik": [30, 169, 173, 194, 212, 215, 216, 217, 218, 224, 292, 296, 313, 341, 377, 378, 380, 381, 382, 383, 385], "unnecessari": 10, "unpad": 461, "unseen": 485, "unspecifi": 388, "unsqueez": 458, "unstabl": 21, "unsur": 10, "until": 15, "up": [173, 364, 369, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 481, 483], "updat": [4, 40, 212, 218, 219, 313, 316, 317, 318, 319, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392], "upon": [40, 75, 85, 92, 93, 203, 205, 215, 216, 217, 218], "upper": [25, 289, 367, 385, 400, 470, 471], "upper_triangular": 471, "upsampl": [323, 362], "upstream": 15, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 159, 161, 163, 165, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 246, 248, 253, 255, 256, 258, 260, 262, 263, 271, 273, 274, 275, 276, 277, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 361, 363, 364, 365, 366, 368, 370, 371, 373, 375, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 433, 436, 437, 438, 445, 446, 451, 459, 460, 461, 463, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 159, 174, 216, 219, 239, 278, 279, 280, 306, 314, 364, 375, 389, 392, 419, 476, 477, 478, 479, 480, 481, 482, 483], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 215, 216, 217, 218, 363, 370, 378, 474, 475, 485], "usual": 329, "util": [3, 16, 30, 93, 141, 142, 143, 186, 203, 217, 218, 238, 363, 401], "v": [15, 19, 24, 27, 30, 85, 159, 174, 181, 231, 305, 306, 357, 359, 379, 380, 382, 383, 415], "v1": [73, 74, 82, 83, 84, 85, 90, 91], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 173, 181, 187, 188, 189, 191, 192, 193, 200, 201, 202, 203, 204, 205], "v3": [73, 75, 76, 85, 92, 96, 97], "v4": [73, 76, 85, 93, 99, 100, 101, 102], "v_": [376, 379, 380, 382, 383, 384, 386], "v_2": 159, "v_i": 305, "v_stack": 473, "v_t": [383, 384], "val": 284, "val_loss": 372, "valid": [275, 276, 277, 278, 279, 280, 282, 308, 309, 310, 372, 450], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 159, 169, 170, 171, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 213, 215, 217, 219, 221, 224, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 273, 274, 275, 276, 277, 281, 284, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 303, 305, 306, 313, 314, 315, 316, 317, 318, 319, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 361, 365, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 394, 396, 397, 398, 399, 400, 401, 414, 415, 416, 417, 418, 419, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438, 440, 441, 443, 444, 455, 459, 461, 462, 464, 472, 477, 479, 480, 482], "valuabl": 401, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 364], "van": 85, "vanish": [85, 292, 299, 334, 335, 336], "var": 424, "varepsilon": 260, "vari": [39, 140, 216, 218, 261, 273, 343, 367, 481], "variabl": [213, 219, 261, 262, 263, 325, 343, 344, 345, 363, 390, 396, 416, 478, 481], "varianc": [226, 237, 255, 258, 275, 276, 277, 286, 287, 290, 291, 299, 313, 334, 335, 336, 338, 339, 340, 341, 379, 380, 381, 382, 383, 398, 451, 481, 485], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 162, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 179, 182, 184, 185, 186, 187, 188, 190, 192, 201, 379, 380, 381], "variat": [278, 279, 280, 338, 339, 340, 478, 485], "varieti": [4, 82, 103, 401, 485], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 85, 86, 93, 94, 102, 154, 173, 180, 297, 375, 401, 419, 436, 438, 461, 475], "vasudevan": 85, "vaswani": [173, 355], "vdim": 305, "vdot": 411, "vector": [14, 19, 24, 25, 26, 27, 246, 248, 271, 305, 324, 326, 353, 405, 406, 407, 411], "veloc": [376, 384, 386], "verbos": [12, 366, 367, 368, 369, 370, 371, 372, 373], "veri": [24, 47, 85, 115, 117, 182, 377], "verifi": 10, "versa": 385, "versatil": [30, 102, 173, 401, 460], "version": [15, 27, 39, 73, 77, 82, 86, 87, 88, 99, 181, 183, 190, 311, 321, 384, 411, 465, 479], "vertic": [468, 473, 482], "vgg": 145, "vggnet": [146, 147, 148, 149], "vggnet_11": 85, "vggnet_13": 85, "vggnet_16": 85, "vggnet_19": 85, "via": [3, 4, 15, 102, 140, 174, 402], "vice": 385, "video": [234, 243, 277, 310, 340, 348, 351], "view": [82, 86, 216, 347, 348, 349, 350, 351, 453, 464], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "visual": [85, 152, 159, 178, 189], "vit": [30, 169, 194, 207, 208, 209, 210, 211], "vit_bas": 173, "vit_hug": 173, "vit_larg": 173, "vit_smal": 173, "vit_tini": 173, "vocabulari": [156, 157, 158, 353], "vol": 85, "vollgraf": 7, "volumetr": [234, 243, 277, 310, 340, 348, 351], "vstack": 458, "w": [10, 12, 13, 14, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 233, 234, 236, 238, 242, 243, 246, 248, 256, 262, 263, 265, 266, 269, 270, 273, 274, 276, 277, 281, 305, 308, 309, 310, 321, 324, 326, 335, 336, 337, 339, 340, 344, 345, 348, 351, 476, 478], "w24": [172, 173], "w_": [233, 234, 262, 263, 265, 266, 269, 270, 273, 309, 310, 311, 344, 345, 347, 348, 350, 351], "w_1": [357, 359], "w_2": [357, 359], "w_k": [30, 159, 174], "w_out": [233, 234, 265, 266, 269, 270], "w_q": [159, 174], "w_v": [159, 174], "wa": [15, 74, 313, 316, 317, 318, 319, 389], "wai": [1, 10, 12, 14, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 321, 390, 464], "wait": 372, "wang": [85, 173], "want": [0, 474, 476], "warn": [215, 217, 305], "we": [3, 391, 460], "wei": 85, "weight": [85, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 159, 174, 180, 181, 194, 195, 231, 232, 233, 234, 246, 248, 249, 250, 254, 255, 258, 259, 271, 273, 281, 282, 286, 287, 290, 291, 305, 306, 308, 309, 310, 313, 314, 316, 317, 318, 319, 324, 326, 328, 329, 332, 334, 335, 336, 338, 339, 340, 341, 353, 355, 356, 357, 358, 359, 363, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 396, 401], "weight1": 217, "weight2": 217, "weight_decai": [376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "weihao": 85, "weinberg": 85, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 190, 191, 205, 207, 286, 287, 311], "wenhai": 173, "were": 219, "weyand": 85, "what": [12, 14, 321], "whatev": 389, "when": [0, 1, 3, 10, 13, 15, 22, 59, 85, 159, 213, 216, 218, 219, 221, 224, 232, 233, 234, 271, 292, 315, 325, 334, 335, 336, 338, 339, 340, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 377, 385, 389, 390, 392, 393, 401, 412, 453, 474, 476], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 85, 96, 97, 98, 99, 100, 101, 150, 159, 190, 192, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 366, 367, 368, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 401, 402, 403, 404, 408, 409, 410, 412, 413, 416, 417, 429, 433, 434, 435, 436, 437, 438, 441, 443, 445, 449, 450, 451, 454, 455, 459, 461, 463, 466, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482], "wherev": 459, "whether": [1, 15, 18, 30, 59, 73, 74, 75, 96, 97, 103, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 213, 214, 286, 287, 315, 384, 390, 394, 396, 397, 398, 400, 402, 416, 417, 436, 437, 438, 445, 451], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 85, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 156, 159, 161, 163, 165, 169, 173, 174, 181, 185, 194, 196, 197, 198, 199, 213, 215, 217, 219, 224, 228, 251, 260, 274, 278, 279, 280, 282, 292, 293, 296, 298, 301, 303, 313, 330, 332, 334, 335, 336, 338, 339, 340, 341, 353, 357, 359, 371, 373, 379, 380, 382, 384, 390, 396, 397, 400, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 451, 453, 454, 455, 463, 464, 465, 466, 468, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 483, 485], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 85, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 168, 169, 170, 171, 172, 173, 177, 184, 185, 186, 188, 189, 190, 191, 195, 209, 216, 219, 237, 238, 293, 297, 298, 315, 356, 363, 366, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 446, 459, 464, 468, 479, 485], "who": [215, 216, 217, 218], "whose": [27, 366, 367, 368, 369, 370, 371, 372, 373, 417, 421, 423, 425, 429, 433, 440, 446], "wide": [4, 5, 6, 8, 16, 24, 52, 85, 102, 112, 120, 121, 122, 204, 225, 297, 308, 309, 329], "wide_resnet_101": 85, "wide_resnet_50": 85, "wider": [43, 121, 122, 232, 233], "wideresnet": 85, "width": [30, 59, 60, 85, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 166, 177, 178, 179, 233, 234, 236, 242, 243, 256, 262, 263, 265, 266, 269, 270, 273, 274, 282, 309, 310, 311, 335, 336, 337, 339, 340, 344, 345, 347, 348, 350, 351, 361, 388, 476, 478, 483], "width_coef": 59, "width_multipli": [90, 94], "window": [173, 174, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 264, 265, 266, 268, 269, 270, 346, 347, 348, 349, 350, 351, 377, 436, 438], "windows_s": [194, 195], "wise": [10, 14, 85, 134, 136, 137, 138, 139, 174, 221, 222, 224, 225, 226, 227, 228, 229, 239, 275, 276, 277, 281, 295, 301, 302, 313, 315, 316, 317, 318, 319, 363, 391, 403, 404, 407, 408, 409, 410, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 439, 440, 441, 442, 443, 444, 447, 448, 449, 457, 473], "within": [2, 85, 155, 156, 173, 194, 206, 212, 215, 216, 217, 218, 219, 229, 273, 274, 291, 293, 294, 295, 297, 299, 300, 302, 303, 308, 309, 310, 311, 313, 316, 317, 321, 325, 328, 329, 330, 331, 332, 334, 335, 336, 338, 341, 346, 347, 348, 349, 350, 351, 375, 389, 414, 429, 481, 485], "without": [10, 15, 123, 173, 215, 216, 217, 246, 248, 308, 309, 310, 324, 326, 389, 390, 393, 436, 462, 464, 472], "word": [173, 271, 353], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "workflow": [13, 401, 485], "worth": 173, "wrap": [3, 363, 365, 389, 392, 402, 452], "wrapper": 363, "wu": 173, "www": [5, 6], "x": [15, 16, 26, 30, 82, 85, 86, 130, 145, 150, 155, 174, 212, 213, 215, 216, 217, 218, 219, 228, 239, 246, 248, 260, 274, 278, 279, 280, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 357, 358, 359, 363, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392, 394, 396, 397, 398, 400, 416, 417, 433, 454, 459, 460, 465, 466, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483], "x1": 324, "x2": 324, "x_": [30, 256, 329, 332, 337, 358, 460], "x_0": 358, "x_1": 159, "x_2": 159, "x_c": [329, 332], "x_i": [260, 328, 358, 402], "x_k": 329, "x_test": 15, "x_train": 15, "xavier": [286, 287, 290, 291], "xavier_norm": 285, "xavier_uniform": 285, "xiao": 7, "xie": 85, "xl": [72, 85, 173], "xlarg": [53, 85, 179], "xy": 460, "x\u2081": 324, "x\u2082": 324, "y": [15, 30, 85, 150, 215, 216, 217, 218, 219, 260, 274, 278, 279, 280, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 394, 396, 397, 398, 400, 402, 416, 417, 459, 460, 465, 479], "y1": 454, "y2": 454, "y_": [30, 256, 329, 332, 337, 460], "y_c": [329, 332], "y_i": [260, 328], "y_train": 15, "yann": [8, 85], "yet": [15, 50, 52, 100, 177, 391], "yield": [0, 1, 213], "you": [0, 12, 14, 15, 92, 155, 173, 216, 218, 219, 311, 321, 355, 363, 375, 389, 390, 401, 416, 417, 418, 423, 450, 452, 474, 476, 485], "your": [10, 15, 92, 100, 363, 375, 390, 401, 485], "yu": 85, "z": [15, 85, 357, 359, 417, 422, 423], "zalandoresearch": 7, "ze": [85, 173], "zeiler": [85, 152], "zero": [22, 24, 25, 75, 155, 221, 224, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 260, 264, 265, 266, 268, 269, 270, 271, 284, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 299, 305, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 341, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 363, 364, 377, 378, 379, 380, 381, 382, 383, 384, 416, 417, 418, 423, 424, 429, 440, 461, 470, 471], "zero_grad": [15, 214, 364, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 402], "zeros_lik": [417, 424], "zhang": 85, "zhmoginov": 85, "zhu": 85, "zhuang": 85, "zihang": [85, 173], "zisserman": 85, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "Transformers", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 391, "1d": 391, "2": 391, "2d": 391, "3": 391, "It": 390, "The": 15, "ab": 425, "about": [161, 163, 165], "abstract": 15, "acceler": 15, "activ": [223, 245, 304, 323], "ad": 391, "adadelta": 377, "adagrad": 378, "adam": 379, "adamax": 381, "adamw": 380, "adaptive_avg_pool1d": 261, "adaptive_avg_pool2d": 262, "adaptive_avg_pool3d": 263, "adaptiveavgpool1d": 343, "adaptiveavgpool2d": 344, "adaptiveavgpool3d": 345, "add": 403, "addit": [24, 305], "advanc": [236, 485], "advantag": [10, 12, 13, 14, 321], "alexnet": [28, 29, 85], "algebra": 20, "algorithm": [376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "align": [15, 391], "alpha_dropout": 237, "alphadropout": 313, "also": 375, "anoth": 452, "arang": 414, "arcco": 426, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152, 159, 174], "arcsin": 427, "arctan": 428, "asgd": 376, "attent": [230, 231, 245, 282, 307, 323], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 212, 214, 215, 216, 217, 218, 219, 275, 276, 277, 278, 279, 280, 281, 292, 293, 296, 297, 299, 300, 301, 303, 308, 309, 310, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 388, 402, 476, 477, 478, 479, 480, 481, 482, 483], "autodiff": 15, "automat": 15, "avg_pool1d": 264, "avg_pool2d": 265, "avg_pool3d": 266, "avgpool1d": 346, "avgpool2d": 347, "avgpool3d": 348, "axi": [391, 446], "backend": 15, "backpropag": 402, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 238, 246, 248, 273, 281, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 457, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473], "base": [374, 402], "basic": 15, "batch_norm": 255, "batchnorm": 283, "batchnorm1d": 334, "batchnorm2d": 335, "batchnorm3d": 336, "bceloss": 328, "behavior": [261, 262, 263, 343, 344, 345], "benefit": [389, 392], "bernoulli": 394, "between": [15, 402], "bilinear": [246, 324], "binari": 424, "binary_cross_entropi": 249, "bottleneck": [96, 97], "broadcast": [391, 453], "broadcast_to": 453, "buffer": 212, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 238, 239, 246, 248, 261, 262, 263, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 457, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483], "captur": 393, "centercrop": 476, "choleski": 17, "chunk": 454, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 159, 169, 174, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 275, 276, 277, 278, 279, 280, 281, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 402, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "clip": 429, "co": 430, "coatnet": [30, 85], "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 363], "compos": 474, "comput": [454, 459, 465], "concatdataset": [0, 1], "concaten": 455, "conclus": [3, 10, 12, 13, 14, 15, 321, 363, 365, 390, 391, 401, 475, 485], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 175, 176, 177, 178, 179], "constant": 284, "contain": 220, "conv": 283, "conv1d": [232, 308], "conv2d": [233, 309], "conv3d": [234, 310], "convbnrelu1d": 275, "convbnrelu2d": 276, "convbnrelu3d": 277, "convnet": 85, "convnext": [39, 85], "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [173, 235, 245, 283, 312, 323], "core": 15, "cosh": 431, "cosineannealinglr": 366, "count_flop": 389, "creat": [214, 402, 452], "cross_entropi": 250, "crossentropyloss": 329, "crossvit": [159, 173], "crossvit_15": 160, "crossvit_15_dagg": 161, "crossvit_18": 162, "crossvit_18_dagg": 163, "crossvit_9": 164, "crossvit_9_dagg": 165, "crossvit_bas": 166, "crossvit_smal": 167, "crossvit_tini": 168, "cube": 432, "custom": [1, 2, 3, 213, 364, 375, 485], "cvt": [169, 173], "cvt_13": 170, "cvt_21": 171, "cvt_w24": 172, "cycliclr": 367, "dagger": [161, 163, 165], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 213, 364, 375], "definit": [12, 13, 14, 260, 321], "densenet": [54, 85], "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 278, "depthseparableconv2d": 279, "depthseparableconv3d": 280, "depthwis": 283, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 393], "design": 15, "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 159, 174, 305, 355, 356, 357, 358, 359], "devic": [15, 402], "diag": 415, "differ": 156, "differenti": 15, "dilat": 236, "div": 404, "dot": 405, "drop_block": 238, "drop_path": 239, "dropblock": 314, "dropout": [240, 244, 245, 316, 320, 323], "dropout1d": [241, 317], "dropout2d": [242, 318], "dropout3d": [243, 319], "droppath": 315, "dtype": 402, "educ": 15, "efficientnet": [59, 85], "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 322, 323], "elu": [221, 292], "embed": [271, 353], "empti": 416, "empty_lik": 417, "enabl": 15, "enhanc": 181, "evalu": 15, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485], "excit": 283, "exp": 433, "exponentiallr": 368, "express": [256, 466], "ey": 418, "fashionmnist": 7, "featur": [4, 16, 136, 137, 138, 139, 144, 375, 401, 485], "flatten": 456, "formula": [366, 367, 368, 370, 371, 372, 373], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 239, 246, 248, 261, 262, 263, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 455, 457, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483], "free": 402, "from": [156, 452], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 286, 287, 288, 289, 290, 291, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "fuse": 283, "futur": 4, "gelu": [222, 293], "gener": [395, 424], "get": 375, "global_response_norm": 256, "globalresponsenorm": 337, "gpu": [15, 402], "grad_en": 390, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 238, 246, 248, 273, 281, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473], "hardsigmoid": 294, "hardswish": 295, "hook": [15, 402], "how": [15, 390], "hstack": 457, "huber_loss": 251, "huberloss": 330, "hybrid": 30, "hyperparamet": [110, 111], "ident": 325, "imag": [9, 484], "implement": [159, 174], "incept": [73, 85], "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": [77, 85], "inceptionresnet": 82, "infer": 402, "init": [284, 286, 287, 288, 289, 290, 291], "initi": 285, "inner": 406, "input": 452, "inspect": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "instal": 15, "instance_norm": 258, "instancenorm1d": 338, "instancenorm2d": 339, "instancenorm3d": 340, "integr": [3, 363, 401, 485], "interpol": 273, "inv": 21, "kaiming_norm": 286, "kaiming_uniform": 287, "kei": [3, 4, 136, 137, 138, 139, 144, 181, 363, 375, 401, 485], "kernel": 283, "lambdalr": 370, "layer": [104, 105, 106, 107, 108, 109, 283, 304, 307, 312, 320, 322, 323, 327, 333, 342, 352, 354, 360, 362], "layer_norm": 259, "layernorm": 341, "leaky_relu": 224, "leakyrelu": 296, "learn": 401, "lenet": [85, 86], "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 245, 247, 248, 323, 326, 327], "linspac": 419, "list": 452, "load": 1, "log": 434, "log2": 435, "loss": [245, 252, 323, 333], "lr": 374, "lr_schedul": [365, 366, 367, 368, 369, 370, 371, 372, 373], "lrschedul": 369, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 245, 363, 375, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 485], "lucid\u00b2": 15, "masked_fil": 459, "mathemat": [12, 13, 14, 159, 174, 256, 260, 305, 321, 355, 356, 357, 358, 359, 366, 367, 368, 370, 371, 372, 373, 402, 466], "matmul": 407, "matrix": 407, "matrix_pow": 22, "max": 436, "max_pool1d": 268, "max_pool2d": 269, "max_pool3d": 270, "maximum": 408, "maxpool1d": 349, "maxpool2d": 350, "maxpool3d": 351, "maxvit": [173, 174], "maxvit_bas": [175, 176], "maxvit_smal": 177, "maxvit_tini": 178, "maxvit_xlarg": 179, "mean": 437, "mechan": [231, 282], "meshgrid": 460, "metadata": 393, "metal": 15, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 213, 214, 355, 356, 357, 358, 359, 364, 366, 367, 368, 369, 370, 371, 372, 373, 388, 402], "min": 438, "minimum": 409, "mlx": 15, "mnist": 8, "mobilenet": [85, 90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 175, 176, 177, 178, 179, 363], "modul": [213, 323], "moduledict": 215, "modulelist": 216, "more": 401, "move": 402, "mse_loss": 253, "mseloss": 331, "multiheadattent": 305, "multipl": [0, 407], "multipli": 410, "multisteplr": 371, "nadam": 382, "network": 15, "neural": 15, "new": 391, "newaxi": 391, "nll_loss": 254, "nllloss": 332, "nn": [15, 156, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 363], "no_grad": 392, "norm": 23, "normal": [245, 257, 260, 288, 323, 342, 477], "number": 395, "numer": 388, "ones": 420, "ones_lik": 421, "oper": [20, 407, 424], "optim": [364, 365, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "option": 305, "organ": 363, "other": 15, "outer": 411, "overview": [3, 4, 10, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 305, 355, 356, 357, 358, 359, 363, 365, 375, 389, 392, 401, 485], "pad": 461, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 299, 300, 301, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "parameterdict": 217, "parameterlist": 218, "pass": 150, "perform": 402, "pinv": 24, "pipelin": [3, 485], "pitfal": 390, "pool": [245, 267, 323, 352], "potenti": 390, "power": 412, "process": 271, "properti": [214, 402], "pvt": [173, 180], "pvt_huge": 182, "pvt_larg": 183, "pvt_medium": 184, "pvt_small": 185, "pvt_tini": 186, "pvt_v2": 181, "pvt_v2_b0": 187, "pvt_v2_b1": 188, "pvt_v2_b2": 189, "pvt_v2_b2_li": 190, "pvt_v2_b3": 191, "pvt_v2_b4": 192, "pvt_v2_b5": 193, "pyramid": 173, "qr": 25, "radam": 383, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 396, "randint": 397, "randn": 398, "random": [394, 395, 396, 397, 398, 399, 400, 401], "randomcrop": 478, "randomgrayscal": 479, "randomhorizontalflip": 480, "randomrot": 481, "randomverticalflip": 482, "ravel": 462, "rearrang": [10, 12, 321], "reciproc": 439, "reduc": [10, 13], "reducelronplateau": 372, "refer": [5, 6, 7, 8, 281, 375], "register_model": 393, "regular": 238, "relu": [225, 283, 297], "relu6": 298, "repeat": [10, 14, 463], "represent": [159, 174, 388, 402], "reshap": 464, "resiz": 483, "resnest": [85, 103], "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": [85, 112], "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": [85, 123], "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 282, 284, 286, 287, 288, 289, 290, 291, 298, 321, 353, 389, 390, 392, 394, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "rmsprop": 384, "roll": 465, "rotat": 274, "rprop": 385, "rule": [407, 446, 453], "scaled_dot_product_attent": 231, "scaleddotproductattent": 306, "schedul": 374, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 375, "seed": 399, "select": 283, "selectivekernel": 282, "selu": [226, 299], "semodul": 281, "senet": [85, 130], "separ": 283, "sequenti": 219, "sgd": 386, "shape": 15, "sigmoid": [227, 300], "sign": 440, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "sin": 441, "sinh": 442, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": [85, 140], "softmax": [228, 301], "solv": 26, "spars": [323, 354], "specif": [160, 161, 162, 163, 164, 165, 166, 167, 168], "split": 466, "sqrt": 443, "squar": 444, "squeez": [283, 467], "stack": 468, "start": 375, "state": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "steplr": 373, "sub": 413, "sum": 445, "summar": 155, "summari": 155, "svd": 27, "swap": 446, "swapax": 446, "swin": 173, "swin_bas": 196, "swin_larg": 197, "swin_smal": 198, "swin_tini": 199, "swin_v2_bas": 200, "swin_v2_giant": 201, "swin_v2_hug": 202, "swin_v2_larg": 203, "swin_v2_smal": 204, "swin_v2_tini": 205, "swintransform": 194, "swintransformer_v2": 195, "swish": 302, "switch": 15, "tabl": 155, "tan": 447, "tanh": [229, 303, 448], "tensor": [15, 391, 402, 424, 452, 458], "tile": 469, "totensor": 475, "trace": 449, "track": 402, "train": 15, "transform": [156, 173, 323, 355, 360, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 356, "transformerdecoderlay": 357, "transformerencod": 358, "transformerencoderlay": 359, "transpos": 450, "tril": 470, "triu": 471, "unari": 424, "unfold": [236, 311], "uniform": [289, 400], "unsqueez": 472, "upsampl": 361, "us": [1, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 402, 452], "usag": [4, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 212, 274, 305, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 370, 371, 372, 373, 388, 390, 391, 460, 474, 475, 485], "util": [245, 272], "utilit": 458, "valu": 466, "var": 451, "variant": [161, 163, 165], "verif": 15, "vggnet": [85, 145], "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [173, 323, 362], "visual": 173, "vit": [173, 206], "vit_bas": 207, "vit_hug": 208, "vit_larg": 209, "vit_smal": 210, "vit_tini": 211, "vstack": 473, "weight": 285, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 390], "xavier_norm": 290, "xavier_uniform": 291, "xception": [85, 150, 151], "zero": 422, "zeros_lik": 423, "zfnet": [85, 152, 153]}})