Search.setIndex({"alltitles": {"@ Operator": [[400, "operator"]], "About Dagger (^\\dagger) Variants": [[161, "about-dagger-dagger-variants"], [163, "about-dagger-dagger-variants"], [165, "about-dagger-dagger-variants"]], "Activation Functions": [[217, null], [239, null]], "Activation Layers": [[298, null], [317, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[299, "additional-options"]], "Advanced Example with Dilation": [[230, "advanced-example-with-dilation"]], "Advanced Features": [[478, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [315, "advantages"]], "AlexNet": [[28, null], [85, "alexnet"]], "Algorithm": [[370, "algorithm"], [371, "algorithm"], [372, "algorithm"], [373, "algorithm"], [374, "algorithm"], [375, "algorithm"], [376, "algorithm"], [377, "algorithm"], [378, "algorithm"], [379, "algorithm"], [380, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"], [159, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[224, null], [239, null]], "Attention Layers": [[301, null], [317, null]], "Attention Mechanism": [[225, "attention-mechanism"], [276, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [206, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [269, "attributes"], [270, "attributes"], [271, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"], [275, "attributes"], [286, "attributes"], [287, "attributes"], [290, "attributes"], [291, "attributes"], [293, "attributes"], [294, "attributes"], [295, "attributes"], [297, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [307, "attributes"], [309, "attributes"], [310, "attributes"], [311, "attributes"], [312, "attributes"], [313, "attributes"], [318, "attributes"], [319, "attributes"], [320, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [332, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [337, "attributes"], [338, "attributes"], [339, "attributes"], [340, "attributes"], [341, "attributes"], [342, "attributes"], [343, "attributes"], [344, "attributes"], [345, "attributes"], [382, "attributes"], [395, "attributes"], [469, "attributes"], [470, "attributes"], [471, "attributes"], [472, "attributes"], [473, "attributes"], [474, "attributes"], [475, "attributes"], [476, "attributes"]], "Automatic Differentiation (Autodiff)": [[15, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[439, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [398, "backward-gradient-calculation"], [399, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [402, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [418, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [420, "backward-gradient-calculation"], [421, "backward-gradient-calculation"], [422, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [429, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [434, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [437, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [440, "backward-gradient-calculation"], [441, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [456, "backward-gradient-calculation"], [457, "backward-gradient-calculation"], [460, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [462, "backward-gradient-calculation"], [463, "backward-gradient-calculation"], [464, "backward-gradient-calculation"], [465, "backward-gradient-calculation"], [466, "backward-gradient-calculation"]], "Base Class": [[368, null]], "Basic Installation": [[15, "basic-installation"]], "Behavior": [[255, "behavior"], [256, "behavior"], [257, "behavior"], [337, "behavior"], [338, "behavior"], [339, "behavior"]], "Benefits": [[385, "benefits"]], "Binary Functions": [[417, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[446, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [159, "class-signature"], [169, "class-signature"], [188, "class-signature"], [189, "class-signature"], [200, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [286, "class-signature"], [287, "class-signature"], [288, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [299, "class-signature"], [300, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [315, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [337, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [347, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [355, "class-signature"], [358, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [382, "class-signature"], [395, "class-signature"], [467, "class-signature"], [468, "class-signature"], [469, "class-signature"], [470, "class-signature"], [471, "class-signature"], [472, "class-signature"], [473, "class-signature"], [474, "class-signature"], [475, "class-signature"], [476, "class-signature"]], "CoAtNet": [[30, null], [85, "coatnet"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [315, "conclusion"], [357, "conclusion"], [359, "conclusion"], [383, "conclusion"], [384, "conclusion"], [385, "conclusion"], [394, "conclusion"], [468, "conclusion"], [478, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[214, null]], "Conv-BatchNorm-ReLU": [[277, null]], "ConvNeXt": [[39, null], [85, "convnext"]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null]], "Convolution Functions": [[229, null], [239, null]], "Convolution Layers": [[306, null], [317, null]], "Convolutional Transformer (CvT)": [[173, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[445, null]], "Creating a Parameter": [[208, null]], "Creating a tensor on GPU with gradient tracking": [[395, null]], "CrossViT": [[159, null], [173, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[478, "custom-pipelines"]], "CvT": [[169, null]], "Defining a Custom Optimizer": [[369, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[207, null]], "Defining a custom optimizer": [[358, null]], "DenseNet": [[54, null], [85, "densenet"]], "Depthwise Separable Convolution": [[277, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [386, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Device-based dtype inference": [[395, null]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[238, null], [239, null]], "Dropout Layers": [[314, null], [317, null]], "Educational by Design": [[15, "educational-by-design"]], "EfficientNet": [[59, null], [85, "efficientnet"]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[316, null], [317, null]], "Embedding Process": [[265, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[15, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [230, "example"], [357, null], [357, null], [357, null], [383, "example"], [385, "example"], [387, "example"], [389, "example"], [390, "example"], [391, "example"], [392, "example"], [393, "example"], [394, null], [394, null], [394, null], [407, "example"], [408, "example"], [409, "example"], [410, "example"], [411, "example"], [413, "example"], [414, "example"], [415, "example"], [416, "example"], [418, "example"], [419, "example"], [420, "example"], [421, "example"], [422, "example"], [423, "example"], [424, "example"], [425, "example"], [427, "example"], [428, "example"], [430, "example"], [432, "example"], [433, "example"], [434, "example"], [435, "example"], [436, "example"], [437, "example"], [438, "example"], [440, "example"], [441, "example"], [442, "example"], [443, "example"], [444, "example"], [447, "example"], [448, "example"], [450, "example"], [455, "example"], [457, "example"], [460, "example"], [461, "example"], [463, "example"], [464, "example"], [465, "example"], [466, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[384, null]], "Example 2: Adding a new axis to a 2D tensor": [[384, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[384, null]], "Example Usage": [[74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [268, "example-usage"], [467, "example-usage"], [468, "example-usage"], [478, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [240, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [267, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [278, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [300, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [315, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [347, "examples"], [355, "examples"], [358, "examples"], [369, "examples"], [370, "examples"], [371, "examples"], [372, "examples"], [373, "examples"], [374, "examples"], [375, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [386, "examples"], [395, "examples"], [396, "examples"], [397, "examples"], [398, "examples"], [399, "examples"], [401, "examples"], [402, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [406, "examples"], [412, "examples"], [426, "examples"], [429, "examples"], [431, "examples"], [439, "examples"], [445, "examples"], [446, "examples"], [449, "examples"], [452, "examples"], [453, "examples"], [454, "examples"], [456, "examples"], [458, "examples"], [459, "examples"], [462, "examples"], [469, "examples"], [470, "examples"], [471, "examples"], [472, "examples"], [473, "examples"], [474, "examples"], [475, "examples"], [476, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [230, "forward-calculation"], [233, "forward-calculation"], [240, "forward-calculation"], [242, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [267, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [300, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [396, "forward-calculation"], [397, "forward-calculation"], [398, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [429, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [437, "forward-calculation"], [438, "forward-calculation"], [440, "forward-calculation"], [441, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [448, "forward-calculation"], [450, "forward-calculation"], [453, "forward-calculation"], [454, "forward-calculation"], [455, "forward-calculation"], [456, "forward-calculation"], [457, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [464, "forward-calculation"], [465, "forward-calculation"], [466, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [471, "forward-calculation"], [472, "forward-calculation"], [473, "forward-calculation"], [474, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"]], "Forward Method": [[349, "forward-method"], [350, "forward-method"], [351, "forward-method"], [352, "forward-method"], [353, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [215, "function-signature"], [216, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [240, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [267, "function-signature"], [268, "function-signature"], [278, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [383, "function-signature"], [385, "function-signature"], [386, "function-signature"], [387, "function-signature"], [389, "function-signature"], [390, "function-signature"], [391, "function-signature"], [392, "function-signature"], [393, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [406, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [466, "function-signature"]], "Fused Layers": [[277, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[369, "getting-started"]], "Gradient Computation": [[447, "gradient-computation"], [452, "gradient-computation"], [458, "gradient-computation"]], "Gradient hooks": [[395, null]], "Hooks & Shape Alignment": [[15, "hooks-shape-alignment"]], "How It Works": [[383, "how-it-works"], [385, "how-it-works"]], "How to Install": [[15, "how-to-install"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[477, null]], "Implementation Details": [[159, "implementation-details"]], "Inception": [[73, null], [85, "inception"]], "Inception-ResNet": [[85, "inception-resnet"]], "InceptionNeXt": [[77, null], [85, "inceptionnext"]], "InceptionResNet": [[82, null]], "Inspecting Optimizer State": [[369, null], [370, null], [371, null], [372, null], [373, null], [374, null], [375, null], [376, null], [377, null], [378, null], [379, null], [380, null]], "Integration with lucid": [[3, "integration-with-lucid"], [357, "integration-with-lucid"], [394, "integration-with-lucid"], [478, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [357, "key-components"]], "Key Enhancements": [[175, "key-enhancements"]], "Key Features": [[4, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [369, "key-features"], [394, "key-features"]], "Key Transformations": [[478, "key-transformations"]], "LR Schedulers": [[368, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[85, "lenet"], [86, null]], "Learn More": [[394, null]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[239, null], [241, null]], "Linear Layers": [[317, null], [321, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[239, null], [246, null]], "Loss Layers": [[317, null], [327, null]], "Lucid\u00b2 \ud83d\udc8e": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [254, "mathematical-definition"], [315, "mathematical-definition"]], "Mathematical Details": [[299, "mathematical-details"], [349, "mathematical-details"], [350, "mathematical-details"], [351, "mathematical-details"], [352, "mathematical-details"], [353, "mathematical-details"]], "Mathematical Expression": [[250, "mathematical-expression"], [459, "mathematical-expression"]], "Mathematical Formula": [[360, "mathematical-formula"], [361, "mathematical-formula"], [362, "mathematical-formula"], [364, "mathematical-formula"], [365, "mathematical-formula"], [366, "mathematical-formula"], [367, "mathematical-formula"]], "Mathematical Representation": [[159, "mathematical-representation"], [395, "mathematical-representation"]], "Matrix Multiplication Rules": [[400, "matrix-multiplication-rules"]], "MaxViT": [[173, "maxvit"]], "Metadata Captured": [[386, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[15, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [207, "methods"], [208, "methods"], [358, "methods"], [360, "methods"], [361, "methods"], [362, "methods"], [363, "methods"], [364, "methods"], [365, "methods"], [366, "methods"], [367, "methods"], [382, "methods"], [395, "methods"]], "MobileNet": [[85, "mobilenet"], [90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[317, null]], "Moving tensor between devices": [[395, null]], "Neural Networks with lucid.nn": [[15, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[239, null], [251, null]], "Normalization Layers": [[317, null], [336, null]], "Optimizers": [[381, null]], "Organizing Models": [[357, "organizing-models"]], "Others": [[15, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [299, "overview"], [349, "overview"], [350, "overview"], [351, "overview"], [352, "overview"], [353, "overview"], [357, "overview"], [359, "overview"], [369, "overview"], [394, "overview"], [478, "overview"]], "PVT": [[174, null]], "PVT_V2": [[175, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [215, "parameters"], [216, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [240, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [278, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [290, "parameters"], [291, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [299, "parameters"], [300, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [315, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [347, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [382, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"]], "Performing backpropagation": [[395, null]], "Pooling Functions": [[239, null], [261, null]], "Pooling Layers": [[317, null], [346, null]], "Potential Pitfalls": [[383, "potential-pitfalls"], [385, "potential-pitfalls"]], "Properties": [[208, "properties"], [395, "properties"]], "Pyramid Vision Transformer (PVT)": [[173, "pyramid-vision-transformer-pvt"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[388, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [275, "references"], [369, "references"]], "Regularization": [[232, "regularization"]], "Representation": [[382, "representation"]], "ResNeSt": [[85, "resnest"], [103, null]], "ResNeXt": [[85, "resnext"], [123, null]], "ResNet": [[85, "resnet"], [112, null]], "Return Values": [[459, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [215, "returns"], [216, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [240, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [267, "returns"], [268, "returns"], [276, "returns"], [278, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [292, "returns"], [315, "returns"], [347, "returns"], [383, "returns"], [385, "returns"], [387, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [393, "returns"], [396, "returns"], [397, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [466, "returns"]], "SENet": [[85, "senet"], [130, null]], "SKNet": [[85, "sknet"], [140, null]], "Schedulers": [[368, null]], "See Also": [[369, "see-also"]], "Selective Kernel": [[277, null]], "Sparse Layers": [[317, null], [348, null]], "Specifications": [[160, "specifications"], [161, "specifications"], [162, "specifications"], [163, "specifications"], [164, "specifications"], [165, "specifications"], [166, "specifications"], [167, "specifications"], [168, "specifications"]], "Squeeze-and-Excitation": [[277, null]], "Summary Table": [[155, "summary-table"]], "Swin Transformer": [[173, "swin-transformer"]], "SwinTransformer": [[188, null]], "SwinTransformer_V2": [[189, null]], "Switching Between Devices": [[15, "switching-between-devices"]], "Tensor Generating Functions": [[417, null]], "Tensor Operations": [[417, null]], "Tensor Utilites": [[451, null]], "Tensor: The Core Abstraction": [[15, "tensor-the-core-abstraction"]], "Training & Evaluation": [[15, "training-evaluation"]], "Transformer": [[156, null], [173, "transformer"]], "Transformer Layers": [[317, null], [354, null]], "Transformers": [[173, null]], "Unary Functions": [[417, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [206, "usage"], [268, "usage"], [359, "usage"], [383, "usage"], [384, "usage"], [385, "usage"], [453, "usage"], [467, "usage"], [468, "usage"], [478, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [299, "usage-example"], [349, "usage-example"], [350, "usage-example"], [351, "usage-example"], [352, "usage-example"], [353, "usage-example"], [360, "usage-example"], [361, "usage-example"], [362, "usage-example"], [363, "usage-example"], [364, "usage-example"], [365, "usage-example"], [366, "usage-example"], [367, "usage-example"]], "Usage Examples": [[382, "usage-examples"]], "Use another Tensor as input": [[445, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[395, null]], "Using the ASGD Optimizer": [[370, null]], "Using the Adadelta Optimizer": [[371, null]], "Using the Adagrad Optimizer": [[372, null]], "Using the Adam Optimizer": [[373, null]], "Using the AdamW Optimizer": [[374, null]], "Using the Adamax Optimizer": [[375, null]], "Using the NAdam Optimizer": [[376, null]], "Using the RAdam Optimizer": [[377, null]], "Using the RMSprop Optimizer": [[378, null]], "Using the Rprop Optimizer": [[379, null]], "Using the SGD Optimizer": [[380, null]], "Utility Functions": [[239, null], [266, null]], "VGGNet": [[85, "vggnet"], [145, null]], "Verification": [[15, "verification"]], "ViT": [[200, null]], "Vision Layers": [[317, null], [356, null]], "Visual Transformer (ViT)": [[173, "visual-transformer-vit"]], "Weight Initializations": [[279, null]], "Xception": [[85, "xception"], [150, null]], "ZFNet": [[85, "zfnet"], [152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "crossvit_15": [[160, null]], "crossvit_15_dagger": [[161, null]], "crossvit_18": [[162, null]], "crossvit_18_dagger": [[163, null]], "crossvit_9": [[164, null]], "crossvit_9_dagger": [[165, null]], "crossvit_base": [[166, null]], "crossvit_small": [[167, null]], "crossvit_tiny": [[168, null]], "cvt_13": [[170, null]], "cvt_21": [[171, null]], "cvt_w24": [[172, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[360, null]], "lr_scheduler.CyclicLR": [[361, null]], "lr_scheduler.ExponentialLR": [[362, null]], "lr_scheduler.LRScheduler": [[363, null]], "lr_scheduler.LambdaLR": [[364, null]], "lr_scheduler.MultiStepLR": [[365, null]], "lr_scheduler.ReduceLROnPlateau": [[366, null]], "lr_scheduler.StepLR": [[367, null]], "lucid.Numeric": [[382, null]], "lucid.Tensor": [[395, null]], "lucid.abs": [[418, null]], "lucid.add": [[396, null]], "lucid.arange": [[407, null]], "lucid.arccos": [[419, null]], "lucid.arcsin": [[420, null]], "lucid.arctan": [[421, null]], "lucid.broadcast_to": [[446, null]], "lucid.chunk": [[447, null]], "lucid.clip": [[422, null]], "lucid.concatenate": [[448, null]], "lucid.cos": [[423, null]], "lucid.cosh": [[424, null]], "lucid.cube": [[425, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[408, null]], "lucid.div": [[397, null]], "lucid.dot": [[398, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[409, null]], "lucid.empty_like": [[410, null]], "lucid.exp": [[426, null]], "lucid.eye": [[411, null]], "lucid.flatten": [[449, null]], "lucid.grad_enabled": [[383, null]], "lucid.hstack": [[450, null]], "lucid.inner": [[399, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[412, null]], "lucid.log": [[427, null]], "lucid.log2": [[428, null]], "lucid.masked_fill": [[452, null]], "lucid.matmul": [[400, null]], "lucid.max": [[429, null]], "lucid.maximum": [[401, null]], "lucid.mean": [[430, null]], "lucid.meshgrid": [[453, null]], "lucid.min": [[431, null]], "lucid.minimum": [[402, null]], "lucid.models": [[154, null]], "lucid.multiply": [[403, null]], "lucid.newaxis": [[384, null]], "lucid.nn": [[357, null]], "lucid.nn.functional": [[239, null]], "lucid.no_grad": [[385, null]], "lucid.ones": [[413, null]], "lucid.ones_like": [[414, null]], "lucid.optim": [[369, null]], "lucid.outer": [[404, null]], "lucid.pad": [[454, null]], "lucid.power": [[405, null]], "lucid.random": [[394, null]], "lucid.random.bernoulli": [[387, null]], "lucid.random.rand": [[389, null]], "lucid.random.randint": [[390, null]], "lucid.random.randn": [[391, null]], "lucid.random.seed": [[392, null]], "lucid.random.uniform": [[393, null]], "lucid.ravel": [[455, null]], "lucid.reciprocal": [[432, null]], "lucid.register_model": [[386, null]], "lucid.repeat": [[456, null]], "lucid.reshape": [[457, null]], "lucid.roll": [[458, null]], "lucid.sign": [[433, null]], "lucid.sin": [[434, null]], "lucid.sinh": [[435, null]], "lucid.split": [[459, null]], "lucid.sqrt": [[436, null]], "lucid.square": [[437, null]], "lucid.squeeze": [[460, null]], "lucid.stack": [[461, null]], "lucid.sub": [[406, null]], "lucid.sum": [[438, null]], "lucid.swapaxes": [[439, null]], "lucid.tan": [[440, null]], "lucid.tanh": [[441, null]], "lucid.tensor": [[445, null]], "lucid.tile": [[462, null]], "lucid.trace": [[442, null]], "lucid.transforms": [[478, null]], "lucid.transpose": [[443, null]], "lucid.tril": [[463, null]], "lucid.triu": [[464, null]], "lucid.unsqueeze": [[465, null]], "lucid.var": [[444, null]], "lucid.vstack": [[466, null]], "lucid.zeros": [[415, null]], "lucid.zeros_like": [[416, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[337, null]], "nn.AdaptiveAvgPool2d": [[338, null]], "nn.AdaptiveAvgPool3d": [[339, null]], "nn.AlphaDropout": [[307, null]], "nn.AvgPool1d": [[340, null]], "nn.AvgPool2d": [[341, null]], "nn.AvgPool3d": [[342, null]], "nn.BCELoss": [[322, null]], "nn.BatchNorm1d": [[328, null]], "nn.BatchNorm2d": [[329, null]], "nn.BatchNorm3d": [[330, null]], "nn.Bilinear": [[318, null]], "nn.Buffer": [[206, null]], "nn.Conv1d": [[302, null]], "nn.Conv2d": [[303, null]], "nn.Conv3d": [[304, null]], "nn.ConvBNReLU1d": [[269, null]], "nn.ConvBNReLU2d": [[270, null]], "nn.ConvBNReLU3d": [[271, null]], "nn.CrossEntropyLoss": [[323, null]], "nn.DepthSeparableConv1d": [[272, null]], "nn.DepthSeparableConv2d": [[273, null]], "nn.DepthSeparableConv3d": [[274, null]], "nn.DropBlock": [[308, null]], "nn.DropPath": [[309, null]], "nn.Dropout": [[310, null]], "nn.Dropout1d": [[311, null]], "nn.Dropout2d": [[312, null]], "nn.Dropout3d": [[313, null]], "nn.ELU": [[286, null]], "nn.Embedding": [[347, null]], "nn.GELU": [[287, null]], "nn.GlobalResponseNorm": [[331, null]], "nn.HardSigmoid": [[288, null]], "nn.HardSwish": [[289, null]], "nn.HuberLoss": [[324, null]], "nn.Identity": [[319, null]], "nn.InstanceNorm1d": [[332, null]], "nn.InstanceNorm2d": [[333, null]], "nn.InstanceNorm3d": [[334, null]], "nn.LayerNorm": [[335, null]], "nn.LeakyReLU": [[290, null]], "nn.Linear": [[320, null]], "nn.MSELoss": [[325, null]], "nn.MaxPool1d": [[343, null]], "nn.MaxPool2d": [[344, null]], "nn.MaxPool3d": [[345, null]], "nn.Module": [[207, null]], "nn.ModuleDict": [[209, null]], "nn.ModuleList": [[210, null]], "nn.MultiHeadAttention": [[299, null]], "nn.NLLLoss": [[326, null]], "nn.Parameter": [[208, null]], "nn.ParameterDict": [[211, null]], "nn.ParameterList": [[212, null]], "nn.ReLU": [[291, null]], "nn.ReLU6": [[292, null]], "nn.Rearrange": [[315, null]], "nn.SELU": [[293, null]], "nn.SEModule": [[275, null]], "nn.ScaledDotProductAttention": [[300, null]], "nn.SelectiveKernel": [[276, null]], "nn.Sequential": [[213, null]], "nn.Sigmoid": [[294, null]], "nn.Softmax": [[295, null]], "nn.Swish": [[296, null]], "nn.Tanh": [[297, null]], "nn.Transformer": [[349, null]], "nn.TransformerDecoder": [[350, null]], "nn.TransformerDecoderLayer": [[351, null]], "nn.TransformerEncoder": [[352, null]], "nn.TransformerEncoderLayer": [[353, null]], "nn.Unfold": [[305, null]], "nn.Upsample": [[355, null]], "nn.functional.adaptive_avg_pool1d": [[255, null]], "nn.functional.adaptive_avg_pool2d": [[256, null]], "nn.functional.adaptive_avg_pool3d": [[257, null]], "nn.functional.alpha_dropout": [[231, null]], "nn.functional.avg_pool1d": [[258, null]], "nn.functional.avg_pool2d": [[259, null]], "nn.functional.avg_pool3d": [[260, null]], "nn.functional.batch_norm": [[249, null]], "nn.functional.bilinear": [[240, null]], "nn.functional.binary_cross_entropy": [[243, null]], "nn.functional.conv1d": [[226, null]], "nn.functional.conv2d": [[227, null]], "nn.functional.conv3d": [[228, null]], "nn.functional.cross_entropy": [[244, null]], "nn.functional.drop_block": [[232, null]], "nn.functional.drop_path": [[233, null]], "nn.functional.dropout": [[234, null]], "nn.functional.dropout1d": [[235, null]], "nn.functional.dropout2d": [[236, null]], "nn.functional.dropout3d": [[237, null]], "nn.functional.elu": [[215, null]], "nn.functional.embedding": [[265, null]], "nn.functional.gelu": [[216, null]], "nn.functional.global_response_norm": [[250, null]], "nn.functional.huber_loss": [[245, null]], "nn.functional.instance_norm": [[252, null]], "nn.functional.interpolate": [[267, null]], "nn.functional.layer_norm": [[253, null]], "nn.functional.leaky_relu": [[218, null]], "nn.functional.linear": [[242, null]], "nn.functional.max_pool1d": [[262, null]], "nn.functional.max_pool2d": [[263, null]], "nn.functional.max_pool3d": [[264, null]], "nn.functional.mse_loss": [[247, null]], "nn.functional.nll_loss": [[248, null]], "nn.functional.normalize": [[254, null]], "nn.functional.relu": [[219, null]], "nn.functional.rotate": [[268, null]], "nn.functional.scaled_dot_product_attention": [[225, null]], "nn.functional.selu": [[220, null]], "nn.functional.sigmoid": [[221, null]], "nn.functional.softmax": [[222, null]], "nn.functional.tanh": [[223, null]], "nn.functional.unfold": [[230, null]], "nn.init.constant": [[278, null]], "nn.init.kaiming_normal": [[280, null]], "nn.init.kaiming_uniform": [[281, null]], "nn.init.normal": [[282, null]], "nn.init.uniform": [[283, null]], "nn.init.xavier_normal": [[284, null]], "nn.init.xavier_uniform": [[285, null]], "optim.ASGD": [[370, null]], "optim.Adadelta": [[371, null]], "optim.Adagrad": [[372, null]], "optim.Adam": [[373, null]], "optim.AdamW": [[374, null]], "optim.Adamax": [[375, null]], "optim.NAdam": [[376, null]], "optim.Optimizer": [[358, null]], "optim.RAdam": [[377, null]], "optim.RMSprop": [[378, null]], "optim.Rprop": [[379, null]], "optim.SGD": [[380, null]], "optim.lr_scheduler": [[359, null]], "pvt_huge": [[176, null]], "pvt_large": [[177, null]], "pvt_medium": [[178, null]], "pvt_small": [[179, null]], "pvt_tiny": [[180, null]], "pvt_v2_b0": [[181, null]], "pvt_v2_b1": [[182, null]], "pvt_v2_b2": [[183, null]], "pvt_v2_b2_li": [[184, null]], "pvt_v2_b3": [[185, null]], "pvt_v2_b4": [[186, null]], "pvt_v2_b5": [[187, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[190, null]], "swin_large": [[191, null]], "swin_small": [[192, null]], "swin_tiny": [[193, null]], "swin_v2_base": [[194, null]], "swin_v2_giant": [[195, null]], "swin_v2_huge": [[196, null]], "swin_v2_large": [[197, null]], "swin_v2_small": [[198, null]], "swin_v2_tiny": [[199, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[469, null]], "transforms.Compose": [[467, null]], "transforms.Normalize": [[470, null]], "transforms.RandomCrop": [[471, null]], "transforms.RandomGrayscale": [[472, null]], "transforms.RandomHorizontalFlip": [[473, null]], "transforms.RandomRotation": [[474, null]], "transforms.RandomVerticalFlip": [[475, null]], "transforms.Resize": [[476, null]], "transforms.ToTensor": [[468, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[201, null]], "vit_huge": [[202, null]], "vit_large": [[203, null]], "vit_small": [[204, null]], "vit_tiny": [[205, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/cross_vit/CrossViT", "models/transformer/cross_vit/crossvit_15", "models/transformer/cross_vit/crossvit_15_dagger", "models/transformer/cross_vit/crossvit_18", "models/transformer/cross_vit/crossvit_18_dagger", "models/transformer/cross_vit/crossvit_9", "models/transformer/cross_vit/crossvit_9_dagger", "models/transformer/cross_vit/crossvit_base", "models/transformer/cross_vit/crossvit_small", "models/transformer/cross_vit/crossvit_tiny", "models/transformer/cvt/CvT", "models/transformer/cvt/cvt_13", "models/transformer/cvt/cvt_21", "models/transformer/cvt/cvt_w24", "models/transformer/index", "models/transformer/pvt/PVT", "models/transformer/pvt/PVT_V2", "models/transformer/pvt/pvt_huge", "models/transformer/pvt/pvt_large", "models/transformer/pvt/pvt_medium", "models/transformer/pvt/pvt_small", "models/transformer/pvt/pvt_tiny", "models/transformer/pvt/pvt_v2_b0", "models/transformer/pvt/pvt_v2_b1", "models/transformer/pvt/pvt_v2_b2", "models/transformer/pvt/pvt_v2_b2_li", "models/transformer/pvt/pvt_v2_b3", "models/transformer/pvt/pvt_v2_b4", "models/transformer/pvt/pvt_v2_b5", "models/transformer/swin/SwinTransformer", "models/transformer/swin/SwinTransformer_V2", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/swin/swin_v2_base", "models/transformer/swin/swin_v2_giant", "models/transformer/swin/swin_v2_huge", "models/transformer/swin/swin_v2_large", "models/transformer/swin/swin_v2_small", "models/transformer/swin/swin_v2_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/cross_vit/CrossViT.rst", "models/transformer/cross_vit/crossvit_15.rst", "models/transformer/cross_vit/crossvit_15_dagger.rst", "models/transformer/cross_vit/crossvit_18.rst", "models/transformer/cross_vit/crossvit_18_dagger.rst", "models/transformer/cross_vit/crossvit_9.rst", "models/transformer/cross_vit/crossvit_9_dagger.rst", "models/transformer/cross_vit/crossvit_base.rst", "models/transformer/cross_vit/crossvit_small.rst", "models/transformer/cross_vit/crossvit_tiny.rst", "models/transformer/cvt/CvT.rst", "models/transformer/cvt/cvt_13.rst", "models/transformer/cvt/cvt_21.rst", "models/transformer/cvt/cvt_w24.rst", "models/transformer/index.rst", "models/transformer/pvt/PVT.rst", "models/transformer/pvt/PVT_V2.rst", "models/transformer/pvt/pvt_huge.rst", "models/transformer/pvt/pvt_large.rst", "models/transformer/pvt/pvt_medium.rst", "models/transformer/pvt/pvt_small.rst", "models/transformer/pvt/pvt_tiny.rst", "models/transformer/pvt/pvt_v2_b0.rst", "models/transformer/pvt/pvt_v2_b1.rst", "models/transformer/pvt/pvt_v2_b2.rst", "models/transformer/pvt/pvt_v2_b2_li.rst", "models/transformer/pvt/pvt_v2_b3.rst", "models/transformer/pvt/pvt_v2_b4.rst", "models/transformer/pvt/pvt_v2_b5.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/SwinTransformer_V2.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/swin/swin_v2_base.rst", "models/transformer/swin/swin_v2_giant.rst", "models/transformer/swin/swin_v2_huge.rst", "models/transformer/swin/swin_v2_large.rst", "models/transformer/swin/swin_v2_small.rst", "models/transformer/swin/swin_v2_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[418, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[371, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[372, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[373, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[375, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[374, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[337, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[338, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[339, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[396, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[307, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[407, "lucid.arange", false]], "arccos() (in module lucid)": [[419, "lucid.arccos", false]], "arcsin() (in module lucid)": [[420, "lucid.arcsin", false]], "arctan() (in module lucid)": [[421, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[370, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[259, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[340, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[341, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[342, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[328, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[329, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[330, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[322, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[387, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[318, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[446, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[206, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[469, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[447, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[422, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[467, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[448, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[278, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[302, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[303, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[304, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[269, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[270, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[271, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[423, "lucid.cos", false]], "cosh() (in module lucid)": [[424, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[360, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "cross_entropy() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[323, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models.transformer)": [[159, "lucid.models.transformer.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[160, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[161, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[162, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[163, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[164, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[165, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[166, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[167, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[168, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[425, "lucid.cube", false]], "cvt (class in lucid.models)": [[169, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[170, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[171, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[172, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[361, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[272, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[273, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[274, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[408, "lucid.diag", false]], "div() (in module lucid)": [[397, "lucid.div", false]], "dot() (in module lucid)": [[398, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[308, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[310, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[311, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[235, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[312, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[236, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[313, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[309, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[286, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[347, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[409, "lucid.empty", false]], "empty_like() (in module lucid)": [[410, "lucid.empty_like", false]], "exp() (in module lucid)": [[426, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[362, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[411, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[449, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[287, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[216, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[331, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[383, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[288, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[289, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[450, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[324, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[319, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[399, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[332, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[333, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[334, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[267, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[280, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[281, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[364, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[335, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[290, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[320, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[412, "lucid.linspace", false]], "log() (in module lucid)": [[427, "lucid.log", false]], "log2() (in module lucid)": [[428, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[363, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[452, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[400, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[429, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[401, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[343, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[344, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[345, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[430, "lucid.mean", false]], "meshgrid() (in module lucid)": [[453, "lucid.meshgrid", false]], "min() (in module lucid)": [[431, "lucid.min", false]], "minimum() (in module lucid)": [[402, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[207, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[209, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[210, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[325, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[299, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[403, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[365, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[376, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[326, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[385, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[282, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[470, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[382, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[413, "lucid.ones", false]], "ones_like() (in module lucid)": [[414, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[358, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[404, "lucid.outer", false]], "pad() (in module lucid)": [[454, "lucid.pad", false]], "parameter (class in lucid.nn)": [[208, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[211, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[212, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[405, "lucid.power", false]], "pvt (class in lucid.models)": [[174, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[176, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[177, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[178, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[179, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[180, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[175, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[181, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[182, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[183, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[184, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[185, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[186, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[187, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[377, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[389, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[390, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[391, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[471, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[472, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[473, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[474, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[475, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[455, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[315, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[432, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[366, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[386, "lucid.register_model", false]], "relu (class in lucid.nn)": [[291, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[219, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[292, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[456, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[457, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[476, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[378, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[458, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[379, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[300, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[392, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[276, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[293, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[220, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[275, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[213, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[380, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[294, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[433, "lucid.sign", false]], "sin() (in module lucid)": [[434, "lucid.sin", false]], "sinh() (in module lucid)": [[435, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[295, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[459, "lucid.split", false]], "sqrt() (in module lucid)": [[436, "lucid.sqrt", false]], "square() (in module lucid)": [[437, "lucid.square", false]], "squeeze() (in module lucid)": [[460, "lucid.squeeze", false]], "stack() (in module lucid)": [[461, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[367, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[406, "lucid.sub", false]], "sum() (in module lucid)": [[438, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[439, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[190, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[191, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[192, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[193, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[194, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[195, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[196, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[197, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[198, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[199, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[188, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[189, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[296, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[440, "lucid.tan", false]], "tanh (class in lucid.nn)": [[297, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[441, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[395, "lucid.Tensor", false]], "tensor() (in module lucid)": [[445, "lucid.tensor", false]], "tile() (in module lucid)": [[462, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[468, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[442, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[349, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[350, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[351, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[352, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[353, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[443, "lucid.transpose", false]], "tril() (in module lucid)": [[463, "lucid.tril", false]], "triu() (in module lucid)": [[464, "lucid.triu", false]], "unfold (class in lucid.nn)": [[305, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[230, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[283, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[393, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[465, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[355, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[444, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[200, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[201, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[202, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[203, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[204, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[205, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[466, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[284, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[285, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[415, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[416, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[395, 1, 1, "", "Tensor"], [418, 2, 1, "", "abs"], [396, 2, 1, "", "add"], [407, 2, 1, "", "arange"], [419, 2, 1, "", "arccos"], [420, 2, 1, "", "arcsin"], [421, 2, 1, "", "arctan"], [446, 2, 1, "", "broadcast_to"], [447, 2, 1, "", "chunk"], [422, 2, 1, "", "clip"], [448, 2, 1, "", "concatenate"], [423, 2, 1, "", "cos"], [424, 2, 1, "", "cosh"], [425, 2, 1, "", "cube"], [408, 2, 1, "", "diag"], [397, 2, 1, "", "div"], [398, 2, 1, "", "dot"], [409, 2, 1, "", "empty"], [410, 2, 1, "", "empty_like"], [426, 2, 1, "", "exp"], [411, 2, 1, "", "eye"], [449, 2, 1, "", "flatten"], [383, 2, 1, "", "grad_enabled"], [450, 2, 1, "", "hstack"], [399, 2, 1, "", "inner"], [412, 2, 1, "", "linspace"], [427, 2, 1, "", "log"], [428, 2, 1, "", "log2"], [452, 2, 1, "", "masked_fill"], [400, 2, 1, "", "matmul"], [429, 2, 1, "", "max"], [401, 2, 1, "", "maximum"], [430, 2, 1, "", "mean"], [453, 2, 1, "", "meshgrid"], [431, 2, 1, "", "min"], [402, 2, 1, "", "minimum"], [403, 2, 1, "", "multiply"], [385, 2, 1, "", "no_grad"], [413, 2, 1, "", "ones"], [414, 2, 1, "", "ones_like"], [404, 2, 1, "", "outer"], [454, 2, 1, "", "pad"], [405, 2, 1, "", "power"], [455, 2, 1, "", "ravel"], [432, 2, 1, "", "reciprocal"], [386, 2, 1, "", "register_model"], [456, 2, 1, "", "repeat"], [457, 2, 1, "", "reshape"], [458, 2, 1, "", "roll"], [433, 2, 1, "", "sign"], [434, 2, 1, "", "sin"], [435, 2, 1, "", "sinh"], [459, 2, 1, "", "split"], [436, 2, 1, "", "sqrt"], [437, 2, 1, "", "square"], [460, 2, 1, "", "squeeze"], [461, 2, 1, "", "stack"], [406, 2, 1, "", "sub"], [438, 2, 1, "", "sum"], [439, 2, 1, "", "swapaxes"], [440, 2, 1, "", "tan"], [441, 2, 1, "", "tanh"], [445, 2, 1, "", "tensor"], [462, 2, 1, "", "tile"], [442, 2, 1, "", "trace"], [443, 2, 1, "", "transpose"], [463, 2, 1, "", "tril"], [464, 2, 1, "", "triu"], [465, 2, 1, "", "unsqueeze"], [444, 2, 1, "", "var"], [466, 2, 1, "", "vstack"], [415, 2, 1, "", "zeros"], [416, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [169, 1, 1, "", "CvT"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [174, 1, 1, "", "PVT"], [175, 1, 1, "", "PVT_V2"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [188, 1, 1, "", "SwinTransformer"], [189, 1, 1, "", "SwinTransformer_V2"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [200, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [160, 2, 1, "", "crossvit_15"], [161, 2, 1, "", "crossvit_15_dagger"], [162, 2, 1, "", "crossvit_18"], [163, 2, 1, "", "crossvit_18_dagger"], [164, 2, 1, "", "crossvit_9"], [165, 2, 1, "", "crossvit_9_dagger"], [166, 2, 1, "", "crossvit_base"], [167, 2, 1, "", "crossvit_small"], [168, 2, 1, "", "crossvit_tiny"], [170, 2, 1, "", "cvt_13"], [171, 2, 1, "", "cvt_21"], [172, 2, 1, "", "cvt_w24"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [176, 2, 1, "", "pvt_huge"], [177, 2, 1, "", "pvt_large"], [178, 2, 1, "", "pvt_medium"], [179, 2, 1, "", "pvt_small"], [180, 2, 1, "", "pvt_tiny"], [181, 2, 1, "", "pvt_v2_b0"], [182, 2, 1, "", "pvt_v2_b1"], [183, 2, 1, "", "pvt_v2_b2"], [184, 2, 1, "", "pvt_v2_b2_li"], [185, 2, 1, "", "pvt_v2_b3"], [186, 2, 1, "", "pvt_v2_b4"], [187, 2, 1, "", "pvt_v2_b5"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [190, 2, 1, "", "swin_base"], [191, 2, 1, "", "swin_large"], [192, 2, 1, "", "swin_small"], [193, 2, 1, "", "swin_tiny"], [194, 2, 1, "", "swin_v2_base"], [195, 2, 1, "", "swin_v2_giant"], [196, 2, 1, "", "swin_v2_huge"], [197, 2, 1, "", "swin_v2_large"], [198, 2, 1, "", "swin_v2_small"], [199, 2, 1, "", "swin_v2_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [201, 2, 1, "", "vit_base"], [202, 2, 1, "", "vit_huge"], [203, 2, 1, "", "vit_large"], [204, 2, 1, "", "vit_small"], [205, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.models.transformer": [[159, 1, 1, "", "CrossViT"]], "lucid.nn": [[337, 1, 1, "", "AdaptiveAvgPool1d"], [338, 1, 1, "", "AdaptiveAvgPool2d"], [339, 1, 1, "", "AdaptiveAvgPool3d"], [307, 1, 1, "", "AlphaDropout"], [340, 1, 1, "", "AvgPool1d"], [341, 1, 1, "", "AvgPool2d"], [342, 1, 1, "", "AvgPool3d"], [322, 1, 1, "", "BCELoss"], [328, 1, 1, "", "BatchNorm1d"], [329, 1, 1, "", "BatchNorm2d"], [330, 1, 1, "", "BatchNorm3d"], [318, 1, 1, "", "Bilinear"], [206, 1, 1, "", "Buffer"], [302, 1, 1, "", "Conv1d"], [303, 1, 1, "", "Conv2d"], [304, 1, 1, "", "Conv3d"], [269, 1, 1, "", "ConvBNReLU1d"], [270, 1, 1, "", "ConvBNReLU2d"], [271, 1, 1, "", "ConvBNReLU3d"], [323, 1, 1, "", "CrossEntropyLoss"], [272, 1, 1, "", "DepthSeparableConv1d"], [273, 1, 1, "", "DepthSeparableConv2d"], [274, 1, 1, "", "DepthSeparableConv3d"], [308, 1, 1, "", "DropBlock"], [309, 1, 1, "", "DropPath"], [310, 1, 1, "", "Dropout"], [311, 1, 1, "", "Dropout1d"], [312, 1, 1, "", "Dropout2d"], [313, 1, 1, "", "Dropout3d"], [286, 1, 1, "", "ELU"], [347, 1, 1, "", "Embedding"], [287, 1, 1, "", "GELU"], [331, 1, 1, "", "GlobalResponseNorm"], [288, 1, 1, "", "HardSigmoid"], [289, 1, 1, "", "HardSwish"], [324, 1, 1, "", "HuberLoss"], [319, 1, 1, "", "Identity"], [332, 1, 1, "", "InstanceNorm1d"], [333, 1, 1, "", "InstanceNorm2d"], [334, 1, 1, "", "InstanceNorm3d"], [335, 1, 1, "", "LayerNorm"], [290, 1, 1, "", "LeakyReLU"], [320, 1, 1, "", "Linear"], [325, 1, 1, "", "MSELoss"], [343, 1, 1, "", "MaxPool1d"], [344, 1, 1, "", "MaxPool2d"], [345, 1, 1, "", "MaxPool3d"], [207, 1, 1, "", "Module"], [209, 1, 1, "", "ModuleDict"], [210, 1, 1, "", "ModuleList"], [299, 1, 1, "", "MultiHeadAttention"], [326, 1, 1, "", "NLLLoss"], [208, 1, 1, "", "Parameter"], [211, 1, 1, "", "ParameterDict"], [212, 1, 1, "", "ParameterList"], [291, 1, 1, "", "ReLU"], [292, 1, 1, "", "ReLU6"], [315, 1, 1, "", "Rearrange"], [293, 1, 1, "", "SELU"], [275, 1, 1, "", "SEModule"], [300, 1, 1, "", "ScaledDotProductAttention"], [276, 1, 1, "", "SelectiveKernel"], [213, 1, 1, "", "Sequential"], [294, 1, 1, "", "Sigmoid"], [295, 1, 1, "", "Softmax"], [296, 1, 1, "", "Swish"], [297, 1, 1, "", "Tanh"], [349, 1, 1, "", "Transformer"], [350, 1, 1, "", "TransformerDecoder"], [351, 1, 1, "", "TransformerDecoderLayer"], [352, 1, 1, "", "TransformerEncoder"], [353, 1, 1, "", "TransformerEncoderLayer"], [305, 1, 1, "", "Unfold"], [355, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[255, 2, 1, "", "adaptive_avg_pool1d"], [256, 2, 1, "", "adaptive_avg_pool2d"], [257, 2, 1, "", "adaptive_avg_pool3d"], [231, 2, 1, "", "alpha_dropout"], [258, 2, 1, "", "avg_pool1d"], [259, 2, 1, "", "avg_pool2d"], [260, 2, 1, "", "avg_pool3d"], [249, 2, 1, "", "batch_norm"], [240, 2, 1, "", "bilinear"], [243, 2, 1, "", "binary_cross_entropy"], [226, 2, 1, "", "conv1d"], [227, 2, 1, "", "conv2d"], [228, 2, 1, "", "conv3d"], [244, 2, 1, "", "cross_entropy"], [232, 2, 1, "", "drop_block"], [233, 2, 1, "", "drop_path"], [234, 2, 1, "", "dropout"], [235, 2, 1, "", "dropout1d"], [236, 2, 1, "", "dropout2d"], [237, 2, 1, "", "dropout3d"], [215, 2, 1, "", "elu"], [265, 2, 1, "", "embedding"], [216, 2, 1, "", "gelu"], [250, 2, 1, "", "global_response_norm"], [245, 2, 1, "", "huber_loss"], [252, 2, 1, "", "instance_norm"], [267, 2, 1, "", "interpolate"], [253, 2, 1, "", "layer_norm"], [218, 2, 1, "", "leaky_relu"], [242, 2, 1, "", "linear"], [262, 2, 1, "", "max_pool1d"], [263, 2, 1, "", "max_pool2d"], [264, 2, 1, "", "max_pool3d"], [247, 2, 1, "", "mse_loss"], [248, 2, 1, "", "nll_loss"], [254, 2, 1, "", "normalize"], [219, 2, 1, "", "relu"], [268, 2, 1, "", "rotate"], [225, 2, 1, "", "scaled_dot_product_attention"], [220, 2, 1, "", "selu"], [221, 2, 1, "", "sigmoid"], [222, 2, 1, "", "softmax"], [223, 2, 1, "", "tanh"], [230, 2, 1, "", "unfold"]], "lucid.nn.init": [[278, 2, 1, "", "constant"], [280, 2, 1, "", "kaiming_normal"], [281, 2, 1, "", "kaiming_uniform"], [282, 2, 1, "", "normal"], [283, 2, 1, "", "uniform"], [284, 2, 1, "", "xavier_normal"], [285, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[370, 1, 1, "", "ASGD"], [371, 1, 1, "", "Adadelta"], [372, 1, 1, "", "Adagrad"], [373, 1, 1, "", "Adam"], [374, 1, 1, "", "AdamW"], [375, 1, 1, "", "Adamax"], [376, 1, 1, "", "NAdam"], [358, 1, 1, "", "Optimizer"], [377, 1, 1, "", "RAdam"], [378, 1, 1, "", "RMSprop"], [379, 1, 1, "", "Rprop"], [380, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[360, 1, 1, "", "CosineAnnealingLR"], [361, 1, 1, "", "CyclicLR"], [362, 1, 1, "", "ExponentialLR"], [363, 1, 1, "", "LRScheduler"], [364, 1, 1, "", "LambdaLR"], [365, 1, 1, "", "MultiStepLR"], [366, 1, 1, "", "ReduceLROnPlateau"], [367, 1, 1, "", "StepLR"]], "lucid.random": [[387, 2, 1, "", "bernoulli"], [389, 2, 1, "", "rand"], [390, 2, 1, "", "randint"], [391, 2, 1, "", "randn"], [392, 2, 1, "", "seed"], [393, 2, 1, "", "uniform"]], "lucid.transforms": [[469, 1, 1, "", "CenterCrop"], [467, 1, 1, "", "Compose"], [470, 1, 1, "", "Normalize"], [471, 1, 1, "", "RandomCrop"], [472, 1, 1, "", "RandomGrayscale"], [473, 1, 1, "", "RandomHorizontalFlip"], [474, 1, 1, "", "RandomRotation"], [475, 1, 1, "", "RandomVerticalFlip"], [476, 1, 1, "", "Resize"], [468, 1, 1, "", "ToTensor"]], "lucid.types": [[382, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 85, 96, 97, 102, 104, 105, 106, 107, 108, 109, 155, 156, 159, 173, 177, 200, 204, 206, 207, 208, 209, 211, 212, 213, 225, 255, 256, 257, 276, 300, 305, 323, 326, 337, 338, 339, 340, 343, 344, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 382, 384, 386, 395, 400, 408, 430, 438, 439, 442, 444, 445, 458, 460, 468, 470, 478], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 85, 86, 94, 130, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 188, 189, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 452, 454, 455, 456, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478], "000": [5, 6, 7, 8, 157, 158, 173, 182, 195, 409, 410], "0000": [323, 324, 326], "0001": [366, 370], "000e": [409, 410], "001": [361, 370, 373, 374, 376, 377, 380], "002": [375, 376], "003": [173, 179], "004": 376, "005": 290, "006": 361, "008": [85, 94, 161, 173], "00808": 85, "009": [173, 182], "00b": 85, "01": [15, 218, 290, 358, 360, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380], "01051757": 391, "011": [37, 85], "013": [57, 85], "014": [168, 173], "016": [85, 113], "01b": [85, 173], "0205": 323, "0217": 323, "0227": 323, "024": [85, 100, 135], "025": [166, 173], "026": [85, 124], "028": [85, 129], "0299": 323, "02b": 173, "032": [69, 85, 120], "03545": 85, "03b": 85, "044715": [216, 287], "0450": 323, "0451": 323, "046": [67, 85], "047": [85, 147], "04719755": 419, "0474259": 221, "048": [85, 137, 173, 179], "0480": 323, "04861": 85, "04b": 85, "05": [249, 252, 253, 269, 270, 271, 290, 328, 329, 330, 332, 333, 334, 335, 349, 351, 353], "050": [173, 204], "0507": [220, 293], "05m": 85, "06": [39, 77, 250, 331, 371, 379], "066": [51, 85], "069": [85, 107, 118], "06m": 85, "07": [232, 243, 244, 308, 322, 323], "070": [85, 102], "0700": 323, "0706508": 297, "071": [85, 113], "072": [173, 186], "0721": 323, "073": [85, 143], "07722396": 296, "0794": 326, "08": [366, 373, 374, 375, 376, 377, 378], "0802": 326, "083": [81, 85], "08333333": 24, "085537": 426, "088": [85, 135], "08955": 85, "08b": [85, 173], "08m": 85, "0900": [295, 323], "096": [33, 85, 151], "0986": [222, 295], "09861229": 427, "09883": 173, "0992": 323, "09b": 85, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "10": [0, 1, 2, 3, 5, 6, 7, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 176, 209, 210, 213, 227, 228, 240, 242, 255, 299, 302, 303, 304, 312, 313, 318, 320, 329, 330, 333, 337, 341, 342, 344, 349, 350, 351, 352, 353, 359, 362, 364, 365, 366, 372, 386, 390, 393, 394, 397, 400, 403, 404, 412, 421, 438, 469, 471, 472, 474], "100": [6, 15, 29, 69, 70, 71, 72, 85, 146, 147, 148, 149, 159, 360, 386, 478], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1000000": 370, "1001": [85, 113, 323], "1003": 323, "1007": 85, "10096": 85, "101": [85, 103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138], "10106": 85, "1014": 220, "102": [85, 118], "1024": [15, 33, 38, 158, 172, 315], "1025": [210, 213], "1026": [210, 213], "1027": [210, 213], "10499": 221, "105": [166, 173], "1050": 294, "1054": 326, "1056": [210, 213], "10590": 85, "106": [173, 198], "107": [38, 85], "108": [70, 85], "1097": 85, "11": [85, 102, 116, 133, 145, 146, 240, 302, 303, 304, 312, 318, 329, 330, 333, 341, 342, 344, 400, 469, 470, 471, 472, 474], "110": [85, 108], "1105": 85, "1109": 85, "111": [63, 85], "1111": 322, "112": [85, 96, 109], "1134": 240, "114b": 472, "119": [173, 240], "1192": [221, 222, 295], "12": [19, 24, 35, 36, 54, 55, 56, 57, 58, 64, 85, 87, 88, 157, 158, 159, 166, 172, 173, 176, 180, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 211, 240, 254, 257, 302, 303, 304, 312, 313, 318, 329, 330, 333, 339, 341, 342, 344, 400, 404, 405, 469, 471, 472, 474], "120": [69, 85, 86, 89, 96, 97], "12000": [157, 158], "121": [54, 55, 85], "12122": 173, "123": [280, 281, 282, 283, 284, 285, 392, 393], "124": [36, 85, 280, 281, 284, 285], "125": 342, "1250": 324, "1251": 85, "1258": 85, "126": [85, 121], "128": [15, 30, 33, 39, 44, 67, 83, 85, 112, 121, 122, 145, 164, 165, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 213, 276, 467, 478], "1280": [36, 92], "128x128": [467, 478], "12b": 85, "13": [74, 85, 145, 147, 170, 173, 240, 302, 303, 304, 318, 330, 341, 342, 344, 400, 469, 471, 472, 474], "1314": 85, "132": [85, 146], "1324": 85, "133": [85, 147], "136": [71, 85, 102], "138": [85, 148], "13b": 173, "13k": 85, "14": [32, 33, 34, 56, 85, 105, 173, 182, 302, 303, 304, 312, 313, 318, 330, 341, 342, 344, 400, 404, 469, 471, 472, 474], "14030": 173, "1409": 85, "143": [85, 149], "144": 97, "145": 240, "148": [43, 85], "14899": 173, "149": [56, 85, 113], "14b": 85, "15": [0, 50, 85, 160, 161, 173, 240, 302, 303, 304, 318, 330, 341, 342, 344, 400, 404, 442, 469, 471, 472, 474, 478], "1513": 326, "152": [85, 101, 115, 132], "1536": [34, 35, 37], "155": 400, "1556": 85, "156": [78, 85], "157": [34, 85], "1588": [216, 287], "15b": 173, "15m": 85, "16": [54, 55, 85, 86, 89, 92, 96, 97, 124, 130, 145, 148, 159, 171, 172, 173, 174, 190, 194, 200, 201, 202, 203, 204, 205, 210, 211, 213, 225, 256, 257, 269, 270, 271, 275, 276, 299, 300, 302, 303, 304, 312, 313, 315, 318, 329, 330, 338, 339, 341, 342, 344, 349, 350, 351, 352, 353, 357, 400, 404, 436, 469, 471, 472, 474], "160": [85, 96, 114, 181], "16227766": 25, "16425": 326, "1643": 322, "166": 400, "167": [85, 289], "169": [54, 56, 85, 173], "16b": 85, "16x16": 173, "17": [85, 107, 173, 302, 303, 304, 318, 330, 342, 399, 469, 471, 472, 474], "170": 240, "1704": 85, "174": [31, 85], "17520119": 435, "177": [85, 126], "17b": 85, "18": [85, 88, 116, 133, 141, 162, 163, 173, 178, 185, 190, 191, 192, 194, 195, 196, 197, 198, 302, 303, 304, 312, 318, 330, 342, 403, 404, 469, 471, 472, 474], "1800": 323, "182": 85, "184": 96, "18877099": 296, "189": 85, "19": [65, 85, 145, 149, 170, 173, 227, 228, 240, 303, 304, 330, 398, 400], "192": [31, 32, 34, 35, 37, 39, 40, 77, 85, 87, 88, 115, 159, 160, 161, 167, 168, 170, 171, 172, 173, 180, 191], "194": [85, 124], "196": [53, 85, 172, 173, 191, 197], "1966": [222, 294, 295], "197": [42, 49, 85], "198": [85, 96], "199": [173, 202], "1998": [85, 323], "19b": 85, "1_53": 85, "1d": [226, 255, 258, 262, 269, 272, 305, 328, 332, 337, 393, 400, 408, 442, 453, 454, 455, 456, 462], "1e": [19, 24, 39, 77, 181, 182, 183, 185, 186, 187, 232, 243, 244, 249, 250, 252, 253, 254, 269, 270, 271, 308, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 349, 351, 353, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "1e6": 370, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 85, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 155, 159, 161, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 355, 357, 360, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "20": [0, 5, 6, 7, 8, 57, 85, 172, 209, 210, 213, 303, 304, 312, 330, 350, 351, 359, 363, 365, 367, 404, 426], "200": [85, 96, 106, 117], "2004": 85, "201": [57, 85, 106], "2011": 275, "2012": 85, "2014": 85, "2015": 85, "2016": 85, "2017": [85, 173, 349], "2018": [85, 275], "2019": 85, "2020": [85, 173], "2021": [85, 173], "2022": [85, 173], "2023": [85, 275], "2024": 85, "2039": 326, "204": 304, "2048": [36, 37, 38, 156, 349, 351, 353], "209": [161, 173], "20b": 85, "21": [71, 85, 119, 134, 171, 173, 211, 240, 303, 304, 330, 404], "210": [72, 85], "2102": 173, "2103": 173, "211": 400, "2111": 173, "213": [158, 173], "21841": [48, 53], "21m": 85, "22": [83, 85, 151, 173, 184, 204, 240, 303, 304, 312, 330, 398, 400], "2201": 85, "221": [72, 85], "2231": [323, 326], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2247": [328, 329, 330, 332, 333, 334, 335], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 400, "22752314": 391, "2278": 85, "22b": 85, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 173, 179, 303, 304, 330], "2301": 85, "232": [85, 94, 138, 166, 173], "2324": [85, 293], "233": [47, 85], "234": [280, 281, 282, 283, 284, 285, 393], "235": [64, 85], "237": [158, 173], "238": [85, 97, 173, 185], "23840584": 296, "23b": 85, "24": [54, 55, 92, 96, 97, 106, 110, 117, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 240, 256, 303, 304, 312, 330, 338, 404], "240": [32, 47, 85, 96, 97, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168], "240x240": 59, "2424": [222, 295], "2447": 295, "246": [85, 87], "24d": 110, "25": [0, 85, 110, 120, 129, 141, 173, 183, 221, 233, 294, 304, 325, 330, 341, 342, 397, 412, 432, 444], "2500": [322, 324, 326], "2512": 286, "2547": 293, "256": [30, 33, 36, 38, 39, 112, 145, 159, 164, 165, 174, 175, 176, 181], "258": [173, 192], "25m": 85, "26": [85, 107, 167, 173, 211, 242, 304, 320, 330, 404], "260": 85, "260x260": 59, "26325684": 391, "264": [58, 85], "265": 85, "266": [85, 163, 173], "2689": [222, 294, 295], "26894142": 296, "269": [85, 108, 118], "27": [31, 85, 109, 139, 160, 173, 177, 186, 240, 302, 304, 330, 425], "271": [162, 173], "272": [85, 128, 167, 173], "274": [85, 104, 144], "276": [280, 281, 284, 285], "277": [35, 85, 172, 173], "27b": 173, "28": [35, 36, 44, 52, 81, 85, 87, 88, 135, 161, 173, 193, 199, 240, 304, 404], "280": [51, 85], "286": [173, 176], "288": [85, 97, 106, 173, 193], "289": [48, 61, 85], "28x28": [7, 8, 87, 88], "29": [85, 144, 304], "293": 85, "296": [164, 173], "299": [85, 150], "299r": 472, "299x299": [75, 76, 83, 84], "29b": 173, "2_i": [332, 333, 334], "2c": 361, "2d": [227, 236, 256, 259, 263, 270, 273, 329, 333, 338, 400, 408, 411, 439, 442, 449, 453, 454, 456, 462, 474], "2e": 375, "2nd": [28, 152], "2x": 111, "2x2": [230, 469, 471], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 198, 199, 200, 206, 207, 208, 210, 211, 212, 213, 216, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 355, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 422, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476], "30": [66, 75, 85, 108, 111, 118, 210, 268, 304, 361, 365, 366, 474], "300": 85, "300x300": 59, "301": [35, 85], "302": [70, 85], "3026": 326, "304": [173, 203], "3072": [38, 200], "308": [173, 197], "30823025": 296, "31": [171, 173, 240, 304, 400], "310": [409, 410], "31622777": 25, "319": 85, "31b": 85, "32": [15, 30, 54, 56, 57, 85, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 159, 181, 190, 194, 210, 213, 240, 242, 256, 269, 270, 271, 275, 276, 303, 304, 315, 320, 338, 357, 382, 398, 399, 404], "320": [85, 107, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187], "321": [280, 281, 284, 285], "326": [85, 131, 173, 203], "32b": [85, 173], "32m": 85, "32x16d": 85, "32x32": [5, 6, 86, 89], "32x32d": 85, "32x4d": [85, 136, 139, 144], "32x8d": [85, 137], "33": [58, 85, 210, 213, 242, 304, 320], "330": [32, 85], "3333": 254, "33333333": 24, "336": [37, 42, 85, 127, 146], "337": [58, 85], "33b": 85, "34": [85, 119, 134, 142, 210, 213, 240, 304, 400, 404], "342": [280, 281, 284, 285], "344": [65, 85], "345": [280, 281, 282, 283, 284, 285, 393], "349": [173, 199], "34b": 85, "35": [84, 85, 210, 213, 304], "350": [53, 85], "352": [74, 85], "354": [173, 193], "355": [68, 85], "3567": [322, 326], "357": [85, 148, 153], "359": [173, 177], "35b": [85, 173], "36": [85, 106, 115, 117, 132, 173, 304], "362": [173, 183], "364": 85, "367": 85, "3679": [215, 220, 286], "368": [85, 141, 143], "36b": 173, "36th": 85, "37": [85, 101, 302], "370": [63, 85], "372": 240, "375": 325, "3750": 324, "37754067": 296, "378": [85, 88], "37b": 173, "380": 85, "380x380": 59, "38344152": 389, "384": [31, 32, 34, 35, 37, 39, 40, 77, 159, 160, 161, 166, 167, 170, 171, 173], "38629436": 427, "389056": 426, "38b": 85, "38th": 85, "392": [75, 85, 172, 173], "393": [66, 74, 85], "3935": 286, "3965": 85, "3977": 85, "39b": 173, "39m": 85, "3d": [228, 237, 257, 260, 264, 271, 274, 304, 305, 330, 334, 339], "3x3": [85, 305, 394], "4": [0, 1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 85, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 155, 159, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 213, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 240, 242, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 355, 366, 370, 373, 377, 378, 380, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 414, 416, 422, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476], "40": [76, 85, 92, 96, 97, 111, 187, 365], "400": [45, 85, 89, 173, 194, 202], "4044": 322, "4076": 323, "408": [162, 173], "4096": [28, 152], "40b": 85, "40d": 111, "41": [173, 178], "41421356": 17, "415": 173, "416": [85, 118, 136, 173, 205], "41666667": 24, "417": [85, 111], "41808962": 391, "419974": 223, "4199743": 297, "41b": 85, "42": [37, 38, 195, 240, 275, 394], "421": [280, 281, 284, 285], "423": [280, 281, 282, 283], "424": 173, "42718872": 25, "4278": 85, "4284": 85, "4286": [254, 322], "42b": [85, 173], "43": [67, 85, 162, 173, 398, 400], "431": [80, 85], "432": [66, 85], "4323": 286, "4375": 324, "43758721": 389, "43b": 85, "44": [85, 114, 126, 163, 173], "440": [71, 85], "4472": 254, "4472136": 19, "448": [68, 85, 162, 163], "4495": [330, 334], "45": [85, 142, 173, 185, 240, 268, 474], "4510": 85, "4520": 85, "4545": 307, "455": [85, 128], "456": 85, "456x456": 59, "457": [173, 180], "45b": 173, "46": [43, 85], "463": 85, "464": [41, 85, 111, 160, 173], "468": [85, 125], "46b": 85, "4700": 85, "4708": 85, "47112767": 421, "472": [85, 125, 158, 173], "476": [173, 191], "47b": [85, 173], "48": [54, 57, 58, 85, 97, 104, 108, 118, 136, 173, 191, 195, 196, 197, 242, 320], "480": [56, 85, 96, 170, 173], "481": [85, 96], "483": [85, 109], "48b": [85, 173], "48m": 85, "49": [80, 85, 131, 173, 192, 198], "492": [173, 178], "496": [52, 85], "4979": 286, "49b": 173, "49k": 85, "4s2x40d": [85, 111], "4x": 110, "4x4": 476, "5": [1, 2, 12, 13, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 85, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 155, 159, 160, 161, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 205, 207, 208, 209, 210, 211, 213, 216, 221, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 245, 247, 249, 252, 253, 255, 258, 259, 265, 267, 269, 270, 271, 276, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 349, 351, 353, 359, 361, 363, 365, 366, 367, 379, 384, 387, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 418, 419, 420, 429, 430, 431, 432, 433, 438, 439, 442, 443, 444, 445, 450, 453, 457, 458, 459, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "50": [5, 6, 85, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 242, 320, 360, 379, 398, 400, 412, 472, 473, 475, 478], "5000": [156, 322, 324, 326], "504": [85, 95], "50_1s4x24d": 85, "50b": 85, "510": 85, "5108": 326, "512": [30, 33, 36, 38, 39, 84, 85, 99, 112, 116, 142, 156, 157, 159, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 299, 349, 350, 351, 352, 353], "516": [33, 85], "519": 85, "51b": 85, "520": [78, 85], "52359878": 420, "528": [85, 160, 173], "528x528": 59, "52b": 85, "53": [32, 85, 240, 399], "530": [85, 125], "531": 173, "532": [173, 191], "536": [64, 85], "537": [85, 97], "543": [280, 281, 282, 283, 284, 285, 393], "54308063": 424, "544": [80, 85, 148, 157, 173], "545": 405, "5455": 307, "549": [85, 114], "54b": 85, "55": [70, 85, 173, 177], "553": [164, 173, 184], "556": [173, 186], "557": [85, 120], "558": [37, 85], "559": [85, 139], "55b": 85, "560": [62, 85, 105], "563": [280, 281, 284, 285], "564": [173, 195], "567": [173, 201], "5672": 85, "568": [72, 85], "5683": 85, "569": [85, 137], "57": [85, 143, 240], "57079633": [419, 420], "5714": 254, "5720": 85, "5730": 85, "57366333": 392, "576": 97, "57b": 173, "582": 85, "584": [85, 157, 173], "5849625": 428, "586": [76, 85], "587g": 472, "589": [44, 85], "590": [85, 98], "591": [41, 85], "592": [85, 133, 165, 173], "5987": 85, "5995": 85, "5998": 173, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 85, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 156, 159, 160, 161, 162, 163, 167, 170, 171, 173, 174, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 211, 212, 226, 227, 228, 230, 232, 237, 240, 242, 250, 254, 255, 265, 281, 285, 288, 292, 302, 303, 304, 305, 308, 310, 311, 312, 313, 318, 320, 322, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 344, 345, 349, 350, 352, 371, 379, 384, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 429, 430, 431, 438, 439, 442, 443, 444, 445, 447, 450, 456, 457, 458, 459, 463, 464, 466, 468, 469, 470, 471, 472, 474, 476], "60": [5, 6, 85, 115, 176], "600": [59, 85], "6008": 173, "600x600": 59, "6052": 326, "606": [173, 192], "6065": 286, "608": [36, 85, 153], "61": [29, 85, 89], "6105": 85, "611": [85, 105], "6114": 85, "6124": [328, 329, 330, 332, 333, 334, 335], "617": [69, 85], "62": [85, 153, 157, 173, 186, 240], "622": [171, 173], "623": [50, 85], "62686041": 435, "62b": 85, "630": 85, "632": [35, 85, 173, 202, 203], "6321": [215, 286], "63245553": 25, "635": [52, 85], "636": [61, 85], "63b": [85, 173], "64": [30, 39, 54, 58, 85, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 210, 213, 240, 275, 276, 382], "640": [48, 65, 85], "641": 85, "645": 85, "64589411": 389, "647": [85, 141], "648": [173, 178], "64b": 85, "64x4d": [85, 138], "654": [280, 281, 282, 283, 284, 285, 393], "656": [34, 85, 173, 201], "657": [173, 196, 280, 281, 284, 285], "6590": [222, 295], "65b": 85, "66": [68, 85, 132], "660": [48, 85], "664": [173, 204], "6652": 295, "666": [173, 181], "66666667": 24, "6667": [254, 322], "667": [85, 149], "668": [173, 196], "6682": 322, "669": [85, 117], "66b": [85, 173], "67": 400, "672": [85, 96, 119], "67326": 293, "6733": 220, "676": [85, 110], "677": 173, "678": [280, 281, 282, 283, 284, 285], "67b": [85, 173], "67m": 173, "688": [38, 85], "68811989": 391, "689": [85, 116], "68b": 85, "69314718": 427, "696": [85, 121, 171, 173, 185], "69b": 173, "7": [10, 13, 23, 38, 55, 62, 85, 145, 162, 163, 168, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 211, 226, 227, 228, 230, 232, 237, 240, 242, 243, 244, 255, 265, 276, 287, 292, 293, 294, 297, 302, 303, 304, 305, 308, 312, 313, 318, 320, 322, 323, 325, 329, 330, 333, 334, 337, 341, 342, 344, 345, 387, 390, 393, 396, 398, 399, 400, 404, 406, 408, 412, 426, 430, 438, 439, 442, 443, 444, 459, 462, 463, 464, 468, 469, 470, 471, 472, 474, 476], "70": [7, 8, 85, 106], "7001": 323, "704": [58, 85, 126], "706": [85, 89, 173, 176], "70710678": [19, 434], "708": [45, 85], "70b": 85, "7132": 85, "7141": 85, "7147": 326, "715": [85, 99], "717": [46, 85, 173, 205], "7182818": 426, "71b": [85, 173], "72": [92, 96, 97], "726791": 85, "72b": 85, "73": 85, "731": [173, 198], "7311": [222, 294, 295], "739": [83, 85], "73b": [85, 173], "74": 400, "745": [173, 197], "748": [79, 85], "75": [242, 320, 325, 370, 412], "755": [85, 101], "7581": 220, "75b": 85, "760": [85, 104, 144, 173, 181], "76159416": [296, 441], "7616": [223, 297], "76219569": 424, "7635": 293, "767": [42, 85], "768": [31, 32, 34, 35, 37, 39, 40, 77, 166, 172, 173, 176, 190, 200], "770": [36, 85], "772": 405, "774": [85, 100], "776": [165, 173], "778": [85, 133], "77b": 85, "78": [85, 122], "78357324": 391, "784": 15, "78539816": 421, "789": 85, "78b": 85, "790": [34, 85], "791": [85, 127], "79172504": 389, "792": [85, 124], "795": [62, 85], "796": [173, 196], "797": [85, 119], "79b": 85, "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 85, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 159, 164, 165, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 210, 211, 213, 225, 226, 227, 228, 230, 232, 237, 240, 242, 243, 254, 255, 256, 257, 265, 269, 270, 271, 275, 287, 288, 293, 294, 297, 299, 300, 302, 303, 304, 305, 308, 310, 311, 312, 313, 318, 320, 322, 325, 329, 330, 333, 334, 337, 338, 339, 341, 342, 344, 345, 349, 350, 351, 352, 353, 366, 373, 374, 375, 376, 377, 378, 387, 390, 397, 398, 399, 400, 404, 405, 407, 408, 425, 430, 438, 439, 442, 443, 444, 459, 463, 464, 468, 469, 470, 471, 472, 474, 476], "80": [5, 6, 7, 8, 96], "800": [46, 50, 85, 168, 173], "8005": 323, "808": [85, 115], "80b": [85, 173], "817": [75, 85], "818": 85, "8182": 307, "81b": [85, 173], "82": [33, 85, 173, 187, 240], "821": [85, 132], "82b": 85, "83": [85, 128], "832": [81, 85], "833": 85, "83b": 173, "84": [86, 88, 89], "840": [29, 49, 79, 85], "8413": [216, 287], "842": [173, 199], "847": [84, 85], "848": [85, 132, 147, 173, 177], "849": 85, "84b": 85, "856": [55, 85, 167, 173, 183], "85772238": 296, "8584": 293, "85b": [85, 173], "86": [79, 85, 173, 201], "862": [85, 151], "863": [85, 146], "864": [85, 98, 117], "868": [85, 134], "869": [173, 195], "87": [173, 190, 194], "872": [85, 95, 110, 131], "876": [280, 281, 284, 285, 393], "87m": 85, "88": [41, 46, 85, 97, 127, 138], "8808": [222, 294, 295], "882": [173, 187], "884": [43, 85], "886": [85, 121], "887": 405, "88m": 85, "891773": 389, "893": 85, "8944": 254, "89442719": 19, "895": [85, 142], "896": [85, 139], "89b": 85, "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 85, 99, 164, 165, 173, 227, 230, 232, 240, 242, 255, 265, 302, 303, 304, 305, 308, 312, 318, 320, 322, 329, 330, 333, 337, 341, 342, 344, 359, 362, 370, 371, 373, 374, 375, 376, 377, 378, 380, 387, 390, 393, 396, 400, 404, 405, 406, 408, 436, 437, 463, 464, 468, 469, 470, 471, 472, 474], "904": [85, 129], "90709145": 392, "9091": 307, "9120": 326, "9163": 326, "91m": 85, "920": [173, 176], "922": [173, 194], "928": [57, 85], "929": [85, 108], "92b": 85, "93": [85, 137], "93b": [85, 173], "93k": 85, "94": 113, "944": [31, 85], "9486833": 25, "949e": [409, 410], "94b": [85, 173], "95": 364, "9526": 221, "9545": 287, "955": [85, 136], "956": [49, 85], "958": [85, 134], "95b": 173, "96": [31, 32, 39, 40, 77, 97, 168, 188, 189], "960": 96, "96366276": 389, "9640": 297, "96402758": 441, "968": [53, 85], "973": [85, 122], "976": [163, 173], "978": [38, 55, 85], "97b": 85, "984": [76, 85, 138, 173, 187], "98b": 85, "99": 378, "9957": 326, "997": [170, 173], "99734545": 392, "999": [0, 373, 374, 375, 376, 377], "99b": [85, 173], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 85, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 267, 276, 300, 307, 308, 310, 311, 312, 313, 315, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 347, 349, 350, 351, 352, 353, 357, 358, 359, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 387, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474], "As": 392, "At": [15, 355, 366], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 208, 268, 357, 377, 384, 387, 389, 390, 391, 393, 468, 478], "For": [2, 3, 4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 213, 215, 216, 218, 219, 220, 221, 223, 240, 242, 254, 267, 280, 281, 284, 285, 293, 302, 303, 304, 305, 318, 320, 328, 329, 330, 332, 333, 334, 357, 369, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 442, 443, 444, 454, 456, 460, 462, 465, 478], "If": [0, 1, 2, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 159, 207, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 233, 237, 240, 242, 249, 252, 256, 257, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 299, 300, 302, 303, 304, 309, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 373, 374, 378, 379, 382, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 472, 473, 475, 476], "Int": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 85, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 159, 173, 178, 185, 187, 189, 196, 198, 207, 209, 210, 211, 212, 213, 233, 237, 240, 265, 267, 268, 269, 270, 271, 275, 287, 288, 291, 292, 297, 299, 300, 309, 315, 318, 319, 322, 323, 324, 325, 326, 337, 338, 339, 347, 349, 350, 352, 355, 357, 358, 369, 370, 376, 378, 379, 380, 382, 384, 392, 395, 396, 397, 398, 401, 402, 403, 405, 406, 412, 429, 431, 448, 450, 453, 454, 455, 456, 457, 459, 460, 461, 462, 466, 467, 468], "Its": [26, 394], "Near": 24, "No": [230, 233], "Not": 319, "One": [87, 478], "Such": 395, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "There": 457, "These": [4, 10, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 176, 307, 310, 311, 312, 313, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 379, 394, 478], "To": [3, 15, 85, 173, 359, 369, 387, 391, 394, 409, 410, 453, 478], "With": [3, 85, 182, 186, 230, 233, 468, 478], "_": [12, 13, 14, 22, 209, 210, 212, 213, 215, 216, 218, 219, 220, 221, 223, 242, 265, 267, 315, 329, 330, 332, 333, 334, 340, 341, 342, 343, 344, 345, 347, 370, 371, 373, 374, 375, 376, 378, 380, 398, 399, 400, 404, 442, 443, 463, 464, 469, 470, 471, 473, 474, 475], "_1": [19, 209, 210, 211, 212, 213, 240, 318, 404, 448, 450, 466], "_2": [19, 209, 210, 211, 212, 213, 240, 318, 404, 448, 450, 466], "__call__": [1, 207], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 159, 174, 175, 206, 207, 208, 209, 210, 211, 212, 233, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 357, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 395, 467, 468], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 358, "__setattr__": 207, "_activ": 222, "_arraylik": [408, 410, 414, 416], "_arraylikeint": 454, "_arrayorscalar": [206, 208, 387, 395, 445], "_backward_op": 15, "_base_activ": 86, "_base_dtyp": [409, 412], "_block": 308, "_builtinnumer": 395, "_c": 470, "_decai": 376, "_devicetyp": [387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "_dtype_bit": 382, "_einopspattern": [12, 13, 14, 315], "_fanmod": [280, 281], "_grad_en": [383, 385], "_i": [19, 23, 222, 233, 240, 295, 309, 325, 328, 335, 340, 343, 395, 398, 399, 401, 402, 404, 405, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 448, 450, 456, 460, 465, 466], "_in": [280, 281, 284, 285], "_interpolatetyp": 355, "_j": [222, 295, 340, 343, 404, 430, 438, 443, 444], "_k": 461, "_layer": [350, 352], "_left": 267, "_make_lay": 145, "_mlphead": 77, "_mlx_dtype": 382, "_mlxarrai": 395, "_modul": 207, "_n": [19, 209, 210, 211, 212, 213, 448, 450, 466], "_np_dtype": 382, "_out": [280, 281, 284, 285, 456, 462], "_p": [23, 254, 265, 347], "_pad": 454, "_paddingstr": [269, 270, 271, 272, 273, 274, 302, 303, 304], "_paramet": 207, "_reducestr": 13, "_reductiontyp": [243, 244, 245, 247, 248, 322, 323, 324, 325, 326], "_resnestbottleneck": 103, "_right": 267, "_scalar": [225, 278, 282, 283, 284, 285, 300, 407, 412, 422, 452], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 253, 335, 390, 413, 415, 446, 457, 460, 465], "_size": [255, 256, 257, 308], "_skresnetmodul": [141, 142, 143], "_slope": 290, "_statedict": 358, "_t": [377, 378], "_tensor": [299, 349, 351, 353], "_tensorop": 395, "_u": 24, "_v": 24, "_valu": [422, 454], "_weight": 347, "_width": 454, "a_": [30, 351], "a_1": [299, 459], "a_2": 459, "a_h": 299, "a_i": [299, 401, 402, 405, 459], "a_k": 459, "aaai": 85, "ab": [366, 417], "abc": [2, 358], "abil": [85, 478], "about": [10, 155], "abov": [383, 385, 392, 408, 411, 463], "abs_pos_emb": [188, 189], "absolut": [22, 23, 30, 188, 189, 245, 366, 375, 418], "abstract": [2, 3, 176, 178, 357, 358, 369, 370, 378, 380, 382], "abstractmethod": 358, "abund": [48, 101], "acceler": [85, 293, 328, 329, 330, 361, 370, 376, 378, 380, 395], "accept": [319, 389], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 206, 208, 209, 210, 211, 212, 213, 457], "accord": [12, 14, 233, 267, 302, 303, 304, 315, 318, 320, 323, 326, 371, 372, 373, 374, 375, 376, 377, 443, 446], "accordingli": [18, 439], "account": [22, 24, 25, 296], "accumul": [370, 371, 372, 395, 396, 397, 401, 402, 403, 406, 446], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 85, 90, 91, 92, 98, 99, 100, 101, 102, 135, 201, 202, 203], "achiev": [12, 85, 123, 124, 125, 126, 127, 128, 129, 182, 226, 227, 228, 255, 315, 337, 338, 339, 376, 473, 475], "across": [0, 5, 6, 10, 12, 13, 15, 30, 39, 52, 85, 94, 173, 176, 181, 182, 183, 185, 186, 187, 189, 197, 206, 210, 213, 250, 253, 255, 256, 257, 284, 285, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 382, 387, 389, 390, 391, 392, 393, 394, 409, 410, 430, 444], "act": [15, 374, 458], "act_lay": 169, "activ": [28, 39, 85, 86, 96, 97, 113, 117, 118, 130, 145, 152, 161, 163, 165, 169, 209, 213, 215, 216, 218, 219, 220, 221, 222, 223, 231, 269, 270, 271, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 308, 310, 311, 312, 313, 322, 323, 326, 328, 329, 330, 335, 349, 351, 353, 429, 431], "actual": [208, 322, 323, 325, 326, 471], "acycl": 15, "ad": [14, 54, 92, 112, 207, 209, 210, 211, 212, 213, 226, 227, 228, 232, 240, 242, 243, 244, 249, 250, 252, 253, 258, 259, 260, 262, 263, 264, 269, 270, 271, 299, 302, 303, 304, 305, 308, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 349, 351, 353, 371, 372, 373, 374, 375, 376, 377, 378, 386, 465, 478], "adadelta": 381, "adagrad": [371, 381], "adam": [85, 374, 375, 376, 377, 381], "adamax": 381, "adamw": 381, "adapt": [10, 28, 73, 85, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 255, 256, 257, 275, 276, 337, 338, 339, 362, 366, 371, 372, 373, 376, 377, 378, 379], "adaptive_avg_pool1d": [239, 261, 337], "adaptive_avg_pool2d": [239, 261, 338], "adaptive_avg_pool3d": [239, 261, 339], "adaptiveavgpool1d": [317, 346], "adaptiveavgpool2d": [28, 130, 145, 152, 317, 346], "adaptiveavgpool3d": [317, 346], "add": [4, 15, 159, 207, 209, 210, 213, 240, 242, 299, 302, 303, 304, 318, 320, 335, 358, 370, 373, 378, 380, 384, 417, 454, 465], "add_bias_kv": 299, "add_modul": [207, 213], "add_param_group": 358, "add_zero_attn": 299, "addit": [4, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 210, 213, 240, 242, 249, 252, 318, 320, 328, 329, 330, 332, 333, 334, 370, 376, 384, 394, 396, 461], "addition": 376, "address": [323, 326, 373, 374, 377], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 255, 256, 257, 276, 307, 308, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 359, 360, 363, 364, 365, 366, 367, 369, 373, 377, 378, 379, 450, 466], "adopt": 395, "advanc": [3, 15, 24, 60, 77, 85, 91, 101, 117, 173, 177, 179, 194, 196, 210, 213, 226, 227, 228, 255, 256, 257, 337, 338, 339, 357, 370], "advantag": [84, 385], "affect": [383, 455, 460, 467], "affin": [269, 270, 271, 328, 329, 330, 332, 333, 334, 335, 474], "after": [10, 14, 15, 22, 28, 96, 97, 152, 188, 189, 208, 209, 210, 211, 212, 213, 237, 275, 276, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 303, 304, 307, 310, 311, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 349, 351, 353, 359, 366, 374, 385, 395, 396, 397, 401, 402, 403, 405, 406, 412, 454, 459, 468], "afterward": 385, "aggreg": [10, 85, 159, 276, 404, 456, 462], "agnost": 382, "aim": 4, "al": [74, 85, 159, 173, 349], "alex": [5, 6, 85], "alexei": 173, "alexnet": 152, "algebra": [16, 411], "algorithm": [7, 22, 24, 25, 358, 369, 394], "align": [10, 26, 101, 267, 355, 399, 400, 439], "align_corn": [267, 355], "all": [0, 3, 4, 15, 25, 59, 85, 173, 207, 209, 210, 211, 212, 213, 227, 228, 254, 255, 256, 257, 259, 260, 263, 264, 267, 270, 271, 276, 290, 291, 299, 304, 337, 338, 339, 341, 342, 345, 349, 357, 358, 363, 369, 370, 373, 378, 379, 380, 395, 405, 429, 430, 431, 438, 442, 444, 448, 449, 450, 456, 460, 461, 462, 463, 464, 466, 469, 470, 478], "allevi": [85, 215], "alloc": [15, 409, 410], "allow": [0, 1, 3, 4, 10, 12, 24, 25, 84, 85, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 159, 175, 176, 188, 192, 193, 194, 195, 196, 198, 208, 209, 210, 211, 212, 213, 215, 218, 219, 222, 228, 230, 268, 276, 286, 287, 290, 293, 294, 295, 297, 300, 302, 303, 304, 315, 347, 355, 357, 359, 360, 362, 364, 366, 371, 372, 384, 407, 413, 415, 416, 439, 443, 445, 453, 467, 468, 478], "along": [10, 13, 14, 222, 254, 267, 276, 295, 399, 400, 404, 429, 430, 431, 438, 442, 444, 446, 447, 448, 450, 453, 456, 458, 459, 461, 462, 465, 466, 473, 475], "alongsid": 206, "alpha": [215, 218, 220, 231, 286, 293, 307, 370, 378], "alpha_dropout": [238, 239, 307], "alphadropout": [314, 317], "alphadropoutmodel": 307, "alreadi": 386, "also": [155, 215, 216, 218, 219, 220, 221, 223, 240, 242, 267, 376, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 446, 448, 450, 454, 455, 456, 457, 460, 461, 462, 465, 466], "alter": [213, 457, 458], "altern": [1, 15, 287, 371, 400], "alwai": [10, 208, 359, 452, 455, 472, 473, 475], "among": [75, 276], "amount": [226, 227, 228, 258, 259, 260, 262, 263, 264, 272, 273, 274, 305, 376], "ampl": 98, "amsgrad": [373, 374], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 216, 226, 227, 228, 230, 231, 234, 235, 236, 237, 240, 256, 257, 265, 267, 268, 272, 273, 274, 276, 284, 285, 286, 292, 294, 299, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 318, 320, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 358, 359, 364, 369, 370, 373, 376, 378, 382, 385, 386, 395, 400, 408, 411, 422, 430, 438, 444, 446, 448, 456, 459, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "analog": [456, 462], "analysi": [4, 275, 302, 303, 304, 334, 340, 342, 343, 345], "andreetto": 85, "andrew": 85, "angl": [268, 474], "ani": [0, 1, 2, 3, 12, 15, 22, 24, 29, 112, 140, 151, 153, 206, 207, 208, 209, 211, 212, 215, 216, 218, 219, 220, 221, 223, 231, 234, 240, 242, 249, 252, 294, 315, 335, 357, 358, 363, 383, 385, 386, 392, 395, 407, 408, 409, 411, 413, 414, 415, 416, 429, 431, 443, 445, 448, 449, 450, 454, 456, 461, 462, 465, 466, 467, 478], "anneal": 360, "anoth": [93, 212, 406, 414, 416, 468, 478], "api": [4, 15, 337, 338, 339, 478], "appear": 358, "append": [210, 212, 213, 299], "appl": [15, 382, 395], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 22, 28, 30, 39, 59, 60, 77, 85, 123, 140, 150, 152, 156, 173, 188, 189, 200, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 250, 254, 269, 270, 271, 275, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 363, 364, 370, 371, 372, 374, 375, 376, 377, 400, 454, 456, 463, 464, 467, 470, 472, 473, 474, 475, 476, 478], "applic": [4, 10, 13, 15, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 205, 226, 252, 302, 303, 304, 318, 320, 394, 407, 415, 454, 459, 463, 464, 476], "approach": [3, 10, 12, 14, 82, 159, 161, 163, 165, 169, 213, 315, 360, 374], "appropri": [24, 85, 92, 96, 97, 207, 211, 213, 233, 302, 303, 304, 307, 310, 311, 323, 341, 342, 382, 383, 385], "approx": 220, "approxim": [24, 216, 287, 288, 289, 341, 344], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 85, 98, 100, 101, 154, 170, 171, 172, 175, 176, 177, 178, 179, 180, 184, 206, 207, 208, 209, 210, 211, 212, 213, 222, 226, 227, 228, 230, 233, 240, 242, 250, 256, 257, 265, 267, 272, 273, 274, 275, 276, 280, 281, 283, 284, 285, 288, 295, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 353, 355, 357, 361, 365, 370, 373, 374, 376, 377, 378, 379, 380, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 418, 422, 426, 429, 430, 431, 432, 433, 438, 439, 442, 443, 446, 447, 448, 453, 456, 457, 458, 459, 462, 463, 464, 467, 468, 469, 471, 472, 476, 478], "arang": 417, "arbitrari": [210, 319, 409, 410, 422, 427, 428, 430, 434, 436, 438, 443, 444], "arcco": 417, "arch": 386, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 182, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 216, 275, 288, 289, 291, 296, 299, 300, 315, 318, 319, 349, 357, 386], "arcsin": 417, "arctan": 417, "area": [267, 355], "arg": [207, 319, 386, 409], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 207, 213, 319, 389, 409, 443], "around": [19, 268, 297], "arr": [448, 450, 461, 466], "arrai": [15, 206, 208, 384, 387, 395, 400, 408, 410, 414, 416, 445, 455, 456, 468, 478], "art": [48, 85, 202], "artifici": 85, "arxiv": [85, 173], "asgd": 381, "ashish": 173, "aspect": 476, "assign": [15, 207, 209, 211, 213, 267, 323, 326, 452], "assist": [73, 74, 75], "associ": [211, 212], "assum": [0, 1, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 358, 369, 383], "astyp": 395, "attempt": [209, 213], "attend": [225, 300, 350, 352, 353], "attent": [30, 85, 103, 110, 111, 140, 154, 156, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 212, 240, 275, 299, 300, 349, 350, 351, 352, 353], "attn": [225, 300], "attn_drop_r": [159, 174, 175, 188, 189], "attn_mask": [225, 300], "atto": [45, 78, 85], "attribut": [15, 207, 359], "audio": 302, "augment": [3, 4, 133, 268, 394, 456, 462, 467, 471, 472, 473, 474, 475, 478], "auto_pars": 382, "autodiff": 395, "autoencod": 85, "autograd": [15, 357], "automat": [4, 208, 209, 210, 211, 212, 357, 387, 389, 390, 391, 393, 395, 409, 410, 416, 453, 468], "autoregress": [225, 300], "auxiliari": [73, 74, 75, 206], "avail": [4, 5, 6, 7, 8], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 206, 255, 256, 257, 258, 259, 260, 267, 275, 276, 325, 337, 338, 339, 340, 341, 342, 370, 371, 373, 378, 430], "avg_down": 112, "avg_pool": [340, 341, 342], "avg_pool1d": [239, 261], "avg_pool2d": [239, 261], "avg_pool3d": [239, 261], "avgpool": [28, 130, 145, 152, 276], "avgpool1d": [317, 346], "avgpool1dmodel": 340, "avgpool2d": [317, 346], "avgpool2dmodel": 341, "avgpool3d": [317, 346], "avgpool3dmodel": 342, "avoid": [2, 3, 12, 13, 24, 60, 184, 211, 254, 315, 361, 385, 412], "awar": 197, "ax": [10, 12, 13, 14, 16, 315, 384, 429, 430, 431, 438, 439, 443, 444, 446, 456, 460, 462], "axi": [13, 23, 222, 254, 295, 399, 400, 429, 430, 431, 438, 444, 447, 448, 449, 450, 453, 454, 456, 458, 459, 460, 461, 462, 465, 466, 473, 475], "axis1": 439, "axis2": 439, "b": [12, 13, 14, 16, 26, 30, 85, 173, 201, 240, 242, 283, 302, 303, 304, 315, 318, 320, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 446, 448, 450, 453, 461, 466, 472], "b0": [59, 61, 85, 173, 181], "b1": [59, 62, 85, 173, 182, 183], "b2": [59, 63, 85, 173, 183, 184], "b3": [59, 64, 85, 173, 185], "b4": [59, 65, 85, 173, 186], "b5": [59, 66, 85, 173, 187], "b6": [59, 67, 85], "b7": [59, 68, 85], "b_": 30, "b_1": [351, 353], "b_2": [351, 353], "b_i": [401, 402, 405], "b_k": 299, "b_v": 299, "back": [15, 267, 299, 341, 342, 386, 399, 404, 447, 456, 462], "backbon": [141, 142, 143, 173, 185], "backend": 395, "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 85, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 240, 242, 267, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 357, 385, 391, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 426, 429, 431, 445, 446, 447, 452, 454, 456, 458, 462, 463, 464, 468], "backward": [15, 206, 208, 305, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395, 412, 447, 452, 458, 468], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 85, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 166, 167, 170, 176, 179, 201, 204, 324], "bar": 370, "base": [3, 12, 13, 15, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 156, 157, 166, 173, 190, 194, 201, 205, 207, 209, 210, 211, 212, 225, 230, 240, 255, 256, 257, 276, 300, 305, 307, 315, 323, 324, 337, 338, 339, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 374, 378, 379, 380, 382, 387, 396, 397, 401, 402, 403, 405, 406, 416, 426, 427, 428, 429, 431, 443, 453, 454, 459, 471, 472, 473, 474, 475], "base_dtyp": 382, "base_lr": 361, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "baselin": 173, "basic": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 159, 225, 226, 227, 228, 232, 233, 255, 256, 257, 265, 269, 270, 271, 272, 273, 274, 275, 280, 281, 284, 285, 300, 308, 337, 338, 339, 347, 412, 446, 469, 470, 471, 472, 473, 474, 475, 476], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 15, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 225, 226, 227, 228, 230, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 299, 300, 302, 303, 304, 305, 318, 320, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 377, 400, 439, 469, 470, 471, 472, 474, 476], "batch_norm": [239, 251, 328, 329, 330], "batch_norm1": 213, "batch_norm2": 213, "batch_siz": [1, 2, 3, 150, 276], "batch_tensor": 439, "batchnorm": [269, 270, 271], "batchnorm1d": [269, 317, 336], "batchnorm1dmodel": 328, "batchnorm2d": [213, 270, 317, 336], "batchnorm2dmodel": 329, "batchnorm3d": [271, 317, 336], "batchnorm3dmodel": 330, "bceloss": [317, 327], "becaus": [2, 390], "becom": [23, 207, 371, 379], "been": [296, 452], "befor": [10, 14, 22, 30, 130, 155, 208, 225, 300, 349, 351, 353, 360, 366, 370, 376, 385, 392, 454, 458, 470, 478], "begin": [1, 23, 215, 218, 219, 220, 233, 286, 288, 289, 290, 291, 293, 309, 324, 325, 326, 340, 341, 342, 343, 344, 345, 377, 379, 384, 394, 401, 402, 404, 418, 422, 429, 431, 433, 452, 454, 463, 464], "behav": [309, 324, 442], "behavior": [10, 15, 85, 210, 213, 225, 254, 300, 305, 363, 383, 394, 400, 410, 478], "being": [212, 268, 307, 310, 311, 312, 313, 377, 383, 385, 395, 447, 448, 450, 466], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 400, 408, 411, 464], "benchmark": [5, 6, 7, 8, 15, 101], "benefici": 213, "benefit": [102, 215, 357, 376], "bernoulli": [307, 310, 311, 312, 313, 388], "best": [101, 280, 281, 284, 285], "beta": [250, 328, 329, 330, 331, 332, 333, 334, 335, 373, 374, 375, 376, 377], "beta1": [373, 374, 375, 376, 377], "beta2": [373, 374, 375, 376, 377], "beta_1": [373, 374, 375, 376, 377], "beta_2": [373, 374, 375, 376, 377], "beta_c": [250, 331], "better": [21, 85, 100, 152, 161, 163, 165, 183, 184, 189, 197, 216, 280, 281, 284, 285, 296, 308, 332, 333, 334, 357, 366, 367, 374, 376, 378, 470], "between": [43, 46, 50, 69, 70, 71, 72, 81, 85, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 159, 167, 179, 201, 204, 207, 226, 227, 228, 230, 240, 245, 269, 270, 271, 272, 273, 274, 276, 292, 302, 303, 304, 305, 307, 310, 311, 312, 313, 318, 322, 323, 324, 325, 326, 361, 366, 367, 370, 378, 379, 380, 394, 396, 397, 400, 403, 406, 407, 412, 444, 472, 473, 475, 476], "beyond": [10, 210, 366], "bia": [30, 159, 161, 163, 165, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 226, 227, 228, 240, 242, 249, 252, 253, 269, 270, 271, 272, 273, 274, 299, 302, 303, 304, 318, 320, 328, 329, 330, 332, 333, 334, 335, 349, 351, 353, 373, 374, 375, 376, 377], "bias": [169, 173, 302, 303, 304, 320, 335, 357], "bias1": 211, "bias2": 211, "big": [173, 272, 273, 274], "bilinear": [239, 241, 267, 317, 321, 355], "bilinearmodel": 318, "binari": [221, 243, 294, 307, 310, 311, 312, 313, 322], "binary_cross_entropi": [239, 246], "bit": 382, "black": 15, "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 85, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 230, 232, 233, 269, 270, 271, 276, 302, 303, 304, 305, 308, 385], "block1": [155, 357], "block2": [155, 357], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [232, 308], "block_typ": 30, "blue": 472, "bmatrix": 404, "bn": [269, 270, 271], "bn_affin": [269, 270, 271], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 159, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 207, 208, 225, 231, 233, 234, 235, 236, 237, 249, 252, 267, 269, 270, 271, 272, 273, 274, 299, 300, 302, 303, 304, 309, 318, 320, 328, 329, 330, 332, 333, 334, 335, 349, 350, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 373, 374, 378, 382, 383, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 429, 430, 431, 438, 444, 445, 468], "boolean": 452, "boost": 98, "both": [30, 93, 159, 161, 163, 165, 169, 173, 175, 176, 188, 190, 191, 192, 193, 226, 242, 256, 258, 262, 269, 287, 296, 302, 303, 305, 338, 340, 341, 343, 344, 353, 355, 382, 398, 399, 400, 404, 408, 453, 459, 476], "bottleneck": [54, 85, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 275], "bottleneck_cfg": 92, "bottom": 267, "bound": [281, 283, 285, 361, 379, 393, 395], "box": [4, 15], "branch": [73, 74, 75, 85, 159, 276], "break": [10, 357], "brief": 478, "bright": 478, "bring": [10, 315], "broadcast": [14, 15, 312, 313, 430, 438, 444, 457, 465], "broadcast_to": 451, "budget": [50, 185], "buffer": [15, 370, 376, 378, 380], "build": [15, 40, 60, 84, 85, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 156, 199, 207, 210, 213, 357, 478], "built": [3, 15, 113, 117, 118, 213, 357, 382], "burg": 8, "c": [5, 6, 8, 12, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 230, 232, 235, 236, 237, 244, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 275, 305, 312, 313, 315, 323, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 361, 384, 450, 466, 470], "c_": [302, 303, 304], "c_in": [226, 227, 228, 269, 270, 271], "c_out": [226, 227, 228], "calcul": [0, 1, 16, 208, 355, 371, 372, 375, 376, 377, 385, 390], "calculu": [17, 24], "call": [1, 15, 207, 359, 383, 386, 396, 397, 400, 401, 402, 403, 405, 406], "callabl": [181, 182, 183, 185, 186, 187, 349, 351, 353, 358, 361, 364, 386, 395, 467], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 85, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 155, 159, 206, 208, 209, 210, 211, 212, 213, 218, 226, 227, 228, 233, 268, 276, 287, 290, 292, 297, 302, 303, 304, 305, 332, 333, 334, 341, 342, 343, 344, 345, 347, 350, 357, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 393, 394, 395, 400, 409, 410, 411, 413, 415, 416, 430, 438, 439, 444, 446, 450, 453, 454, 456, 457, 462, 465, 466, 467, 468, 471, 473, 474, 475, 478], "cannot": [18, 19, 21, 22, 25, 26, 27, 387, 447], "cap": 292, "capabl": [10, 30, 52, 110, 111, 173, 407, 408, 411, 413, 414, 415, 416], "capac": [41, 42, 43, 49, 53, 85, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 158, 173, 177, 182, 186, 187, 196, 202], "captur": [15, 30, 85, 140, 159, 161, 163, 165, 169, 173, 176, 177, 178, 188, 190, 191, 192, 193, 194, 195, 198, 230, 302, 303, 304, 318], "cardin": [85, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140], "care": [159, 385], "carefulli": 359, "cartesian": 453, "case": [3, 23, 86, 92, 94, 215, 218, 219, 220, 233, 286, 288, 289, 290, 291, 293, 309, 324, 325, 326, 340, 341, 342, 343, 344, 345, 357, 365, 372, 377, 379, 384, 401, 402, 418, 422, 429, 431, 433, 452, 454, 463, 464, 478], "categor": [265, 347], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 347, 382], "caus": [3, 24, 359, 370, 378, 380], "causal": [225, 300], "cautiou": [0, 10], "cdot": [15, 17, 18, 21, 22, 23, 26, 159, 173, 215, 216, 218, 220, 221, 225, 226, 227, 228, 240, 242, 250, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 275, 284, 285, 287, 288, 289, 294, 296, 300, 305, 307, 318, 320, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 347, 360, 361, 362, 364, 365, 367, 371, 372, 373, 374, 375, 376, 377, 379, 398, 399, 400, 403, 405], "center": [268, 297, 378, 469, 478], "centercrop": [477, 478], "certain": [18, 216, 225, 240, 296, 300, 318, 353, 366, 373, 374, 383, 429, 431], "cfg": [93, 96, 97], "chain": [15, 21, 22, 213, 467, 478], "challeng": [7, 85, 176], "cham": 85, "chanc": [472, 473, 475], "chang": [10, 245, 324, 365, 379, 384, 385, 386, 395, 455, 457, 465, 472, 478], "chanlumerico": 15, "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 159, 169, 170, 171, 172, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 226, 227, 228, 230, 235, 236, 237, 249, 250, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 302, 303, 304, 312, 313, 328, 329, 330, 331, 332, 333, 334, 337, 340, 341, 342, 343, 344, 345, 470, 472, 476], "character": [121, 122], "check": [15, 383, 395, 469, 471], "checkpoint": 369, "chen": [85, 159, 173], "choic": [100, 102, 453], "choleski": 20, "chollet": 85, "choos": 85, "chosen": [307, 308, 359], "christian": 85, "christoph": 8, "chu": 85, "chun": 173, "chunk": 451, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 222, 233, 244, 248, 357, 369, 386, 478], "classic": 89, "classifclassifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 385, 400], "clear": [208, 409, 410, 412], "clf_in_featur": 86, "clf_layer": 86, "clip": [268, 288, 292, 379, 417], "clockwis": 268, "close": [21, 24, 293, 322, 378], "closer": 286, "closur": [358, 369], "cloth": 7, "cnn": [30, 85, 161, 163, 165, 173], "co": [85, 360, 417, 434], "coars": 173, "coatnet": [31, 32, 33, 34, 35, 36, 37, 38], "coatnet_0": 85, "coatnet_1": 85, "coatnet_2": 85, "coatnet_3": 85, "coatnet_4": 85, "coatnet_5": 85, "coatnet_6": 85, "coatnet_7": 85, "code": [10, 15, 22, 209, 211, 213, 383, 385, 394], "coeffici": [26, 59, 267, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "col": 230, "collaps": 10, "collect": [4, 16, 154, 209, 210, 212, 213, 369], "color": [472, 478], "colorjitt": 478, "column": [18, 19, 21, 25, 26, 27, 155, 230, 305, 411, 450, 453], "com": [7, 8, 15], "combin": [1, 3, 12, 30, 76, 82, 83, 85, 102, 144, 159, 173, 177, 210, 213, 215, 216, 269, 270, 271, 275, 276, 287, 305, 308, 315, 323, 357, 376, 377, 430, 438, 444, 448, 478], "combined_dataset": [0, 1], "common": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 230, 268, 369, 382, 478], "commonli": [90, 91, 92, 94, 95, 96, 97, 100, 102, 216, 221, 222, 223, 226, 228, 233, 240, 247, 249, 252, 265, 268, 275, 284, 285, 288, 289, 292, 295, 300, 304, 322, 325, 326, 340, 341, 342, 343, 344, 345, 347, 349, 384, 413, 460, 468, 469, 470, 471, 473, 474, 475, 478], "compact": [44, 45, 47, 52, 81, 100, 181, 182], "compar": [30, 43, 44, 85, 121, 122, 152, 172, 175, 183, 394, 461], "compat": [4, 10, 15, 16, 140, 315, 319, 335, 357, 384, 394, 412, 446, 468, 478], "competit": [45, 51, 52], "complet": [156, 349, 350, 352], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 175, 176, 177, 178, 179, 183, 184, 185, 195, 206, 208, 209, 210, 213, 219, 225, 268, 278, 282, 283, 284, 285, 291, 300, 343, 345, 357, 364, 369, 373, 374, 375, 376, 377, 379, 382, 387, 393, 395, 407, 408, 409, 410, 411, 412, 413, 415, 422, 445, 452, 468, 478], "complex64": 382, "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 207, 210, 369, 395, 478], "compos": [5, 6, 7, 8, 150, 302, 303, 304, 340, 341, 342, 343, 344, 345, 357, 478], "compound": 60, "comprehens": [3, 166], "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 85, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 159, 169, 173, 175, 176, 179, 180, 184, 188, 202, 203, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 267, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 357, 358, 360, 361, 362, 363, 364, 365, 367, 369, 370, 378, 383, 384, 385, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 453, 454, 456, 462, 468, 478], "computation": [3, 12, 24, 113, 288, 289, 315], "compute_grad": 447, "compute_loss": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "concat": 299, "concaten": [0, 226, 227, 228, 299, 450, 451, 461, 466], "concept": [24, 85, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": [85, 173], "config": 145, "configur": [15, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 212, 269, 270, 271, 300, 382], "confirm": 15, "conjunct": [230, 326], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 242, 275, 276, 302, 303, 304, 320, 351, 353], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 213, 280, 281, 284, 285, 305, 357, 379, 382, 383, 409, 410, 463, 464, 478], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 159, 206, 255, 256, 257, 276, 299, 337, 338, 339, 349, 351, 353, 392, 394, 454, 469, 476, 478], "consistent_tensor": 394, "consol": 155, "constant": [243, 244, 249, 250, 252, 253, 254, 279, 293, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 349, 351, 353, 367, 371, 372, 373, 374, 375, 376, 377, 378, 452, 454], "constant_pad": 454, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 184, 276, 315], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 210, 357, 408, 456, 462, 463, 464], "constructor": [15, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 207, 209, 210, 211, 212, 213, 222, 225, 230, 240, 242, 243, 244, 248, 265, 267, 322, 323, 326, 358, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 410, 412, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 447, 449, 453, 459], "content": 268, "context": [85, 194, 196, 197, 383, 385, 395], "contextmanag": 385, "contextu": [170, 171, 172, 176, 190, 191, 192, 193], "contigu": [232, 308, 455], "continu": [290, 362, 367, 391], "contract": 12, "contrast": [156, 332, 333, 334, 478], "contribut": [232, 267, 307, 310, 311, 312, 313, 340, 343, 344, 345, 370, 376, 442], "control": [10, 14, 30, 39, 123, 175, 176, 276, 286, 324, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 394, 395, 468, 478], "conv": [77, 82, 85, 130, 269, 270, 271, 329, 330], "conv1": [87, 88, 89, 213, 302, 303, 304, 340, 341, 342, 343, 344, 345], "conv1d": [229, 239, 269, 272, 306, 317, 340, 343], "conv1dmodel": 302, "conv2": [87, 88, 89, 213, 302, 303, 304], "conv2d": [210, 213, 229, 239, 270, 273, 306, 315, 317, 329, 341, 344, 357], "conv2dmodel": 303, "conv3d": [229, 239, 271, 274, 306, 317, 330, 342, 345], "conv3dmodel": 304, "conv_bia": [269, 270, 271], "conv_config": 145, "conv_lay": [86, 210], "convblock": 357, "convbnrelu1d": 277, "convbnrelu2d": 277, "convbnrelu3d": 277, "conveni": [4, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168], "convent": 400, "converg": [24, 297, 359, 360, 361, 363, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 470], "convers": [323, 326, 472, 478], "convert": [5, 6, 7, 8, 145, 159, 206, 208, 222, 265, 295, 453, 467, 468, 472, 478], "convnetconvnetwork": 210, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "convnext_bas": 85, "convnext_larg": 85, "convnext_smal": 85, "convnext_tini": 85, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 85, "convnext_v2_bas": 85, "convnext_v2_femto": 85, "convnext_v2_hug": 85, "convnext_v2_larg": 85, "convnext_v2_nano": 85, "convnext_v2_pico": 85, "convnext_v2_tini": 85, "convnext_xlarg": 85, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 210, 226, 227, 228, 230, 269, 270, 271, 272, 273, 274, 275, 276, 302, 303, 304, 305, 341, 342, 344, 345, 439, 454], "convolv": [226, 227, 228, 302, 303, 304], "cooldown": 366, "coordin": 453, "copi": [10, 446], "core": [0, 1, 2, 3, 159, 207, 357, 358, 382, 395, 478], "corinna": 8, "corner": [267, 355, 469, 471], "correct": [209, 323, 326, 373, 374, 375, 376, 377, 452, 463, 464, 468], "correctli": [24, 207, 209, 210, 211, 212, 213, 323, 326, 394, 446, 447], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 190, 191, 192, 193, 199, 209, 211, 213, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 240, 242, 265, 267, 288, 291, 295, 318, 320, 328, 329, 330, 332, 333, 334, 341, 342, 347, 370, 378, 380, 382, 387, 398, 399, 401, 402, 405, 426, 427, 428, 434, 436, 446, 447, 450, 454, 456, 458, 462, 466], "cort": 8, "cosh": [417, 435, 441], "cosin": [360, 419, 423, 424, 434], "cosineannealinglr": 368, "cost": [85, 90, 92, 93, 99, 100, 102, 123, 169, 184, 272, 273, 274], "could": 207, "count": [85, 93, 155, 173, 181, 182, 183, 185, 186, 187, 360, 365, 448], "counterclockwis": [268, 474], "cover": [16, 226, 227, 228], "coverag": [255, 256, 257], "cpu": [15, 206, 208, 382, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "craft": 15, "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 206, 207, 210, 213, 276, 292, 299, 349, 350, 351, 352, 353, 357, 384, 386, 394, 407, 411, 412, 413, 414, 415, 416, 446, 453, 461, 467, 478], "creation": [69, 70, 71, 72, 210, 213, 478], "criterion": [322, 323, 324, 325, 326], "critic": [24, 100, 186, 369, 394], "crop": [469, 471, 478], "cross": [159, 173, 188, 243, 244, 322, 323, 349, 350, 351], "cross_entropi": [239, 246], "crossattent": 159, "crossentropyloss": [317, 327], "crossvit": [160, 161, 162, 163, 164, 165, 166, 167, 168], "crossvit_15": 173, "crossvit_15_dagg": 173, "crossvit_18": 173, "crossvit_18_dagg": 173, "crossvit_9": 173, "crossvit_9_dagg": 173, "crossvit_bas": 173, "crossvit_smal": 173, "crossvit_tini": 173, "crucial": [10, 359], "cube": 417, "cumul": [216, 287], "current": [207, 360, 361, 362, 363, 364, 365, 366, 367, 370, 373, 379, 383], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 268, 269, 270, 271, 286, 290, 305, 349, 357, 361, 364, 394, 411, 412, 459], "custom_config": 145, "custom_decod": 349, "custom_encod": 349, "custom_lenet": 86, "customiz": [181, 478], "custommodul": 206, "customnetwork": 209, "customparametermodel": [211, 212], "cut": 101, "cvf": [85, 173], "cvpr": 85, "cvt": [170, 171, 172], "cvt_13": 173, "cvt_21": 173, "cvt_w24": 173, "cvtspec": 169, "cycl": 361, "cycle_momentum": 361, "cyclic": [360, 361, 458], "cycliclr": 368, "d": [30, 85, 225, 228, 237, 257, 260, 264, 271, 300, 305, 330, 334, 335, 339, 342, 345, 384, 408, 474], "d_": [173, 228, 257, 260, 264, 299, 304, 339, 342, 345, 349, 350, 351, 352, 353], "d_1": [12, 13, 14, 315, 335], "d_2": [12, 13, 14, 315, 335], "d_h": [299, 305, 351, 353], "d_k": [30, 159], "d_model": [156, 157, 158, 200, 349, 350, 351, 352, 353], "d_n": [12, 13, 14, 315, 335], "d_out": [228, 260, 264], "d_w": 305, "dag": 15, "dai": 85, "dampen": [370, 378, 380], "data": [4, 5, 6, 7, 8, 10, 15, 22, 85, 154, 173, 195, 206, 208, 212, 223, 226, 228, 230, 236, 237, 242, 265, 268, 269, 270, 271, 276, 291, 297, 302, 303, 304, 320, 334, 340, 342, 345, 352, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 394, 395, 396, 397, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 439, 445, 446, 454, 455, 456, 457, 459, 460, 462, 467, 468, 471, 472, 473, 474, 475, 478], "data_dtyp": 382, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 176, 187, 268, 372, 385, 467, 469, 478], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 404, "debug": [15, 155, 213, 383, 392, 478], "decai": [308, 359, 360, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "declar": [12, 13, 14, 315], "decod": [156, 349, 350, 351], "decoder_lay": [350, 351], "decoderlay": 350, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 386], "decoupl": [85, 371, 372, 374, 375, 376, 377], "decreas": [361, 366, 373, 374, 379], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 85, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 173, 176, 249, 287, 293, 315, 357, 359, 394, 412, 459, 463, 464, 467, 468, 478], "deepen": 185, "deeper": [74, 76, 84, 85, 112, 119, 171, 175, 178, 183, 186, 195, 196, 293], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 357, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 290, 295, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 376, 383, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 429, 430, 431, 438, 443, 444, 445, 447, 448, 450, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 472, 473, 475], "defer": 15, "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 159, 169, 209, 210, 211, 212, 213, 233, 287, 289, 292, 296, 322, 323, 324, 325, 326, 340, 355, 357, 359, 361, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 391, 405, 410, 422, 443, 467, 478], "definit": [15, 17, 269, 270, 271, 478], "degre": [268, 474, 478], "delai": 370, "deliv": [15, 100, 101, 187], "delta": [12, 222, 245, 295, 315, 324, 371], "delta_": [12, 222, 295, 315], "demand": [101, 185, 186], "demonstr": [16, 136, 137, 138, 139, 144, 154, 357], "demystifi": 15, "denomin": [249, 250, 252, 253, 269, 270, 271, 328, 329, 330, 331, 332, 333, 334, 335, 349, 351, 353, 371, 372, 373, 374, 375, 376, 377, 378, 397], "denot": [22, 110, 111, 294, 299, 302, 303, 304, 307, 310, 311, 312, 313, 443], "dens": [54, 55, 56, 57, 58, 85, 173, 188, 190, 191, 192, 193, 233, 265, 347, 372], "densenet": [55, 56, 57, 58, 275], "densenet_121": 85, "densenet_169": 85, "densenet_201": 85, "densenet_264": 85, "densiti": [216, 287], "depend": [15, 22, 23, 30, 92, 154, 173, 176, 177, 188, 190, 191, 192, 193, 194, 195, 212, 243, 244, 245, 247, 248, 267, 302, 398, 408, 429, 431, 456, 462, 471, 472, 476], "deploy": [102, 181, 184], "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 85, 98, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 210, 228, 233, 237, 257, 260, 264, 304, 309, 330, 334, 339, 342, 345], "depth_coef": 59, "depthseparableconv1d": 277, "depthseparableconv2d": 277, "depthseparableconv3d": 277, "depthwis": [30, 39, 77, 85, 90, 150, 169, 170, 171, 172, 173, 226, 227, 228, 272, 273, 274], "depthwise_separ": [272, 273, 274], "der": 85, "deriv": [15, 24, 25, 222, 255, 256, 257, 287, 295, 297, 302, 303, 304, 318, 320, 386], "descend": 27, "descent": [370, 380], "describ": [10, 18, 19, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "descript": [154, 478], "deseri": 206, "design": [3, 4, 13, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 85, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 159, 170, 171, 172, 173, 174, 176, 179, 186, 188, 195, 196, 202, 208, 210, 211, 212, 213, 215, 220, 293, 307, 357, 478], "desir": [10, 14, 151, 206, 255, 256, 257, 308, 337, 338, 339, 355, 359, 443, 445], "despit": 254, "destin": 207, "det": [16, 20], "det_a": 18, "detail": [155, 161, 163, 165, 169, 176, 195, 369, 394, 400], "detect": [85, 173, 187, 194, 195, 196, 197, 198, 366], "determin": [0, 16, 17, 18, 86, 121, 122, 159, 255, 256, 257, 280, 281, 284, 285, 302, 303, 304, 337, 338, 339, 341, 342, 344, 345, 361, 378, 383, 387, 389, 390, 391, 393, 409, 410, 459, 469, 471], "determinist": 268, "develop": [10, 15, 93, 357, 394, 478], "deviat": [280, 282, 284, 467, 470, 478], "devic": [91, 92, 98, 99, 206, 208, 382, 387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "diag": [24, 417], "diagon": [24, 25, 27, 408, 411, 442, 463, 464], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 209, 211, 315, 319, 358, 363], "dictionari": [86, 93, 100, 207, 208, 209, 211, 213, 358, 363], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 159, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 189, 198, 210, 213, 222, 240, 267, 276, 295, 318, 325, 359, 366, 369, 382, 384, 392, 394, 406, 416, 444, 460, 478], "differenti": [17, 26, 265, 287, 357, 387, 389, 390, 391, 393, 395, 407, 409, 410, 413, 415], "difficult": 178, "digit": [7, 8, 85, 89], "dilat": [226, 227, 228, 269, 270, 271, 272, 273, 274, 302, 303, 304, 305], "dilation_height": 230, "dilation_width": 230, "dim": [39, 40, 77, 159, 225, 254, 300, 323, 326, 458], "dim_feedforward": [156, 349, 351, 353], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 85, 112, 123, 140, 145, 152, 156, 159, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 200, 208, 222, 225, 240, 242, 249, 250, 252, 253, 254, 256, 257, 267, 275, 276, 295, 299, 300, 302, 303, 304, 305, 308, 315, 328, 329, 330, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 349, 351, 352, 353, 355, 384, 389, 393, 395, 399, 409, 429, 430, 431, 438, 439, 442, 443, 444, 446, 447, 448, 450, 454, 456, 458, 460, 461, 462, 465, 466, 469, 471, 476], "dimension": [10, 22, 24, 25, 27, 77, 226, 227, 228, 258, 259, 260, 262, 263, 264, 276, 299, 302, 303, 304, 305, 311, 312, 313, 328, 329, 330, 332, 333, 334, 340, 341, 342, 343, 344, 345, 349, 351, 353, 384, 399, 400, 404, 408, 426, 430, 438, 439, 442, 444, 449, 455, 456, 460, 462, 463, 464], "diminish": [359, 372], "direct": [15, 19, 322, 323, 324, 325, 326, 370, 378, 379, 380, 458], "directli": [69, 70, 71, 72, 85, 209, 210, 211, 212, 267, 315, 355, 371, 372, 374, 375, 376, 377, 392, 394, 445, 478], "directori": [3, 4, 5, 6, 7, 8], "disabl": [233, 308, 309, 383, 385], "discontinu": 433, "discrep": [322, 323, 326], "discret": [387, 390, 394], "disk": 3, "displai": [29, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168], "distinct": [93, 156], "distribut": [195, 216, 222, 232, 267, 280, 281, 282, 283, 284, 285, 287, 295, 302, 303, 304, 307, 308, 310, 311, 312, 313, 318, 320, 323, 326, 340, 341, 342, 387, 389, 390, 391, 393, 394, 430, 438, 442, 444, 461, 470, 472, 473, 474, 475], "div": 417, "divers": [46, 85, 268, 473, 475, 478], "diversifi": 478, "divid": [1, 24, 85, 173, 188, 189, 200, 201, 202, 203, 204, 205, 210, 213, 222, 226, 227, 228, 295, 322, 323, 324, 325, 326, 397, 447, 459, 470], "divis": [24, 226, 227, 228, 254, 299, 307, 310, 311, 312, 313, 349, 351, 353, 371, 372, 373, 374, 375, 376, 377, 378, 397, 459], "dl": 15, "do": [24, 26, 206, 209, 210, 211, 212, 231, 234, 235, 236, 357, 359, 377, 383, 416, 442, 454], "do_ev": 155, "doc": 154, "document": [4, 85, 369, 394], "doe": [22, 23, 24, 25, 27, 155, 156, 206, 209, 210, 211, 212, 213, 254, 285, 366, 373, 374, 379, 383, 385, 387, 389, 390, 391, 392, 393, 407, 408, 409, 410, 411, 413, 414, 415, 416, 446, 452, 457, 458], "doesn": 385, "doi": 85, "domain": [4, 184], "don": 385, "dosovitskii": 173, "dot": [12, 13, 14, 19, 22, 174, 175, 209, 210, 211, 212, 213, 225, 299, 300, 315, 335, 343, 344, 345, 399, 404, 417, 448, 450, 461, 466], "down": [3, 357, 476], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 215, "drawn": [389, 390, 391, 393, 394, 474], "drop": [39, 40, 77, 232, 233, 307, 308, 309, 310, 311, 312, 313], "drop_block": [238, 239], "drop_path": [39, 40, 238, 239, 309], "drop_path_r": [60, 77, 159, 174, 175, 188, 189], "drop_prob": 309, "drop_rat": [77, 159, 174, 175, 188, 189], "dropblock": [232, 314, 317], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 85, 145, 152, 156, 159, 174, 175, 188, 189, 200, 216, 225, 231, 235, 236, 237, 299, 300, 307, 308, 311, 312, 313, 349, 351, 353], "dropout1d": [238, 239, 314, 317], "dropout1dmodel": 311, "dropout2d": [238, 239, 314, 317], "dropout3d": [238, 239, 314, 317], "dropout_p": [225, 300], "dropout_prob": 75, "dropout_r": 200, "dropoutmodel": 310, "droppath": [314, 317], "dtype": [206, 208, 265, 347, 382, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 445, 468], "due": [22, 24, 54, 101, 226, 227, 291, 474], "dummi": 155, "duplic": [10, 14, 209, 211], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 85, 112, 175, 206, 207, 208, 209, 210, 211, 212, 213, 222, 231, 232, 233, 234, 235, 236, 237, 249, 252, 268, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 355, 357, 359, 363, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 385, 395, 396, 429, 430, 431, 438, 444, 452, 458, 468, 471, 474, 478], "dy": [218, 290], "dynam": [0, 2, 3, 15, 30, 85, 140, 144, 207, 210, 211, 212, 213, 255, 256, 257, 276, 308, 335, 337, 338, 339, 359, 363, 364, 366, 372, 377, 382, 383], "dynamicnetwork": 210, "e": [0, 10, 15, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 159, 169, 188, 189, 206, 222, 276, 294, 295, 296, 299, 307, 323, 358, 371, 378, 379, 382, 395, 411, 424, 426, 427, 435, 441, 442, 448, 472], "each": [1, 2, 3, 4, 15, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 85, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 156, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 240, 242, 249, 252, 255, 256, 257, 265, 275, 276, 288, 291, 295, 299, 302, 303, 304, 305, 307, 310, 311, 312, 313, 318, 320, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 357, 359, 360, 361, 362, 363, 364, 365, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 447, 448, 450, 453, 454, 456, 458, 459, 461, 462, 466, 467, 468, 469, 470, 471, 472, 474, 476, 478], "earli": [30, 85, 377], "earlier": 93, "eas": 4, "easi": [2, 3, 4, 10, 124, 125, 126, 127, 128, 129, 208, 209, 211], "easier": [3, 209, 210, 213], "easili": [4, 93, 208, 212, 478], "eccv": 85, "economi": 27, "edg": [15, 92, 101, 181, 454], "edu": [5, 6], "educ": 154, "effect": [13, 85, 159, 161, 163, 165, 169, 173, 194, 198, 209, 210, 211, 212, 213, 222, 226, 227, 228, 230, 286, 287, 291, 294, 295, 297, 328, 329, 330, 332, 333, 334, 335, 355, 359, 360, 361, 366, 383, 384, 385, 450, 466], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 159, 164, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 190, 191, 192, 193, 195, 201, 204, 230, 272, 273, 274, 288, 289, 292, 315, 323, 357, 359, 360, 385], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "efficientnet_b0": 85, "efficientnet_b1": 85, "efficientnet_b2": 85, "efficientnet_b3": 85, "efficientnet_b4": 85, "efficientnet_b5": 85, "efficientnet_b6": 85, "efficientnet_b7": 85, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 85, "efficientnet_v2_l": 85, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 85, "efficientnetv2": 85, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 315, "einstein": [10, 12, 13, 14, 315], "either": [15, 242, 355, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 445, 453], "element": [0, 10, 12, 14, 24, 25, 75, 85, 208, 212, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 265, 269, 270, 271, 272, 273, 274, 275, 288, 289, 291, 295, 296, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 322, 323, 324, 325, 326, 335, 340, 341, 342, 343, 344, 345, 384, 387, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 449, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464], "elementwise_affin": 335, "elimin": [12, 14], "elsewher": [343, 344, 345, 411], "elu": [217, 239, 298, 317], "elumodel": 286, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 159, 161, 163, 165, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 200, 225, 239, 266, 299, 300, 317, 348, 349, 351, 352, 353], "embed_dim": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 299, 349, 350, 351, 352, 353], "embedding_dim": [200, 265, 347], "embedding_lay": 347, "embedding_matrix": 265, "emphas": [93, 100], "emploi": [30, 60, 101, 159, 161, 163, 165], "empti": [207, 213, 417, 447], "empty_lik": 417, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 22, 27, 59, 83, 85, 103, 140, 141, 142, 143, 154, 170, 171, 172, 173, 174, 175, 180, 184, 188, 190, 191, 199, 207, 208, 209, 210, 211, 212, 225, 233, 291, 299, 300, 302, 303, 304, 318, 320, 349, 351, 353, 357, 369, 382, 383, 385, 387, 389, 390, 391, 393, 395, 467], "encapsul": [15, 300, 357, 382, 395], "encod": [30, 85, 156, 159, 200, 323, 326, 349, 350, 351, 352, 353, 382], "encoder_lay": [352, 353], "encoderlay": 352, "encompass": 59, "encourag": [232, 308, 310, 311, 312, 313, 322, 323, 326, 373], "end": [23, 187, 215, 218, 219, 220, 233, 286, 288, 289, 290, 291, 293, 309, 324, 325, 326, 340, 341, 342, 343, 344, 345, 377, 379, 401, 402, 404, 407, 412, 418, 422, 429, 431, 433, 448, 452, 454, 463, 464, 478], "enforc": [12, 207, 209, 211, 315, 350, 351, 352, 353], "engin": [15, 24, 395], "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 85, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 161, 163, 165, 169, 170, 171, 172, 173, 179, 182, 189, 198, 209, 211, 276, 292, 363, 478], "enough": 15, "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 177, 197, 206, 207, 208, 209, 210, 211, 212, 213, 222, 225, 254, 255, 256, 257, 265, 269, 270, 271, 290, 295, 300, 307, 308, 309, 310, 311, 312, 313, 315, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 347, 357, 358, 359, 370, 371, 373, 374, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 405, 412, 430, 438, 444, 446, 447, 452, 454, 458, 463, 464, 468, 469, 470, 471, 472, 476, 478], "enter": 385, "entir": [3, 15, 233, 235, 236, 237, 309, 312, 313, 394], "entri": [60, 86, 96, 97, 452, 458, 460], "entropi": [243, 244, 322, 323], "environ": [15, 45, 47, 96, 97, 100, 395], "ep": [19, 181, 182, 183, 185, 186, 187, 232, 243, 244, 249, 250, 252, 253, 254, 269, 270, 271, 308, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 366, 371, 372, 373, 374, 375, 376, 377, 378], "epoch": [1, 3, 15, 359, 360, 361, 362, 363, 364, 365, 366, 367], "epsilon": [30, 250, 254, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 371, 372, 373, 374, 375, 376, 377, 378], "equal": [22, 267, 340, 341, 342, 412, 447, 459, 469, 471], "equat": [19, 24, 26], "equival": [400, 442, 455], "error": [0, 3, 10, 12, 14, 15, 19, 21, 60, 207, 210, 211, 212, 213, 216, 245, 247, 287, 309, 315, 322, 323, 324, 325, 357, 358, 385, 412, 446], "escap": 361, "especi": [3, 15, 209, 211, 212, 294, 384, 385, 392, 467, 468, 472, 478], "essenti": [1, 3, 16, 22, 24, 82, 227, 230, 357, 392, 394, 429, 467, 468, 472, 478], "estim": [325, 373, 374, 375, 376, 377, 378], "et": [74, 85, 159, 173, 349], "eta": 379, "eta_": [360, 361, 366, 379], "eta_0": [360, 362, 364, 365, 367], "eta_min": 360, "eta_t": [360, 361, 362, 364, 365, 366, 367], "etc": [10, 54, 60, 93, 103, 322, 355, 468], "euclidean": [23, 254], "european": 85, "eval": [15, 309, 395], "evalu": [207, 249, 252, 307, 308, 309, 310, 311, 312, 313, 328, 329, 330, 332, 333, 334, 395, 478], "evaluate_model": 366, "even": [371, 385, 407, 408, 411, 413, 414, 415, 416], "evenli": [255, 256, 257, 337, 338, 339, 407, 412, 447, 459], "everi": [1, 15, 362, 367, 478], "everywher": 433, "exact": [207, 210, 443, 472, 474], "exactli": 213, "exampl": [4, 15, 359, 400], "excel": [76, 100, 176, 177], "except": [0, 187, 433, 448, 450, 466], "exchang": 159, "excit": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 275], "exclud": [463, 464], "exclus": [390, 393, 407], "exdb": 8, "execut": [15, 210, 385, 395], "exist": [14, 26, 209, 211, 213, 386, 448], "exit": 385, "exp": [215, 220, 221, 223, 286, 293, 417], "exp_rang": 361, "expand": [4, 10, 14, 49, 85, 230, 446, 456, 462], "expans": [10, 12, 14, 53, 77, 93, 96, 97, 174, 175, 180, 181, 182, 183, 185, 186, 187], "expansion_factor": 92, "expect": [17, 210, 213, 233, 299, 307, 309, 310, 311, 312, 313, 335, 349, 350, 351, 352, 353, 357], "expens": 3, "experi": [15, 93, 392, 394, 478], "experiment": [15, 394], "explan": [22, 24, 28, 39, 145, 152, 255, 256, 257, 337, 338, 339, 370], "explicit": [12, 13, 14, 213, 315], "explicitli": [14, 15, 85, 209, 211, 395], "explod": [293, 328, 329, 330], "explor": [15, 99, 357, 394], "expon": [22, 254, 405], "exponenti": [215, 220, 222, 286, 293, 295, 307, 362, 364, 373, 374, 375, 376, 377, 426], "exponentiallr": [359, 368], "expos": 15, "express": [10, 12, 14, 42, 176], "extend": [4, 85, 103, 123, 140, 159, 189, 196, 305], "extens": [85, 369], "extern": 4, "extra": [53, 72, 101, 196, 446], "extract": [30, 73, 79, 82, 85, 112, 123, 140, 150, 154, 161, 163, 165, 170, 171, 172, 173, 175, 176, 179, 195, 196, 197, 199, 230, 304, 305, 340, 342, 382, 386, 408, 429, 431, 463, 464, 469, 471], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 85, 113, 195, 202], "ey": 417, "f": [1, 4, 5, 6, 7, 8, 15, 85, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 292, 295, 349, 351, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367], "f_1": 275, "f_2": 275, "facilit": [10, 13, 73, 209, 213, 222, 295, 302, 303, 304, 357, 369, 470, 478], "factor": [59, 75, 93, 174, 215, 225, 226, 227, 228, 230, 275, 284, 285, 299, 300, 355, 359, 361, 362, 364, 365, 366, 367, 370, 377, 378, 379, 380], "factori": 151, "failur": [209, 210, 211, 212, 357], "faithfulli": 15, "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 159, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 206, 207, 208, 225, 231, 233, 234, 235, 236, 237, 249, 252, 267, 278, 280, 281, 282, 283, 284, 285, 299, 300, 302, 303, 304, 309, 318, 320, 349, 350, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 373, 374, 378, 383, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 429, 430, 431, 438, 444, 445, 452, 468], "famili": [53, 85, 93, 182, 186, 187, 196, 386], "fan": [173, 280, 281, 284, 285], "fan_in": [280, 281], "fan_out": [280, 281], "fashion": [7, 161, 163, 165], "fashion_train": 7, "fashionmnist": 9, "fast": 377, "faster": [85, 175, 359, 372, 376, 385], "fc": [15, 82, 112, 123, 130, 140, 210, 275, 303, 304, 340, 341, 342, 343, 344, 345], "fc1": [15, 88, 89, 155, 209, 213, 287, 288, 289, 291, 292, 293, 294, 296, 297, 320], "fc2": [15, 88, 89, 155, 209, 213, 287, 288, 289, 291, 293, 294, 296, 297, 320], "fc3": 89, "featur": [3, 15, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 85, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 187, 195, 196, 197, 199, 232, 240, 242, 249, 250, 269, 270, 271, 275, 276, 304, 308, 310, 311, 312, 313, 318, 320, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 357, 372], "feature_extractor": 86, "fed": [3, 478], "feed": [3, 478], "feedforward": [155, 156, 200, 349, 351, 353], "femto": [47, 85], "fergu": [85, 152], "fetch": 0, "few": 155, "fewer": [1, 85, 104, 105, 106, 107, 108, 109, 184, 446], "field": [5, 6, 8, 85, 140, 144, 184, 276], "file": [3, 386], "fill": [278, 282, 283, 389, 390, 391, 393, 413, 414, 415, 416], "filter": [60, 85, 93, 152, 226, 227, 228, 230, 269, 270, 271, 303, 304], "filter_height": 230, "filter_s": 230, "filter_width": 230, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 159, 200, 209, 210, 211, 212, 213, 225, 276, 299, 349, 350, 352, 395, 467, 478], "find": [26, 429, 431], "fine": [99, 102, 159, 173, 275, 478], "finer": 175, "finest": 176, "finish": 385, "first": [5, 6, 7, 8, 19, 86, 152, 155, 188, 189, 190, 191, 210, 211, 240, 275, 318, 359, 373, 374, 375, 376, 377, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 439, 447, 453, 466, 467, 468, 478], "fit": [14, 357], "fix": [173, 184, 188, 210, 362, 365, 367, 395, 454], "flag": 15, "flat": [173, 188], "flatten": [12, 82, 86, 213, 230, 305, 404, 451, 455, 456, 458], "flexibl": [1, 3, 4, 10, 12, 14, 40, 73, 82, 83, 84, 85, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 209, 210, 211, 212, 213, 315, 355, 357, 364, 369, 395, 413, 414, 468, 478], "flexibli": 13, "flip": [473, 475, 478], "float": [2, 5, 6, 7, 8, 19, 24, 39, 40, 59, 60, 75, 77, 90, 94, 156, 159, 174, 175, 176, 177, 178, 179, 180, 188, 189, 200, 206, 208, 215, 218, 225, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 249, 250, 252, 253, 254, 265, 268, 269, 270, 271, 278, 282, 283, 284, 285, 286, 290, 299, 300, 307, 308, 309, 310, 311, 312, 313, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 347, 349, 351, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 387, 393, 395, 407, 408, 409, 410, 411, 412, 413, 415, 422, 445, 452, 468, 470, 472, 473, 474, 475], "float32": [206, 208, 382, 395, 407, 408, 411, 413, 415, 445, 468], "float64": [382, 416, 445, 468], "floor": 367, "flop": [85, 173], "flow": [30, 76, 82, 85, 130, 213, 232, 285, 287, 294, 297, 302, 303, 304, 318, 320, 383, 452], "fluctuat": 361, "fly": [2, 3], "fname": 3, "focu": 30, "follow": [0, 12, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 215, 216, 218, 219, 220, 221, 222, 223, 225, 240, 242, 267, 269, 270, 271, 272, 273, 274, 275, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 307, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 357, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 386, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 429, 431, 439, 446, 453, 457, 469, 470, 471, 472, 473, 474, 475, 478], "foral": [350, 352], "forc": [15, 232], "form": [15, 25, 159, 276, 350, 352, 404, 453, 456, 462, 478], "format": [2, 3, 5, 6, 7, 8, 155, 323, 326, 468], "formul": [216, 254], "formula": [19, 27, 222, 255, 256, 257, 295, 296, 324, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 400, 444, 472], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 159, 206, 207, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "foundat": [15, 82, 93, 130, 207, 357, 369], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 181, 182, 183, 185, 186, 187, 454], "frac": [13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 159, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 240, 242, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 351, 353, 360, 371, 372, 373, 374, 375, 376, 377, 378, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 470], "frame": 237, "framework": [4, 10, 15, 154, 323, 326, 328, 329, 330, 332, 333, 334, 358, 369, 478], "free": [15, 382], "frequent": [323, 326], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 159, 175, 206, 207, 208, 209, 210, 211, 212, 213, 230, 232, 240, 249, 252, 265, 267, 269, 270, 271, 275, 276, 278, 280, 281, 282, 283, 284, 285, 292, 299, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 400, 401, 402, 406, 408, 429, 430, 431, 438, 444, 448, 450, 453, 456, 459, 460, 461, 462, 466, 469, 470, 471, 472, 473, 474, 475, 478], "fu": 173, "full": [15, 27, 94, 96, 97, 156, 200], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 242, 275, 276, 320, 394, 395], "func": 386, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 169, 207, 209, 210, 211, 212, 213, 269, 270, 271, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 308, 310, 311, 312, 313, 315, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 349, 351, 353, 357, 360, 361, 363, 364, 367, 369, 394, 467, 478], "fundament": [225, 242, 320, 395, 468], "further": [13, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 197, 394, 430, 438, 444], "fuse": [30, 140, 173], "fusion": [141, 142, 143, 159], "futur": [225, 300, 319, 352, 353], "g": [0, 10, 15, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 103, 145, 154, 159, 169, 173, 188, 189, 275, 276, 307, 358, 371, 378, 382, 395, 448, 472], "g_": 372, "g_t": 378, "gain": [284, 285], "gamma": [250, 328, 329, 330, 331, 332, 333, 334, 335, 359, 361, 362, 363, 365, 367], "gamma_c": [250, 331], "gap": [112, 123, 140, 275], "gaussian": [216, 287], "gelu": [169, 217, 239, 298, 317], "gelunetwork": 287, "gener": [15, 24, 41, 46, 50, 155, 156, 233, 268, 305, 307, 308, 310, 311, 312, 313, 333, 349, 374, 376, 377, 385, 387, 389, 390, 391, 392, 393, 394, 399, 407, 409, 410, 412, 453, 471, 472, 473, 475, 478], "geoffrei": [5, 6], "geq": 463, "get": [5, 6, 7, 8], "get_lr": [360, 361, 362, 363, 364, 365, 366, 367], "git": 15, "github": [7, 15], "give": [370, 378], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 230, 254, 265, 299, 300, 305, 315, 322, 323, 326, 358, 382, 383, 387, 414, 416, 452, 459, 467, 472, 473, 475, 478], "global": [0, 59, 85, 112, 123, 130, 140, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 176, 179, 180, 184, 188, 190, 191, 192, 193, 195, 196, 197, 250, 275, 331, 383, 385, 392, 394], "global_response_norm": [239, 251], "globalresponsenorm": [317, 336], "go": [10, 74, 85], "goal": [322, 323, 326], "googlenet": [74, 85], "gpu": [85, 206, 208, 382, 387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "grad": [15, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 230, 233, 240, 242, 267, 272, 273, 274, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 358, 369, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 473, 475, 476], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 85, 206, 208, 305, 308, 357, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 445, 468], "gradual": [359, 360, 362], "grain": [159, 173, 275], "graph": [15, 285, 395, 407, 408, 411, 413, 414, 415, 416, 468], "grayscal": [7, 8, 86, 87, 88, 89, 472, 478], "great": 179, "greater": [49, 178, 422, 447], "green": 472, "grid": [154, 453], "grn": 331, "groundbreak": 85, "group": [85, 93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 210, 226, 227, 228, 269, 270, 271, 276, 302, 303, 304, 358, 359, 369], "group1": 210, "group2": 210, "groupedconvblock": 123, "grow": 15, "growth_rat": [54, 55, 56, 57, 58], "guarante": 392, "h": [10, 12, 13, 14, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 202, 225, 227, 228, 230, 232, 236, 237, 250, 256, 257, 259, 260, 263, 264, 267, 268, 270, 271, 275, 299, 300, 315, 329, 330, 331, 333, 334, 338, 339, 342, 345, 349, 351, 353, 469, 471], "h_": [227, 228, 256, 257, 259, 260, 263, 264, 267, 303, 304, 305, 338, 339, 341, 342, 344, 345], "h_out": [227, 228, 259, 260, 263, 264], "h_stack": 450, "ha": [0, 19, 41, 155, 159, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 213, 226, 227, 228, 269, 270, 271, 292, 296, 322, 323, 328, 329, 330, 332, 333, 334, 335, 355, 358, 369, 395, 400, 442, 446, 448, 450, 461, 466, 472], "hackabl": 15, "haip": 173, "half": [361, 436], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 173, 195, 207, 209, 210, 211, 212, 213, 265, 323, 326, 357, 369, 382, 385], "handwritten": [7, 8, 89], "hang": 85, "hard": [96, 97, 289], "hard_sigmoid": 288, "hardsigmoid": [289, 298, 317], "hardswish": [298, 317], "hashabl": 395, "hat": [30, 373, 374, 375, 376, 377], "have": [0, 1, 15, 18, 19, 21, 24, 25, 27, 208, 210, 212, 213, 227, 228, 232, 254, 265, 285, 347, 357, 411, 413, 414, 415, 416, 429, 431, 448, 450, 452, 453, 460, 461, 466, 470, 476], "he": 85, "head": [30, 39, 77, 92, 150, 156, 159, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 225, 299, 300, 349, 351, 353], "head_dim": 159, "head_fn": 77, "heart": 15, "height": [30, 150, 227, 228, 230, 236, 237, 250, 256, 257, 259, 260, 263, 264, 267, 268, 276, 303, 304, 305, 329, 330, 331, 333, 334, 338, 339, 341, 342, 344, 345, 355, 469, 471, 476], "help": [30, 75, 161, 163, 165, 169, 218, 220, 237, 265, 286, 290, 292, 293, 297, 328, 329, 330, 340, 341, 343, 344, 347, 359, 361, 366, 367, 370, 373, 374, 376, 383, 384, 385, 439], "henc": 457, "here": [3, 17, 207, 240, 357, 369, 384, 385, 394, 467, 468, 478], "hidden": [28, 152, 156, 159, 176, 177, 178, 179, 188, 189, 200, 210], "hidden_s": 210, "hierarch": [39, 40, 85, 161, 163, 165, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 189, 210, 213, 357], "hierarchi": 303, "hierarchicalnetwork": 210, "high": [42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 172, 175, 177, 185, 186, 187, 195, 196, 197, 202, 203, 359, 390, 393], "higher": [49, 60, 90, 98, 123, 195, 323, 326, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 399, 400, 404, 426, 439], "highest": [53, 101, 390], "highli": [15, 30, 45, 53, 85, 95, 173, 176, 194, 364], "highlight": [275, 343, 344, 345], "hinton": [5, 6], "histor": 372, "histori": [387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 413, 414, 415, 416], "hold": [93, 209, 210, 211, 212], "horizont": [450, 461, 473, 478], "hot": [323, 326], "how": [2, 3, 12, 14, 136, 137, 138, 139, 144, 176, 210, 213, 315, 357, 478], "howard": 85, "howev": [206, 285], "hstack": 451, "html": [5, 6], "http": [5, 6, 7, 8, 15], "hu": [85, 275], "huang": 85, "huber": [245, 324], "huber_loss": [239, 246], "huberloss": [317, 327], "huberregressionmodel": 324, "hue": 478, "huge": [48, 85, 173, 176], "hybrid": [85, 101, 102, 169, 173], "hyperbol": [223, 297, 424, 435, 441], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 174, 358, 370], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "i_1": [12, 13, 14, 315], "i_2": [12, 13, 14, 315], "i_k": 14, "i_m": [12, 14, 315], "iccv": 85, "iclr": 173, "idea": 85, "ideal": [42, 46, 50, 90, 93, 102, 176, 213], "ident": [21, 22, 77, 85, 268, 309, 317, 321, 392, 394, 411, 457], "identifi": 211, "idx": [2, 3], "ieee": [85, 173, 275], "ignor": [349, 350, 351, 352, 353], "ii": 442, "ij": [30, 222, 267, 295, 398, 399, 400, 404, 453, 463, 464], "ik": [398, 399, 400], "ill": [18, 24], "ilsvrc": 85, "imagimage_dir": 3, "image_path": 3, "image_s": [200, 201, 202, 203, 204, 205], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144], "imbal": [323, 326], "img_siz": [30, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "impact": [85, 376], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 85, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 156, 169, 173, 174, 175, 188, 200, 207, 230, 233, 272, 273, 274, 276, 299, 300, 305, 309, 331, 351, 353, 358, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 450, 466, 472], "impli": [302, 303], "implicit": 305, "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "improp": [10, 210, 213, 394], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 85, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 158, 161, 163, 165, 169, 171, 173, 175, 182, 184, 188, 189, 196, 197, 199, 232, 233, 249, 265, 268, 275, 287, 293, 297, 315, 347, 359, 360, 361, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 471, 474, 478], "imread": 3, "in1_featur": [240, 318], "in2_featur": [240, 318], "in_channel": [30, 112, 159, 169, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 210, 213, 269, 270, 271, 272, 273, 274, 275, 276, 302, 303, 304, 329, 330, 340, 341, 342, 343, 344, 345, 357], "in_featur": [209, 210, 213, 242, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 303, 304, 307, 310, 311, 318, 320, 322, 323, 324, 325, 326, 328, 332, 335, 340, 341, 342, 343, 344, 345], "incept": [74, 75, 76, 77, 82, 83, 84], "inception_next": 77, "inception_next_atto": 85, "inception_next_bas": 85, "inception_next_smal": 85, "inception_next_tini": 85, "inception_resnet_v1": 85, "inception_resnet_v2": 85, "inception_v1": 85, "inception_v3": 85, "inception_v4": 85, "inceptionnext": [78, 79, 80, 81], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 208, 210, 212, 213, 267, 269, 270, 271, 272, 273, 274, 351, 353, 355, 357, 358, 363, 369, 376, 394, 400, 454, 463, 464], "inclus": [208, 211, 390, 393, 412], "incom": [242, 320], "incompat": 446, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 85, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 196, 198, 287], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 176, 177, 179, 182, 187, 226, 227, 228, 230, 268, 361, 366, 372, 379, 384, 450, 466, 472, 473, 475, 478], "independ": [159, 210, 226, 227, 228, 299, 307, 310, 311, 312, 313, 335, 400, 410, 470, 472, 474, 476], "index": [0, 2, 5, 6, 7, 8, 10, 12, 250, 265, 315, 331, 347, 360, 361, 362, 363, 364, 365, 367, 384, 395, 407, 408, 411, 453, 457], "indexerror": 0, "indic": [0, 1, 13, 14, 15, 110, 111, 145, 155, 170, 171, 172, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 210, 212, 213, 244, 248, 265, 323, 326, 340, 347, 349, 350, 351, 352, 353, 365, 382, 383, 395, 469, 471], "individu": [3, 210, 213, 324, 335, 369, 372, 379], "induc": [220, 293], "induct": [161, 163, 165, 169, 173], "inf": 440, "infer": [136, 137, 138, 139, 144, 175, 210, 213, 382, 385], "infin": [25, 27, 375], "inform": [30, 85, 155, 159, 173, 176, 190, 191, 192, 193, 198, 206, 275, 363, 369, 371, 385], "infti": [23, 377], "inherit": [1, 370, 378, 380], "init": 279, "initi": [1, 15, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 194, 195, 196, 197, 206, 208, 209, 210, 211, 212, 213, 276, 278, 280, 281, 282, 283, 284, 285, 299, 302, 303, 304, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 335, 347, 351, 353, 355, 357, 358, 360, 362, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 389, 392, 393, 394, 407, 411, 412, 413, 414, 415, 416, 445], "initial_accumulator_valu": 372, "inner": [398, 417], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 155, 159, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 394, 395, 396, 398, 399, 400, 404, 408, 410, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "input1": 318, "input2": 318, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 331, 337, 338, 339, 347, 447, 463, 464], "input_1": 240, "input_2": 240, "input_data": [286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 310, 311, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345], "input_indic": [265, 347], "input_s": [210, 212, 295, 323, 326], "input_shap": 155, "input_tensor": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 159, 206, 209, 210, 211, 212, 213, 222, 232, 233, 254, 272, 273, 274, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 355, 357, 469, 470, 471, 472, 473, 474, 475, 476], "insid": [3, 383, 385], "insight": 85, "inspect": [15, 207, 208, 213, 358], "inspir": [10, 12, 14, 15, 39, 85], "instabl": [24, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "instanc": [0, 1, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 252, 292, 332, 333, 334, 335, 349, 350, 352, 358, 382, 386, 445, 456, 462, 478], "instance_norm": [239, 251, 332, 333, 334], "instancenorm1d": [317, 336], "instancenorm1dmodel": 332, "instancenorm2d": [317, 336], "instancenorm3d": [317, 336], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 386], "instead": [155, 161, 163, 165, 209, 210, 211, 212, 213, 280, 281, 284, 285, 347, 349, 351, 353, 373, 374, 375, 385, 409, 410], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 222, 225, 226, 227, 228, 230, 232, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 282, 283, 284, 285, 295, 299, 300, 302, 303, 304, 305, 308, 315, 318, 320, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 373, 374, 375, 376, 377, 379, 382, 386, 387, 389, 390, 391, 392, 393, 395, 407, 408, 409, 410, 411, 412, 413, 415, 422, 429, 430, 431, 438, 439, 443, 444, 445, 446, 447, 448, 449, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 476], "int32": 347, "int64": [382, 395], "integ": [1, 3, 22, 130, 145, 226, 227, 228, 256, 257, 299, 302, 303, 304, 305, 335, 338, 339, 341, 342, 343, 344, 345, 390, 391, 393, 394, 409, 413, 415, 430, 438, 443, 444, 454, 456, 457, 459, 462], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 15, 16, 85, 101, 103, 156, 159, 169, 170, 171, 172, 208, 210, 212, 213, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 315, 318, 320, 340, 341, 342, 343, 344, 345, 395], "intellig": [85, 275], "intend": [10, 177, 206, 211, 212], "intens": [24, 54, 113, 470, 472], "interact": [188, 240, 318, 357, 394], "interdepend": 85, "interfac": [2, 15, 207, 210, 369], "interfer": [383, 385], "intermedi": [24, 110, 111, 176, 275, 349, 351, 353, 395], "intern": [15, 85, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 173, 209, 210, 211, 212, 213, 323, 326, 357, 469, 470, 471, 472, 473, 474, 475, 476], "interpol": [239, 266, 355, 412, 476], "interpret": [10, 85, 222, 295, 448], "interv": [365, 367, 389, 393, 407], "introduc": [40, 60, 74, 75, 85, 90, 91, 92, 123, 161, 163, 165, 169, 173, 174, 175, 183, 199, 219, 275, 287, 291, 292, 294, 297, 307, 310, 311, 312, 313, 349, 471, 474, 478], "introspect": [15, 213], "intuit": [10, 12, 15, 209, 211, 357, 478], "inv": 20, "inv_a": 21, "invari": [341, 344], "invers": [18, 21, 22, 24, 361, 372, 419, 420, 421], "invert": [18, 21, 22, 26, 85, 91, 92, 95], "invit": 15, "invok": 386, "involv": [12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 140, 215, 216, 218, 219, 220, 221, 223, 240, 242, 267, 302, 303, 304, 315, 318, 320, 387, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 416, 426, 427, 428, 429, 431, 434, 436, 453, 454, 456, 462], "is_all_fre": 395, "is_bit_fre": 382, "is_caus": [225, 300, 352, 353], "is_fre": 395, "is_leaf": 395, "isn": 15, "issu": [3, 15, 293, 328, 329, 330, 373, 374], "item": [7, 15, 325], "iter": [0, 1, 2, 3, 206, 207, 210, 212, 350, 352, 358, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 407], "ith": [222, 295], "its": [4, 15, 22, 24, 28, 40, 85, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 155, 175, 206, 209, 210, 211, 212, 226, 227, 228, 230, 268, 276, 285, 287, 291, 296, 308, 343, 344, 345, 357, 358, 371, 379, 383, 384, 385, 386, 407, 409, 410, 415, 429, 431, 445, 446, 457, 459, 470, 473, 475, 478], "itself": [17, 22, 209, 210, 211, 212, 359], "j": [8, 10, 12, 13, 14, 30, 222, 265, 275, 295, 315, 328, 329, 330, 332, 333, 334, 340, 341, 343, 344, 347, 453, 461, 463, 464, 469, 471], "j_1": [12, 14, 315], "j_2": [12, 14, 315], "j_k": 14, "j_n": [12, 14, 315], "jie": 85, "jk": 399, "join": [3, 448], "json": 386, "k": [22, 30, 85, 159, 175, 225, 226, 299, 300, 302, 323, 329, 330, 333, 334, 340, 343, 344, 353, 398, 399, 408, 411, 448, 459], "k_2": 159, "k_d": [228, 304, 342, 345], "k_h": [227, 228, 303, 304, 305, 341, 342, 345], "k_i": 299, "k_j": 30, "k_w": [227, 228, 303, 304, 305, 341, 342, 345], "kaim": [85, 280, 281, 284, 285], "kaiming_norm": 279, "kaiming_uniform": 279, "kalenichenko": 85, "karen": 85, "kashif": 7, "kdim": 299, "keep": [207, 233, 291, 371, 385, 457, 463, 464], "keep_grad": [208, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 445, 468], "keep_var": 207, "keepdim": [23, 429, 430, 431, 438, 444], "kei": [15, 93, 154, 159, 169, 174, 180, 181, 182, 183, 185, 186, 187, 188, 189, 207, 209, 211, 213, 225, 299, 300, 353, 358], "kept": [430, 438, 444], "kernel": [85, 86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 226, 227, 228, 230, 255, 256, 257, 258, 259, 260, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 305, 337, 338, 339, 341, 342, 345], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 210, 213, 258, 259, 260, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 305, 315, 329, 330, 340, 341, 342, 343, 344, 345], "keyerror": 207, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 207, 319], "kj": [398, 400], "known": 85, "kriz": [5, 6], "krizhevski": [5, 6, 85], "kroneck": [12, 222, 295, 315], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 319, 386], "l": [17, 24, 69, 85, 173, 203, 225, 226, 235, 255, 258, 262, 269, 275, 300, 305, 307, 310, 311, 312, 313, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 352, 353, 439, 446], "l1": 254, "l2": [254, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "l_": [173, 226, 255, 258, 262, 302, 337, 340, 343, 349], "l_k": 299, "l_m": [350, 351], "l_out": [226, 258, 262], "l_q": 299, "l_t": [349, 350, 351], "l_v": 299, "label": [4, 5, 6, 7, 8, 75, 322, 323, 326], "lambd": 370, "lambda": [19, 220, 293, 364, 370, 374], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 364, "lambda_i": 19, "lambda_n": 19, "lambdalr": 368, "languag": [4, 302, 318, 340, 343, 349], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 85, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 161, 163, 165, 173, 176, 177, 187, 191, 195, 196, 197, 201, 202, 203, 272, 273, 274, 292, 324, 357, 370, 373, 374, 375, 378, 379, 380, 385], "larger": [41, 59, 60, 112, 140, 158, 159, 162, 171, 172, 196, 209, 211, 226, 227, 228, 230, 232, 308, 370, 401, 447, 454, 469, 471, 476], "largest": [53, 176, 187, 195, 429], "last": [1, 222, 253, 295, 360, 361, 362, 363, 364, 365, 367, 399, 400, 447, 448, 473, 475], "last_channel": 92, "last_epoch": [360, 361, 362, 363, 364, 365, 367], "last_lr": [359, 360, 361, 362, 363, 364, 365, 366, 367], "later": [30, 85], "latest": [4, 15], "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 195, 196, 200, 207, 209, 210, 213, 222, 233, 242, 249, 252, 253, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 295, 300, 302, 303, 304, 309, 318, 319, 320, 326, 335, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 357, 394, 454, 468], "layer1": 386, "layer2": 386, "layer_group": 210, "layer_norm": [239, 251, 335], "layer_norm_ep": [349, 351, 353], "layer_scale_init": 39, "layer_sequ": [210, 213], "layernorm": [159, 169, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 317, 336, 349, 350, 351, 352, 353], "layernormmodel": 335, "le": 85, "lead": [10, 15, 210, 213, 254, 287, 332, 333, 334, 335, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 394, 446], "leaf": 395, "leaki": [218, 290], "leaky_relu": [217, 239, 290], "leakyrelu": [298, 317], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 85, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 173, 176, 180, 209, 210, 211, 212, 219, 222, 275, 286, 290, 291, 295, 302, 303, 304, 310, 311, 312, 313, 315, 318, 320, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 392, 412, 459, 463, 464, 467, 468, 478], "learnabl": [30, 159, 188, 189, 206, 207, 208, 249, 250, 252, 253, 269, 270, 271, 299, 302, 303, 304, 318, 320, 328, 329, 330, 331, 332, 333, 334, 335, 353, 357], "least": [24, 25, 27, 355, 442, 463, 464], "lecun": [8, 85], "left": [22, 23, 24, 27, 30, 159, 216, 222, 254, 287, 295, 299, 305, 322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 343, 344, 345, 351, 353, 439, 469, 471], "leftarrow": 376, "len": [0, 1, 2, 3, 453], "lenet": [87, 88, 89], "lenet_1": 85, "lenet_4": 85, "lenet_5": 85, "length": [159, 210, 225, 226, 235, 255, 258, 262, 302, 319, 328, 332, 337, 340, 343, 352, 353, 454, 470], "leq": [288, 289, 324, 365, 377, 405, 422, 464], "lerp": 267, "less": [0, 215, 218, 245, 286, 290, 323, 324, 326, 412, 422], "let": 19, "level": [82, 176, 177, 178, 179, 305], "leverag": [12, 13, 14, 15, 26, 30, 76, 77, 84, 85, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 181, 184, 190, 191, 192, 193, 194, 195, 276, 357], "lfloor": [305, 367], "li": [85, 184], "librari": [3, 10, 15, 16, 207, 357, 358, 369, 386, 394, 395, 478], "lie": 387, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 164, 180, 184, 192, 193, 199, 205, 276, 289, 292], "like": [12, 13, 14, 15, 60, 82, 85, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 161, 163, 165, 173, 197, 206, 207, 210, 213, 226, 232, 284, 285, 293, 307, 308, 315, 328, 329, 330, 332, 333, 334, 383, 384, 445, 468, 478], "likelihood": [248, 323, 326], "limit": [44, 51, 96, 97, 98, 100, 155, 292, 371, 422], "linalg": 20, "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "line": 15, "linear": [15, 16, 17, 24, 25, 26, 77, 85, 91, 95, 130, 155, 173, 175, 181, 182, 183, 184, 185, 186, 187, 209, 210, 211, 213, 215, 216, 218, 219, 220, 233, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 304, 305, 307, 309, 310, 311, 318, 319, 322, 323, 324, 325, 326, 328, 332, 335, 340, 341, 342, 343, 344, 345, 349, 351, 353, 359, 386, 411], "linearli": 324, "linspac": 417, "linspace_tensor": 412, "list": [0, 1, 15, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 159, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 208, 209, 210, 211, 212, 253, 276, 319, 335, 358, 360, 361, 362, 363, 364, 365, 366, 367, 387, 389, 390, 391, 393, 395, 408, 409, 410, 413, 414, 415, 416, 443, 446, 457, 459, 460, 465, 467], "listdir": 3, "liter": [13, 112, 206, 208, 243, 244, 245, 247, 248, 267, 269, 270, 271, 272, 273, 274, 276, 280, 281, 302, 303, 304, 322, 323, 324, 325, 326, 355, 361, 366, 382, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 453], "liu": [85, 173], "ln": 405, "load": [3, 4, 5, 6, 7, 8, 206, 207, 208, 358, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386], "load_state_dict": [207, 358, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "loader": [1, 2, 3], "local": [15, 30, 85, 161, 163, 165, 169, 170, 171, 172, 173, 174, 176, 179, 188, 189, 190, 191, 192, 193, 230, 302, 305, 361], "locat": [85, 267], "log": [189, 248, 322, 323, 326, 360, 361, 362, 363, 364, 365, 366, 367, 417, 428], "log2": 417, "log_2": 428, "log_softmax": 326, "logarithm": [405, 426, 427, 428], "logic": [3, 337, 338, 339, 357, 358], "logit": [28, 39, 152, 222, 295, 323], "logsoftmax": [323, 326], "long": [30, 154, 173, 177, 376, 443], "lookup": [265, 347], "loop": [1, 12, 13, 14, 15, 210, 315, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "loss": [15, 24, 209, 210, 211, 212, 213, 222, 243, 244, 245, 247, 248, 286, 287, 290, 291, 293, 294, 295, 297, 307, 310, 311, 312, 313, 319, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "low": [82, 91, 96, 97, 100, 390, 393], "lower": [17, 90, 283, 305, 350, 351, 352, 353, 361, 370, 378, 379, 380, 393, 463, 464], "lower_triangular": 463, "lowest": 390, "lp": 254, "lr": [15, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "lr_lambda": 364, "lr_schedul": 368, "lrschedul": 368, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 388, 417, 451, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "m": [70, 85, 145, 173, 209, 210, 213, 299, 341, 342, 344, 345, 349, 350, 353, 365, 373, 374, 375, 376, 377, 411, 463, 464], "m1": 15, "m2": 15, "m3": 15, "m_": [373, 374, 375, 376, 377, 463, 464], "m_m": 351, "m_t": [351, 376, 377], "maaten": 85, "mac": 15, "machin": [3, 7, 8, 24, 85, 156, 275, 349, 373, 384, 392], "magnitud": [233, 265, 347, 378, 379, 478], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 210, 212, 254, 268, 309, 315, 324, 359, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 385, 394, 447, 472, 478], "main": [25, 82, 210, 408, 411, 463, 464], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 85, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 159, 168, 170, 171, 172, 178, 179, 180, 182, 183, 184, 185, 189, 206, 207, 209, 210, 211, 213, 220, 233, 280, 281, 284, 285, 286, 287, 293, 307, 309, 310, 311, 312, 313, 328, 329, 330, 332, 333, 334, 373, 378, 469, 472, 476], "major": 15, "make": [1, 3, 10, 30, 42, 43, 46, 47, 73, 82, 85, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 173, 176, 185, 190, 191, 192, 193, 194, 198, 199, 201, 204, 210, 213, 294, 323, 324, 335, 341, 344, 357, 372, 373, 374, 375, 384, 386, 394, 400, 453, 459, 467, 478], "manag": [207, 209, 210, 211, 212, 213, 357, 369, 383, 385, 386, 394], "manhattan": 23, "mani": 155, "manipul": [10, 12, 209, 211, 478], "manner": [10, 12, 13, 188, 210, 213, 382], "manual": [10, 243, 244, 248, 305, 322, 323, 326, 385], "map": [12, 14, 77, 85, 110, 111, 112, 123, 133, 140, 207, 221, 223, 232, 250, 275, 294, 297, 309, 315, 331, 347, 447], "mark": 452, "marri": 85, "mask": [85, 206, 225, 299, 300, 307, 310, 311, 312, 313, 349, 350, 351, 352, 353, 452, 463, 464], "masked_fil": 451, "match": [10, 14, 15, 26, 159, 207, 210, 213, 225, 243, 245, 247, 253, 269, 270, 271, 308, 347, 358, 426, 446, 456, 457, 459, 462, 465, 470, 478], "math": [299, 423, 434, 440], "mathbb": [299, 459], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 240, 242, 267, 272, 273, 274, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 303, 304, 307, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 398, 399, 400, 404, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 450, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476], "mathcal": [280, 282, 284, 307, 310, 311, 312, 313, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335], "mathemat": [15, 21, 269, 270, 271, 471, 473, 474, 475], "mathrm": 24, "matmul": [305, 417], "matric": [16, 18, 19, 21, 24, 26, 27, 299, 353, 398, 399, 400, 411, 453, 463, 464], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 230, 240, 265, 305, 319, 320, 347, 357, 398, 439, 453], "matrix_pow": 20, "matthew": 85, "max": [10, 23, 130, 145, 219, 254, 262, 263, 264, 265, 288, 289, 291, 292, 343, 344, 345, 347, 360, 361, 366, 375, 401, 417, 422], "max_lr": 361, "max_norm": [265, 347], "max_pool": [343, 344, 345], "max_pool1d": [239, 261], "max_pool2d": [239, 261], "max_pool3d": [239, 261], "max_valu": 422, "maxim": [3, 48, 101], "maximum": [23, 291, 292, 343, 344, 345, 360, 361, 373, 375, 417, 422, 429, 474], "maxpool": [28, 152], "maxpool1d": [317, 346], "maxpool1dmodel": 343, "maxpool2d": [210, 213, 303, 317, 346], "maxpool2dmodel": 344, "maxpool3d": [304, 317, 346], "maxpool3dmodel": 345, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 206, 220, 226, 227, 228, 231, 243, 244, 245, 247, 248, 249, 252, 269, 270, 271, 282, 286, 287, 288, 290, 291, 293, 294, 297, 304, 307, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 366, 373, 374, 375, 376, 377, 378, 383, 391, 417, 422, 426, 427, 428, 429, 431, 434, 436, 438, 442, 443, 444, 467, 470, 478], "meaning": [13, 213], "measur": [322, 323, 325, 326], "mechan": [30, 110, 111, 130, 140, 144, 154, 156, 159, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 189, 190, 191, 192, 193, 194, 197, 198, 200, 212, 240, 299, 447], "media": 173, "medium": [47, 51, 70, 85, 98, 99, 102, 160, 173, 178], "meet": 85, "mem_is_caus": [350, 351], "mem_key_padding_mask": [349, 350, 351], "mem_mask": [349, 350, 351], "membership": 322, "memori": [2, 3, 15, 54, 184, 349, 350, 351, 385, 409, 410], "merg": [12, 315], "meshgrid": 451, "metal": [382, 395], "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 209, 210, 211, 212, 213, 243, 244, 245, 247, 248, 280, 281, 284, 285, 322, 323, 324, 325, 326, 355, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 394], "metric": 366, "mha": 299, "mid": [80, 204], "mid_channel": [96, 97], "middl": 384, "might": 357, "migrat": 15, "mileston": 365, "min": [288, 289, 292, 360, 361, 366, 402, 417, 422], "min_lr": 366, "min_valu": 422, "mind": [0, 3, 210, 213, 385], "mingx": 85, "mini": 1, "minim": [4, 78, 85, 92, 213, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 369], "minima": 361, "minimalist": 15, "minimum": [360, 361, 366, 417, 422, 431], "minu": 294, "mirror": [414, 416], "mismatch": [10, 12, 14, 60, 207, 315, 357, 358], "miss": [207, 357], "mitig": [218, 286, 290, 293, 328, 329, 330], "mix": 77, "mixer": 77, "mlp": [15, 77, 159, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 276], "mlp_dim": 200, "mlp_ratio": [77, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189], "mlx": [382, 395], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [85, 90, 91, 92, 93, 95, 96, 97, 100, 181], "mobilenet": [91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 292], "mobilenet_v2": 85, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 85, "mobilenet_v3_smal": 85, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 85, "mobilenet_v4_conv_medium": 85, "mobilenet_v4_conv_smal": 85, "mobilenet_v4_hybrid_larg": 85, "mobilenet_v4_hybrid_medium": 85, "mobilenetv2": [85, 91], "mobilenetv3": [85, 92, 96, 97], "mode": [15, 237, 249, 252, 267, 280, 281, 307, 309, 310, 311, 312, 313, 355, 361, 366, 395, 454], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 225, 232, 265, 268, 269, 270, 271, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 394, 467, 468, 478], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134, 185], "modern": [15, 39, 40, 77, 85], "modif": [151, 213, 385], "modifi": [15, 29, 98, 112, 150, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 209, 210, 211, 212, 278, 280, 281, 282, 283, 284, 285, 307, 359, 383, 385, 392, 395, 450, 452, 458, 466], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 85, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 188, 189, 206, 208, 209, 210, 211, 212, 213, 233, 269, 270, 271, 272, 273, 274, 275, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 394, 468, 478], "modular": [3, 15, 154, 156, 207, 210, 213, 357, 478], "moduledict": [210, 211, 213, 214], "modulelist": [212, 213, 214], "moment": [373, 374, 375, 376, 377], "momentum": [249, 252, 269, 270, 271, 328, 329, 330, 332, 333, 334, 361, 370, 376, 378, 380], "momentum_decai": 376, "monitor": 366, "monoton": 296, "moor": 24, "more": [3, 4, 7, 10, 19, 42, 112, 119, 158, 161, 163, 165, 172, 177, 178, 179, 183, 195, 196, 198, 199, 209, 210, 213, 232, 272, 273, 274, 286, 310, 311, 312, 313, 349, 357, 358, 369, 370, 371, 374, 375, 378, 379, 380, 391, 400, 442, 461, 463, 464, 478], "most": [16, 46, 85, 176, 344, 468, 469, 478], "move": [15, 370, 378], "mse": [245, 247, 324, 325], "mse_loss": [15, 239, 246], "mseloss": [317, 327], "mu": [30, 282, 328, 329, 330, 332, 333, 334, 335, 444], "mu_c": 470, "mu_i": [332, 333, 334], "much": [176, 478], "mul": 403, "multi": [3, 4, 77, 83, 85, 140, 141, 142, 143, 156, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 222, 225, 244, 248, 276, 295, 299, 323, 326, 349, 351, 353, 395, 430, 438, 444], "multi_conv": [159, 161, 163, 165], "multidimension": [389, 393, 409], "multiheadattent": [301, 317], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 159, 161, 163, 165, 211, 212, 213, 230, 267, 268, 275, 276, 299, 305, 307, 310, 311, 312, 313, 315, 323, 326, 350, 352, 357, 359, 362, 366, 384, 387, 389, 390, 391, 393, 398, 403, 409, 410, 439, 447, 459, 467, 472, 478], "multipli": [22, 94, 212, 242, 320, 355, 365, 366, 367, 379, 404, 417, 428], "multisteplr": 368, "must": [0, 1, 3, 15, 17, 18, 19, 21, 22, 25, 26, 27, 155, 159, 207, 209, 210, 211, 212, 213, 233, 253, 299, 307, 309, 310, 311, 312, 313, 326, 347, 349, 351, 353, 355, 358, 363, 385, 387, 442, 446, 447, 448, 450, 452, 454, 456, 457, 459, 461, 462, 463, 464, 466, 469, 470, 471, 472, 473, 475], "mx": [382, 395], "my_simple_model": 386, "mymodel": [207, 208, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "myoptim": [358, 369], "n": [12, 22, 23, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 209, 210, 213, 225, 226, 227, 228, 230, 232, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 280, 282, 284, 299, 300, 302, 303, 304, 305, 312, 313, 318, 320, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 411, 430, 442, 444], "n1": 23, "nabla_": [371, 372, 373, 374, 375, 376, 377, 379], "nabla_t": 377, "nadam": 381, "nair": [5, 6], "name": [10, 12, 13, 14, 85, 155, 173, 207, 209, 211, 213, 315, 386], "nan": [25, 27], "nano": [50, 85], "natur": [24, 154, 302, 318, 340, 343, 349, 405, 426, 427], "ndarrai": [15, 206, 208, 387, 395, 408, 410, 414, 416, 445], "ndim": [25, 27, 208, 395], "ne": 22, "nearest": [267, 355], "nearli": 395, "necessari": [4, 5, 6, 7, 8, 15, 24, 385, 450, 466], "need": [2, 4, 13, 14, 102, 173, 210, 211, 212, 222, 318, 349, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 385, 409, 410, 467, 468, 478], "neg": [22, 24, 27, 215, 248, 268, 286, 290, 291, 293, 323, 326, 379, 448], "negative_slop": [218, 290], "neglect": 212, "neighbor": 267, "neq": 23, "nest": [155, 210, 213, 357], "nestedmodel": 155, "nesterov": 376, "net": [85, 152], "network": [3, 4, 10, 13, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 85, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 171, 173, 200, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 220, 221, 222, 223, 226, 227, 228, 232, 233, 240, 242, 249, 268, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 340, 341, 342, 343, 344, 345, 347, 349, 351, 353, 357, 358, 369, 370, 378, 380, 393, 394, 395, 407, 413, 415, 429, 431, 454, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "neural": [3, 4, 10, 13, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 89, 153, 154, 155, 173, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 220, 221, 222, 223, 226, 227, 228, 233, 240, 242, 249, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 340, 341, 342, 343, 344, 345, 347, 357, 358, 369, 370, 378, 380, 393, 394, 395, 407, 413, 415, 429, 431, 454, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "neuralnetwork": [288, 289, 291, 296], "neuron": 290, "never": 472, "new": [14, 207, 208, 215, 216, 218, 219, 220, 221, 223, 240, 242, 267, 276, 280, 281, 282, 283, 284, 285, 358, 363, 366, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 448, 450, 452, 454, 456, 457, 458, 461, 462, 463, 464, 465, 466], "new_tensor": 439, "next": [213, 467], "nll": 248, "nll_loss": [239, 246], "nllloss": [317, 327], "nlp": [265, 347], "nn": [5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 159, 169, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 214, 217, 224, 229, 238, 241, 246, 251, 261, 266, 277, 279, 298, 301, 306, 314, 316, 317, 321, 327, 336, 346, 348, 354, 356, 358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 468, 478], "no_grad": [15, 383], "node": [15, 395], "nois": [27, 394], "non": [19, 22, 24, 27, 173, 212, 216, 218, 219, 280, 281, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 307, 310, 311, 312, 313, 349, 350, 351, 352, 353, 373, 374, 385, 405, 422], "nonconform": 15, "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 159, 169, 174, 175, 188, 189, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 240, 242, 243, 244, 245, 247, 248, 249, 252, 253, 265, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 450, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476], "norm": [16, 20, 159, 169, 174, 175, 188, 189, 254, 265, 347, 350, 352, 375], "norm_first": [349, 351, 353], "norm_lay": [159, 169, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189], "norm_typ": [265, 347], "normal": [5, 6, 7, 8, 30, 39, 85, 130, 159, 169, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 216, 220, 222, 223, 232, 249, 250, 252, 253, 265, 269, 270, 271, 279, 280, 284, 287, 293, 295, 307, 328, 329, 330, 331, 332, 333, 334, 335, 347, 349, 350, 351, 352, 353, 378, 391, 394, 467, 477, 478], "normalized_shap": [253, 335], "notat": [10, 12, 13, 14, 315], "note": [226, 307], "noth": [231, 234, 235, 236], "notimplementederror": [2, 207, 358], "notin": 422, "nov": 85, "novel": [7, 85, 173], "now": 15, "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 206, 208, 275, 323, 326, 347, 382, 395, 400, 407, 408, 411, 413, 415, 416, 439, 445, 468], "npy": [5, 6, 7, 8], "num": [350, 352, 412], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 295, 323, 326], "num_decoder_lay": [156, 349], "num_embed": [265, 347], "num_encoder_lay": [156, 349], "num_featur": [213, 269, 270, 271, 328, 329, 330, 332, 333, 334], "num_head": [30, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 299, 349, 350, 351, 352, 353], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [200, 350, 352], "num_paramet": 212, "num_stag": 175, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 225, 226, 227, 228, 230, 235, 236, 237, 240, 242, 244, 248, 249, 250, 252, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 294, 299, 302, 303, 304, 305, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 360, 361, 365, 366, 367, 370, 382, 389, 392, 393, 395, 405, 407, 409, 411, 412, 429, 430, 431, 443, 444, 447, 448, 450, 454, 456, 457, 458, 460, 462, 466, 470, 472, 473, 475, 478], "numer": [13, 21, 24, 232, 243, 244, 249, 250, 252, 253, 254, 269, 270, 271, 292, 308, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 349, 351, 353, 371, 372, 373, 374, 375, 376, 377, 378, 395, 397, 407, 408, 409, 410, 411, 412, 413, 415, 445, 468], "numpi": [15, 206, 208, 323, 326, 382, 395, 400, 439, 442, 446, 454, 456, 462, 468, 478], "o": [3, 173, 299, 342, 345, 413, 414], "object": [1, 3, 16, 85, 140, 159, 194, 195, 196, 197, 198, 207, 211, 212, 325, 357, 382, 385, 396, 397, 401, 402, 403, 406, 445], "observ": 373, "obtain": 1, "occur": [14, 268, 385, 386, 448], "occurr": 22, "odot": [307, 310, 311, 312, 313], "off": [43, 99, 383], "offer": [4, 10, 40, 41, 43, 53, 80, 99, 172, 178, 179, 181, 183, 201, 357, 369, 394, 478], "offset": 411, "often": [22, 121, 122, 226, 227, 228, 230, 265, 308, 323, 326, 407, 415, 468, 472, 476, 478], "old": 366, "older": 376, "onc": 385, "one": [0, 13, 136, 137, 138, 139, 144, 212, 213, 222, 226, 242, 258, 262, 269, 270, 271, 293, 294, 295, 302, 311, 323, 326, 328, 332, 340, 343, 355, 358, 384, 391, 406, 414, 429, 431, 449, 455, 461, 468], "ones": [15, 240, 242, 302, 303, 304, 320, 328, 329, 330, 332, 333, 334, 335, 357, 411, 414, 417, 447], "ones_lik": 417, "onli": [155, 267, 288, 291, 307, 308, 310, 311, 312, 313, 322, 323, 326, 328, 329, 330, 332, 333, 334, 335, 343, 344, 345, 379, 383, 407, 422, 429, 431, 439, 442, 454, 455, 457, 458, 460, 463, 464], "onto": [25, 27], "openml": [5, 6, 7, 8, 15], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 159, 161, 163, 165, 184, 206, 207, 210, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 230, 233, 237, 240, 242, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 318, 319, 320, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 357, 383, 384, 385, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 415, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 442, 444, 448, 450, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 476], "operand": 395, "operatornam": [22, 24, 299, 349, 350, 351, 352, 353], "opposit": [370, 458], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 91, 92, 96, 97, 99, 100, 101, 102, 164, 167, 168, 176, 194, 195, 206, 208, 211, 212, 230, 302, 303, 304, 347, 357, 360, 361, 362, 363, 364, 365, 366, 367, 385], "optimizer_st": [358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 290, 295, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 380, 387, 389, 390, 391, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 429, 430, 431, 438, 443, 444, 445, 447, 448, 453, 456, 458, 459, 460, 461, 463, 464, 468, 472, 473, 475], "ord": [23, 254], "order": [1, 3, 10, 15, 23, 27, 209, 210, 211, 212, 213, 443, 467], "ordered_dict": 213, "ordereddict": [207, 209, 210, 213], "organ": [159, 209, 210, 211, 213, 386], "orient": 478, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 173, 188, 189, 199, 231, 268, 275, 297, 447, 454, 455, 456, 457, 458, 462, 465, 476], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [370, 378, 380], "other": [2, 3, 21, 75, 84, 86, 89, 99, 161, 163, 165, 174, 206, 207, 210, 213, 280, 281, 307, 308, 357, 358, 383, 385, 394, 407, 409, 413, 415, 442, 453, 478], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 215, 218, 219, 220, 222, 233, 286, 288, 289, 290, 291, 293, 295, 309, 310, 311, 312, 313, 324, 340, 341, 342, 343, 344, 345, 350, 352, 358, 379, 386, 401, 402, 429, 431, 452, 463, 464], "otim": [24, 240, 318], "out": [0, 3, 4, 10, 15, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 280, 281, 284, 285, 300, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 370, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 448, 449, 450, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466], "out_channel": [86, 92, 96, 97, 210, 213, 269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 329, 330, 340, 341, 342, 343, 344, 345, 357], "out_featur": [209, 210, 213, 240, 242, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 303, 304, 307, 310, 311, 318, 320, 322, 323, 324, 325, 326, 328, 332, 335, 340, 341, 342, 343, 344, 345], "outcom": [472, 473, 475], "outer": 417, "outlier": [245, 324], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 242, 254, 255, 256, 257, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 413, 415, 416, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 442, 443, 444, 452, 453, 454, 456, 458, 459, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "output_height": 230, "output_lay": [210, 213], "output_s": [210, 255, 256, 257, 337, 338, 339], "output_width": 230, "output_with_norm": [265, 347], "output_with_pad": [265, 347], "outsid": [0, 309], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 207, 210, 212, 222, 255, 256, 257, 275, 295, 302, 303, 304, 323, 326, 328, 329, 330, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 359, 361, 367, 370, 371, 372, 373, 374, 389, 393, 429, 430, 431, 438, 442, 444, 472, 473, 475], "overal": [150, 233], "overdetermin": 24, "overfit": [1, 28, 152, 234, 237, 308, 310, 311, 312, 313, 370, 373, 378, 380], "overhead": [85, 92, 275], "overlap": 173, "overli": 292, "overrid": [2, 3, 99, 100, 101, 159, 188, 189], "overridden": [207, 358], "overshoot": 359, "overwrit": [209, 211], "own": [4, 15, 209, 210, 211, 212, 226, 227, 228, 285, 357, 470], "p": [23, 24, 59, 208, 211, 212, 231, 232, 233, 234, 235, 236, 237, 254, 265, 305, 307, 308, 310, 311, 312, 313, 340, 343, 344, 347, 472, 473, 475, 478], "p_d": [342, 345], "p_h": [305, 341, 342, 345], "p_w": [305, 341, 342, 345], "packag": [2, 3, 4, 10, 16, 154, 357, 369, 386, 392, 394, 468, 478], "pad": [86, 210, 213, 226, 227, 228, 230, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 305, 329, 330, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 451], "pad_after_dim1": 454, "pad_after_dim2": 454, "pad_before_dim1": 454, "pad_before_dim2": 454, "pad_width": 454, "padding_height": 230, "padding_idx": [265, 347], "padding_width": 230, "pair": 240, "panda": [15, 173], "pang": 85, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 184], "paradigm": 85, "parallel": [1, 3, 85, 140, 154, 159, 173, 299], "param": [207, 208, 211, 212, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "param1": 207, "param_dict": 211, "param_group": [358, 369], "param_groups_setup": 358, "param_list": 212, "param_s": 386, "paramet": [0, 2, 15, 85, 87, 88, 89, 173, 207, 357, 358, 359, 369, 394, 478], "parameter": 93, "parameterdict": 214, "parameterlist": 214, "parent": [15, 357, 395], "pars": 382, "part": [206, 207, 285, 347, 357, 383, 385, 394, 407, 408, 411, 413, 414, 415, 416, 447, 459, 463, 464, 468, 478], "partial": [15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 215, 216, 218, 219, 220, 221, 222, 223, 240, 242, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466], "particip": [15, 208, 468], "particular": [209, 211], "particularli": [24, 91, 99, 124, 125, 126, 127, 128, 129, 159, 161, 163, 165, 210, 211, 212, 213, 222, 232, 242, 269, 270, 271, 272, 273, 274, 295, 320, 323, 326, 332, 333, 334, 335, 360, 374, 383, 386, 412, 467], "partit": 459, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 159, 184, 207, 208, 209, 210, 211, 212, 213, 267, 269, 270, 271, 275, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 303, 304, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 357, 395, 412, 430, 438, 442, 443, 444, 448, 450, 455, 457, 460, 463, 464, 466, 468, 478], "past": [370, 371, 373, 378], "patch": [159, 161, 163, 165, 173, 174, 175, 188, 189, 200, 201, 202, 203, 204, 205, 230, 305, 341], "patch_norm": [188, 189], "patch_siz": [159, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205], "path": [3, 5, 6, 7, 8, 39, 40, 77, 159, 175, 233, 309], "pathwai": 85, "patienc": 366, "pattern": [10, 12, 13, 14, 15, 30, 85, 161, 163, 165, 219, 275, 291, 302, 303, 304, 315], "pedagog": 15, "penal": [370, 378, 380], "penalti": [371, 372, 373, 374, 375, 376, 377], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 175, 181, 182, 183, 185, 186, 187, 225, 255, 299, 305, 315, 332, 333, 334, 335, 337, 353, 361, 446], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 158, 161, 163, 165, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 181, 184, 189, 195, 196, 197, 204, 207, 208, 212, 216, 225, 226, 227, 228, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 302, 303, 304, 305, 307, 310, 311, 312, 313, 315, 318, 319, 320, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 355, 358, 359, 363, 366, 383, 385, 392, 394, 396, 397, 400, 403, 406, 426, 429, 431, 438, 443, 446, 459, 467, 469, 471, 476, 478], "period": 360, "permut": [12, 315, 443], "persist": [206, 387, 389, 390, 391, 393, 409, 410], "perturb": [19, 26, 27, 478], "phase": 30, "phi": [216, 287], "pi": [216, 287, 360, 423, 434, 440], "pico": [51, 85], "piecewis": [288, 289], "pil": [468, 478], "pinv": 20, "pioneer": 85, "pip": 15, "pipelin": [5, 6, 7, 8, 315, 394, 467, 468, 470], "pixel": [5, 6, 7, 8, 267, 355, 470, 472], "place": [278, 280, 281, 282, 283, 284, 285, 395, 452, 458], "placehold": [207, 319], "placement": [15, 395], "plai": 394, "platform": 382, "plot": 453, "point": [4, 268, 365, 383], "pointwis": [272, 273, 274], "pool": [10, 28, 85, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 255, 256, 257, 258, 259, 260, 262, 263, 264, 275, 276, 303, 304, 337, 338, 339, 340, 341, 342, 343, 344, 345, 429, 431], "pool1": 213, "pool2": 213, "poorli": 21, "popul": 207, "popular": [4, 85], "portion": [447, 463, 464, 478], "pose": 24, "posit": [1, 17, 22, 30, 85, 156, 188, 189, 200, 207, 213, 225, 268, 286, 290, 291, 293, 300, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 379, 384, 405, 447, 452, 456, 462, 471], "possibl": 478, "potenti": [24, 319, 378, 460], "power": [10, 15, 22, 50, 85, 91, 96, 97, 103, 175, 176, 178, 182, 185, 194, 202, 275, 315, 359, 384, 385, 417, 467, 468, 478], "pp": [85, 173], "practic": [24, 80, 323, 326], "practition": 478, "pre": [30, 69, 70, 71, 72, 85, 113, 117, 118], "preactbottleneck": [113, 117, 118], "preced": [85, 208, 355], "precis": [186, 382], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "pred": 15, "predecessor": [40, 175], "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 293, 347, 359, 382], "predict": [150, 159, 173, 188, 190, 191, 192, 193, 322, 323, 325, 326], "prefer": 367, "prefix": [207, 386], "prepar": [3, 384, 454, 456, 462, 468, 478], "prepend": [207, 446], "preprint": [85, 173], "preprocess": [3, 4, 230, 268, 394, 467, 468, 478], "present": [322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 341], "preserv": [13, 85, 176, 231, 233, 268, 307, 309, 407, 408, 411, 413, 414, 415, 416, 430, 438, 439, 444, 447, 458], "preset": 4, "prevent": [1, 10, 15, 209, 210, 211, 212, 213, 225, 234, 237, 254, 292, 300, 308, 310, 311, 312, 313, 322, 323, 352, 353, 359, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 385], "previou": [85, 370, 379, 385], "previous": [363, 373], "primarili": 213, "principl": 85, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476], "print_grad": 395, "priorit": [96, 97, 101, 276, 288], "prob": 387, "probabilist": 394, "probabl": [59, 75, 156, 174, 188, 189, 200, 216, 222, 225, 231, 232, 233, 234, 235, 236, 237, 243, 287, 295, 299, 300, 307, 308, 309, 310, 311, 312, 313, 322, 323, 326, 349, 351, 353, 387, 472, 473, 475, 478], "problem": [24, 25, 27, 85, 218, 286, 290, 377], "proceed": [85, 173], "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 85, 110, 111, 112, 140, 151, 152, 154, 159, 161, 163, 165, 173, 174, 188, 212, 226, 227, 228, 252, 268, 269, 270, 271, 275, 276, 293, 297, 302, 304, 318, 328, 329, 330, 332, 333, 334, 335, 340, 342, 343, 345, 349, 350, 352, 370, 453, 468, 469, 470, 471, 476, 478], "produc": [15, 28, 152, 155, 255, 256, 257, 275, 302, 303, 304, 337, 338, 339, 392, 394], "product": [25, 27, 174, 175, 225, 289, 294, 296, 299, 300, 318, 335, 357, 398, 399, 403, 404], "program": [383, 394], "progressproject": [25, 27, 156, 159, 161, 163, 165, 169, 174, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 299], "projector": 24, "promin": [340, 342, 343, 344, 345], "promot": [213, 323, 326, 357], "propag": [15, 18, 19, 21, 24, 25, 26, 27, 85, 207, 213, 240, 242, 267, 275, 341, 342, 378, 379, 387, 398, 399, 400, 404, 429, 431, 447, 453, 454, 457, 465], "proper": [265, 447], "properli": [0, 212, 222, 295, 357, 359], "properti": [16, 18, 21, 22, 216, 220, 231, 287, 293, 307, 372, 377], "proport": [5, 6, 7, 8, 444], "proportion": 476, "propos": 184, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 85, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 178, 179, 186, 188, 189, 197, 200, 202, 203, 207, 209, 210, 211, 212, 216, 225, 242, 256, 257, 265, 268, 300, 315, 322, 323, 324, 326, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 355, 357, 358, 359, 363, 364, 369, 370, 371, 378, 380, 383, 385, 392, 394, 395, 400, 407, 414, 429, 431, 443, 445, 456, 460, 462, 478], "pseudo": [21, 24], "purpos": [41, 46, 50, 389, 393, 407, 413, 415], "pvt": [175, 176, 177, 178, 179, 180], "pvt_huge": 173, "pvt_larg": 173, "pvt_medium": 173, "pvt_small": 173, "pvt_tini": 173, "pvt_v2": [181, 182, 183, 184, 185, 186, 187], "pvt_v2_b0": 173, "pvt_v2_b1": 173, "pvt_v2_b2": [173, 184], "pvt_v2_b2_li": 173, "pvt_v2_b3": 173, "pvt_v2_b4": 173, "pvt_v2_b5": 173, "pvtv2": [173, 181, 182, 183, 184, 185, 186, 187], "pypi": 15, "pyramid": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187], "python": [15, 382, 395], "pytorch": [15, 445], "q": [25, 85, 159, 175, 225, 299, 300, 353], "q_1": 159, "q_i": [30, 299], "qk": [30, 159, 351, 353], "qk_scale": [159, 174, 175, 188, 189], "qkv_bia": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189], "qr": 20, "quad": [24, 159, 265, 299, 322, 323, 324, 325, 326, 343, 344, 345, 350, 352, 396, 397, 401, 402, 403, 406, 463, 464, 469], "quadrat": [175, 184, 324], "qualifi": 366, "quanfu": 173, "queri": [159, 169, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 225, 299, 300, 353], "quickli": 359, "quoc": 85, "quotient": 397, "r": [13, 14, 25, 30, 85, 299, 459, 472, 473, 474, 475], "r_t": 377, "radam": 381, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 207, 357, 358, 405, 446], "rameswar": 173, "rand": [388, 394], "randint": [388, 394], "randn": [12, 14, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 159, 225, 272, 273, 274, 275, 276, 299, 300, 315, 349, 350, 351, 352, 353, 357, 388, 392, 394], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 225, 272, 273, 274, 275, 276, 299, 309, 315, 347, 349, 350, 351, 352, 353, 471, 472, 473, 474, 475, 478], "random_integ": 394, "random_tensor": 394, "randomcrop": [477, 478], "randomgrayscal": [477, 478], "randomhorizontalflip": [477, 478], "randomli": [1, 231, 233, 234, 235, 236, 237, 268, 307, 310, 311, 312, 313, 471, 472, 473, 474, 475, 478], "randomnoisedataset": [0, 1, 2], "randomrot": [477, 478], "randomverticalflip": 477, "rang": [0, 1, 15, 16, 30, 43, 52, 85, 102, 112, 120, 154, 173, 177, 198, 212, 221, 223, 226, 227, 233, 244, 248, 285, 292, 294, 297, 309, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 380, 387, 390, 412, 419, 420, 422, 470, 474, 478], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 159, 174, 175, 188, 189, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "rather": [7, 12, 14, 211, 212, 315, 365, 374, 457], "ratio": [59, 77, 130, 159, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 275, 276, 476], "ravel": 451, "raw": [222, 295, 323, 395], "rcond": 24, "re": [15, 208, 385], "reach": 365, "readabl": [10, 15, 209, 210, 211, 213, 315, 357], "readi": [3, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 294], "rearrang": [11, 230, 316, 317], "reassembl": 85, "recalibr": [85, 131, 133, 134, 136, 137, 138, 139, 275], "receiv": [343, 344, 345, 454, 463, 464], "recent": 378, "recept": [85, 140, 144, 184, 276], "reciproc": [24, 417, 427, 428, 436], "recogn": 159, "recognit": [85, 89, 110, 111, 173, 178, 188, 190, 191, 192, 193, 199, 303], "recommend": 15, "rectangular": 411, "rectif": 377, "rectifi": [218, 219, 290, 291, 377], "recurr": [173, 210, 335], "recurs": [155, 207], "red": 472, "reduc": [11, 28, 30, 85, 90, 112, 123, 140, 145, 152, 169, 173, 175, 184, 272, 273, 274, 275, 328, 329, 330, 332, 333, 334, 340, 341, 342, 343, 344, 345, 359, 362, 365, 366, 367, 376, 379, 385, 429, 430, 431, 438, 444, 472], "reducelronplateau": 368, "reduct": [10, 13, 27, 59, 130, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 243, 244, 245, 247, 248, 275, 276, 322, 323, 324, 325, 326, 360, 366, 367, 429, 431], "reevalu": 358, "refer": [4, 161, 163, 165, 184, 207, 394, 408, 411, 448], "refin": [85, 197, 359], "reflect": [177, 383], "regardless": [24, 455], "region": [228, 232, 255, 256, 257, 267, 288, 308, 338, 339, 454, 469, 478], "regist": [15, 31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 206, 207, 208, 212, 357, 386, 395], "register_buff": 206, "register_hook": 395, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205], "register_paramet": 207, "registr": [15, 207, 357], "registri": [124, 125, 126, 127, 128, 129, 386], "registry_path": 386, "regress": [4, 247, 324, 325], "regul": [265, 347], "regular": [24, 28, 39, 59, 60, 75, 152, 188, 189, 233, 237, 300, 308, 310, 311, 312, 313, 365, 367, 370, 371, 372, 375, 376, 377, 378, 380], "reimagin": 85, "rel": [30, 85, 188, 189, 359, 366], "relat": [385, 411, 413], "relationship": [30, 176, 178, 476], "relev": [267, 370, 378, 380], "reli": [232, 385], "reliabl": [5, 6, 7, 8], "reliant": [310, 311, 312, 313], "relu": [15, 28, 85, 130, 145, 152, 155, 209, 210, 211, 213, 215, 217, 218, 239, 269, 270, 271, 275, 276, 280, 281, 284, 285, 286, 290, 292, 296, 298, 302, 303, 304, 317, 318, 319, 320, 349, 351, 353], "relu1": 213, "relu2": 213, "relu3": 213, "relu6": [298, 317], "remain": [5, 6, 7, 8, 15, 52, 206, 233, 253, 307, 309, 310, 311, 312, 313, 347, 379], "rememb": 394, "remov": [386, 460], "reorder": [10, 12, 315, 439, 458], "rep": 462, "repeat": [11, 451, 453, 462], "repetit": [10, 14, 456, 462], "replac": [7, 161, 163, 165, 173, 349, 394, 452, 472], "replic": [14, 15, 305, 350, 352, 446], "repr": 382, "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 159, 170, 171, 172, 174, 180, 207, 208, 213, 240, 242, 249, 252, 253, 265, 302, 303, 304, 315, 318, 320, 323, 326, 335, 347, 350, 358, 367, 369, 370, 376, 377, 378, 379, 380, 382, 387, 396, 397, 403, 406, 408, 430, 442, 443, 444, 453, 469, 471, 473, 474, 475, 476], "represent": [30, 85, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 156, 173, 175, 176, 177, 178, 179, 182, 186, 187, 200, 265, 275, 341, 344, 347, 358], "reproduc": [387, 389, 390, 391, 392, 393, 394, 478], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 203, 205, 206, 209, 213, 215, 216, 218, 219, 220, 221, 223, 240, 242, 267, 275, 276, 285, 319, 323, 326, 357, 365, 383, 385, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 446, 448, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 465, 466, 468, 469, 476], "requires_grad": [15, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 230, 240, 242, 265, 267, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 355, 357, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468], "rescal": [243, 244, 248, 322, 323, 326], "research": [15, 357], "reset": [208, 360, 392, 395], "reshap": [10, 12, 130, 242, 303, 304, 315, 355, 384, 439, 451, 455], "resid": 395, "residu": [76, 82, 83, 84, 85, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 175, 351, 353], "residualblock": 112, "resili": 379, "resiz": [267, 467, 477, 478], "resnest": [104, 105, 106, 107, 108, 109, 110, 111], "resnest_101": 85, "resnest_14": 85, "resnest_200": 85, "resnest_26": 85, "resnest_269": 85, "resnest_50": 85, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 85, "resnet": [82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 161, 163, 165, 275], "resnet_1001": 85, "resnet_101": 85, "resnet_152": 85, "resnet_18": 85, "resnet_200": 85, "resnet_269": 85, "resnet_34": 85, "resnet_50": 85, "resnet_arg": 140, "resnext": [124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144], "resnext_101_32x16d": 85, "resnext_101_32x32d": 85, "resnext_101_32x4d": 85, "resnext_101_32x8d": 85, "resnext_101_64x4d": 85, "resnext_50_32x4d": 85, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 136, 137, 138, 139, 144, 173, 175, 176, 184, 189, 395], "resolv": [12, 13, 14, 315, 382], "resourc": [15, 44, 45, 47, 48, 51, 52, 78, 85, 92, 96, 97, 98, 99, 100, 101, 102, 203, 385], "respect": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 240, 242, 267, 276, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 422, 426, 427, 428, 429, 430, 431, 434, 436, 438, 442, 443, 444, 453, 454, 456, 462, 472], "respons": [85, 136, 137, 138, 139, 209, 250, 331, 369], "rest": [463, 464], "restor": [275, 363, 385], "restructur": 457, "result": [10, 12, 14, 17, 21, 22, 24, 85, 207, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 240, 242, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 276, 288, 292, 295, 299, 309, 315, 357, 358, 383, 385, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 445, 448, 450, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 466, 468, 471, 472, 478], "resum": [360, 361, 362, 363, 364, 365, 366, 367, 369], "retain": [173, 175, 208, 232, 308, 395, 407, 415, 429, 430, 431, 438, 444, 447, 452, 463, 464, 468], "retent": 468, "rethink": 85, "retriev": [0, 2, 209, 211, 212, 265], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 206, 207, 209, 210, 211, 212, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 309, 310, 311, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 350, 352, 357, 358, 363, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 467, 478], "reus": [85, 468], "reusabl": [213, 309, 357, 467], "revers": [15, 213, 395, 443, 473, 475], "revert": 385, "revolution": 85, "rfloor": [305, 367], "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 169, 174, 188, 189], "rho": 371, "rho_": 377, "rho_t": 377, "rich": [15, 186], "richer": 176, "right": [22, 23, 24, 26, 27, 30, 159, 216, 222, 254, 287, 295, 299, 305, 322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 343, 344, 345, 351, 353, 439, 469], "rightarrow": [12, 299, 315, 459], "rmsprop": 381, "rob": 85, "robust": [41, 46, 79, 100, 198, 199, 232, 268, 307, 310, 311, 312, 313, 324, 357, 371, 471, 472, 474, 478], "roland": 7, "role": [394, 478], "roll": 451, "root": [4, 5, 6, 7, 8, 372, 378, 436], "rotat": [239, 266, 474, 478], "rotated_imag": 268, "rout": [343, 344, 345], "row": [18, 19, 21, 26, 242, 265, 411, 453, 463, 464, 466], "rprop": 381, "rule": [14, 15, 21, 22, 315, 384, 396, 397, 401, 402, 403, 405, 406], "run": [15, 206, 249, 252, 269, 270, 271, 328, 329, 330, 332, 333, 334, 371, 385, 392, 394], "running_mean": [206, 249, 252, 328, 329, 330, 332, 333, 334], "running_var": [249, 252, 328, 329, 330, 332, 333, 334], "runtim": [60, 210, 213, 309, 357, 412], "s_": 379, "s_1": 459, "s_2": 459, "s_d": [342, 345], "s_h": [305, 341, 342, 345], "s_i": 459, "s_n": 459, "s_w": [305, 341, 342, 345], "safeguard": 254, "sain": 85, "same": [18, 19, 21, 22, 26, 183, 222, 231, 232, 233, 234, 235, 236, 237, 249, 250, 252, 253, 254, 256, 257, 268, 269, 270, 271, 272, 273, 274, 276, 292, 302, 303, 304, 307, 310, 311, 312, 313, 319, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 379, 382, 387, 392, 394, 400, 410, 414, 416, 426, 429, 430, 431, 439, 448, 450, 452, 455, 457, 460, 461, 463, 464, 466, 470], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 255, 256, 257, 280, 281, 282, 283, 284, 285, 307, 310, 311, 312, 313, 318, 320, 323, 326, 335, 337, 338, 339, 387, 391, 394, 412, 469, 471, 473, 474, 475, 476], "sandbox": 15, "sandler": 85, "satisfi": [17, 19, 26, 459], "satur": [286, 478], "save": [2, 206, 208, 358, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386], "scalabl": [3, 46, 59, 85, 124, 125, 126, 127, 128, 129, 150, 189, 357], "scalar": [15, 18, 23, 243, 244, 245, 247, 248, 387, 395, 452], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 85, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 176, 180, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 215, 220, 222, 225, 233, 249, 250, 252, 253, 265, 275, 276, 284, 285, 286, 288, 290, 293, 294, 295, 297, 299, 300, 307, 309, 310, 311, 312, 313, 323, 328, 329, 330, 331, 332, 333, 334, 335, 347, 355, 361, 364, 370, 372, 373, 374, 394, 444, 476], "scale_by_keep": [233, 309], "scale_factor": 355, "scale_fn": 361, "scaled_dot_product_attent": [224, 239], "scaleddotproductattent": [301, 317], "scenario": [44, 49, 51, 99, 100, 101, 102, 184, 211, 212, 335, 360, 361, 367, 374, 375, 468, 472], "schedul": [308, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370], "scientif": 384, "score": [112, 123, 140, 222, 225, 300, 323], "scratch": 15, "script": 394, "se": [59, 85, 131, 132, 133, 134, 135, 136, 137, 138, 139], "se_resnet_101": 85, "se_resnet_152": 85, "se_resnet_18": 85, "se_resnet_34": 85, "se_resnet_50": 85, "se_resnext_101_32x4d": 85, "se_resnext_101_32x8d": 85, "se_resnext_101_64x4d": 85, "se_resnext_50_32x4d": 85, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 315, 357, 394], "seamlessli": [3, 4, 10, 12, 14, 16, 208, 210, 213, 357, 478], "search": 85, "second": [19, 175, 186, 210, 211, 240, 275, 318, 373, 374, 375, 376, 377, 384, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 439, 450, 453, 475], "section": 400, "see": [15, 400], "seed": [387, 388, 389, 390, 391, 393, 394, 478], "seek": [15, 102], "seen": 371, "segment": [173, 187, 194, 195, 196, 197, 198, 199], "select": [13, 14, 85, 140, 141, 142, 143, 144, 267, 275, 276, 343, 345, 361, 438], "selectivekernel": 277, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 85, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 200, 206, 207, 208, 209, 210, 211, 212, 220, 233, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 308, 309, 310, 311, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 353, 357, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 395, 452, 458, 467, 468], "selfattent": 353, "selu": [217, 231, 239, 298, 307, 317], "selunetwork": 293, "semant": [159, 185], "semodul": 277, "senet": [131, 132, 133, 134, 135, 136, 137, 138, 139], "sensit": [245, 324, 328, 329, 330], "sentiment": 4, "separ": [0, 85, 90, 110, 111, 150, 159, 226, 227, 228, 272, 273, 274, 332, 333, 334], "seq_len": [225, 299, 300, 349, 350, 351, 352, 353], "sequencsequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 173, 209, 210, 214, 226, 269, 270, 271, 315, 319, 350, 352, 467, 478], "seri": [73, 87, 88, 140, 183, 185, 226, 269, 302, 340, 343], "serial": [206, 207, 369], "serv": [3, 7, 15, 54, 82, 130, 145, 156, 207, 209, 210, 211, 212, 213, 357, 379, 395, 468], "set": [3, 4, 5, 6, 7, 8, 15, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 208, 212, 225, 226, 227, 228, 265, 290, 291, 293, 300, 302, 303, 304, 307, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 347, 358, 373, 374, 378, 387, 389, 390, 391, 392, 393, 394, 407, 409, 410, 415, 416, 422, 429, 431, 445, 452, 463, 464, 468, 472, 478], "setup": [4, 124, 125, 126, 127, 128, 129], "sever": [24, 302, 303, 304, 340, 341, 342, 343, 344, 345, 385, 467, 478], "sgd": [15, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 377, 381], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 85, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 155, 159, 173, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 357, 361, 384, 387, 389, 390, 391, 393, 394, 395, 398, 409, 410, 411, 413, 414, 415, 416, 422, 427, 428, 429, 430, 431, 434, 436, 438, 439, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478], "shapelik": 390, "share": [85, 159], "sharp": 361, "shen": 275, "shift": [173, 188, 189, 190, 191, 192, 193, 194, 197, 198, 249, 250, 252, 253, 288, 328, 329, 330, 331, 332, 333, 334, 335, 458], "shorthand": 400, "should": [12, 13, 14, 15, 86, 206, 315, 349, 350, 351, 352, 353, 365, 385, 387, 389, 390, 391, 393, 395, 409, 410, 419, 420, 442, 446, 454, 467], "show": [383, 386], "shown": [159, 296, 392], "shrink": 371, "shuffl": [1, 2, 3], "side": [26, 210, 213, 226, 227, 228, 258, 259, 260, 262, 263, 264, 269, 270, 271, 302, 303, 304, 305, 340, 341, 342, 343, 344, 345, 385], "sigma": [24, 30, 275, 280, 282, 284, 294, 296, 328, 329, 330, 332, 333, 334, 335, 443], "sigma_c": 470, "sigma_i": 24, "sigmoid": [217, 239, 275, 280, 281, 284, 285, 288, 289, 296, 298, 317, 322], "sigmoidnetwork": 294, "sign": [22, 324, 379, 417], "signal": [269, 302, 303, 304, 328, 332, 340, 341, 342, 343, 344, 345], "signific": [42, 385], "significantli": [85, 91, 123, 184, 185, 186, 187, 196, 275, 467], "silicon": [15, 382], "sim": [307, 310, 311, 312, 313], "similar": [10, 161, 163, 165, 280, 281, 400, 439, 445, 446, 454], "similarli": [27, 442], "simonyan": 85, "simpl": [3, 4, 15, 155, 213, 226, 227, 228, 240, 242, 258, 259, 260, 262, 263, 264, 287, 288, 289, 291, 292, 293, 294, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 398, 399, 404, 467], "simplebinaryclassificationmodel": 322, "simpleblock": 233, "simpleclassificationmodel": [323, 326], "simplegelumodel": 287, "simplehardsigmoidmodel": 288, "simplehardswishmodel": 289, "simpleleakyrelumodel": 290, "simplemodel": [155, 292, 309, 320, 386], "simpleregressionmodel": 325, "simplerelumodel": 291, "simpleselumodel": 293, "simplesigmoidmodel": 294, "simpleswishmodel": 296, "simpletanhmodel": 297, "simpli": [15, 383, 442, 443, 457], "simplic": [85, 288, 291], "simplifi": [4, 12, 14, 69, 70, 71, 72, 85, 87, 151, 213, 269, 270, 271, 315], "simul": [155, 478], "simultan": [159, 268], "sin": [417, 423], "sinc": [22, 25, 209, 210, 211, 212, 226, 227, 228, 285, 383, 385, 387, 391, 439, 453, 478], "sine": [420, 434, 435], "singl": [0, 4, 22, 25, 27, 112, 161, 163, 165, 222, 269, 270, 271, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 305, 323, 335, 341, 342, 343, 344, 345, 350, 351, 352, 353, 358, 393, 409, 412, 448, 460, 470, 472, 478], "singleton": [14, 335], "singular": [18, 21, 22, 24, 26, 27], "sinh": [417, 424, 441], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 155, 156, 157, 158, 159, 160, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 225, 226, 227, 228, 230, 232, 235, 236, 237, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 299, 302, 303, 304, 305, 308, 315, 318, 320, 322, 323, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 352, 353, 355, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 390, 393, 394, 395, 429, 430, 431, 438, 444, 446, 447, 448, 450, 459, 460, 465, 466, 469, 471, 476, 478], "size_or_sect": 459, "sk": [85, 140, 141, 142, 143, 144, 276], "sk_resnet_18": 85, "sk_resnet_34": 85, "sk_resnet_50": 85, "sk_resnext_50_32x4d": 85, "skblock": 140, "skip": [85, 385], "sknet": [141, 142, 143, 144], "slice": [240, 395, 442], "slide": [230, 305, 340, 342, 343, 345], "slight": 275, "slightli": 478, "slope": [218, 286, 290], "slow": [3, 377], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 85, 87, 88, 89, 92, 96, 97, 100, 167, 173, 179, 192, 193, 198, 199, 204, 205, 218, 232, 243, 244, 249, 250, 252, 253, 254, 290, 293, 308, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 341, 344, 349, 351, 353, 359, 371, 372, 373, 374, 375, 376, 377, 378, 379], "smaller": [10, 44, 69, 70, 71, 72, 85, 98, 152, 159, 161, 163, 165, 168, 172, 210, 213, 357, 372, 373, 402, 447, 469, 471, 476], "smallest": 431, "smooth": [75, 216, 286, 287, 296, 362, 370, 378, 478], "smoother": [362, 370], "so": [209, 210, 211, 212, 268, 357, 377, 409, 410, 467], "softmax": [30, 159, 217, 225, 239, 276, 298, 299, 300, 317, 323, 351, 353], "softmaxmodel": 295, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [215, 233, 234, 268, 307, 309, 310, 311, 328, 329, 330, 332, 333, 334, 372, 373, 374, 385, 447], "sometim": 384, "sophist": [210, 213], "sort": 15, "sourc": [156, 157, 158, 225, 349, 394], "space": [19, 25, 27, 156, 161, 163, 165, 189, 226, 227, 228, 230, 255, 256, 257, 269, 270, 271, 272, 273, 274, 302, 303, 304, 305, 337, 338, 339, 407, 412, 478], "span": 4, "spars": [372, 373], "spatial": [28, 30, 85, 112, 123, 140, 145, 152, 154, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 232, 250, 270, 275, 303, 304, 305, 328, 329, 330, 332, 333, 334, 335, 341, 342, 343, 344, 345, 355, 453], "spatial_dim": 275, "spatio": 304, "spec": 169, "special": [0, 1, 24, 206, 207, 208, 307, 394], "specif": [4, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 169, 209, 210, 211, 212, 213, 276, 285, 307, 310, 311, 312, 313, 332, 333, 334, 347, 357, 358, 365, 383, 394, 409, 429, 431, 452, 456, 462], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 170, 171, 172, 174, 176, 177, 178, 179, 180, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 222, 230, 237, 243, 244, 245, 247, 248, 253, 254, 255, 256, 257, 265, 267, 268, 275, 295, 299, 302, 303, 304, 305, 315, 322, 323, 324, 325, 326, 335, 337, 338, 339, 341, 342, 343, 344, 345, 347, 355, 358, 361, 365, 382, 389, 390, 391, 392, 393, 395, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 422, 429, 430, 431, 438, 439, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 478], "speech": 332, "speed": [96, 97, 288, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "split": [4, 85, 103, 110, 111, 173, 299, 447, 448, 450, 451, 466], "split_tensor": 459, "springer": 85, "sqrt": [30, 159, 216, 225, 250, 280, 281, 284, 285, 287, 299, 300, 328, 329, 330, 331, 332, 333, 334, 335, 351, 353, 371, 372, 373, 374, 376, 377, 378, 417, 419, 420], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 232, 245, 247, 308, 324, 325, 371, 372, 373, 378, 417, 436], "squaredataset": [0, 1, 2, 3], "squeez": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 275, 451], "sr_ratio": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "sra": 173, "src": [173, 349, 352, 353], "src_key_pad": 352, "src_key_padding_mask": [349, 353], "src_mask": [349, 352, 353], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 85, 232, 243, 244, 249, 250, 252, 253, 254, 265, 269, 270, 271, 292, 308, 322, 323, 328, 329, 330, 331, 332, 333, 334, 335, 347, 349, 351, 353, 359, 370, 371, 372, 373, 374, 375, 376, 377, 378, 470], "stabl": [198, 280, 281, 284, 285, 307, 323, 370, 374, 375, 378, 379, 380], "stack": [14, 213, 276, 349, 350, 352, 450, 451, 466, 478], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 85, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 159, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 366, "stand": 184, "standalon": 292, "standard": [15, 41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 161, 163, 165, 216, 218, 272, 273, 274, 280, 282, 284, 286, 287, 290, 307, 349, 379, 391, 394, 400, 467, 470, 478], "start": [1, 3, 10, 359, 370, 372, 379, 395, 407, 412, 469, 471], "state": [48, 85, 202, 206, 207, 208, 210, 213, 358, 363, 383, 385, 392], "state_dict": [207, 208, 358, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "static": 213, "statist": [24, 231, 249, 252], "std": [5, 6, 7, 8, 282, 467, 470, 478], "stem": [82, 85, 103, 112, 123, 140], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 15, 30, 208, 230, 276, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 407, 467, 468], "step_siz": [359, 361, 363, 367, 379], "step_size_down": 361, "step_size_up": 361, "steplr": [359, 363, 368], "still": [51, 371], "stochast": [39, 40, 59, 60, 77, 159, 174, 188, 189, 233, 309, 370, 380], "stochastic_depth": 59, "stop": [366, 407, 412], "storag": [209, 211], "store": [2, 4, 5, 6, 7, 8, 15, 112, 123, 140, 206, 207, 208, 209, 210, 211, 212, 275, 337, 338, 339, 385, 469, 470, 471, 472, 473, 474, 475, 476], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 207, 209, 211, 213, 243, 244, 245, 247, 248, 267, 315, 355, 358, 361, 363, 366, 386, 395, 453], "straightforward": [380, 383, 396], "strategi": [30, 85, 101, 197, 359, 363, 369], "streamlin": [2, 3, 85], "strength": [30, 308], "strict": [207, 358], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 161, 163, 165, 210, 213, 226, 227, 228, 230, 255, 256, 257, 258, 259, 260, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 305, 337, 338, 339, 340, 341, 342, 343, 344, 345], "stride_height": 230, "stride_width": 230, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 207, 209, 211, 213, 302, 303, 304, 315, 358, 382], "strong": [30, 178, 181, 184, 201], "stronger": [179, 183, 197], "structur": [0, 10, 13, 25, 30, 60, 92, 150, 173, 189, 206, 207, 210, 232, 308, 315, 357, 358, 386, 395, 411, 468], "student": 15, "studi": 15, "style": [10, 15, 82, 252, 332, 333, 395, 453], "sub": [209, 210, 211, 212, 213, 357, 417, 447, 459, 469, 471], "subclass": [1, 2, 3, 15, 207, 208, 209, 357, 358, 363], "sublay": [155, 349, 351, 353], "submodul": [155, 207, 357], "subsequ": [210, 213, 285, 394], "subset": [110, 111, 310, 311], "subspac": 299, "substanti": 203, "subtract": [406, 470], "suffer": 372, "suffix": 184, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 184, 185, 187, 199, 201, 280, 281, 284, 285, 359], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 157, 176, 181, 190, 191, 192, 193, 204, 324, 372, 373, 389], "sum": [10, 13, 15, 23, 209, 210, 211, 212, 213, 222, 225, 243, 244, 245, 247, 248, 254, 276, 295, 305, 322, 323, 324, 325, 326, 372, 395, 396, 399, 404, 417, 442, 444, 446, 448, 450, 453, 456, 459, 462, 466], "sum_": [12, 13, 22, 30, 222, 250, 295, 315, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 365, 398, 399, 430, 438, 442, 444, 446, 453, 456], "sum_i": [23, 404], "sum_j": 404, "sum_k": 400, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 340, 341, 342], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 365], "sun": 275, "super": [15, 155, 206, 207, 208, 209, 210, 211, 212, 233, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 307, 309, 310, 311, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 357, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386], "superior": [53, 85, 197], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 174, 209, 210, 211, 212, 213, 225, 267, 268, 300, 305, 347, 355, 357, 369, 376, 394, 395, 396, 397, 400, 401, 402, 403, 405, 406, 408, 411, 422, 427, 428, 430, 434, 436, 438, 442, 443, 444, 448, 453, 457, 459, 468, 478], "suppos": 478, "sure": [357, 478], "svd": [20, 24], "swap": [12, 315], "swapax": 417, "swin": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "swin_bas": 173, "swin_larg": 173, "swin_smal": 173, "swin_tini": 173, "swin_v2": 189, "swin_v2_bas": 173, "swin_v2_giant": 173, "swin_v2_hug": 173, "swin_v2_larg": 173, "swin_v2_smal": 173, "swin_v2_tini": 173, "swintransform": [190, 191, 192, 193], "swintransformer_v2": [194, 195, 196, 197, 198, 199], "swish": [96, 97, 298, 317], "symbol": [12, 13, 14, 315], "symmetr": [17, 255, 256, 257, 284, 285, 297], "syntax": [1, 10, 12, 13, 14, 315, 400], "system": [15, 16, 17, 24, 25, 26, 85, 100, 173, 383, 395, 453], "systemat": [85, 478], "szegedi": [74, 85], "t": [10, 15, 24, 30, 85, 159, 173, 349, 350, 351, 353, 360, 361, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 395, 400, 445, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "t0": 370, "t1": [395, 445], "t2": [395, 445], "t_": [350, 360], "t_0": 350, "t_cpu": 395, "t_i": 350, "t_max": 360, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 347], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 357, 478], "take": [25, 340, 341, 342, 343, 344, 345, 355, 364, 385, 467], "taken": 442, "tan": [85, 417], "tangent": [223, 297, 421, 440, 441], "tanh": [86, 210, 213, 216, 217, 239, 280, 281, 284, 285, 287, 298, 317, 417], "tanhnetwork": 297, "target": [5, 6, 7, 8, 51, 156, 157, 158, 213, 243, 244, 245, 247, 248, 255, 256, 257, 267, 322, 323, 324, 325, 326, 337, 338, 339, 349, 350, 351, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 446, 469, 471, 476], "target_tensor": [322, 323, 324, 325, 326], "target_transform": [5, 6, 7, 8], "task": [4, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 159, 161, 163, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 221, 222, 227, 240, 243, 244, 247, 248, 275, 276, 294, 295, 302, 303, 304, 322, 323, 324, 325, 326, 332, 333, 334, 340, 342, 343, 345, 349, 373, 384, 394, 411, 412, 478], "techniqu": [17, 21, 39, 60, 77, 85, 101, 152, 194, 196, 199, 233, 249, 307, 308, 310, 311, 312, 313, 332, 333, 334, 359, 369, 476, 478], "templat": 156, "tempor": [302, 304, 342, 345], "temporarili": 385, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 383, 385, 387, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "term": [12, 24, 52, 181, 182, 183, 185, 186, 187, 240, 269, 270, 271, 272, 273, 274, 299, 349, 351, 353, 370, 374, 376, 377, 378, 380], "test": [4, 5, 6, 7, 8, 412], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 159, 209, 215, 218, 219, 220, 222, 225, 226, 227, 228, 233, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 322, 323, 324, 325, 326, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 361, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 390, 395, 396, 397, 399, 401, 402, 403, 405, 406, 418, 422, 429, 430, 431, 433, 438, 439, 444, 446, 448, 450, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 469, 470, 471, 473, 474, 475], "tgt": [173, 349, 350, 351], "tgt_is_caus": [350, 351], "tgt_key_padding_mask": [349, 350, 351], "tgt_mask": [349, 350, 351], "tgt_vocab_s": [156, 157, 158], "th": [240, 322, 323, 325, 326, 332, 333, 334, 401, 402, 405], "than": [0, 1, 7, 12, 14, 211, 212, 215, 218, 245, 272, 273, 274, 286, 290, 296, 315, 324, 358, 365, 374, 412, 422, 442, 446, 447, 454, 461, 469, 471, 476], "thei": [0, 27, 85, 159, 206, 210, 212, 213, 299, 453, 457, 469, 471, 478], "them": [3, 10, 15, 85, 173, 207, 212, 230, 305, 370, 384, 448, 461, 467, 470, 478], "therebi": [307, 341, 342, 344, 345], "theta": [370, 371, 474], "theta_": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "theta_t": [377, 378], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 159, 161, 163, 165, 169, 170, 171, 172, 173, 176, 181, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 219, 221, 222, 223, 226, 227, 228, 230, 232, 233, 240, 242, 255, 265, 267, 268, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 347, 357, 359, 360, 361, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 399, 400, 404, 407, 409, 413, 414, 415, 416, 422, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 442, 443, 444, 445, 446, 447, 452, 454, 456, 457, 458, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "thing": 385, "third": [185, 186, 187], "those": [87, 88, 89, 212, 285], "three": [27, 89, 228, 257, 260, 264, 269, 270, 271, 304, 313, 330, 334, 339, 342, 345], "threshold": [24, 245, 324, 366], "threshold_mod": 366, "through": [0, 3, 4, 14, 19, 24, 25, 27, 28, 39, 73, 82, 85, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 159, 209, 210, 213, 232, 240, 242, 267, 275, 276, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 320, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 387, 391, 398, 399, 404, 453, 455, 457, 460, 463, 464, 465, 478], "throughout": [156, 188, 189, 200, 220, 468], "ti": [173, 205], "tier": 48, "tight": 184, "tile": [14, 451], "time": [0, 3, 15, 22, 87, 88, 89, 91, 226, 269, 290, 293, 299, 302, 340, 341, 342, 343, 344, 345, 350, 352, 359, 366, 370, 371, 372, 373, 374, 378, 380, 385, 456, 462], "tini": [43, 44, 52, 77, 81, 85, 168, 173, 180], "tinynet": 15, "to_tensor": [5, 6, 7, 8], "togeth": [213, 467, 478], "token": [77, 159, 173, 175, 182, 347], "token_mix": 77, "too": [15, 359, 379], "tool": [3, 357, 359, 384, 394, 467, 478], "top": [17, 18, 19, 25, 27, 48, 225, 240, 242, 267, 299, 300, 302, 303, 304, 318, 320, 469, 471], "topolog": 15, "torch": [145, 305, 445], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 299, 315, 395, 457], "totensor": [467, 478], "touch": 15, "trace": [16, 417], "track": [15, 269, 270, 271, 328, 329, 330, 332, 333, 334, 357, 383, 385, 387, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 439, 445, 446, 452, 468], "track_running_stat": [269, 270, 271, 328, 329, 330, 332, 333, 334], "trade": [43, 99], "tradit": [7, 10, 30, 85, 102, 159, 169, 173, 371, 372, 375, 376, 377], "trail": 253, "train": [1, 2, 3, 4, 5, 6, 7, 8, 30, 39, 60, 73, 74, 75, 85, 136, 137, 138, 139, 144, 155, 156, 173, 206, 207, 210, 212, 213, 222, 231, 232, 233, 234, 235, 236, 237, 249, 252, 265, 268, 287, 290, 293, 294, 295, 297, 307, 308, 309, 310, 311, 312, 313, 328, 329, 330, 332, 333, 334, 347, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 467, 470, 471, 472, 473, 474, 475, 478], "trainabl": [155, 328, 329, 330, 332, 333, 334, 347, 357], "transact": 275, "transfer": [252, 332, 333], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "transform_pipelin": [467, 478], "transformed_imag": [467, 478], "transformer_bas": 173, "transformer_big": 173, "transformer_decod": 350, "transformer_encod": 352, "transformerdecod": [317, 349, 354], "transformerdecoderlay": [317, 349, 350, 354], "transformerencod": [317, 349, 354], "transformerencoderlay": [317, 349, 352, 354], "transit": [30, 54, 324], "translat": [156, 341, 344, 349], "transpar": 15, "transpos": [12, 17, 417], "transposit": [12, 315], "treat": [0, 206, 335, 357], "triangular": [17, 25, 350, 351, 352, 353, 361, 463, 464], "triangular2": 361, "tril": 451, "triu": 451, "true": [1, 2, 3, 4, 5, 6, 7, 8, 15, 27, 73, 74, 75, 96, 97, 103, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 181, 182, 183, 184, 185, 186, 187, 188, 189, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 230, 231, 233, 234, 235, 236, 237, 240, 242, 249, 252, 265, 267, 269, 270, 271, 272, 273, 274, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 373, 374, 378, 382, 383, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468], "truli": 15, "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 478], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 207, 208, 226, 227, 228, 230, 253, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 302, 303, 304, 305, 319, 335, 338, 339, 340, 341, 342, 343, 344, 345, 355, 373, 374, 375, 376, 377, 379, 389, 390, 391, 393, 395, 409, 413, 415, 429, 430, 431, 438, 444, 446, 447, 448, 450, 453, 454, 457, 458, 459, 460, 461, 465, 466, 469, 470, 471, 476], "twice": 454, "two": [18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 226, 227, 228, 240, 259, 263, 275, 276, 303, 312, 318, 329, 333, 341, 344, 353, 373, 374, 375, 376, 377, 379, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 439, 442, 447, 453, 459], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 159, 169, 174, 175, 188, 189, 206, 207, 208, 240, 318, 349, 351, 353, 382, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 445, 453, 468], "typeerror": [0, 1, 2, 207, 358], "typic": [15, 16, 30, 93, 99, 112, 123, 140, 170, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 222, 231, 232, 268, 275, 292, 293, 295, 308, 309, 326, 328, 329, 330, 332, 333, 334, 369, 370, 378, 380, 385, 465, 468, 470, 474, 476, 478], "u": [24, 27, 281, 283, 285], "u_": 375, "ultra": [45, 118, 195], "unchang": [15, 206, 237, 286, 290, 291, 293, 307, 310, 311, 312, 313, 319, 455, 460], "uncontrol": 15, "undefin": 405, "under": [124, 125, 126, 127, 128, 129, 357], "underbrac": 22, "underdetermin": 24, "undergo": [233, 353, 478], "underli": [0, 69, 70, 71, 72, 74, 75, 76, 83, 84, 395, 439, 445, 450, 455, 457, 466], "understand": [15, 85, 152, 155, 170, 171, 172, 185, 186, 196, 213, 478], "understood": 12, "unexpect": [10, 207, 210, 213, 254, 394], "unfold": [229, 239, 306, 317], "unifi": [0, 15, 382], "uniform": [279, 281, 285, 302, 303, 304, 318, 320, 388, 389, 390, 394, 472, 473, 474, 475], "uniformli": [389, 393], "uniniti": [409, 410], "unintend": [10, 13, 385], "union": 145, "uniqu": [17, 24, 26, 209, 211, 347], "unit": [28, 86, 152, 215, 216, 218, 219, 220, 280, 281, 284, 285, 286, 287, 290, 291, 293, 307], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135], "unlik": [30, 169, 173, 188, 206, 209, 210, 211, 212, 218, 286, 290, 307, 335, 371, 372, 374, 375, 376, 377, 379], "unnecessari": [10, 385], "unpad": 454, "unseen": 478, "unspecifi": 382, "unsqueez": 451, "unstabl": 21, "unsur": 10, "until": 15, "up": [173, 358, 363, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 474, 476], "updat": [4, 40, 206, 212, 213, 307, 310, 311, 312, 313, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385], "upon": [40, 75, 85, 92, 93, 197, 199, 209, 210, 211, 212], "upper": [25, 283, 361, 379, 393, 463, 464], "upper_triangular": 464, "upsampl": [317, 356], "upstream": 15, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 159, 161, 163, 165, 169, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 240, 242, 247, 249, 250, 252, 254, 256, 257, 265, 267, 268, 269, 270, 271, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 355, 357, 358, 359, 360, 362, 364, 365, 367, 369, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 426, 429, 430, 431, 438, 439, 444, 452, 453, 454, 456, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 159, 210, 213, 233, 272, 273, 274, 300, 308, 358, 369, 412, 469, 470, 471, 472, 473, 474, 475, 476], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 209, 210, 211, 212, 357, 364, 372, 467, 468, 478], "usual": 323, "util": [3, 16, 30, 93, 141, 142, 143, 180, 197, 211, 212, 232, 357, 394], "v": [15, 19, 24, 27, 30, 85, 159, 175, 225, 299, 300, 351, 353, 373, 374, 376, 377, 408], "v1": [73, 74, 82, 83, 84, 85, 90, 91], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 173, 175, 181, 182, 183, 185, 186, 187, 194, 195, 196, 197, 198, 199], "v3": [73, 75, 76, 85, 92, 96, 97], "v4": [73, 76, 85, 93, 99, 100, 101, 102], "v_": [370, 373, 374, 376, 377, 378, 380], "v_2": 159, "v_i": 299, "v_stack": 466, "v_t": [377, 378], "val": 278, "val_loss": 366, "valid": [269, 270, 271, 272, 273, 274, 276, 302, 303, 304, 366, 443], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 159, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 207, 209, 211, 213, 215, 218, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 267, 268, 269, 270, 271, 275, 278, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 297, 299, 300, 307, 308, 309, 310, 311, 312, 313, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 355, 359, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 387, 389, 390, 391, 392, 393, 394, 407, 408, 409, 410, 411, 412, 418, 419, 420, 422, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437, 448, 452, 454, 455, 457, 465, 470, 472, 473, 475], "valuabl": 394, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 358], "van": 85, "vanish": [85, 286, 293, 328, 329, 330], "var": 417, "varepsilon": 254, "vari": [39, 140, 210, 212, 255, 267, 337, 361, 474], "variabl": [207, 213, 255, 256, 257, 319, 337, 338, 339, 357, 383, 385, 389, 409, 471, 474], "varianc": [220, 231, 249, 252, 269, 270, 271, 280, 281, 284, 285, 293, 307, 328, 329, 330, 332, 333, 334, 335, 373, 374, 375, 376, 377, 391, 444, 474, 478], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 162, 164, 166, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181, 182, 184, 186, 195, 373, 374, 375], "variat": [272, 273, 274, 332, 333, 334, 471, 478], "varieti": [4, 82, 103, 394, 478], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 85, 86, 93, 94, 102, 154, 174, 291, 369, 394, 412, 429, 431, 454, 468], "vasudevan": 85, "vaswani": [173, 349], "vdim": 299, "vdot": 404, "vector": [14, 19, 24, 25, 26, 27, 240, 242, 265, 299, 318, 320, 347, 398, 399, 400, 404], "veloc": [370, 378, 380], "verbos": [12, 360, 361, 362, 363, 364, 365, 366, 367], "veri": [24, 47, 85, 115, 117, 176, 371], "verifi": 10, "versa": 379, "versatil": [30, 102, 173, 394, 453], "version": [15, 27, 39, 73, 77, 82, 86, 87, 88, 99, 175, 177, 184, 305, 315, 378, 404, 458, 472], "vertic": [461, 466, 475], "vgg": 145, "vggnet": [146, 147, 148, 149], "vggnet_11": 85, "vggnet_13": 85, "vggnet_16": 85, "vggnet_19": 85, "via": [3, 4, 15, 102, 140, 395], "vice": 379, "video": [228, 237, 271, 304, 334, 342, 345], "view": [82, 86, 210, 341, 342, 343, 344, 345, 446, 457], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "visual": [85, 152, 159, 183], "vit": [30, 169, 188, 201, 202, 203, 204, 205], "vit_bas": 173, "vit_hug": 173, "vit_larg": 173, "vit_smal": 173, "vit_tini": 173, "vocabulari": [156, 157, 158, 347], "vol": 85, "vollgraf": 7, "volumetr": [228, 237, 271, 304, 334, 342, 345], "vstack": 451, "w": [10, 12, 13, 14, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 227, 228, 230, 232, 236, 237, 240, 242, 250, 256, 257, 259, 260, 263, 264, 267, 268, 270, 271, 275, 299, 302, 303, 304, 315, 318, 320, 329, 330, 331, 333, 334, 338, 339, 342, 345, 469, 471], "w24": [172, 173], "w_": [227, 228, 256, 257, 259, 260, 263, 264, 267, 303, 304, 305, 338, 339, 341, 342, 344, 345], "w_1": [351, 353], "w_2": [351, 353], "w_k": [30, 159], "w_out": [227, 228, 259, 260, 263, 264], "w_q": 159, "w_v": 159, "wa": [15, 74, 307, 310, 311, 312, 313, 385], "wai": [1, 10, 12, 14, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 315, 383, 385, 457], "wait": 366, "wang": [85, 173], "want": [0, 467, 469], "warn": [209, 211, 299], "we": [3, 384, 453], "wei": 85, "weight": [85, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 159, 174, 175, 188, 189, 225, 226, 227, 228, 240, 242, 243, 244, 248, 249, 252, 253, 265, 267, 275, 276, 280, 281, 284, 285, 299, 300, 302, 303, 304, 307, 308, 310, 311, 312, 313, 318, 320, 322, 323, 326, 328, 329, 330, 332, 333, 334, 335, 347, 349, 350, 351, 352, 353, 357, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 389, 394], "weight1": 211, "weight2": 211, "weight_decai": [370, 371, 372, 373, 374, 375, 376, 377, 378, 380], "weihao": 85, "weinberg": 85, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 184, 185, 199, 201, 280, 281, 305], "wenhai": 173, "were": 213, "weyand": 85, "what": [12, 14, 315, 385], "when": [0, 1, 3, 10, 13, 15, 22, 59, 85, 159, 207, 210, 212, 213, 215, 218, 226, 227, 228, 265, 286, 309, 319, 328, 329, 330, 332, 333, 334, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 371, 379, 383, 385, 386, 394, 405, 446, 467, 469], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 85, 96, 97, 98, 99, 100, 101, 150, 159, 184, 186, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 360, 361, 362, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 394, 395, 396, 397, 401, 402, 403, 405, 406, 409, 410, 422, 426, 427, 428, 429, 430, 431, 434, 436, 438, 442, 443, 444, 447, 448, 452, 454, 456, 459, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475], "wherev": 452, "whether": [1, 15, 18, 30, 59, 73, 74, 75, 96, 97, 103, 159, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 207, 208, 280, 281, 309, 378, 383, 387, 389, 390, 391, 393, 395, 409, 410, 429, 430, 431, 438, 444], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 85, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 156, 159, 161, 163, 165, 169, 173, 175, 179, 188, 190, 191, 192, 193, 207, 209, 211, 213, 218, 222, 245, 254, 268, 272, 273, 274, 276, 286, 287, 290, 292, 295, 297, 307, 324, 326, 328, 329, 330, 332, 333, 334, 335, 347, 351, 353, 365, 367, 373, 374, 376, 378, 383, 385, 389, 390, 393, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 440, 441, 442, 444, 446, 447, 448, 456, 457, 458, 459, 461, 463, 464, 465, 468, 469, 471, 472, 473, 474, 475, 476, 478], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 85, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 168, 169, 170, 171, 172, 173, 178, 179, 180, 182, 183, 184, 185, 189, 203, 210, 213, 231, 232, 287, 291, 292, 309, 350, 357, 360, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 385, 439, 452, 457, 461, 472, 478], "who": [209, 210, 211, 212], "whose": [27, 360, 361, 362, 363, 364, 365, 366, 367, 410, 414, 416, 418, 422, 426, 433, 439], "wide": [4, 5, 6, 8, 16, 24, 52, 85, 102, 112, 120, 121, 122, 198, 219, 291, 302, 303, 323], "wide_resnet_101": 85, "wide_resnet_50": 85, "wider": [43, 121, 122, 226, 227], "wideresnet": 85, "width": [30, 59, 60, 85, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 166, 227, 228, 230, 236, 237, 250, 256, 257, 259, 260, 263, 264, 267, 268, 276, 303, 304, 305, 329, 330, 331, 333, 334, 338, 339, 341, 342, 344, 345, 355, 382, 469, 471, 476], "width_coef": 59, "width_multipli": [90, 94], "window": [173, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 258, 259, 260, 262, 263, 264, 340, 341, 342, 343, 344, 345, 371, 429, 431], "windows_s": [188, 189], "wise": [10, 14, 85, 134, 136, 137, 138, 139, 215, 216, 218, 219, 220, 221, 222, 223, 233, 269, 270, 271, 275, 289, 295, 296, 307, 309, 310, 311, 312, 313, 357, 384, 396, 397, 400, 401, 402, 403, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 432, 433, 434, 435, 436, 437, 440, 441, 442, 450, 466], "within": [2, 85, 155, 156, 173, 188, 200, 206, 209, 210, 211, 212, 213, 223, 267, 268, 285, 287, 288, 289, 291, 293, 294, 296, 297, 302, 303, 304, 305, 307, 310, 311, 315, 319, 322, 323, 324, 325, 326, 328, 329, 330, 332, 335, 340, 341, 342, 343, 344, 345, 369, 385, 407, 422, 474, 478], "without": [10, 15, 123, 173, 209, 210, 211, 240, 242, 302, 303, 304, 318, 320, 383, 386, 429, 455, 457, 465], "won": 385, "word": [173, 265, 347], "workworkflow": [13, 394, 478], "worth": 173, "wrap": [3, 357, 359, 385, 395, 445], "wrapper": 357, "wu": 173, "www": [5, 6], "x": [15, 16, 26, 30, 82, 85, 86, 130, 145, 150, 155, 206, 207, 209, 210, 211, 212, 213, 222, 233, 240, 242, 254, 268, 272, 273, 274, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 351, 352, 353, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 389, 390, 391, 393, 409, 410, 426, 447, 452, 453, 458, 459, 463, 464, 469, 470, 471, 472, 473, 474, 475, 476], "x1": 318, "x2": 318, "x_": [30, 250, 323, 326, 331, 352, 453], "x_0": 352, "x_1": 159, "x_2": 159, "x_c": [323, 326], "x_i": [254, 322, 352, 395], "x_k": 323, "x_test": 15, "x_train": 15, "xavier": [280, 281, 284, 285], "xavier_norm": 279, "xavier_uniform": 279, "xiao": 7, "xie": 85, "xl": [72, 85], "xlarg": [53, 85], "xy": 453, "x\u2081": 318, "x\u2082": 318, "y": [15, 30, 85, 150, 209, 210, 211, 212, 213, 254, 268, 272, 273, 274, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 387, 389, 390, 391, 393, 395, 409, 410, 452, 453, 458, 472], "y1": 447, "y2": 447, "y_": [30, 250, 323, 326, 331, 453], "y_c": [323, 326], "y_i": [254, 322], "y_train": 15, "yann": [8, 85], "yet": [15, 50, 52, 100, 384], "yield": [0, 1, 207, 385], "you": [0, 12, 14, 15, 92, 155, 173, 210, 212, 213, 305, 315, 349, 357, 369, 383, 385, 394, 409, 410, 411, 416, 443, 445, 467, 469, 478], "your": [10, 15, 92, 100, 357, 369, 383, 385, 394, 478], "yu": 85, "z": [15, 85, 351, 353, 410, 415, 416], "zalandoresearch": 7, "ze": [85, 173], "zeiler": [85, 152], "zero": [22, 24, 25, 75, 155, 215, 218, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 254, 258, 259, 260, 262, 263, 264, 265, 278, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 299, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 335, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 357, 358, 371, 372, 373, 374, 375, 376, 377, 378, 409, 410, 411, 416, 417, 422, 433, 454, 463, 464], "zero_grad": [15, 208, 358, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395], "zeros_lik": [410, 417], "zhang": 85, "zhmoginov": 85, "zhu": 85, "zhuang": 85, "zihang": 85, "zisserman": 85, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "Transformers", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 384, "1d": 384, "2": 384, "2d": 384, "3": 384, "It": [383, 385], "The": 15, "ab": 418, "about": [161, 163, 165], "abstract": 15, "acceler": 15, "activ": [217, 239, 298, 317], "ad": 384, "adadelta": 371, "adagrad": 372, "adam": 373, "adamax": 375, "adamw": 374, "adaptive_avg_pool1d": 255, "adaptive_avg_pool2d": 256, "adaptive_avg_pool3d": 257, "adaptiveavgpool1d": 337, "adaptiveavgpool2d": 338, "adaptiveavgpool3d": 339, "add": 396, "addit": [24, 299], "advanc": [230, 478], "advantag": [10, 12, 13, 14, 315], "alexnet": [28, 29, 85], "algebra": 20, "algorithm": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "align": [15, 384], "alpha_dropout": 231, "alphadropout": 307, "also": 369, "anoth": 445, "arang": 407, "arcco": 419, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152, 159], "arcsin": 420, "arctan": 421, "asgd": 370, "attent": [224, 225, 239, 276, 301, 317], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 206, 208, 209, 210, 211, 212, 213, 269, 270, 271, 272, 273, 274, 275, 286, 287, 290, 291, 293, 294, 295, 297, 302, 303, 304, 307, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 382, 395, 469, 470, 471, 472, 473, 474, 475, 476], "autodiff": 15, "automat": 15, "avg_pool1d": 258, "avg_pool2d": 259, "avg_pool3d": 260, "avgpool1d": 340, "avgpool2d": 341, "avgpool3d": 342, "axi": [384, 439], "backend": 15, "backpropag": 395, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 232, 240, 242, 267, 275, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466], "base": [368, 395], "basic": 15, "batch_norm": 249, "batchnorm": 277, "batchnorm1d": 328, "batchnorm2d": 329, "batchnorm3d": 330, "bceloss": 322, "behavior": [255, 256, 257, 337, 338, 339], "benefit": 385, "bernoulli": 387, "between": [15, 395], "bilinear": [240, 318], "binari": 417, "binary_cross_entropi": 243, "bottleneck": [96, 97], "broadcast": [384, 446], "broadcast_to": 446, "buffer": 206, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 240, 242, 255, 256, 257, 267, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476], "captur": 386, "centercrop": 469, "choleski": 17, "chunk": 447, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 159, 169, 188, 189, 200, 206, 207, 208, 209, 210, 211, 212, 213, 269, 270, 271, 272, 273, 274, 275, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 395, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "clip": 422, "co": 423, "coatnet": [30, 85], "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 357], "compos": 467, "comput": [447, 452, 458], "concatdataset": [0, 1], "concaten": 448, "conclus": [3, 10, 12, 13, 14, 15, 315, 357, 359, 383, 384, 385, 394, 468, 478], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 278, "contain": 214, "conv": 277, "conv1d": [226, 302], "conv2d": [227, 303], "conv3d": [228, 304], "convbnrelu1d": 269, "convbnrelu2d": 270, "convbnrelu3d": 271, "convnet": 85, "convnext": [39, 85], "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [173, 229, 239, 277, 306, 317], "core": 15, "cosh": 424, "cosineannealinglr": 360, "creat": [208, 395, 445], "cross_entropi": 244, "crossentropyloss": 323, "crossvit": [159, 173], "crossvit_15": 160, "crossvit_15_dagg": 161, "crossvit_18": 162, "crossvit_18_dagg": 163, "crossvit_9": 164, "crossvit_9_dagg": 165, "crossvit_bas": 166, "crossvit_smal": 167, "crossvit_tini": 168, "cube": 425, "custom": [1, 2, 3, 207, 358, 369, 478], "cvt": [169, 173], "cvt_13": 170, "cvt_21": 171, "cvt_w24": 172, "cycliclr": 361, "dagger": [161, 163, 165], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 207, 358, 369], "definit": [12, 13, 14, 254, 315], "densenet": [54, 85], "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 272, "depthseparableconv2d": 273, "depthseparableconv3d": 274, "depthwis": 277, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 386], "design": 15, "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 159, 299, 349, 350, 351, 352, 353], "devic": [15, 395], "diag": 408, "differ": 156, "differenti": 15, "dilat": 230, "div": 397, "dot": 398, "drop_block": 232, "drop_path": 233, "dropblock": 308, "dropout": [234, 238, 239, 310, 314, 317], "dropout1d": [235, 311], "dropout2d": [236, 312], "dropout3d": [237, 313], "droppath": 309, "dtype": 395, "educ": 15, "efficientnet": [59, 85], "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 316, 317], "elu": [215, 286], "embed": [265, 347], "empti": 409, "empty_lik": 410, "enabl": 15, "enhanc": 175, "evalu": 15, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478], "excit": 277, "exp": 426, "exponentiallr": 362, "express": [250, 459], "ey": 411, "fashionmnist": 7, "featur": [4, 16, 136, 137, 138, 139, 144, 369, 394, 478], "flatten": 449, "formula": [360, 361, 362, 364, 365, 366, 367], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 230, 233, 240, 242, 255, 256, 257, 267, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 448, 450, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476], "free": 395, "from": [156, 445], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 280, 281, 282, 283, 284, 285, 383, 385, 386, 387, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "fuse": 277, "futur": 4, "gelu": [216, 287], "gener": [388, 417], "get": 369, "global_response_norm": 250, "globalresponsenorm": 331, "gpu": [15, 395], "grad_en": 383, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 232, 240, 242, 267, 275, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 340, 341, 342, 343, 344, 345, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466], "hardsigmoid": 288, "hardswish": 289, "hook": [15, 395], "how": [15, 383, 385], "hstack": 450, "huber_loss": 245, "huberloss": 324, "hybrid": 30, "hyperparamet": [110, 111], "ident": 319, "imag": [9, 477], "implement": 159, "incept": [73, 85], "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": [77, 85], "inceptionresnet": 82, "infer": 395, "init": [278, 280, 281, 282, 283, 284, 285], "initi": 279, "inner": 399, "input": 445, "inspect": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "instal": 15, "instance_norm": 252, "instancenorm1d": 332, "instancenorm2d": 333, "instancenorm3d": 334, "integr": [3, 357, 394, 478], "interpol": 267, "inv": 21, "kaiming_norm": 280, "kaiming_uniform": 281, "kei": [3, 4, 136, 137, 138, 139, 144, 175, 357, 369, 394, 478], "kernel": 277, "lambdalr": 364, "layer": [104, 105, 106, 107, 108, 109, 277, 298, 301, 306, 314, 316, 317, 321, 327, 336, 346, 348, 354, 356], "layer_norm": 253, "layernorm": 335, "leaky_relu": 218, "leakyrelu": 290, "learn": 394, "lenet": [85, 86], "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 239, 241, 242, 317, 320, 321], "linspac": 412, "list": 445, "load": 1, "log": 427, "log2": 428, "loss": [239, 246, 317, 327], "lr": 368, "lr_schedul": [359, 360, 361, 362, 363, 364, 365, 366, 367], "lrschedul": 363, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 239, 357, 369, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 478], "lucid\u00b2": 15, "masked_fil": 452, "mathemat": [12, 13, 14, 159, 250, 254, 299, 315, 349, 350, 351, 352, 353, 360, 361, 362, 364, 365, 366, 367, 395, 459], "matmul": 400, "matrix": 400, "matrix_pow": 22, "max": 429, "max_pool1d": 262, "max_pool2d": 263, "max_pool3d": 264, "maximum": 401, "maxpool1d": 343, "maxpool2d": 344, "maxpool3d": 345, "maxvit": 173, "mean": 430, "mechan": [225, 276], "meshgrid": 453, "metadata": 386, "metal": 15, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 207, 208, 349, 350, 351, 352, 353, 358, 360, 361, 362, 363, 364, 365, 366, 367, 382, 395], "min": 431, "minimum": 402, "mlx": 15, "mnist": 8, "mobilenet": [85, 90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 357], "modul": [207, 317], "moduledict": 209, "modulelist": 210, "more": 394, "move": 395, "mse_loss": 247, "mseloss": 325, "multiheadattent": 299, "multipl": [0, 400], "multipli": 403, "multisteplr": 365, "nadam": 376, "network": 15, "neural": 15, "new": 384, "newaxi": 384, "nll_loss": 248, "nllloss": 326, "nn": [15, 156, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 357], "no_grad": 385, "norm": 23, "normal": [239, 251, 254, 282, 317, 336, 470], "number": 388, "numer": 382, "ones": 413, "ones_lik": 414, "oper": [20, 400, 417], "optim": [358, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "option": 299, "organ": 357, "other": 15, "outer": 404, "overview": [3, 4, 10, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 299, 349, 350, 351, 352, 353, 357, 359, 369, 394, 478], "pad": 454, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 294, 295, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "parameterdict": 211, "parameterlist": 212, "pass": 150, "perform": 395, "pinv": 24, "pipelin": [3, 478], "pitfal": [383, 385], "pool": [239, 261, 317, 346], "potenti": [383, 385], "power": 405, "process": 265, "properti": [208, 395], "pvt": [173, 174], "pvt_huge": 176, "pvt_larg": 177, "pvt_medium": 178, "pvt_small": 179, "pvt_tini": 180, "pvt_v2": 175, "pvt_v2_b0": 181, "pvt_v2_b1": 182, "pvt_v2_b2": 183, "pvt_v2_b2_li": 184, "pvt_v2_b3": 185, "pvt_v2_b4": 186, "pvt_v2_b5": 187, "pyramid": 173, "qr": 25, "radam": 377, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 389, "randint": 390, "randn": 391, "random": [387, 388, 389, 390, 391, 392, 393, 394], "randomcrop": 471, "randomgrayscal": 472, "randomhorizontalflip": 473, "randomrot": 474, "randomverticalflip": 475, "ravel": 455, "rearrang": [10, 12, 315], "reciproc": 432, "reduc": [10, 13], "reducelronplateau": 366, "refer": [5, 6, 7, 8, 275, 369], "register_model": 386, "regular": 232, "relu": [219, 277, 291], "relu6": 292, "repeat": [10, 14, 456], "represent": [159, 382, 395], "reshap": 457, "resiz": 476, "resnest": [85, 103], "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": [85, 112], "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": [85, 123], "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 276, 278, 280, 281, 282, 283, 284, 285, 292, 315, 347, 383, 385, 387, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "rmsprop": 378, "roll": 458, "rotat": 268, "rprop": 379, "rule": [400, 439, 446], "scaled_dot_product_attent": 225, "scaleddotproductattent": 300, "schedul": 368, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 369, "seed": 392, "select": 277, "selectivekernel": 276, "selu": [220, 293], "semodul": 275, "senet": [85, 130], "separ": 277, "sequenti": 213, "sgd": 380, "shape": 15, "sigmoid": [221, 294], "sign": 433, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "sin": 434, "sinh": 435, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": [85, 140], "softmax": [222, 295], "solv": 26, "spars": [317, 348], "specif": [160, 161, 162, 163, 164, 165, 166, 167, 168], "split": 459, "sqrt": 436, "squar": 437, "squeez": [277, 460], "stack": 461, "start": 369, "state": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "steplr": 367, "sub": 406, "sum": 438, "summar": 155, "summari": 155, "svd": 27, "swap": 439, "swapax": 439, "swin": 173, "swin_bas": 190, "swin_larg": 191, "swin_smal": 192, "swin_tini": 193, "swin_v2_bas": 194, "swin_v2_giant": 195, "swin_v2_hug": 196, "swin_v2_larg": 197, "swin_v2_smal": 198, "swin_v2_tini": 199, "swintransform": 188, "swintransformer_v2": 189, "swish": 296, "switch": 15, "tabl": 155, "tan": 440, "tanh": [223, 297, 441], "tensor": [15, 384, 395, 417, 445, 451], "tile": 462, "totensor": 468, "trace": 442, "track": 395, "train": 15, "transform": [156, 173, 317, 349, 354, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 350, "transformerdecoderlay": 351, "transformerencod": 352, "transformerencoderlay": 353, "transpos": 443, "tril": 463, "triu": 464, "unari": 417, "unfold": [230, 305], "uniform": [283, 393], "unsqueez": 465, "upsampl": 355, "us": [1, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 395, 445], "usag": [4, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 206, 268, 299, 349, 350, 351, 352, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 382, 383, 384, 385, 453, 467, 468, 478], "util": [239, 266], "utilit": 451, "valu": 459, "var": 444, "variant": [161, 163, 165], "verif": 15, "vggnet": [85, 145], "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [173, 317, 356], "visual": 173, "vit": [173, 200], "vit_bas": 201, "vit_hug": 202, "vit_larg": 203, "vit_smal": 204, "vit_tini": 205, "vstack": 466, "weight": 279, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 383, 385], "xavier_norm": 284, "xavier_uniform": 285, "xception": [85, 150, 151], "zero": 415, "zeros_lik": 416, "zfnet": [85, 152, 153]}})