Search.setIndex({"alltitles": {"1-D ascending": [[525, null]], "@ Operator": [[469, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Accessing metadata & categories": [[572, "accessing-metadata-categories"]], "Activation Functions": [[260, null], [285, null]], "Activation Layers": [[354, null], [376, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[355, "additional-options"]], "Advanced Example with Dilation": [[276, "advanced-example-with-dilation"]], "Advanced Features": [[568, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [374, "advantages"]], "AlexNet": [[29, null], [108, "alexnet"], [571, "alexnet"]], "Algorithm": [[435, "algorithm"], [436, "algorithm"], [437, "algorithm"], [438, "algorithm"], [439, "algorithm"], [440, "algorithm"], [441, "algorithm"], [442, "algorithm"], [443, "algorithm"], [444, "algorithm"], [445, "algorithm"]], "Along axis, keeping dims": [[524, null]], "Architectural Differences": [[238, "architectural-differences"]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [92, "architecture"], [110, "architecture"], [111, "architecture"], [112, "architecture"], [113, "architecture"], [213, "architecture"], [219, "architecture"], [223, "architecture"], [224, "architecture"]], "Architecture Details": [[164, "architecture-details"], [165, "architecture-details"]], "Attention Functions": [[267, null], [285, null]], "Attention Layers": [[357, null], [376, null]], "Attention Mechanism": [[268, "attention-mechanism"], [331, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [105, "attributes"], [109, "attributes"], [155, "attributes"], [166, "attributes"], [173, "attributes"], [183, "attributes"], [200, "attributes"], [211, "attributes"], [213, "attributes"], [239, "attributes"], [242, "attributes"], [249, "attributes"], [251, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [255, "attributes"], [256, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [327, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [341, "attributes"], [342, "attributes"], [345, "attributes"], [347, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [353, "attributes"], [358, "attributes"], [359, "attributes"], [360, "attributes"], [361, "attributes"], [362, "attributes"], [363, "attributes"], [366, "attributes"], [368, "attributes"], [369, "attributes"], [370, "attributes"], [371, "attributes"], [372, "attributes"], [377, "attributes"], [379, "attributes"], [380, "attributes"], [382, "attributes"], [383, "attributes"], [384, "attributes"], [385, "attributes"], [386, "attributes"], [387, "attributes"], [389, "attributes"], [390, "attributes"], [391, "attributes"], [393, "attributes"], [394, "attributes"], [395, "attributes"], [396, "attributes"], [397, "attributes"], [399, "attributes"], [400, "attributes"], [401, "attributes"], [402, "attributes"], [403, "attributes"], [404, "attributes"], [405, "attributes"], [406, "attributes"], [407, "attributes"], [408, "attributes"], [409, "attributes"], [410, "attributes"], [447, "attributes"], [464, "attributes"], [559, "attributes"], [560, "attributes"], [561, "attributes"], [562, "attributes"], [563, "attributes"], [564, "attributes"], [565, "attributes"], [566, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[516, "axis-swapping-rules"]], "Backpropagation": [[393, null]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [370, "backward-gradient-calculation"], [371, "backward-gradient-calculation"], [372, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [378, "backward-gradient-calculation"], [379, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [465, "backward-gradient-calculation"], [466, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [470, "backward-gradient-calculation"], [471, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [473, "backward-gradient-calculation"], [474, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [476, "backward-gradient-calculation"], [490, "backward-gradient-calculation"], [491, "backward-gradient-calculation"], [492, "backward-gradient-calculation"], [493, "backward-gradient-calculation"], [495, "backward-gradient-calculation"], [496, "backward-gradient-calculation"], [497, "backward-gradient-calculation"], [498, "backward-gradient-calculation"], [499, "backward-gradient-calculation"], [500, "backward-gradient-calculation"], [501, "backward-gradient-calculation"], [503, "backward-gradient-calculation"], [504, "backward-gradient-calculation"], [505, "backward-gradient-calculation"], [506, "backward-gradient-calculation"], [507, "backward-gradient-calculation"], [508, "backward-gradient-calculation"], [510, "backward-gradient-calculation"], [511, "backward-gradient-calculation"], [512, "backward-gradient-calculation"], [513, "backward-gradient-calculation"], [514, "backward-gradient-calculation"], [515, "backward-gradient-calculation"], [516, "backward-gradient-calculation"], [517, "backward-gradient-calculation"], [518, "backward-gradient-calculation"], [519, "backward-gradient-calculation"], [520, "backward-gradient-calculation"], [521, "backward-gradient-calculation"], [526, "backward-gradient-calculation"], [528, "backward-gradient-calculation"], [534, "backward-gradient-calculation"], [537, "backward-gradient-calculation"], [539, "backward-gradient-calculation"], [540, "backward-gradient-calculation"], [541, "backward-gradient-calculation"], [542, "backward-gradient-calculation"], [546, "backward-gradient-calculation"], [547, "backward-gradient-calculation"], [548, "backward-gradient-calculation"], [550, "backward-gradient-calculation"], [551, "backward-gradient-calculation"], [552, "backward-gradient-calculation"], [554, "backward-gradient-calculation"], [555, "backward-gradient-calculation"]], "Backward Propagation": [[239, "backward-propagation"], [242, "backward-propagation"]], "Base Class": [[433, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[303, "behavior"], [304, "behavior"], [305, "behavior"], [306, "behavior"], [307, "behavior"], [308, "behavior"], [399, "behavior"], [400, "behavior"], [401, "behavior"], [402, "behavior"], [403, "behavior"], [404, "behavior"], [453, "behavior"], [454, "behavior"]], "Benefits": [[448, "benefits"], [451, "benefits"]], "Binary Functions": [[489, null]], "Bottleneck Configuration": [[125, "bottleneck-configuration"], [126, "bottleneck-configuration"]], "Broadcasting Rules": [[526, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "CSPNet": [[65, null], [108, "cspnet"]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [73, "class-signature"], [78, "class-signature"], [79, "class-signature"], [92, "class-signature"], [96, "class-signature"], [100, "class-signature"], [105, "class-signature"], [109, "class-signature"], [113, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [146, "class-signature"], [155, "class-signature"], [166, "class-signature"], [173, "class-signature"], [183, "class-signature"], [188, "class-signature"], [189, "class-signature"], [200, "class-signature"], [205, "class-signature"], [211, "class-signature"], [213, "class-signature"], [215, "class-signature"], [216, "class-signature"], [219, "class-signature"], [223, "class-signature"], [224, "class-signature"], [236, "class-signature"], [239, "class-signature"], [242, "class-signature"], [246, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [355, "class-signature"], [356, "class-signature"], [358, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [374, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [389, "class-signature"], [390, "class-signature"], [391, "class-signature"], [392, "class-signature"], [393, "class-signature"], [394, "class-signature"], [395, "class-signature"], [396, "class-signature"], [397, "class-signature"], [399, "class-signature"], [400, "class-signature"], [401, "class-signature"], [402, "class-signature"], [403, "class-signature"], [404, "class-signature"], [405, "class-signature"], [406, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [410, "class-signature"], [412, "class-signature"], [414, "class-signature"], [415, "class-signature"], [416, "class-signature"], [417, "class-signature"], [418, "class-signature"], [420, "class-signature"], [423, "class-signature"], [425, "class-signature"], [426, "class-signature"], [427, "class-signature"], [428, "class-signature"], [429, "class-signature"], [430, "class-signature"], [431, "class-signature"], [432, "class-signature"], [435, "class-signature"], [436, "class-signature"], [437, "class-signature"], [438, "class-signature"], [439, "class-signature"], [440, "class-signature"], [441, "class-signature"], [442, "class-signature"], [443, "class-signature"], [444, "class-signature"], [445, "class-signature"], [447, "class-signature"], [464, "class-signature"], [557, "class-signature"], [558, "class-signature"], [559, "class-signature"], [560, "class-signature"], [561, "class-signature"], [562, "class-signature"], [563, "class-signature"], [564, "class-signature"], [565, "class-signature"], [566, "class-signature"]], "Classes": [[232, null]], "CoAtNet": [[31, null], [108, "coatnet"]], "Combining multiple datasets": [[0, null]], "Common Pitfalls": [[572, "common-pitfalls"]], "Computer Vision": [[218, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [374, "conclusion"], [422, "conclusion"], [424, "conclusion"], [449, "conclusion"], [450, "conclusion"], [463, "conclusion"], [558, "conclusion"], [568, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[78, "configurations"]], "Constructor": [[225, "constructor"], [226, "constructor"], [227, "constructor"], [228, "constructor"]], "Containers": [[257, null]], "Conv-BatchNorm-ReLU": [[332, null]], "ConvNeXt": [[40, null], [108, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[275, null], [285, null]], "Convolution Layers": [[365, null], [376, null]], "Convolutional Transformer (CvT)": [[108, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[522, null]], "Creating a Parameter": [[251, null]], "Creating a tensor on GPU with gradient tracking": [[464, null]], "CrossViT": [[55, null], [108, "crossvit"]], "Currently Available": [[570, "currently-available"]], "Custom / user-provided weights": [[572, "custom-user-provided-weights"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[568, "custom-pipelines"]], "CvT": [[69, null]], "DDPM": [[216, null], [217, "ddpm"]], "Darknet-19 Integration": [[239, "darknet-19-integration"]], "Defining a Custom Optimizer": [[434, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[250, null]], "Defining a custom optimizer": [[423, null]], "DenseNet": [[73, null], [108, "densenet"], [571, "densenet"]], "Depthwise Separable Convolution": [[332, null]], "Descending, heapsort kernel": [[525, null]], "Description": [[167, "description"], [168, "description"], [169, "description"], [170, "description"], [171, "description"], [172, "description"], [184, "description"], [185, "description"], [186, "description"], [452, "description"]], "Details": [[127, "details"], [128, "details"], [129, "details"], [130, "details"], [131, "details"]], "Device & caching": [[572, "device-caching"]], "Device-based dtype inference": [[464, null]], "Differences from nn.Transformer": [[246, "differences-from-nn-transformer"]], "Dropout Functions": [[284, null], [285, null]], "Dropout Layers": [[373, null], [376, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientFormer": [[92, null], [108, "efficientformer"]], "EfficientNet": [[78, null], [108, "efficientnet"]], "EfficientNet Configurations": [[78, "id1"]], "EfficientNet_V2": [[79, null]], "Einops Functions": [[12, null]], "Einops Layers": [[375, null], [376, null]], "Embedding Process": [[319, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [101, "example"], [102, "example"], [103, "example"], [104, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [123, "example"], [124, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [231, "example"], [233, "example"], [234, "example"], [276, "example"], [422, null], [422, null], [422, null], [449, "example"], [455, "example"], [457, "example"], [458, "example"], [459, "example"], [460, "example"], [461, "example"], [462, "example"], [463, null], [463, null], [463, null], [477, "example"], [478, "example"], [479, "example"], [480, "example"], [481, "example"], [485, "example"], [486, "example"], [487, "example"], [488, "example"], [490, "example"], [491, "example"], [492, "example"], [493, "example"], [495, "example"], [496, "example"], [497, "example"], [498, "example"], [499, "example"], [500, "example"], [503, "example"], [504, "example"], [506, "example"], [508, "example"], [510, "example"], [511, "example"], [512, "example"], [513, "example"], [514, "example"], [515, "example"], [517, "example"], [518, "example"], [519, "example"], [520, "example"], [521, "example"], [527, "example"], [528, "example"], [531, "example"], [532, "example"], [533, "example"], [534, "example"], [540, "example"], [542, "example"], [544, "example"], [546, "example"], [547, "example"], [549, "example"], [550, "example"], [551, "example"], [554, "example"], [555, "example"], [556, "example"], [569, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[450, null]], "Example 2: Adding a new axis to a 2D tensor": [[450, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[450, null]], "Example Usage": [[97, "example-usage"], [98, "example-usage"], [99, "example-usage"], [106, "example-usage"], [107, "example-usage"], [109, "example-usage"], [110, "example-usage"], [111, "example-usage"], [112, "example-usage"], [179, "example-usage"], [180, "example-usage"], [181, "example-usage"], [182, "example-usage"], [187, "example-usage"], [239, "example-usage"], [240, "example-usage"], [241, "example-usage"], [242, "example-usage"], [243, "example-usage"], [244, "example-usage"], [323, "example-usage"], [557, "example-usage"], [558, "example-usage"], [568, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [100, "examples"], [113, "examples"], [121, "examples"], [125, "examples"], [126, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [223, "examples"], [224, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [258, "examples"], [259, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [286, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [317, "examples"], [319, "examples"], [321, "examples"], [322, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [333, "examples"], [335, "examples"], [336, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [356, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [370, "examples"], [371, "examples"], [372, "examples"], [374, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [389, "examples"], [390, "examples"], [391, "examples"], [392, "examples"], [393, "examples"], [394, "examples"], [395, "examples"], [396, "examples"], [397, "examples"], [399, "examples"], [400, "examples"], [401, "examples"], [402, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [406, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [412, "examples"], [420, "examples"], [423, "examples"], [434, "examples"], [435, "examples"], [436, "examples"], [437, "examples"], [438, "examples"], [439, "examples"], [440, "examples"], [441, "examples"], [442, "examples"], [443, "examples"], [444, "examples"], [445, "examples"], [448, "examples"], [451, "examples"], [452, "examples"], [453, "examples"], [454, "examples"], [464, "examples"], [465, "examples"], [466, "examples"], [467, "examples"], [468, "examples"], [470, "examples"], [471, "examples"], [472, "examples"], [473, "examples"], [474, "examples"], [475, "examples"], [476, "examples"], [482, "examples"], [483, "examples"], [484, "examples"], [494, "examples"], [501, "examples"], [502, "examples"], [505, "examples"], [507, "examples"], [509, "examples"], [516, "examples"], [522, "examples"], [523, "examples"], [524, "examples"], [525, "examples"], [526, "examples"], [529, "examples"], [530, "examples"], [536, "examples"], [537, "examples"], [538, "examples"], [539, "examples"], [541, "examples"], [543, "examples"], [545, "examples"], [548, "examples"], [552, "examples"], [553, "examples"], [559, "examples"], [560, "examples"], [561, "examples"], [562, "examples"], [563, "examples"], [564, "examples"], [565, "examples"], [566, "examples"]], "FashionMNIST": [[7, null]], "Fast R-CNN": [[222, "fast-r-cnn"], [223, null]], "Faster R-CNN": [[219, null], [222, "faster-r-cnn"]], "Features": [[17, "features"]], "Flattened maximum index": [[523, null]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [155, "forward-calculation"], [166, "forward-calculation"], [173, "forward-calculation"], [183, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [276, "forward-calculation"], [279, "forward-calculation"], [286, "forward-calculation"], [288, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [321, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [356, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [391, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [395, "forward-calculation"], [396, "forward-calculation"], [397, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [465, "forward-calculation"], [466, "forward-calculation"], [467, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [471, "forward-calculation"], [472, "forward-calculation"], [473, "forward-calculation"], [474, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"], [490, "forward-calculation"], [491, "forward-calculation"], [492, "forward-calculation"], [493, "forward-calculation"], [495, "forward-calculation"], [496, "forward-calculation"], [497, "forward-calculation"], [498, "forward-calculation"], [499, "forward-calculation"], [500, "forward-calculation"], [501, "forward-calculation"], [503, "forward-calculation"], [504, "forward-calculation"], [505, "forward-calculation"], [506, "forward-calculation"], [507, "forward-calculation"], [508, "forward-calculation"], [510, "forward-calculation"], [511, "forward-calculation"], [512, "forward-calculation"], [513, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [517, "forward-calculation"], [518, "forward-calculation"], [519, "forward-calculation"], [520, "forward-calculation"], [521, "forward-calculation"], [528, "forward-calculation"], [534, "forward-calculation"], [537, "forward-calculation"], [539, "forward-calculation"], [540, "forward-calculation"], [541, "forward-calculation"], [542, "forward-calculation"], [546, "forward-calculation"], [547, "forward-calculation"], [548, "forward-calculation"], [550, "forward-calculation"], [551, "forward-calculation"], [554, "forward-calculation"], [555, "forward-calculation"], [559, "forward-calculation"], [560, "forward-calculation"], [561, "forward-calculation"], [562, "forward-calculation"], [563, "forward-calculation"], [564, "forward-calculation"], [565, "forward-calculation"], [566, "forward-calculation"]], "Forward Computation": [[298, "forward-computation"]], "Forward Input & Output": [[225, "forward-input-output"]], "Forward Method": [[414, "forward-method"], [415, "forward-method"], [416, "forward-method"], [417, "forward-method"], [418, "forward-method"]], "Forward Noise Process": [[216, "forward-noise-process"]], "Forward Pass": [[211, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [212, "function-signature"], [214, "function-signature"], [220, "function-signature"], [221, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [233, "function-signature"], [234, "function-signature"], [237, "function-signature"], [238, "function-signature"], [240, "function-signature"], [241, "function-signature"], [243, "function-signature"], [244, "function-signature"], [247, "function-signature"], [248, "function-signature"], [258, "function-signature"], [259, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [286, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [319, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"], [333, "function-signature"], [335, "function-signature"], [336, "function-signature"], [337, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [448, "function-signature"], [449, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [502, "function-signature"], [503, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [509, "function-signature"], [510, "function-signature"], [511, "function-signature"], [512, "function-signature"], [513, "function-signature"], [514, "function-signature"], [515, "function-signature"], [516, "function-signature"], [517, "function-signature"], [518, "function-signature"], [519, "function-signature"], [520, "function-signature"], [521, "function-signature"], [522, "function-signature"], [523, "function-signature"], [524, "function-signature"], [525, "function-signature"], [526, "function-signature"], [527, "function-signature"], [528, "function-signature"], [529, "function-signature"], [530, "function-signature"], [531, "function-signature"], [532, "function-signature"], [533, "function-signature"], [534, "function-signature"], [536, "function-signature"], [537, "function-signature"], [538, "function-signature"], [539, "function-signature"], [540, "function-signature"], [541, "function-signature"], [542, "function-signature"], [543, "function-signature"], [544, "function-signature"], [545, "function-signature"], [546, "function-signature"], [547, "function-signature"], [548, "function-signature"], [549, "function-signature"], [550, "function-signature"], [551, "function-signature"], [552, "function-signature"], [553, "function-signature"], [554, "function-signature"], [555, "function-signature"], [556, "function-signature"], [569, "function-signature"]], "Functions": [[232, null]], "Fused Layers": [[332, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[434, "getting-started"]], "Global minimum index": [[524, null]], "Gradient Calculation": [[556, "gradient-calculation"]], "Gradient Computation": [[527, "gradient-computation"], [536, "gradient-computation"], [543, "gradient-computation"], [544, "gradient-computation"], [549, "gradient-computation"]], "Gradient hooks": [[464, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[449, "how-it-works"]], "How Model Factories Use Weights": [[572, "how-model-factories-use-weights"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[153, "hyperparameter-configuration"], [154, "hyperparameter-configuration"]], "Image Classification": [[108, null]], "Image Datasets": [[9, null]], "Image Generation": [[217, null]], "Image Transformations": [[567, null]], "Implementation Details": [[55, "implementation-details"], [113, "implementation-details"]], "Inception": [[96, null], [108, "inception"]], "Inception-ResNet": [[108, "inception-resnet"]], "InceptionNeXt": [[100, null], [108, "inceptionnext"]], "InceptionResNet": [[105, null]], "Input & Output": [[226, "input-output"], [227, "input-output"]], "Input Format": [[236, "input-format"], [239, "input-format"], [242, "input-format"]], "Inspecting Optimizer State": [[434, null], [435, null], [436, null], [437, null], [438, null], [439, null], [440, null], [441, null], [442, null], [443, null], [444, null], [445, null]], "Integration with lucid": [[3, "integration-with-lucid"], [422, "integration-with-lucid"], [463, "integration-with-lucid"], [568, "integration-with-lucid"]], "Key Characteristics": [[65, "key-characteristics"]], "Key Components": [[3, "key-components"], [422, "key-components"]], "Key Enhancements": [[133, "key-enhancements"]], "Key Features": [[4, "key-features"], [179, "key-features"], [180, "key-features"], [181, "key-features"], [182, "key-features"], [187, "key-features"], [434, "key-features"], [463, "key-features"]], "Key Transformations": [[568, "key-transformations"]], "LR Schedulers": [[433, null]], "Layer Configuration": [[147, "layer-configuration"], [148, "layer-configuration"], [149, "layer-configuration"], [150, "layer-configuration"], [151, "layer-configuration"], [152, "layer-configuration"]], "LeNet": [[108, "lenet"], [109, null], [571, "lenet"]], "Learn More": [[463, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[285, null], [287, null]], "Linear Layers": [[376, null], [381, null]], "Loading Pretrained Weights": [[16, "loading-pretrained-weights"]], "Loading a custom dataset": [[1, null]], "Loss Components": [[215, "loss-components"]], "Loss Dictionary": [[219, "loss-dictionary"]], "Loss Formula": [[236, "loss-formula"]], "Loss Functions": [[285, null], [293, null]], "Loss Layers": [[376, null], [388, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [302, "mathematical-definition"], [374, "mathematical-definition"]], "Mathematical Details": [[355, "mathematical-details"], [414, "mathematical-details"], [415, "mathematical-details"], [416, "mathematical-details"], [417, "mathematical-details"], [418, "mathematical-details"]], "Mathematical Expression": [[297, "mathematical-expression"], [494, "mathematical-expression"], [502, "mathematical-expression"], [509, "mathematical-expression"], [545, "mathematical-expression"]], "Mathematical Formula": [[425, "mathematical-formula"], [426, "mathematical-formula"], [427, "mathematical-formula"], [429, "mathematical-formula"], [430, "mathematical-formula"], [431, "mathematical-formula"], [432, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [113, "mathematical-representation"], [464, "mathematical-representation"]], "Mathematics": [[529, "mathematics"]], "Matrix Multiplication Rules": [[469, "matrix-multiplication-rules"]], "Max index by row": [[523, null]], "MaxViT": [[108, "maxvit"], [113, null]], "Metadata Captured": [[452, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [105, "methods"], [109, "methods"], [200, "methods"], [215, "methods"], [216, "methods"], [236, "methods"], [239, "methods"], [242, "methods"], [250, "methods"], [251, "methods"], [423, "methods"], [425, "methods"], [426, "methods"], [427, "methods"], [428, "methods"], [429, "methods"], [430, "methods"], [431, "methods"], [432, "methods"], [447, "methods"], [464, "methods"]], "MobileNet": [[108, "mobilenet"], [119, null], [571, "mobilenet"]], "MobileNet_V2": [[120, null]], "MobileNet_V3": [[121, null]], "MobileNet_V4": [[122, null]], "Model Configuration": [[114, "model-configuration"], [115, "model-configuration"], [116, "model-configuration"], [117, "model-configuration"], [118, "model-configuration"]], "Module Output Requirements": [[215, "module-output-requirements"]], "Modules": [[376, null]], "Moving tensor between devices": [[464, null]], "Multi-Scale Detection": [[242, "multi-scale-detection"]], "Natural Language Processing": [[218, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[285, null], [299, null]], "Normalization Layers": [[376, null], [398, null]], "Notes": [[11, "notes"], [317, "notes"], [482, "notes"], [483, "notes"]], "Object Detection Utilities": [[232, null]], "Object detection": [[222, null]], "One-Hot Encoding Logic": [[322, "one-hot-encoding-logic"]], "Optimizers": [[446, null]], "Organizing Models": [[422, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [96, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [105, "overview"], [106, "overview"], [107, "overview"], [109, "overview"], [110, "overview"], [111, "overview"], [112, "overview"], [119, "overview"], [120, "overview"], [121, "overview"], [122, "overview"], [127, "overview"], [128, "overview"], [129, "overview"], [130, "overview"], [131, "overview"], [156, "overview"], [157, "overview"], [158, "overview"], [159, "overview"], [160, "overview"], [161, "overview"], [162, "overview"], [163, "overview"], [174, "overview"], [175, "overview"], [176, "overview"], [177, "overview"], [178, "overview"], [355, "overview"], [414, "overview"], [415, "overview"], [416, "overview"], [417, "overview"], [418, "overview"], [422, "overview"], [424, "overview"], [434, "overview"], [448, "overview"], [451, "overview"], [463, "overview"], [568, "overview"], [572, "overview"]], "PVT": [[132, null]], "PVT_V2": [[133, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [109, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [233, "parameters"], [234, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [258, "parameters"], [259, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [286, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [319, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [333, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [345, "parameters"], [347, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [374, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [420, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [447, "parameters"], [448, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [503, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"], [534, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [540, "parameters"], [541, "parameters"], [542, "parameters"], [543, "parameters"], [544, "parameters"], [545, "parameters"], [546, "parameters"], [547, "parameters"], [548, "parameters"], [549, "parameters"], [550, "parameters"], [551, "parameters"], [552, "parameters"], [553, "parameters"], [554, "parameters"], [555, "parameters"], [556, "parameters"], [557, "parameters"], [558, "parameters"], [559, "parameters"], [560, "parameters"], [561, "parameters"], [562, "parameters"], [563, "parameters"], [564, "parameters"], [565, "parameters"], [566, "parameters"], [569, "parameters"]], "Performance / FLOPs": [[525, "performance-flops"]], "Performing backpropagation": [[464, null]], "Pooling Functions": [[285, null], [312, null]], "Pooling Layers": [[376, null], [411, null]], "Potential Pitfalls": [[449, "potential-pitfalls"]], "Pre-Trained Weights": [[571, null]], "Prediction Output": [[239, "prediction-output"], [242, "prediction-output"]], "Properties": [[251, "properties"], [464, "properties"]], "Pyramid Vision Transformer (PVT)": [[108, "pyramid-vision-transformer-pvt"]], "Quickstart Examples": [[572, "quickstart-examples"]], "R-CNN": [[222, "r-cnn"], [224, null]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[456, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [330, "references"], [434, "references"]], "Regularization": [[278, "regularization"]], "Representation": [[447, "representation"]], "ResNeSt": [[108, "resnest"], [146, null]], "ResNeXt": [[108, "resnext"], [166, null], [571, "resnext"]], "ResNet": [[108, "resnet"], [155, null], [571, "resnet"]], "Return Values": [[545, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [212, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [220, "returns"], [221, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [233, "returns"], [234, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [240, "returns"], [241, "returns"], [243, "returns"], [244, "returns"], [247, "returns"], [248, "returns"], [258, "returns"], [259, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [286, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [319, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [331, "returns"], [333, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [348, "returns"], [374, "returns"], [412, "returns"], [448, "returns"], [449, "returns"], [451, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [465, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [502, "returns"], [503, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [511, "returns"], [512, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [516, "returns"], [517, "returns"], [518, "returns"], [519, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [523, "returns"], [524, "returns"], [525, "returns"], [526, "returns"], [527, "returns"], [528, "returns"], [529, "returns"], [530, "returns"], [531, "returns"], [532, "returns"], [533, "returns"], [534, "returns"], [536, "returns"], [537, "returns"], [538, "returns"], [539, "returns"], [540, "returns"], [541, "returns"], [542, "returns"], [543, "returns"], [544, "returns"], [546, "returns"], [547, "returns"], [548, "returns"], [549, "returns"], [550, "returns"], [551, "returns"], [552, "returns"], [553, "returns"], [554, "returns"], [555, "returns"], [556, "returns"], [569, "returns"]], "Reverse Denoising Process": [[216, "reverse-denoising-process"]], "SENet": [[108, "senet"], [173, null]], "SKNet": [[108, "sknet"], [183, null]], "Schedulers": [[433, null]], "See Also": [[434, "see-also"]], "Selective Kernel": [[332, null]], "Sequence-to-Sequence": [[245, null]], "Sparse Layers": [[376, null], [413, null]], "Spatial Functions": [[285, null], [318, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"], [93, "specifications"], [94, "specifications"], [95, "specifications"]], "Squeeze-and-Excitation": [[332, null]], "Stable sort with duplicates": [[525, null]], "Swin Transformer": [[108, "swin-transformer"]], "SwinTransformer": [[188, null]], "SwinTransformer_V2": [[189, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Tensor Contraction Rules": [[476, "tensor-contraction-rules"]], "Tensor Generating Functions": [[489, null]], "Tensor Operations": [[489, null]], "Tensor Utilities": [[535, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Training Notes": [[220, "training-notes"], [221, "training-notes"], [237, "training-notes"], [238, "training-notes"]], "Training Objective": [[216, "training-objective"]], "Transformer": [[245, "transformer"], [246, null]], "Transformer Layers": [[376, null], [419, null]], "Typical API Surface": [[572, "typical-api-surface"]], "Unary Functions": [[489, null]], "Usage": [[4, "usage"], [88, "usage"], [89, "usage"], [90, "usage"], [91, "usage"], [249, "usage"], [323, "usage"], [424, "usage"], [449, "usage"], [450, "usage"], [537, "usage"], [557, "usage"], [558, "usage"], [568, "usage"]], "Usage Example": [[127, "usage-example"], [128, "usage-example"], [129, "usage-example"], [130, "usage-example"], [131, "usage-example"], [355, "usage-example"], [414, "usage-example"], [415, "usage-example"], [416, "usage-example"], [417, "usage-example"], [418, "usage-example"], [425, "usage-example"], [426, "usage-example"], [427, "usage-example"], [428, "usage-example"], [429, "usage-example"], [430, "usage-example"], [431, "usage-example"], [432, "usage-example"]], "Usage Examples": [[447, "usage-examples"]], "Use Cases": [[65, "use-cases"]], "Use another Tensor as input": [[522, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using YOLO-V2 with a custom backbone": [[239, null]], "Using YOLO-V2 with default Darknet-19": [[239, null]], "Using YOLO-V3 with default anchors and backbone": [[242, null]], "Using free tensors": [[464, null]], "Using the ASGD Optimizer": [[435, null]], "Using the Adadelta Optimizer": [[436, null]], "Using the Adagrad Optimizer": [[437, null]], "Using the Adam Optimizer": [[438, null]], "Using the AdamW Optimizer": [[439, null]], "Using the Adamax Optimizer": [[440, null]], "Using the NAdam Optimizer": [[441, null]], "Using the RAdam Optimizer": [[442, null]], "Using the RMSprop Optimizer": [[443, null]], "Using the Rprop Optimizer": [[444, null]], "Using the SGD Optimizer": [[445, null]], "Utility Functions": [[285, null], [320, null]], "VAE": [[215, null]], "VGGNet": [[108, "vggnet"], [200, null], [571, "vggnet"]], "Variational Autoencoder (VAE)": [[217, "variational-autoencoder-vae"]], "Verification": [[16, "verification"]], "ViT": [[205, null]], "Vision Layers": [[376, null], [421, null]], "Visual Transformer (ViT)": [[108, "visual-transformer-vit"]], "Weight Initializations": [[334, null]], "Xception": [[108, "xception"], [211, null]], "YOLO": [[222, "yolo"]], "YOLO Series": [[235, null]], "YOLO-v1": [[222, "yolo-v1"], [236, null]], "YOLO-v2": [[222, "yolo-v2"], [239, null]], "YOLO-v2 Loss": [[239, "yolo-v2-loss"]], "YOLO-v3": [[222, "yolo-v3"], [242, null]], "YOLO-v3 Loss": [[242, "yolo-v3-loss"]], "YOLO-v4": [[222, "yolo-v4"]], "ZFNet": [[108, "zfnet"], [213, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "csp_darknet_53": [[66, null]], "csp_resnet_50": [[67, null]], "csp_resnext_50_32x4d": [[68, null]], "cvt_13": [[70, null]], "cvt_21": [[71, null]], "cvt_w24": [[72, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[74, null]], "densenet_169": [[75, null]], "densenet_201": [[76, null]], "densenet_264": [[77, null]], "efficientformer_l1": [[93, null]], "efficientformer_l3": [[94, null]], "efficientformer_l7": [[95, null]], "efficientnet_b0": [[80, null]], "efficientnet_b1": [[81, null]], "efficientnet_b2": [[82, null]], "efficientnet_b3": [[83, null]], "efficientnet_b4": [[84, null]], "efficientnet_b5": [[85, null]], "efficientnet_b6": [[86, null]], "efficientnet_b7": [[87, null]], "efficientnet_v2_l": [[88, null]], "efficientnet_v2_m": [[89, null]], "efficientnet_v2_s": [[90, null]], "efficientnet_v2_xl": [[91, null]], "faster_rcnn_resnet_101_fpn": [[220, null]], "faster_rcnn_resnet_50_fpn": [[221, null]], "inception_next_atto": [[101, null]], "inception_next_base": [[102, null]], "inception_next_small": [[103, null]], "inception_next_tiny": [[104, null]], "inception_resnet_v1": [[106, null]], "inception_resnet_v2": [[107, null]], "inception_v1": [[97, null]], "inception_v3": [[98, null]], "inception_v4": [[99, null]], "lenet_1": [[110, null]], "lenet_4": [[111, null]], "lenet_5": [[112, null]], "lr_scheduler.CosineAnnealingLR": [[425, null]], "lr_scheduler.CyclicLR": [[426, null]], "lr_scheduler.ExponentialLR": [[427, null]], "lr_scheduler.LRScheduler": [[428, null]], "lr_scheduler.LambdaLR": [[429, null]], "lr_scheduler.MultiStepLR": [[430, null]], "lr_scheduler.ReduceLROnPlateau": [[431, null]], "lr_scheduler.StepLR": [[432, null]], "lucid.Numeric": [[447, null]], "lucid.Tensor": [[464, null]], "lucid.abs": [[490, null]], "lucid.add": [[465, null]], "lucid.arange": [[477, null]], "lucid.arccos": [[491, null]], "lucid.arcsin": [[492, null]], "lucid.arctan": [[493, null]], "lucid.argmax": [[523, null]], "lucid.argmin": [[524, null]], "lucid.argsort": [[525, null]], "lucid.broadcast_to": [[526, null]], "lucid.ceil": [[494, null]], "lucid.chunk": [[527, null]], "lucid.clip": [[495, null]], "lucid.concatenate": [[528, null]], "lucid.cos": [[496, null]], "lucid.cosh": [[497, null]], "lucid.count_flops": [[448, null]], "lucid.cube": [[498, null]], "lucid.cumprod": [[499, null]], "lucid.cumsum": [[500, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[478, null]], "lucid.diagonal": [[529, null]], "lucid.div": [[466, null]], "lucid.dot": [[467, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[479, null]], "lucid.empty_like": [[480, null]], "lucid.exp": [[501, null]], "lucid.eye": [[481, null]], "lucid.flatten": [[530, null]], "lucid.floor": [[502, null]], "lucid.full": [[482, null]], "lucid.full_like": [[483, null]], "lucid.grad_enabled": [[449, null]], "lucid.histogram": [[531, null]], "lucid.histogram2d": [[532, null]], "lucid.histogramdd": [[533, null]], "lucid.hstack": [[534, null]], "lucid.inner": [[468, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[484, null]], "lucid.load": [[453, null]], "lucid.log": [[503, null]], "lucid.log2": [[504, null]], "lucid.masked_fill": [[536, null]], "lucid.matmul": [[469, null]], "lucid.max": [[505, null]], "lucid.maximum": [[470, null]], "lucid.mean": [[506, null]], "lucid.meshgrid": [[537, null]], "lucid.min": [[507, null]], "lucid.minimum": [[471, null]], "lucid.models": [[218, null]], "lucid.multiply": [[472, null]], "lucid.newaxis": [[450, null]], "lucid.nn": [[422, null]], "lucid.nn.functional": [[285, null]], "lucid.no_grad": [[451, null]], "lucid.nonzero": [[538, null]], "lucid.ones": [[485, null]], "lucid.ones_like": [[486, null]], "lucid.optim": [[434, null]], "lucid.outer": [[473, null]], "lucid.pad": [[539, null]], "lucid.power": [[474, null]], "lucid.random": [[463, null]], "lucid.random.bernoulli": [[455, null]], "lucid.random.permutation": [[457, null]], "lucid.random.rand": [[458, null]], "lucid.random.randint": [[459, null]], "lucid.random.randn": [[460, null]], "lucid.random.seed": [[461, null]], "lucid.random.uniform": [[462, null]], "lucid.ravel": [[540, null]], "lucid.reciprocal": [[508, null]], "lucid.register_model": [[452, null]], "lucid.repeat": [[541, null]], "lucid.reshape": [[542, null]], "lucid.roll": [[543, null]], "lucid.round": [[509, null]], "lucid.save": [[454, null]], "lucid.sign": [[510, null]], "lucid.sin": [[511, null]], "lucid.sinh": [[512, null]], "lucid.sort": [[544, null]], "lucid.split": [[545, null]], "lucid.sqrt": [[513, null]], "lucid.square": [[514, null]], "lucid.squeeze": [[546, null]], "lucid.stack": [[547, null]], "lucid.sub": [[475, null]], "lucid.sum": [[515, null]], "lucid.swapaxes": [[516, null]], "lucid.tan": [[517, null]], "lucid.tanh": [[518, null]], "lucid.tensor": [[522, null]], "lucid.tensordot": [[476, null]], "lucid.tile": [[548, null]], "lucid.topk": [[549, null]], "lucid.trace": [[519, null]], "lucid.transforms": [[568, null]], "lucid.transpose": [[520, null]], "lucid.tril": [[550, null]], "lucid.triu": [[551, null]], "lucid.unbind": [[552, null]], "lucid.unique": [[553, null]], "lucid.unsqueeze": [[554, null]], "lucid.var": [[521, null]], "lucid.visual": [[570, null]], "lucid.vstack": [[555, null]], "lucid.weights": [[572, null]], "lucid.where": [[556, null]], "lucid.zeros": [[487, null]], "lucid.zeros_like": [[488, null]], "maxvit_base": [[114, null], [115, null]], "maxvit_small": [[116, null]], "maxvit_tiny": [[117, null]], "maxvit_xlarge": [[118, null]], "mobilenet": [[123, null]], "mobilenet_v2": [[124, null]], "mobilenet_v3_large": [[125, null]], "mobilenet_v3_small": [[126, null]], "mobilenet_v4_conv_large": [[127, null]], "mobilenet_v4_conv_medium": [[128, null]], "mobilenet_v4_conv_small": [[129, null]], "mobilenet_v4_hybrid_large": [[130, null]], "mobilenet_v4_hybrid_medium": [[131, null]], "nn.AdaptiveAvgPool1d": [[399, null]], "nn.AdaptiveAvgPool2d": [[400, null]], "nn.AdaptiveAvgPool3d": [[401, null]], "nn.AdaptiveMaxPool1d": [[402, null]], "nn.AdaptiveMaxPool2d": [[403, null]], "nn.AdaptiveMaxPool3d": [[404, null]], "nn.AlphaDropout": [[366, null]], "nn.AvgPool1d": [[405, null]], "nn.AvgPool2d": [[406, null]], "nn.AvgPool3d": [[407, null]], "nn.BCELoss": [[382, null]], "nn.BCEWithLogitsLoss": [[383, null]], "nn.BatchNorm1d": [[389, null]], "nn.BatchNorm2d": [[390, null]], "nn.BatchNorm3d": [[391, null]], "nn.Bilinear": [[377, null]], "nn.Buffer": [[249, null]], "nn.Conv1d": [[358, null]], "nn.Conv2d": [[359, null]], "nn.Conv3d": [[360, null]], "nn.ConvBNReLU1d": [[324, null]], "nn.ConvBNReLU2d": [[325, null]], "nn.ConvBNReLU3d": [[326, null]], "nn.ConvTranspose1d": [[361, null]], "nn.ConvTranspose2d": [[362, null]], "nn.ConvTranspose3d": [[363, null]], "nn.CrossEntropyLoss": [[384, null]], "nn.DepthSeparableConv1d": [[327, null]], "nn.DepthSeparableConv2d": [[328, null]], "nn.DepthSeparableConv3d": [[329, null]], "nn.DropBlock": [[367, null]], "nn.DropPath": [[368, null]], "nn.Dropout": [[369, null]], "nn.Dropout1d": [[370, null]], "nn.Dropout2d": [[371, null]], "nn.Dropout3d": [[372, null]], "nn.ELU": [[341, null]], "nn.Embedding": [[412, null]], "nn.Flatten": [[378, null]], "nn.GELU": [[342, null]], "nn.GlobalResponseNorm": [[392, null]], "nn.GroupNorm": [[393, null]], "nn.HardSigmoid": [[343, null]], "nn.HardSwish": [[344, null]], "nn.HuberLoss": [[385, null]], "nn.Identity": [[379, null]], "nn.InstanceNorm1d": [[394, null]], "nn.InstanceNorm2d": [[395, null]], "nn.InstanceNorm3d": [[396, null]], "nn.LayerNorm": [[397, null]], "nn.LeakyReLU": [[345, null]], "nn.Linear": [[380, null]], "nn.MSELoss": [[386, null]], "nn.MaxPool1d": [[408, null]], "nn.MaxPool2d": [[409, null]], "nn.MaxPool3d": [[410, null]], "nn.Mish": [[346, null]], "nn.Module": [[250, null]], "nn.ModuleDict": [[252, null]], "nn.ModuleList": [[253, null]], "nn.MultiHeadAttention": [[355, null]], "nn.NLLLoss": [[387, null]], "nn.Parameter": [[251, null]], "nn.ParameterDict": [[254, null]], "nn.ParameterList": [[255, null]], "nn.ReLU": [[347, null]], "nn.ReLU6": [[348, null]], "nn.Rearrange": [[374, null]], "nn.SELU": [[349, null]], "nn.SEModule": [[330, null]], "nn.ScaledDotProductAttention": [[356, null]], "nn.SelectiveKernel": [[331, null]], "nn.Sequential": [[256, null]], "nn.Sigmoid": [[350, null]], "nn.Softmax": [[351, null]], "nn.Swish": [[352, null]], "nn.Tanh": [[353, null]], "nn.Transformer": [[414, null]], "nn.TransformerDecoder": [[415, null]], "nn.TransformerDecoderLayer": [[416, null]], "nn.TransformerEncoder": [[417, null]], "nn.TransformerEncoderLayer": [[418, null]], "nn.Unfold": [[364, null]], "nn.Upsample": [[420, null]], "nn.functional.adaptive_avg_pool1d": [[303, null]], "nn.functional.adaptive_avg_pool2d": [[304, null]], "nn.functional.adaptive_avg_pool3d": [[305, null]], "nn.functional.adaptive_max_pool1d": [[306, null]], "nn.functional.adaptive_max_pool2d": [[307, null]], "nn.functional.adaptive_max_pool3d": [[308, null]], "nn.functional.affine_grid": [[316, null]], "nn.functional.alpha_dropout": [[277, null]], "nn.functional.avg_pool1d": [[309, null]], "nn.functional.avg_pool2d": [[310, null]], "nn.functional.avg_pool3d": [[311, null]], "nn.functional.batch_norm": [[296, null]], "nn.functional.bilinear": [[286, null]], "nn.functional.binary_cross_entropy": [[289, null]], "nn.functional.binary_cross_entropy_with_logits": [[290, null]], "nn.functional.conv1d": [[269, null]], "nn.functional.conv2d": [[270, null]], "nn.functional.conv3d": [[271, null]], "nn.functional.conv_transpose1d": [[272, null]], "nn.functional.conv_transpose2d": [[273, null]], "nn.functional.conv_transpose3d": [[274, null]], "nn.functional.cross_entropy": [[291, null]], "nn.functional.drop_block": [[278, null]], "nn.functional.drop_path": [[279, null]], "nn.functional.dropout": [[280, null]], "nn.functional.dropout1d": [[281, null]], "nn.functional.dropout2d": [[282, null]], "nn.functional.dropout3d": [[283, null]], "nn.functional.elu": [[258, null]], "nn.functional.embedding": [[319, null]], "nn.functional.gelu": [[259, null]], "nn.functional.global_response_norm": [[297, null]], "nn.functional.grid_sample": [[317, null]], "nn.functional.group_norm": [[298, null]], "nn.functional.huber_loss": [[292, null]], "nn.functional.instance_norm": [[300, null]], "nn.functional.interpolate": [[321, null]], "nn.functional.layer_norm": [[301, null]], "nn.functional.leaky_relu": [[261, null]], "nn.functional.linear": [[288, null]], "nn.functional.max_pool1d": [[313, null]], "nn.functional.max_pool2d": [[314, null]], "nn.functional.max_pool3d": [[315, null]], "nn.functional.mse_loss": [[294, null]], "nn.functional.nll_loss": [[295, null]], "nn.functional.normalize": [[302, null]], "nn.functional.one_hot": [[322, null]], "nn.functional.relu": [[262, null]], "nn.functional.rotate": [[323, null]], "nn.functional.scaled_dot_product_attention": [[268, null]], "nn.functional.selu": [[263, null]], "nn.functional.sigmoid": [[264, null]], "nn.functional.softmax": [[265, null]], "nn.functional.tanh": [[266, null]], "nn.functional.unfold": [[276, null]], "nn.init.constant": [[333, null]], "nn.init.kaiming_normal": [[335, null]], "nn.init.kaiming_uniform": [[336, null]], "nn.init.normal": [[337, null]], "nn.init.uniform": [[338, null]], "nn.init.xavier_normal": [[339, null]], "nn.init.xavier_uniform": [[340, null]], "optim.ASGD": [[435, null]], "optim.Adadelta": [[436, null]], "optim.Adagrad": [[437, null]], "optim.Adam": [[438, null]], "optim.AdamW": [[439, null]], "optim.Adamax": [[440, null]], "optim.NAdam": [[441, null]], "optim.Optimizer": [[423, null]], "optim.RAdam": [[442, null]], "optim.RMSprop": [[443, null]], "optim.Rprop": [[444, null]], "optim.SGD": [[445, null]], "optim.lr_scheduler": [[424, null]], "pvt_huge": [[134, null]], "pvt_large": [[135, null]], "pvt_medium": [[136, null]], "pvt_small": [[137, null]], "pvt_tiny": [[138, null]], "pvt_v2_b0": [[139, null]], "pvt_v2_b1": [[140, null]], "pvt_v2_b2": [[141, null]], "pvt_v2_b2_li": [[142, null]], "pvt_v2_b3": [[143, null]], "pvt_v2_b4": [[144, null]], "pvt_v2_b5": [[145, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[147, null]], "resnest_14": [[148, null]], "resnest_200": [[149, null]], "resnest_26": [[150, null]], "resnest_269": [[151, null]], "resnest_50": [[152, null]], "resnest_50_1s4x24d": [[153, null]], "resnest_50_4s2x40d": [[154, null]], "resnet_1001": [[156, null]], "resnet_101": [[157, null]], "resnet_152": [[158, null]], "resnet_18": [[159, null]], "resnet_200": [[160, null]], "resnet_269": [[161, null]], "resnet_34": [[162, null]], "resnet_50": [[163, null]], "resnext_101_32x16d": [[167, null]], "resnext_101_32x32d": [[168, null]], "resnext_101_32x4d": [[169, null]], "resnext_101_32x8d": [[170, null]], "resnext_101_64x4d": [[171, null]], "resnext_50_32x4d": [[172, null]], "se_resnet_101": [[174, null]], "se_resnet_152": [[175, null]], "se_resnet_18": [[176, null]], "se_resnet_34": [[177, null]], "se_resnet_50": [[178, null]], "se_resnext_101_32x4d": [[179, null]], "se_resnext_101_32x8d": [[180, null]], "se_resnext_101_64x4d": [[181, null]], "se_resnext_50_32x4d": [[182, null]], "sk_resnet_18": [[184, null]], "sk_resnet_34": [[185, null]], "sk_resnet_50": [[186, null]], "sk_resnext_50_32x4d": [[187, null]], "swin_base": [[190, null]], "swin_large": [[191, null]], "swin_small": [[192, null]], "swin_tiny": [[193, null]], "swin_v2_base": [[194, null]], "swin_v2_giant": [[195, null]], "swin_v2_huge": [[196, null]], "swin_v2_large": [[197, null]], "swin_v2_small": [[198, null]], "swin_v2_tiny": [[199, null]], "transformer_base": [[247, null]], "transformer_big": [[248, null]], "transforms.CenterCrop": [[559, null]], "transforms.Compose": [[557, null]], "transforms.Normalize": [[560, null]], "transforms.RandomCrop": [[561, null]], "transforms.RandomGrayscale": [[562, null]], "transforms.RandomHorizontalFlip": [[563, null]], "transforms.RandomRotation": [[564, null]], "transforms.RandomVerticalFlip": [[565, null]], "transforms.Resize": [[566, null]], "transforms.ToTensor": [[558, null]], "util.FPN": [[225, null]], "util.MultiScaleROIAlign": [[226, null]], "util.ROIAlign": [[227, null]], "util.SelectiveSearch": [[228, null]], "util.apply_deltas": [[229, null]], "util.bbox_to_delta": [[230, null]], "util.clip_boxes": [[231, null]], "util.iou": [[233, null]], "util.nms": [[234, null]], "vggnet_11": [[201, null]], "vggnet_13": [[202, null]], "vggnet_16": [[203, null]], "vggnet_19": [[204, null]], "visual.draw_tensor_graph": [[569, null]], "vit_base": [[206, null]], "vit_huge": [[207, null]], "vit_large": [[208, null]], "vit_small": [[209, null]], "vit_tiny": [[210, null]], "wide_resnet_101": [[164, null]], "wide_resnet_50": [[165, null]], "xception": [[212, null]], "yolo_v1": [[237, null]], "yolo_v1_tiny": [[238, null]], "yolo_v2": [[240, null]], "yolo_v2_tiny": [[241, null]], "yolo_v3": [[243, null]], "yolo_v3_tiny": [[244, null]], "zfnet": [[214, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cspnet/CSPNet", "models/imgclf/cspnet/csp_darknet_53", "models/imgclf/cspnet/csp_resnet_50", "models/imgclf/cspnet/csp_resnext_50_32x4d", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/efficientformer/EfficientFormer", "models/imgclf/efficientformer/efficientformer_l1", "models/imgclf/efficientformer/efficientformer_l3", "models/imgclf/efficientformer/efficientformer_l7", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/imggen/autoencoder/VAE", "models/imggen/diffusion/DDPM", "models/imggen/index", "models/models", "models/objdet/faster_rcnn/FasterRCNN", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/RCNN", "models/objdet/utilities/FPN", "models/objdet/utilities/MultiScaleROIAlign", "models/objdet/utilities/ROIAlign", "models/objdet/utilities/SelectiveSearch", "models/objdet/utilities/apply_deltas", "models/objdet/utilities/bbox_to_delta", "models/objdet/utilities/clip_boxes", "models/objdet/utilities/index", "models/objdet/utilities/iou", "models/objdet/utilities/nms", "models/objdet/yolo/index", "models/objdet/yolo/v1/YOLO_V1_", "models/objdet/yolo/v1/yolo_v1", "models/objdet/yolo/v1/yolo_v1_tiny", "models/objdet/yolo/v2/YOLO_V2_", "models/objdet/yolo/v2/yolo_v2", "models/objdet/yolo/v2/yolo_v2_tiny", "models/objdet/yolo/v3/YOLO_V3_", "models/objdet/yolo/v3/yolo_v3", "models/objdet/yolo/v3/yolo_v3_tiny", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/binary_cross_entropy_with_logits", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/group_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/one_hot", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/Mish", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Flatten", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/BCEWithLogitsLoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/GroupNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "porting/load", "porting/save", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/cumprod", "tensor/operations/ufunc/cumsum", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/diagonal", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms", "visual/draw_tensor_graph", "visual/visual", "weights/list", "weights/weights"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cspnet/CSPNet.rst", "models/imgclf/cspnet/csp_darknet_53.rst", "models/imgclf/cspnet/csp_resnet_50.rst", "models/imgclf/cspnet/csp_resnext_50_32x4d.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/efficientformer/EfficientFormer.rst", "models/imgclf/efficientformer/efficientformer_l1.rst", "models/imgclf/efficientformer/efficientformer_l3.rst", "models/imgclf/efficientformer/efficientformer_l7.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/imggen/autoencoder/VAE.rst", "models/imggen/diffusion/DDPM.rst", "models/imggen/index.rst", "models/models.rst", "models/objdet/faster_rcnn/FasterRCNN.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/objdet/utilities/FPN.rst", "models/objdet/utilities/MultiScaleROIAlign.rst", "models/objdet/utilities/ROIAlign.rst", "models/objdet/utilities/SelectiveSearch.rst", "models/objdet/utilities/apply_deltas.rst", "models/objdet/utilities/bbox_to_delta.rst", "models/objdet/utilities/clip_boxes.rst", "models/objdet/utilities/index.rst", "models/objdet/utilities/iou.rst", "models/objdet/utilities/nms.rst", "models/objdet/yolo/index.rst", "models/objdet/yolo/v1/YOLO_V1_.rst", "models/objdet/yolo/v1/yolo_v1.rst", "models/objdet/yolo/v1/yolo_v1_tiny.rst", "models/objdet/yolo/v2/YOLO_V2_.rst", "models/objdet/yolo/v2/yolo_v2.rst", "models/objdet/yolo/v2/yolo_v2_tiny.rst", "models/objdet/yolo/v3/YOLO_V3_.rst", "models/objdet/yolo/v3/yolo_v3.rst", "models/objdet/yolo/v3/yolo_v3_tiny.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/binary_cross_entropy_with_logits.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/group_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/one_hot.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/Mish.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Flatten.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/BCEWithLogitsLoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/GroupNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "porting/load.rst", "porting/save.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/cumprod.rst", "tensor/operations/ufunc/cumsum.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/diagonal.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst", "visual/draw_tensor_graph.rst", "visual/visual.rst", "weights/list.rst", "weights/weights.rst"], "indexentries": {"abs() (in module lucid)": [[490, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[436, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[437, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[438, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[440, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[439, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[303, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[304, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[305, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[306, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[307, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[308, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[399, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[400, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[401, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[402, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[403, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[404, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[465, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[316, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alexnet_weights (class in lucid.weights)": [[571, "lucid.weights.AlexNet_Weights", false]], "alpha_dropout() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[366, "lucid.nn.AlphaDropout", false]], "apply_deltas() (in module lucid.models.objdet.util)": [[229, "lucid.models.objdet.util.apply_deltas", false]], "arange() (in module lucid)": [[477, "lucid.arange", false]], "arccos() (in module lucid)": [[491, "lucid.arccos", false]], "arcsin() (in module lucid)": [[492, "lucid.arcsin", false]], "arctan() (in module lucid)": [[493, "lucid.arctan", false]], "argmax() (in module lucid)": [[523, "lucid.argmax", false]], "argmin() (in module lucid)": [[524, "lucid.argmin", false]], "argsort() (in module lucid)": [[525, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[435, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[309, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[310, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[311, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[405, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[406, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[407, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[296, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[389, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[390, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[391, "lucid.nn.BatchNorm3d", false]], "bbox_to_delta() (in module lucid.models.objdet.util)": [[230, "lucid.models.objdet.util.bbox_to_delta", false]], "bceloss (class in lucid.nn)": [[382, "lucid.nn.BCELoss", false]], "bcewithlogitsloss (class in lucid.nn)": [[383, "lucid.nn.BCEWithLogitsLoss", false]], "bernoulli() (in module lucid.random)": [[455, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[377, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[289, "lucid.nn.functional.binary_cross_entropy", false]], "binary_cross_entropy_with_logits() (in module lucid.nn.functional)": [[290, "lucid.nn.functional.binary_cross_entropy_with_logits", false]], "broadcast_to() (in module lucid)": [[526, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[249, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[494, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[559, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[527, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[495, "lucid.clip", false]], "clip_boxes() (in module lucid.models.objdet.util)": [[231, "lucid.models.objdet.util.clip_boxes", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[557, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[528, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[333, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[358, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[269, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[359, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[360, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[271, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[324, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[325, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[326, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[361, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[362, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[363, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[496, "lucid.cos", false]], "cosh() (in module lucid)": [[497, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[425, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[448, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[291, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[384, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "csp_darknet_53() (in module lucid.models)": [[66, "lucid.models.csp_darknet_53", false]], "csp_resnet_50() (in module lucid.models)": [[67, "lucid.models.csp_resnet_50", false]], "csp_resnext_50_32x4d() (in module lucid.models)": [[68, "lucid.models.csp_resnext_50_32x4d", false]], "cspnet (class in lucid.models)": [[65, "lucid.models.CSPNet", false]], "cube() (in module lucid)": [[498, "lucid.cube", false]], "cumprod() (in module lucid)": [[499, "lucid.cumprod", false]], "cumsum() (in module lucid)": [[500, "lucid.cumsum", false]], "current_beta() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.current_beta", false]], "cvt (class in lucid.models)": [[69, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[70, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[71, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[72, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[426, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "ddpm (class in lucid.models.imggen)": [[216, "lucid.models.imggen.DDPM", false]], "decode() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.decode", false]], "densenet (class in lucid.models)": [[73, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[74, "lucid.models.densenet_121", false]], "densenet_121_weights (class in lucid.weights)": [[571, "lucid.weights.DenseNet_121_Weights", false]], "densenet_169() (in module lucid.models)": [[75, "lucid.models.densenet_169", false]], "densenet_169_weights (class in lucid.weights)": [[571, "lucid.weights.DenseNet_169_Weights", false]], "densenet_201() (in module lucid.models)": [[76, "lucid.models.densenet_201", false]], "densenet_201_weights (class in lucid.weights)": [[571, "lucid.weights.DenseNet_201_Weights", false]], "densenet_264() (in module lucid.models)": [[77, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[327, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[328, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[329, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "diag() (in module lucid)": [[478, "lucid.diag", false]], "diagonal() (in module lucid)": [[529, "lucid.diagonal", false]], "div() (in module lucid)": [[466, "lucid.div", false]], "dot() (in module lucid)": [[467, "lucid.dot", false]], "draw_tensor_graph() (in module lucid.visual)": [[569, "lucid.visual.draw_tensor_graph", false]], "drop_block() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[367, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[369, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[370, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[281, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[371, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[372, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[283, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[368, "lucid.nn.DropPath", false]], "efficientformer (class in lucid.models)": [[92, "lucid.models.EfficientFormer", false]], "efficientformer_l1() (in module lucid.models)": [[93, "lucid.models.efficientformer_l1", false]], "efficientformer_l3() (in module lucid.models)": [[94, "lucid.models.efficientformer_l3", false]], "efficientformer_l7() (in module lucid.models)": [[95, "lucid.models.efficientformer_l7", false]], "efficientnet (class in lucid.models)": [[78, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[80, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[81, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[82, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[83, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[84, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[85, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[86, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[87, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[79, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[88, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[89, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[90, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[91, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[341, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[412, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[319, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[479, "lucid.empty", false]], "empty_like() (in module lucid)": [[480, "lucid.empty_like", false]], "encode() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.encode", false]], "exp() (in module lucid)": [[501, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[427, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[481, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "faster_rcnn_resnet_101_fpn() (in module lucid.models)": [[220, "lucid.models.faster_rcnn_resnet_101_fpn", false]], "faster_rcnn_resnet_50_fpn() (in module lucid.models)": [[221, "lucid.models.faster_rcnn_resnet_50_fpn", false]], "fasterrcnn (class in lucid.models)": [[219, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[223, "lucid.models.FastRCNN", false]], "flatten (class in lucid.nn)": [[378, "lucid.nn.Flatten", false]], "flatten() (in module lucid)": [[530, "lucid.flatten", false]], "floor() (in module lucid)": [[502, "lucid.floor", false]], "forward() (lucid.models.objdet.yolo_v1 method)": [[236, "lucid.models.objdet.YOLO_V1.forward", false]], "forward() (lucid.models.objdet.yolo_v2 method)": [[239, "lucid.models.objdet.YOLO_V2.forward", false]], "forward() (lucid.models.objdet.yolo_v3 method)": [[242, "lucid.models.objdet.YOLO_V3.forward", false]], "fpn (class in lucid.models.objdet.util)": [[225, "lucid.models.objdet.util.FPN", false]], "full() (in module lucid)": [[482, "lucid.full", false]], "full_like() (in module lucid)": [[483, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[342, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[259, "lucid.nn.functional.gelu", false]], "get_loss() (lucid.models.imggen.ddpm method)": [[216, "lucid.models.imggen.DDPM.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v1 method)": [[236, "lucid.models.objdet.YOLO_V1.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v2 method)": [[239, "lucid.models.objdet.YOLO_V2.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v3 method)": [[242, "lucid.models.objdet.YOLO_V3.get_loss", false]], "global_response_norm() (in module lucid.nn.functional)": [[297, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[392, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[449, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[317, "lucid.nn.functional.grid_sample", false]], "group_norm() (in module lucid.nn.functional)": [[298, "lucid.nn.functional.group_norm", false]], "groupnorm (class in lucid.nn)": [[393, "lucid.nn.GroupNorm", false]], "hardsigmoid (class in lucid.nn)": [[343, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[344, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[531, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[532, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[533, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[534, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[292, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[385, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[379, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[96, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[101, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[102, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[103, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[104, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[106, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[107, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[97, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[98, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[99, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[100, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[105, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[468, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[300, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[394, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[395, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[396, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[321, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "iou() (in module lucid.models.objdet.util)": [[233, "lucid.models.objdet.util.iou", false]], "kaiming_normal() (in module lucid.nn.init)": [[335, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[336, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[429, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[301, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[397, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[345, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[109, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[110, "lucid.models.lenet_1", false]], "lenet_1_weights (class in lucid.weights)": [[571, "lucid.weights.LeNet_1_Weights", false]], "lenet_4() (in module lucid.models)": [[111, "lucid.models.lenet_4", false]], "lenet_4_weights (class in lucid.weights)": [[571, "lucid.weights.LeNet_4_Weights", false]], "lenet_5() (in module lucid.models)": [[112, "lucid.models.lenet_5", false]], "lenet_5_weights (class in lucid.weights)": [[571, "lucid.weights.LeNet_5_Weights", false]], "linear (class in lucid.nn)": [[380, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[288, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[484, "lucid.linspace", false]], "load() (in module lucid)": [[453, "lucid.load", false]], "log() (in module lucid)": [[503, "lucid.log", false]], "log2() (in module lucid)": [[504, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[428, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[536, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[469, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[505, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[313, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[314, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[315, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[470, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[408, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[409, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[410, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[113, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[114, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[115, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[116, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[117, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[118, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[506, "lucid.mean", false]], "meshgrid() (in module lucid)": [[537, "lucid.meshgrid", false]], "min() (in module lucid)": [[507, "lucid.min", false]], "minimum() (in module lucid)": [[471, "lucid.minimum", false]], "mish (class in lucid.nn)": [[346, "lucid.nn.Mish", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[119, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[123, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[120, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[124, "lucid.models.mobilenet_v2", false]], "mobilenet_v2_weights (class in lucid.weights)": [[571, "lucid.weights.MobileNet_V2_Weights", false]], "mobilenet_v3 (class in lucid.models)": [[121, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[125, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_large_weights (class in lucid.weights)": [[571, "lucid.weights.MobileNet_V3_Large_Weights", false]], "mobilenet_v3_small() (in module lucid.models)": [[126, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v3_small_weights (class in lucid.weights)": [[571, "lucid.weights.MobileNet_V3_Small_Weights", false]], "mobilenet_v4 (class in lucid.models)": [[122, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[127, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[128, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[129, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[130, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[131, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[250, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[252, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[253, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[294, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[386, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[355, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[472, "lucid.multiply", false]], "multiscaleroialign (class in lucid.models.objdet.util)": [[226, "lucid.models.objdet.util.MultiScaleROIAlign", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[430, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[441, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[295, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[387, "lucid.nn.NLLLoss", false]], "nms() (in module lucid.models.objdet.util)": [[234, "lucid.models.objdet.util.nms", false]], "no_grad (in module lucid)": [[451, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[538, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[337, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[560, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[302, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[447, "lucid.types.Numeric", false]], "one_hot() (in module lucid.nn.functional)": [[322, "lucid.nn.functional.one_hot", false]], "ones() (in module lucid)": [[485, "lucid.ones", false]], "ones_like() (in module lucid)": [[486, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[423, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[473, "lucid.outer", false]], "pad() (in module lucid)": [[539, "lucid.pad", false]], "parameter (class in lucid.nn)": [[251, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[254, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[255, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[457, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[474, "lucid.power", false]], "predict() (lucid.models.objdet.yolo_v2 method)": [[239, "lucid.models.objdet.YOLO_V2.predict", false]], "predict() (lucid.models.objdet.yolo_v3 method)": [[242, "lucid.models.objdet.YOLO_V3.predict", false]], "pvt (class in lucid.models)": [[132, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[134, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[135, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[136, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[137, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[138, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[133, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[139, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[140, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[141, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[142, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[143, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[144, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[145, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[442, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[458, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[459, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[460, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[561, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[562, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[563, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[564, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[565, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[540, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[224, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[374, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[508, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[431, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[452, "lucid.register_model", false]], "relu (class in lucid.nn)": [[347, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[348, "lucid.nn.ReLU6", false]], "reparameterize() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.reparameterize", false]], "repeat() (in module lucid)": [[541, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[542, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[566, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[146, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[147, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[148, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[149, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[150, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[151, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[152, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[153, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[154, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[155, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[156, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[157, "lucid.models.resnet_101", false]], "resnet_101_weights (class in lucid.weights)": [[571, "lucid.weights.ResNet_101_Weights", false]], "resnet_152() (in module lucid.models)": [[158, "lucid.models.resnet_152", false]], "resnet_152_weights (class in lucid.weights)": [[571, "lucid.weights.ResNet_152_Weights", false]], "resnet_18() (in module lucid.models)": [[159, "lucid.models.resnet_18", false]], "resnet_18_weights (class in lucid.weights)": [[571, "lucid.weights.ResNet_18_Weights", false]], "resnet_200() (in module lucid.models)": [[160, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[161, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[162, "lucid.models.resnet_34", false]], "resnet_34_weights (class in lucid.weights)": [[571, "lucid.weights.ResNet_34_Weights", false]], "resnet_50() (in module lucid.models)": [[163, "lucid.models.resnet_50", false]], "resnet_50_weights (class in lucid.weights)": [[571, "lucid.weights.ResNet_50_Weights", false]], "resnext (class in lucid.models)": [[166, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[167, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[168, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[169, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[170, "lucid.models.resnext_101_32x8d", false]], "resnext_101_32x8d_weights (class in lucid.weights)": [[571, "lucid.weights.ResNeXt_101_32X8D_Weights", false]], "resnext_101_64x4d() (in module lucid.models)": [[171, "lucid.models.resnext_101_64x4d", false]], "resnext_101_64x4d_weights (class in lucid.weights)": [[571, "lucid.weights.ResNeXt_101_64X4D_Weights", false]], "resnext_50_32x4d() (in module lucid.models)": [[172, "lucid.models.resnext_50_32x4d", false]], "resnext_50_32x4d_weights (class in lucid.weights)": [[571, "lucid.weights.ResNeXt_50_32X4D_Weights", false]], "rmsprop (class in lucid.optim)": [[443, "lucid.optim.RMSprop", false]], "roialign (class in lucid.models.objdet.util)": [[227, "lucid.models.objdet.util.ROIAlign", false]], "roll() (in module lucid)": [[543, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[323, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[509, "lucid.round", false]], "rprop (class in lucid.optim)": [[444, "lucid.optim.Rprop", false]], "sample() (lucid.models.imggen.ddpm method)": [[216, "lucid.models.imggen.DDPM.sample", false]], "save() (in module lucid)": [[454, "lucid.save", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[356, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[174, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[175, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[176, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[177, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[178, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[179, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[180, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[181, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[182, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[461, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[331, "lucid.nn.SelectiveKernel", false]], "selectivesearch (class in lucid.models.objdet.util)": [[228, "lucid.models.objdet.util.SelectiveSearch", false]], "selu (class in lucid.nn)": [[349, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[330, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[173, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[256, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[445, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[350, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[510, "lucid.sign", false]], "sin() (in module lucid)": [[511, "lucid.sin", false]], "sinh() (in module lucid)": [[512, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[184, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[185, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[186, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[187, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[183, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[351, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[544, "lucid.sort", false]], "split() (in module lucid)": [[545, "lucid.split", false]], "sqrt() (in module lucid)": [[513, "lucid.sqrt", false]], "square() (in module lucid)": [[514, "lucid.square", false]], "squeeze() (in module lucid)": [[546, "lucid.squeeze", false]], "stack() (in module lucid)": [[547, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[432, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[475, "lucid.sub", false]], "sum() (in module lucid)": [[515, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[516, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[190, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[191, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[192, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[193, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[194, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[195, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[196, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[197, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[198, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[199, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[188, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[189, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[352, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[517, "lucid.tan", false]], "tanh (class in lucid.nn)": [[353, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[518, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[464, "lucid.Tensor", false]], "tensor() (in module lucid)": [[522, "lucid.tensor", false]], "tensordot() (in module lucid)": [[476, "lucid.tensordot", false]], "tile() (in module lucid)": [[548, "lucid.tile", false]], "topk() (in module lucid)": [[549, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[558, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[519, "lucid.trace", false]], "transformer (class in lucid.models)": [[246, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[414, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[247, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[248, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[415, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[416, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[417, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[418, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[520, "lucid.transpose", false]], "tril() (in module lucid)": [[550, "lucid.tril", false]], "triu() (in module lucid)": [[551, "lucid.triu", false]], "unbind() (in module lucid)": [[552, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[364, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[338, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[462, "lucid.random.uniform", false]], "unique() (in module lucid)": [[553, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[554, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[420, "lucid.nn.Upsample", false]], "vae (class in lucid.models.imggen)": [[215, "lucid.models.imggen.VAE", false]], "var() (in module lucid)": [[521, "lucid.var", false]], "vggnet (class in lucid.models)": [[200, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[201, "lucid.models.vggnet_11", false]], "vggnet_11_weights (class in lucid.weights)": [[571, "lucid.weights.VGGNet_11_Weights", false]], "vggnet_13() (in module lucid.models)": [[202, "lucid.models.vggnet_13", false]], "vggnet_13_weights (class in lucid.weights)": [[571, "lucid.weights.VGGNet_13_Weights", false]], "vggnet_16() (in module lucid.models)": [[203, "lucid.models.vggnet_16", false]], "vggnet_16_weights (class in lucid.weights)": [[571, "lucid.weights.VGGNet_16_Weights", false]], "vggnet_19() (in module lucid.models)": [[204, "lucid.models.vggnet_19", false]], "vggnet_19_weights (class in lucid.weights)": [[571, "lucid.weights.VGGNet_19_Weights", false]], "vit (class in lucid.models)": [[205, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[206, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[207, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[208, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[209, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[210, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[555, "lucid.vstack", false]], "where() (in module lucid)": [[556, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[164, "lucid.models.wide_resnet_101", false]], "wide_resnet_101_weights (class in lucid.weights)": [[571, "lucid.weights.Wide_ResNet_101_Weights", false]], "wide_resnet_50() (in module lucid.models)": [[165, "lucid.models.wide_resnet_50", false]], "wide_resnet_50_weights (class in lucid.weights)": [[571, "lucid.weights.Wide_ResNet_50_Weights", false]], "xavier_normal() (in module lucid.nn.init)": [[339, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[340, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[211, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[212, "lucid.models.xception", false]], "yolo_v1 (class in lucid.models)": [[236, "lucid.models.YOLO_V1", false]], "yolo_v1() (in module lucid.models)": [[237, "lucid.models.yolo_v1", false]], "yolo_v1_tiny() (in module lucid.models)": [[238, "lucid.models.yolo_v1_tiny", false]], "yolo_v2 (class in lucid.models)": [[239, "lucid.models.YOLO_V2", false]], "yolo_v2() (in module lucid.models)": [[240, "lucid.models.yolo_v2", false]], "yolo_v2_tiny() (in module lucid.models)": [[241, "lucid.models.yolo_v2_tiny", false]], "yolo_v3 (class in lucid.models)": [[242, "lucid.models.YOLO_V3", false]], "yolo_v3() (in module lucid.models)": [[243, "lucid.models.yolo_v3", false]], "yolo_v3_tiny() (in module lucid.models)": [[244, "lucid.models.yolo_v3_tiny", false]], "zeros() (in module lucid)": [[487, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[488, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[213, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[214, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[464, 1, 1, "", "Tensor"], [490, 2, 1, "", "abs"], [465, 2, 1, "", "add"], [477, 2, 1, "", "arange"], [491, 2, 1, "", "arccos"], [492, 2, 1, "", "arcsin"], [493, 2, 1, "", "arctan"], [523, 2, 1, "", "argmax"], [524, 2, 1, "", "argmin"], [525, 2, 1, "", "argsort"], [526, 2, 1, "", "broadcast_to"], [494, 2, 1, "", "ceil"], [527, 2, 1, "", "chunk"], [495, 2, 1, "", "clip"], [528, 2, 1, "", "concatenate"], [496, 2, 1, "", "cos"], [497, 2, 1, "", "cosh"], [448, 2, 1, "", "count_flops"], [498, 2, 1, "", "cube"], [499, 2, 1, "", "cumprod"], [500, 2, 1, "", "cumsum"], [478, 2, 1, "", "diag"], [529, 2, 1, "", "diagonal"], [466, 2, 1, "", "div"], [467, 2, 1, "", "dot"], [479, 2, 1, "", "empty"], [480, 2, 1, "", "empty_like"], [501, 2, 1, "", "exp"], [481, 2, 1, "", "eye"], [530, 2, 1, "", "flatten"], [502, 2, 1, "", "floor"], [482, 2, 1, "", "full"], [483, 2, 1, "", "full_like"], [449, 2, 1, "", "grad_enabled"], [531, 2, 1, "", "histogram"], [532, 2, 1, "", "histogram2d"], [533, 2, 1, "", "histogramdd"], [534, 2, 1, "", "hstack"], [468, 2, 1, "", "inner"], [484, 2, 1, "", "linspace"], [453, 2, 1, "", "load"], [503, 2, 1, "", "log"], [504, 2, 1, "", "log2"], [536, 2, 1, "", "masked_fill"], [469, 2, 1, "", "matmul"], [505, 2, 1, "", "max"], [470, 2, 1, "", "maximum"], [506, 2, 1, "", "mean"], [537, 2, 1, "", "meshgrid"], [507, 2, 1, "", "min"], [471, 2, 1, "", "minimum"], [472, 2, 1, "", "multiply"], [451, 4, 1, "", "no_grad"], [538, 2, 1, "", "nonzero"], [485, 2, 1, "", "ones"], [486, 2, 1, "", "ones_like"], [473, 2, 1, "", "outer"], [539, 2, 1, "", "pad"], [474, 2, 1, "", "power"], [540, 2, 1, "", "ravel"], [508, 2, 1, "", "reciprocal"], [452, 2, 1, "", "register_model"], [541, 2, 1, "", "repeat"], [542, 2, 1, "", "reshape"], [543, 2, 1, "", "roll"], [509, 2, 1, "", "round"], [454, 2, 1, "", "save"], [510, 2, 1, "", "sign"], [511, 2, 1, "", "sin"], [512, 2, 1, "", "sinh"], [544, 2, 1, "", "sort"], [545, 2, 1, "", "split"], [513, 2, 1, "", "sqrt"], [514, 2, 1, "", "square"], [546, 2, 1, "", "squeeze"], [547, 2, 1, "", "stack"], [475, 2, 1, "", "sub"], [515, 2, 1, "", "sum"], [516, 2, 1, "", "swapaxes"], [517, 2, 1, "", "tan"], [518, 2, 1, "", "tanh"], [522, 2, 1, "", "tensor"], [476, 2, 1, "", "tensordot"], [548, 2, 1, "", "tile"], [549, 2, 1, "", "topk"], [519, 2, 1, "", "trace"], [520, 2, 1, "", "transpose"], [550, 2, 1, "", "tril"], [551, 2, 1, "", "triu"], [552, 2, 1, "", "unbind"], [553, 2, 1, "", "unique"], [554, 2, 1, "", "unsqueeze"], [521, 2, 1, "", "var"], [555, 2, 1, "", "vstack"], [556, 2, 1, "", "where"], [487, 2, 1, "", "zeros"], [488, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [65, 1, 1, "", "CSPNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [69, 1, 1, "", "CvT"], [73, 1, 1, "", "DenseNet"], [92, 1, 1, "", "EfficientFormer"], [78, 1, 1, "", "EfficientNet"], [79, 1, 1, "", "EfficientNet_V2"], [223, 1, 1, "", "FastRCNN"], [219, 1, 1, "", "FasterRCNN"], [96, 1, 1, "", "Inception"], [100, 1, 1, "", "InceptionNeXt"], [105, 1, 1, "", "InceptionResNet"], [109, 1, 1, "", "LeNet"], [113, 1, 1, "", "MaxViT"], [119, 1, 1, "", "MobileNet"], [120, 1, 1, "", "MobileNet_V2"], [121, 1, 1, "", "MobileNet_V3"], [122, 1, 1, "", "MobileNet_V4"], [132, 1, 1, "", "PVT"], [133, 1, 1, "", "PVT_V2"], [224, 1, 1, "", "RCNN"], [146, 1, 1, "", "ResNeSt"], [166, 1, 1, "", "ResNeXt"], [155, 1, 1, "", "ResNet"], [173, 1, 1, "", "SENet"], [183, 1, 1, "", "SKNet"], [188, 1, 1, "", "SwinTransformer"], [189, 1, 1, "", "SwinTransformer_V2"], [246, 1, 1, "", "Transformer"], [200, 1, 1, "", "VGGNet"], [205, 1, 1, "", "ViT"], [211, 1, 1, "", "Xception"], [236, 1, 1, "", "YOLO_V1"], [239, 1, 1, "", "YOLO_V2"], [242, 1, 1, "", "YOLO_V3"], [213, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "csp_darknet_53"], [67, 2, 1, "", "csp_resnet_50"], [68, 2, 1, "", "csp_resnext_50_32x4d"], [70, 2, 1, "", "cvt_13"], [71, 2, 1, "", "cvt_21"], [72, 2, 1, "", "cvt_w24"], [74, 2, 1, "", "densenet_121"], [75, 2, 1, "", "densenet_169"], [76, 2, 1, "", "densenet_201"], [77, 2, 1, "", "densenet_264"], [93, 2, 1, "", "efficientformer_l1"], [94, 2, 1, "", "efficientformer_l3"], [95, 2, 1, "", "efficientformer_l7"], [80, 2, 1, "", "efficientnet_b0"], [81, 2, 1, "", "efficientnet_b1"], [82, 2, 1, "", "efficientnet_b2"], [83, 2, 1, "", "efficientnet_b3"], [84, 2, 1, "", "efficientnet_b4"], [85, 2, 1, "", "efficientnet_b5"], [86, 2, 1, "", "efficientnet_b6"], [87, 2, 1, "", "efficientnet_b7"], [88, 2, 1, "", "efficientnet_v2_l"], [89, 2, 1, "", "efficientnet_v2_m"], [90, 2, 1, "", "efficientnet_v2_s"], [91, 2, 1, "", "efficientnet_v2_xl"], [220, 2, 1, "", "faster_rcnn_resnet_101_fpn"], [221, 2, 1, "", "faster_rcnn_resnet_50_fpn"], [101, 2, 1, "", "inception_next_atto"], [102, 2, 1, "", "inception_next_base"], [103, 2, 1, "", "inception_next_small"], [104, 2, 1, "", "inception_next_tiny"], [106, 2, 1, "", "inception_resnet_v1"], [107, 2, 1, "", "inception_resnet_v2"], [97, 2, 1, "", "inception_v1"], [98, 2, 1, "", "inception_v3"], [99, 2, 1, "", "inception_v4"], [110, 2, 1, "", "lenet_1"], [111, 2, 1, "", "lenet_4"], [112, 2, 1, "", "lenet_5"], [114, 2, 1, "", "maxvit_base"], [115, 2, 1, "", "maxvit_large"], [116, 2, 1, "", "maxvit_small"], [117, 2, 1, "", "maxvit_tiny"], [118, 2, 1, "", "maxvit_xlarge"], [123, 2, 1, "", "mobilenet"], [124, 2, 1, "", "mobilenet_v2"], [125, 2, 1, "", "mobilenet_v3_large"], [126, 2, 1, "", "mobilenet_v3_small"], [127, 2, 1, "", "mobilenet_v4_conv_large"], [128, 2, 1, "", "mobilenet_v4_conv_medium"], [129, 2, 1, "", "mobilenet_v4_conv_small"], [130, 2, 1, "", "mobilenet_v4_hybrid_large"], [131, 2, 1, "", "mobilenet_v4_hybrid_medium"], [134, 2, 1, "", "pvt_huge"], [135, 2, 1, "", "pvt_large"], [136, 2, 1, "", "pvt_medium"], [137, 2, 1, "", "pvt_small"], [138, 2, 1, "", "pvt_tiny"], [139, 2, 1, "", "pvt_v2_b0"], [140, 2, 1, "", "pvt_v2_b1"], [141, 2, 1, "", "pvt_v2_b2"], [142, 2, 1, "", "pvt_v2_b2_li"], [143, 2, 1, "", "pvt_v2_b3"], [144, 2, 1, "", "pvt_v2_b4"], [145, 2, 1, "", "pvt_v2_b5"], [147, 2, 1, "", "resnest_101"], [148, 2, 1, "", "resnest_14"], [149, 2, 1, "", "resnest_200"], [150, 2, 1, "", "resnest_26"], [151, 2, 1, "", "resnest_269"], [152, 2, 1, "", "resnest_50"], [153, 2, 1, "", "resnest_50_1s4x24d"], [154, 2, 1, "", "resnest_50_4s2x40d"], [156, 2, 1, "", "resnet_1001"], [157, 2, 1, "", "resnet_101"], [158, 2, 1, "", "resnet_152"], [159, 2, 1, "", "resnet_18"], [160, 2, 1, "", "resnet_200"], [161, 2, 1, "", "resnet_269"], [162, 2, 1, "", "resnet_34"], [163, 2, 1, "", "resnet_50"], [167, 2, 1, "", "resnext_101_32x16d"], [168, 2, 1, "", "resnext_101_32x32d"], [169, 2, 1, "", "resnext_101_32x4d"], [170, 2, 1, "", "resnext_101_32x8d"], [171, 2, 1, "", "resnext_101_64x4d"], [172, 2, 1, "", "resnext_50_32x4d"], [174, 2, 1, "", "se_resnet_101"], [175, 2, 1, "", "se_resnet_152"], [176, 2, 1, "", "se_resnet_18"], [177, 2, 1, "", "se_resnet_34"], [178, 2, 1, "", "se_resnet_50"], [179, 2, 1, "", "se_resnext_101_32x4d"], [180, 2, 1, "", "se_resnext_101_32x8d"], [181, 2, 1, "", "se_resnext_101_64x4d"], [182, 2, 1, "", "se_resnext_50_32x4d"], [184, 2, 1, "", "sk_resnet_18"], [185, 2, 1, "", "sk_resnet_34"], [186, 2, 1, "", "sk_resnet_50"], [187, 2, 1, "", "sk_resnext_50_32x4d"], [190, 2, 1, "", "swin_base"], [191, 2, 1, "", "swin_large"], [192, 2, 1, "", "swin_small"], [193, 2, 1, "", "swin_tiny"], [194, 2, 1, "", "swin_v2_base"], [195, 2, 1, "", "swin_v2_giant"], [196, 2, 1, "", "swin_v2_huge"], [197, 2, 1, "", "swin_v2_large"], [198, 2, 1, "", "swin_v2_small"], [199, 2, 1, "", "swin_v2_tiny"], [247, 2, 1, "", "transformer_base"], [248, 2, 1, "", "transformer_big"], [201, 2, 1, "", "vggnet_11"], [202, 2, 1, "", "vggnet_13"], [203, 2, 1, "", "vggnet_16"], [204, 2, 1, "", "vggnet_19"], [206, 2, 1, "", "vit_base"], [207, 2, 1, "", "vit_huge"], [208, 2, 1, "", "vit_large"], [209, 2, 1, "", "vit_small"], [210, 2, 1, "", "vit_tiny"], [164, 2, 1, "", "wide_resnet_101"], [165, 2, 1, "", "wide_resnet_50"], [212, 2, 1, "", "xception"], [237, 2, 1, "", "yolo_v1"], [238, 2, 1, "", "yolo_v1_tiny"], [240, 2, 1, "", "yolo_v2"], [241, 2, 1, "", "yolo_v2_tiny"], [243, 2, 1, "", "yolo_v3"], [244, 2, 1, "", "yolo_v3_tiny"], [214, 2, 1, "", "zfnet"]], "lucid.models.imggen": [[216, 1, 1, "", "DDPM"], [215, 1, 1, "", "VAE"]], "lucid.models.imggen.DDPM": [[216, 3, 1, "", "get_loss"], [216, 3, 1, "", "sample"]], "lucid.models.imggen.VAE": [[215, 3, 1, "", "current_beta"], [215, 3, 1, "", "decode"], [215, 3, 1, "", "encode"], [215, 3, 1, "", "reparameterize"]], "lucid.models.objdet.YOLO_V1": [[236, 3, 1, "", "forward"], [236, 3, 1, "", "get_loss"]], "lucid.models.objdet.YOLO_V2": [[239, 3, 1, "", "forward"], [239, 3, 1, "", "get_loss"], [239, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V3": [[242, 3, 1, "", "forward"], [242, 3, 1, "", "get_loss"], [242, 3, 1, "", "predict"]], "lucid.models.objdet.util": [[225, 1, 1, "", "FPN"], [226, 1, 1, "", "MultiScaleROIAlign"], [227, 1, 1, "", "ROIAlign"], [228, 1, 1, "", "SelectiveSearch"], [229, 2, 1, "", "apply_deltas"], [230, 2, 1, "", "bbox_to_delta"], [231, 2, 1, "", "clip_boxes"], [233, 2, 1, "", "iou"], [234, 2, 1, "", "nms"]], "lucid.nn": [[399, 1, 1, "", "AdaptiveAvgPool1d"], [400, 1, 1, "", "AdaptiveAvgPool2d"], [401, 1, 1, "", "AdaptiveAvgPool3d"], [402, 1, 1, "", "AdaptiveMaxPool1d"], [403, 1, 1, "", "AdaptiveMaxPool2d"], [404, 1, 1, "", "AdaptiveMaxPool3d"], [366, 1, 1, "", "AlphaDropout"], [405, 1, 1, "", "AvgPool1d"], [406, 1, 1, "", "AvgPool2d"], [407, 1, 1, "", "AvgPool3d"], [382, 1, 1, "", "BCELoss"], [383, 1, 1, "", "BCEWithLogitsLoss"], [389, 1, 1, "", "BatchNorm1d"], [390, 1, 1, "", "BatchNorm2d"], [391, 1, 1, "", "BatchNorm3d"], [377, 1, 1, "", "Bilinear"], [249, 1, 1, "", "Buffer"], [358, 1, 1, "", "Conv1d"], [359, 1, 1, "", "Conv2d"], [360, 1, 1, "", "Conv3d"], [324, 1, 1, "", "ConvBNReLU1d"], [325, 1, 1, "", "ConvBNReLU2d"], [326, 1, 1, "", "ConvBNReLU3d"], [361, 1, 1, "", "ConvTranspose1d"], [362, 1, 1, "", "ConvTranspose2d"], [363, 1, 1, "", "ConvTranspose3d"], [384, 1, 1, "", "CrossEntropyLoss"], [327, 1, 1, "", "DepthSeparableConv1d"], [328, 1, 1, "", "DepthSeparableConv2d"], [329, 1, 1, "", "DepthSeparableConv3d"], [367, 1, 1, "", "DropBlock"], [368, 1, 1, "", "DropPath"], [369, 1, 1, "", "Dropout"], [370, 1, 1, "", "Dropout1d"], [371, 1, 1, "", "Dropout2d"], [372, 1, 1, "", "Dropout3d"], [341, 1, 1, "", "ELU"], [412, 1, 1, "", "Embedding"], [378, 1, 1, "", "Flatten"], [342, 1, 1, "", "GELU"], [392, 1, 1, "", "GlobalResponseNorm"], [393, 1, 1, "", "GroupNorm"], [343, 1, 1, "", "HardSigmoid"], [344, 1, 1, "", "HardSwish"], [385, 1, 1, "", "HuberLoss"], [379, 1, 1, "", "Identity"], [394, 1, 1, "", "InstanceNorm1d"], [395, 1, 1, "", "InstanceNorm2d"], [396, 1, 1, "", "InstanceNorm3d"], [397, 1, 1, "", "LayerNorm"], [345, 1, 1, "", "LeakyReLU"], [380, 1, 1, "", "Linear"], [386, 1, 1, "", "MSELoss"], [408, 1, 1, "", "MaxPool1d"], [409, 1, 1, "", "MaxPool2d"], [410, 1, 1, "", "MaxPool3d"], [346, 1, 1, "", "Mish"], [250, 1, 1, "", "Module"], [252, 1, 1, "", "ModuleDict"], [253, 1, 1, "", "ModuleList"], [355, 1, 1, "", "MultiHeadAttention"], [387, 1, 1, "", "NLLLoss"], [251, 1, 1, "", "Parameter"], [254, 1, 1, "", "ParameterDict"], [255, 1, 1, "", "ParameterList"], [347, 1, 1, "", "ReLU"], [348, 1, 1, "", "ReLU6"], [374, 1, 1, "", "Rearrange"], [349, 1, 1, "", "SELU"], [330, 1, 1, "", "SEModule"], [356, 1, 1, "", "ScaledDotProductAttention"], [331, 1, 1, "", "SelectiveKernel"], [256, 1, 1, "", "Sequential"], [350, 1, 1, "", "Sigmoid"], [351, 1, 1, "", "Softmax"], [352, 1, 1, "", "Swish"], [353, 1, 1, "", "Tanh"], [414, 1, 1, "", "Transformer"], [415, 1, 1, "", "TransformerDecoder"], [416, 1, 1, "", "TransformerDecoderLayer"], [417, 1, 1, "", "TransformerEncoder"], [418, 1, 1, "", "TransformerEncoderLayer"], [364, 1, 1, "", "Unfold"], [420, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[303, 2, 1, "", "adaptive_avg_pool1d"], [304, 2, 1, "", "adaptive_avg_pool2d"], [305, 2, 1, "", "adaptive_avg_pool3d"], [306, 2, 1, "", "adaptive_max_pool1d"], [307, 2, 1, "", "adaptive_max_pool2d"], [308, 2, 1, "", "adaptive_max_pool3d"], [316, 2, 1, "", "affine_grid"], [277, 2, 1, "", "alpha_dropout"], [309, 2, 1, "", "avg_pool1d"], [310, 2, 1, "", "avg_pool2d"], [311, 2, 1, "", "avg_pool3d"], [296, 2, 1, "", "batch_norm"], [286, 2, 1, "", "bilinear"], [289, 2, 1, "", "binary_cross_entropy"], [290, 2, 1, "", "binary_cross_entropy_with_logits"], [269, 2, 1, "", "conv1d"], [270, 2, 1, "", "conv2d"], [271, 2, 1, "", "conv3d"], [272, 2, 1, "", "conv_transpose1d"], [273, 2, 1, "", "conv_transpose2d"], [274, 2, 1, "", "conv_transpose3d"], [291, 2, 1, "", "cross_entropy"], [278, 2, 1, "", "drop_block"], [279, 2, 1, "", "drop_path"], [280, 2, 1, "", "dropout"], [281, 2, 1, "", "dropout1d"], [282, 2, 1, "", "dropout2d"], [283, 2, 1, "", "dropout3d"], [258, 2, 1, "", "elu"], [319, 2, 1, "", "embedding"], [259, 2, 1, "", "gelu"], [297, 2, 1, "", "global_response_norm"], [317, 2, 1, "", "grid_sample"], [298, 2, 1, "", "group_norm"], [292, 2, 1, "", "huber_loss"], [300, 2, 1, "", "instance_norm"], [321, 2, 1, "", "interpolate"], [301, 2, 1, "", "layer_norm"], [261, 2, 1, "", "leaky_relu"], [288, 2, 1, "", "linear"], [313, 2, 1, "", "max_pool1d"], [314, 2, 1, "", "max_pool2d"], [315, 2, 1, "", "max_pool3d"], [294, 2, 1, "", "mse_loss"], [295, 2, 1, "", "nll_loss"], [302, 2, 1, "", "normalize"], [322, 2, 1, "", "one_hot"], [262, 2, 1, "", "relu"], [323, 2, 1, "", "rotate"], [268, 2, 1, "", "scaled_dot_product_attention"], [263, 2, 1, "", "selu"], [264, 2, 1, "", "sigmoid"], [265, 2, 1, "", "softmax"], [266, 2, 1, "", "tanh"], [276, 2, 1, "", "unfold"]], "lucid.nn.init": [[333, 2, 1, "", "constant"], [335, 2, 1, "", "kaiming_normal"], [336, 2, 1, "", "kaiming_uniform"], [337, 2, 1, "", "normal"], [338, 2, 1, "", "uniform"], [339, 2, 1, "", "xavier_normal"], [340, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[435, 1, 1, "", "ASGD"], [436, 1, 1, "", "Adadelta"], [437, 1, 1, "", "Adagrad"], [438, 1, 1, "", "Adam"], [439, 1, 1, "", "AdamW"], [440, 1, 1, "", "Adamax"], [441, 1, 1, "", "NAdam"], [423, 1, 1, "", "Optimizer"], [442, 1, 1, "", "RAdam"], [443, 1, 1, "", "RMSprop"], [444, 1, 1, "", "Rprop"], [445, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[425, 1, 1, "", "CosineAnnealingLR"], [426, 1, 1, "", "CyclicLR"], [427, 1, 1, "", "ExponentialLR"], [428, 1, 1, "", "LRScheduler"], [429, 1, 1, "", "LambdaLR"], [430, 1, 1, "", "MultiStepLR"], [431, 1, 1, "", "ReduceLROnPlateau"], [432, 1, 1, "", "StepLR"]], "lucid.random": [[455, 2, 1, "", "bernoulli"], [457, 2, 1, "", "permutation"], [458, 2, 1, "", "rand"], [459, 2, 1, "", "randint"], [460, 2, 1, "", "randn"], [461, 2, 1, "", "seed"], [462, 2, 1, "", "uniform"]], "lucid.transforms": [[559, 1, 1, "", "CenterCrop"], [557, 1, 1, "", "Compose"], [560, 1, 1, "", "Normalize"], [561, 1, 1, "", "RandomCrop"], [562, 1, 1, "", "RandomGrayscale"], [563, 1, 1, "", "RandomHorizontalFlip"], [564, 1, 1, "", "RandomRotation"], [565, 1, 1, "", "RandomVerticalFlip"], [566, 1, 1, "", "Resize"], [558, 1, 1, "", "ToTensor"]], "lucid.types": [[447, 1, 1, "", "Numeric"]], "lucid.visual": [[569, 2, 1, "", "draw_tensor_graph"]], "lucid.weights": [[571, 1, 1, "", "AlexNet_Weights"], [571, 1, 1, "", "DenseNet_121_Weights"], [571, 1, 1, "", "DenseNet_169_Weights"], [571, 1, 1, "", "DenseNet_201_Weights"], [571, 1, 1, "", "LeNet_1_Weights"], [571, 1, 1, "", "LeNet_4_Weights"], [571, 1, 1, "", "LeNet_5_Weights"], [571, 1, 1, "", "MobileNet_V2_Weights"], [571, 1, 1, "", "MobileNet_V3_Large_Weights"], [571, 1, 1, "", "MobileNet_V3_Small_Weights"], [571, 1, 1, "", "ResNeXt_101_32X8D_Weights"], [571, 1, 1, "", "ResNeXt_101_64X4D_Weights"], [571, 1, 1, "", "ResNeXt_50_32X4D_Weights"], [571, 1, 1, "", "ResNet_101_Weights"], [571, 1, 1, "", "ResNet_152_Weights"], [571, 1, 1, "", "ResNet_18_Weights"], [571, 1, 1, "", "ResNet_34_Weights"], [571, 1, 1, "", "ResNet_50_Weights"], [571, 1, 1, "", "VGGNet_11_Weights"], [571, 1, 1, "", "VGGNet_13_Weights"], [571, 1, 1, "", "VGGNet_16_Weights"], [571, 1, 1, "", "VGGNet_19_Weights"], [571, 1, 1, "", "Wide_ResNet_101_Weights"], [571, 1, 1, "", "Wide_ResNet_50_Weights"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 90, 108, 113, 125, 126, 131, 135, 147, 148, 149, 150, 151, 152, 205, 209, 216, 219, 221, 224, 225, 226, 236, 237, 238, 239, 240, 241, 242, 246, 249, 250, 251, 252, 254, 255, 256, 268, 303, 304, 305, 331, 356, 364, 384, 387, 399, 400, 401, 405, 408, 409, 414, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 447, 450, 452, 453, 454, 464, 469, 478, 499, 500, 506, 515, 516, 519, 521, 522, 543, 546, 558, 560, 568, 572], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 88, 89, 90, 91, 92, 98, 100, 105, 108, 109, 113, 123, 132, 133, 134, 135, 136, 137, 138, 173, 188, 189, 205, 215, 216, 219, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 541, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571], "000": [5, 6, 7, 8, 94, 108, 140, 195, 247, 248, 479, 480], "0000": [384, 385, 387], "0001": [431, 435], "000e": [479, 480], "001": [426, 435, 438, 439, 441, 442, 445], "002": [440, 441], "003": [108, 137], "004": 441, "005": 345, "006": 426, "008": [57, 108, 123], "00808": 108, "009": [108, 140], "00b": 108, "01": [16, 261, 345, 423, 425, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445], "01051757": 460, "011": [38, 108], "01191": 108, "013": [76, 108, 571], "014": [64, 108], "016": [67, 108, 156], "01697": 108, "01b": 108, "02": 216, "0205": 384, "0217": 384, "0227": 384, "024": [108, 118, 129, 178], "025": [62, 108], "026": [108, 167], "02767": 222, "028": [108, 172, 571], "0299": 384, "02b": 108, "030": [220, 222], "032": [88, 108, 163, 571], "03545": 108, "03b": 108, "044715": [259, 342], "0450": 384, "0451": 384, "046": [86, 108], "047": [108, 202, 571], "04719755": 491, "0474259": 264, "048": [108, 137, 180], "0480": 384, "04861": 108, "04b": 108, "05": [92, 296, 298, 300, 301, 324, 325, 326, 345, 389, 390, 391, 393, 394, 395, 396, 397, 414, 416, 418], "050": [108, 209], "0507": [263, 349], "05m": 108, "06": [40, 100, 297, 392, 436, 444], "066": [52, 108], "069": [108, 150, 161], "06m": 108, "07": [278, 289, 290, 291, 367, 382, 383, 384], "070": [108, 131], "0700": 384, "0706508": 353, "071": [108, 156], "072": [108, 144], "0721": 384, "073": [108, 186], "07722396": 352, "0794": 387, "07b": 108, "08": [431, 438, 439, 440, 441, 442, 443], "0802": 387, "081": [108, 117], "083": [104, 108], "08333333": 25, "085537": 501, "086727": 346, "088": [108, 178], "08955": 108, "08b": 108, "08m": 108, "0900": [351, 384], "096": [34, 108, 212], "0986": [265, 351], "09861229": 503, "09883": 108, "0992": 384, "09b": 108, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 173, 179, 180, 181, 182, 183, 187, 188, 189, 200, 205, 211, 213, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 236, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 453, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 73, 93, 108, 109, 110, 111, 112, 113, 134, 147, 148, 149, 150, 151, 152, 153, 154, 200, 213, 214, 226, 229, 230, 231, 233, 234, 252, 253, 256, 270, 271, 286, 288, 303, 355, 358, 359, 360, 371, 372, 377, 378, 380, 390, 391, 395, 399, 406, 407, 409, 414, 415, 416, 417, 418, 424, 427, 429, 430, 431, 437, 452, 459, 462, 463, 466, 469, 472, 473, 484, 493, 499, 500, 509, 515, 525, 531, 532, 549, 556, 559, 561, 562, 564, 572], "100": [6, 16, 30, 55, 88, 89, 90, 91, 92, 108, 201, 202, 203, 204, 228, 231, 234, 425, 452, 568, 571], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221], "1000000": 435, "1001": [108, 156, 384], "1003": 384, "1007": 108, "10096": 108, "101": [108, 146, 147, 157, 164, 167, 168, 169, 170, 171, 174, 179, 180, 181, 220, 222], "10106": 108, "1014": 263, "102": [108, 161], "1024": [16, 34, 39, 65, 72, 223, 248, 374], "1025": [253, 256], "1026": [253, 256], "1027": [253, 256], "10499": 264, "105": [62, 108], "1050": 350, "1054": 387, "1056": [253, 256], "10590": 108, "106": [108, 198, 222], "107": [39, 108], "108": [89, 108], "1097": 108, "11": [11, 93, 108, 131, 159, 176, 200, 201, 286, 358, 359, 360, 371, 377, 390, 391, 395, 406, 407, 409, 469, 559, 560, 561, 562, 564, 571], "110": [108, 151, 234], "1105": 108, "1109": 108, "111": [82, 108], "1111": 382, "112": [108, 125, 152, 224], "1134": 286, "114b": 562, "119": [108, 286], "1192": [264, 265, 351], "12": [20, 25, 36, 37, 55, 62, 72, 73, 74, 75, 76, 77, 83, 94, 108, 110, 111, 134, 138, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 205, 230, 234, 247, 248, 254, 286, 302, 305, 358, 359, 360, 371, 372, 377, 390, 391, 395, 401, 406, 407, 409, 469, 473, 474, 559, 561, 562, 564], "120": [88, 108, 109, 112, 125, 126, 231], "12000": [247, 248], "121": [73, 74, 108], "12122": 108, "123": [335, 336, 337, 338, 339, 340, 461, 462], "124": [37, 108, 335, 336, 339, 340], "125": [240, 241, 407], "1250": 385, "1251": 108, "1258": 108, "126": [108, 164, 571], "128": [16, 31, 34, 40, 45, 60, 61, 86, 94, 106, 108, 113, 117, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 155, 164, 165, 190, 200, 215, 219, 225, 244, 256, 331, 557, 568], "1280": [37, 121], "128x128": [557, 568], "12b": 108, "13": [70, 97, 108, 200, 202, 240, 241, 242, 286, 358, 359, 360, 377, 391, 406, 407, 409, 469, 559, 561, 562, 564, 571], "130": 231, "131": 571, "1314": 108, "132": [108, 201, 571], "1324": 108, "133": [108, 202, 222, 240, 571], "136": [90, 108, 131], "138": [108, 203, 571], "13b": 108, "13k": 108, "13x13": [242, 243, 244], "14": [33, 34, 35, 75, 108, 114, 115, 118, 140, 148, 358, 359, 360, 371, 372, 377, 391, 406, 407, 409, 469, 473, 482, 509, 559, 561, 562, 564, 571], "14030": 108, "1409": 108, "1415": 509, "14285715": 233, "143": [108, 204], "1436": 571, "144": 126, "1440": 222, "1448": 222, "145": 286, "147": 222, "148": [44, 108], "14899": 108, "149": [75, 108, 156, 222, 243, 571], "14b": 108, "14m": 108, "15": [0, 11, 51, 56, 57, 108, 222, 233, 241, 286, 358, 359, 360, 377, 391, 406, 407, 409, 469, 473, 519, 559, 561, 562, 564, 568], "150": 228, "1513": 387, "152": [108, 130, 158, 175], "1536": [35, 36, 38, 118], "155": 469, "1556": 108, "156": [101, 108], "157": [35, 108], "1588": [259, 342], "15b": 108, "15m": 108, "16": [55, 71, 72, 73, 74, 108, 109, 112, 121, 125, 126, 132, 167, 173, 190, 194, 200, 203, 205, 206, 207, 208, 209, 210, 216, 219, 223, 224, 225, 226, 236, 242, 243, 253, 254, 256, 268, 304, 305, 324, 325, 326, 330, 331, 355, 356, 358, 359, 360, 362, 363, 371, 372, 374, 377, 390, 391, 400, 401, 406, 407, 409, 414, 415, 416, 417, 418, 422, 469, 473, 499, 513, 559, 561, 562, 564], "160": [108, 125, 139, 157, 571], "16227766": 26, "16425": 387, "1643": 382, "166": 469, "167": [108, 344], "169": [73, 75, 108], "16b": 108, "16x16": 108, "17": [108, 150, 358, 359, 360, 377, 391, 407, 468, 559, 561, 562, 564], "170": [286, 571], "1704": 108, "171": [108, 115], "174": [32, 108], "17520119": 512, "177": [108, 169], "17b": 108, "18": [58, 59, 95, 108, 111, 136, 143, 159, 176, 184, 190, 191, 192, 194, 195, 196, 197, 198, 358, 359, 360, 371, 377, 391, 407, 472, 473, 559, 561, 562, 564, 571, 572], "1800": 384, "1804": 222, "182": [108, 230], "184": 125, "187": [108, 115], "18877099": 352, "189": 108, "19": [11, 70, 84, 108, 200, 204, 241, 270, 271, 286, 359, 360, 391, 467, 469, 476], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 70, 71, 72, 95, 100, 108, 110, 111, 114, 115, 116, 118, 138, 158, 191, 571], "194": [108, 167], "196": [54, 72, 108, 191, 197], "1966": [265, 350, 351], "197": [43, 50, 108], "198": [108, 125], "199": [108, 207], "1998": [108, 384], "19b": 108, "1_53": 108, "1d": [234, 269, 272, 303, 306, 309, 313, 324, 327, 364, 389, 394, 399, 402, 458, 462, 469, 478, 519, 531, 532, 537, 539, 540, 541, 548, 553], "1e": [20, 25, 40, 92, 100, 139, 140, 141, 143, 144, 145, 216, 278, 289, 290, 291, 296, 297, 298, 300, 301, 302, 324, 325, 326, 367, 382, 383, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 414, 416, 418, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "1e6": 435, "1k": 572, "1s4x24d": 153, "1st": [29, 213], "1x1": [65, 225], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 70, 72, 78, 79, 88, 89, 90, 91, 92, 93, 94, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 159, 176, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 213, 215, 216, 219, 223, 224, 226, 229, 230, 234, 236, 237, 238, 239, 242, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 412, 420, 422, 425, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 453, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571], "20": [0, 5, 6, 7, 8, 72, 76, 108, 216, 217, 228, 229, 230, 233, 234, 236, 237, 238, 240, 241, 252, 253, 256, 359, 360, 371, 391, 415, 416, 424, 428, 430, 432, 473, 501, 556, 571], "200": [95, 108, 125, 149, 160], "2000": 228, "2004": 108, "201": [76, 108, 149], "2011": 330, "2012": 108, "2014": [108, 217, 222], "2015": [108, 222], "2016": [108, 222, 236, 237], "2017": [108, 222, 245, 414], "2018": [108, 222, 330], "2019": 108, "2020": [108, 216, 217], "2021": 108, "2022": 108, "2023": [108, 330], "2024": 108, "2039": 387, "204": 360, "2048": [37, 38, 39, 65, 219, 246, 414, 416, 418], "209": [57, 108], "20b": 108, "21": [71, 90, 108, 162, 177, 220, 221, 222, 240, 254, 286, 359, 360, 391, 473, 571], "210": [91, 108], "2102": 108, "2103": 108, "211": 469, "2111": 108, "213": [245, 248], "214": 222, "21841": [49, 54], "21m": [108, 222], "22": [11, 67, 68, 106, 108, 142, 209, 212, 229, 234, 286, 359, 360, 371, 391, 467, 469], "2201": 108, "2204": 108, "2206": 108, "221": [91, 108], "2231": [384, 387], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 108, 113, 114, 115, 116, 117, 118, 123, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 213, 220, 221, 224, 226, 572], "2247": [389, 390, 391, 394, 395, 396, 397], "224x224": [67, 78, 97, 179, 180, 181, 182, 187, 221, 224], "226": 469, "22752314": 460, "2278": 108, "2291952": 346, "22b": 108, "23": [108, 137, 147, 157, 164, 167, 168, 169, 170, 171, 174, 222, 244, 359, 360, 391, 509], "230": 571, "2301": 108, "2315": 383, "232": [62, 108, 123, 181], "2324": [108, 349], "233": [48, 108], "234": [335, 336, 337, 338, 339, 340, 462], "2345": 509, "235": [83, 108], "236": [222, 238], "237": [245, 248], "238": [108, 126, 143], "23840584": 352, "23b": 108, "24": [73, 74, 121, 125, 126, 149, 153, 160, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 227, 230, 238, 286, 304, 359, 360, 371, 391, 400, 473, 476, 499], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 108, 125, 126, 204, 571], "240x240": 78, "242": 571, "2424": [265, 351], "244": 571, "2447": 351, "246": [108, 110, 571], "248": 571, "24d": 153, "25": [0, 108, 117, 141, 153, 163, 172, 184, 233, 264, 273, 274, 279, 350, 360, 386, 391, 406, 407, 466, 484, 508, 521, 571], "2500": [382, 385, 387], "2512": 341, "2525015": 346, "2547": 349, "256": [31, 34, 37, 39, 40, 55, 60, 61, 65, 113, 117, 132, 133, 134, 139, 155, 200, 219, 223, 225, 226, 227, 228, 244], "258": [108, 192], "25m": 108, "26": [63, 108, 150, 242, 254, 288, 360, 380, 391, 473], "260": 108, "260x260": 78, "26325684": 460, "264": [77, 108], "265": 108, "266": [59, 108], "2689": [265, 350, 351, 383], "26894142": 352, "269": [108, 151, 161], "26m": 222, "26x26": [242, 243, 244], "27": [32, 56, 66, 108, 135, 144, 152, 182, 286, 358, 360, 391, 498], "271": [58, 108, 222, 237], "272": [63, 108, 171, 571], "274": [108, 147, 187], "276": [335, 336, 339, 340], "277": [36, 72, 108], "278": [66, 108], "27b": 108, "28": [36, 37, 45, 53, 57, 104, 108, 110, 111, 178, 193, 199, 230, 286, 360, 378, 473], "280": [52, 108], "286": [108, 134], "287": [222, 240], "288": [108, 126, 149, 193], "289": [49, 80, 108], "28x28": [7, 8, 110, 111], "29": [108, 187, 360], "293": 108, "296": [60, 108], "299": [108, 211], "299r": 562, "299x299": [98, 99, 106, 107], "29b": 108, "2_i": [394, 395, 396], "2c": 426, "2d": [270, 273, 282, 304, 307, 310, 314, 316, 325, 328, 362, 390, 395, 400, 403, 469, 478, 481, 516, 519, 529, 530, 532, 533, 537, 538, 539, 541, 548, 564], "2e": 440, "2k": 224, "2nd": [29, 213], "2x": 154, "2x2": [276, 559, 561], "2x3": 316, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 100, 101, 102, 103, 104, 108, 110, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 198, 199, 200, 205, 211, 213, 216, 219, 220, 221, 222, 223, 224, 228, 234, 236, 237, 238, 240, 241, 242, 243, 244, 249, 250, 251, 253, 254, 255, 256, 259, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 292, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 420, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571, 572], "30": [85, 94, 98, 108, 151, 154, 161, 237, 238, 253, 323, 360, 426, 430, 431, 556, 564, 571], "300": [108, 220, 221, 228], "300x300": 78, "301": [36, 108], "302": [89, 108, 222], "3026": 387, "3034016": 346, "304": [108, 116, 208], "3072": [39, 205], "308": [108, 197], "30823025": 352, "31": [71, 108, 286, 360, 469], "310": [479, 480], "316": 108, "31622777": 26, "319": [108, 571], "31b": 108, "32": [11, 16, 31, 55, 66, 73, 75, 76, 108, 112, 113, 127, 139, 146, 147, 148, 149, 150, 151, 152, 167, 168, 169, 170, 172, 190, 194, 215, 216, 223, 224, 225, 226, 227, 242, 243, 253, 256, 286, 288, 304, 324, 325, 326, 330, 331, 359, 360, 362, 374, 380, 400, 422, 447, 467, 468, 473], "320": [94, 108, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150], "321": [335, 336, 339, 340], "326": [108, 174, 208], "328": [95, 108], "32b": 108, "32m": 108, "32x16d": 108, "32x32": [5, 6, 109, 112], "32x32d": 108, "32x4d": [68, 108, 179, 182, 187], "32x8d": [108, 180], "33": [77, 108, 253, 256, 288, 360, 380, 499], "330": [33, 108], "3318": 383, "3333": 302, "33333333": 25, "336": [38, 43, 108, 170, 201, 230, 571], "337": [77, 108], "339": 571, "33b": 108, "34": [108, 162, 177, 185, 253, 256, 286, 360, 469, 473], "342": [335, 336, 339, 340], "344": [84, 108], "345": [335, 336, 337, 338, 339, 340, 462], "349": [108, 199], "34b": 108, "35": [107, 108, 253, 256, 360], "350": [54, 108], "352": [97, 108], "354": [108, 193], "355": [87, 108], "3567": [382, 387], "357": [108, 203, 214, 571], "359": [108, 135], "35b": 108, "36": [108, 149, 158, 160, 175, 360], "362": [108, 141], "364": 108, "367": 108, "3679": [258, 263, 341], "368": [108, 184, 186], "36b": 108, "36th": 108, "37": [108, 130, 358], "370": [82, 108], "372": 286, "375": 386, "3750": 385, "376": 108, "37754067": 352, "378": [108, 111, 571], "37b": 108, "38": 108, "380": 108, "380x380": 78, "383": [108, 118], "38344152": 458, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 70, 71, 95, 100, 108, 114, 115, 116, 118, 219], "38629436": 503, "389056": 501, "38b": 108, "38th": 108, "39": 108, "392": [72, 98, 108], "393": [85, 97, 108], "3935": 341, "3965": 108, "3977": 108, "39b": 108, "39m": 108, "3d": [271, 274, 283, 305, 308, 311, 315, 326, 329, 360, 363, 364, 391, 396, 401, 404], "3x3": [108, 225, 364, 463], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 65, 71, 73, 78, 92, 93, 94, 100, 101, 108, 109, 110, 111, 113, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 216, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 233, 234, 239, 254, 256, 268, 269, 270, 271, 272, 273, 276, 278, 279, 281, 282, 283, 286, 288, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 327, 328, 329, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 420, 431, 435, 438, 442, 443, 445, 450, 457, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 486, 488, 495, 499, 500, 503, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571], "40": [99, 108, 121, 125, 126, 145, 154, 226, 430, 556], "400": [46, 108, 112, 194, 207], "404": 222, "4044": 382, "406": 224, "4076": 384, "4078608": 346, "408": [58, 108], "4096": [29, 213, 219, 223], "40b": 108, "40d": 154, "41": [108, 136], "41421356": 18, "415": 108, "416": [108, 117, 161, 179, 210, 222, 239, 240, 241, 242, 243, 244], "416362": 346, "41666667": 25, "416x416": [243, 244], "417": [108, 154], "41808962": 460, "419974": 266, "4199743": 353, "41b": 108, "42": [38, 39, 195, 286, 330, 463], "421": [335, 336, 339, 340], "423": [335, 336, 337, 338], "424": 108, "42718872": 26, "4278": 108, "4284": 108, "4286": [302, 382], "42b": 108, "43": [11, 58, 86, 108, 221, 222, 467, 469, 476], "431": [103, 108], "432": [85, 108], "4323": 341, "4375": 385, "43758721": 458, "43b": 108, "44": [59, 108, 157, 169, 571], "440": [90, 108], "4472": 302, "4472136": 20, "448": [58, 59, 87, 93, 108, 222, 236, 237, 238], "4495": [391, 396], "44b": 108, "45": [108, 143, 185, 286, 323, 564], "450": 244, "4510": 108, "4520": 108, "4545": 366, "455": [108, 171, 571], "456": [108, 224], "456x456": 78, "457": [108, 138], "45b": 108, "45m": 222, "46": [44, 108], "460": [95, 108], "462": [222, 238], "463": [67, 108], "464": [42, 56, 108, 154], "468": [108, 168], "46b": 108, "4700": 108, "4708": 108, "47112767": 493, "472": [108, 168, 245, 248], "4742": 383, "476": [108, 191], "47b": 108, "47m": 108, "48": [73, 76, 77, 93, 108, 126, 147, 151, 161, 179, 191, 195, 196, 197, 288, 380], "480": [70, 75, 108, 125, 571], "481": [108, 125], "483": [108, 152, 571], "485": 224, "48b": 108, "48m": 108, "49": [103, 108, 174, 192, 198], "492": [108, 136], "496": [53, 108], "4979": 341, "49b": 108, "49k": 108, "4s2x40d": [108, 154], "4x": 153, "4x4": 566, "5": [1, 2, 11, 13, 14, 16, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 65, 66, 67, 68, 78, 80, 92, 94, 98, 108, 109, 110, 111, 112, 113, 116, 117, 121, 125, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 183, 184, 185, 186, 210, 213, 219, 223, 224, 226, 227, 229, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 250, 251, 252, 253, 254, 256, 259, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 292, 294, 296, 298, 300, 301, 303, 306, 309, 310, 316, 317, 319, 321, 324, 325, 326, 331, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 358, 359, 360, 361, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 402, 405, 406, 407, 409, 410, 414, 416, 418, 424, 426, 428, 430, 431, 432, 444, 450, 455, 457, 459, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 484, 486, 488, 490, 491, 492, 505, 506, 507, 508, 510, 515, 516, 519, 520, 521, 522, 523, 529, 531, 532, 533, 534, 537, 542, 543, 544, 545, 549, 550, 551, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571, 572], "50": [5, 6, 11, 67, 68, 108, 146, 152, 153, 154, 155, 163, 165, 172, 178, 182, 186, 187, 220, 221, 222, 228, 231, 288, 380, 425, 444, 467, 469, 484, 562, 563, 565, 568], "5000": [246, 382, 385, 387], "504": [108, 124, 571], "508": [220, 222], "509": [68, 108], "50_1s4x24d": 108, "50b": 108, "510": 108, "5108": 387, "512": [31, 34, 37, 39, 40, 55, 65, 94, 107, 108, 113, 117, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 155, 159, 185, 215, 219, 223, 224, 225, 244, 246, 247, 355, 414, 415, 416, 417, 418, 571], "515": [221, 222], "516": [34, 108], "519": 108, "51b": 108, "52": 242, "520": [101, 108], "52359878": 492, "528": [56, 108], "528x528": 78, "52b": 108, "52x52": [242, 243, 244], "53": [33, 66, 108, 242, 243, 286, 468], "530": [108, 168], "531": [108, 571], "532": [108, 191, 571], "536": [66, 83, 108], "537": [108, 126], "54": 571, "542": 571, "543": [335, 336, 337, 338, 339, 340, 462], "54308063": 497, "544": [103, 108, 203, 245, 247, 571], "545": 474, "5455": 366, "549": [108, 157, 571], "54b": 108, "55": [89, 108, 116, 135], "553": [60, 108, 142, 571], "556": [108, 144], "557": [108, 163, 571], "558": [38, 108, 222], "559": [108, 182], "55b": 108, "560": [81, 108, 148], "563": [335, 336, 339, 340], "564": [108, 195], "5652": 571, "567": [108, 206], "5672": 108, "568": [91, 108], "5683": 108, "569": [108, 180], "57": [108, 186, 286], "57079633": [491, 492], "5714": 302, "5720": 108, "5730": 108, "5731": 383, "57366333": 461, "575": 571, "576": 126, "57b": 108, "580": 222, "582": 108, "584": [108, 245, 247], "5849625": 504, "586": [99, 108], "587": 222, "587g": 562, "589": [45, 108], "590": [108, 127], "591": [42, 108], "592": [61, 108, 176], "5987": 108, "5995": 108, "5998": 245, "59b": 108, "5d": 274, "5th": [29, 213], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 65, 70, 71, 73, 74, 75, 76, 77, 78, 92, 93, 94, 95, 100, 108, 109, 112, 114, 115, 118, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 162, 163, 165, 172, 177, 178, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 213, 246, 254, 255, 269, 270, 271, 272, 276, 278, 283, 286, 288, 297, 298, 302, 303, 306, 307, 316, 317, 319, 336, 340, 343, 348, 358, 359, 360, 364, 367, 369, 370, 371, 372, 377, 378, 380, 382, 389, 390, 391, 392, 394, 395, 396, 397, 399, 402, 403, 406, 407, 409, 410, 414, 415, 417, 436, 444, 450, 457, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 488, 499, 500, 505, 506, 507, 515, 516, 519, 520, 521, 522, 527, 529, 534, 541, 542, 543, 544, 545, 550, 551, 552, 555, 558, 559, 560, 561, 562, 564, 566], "60": [5, 6, 108, 134, 158, 231, 476, 571], "600": [78, 108, 224], "6008": 245, "600x600": 78, "6052": 387, "606": [108, 192], "6065": 341, "608": [37, 108, 214], "60b": 108, "61": [30, 108, 112, 571], "6105": 108, "611": [108, 148], "6114": 108, "6124": [389, 390, 391, 394, 395, 396, 397], "617": [88, 108], "62": [108, 144, 214, 220, 222, 243, 245, 247, 286], "622": [71, 108], "623": [51, 108], "626": [108, 114], "62686041": 512, "62b": 108, "630": 108, "632": [36, 108, 207, 208], "6321": [258, 341], "63245553": 26, "635": [53, 108], "636": [80, 108], "63b": 108, "64": [31, 40, 65, 67, 68, 70, 71, 73, 77, 92, 94, 108, 113, 114, 115, 116, 117, 121, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 160, 171, 183, 200, 215, 219, 223, 224, 225, 226, 253, 256, 286, 330, 331, 447], "640": [49, 84, 108], "641": 108, "645": 108, "64589411": 458, "647": [108, 184], "648": [108, 136], "649": [216, 217], "64b": 108, "64x4d": [108, 181], "654": [335, 336, 337, 338, 339, 340, 462], "656": [35, 108, 206], "657": [108, 196, 335, 336, 339, 340], "6590": [265, 351], "65b": 108, "66": [87, 108, 175], "660": [49, 108], "664": [108, 209], "6652": 351, "666": [108, 139], "66666667": 25, "6667": [302, 382], "667": [108, 204], "668": [108, 196], "6682": 382, "669": [108, 160], "66b": 108, "67": [469, 571], "672": [108, 125, 162, 571], "67326": 349, "6733": 263, "676": [108, 153], "6767": 571, "677": 108, "678": [335, 336, 337, 338, 339, 340], "67b": 108, "67m": 108, "68": 571, "688": [39, 108], "68811989": 460, "689": [108, 159, 571], "68b": 108, "69": 572, "6902": 571, "69314718": 503, "696": [71, 108, 143, 164, 571], "6976": 571, "6992": 571, "69b": 108, "7": [10, 11, 14, 24, 39, 58, 59, 64, 74, 81, 108, 113, 133, 139, 140, 141, 142, 143, 144, 145, 188, 189, 200, 219, 223, 226, 227, 236, 237, 238, 254, 269, 270, 271, 276, 278, 283, 286, 288, 289, 291, 303, 316, 317, 319, 331, 342, 348, 349, 350, 353, 358, 359, 360, 364, 367, 371, 372, 377, 378, 380, 382, 383, 384, 386, 390, 391, 395, 396, 399, 402, 406, 407, 409, 410, 455, 459, 462, 465, 467, 468, 469, 473, 475, 476, 478, 482, 484, 501, 506, 515, 516, 519, 520, 521, 529, 533, 545, 548, 550, 551, 558, 559, 560, 561, 562, 564, 566, 571], "70": [7, 8, 108, 149], "7001": 384, "704": [77, 108, 169], "706": [108, 112, 134, 571], "70710678": [20, 511], "708": [46, 108], "70b": 108, "7132": 108, "7141": 108, "7147": 387, "715": [108, 128], "7159": 571, "716": [222, 237], "717": [47, 108, 210], "7182": 509, "7182818": 501, "7188": 571, "71b": 108, "71m": [108, 222], "72": [121, 125, 126, 509], "720": [222, 238], "7237": 571, "7263": 222, "726791": 108, "7271": 222, "72b": 108, "73": 108, "731": [108, 198], "7311": [265, 350, 351], "7331": 571, "734": [108, 118, 222, 237], "739": [106, 108], "73b": 108, "74": [469, 571], "7404": 571, "7434": 571, "745": [108, 197], "748": [102, 108], "74b": 108, "75": [234, 273, 288, 380, 386, 435, 484], "755": [108, 130], "7560": 571, "757": [108, 116], "7581": 263, "75b": 108, "760": [108, 139, 147, 187], "7613": 571, "76159416": [352, 518], "7616": [266, 353], "76219569": 497, "7635": 349, "767": [43, 108], "768": [32, 33, 35, 36, 38, 40, 41, 62, 72, 95, 100, 108, 114, 115, 116, 118, 134, 190, 205], "7690": 571, "77": [222, 571], "770": [37, 108], "772": 474, "7737": 571, "774": [108, 129], "776": [61, 108, 114], "7761": 571, "778": [108, 176], "77b": 108, "78": [108, 165], "7831": 571, "78357324": 460, "784": [16, 215, 378], "7846": 571, "78539816": 493, "7885": 571, "789": 108, "78b": 108, "790": [35, 108], "7906": 571, "791": [108, 170, 571], "79172504": 458, "792": [108, 167], "7931": 571, "7937": 571, "795": [81, 108], "796": [108, 196], "797": [108, 162, 571], "79b": 108, "7x7": 213, "8": [11, 23, 27, 38, 39, 55, 60, 61, 73, 78, 95, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 158, 161, 167, 168, 169, 170, 171, 172, 175, 184, 185, 186, 190, 194, 225, 226, 228, 234, 237, 238, 242, 243, 246, 253, 254, 256, 268, 269, 270, 271, 273, 276, 278, 283, 286, 288, 289, 302, 303, 304, 305, 308, 316, 317, 319, 324, 325, 326, 330, 342, 343, 349, 350, 353, 355, 356, 358, 359, 360, 362, 363, 364, 367, 369, 370, 371, 372, 377, 378, 380, 382, 386, 390, 391, 393, 395, 396, 399, 400, 401, 402, 404, 406, 407, 409, 410, 414, 415, 416, 417, 418, 431, 438, 439, 440, 441, 442, 443, 455, 459, 466, 467, 468, 469, 473, 474, 476, 477, 478, 494, 498, 506, 515, 516, 519, 520, 521, 529, 533, 545, 549, 550, 551, 558, 559, 560, 561, 562, 564, 566, 569, 571, 572], "80": [5, 6, 7, 8, 125, 242, 243, 244], "800": [47, 51, 64, 108, 224], "8005": 384, "808": [108, 158, 571], "80b": 108, "81": [95, 108], "817": [98, 108], "818": 108, "8182": 366, "81b": 108, "82": [34, 108, 145, 286, 571], "821": [108, 175, 222, 241], "8210": 571, "82b": 108, "83": [108, 171, 571], "832": [104, 108], "8325": 571, "833": 108, "83b": 108, "84": [109, 111, 112], "840": [30, 50, 93, 102, 108, 571], "8413": [259, 342], "842": [108, 199], "847": [107, 108], "848": [108, 135, 175, 202, 571], "849": 108, "84b": 108, "84m": 222, "856": [63, 74, 108, 141, 571], "85772238": 352, "8584": 349, "85b": 108, "86": [102, 108, 206], "862": [108, 212], "863": [108, 201, 222, 241, 571], "864": [68, 108, 127, 160], "868": [108, 177], "869": [108, 195], "87": [108, 190, 194], "872": [108, 124, 153, 174, 571], "8740": 571, "876": [335, 336, 339, 340, 462], "87m": 108, "88": [42, 47, 108, 126, 170, 181, 571], "880": [108, 115], "8808": [265, 350, 351], "882": [108, 145], "883": 571, "884": [44, 108], "886": [108, 164, 571], "8863": 571, "887": 474, "88m": 108, "8907": 571, "891773": 458, "8924": 571, "893": [94, 108], "8944": 302, "89442719": 20, "895": [108, 185], "896": [108, 182], "89b": 108, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 82, 92, 100, 108, 128, 229, 234, 242, 243, 270, 276, 278, 286, 288, 303, 316, 319, 358, 359, 360, 364, 367, 371, 377, 380, 382, 390, 391, 395, 399, 406, 407, 409, 424, 427, 435, 436, 438, 439, 440, 441, 442, 443, 445, 455, 459, 462, 465, 469, 473, 474, 475, 478, 483, 502, 513, 514, 525, 529, 549, 550, 551, 558, 559, 560, 561, 562, 564, 571], "902": [221, 222], "9029": 571, "9038": 571, "904": [108, 172, 571], "907": [216, 217], "90709145": 461, "9087": 571, "9091": 366, "9120": 387, "9124": 571, "9134": 571, "9163": 387, "9197": 571, "91m": 108, "920": [108, 134], "922": [108, 194], "9248": 571, "928": [76, 93, 108, 571], "9281": 571, "9286": 571, "929": [108, 151], "92b": 108, "93": [108, 180], "933": 222, "9337": 571, "9370": 571, "93b": 108, "93k": 108, "93m": [108, 222], "94": 156, "9409": 571, "9439592": 346, "944": [32, 108], "9457": 571, "9486833": 26, "949e": [479, 480], "94b": 108, "95": [429, 571], "9526": 264, "9534": 571, "9545": 342, "955": [108, 179], "956": [50, 108], "958": [108, 177], "95b": 108, "96": [32, 33, 40, 41, 64, 93, 95, 100, 108, 113, 114, 115, 116, 126, 188, 189], "960": 125, "9600": 571, "96366276": 458, "9640": 353, "96402758": 518, "9645": 571, "968": [54, 108], "97": 571, "973": [108, 165], "974": [222, 243], "976": [59, 108], "978": [39, 74, 108, 571], "97b": 108, "984": [99, 108, 145, 181], "9865277": 346, "98b": 108, "99": [231, 443], "9957": 387, "997": [70, 108, 244], "99734545": 461, "9981": 571, "999": [0, 438, 439, 440, 441, 442], "99b": 108, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 65, 66, 68, 70, 71, 72, 79, 105, 108, 109, 119, 122, 132, 134, 135, 136, 137, 138, 146, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 239, 244, 250, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 286, 288, 289, 290, 291, 295, 296, 297, 298, 300, 301, 302, 316, 317, 321, 322, 331, 356, 366, 367, 369, 370, 371, 372, 374, 382, 383, 384, 387, 389, 390, 391, 392, 394, 395, 396, 397, 412, 414, 415, 416, 417, 418, 422, 423, 424, 429, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 455, 457, 458, 459, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 564], "As": [65, 362, 461], "At": [16, 420, 431], "Be": [0, 10], "By": [0, 2, 3, 16, 108, 122, 129, 156, 157, 158, 159, 160, 161, 162, 163, 251, 323, 422, 442, 450, 455, 458, 459, 460, 462, 558, 568], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 127, 128, 129, 131, 219, 224, 236, 239, 242, 256, 258, 259, 261, 262, 263, 264, 266, 272, 286, 288, 302, 321, 322, 335, 336, 339, 340, 349, 358, 359, 360, 361, 364, 377, 380, 389, 390, 391, 394, 395, 396, 422, 434, 454, 457, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 499, 500, 501, 503, 504, 505, 506, 507, 511, 513, 515, 516, 519, 520, 521, 525, 539, 541, 546, 548, 552, 554, 568], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 65, 92, 155, 215, 216, 223, 224, 239, 242, 250, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 279, 283, 286, 288, 296, 298, 300, 304, 305, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 335, 336, 355, 356, 358, 359, 360, 361, 362, 363, 368, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 443, 444, 447, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 558, 562, 563, 565, 566, 569, 572], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 66, 67, 74, 75, 76, 77, 92, 95, 96, 97, 98, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 131, 136, 143, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 176, 189, 196, 198, 200, 212, 215, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 234, 236, 238, 239, 242, 245, 250, 252, 253, 254, 255, 256, 272, 273, 274, 279, 283, 286, 317, 319, 321, 323, 324, 325, 326, 330, 342, 343, 347, 348, 353, 355, 356, 361, 363, 368, 374, 377, 379, 382, 384, 385, 386, 387, 393, 399, 400, 401, 412, 414, 415, 417, 420, 422, 423, 434, 435, 441, 443, 444, 445, 447, 450, 451, 453, 454, 457, 461, 464, 465, 466, 467, 470, 471, 472, 474, 475, 484, 505, 507, 525, 528, 534, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 552, 553, 555, 557, 558], "Its": [11, 27, 463], "Near": 25, "No": [276, 279, 378, 383, 448], "Not": [317, 379], "One": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "Or": 572, "Such": 464, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572], "Then": [216, 220, 476], "There": 542, "These": [4, 10, 17, 20, 23, 26, 28, 31, 88, 89, 90, 91, 113, 118, 127, 128, 129, 130, 131, 134, 164, 165, 184, 185, 186, 212, 218, 224, 366, 369, 370, 371, 372, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 444, 463, 568, 570], "To": [3, 16, 108, 216, 217, 221, 222, 239, 242, 245, 424, 434, 455, 457, 460, 463, 479, 480, 537, 553, 568], "With": [3, 108, 140, 144, 243, 276, 279, 298, 482, 483, 558, 568], "_": [13, 14, 15, 23, 216, 236, 239, 242, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 266, 288, 316, 319, 321, 361, 362, 374, 390, 391, 394, 395, 396, 405, 406, 407, 408, 409, 410, 412, 435, 436, 438, 439, 440, 441, 443, 445, 467, 468, 469, 473, 499, 500, 519, 520, 529, 550, 551, 552, 559, 560, 561, 563, 564, 565], "_0": 216, "_1": [20, 252, 253, 254, 255, 256, 286, 377, 473, 528, 534, 555], "_2": [20, 252, 253, 254, 255, 256, 286, 377, 473, 528, 534, 555], "__call__": [1, 250, 451], "__enter__": 451, "__exit__": 451, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 65, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 132, 133, 146, 200, 213, 219, 223, 224, 225, 226, 227, 228, 249, 250, 251, 252, 253, 254, 255, 279, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 374, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 422, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 452, 464, 557, 558], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 423, "__setattr__": 250, "_a": 476, "_activ": 265, "_arraylik": [478, 480, 483, 486, 488], "_arraylikeint": 539, "_arrayorscalar": [249, 251, 455, 464, 522], "_b": 476, "_backward_op": 16, "_base_activ": 109, "_base_dtyp": [479, 484], "_block": 367, "_builtinnumer": [464, 482, 483], "_c": 560, "_channel": 225, "_d": 274, "_darknet_53_tini": 244, "_decai": 441, "_devicetyp": [455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "_dtype_bit": 447, "_einopspattern": [13, 14, 15, 374], "_fanmod": [335, 336], "_fasterrcnnloss": 219, "_grad_en": 449, "_h": [273, 274], "_i": [20, 24, 236, 265, 279, 286, 351, 368, 386, 389, 393, 397, 405, 408, 464, 467, 468, 470, 471, 473, 474, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 506, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 528, 534, 541, 546, 549, 552, 554, 555], "_in": [335, 336, 339, 340], "_interpolatetyp": [317, 420], "_j": [265, 351, 405, 408, 473, 506, 515, 520, 521], "_k": 547, "_layer": [415, 417], "_left": 321, "_make_lay": 200, "_mlphead": 100, "_mlx_dtype": 447, "_mlxarrai": 464, "_modul": 250, "_n": [20, 252, 253, 254, 255, 256, 316, 528, 534, 555], "_nograd": 451, "_np_dtype": 447, "_out": [335, 336, 339, 340, 541, 548], "_p": [24, 302, 319, 412], "_pad": 539, "_paddingstr": [324, 325, 326, 327, 328, 329, 358, 359, 360, 361, 362, 363], "_paddingtyp": 317, "_paramet": 250, "_reducestr": 14, "_reductiontyp": [289, 291, 292, 294, 295, 382, 383, 384, 385, 386, 387], "_resnestbottleneck": 146, "_right": 321, "_scalar": [268, 333, 337, 338, 339, 340, 356, 477, 482, 483, 484, 495, 536], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [174, 175, 178], "_seresnetmodul": [176, 177], "_shapelik": [301, 397, 458, 459, 482, 485, 487, 526, 542, 546, 554], "_size": [303, 304, 305, 306, 367], "_skresnetmodul": [184, 185, 186], "_slope": 345, "_sortkind": 525, "_statedict": 423, "_t": [216, 442, 443], "_tensor": [355, 414, 416, 418], "_tensorop": 464, "_u": 25, "_util": 552, "_v": 25, "_valu": [495, 539], "_var": 216, "_w": [273, 274], "_weight": 412, "_width": 539, "a_": [11, 31, 416, 499, 500], "a_1": [355, 545], "a_2": 545, "a_h": 355, "a_i": [355, 470, 471, 474, 545], "a_k": 545, "aaai": 108, "ab": [431, 489], "abbeel": 217, "abc": [2, 423], "abil": [108, 568], "about": 10, "abov": [239, 449, 461, 478, 481, 529, 550], "abs_pos_emb": [188, 189], "absolut": [23, 24, 31, 188, 189, 233, 239, 292, 431, 440, 454, 490], "abstract": [2, 3, 134, 136, 422, 423, 434, 435, 443, 445, 447, 570], "abstractmethod": 423, "abund": [49, 130], "acc": [571, 572], "acceler": [108, 223, 349, 389, 390, 391, 426, 435, 441, 443, 445, 464], "accept": [215, 228, 361, 379, 525, 572], "access": [0, 2, 3, 4, 5, 6, 7, 8, 16, 167, 168, 169, 170, 171, 172, 220, 249, 251, 252, 253, 254, 255, 256, 448, 542, 570], "accord": [11, 13, 15, 279, 317, 321, 358, 359, 360, 374, 377, 380, 384, 387, 436, 437, 438, 439, 440, 441, 442, 520, 526, 556], "accordingli": [19, 298, 516, 556], "account": [23, 25, 26, 346, 352, 448], "accumul": [317, 435, 436, 437, 448, 464, 465, 466, 470, 471, 472, 475, 526], "accur": [175, 222, 346], "accuraci": [47, 49, 50, 51, 52, 65, 68, 88, 89, 90, 91, 92, 93, 94, 95, 102, 104, 108, 119, 120, 121, 127, 128, 129, 130, 131, 178, 206, 207, 208, 220, 221, 222, 238, 239], "achiev": [13, 92, 108, 140, 166, 167, 168, 169, 170, 171, 172, 269, 270, 271, 303, 374, 399, 400, 401, 404, 441, 563, 565], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 65, 92, 108, 113, 123, 134, 139, 140, 141, 143, 144, 145, 189, 197, 224, 226, 242, 249, 253, 256, 297, 298, 301, 303, 304, 305, 339, 340, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 447, 454, 455, 458, 459, 460, 461, 462, 463, 479, 480, 506, 521, 570], "act": [16, 65, 439, 543], "act_lay": [69, 92, 113], "activ": [29, 40, 57, 59, 61, 65, 69, 92, 108, 109, 113, 116, 117, 125, 126, 156, 160, 161, 173, 200, 213, 252, 256, 258, 259, 261, 262, 263, 264, 265, 266, 277, 290, 324, 325, 326, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 366, 367, 369, 370, 371, 372, 382, 383, 384, 387, 389, 390, 391, 397, 414, 416, 418, 448, 505, 507, 570], "actual": [251, 382, 384, 386, 387, 561], "acycl": 16, "ad": [15, 73, 121, 155, 216, 229, 250, 252, 253, 254, 255, 256, 269, 270, 271, 272, 273, 278, 286, 288, 289, 291, 296, 297, 298, 300, 301, 309, 310, 311, 313, 314, 315, 322, 324, 325, 326, 355, 358, 359, 360, 361, 362, 363, 364, 367, 382, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 414, 416, 418, 436, 437, 438, 439, 440, 441, 442, 443, 452, 554, 568], "adadelta": 446, "adagrad": [436, 446], "adam": [108, 439, 440, 441, 442, 446], "adamax": 446, "adamw": 446, "adapt": [10, 29, 67, 96, 108, 109, 127, 130, 146, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 213, 303, 304, 305, 306, 307, 308, 330, 331, 399, 400, 401, 402, 403, 404, 427, 431, 436, 437, 438, 441, 442, 443, 444], "adaptive_avg_pool1d": [285, 312, 399], "adaptive_avg_pool2d": [285, 312, 400], "adaptive_avg_pool3d": [285, 312, 401], "adaptive_max_pool1d": [285, 312, 402], "adaptive_max_pool2d": [285, 312, 403], "adaptive_max_pool3d": [285, 312, 404], "adaptiveavgpool1d": [376, 411], "adaptiveavgpool2d": [29, 173, 200, 213, 224, 376, 411], "adaptiveavgpool3d": [376, 411], "adaptivemaxpool1d": [376, 411], "adaptivemaxpool2d": [376, 411], "adaptivemaxpool3d": [376, 411], "add": [4, 16, 55, 217, 224, 250, 252, 253, 256, 286, 288, 355, 358, 359, 360, 361, 362, 363, 377, 380, 397, 423, 435, 438, 443, 445, 450, 489, 539, 554], "add_bias_kv": 355, "add_modul": [250, 256], "add_nois": 216, "add_on": [224, 229, 230], "add_param_group": 423, "add_zero_attn": 355, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 237, 238, 240, 241, 243, 244, 250, 253, 256, 286, 288, 296, 298, 300, 361, 362, 363, 377, 380, 389, 390, 391, 394, 395, 396, 435, 441, 450, 463, 465, 525, 547], "addition": 441, "address": [384, 387, 438, 439, 442], "adjust": [106, 119, 121, 123, 131, 179, 180, 181, 182, 183, 187, 223, 224, 303, 304, 305, 331, 366, 367, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 404, 424, 425, 428, 429, 430, 431, 432, 434, 438, 442, 443, 444, 534, 555], "adopt": 464, "advanc": [3, 16, 25, 79, 100, 108, 120, 130, 135, 137, 160, 194, 196, 217, 245, 253, 256, 269, 270, 271, 303, 304, 305, 399, 400, 401, 422, 435], "advantag": 107, "affect": [221, 316, 449, 540, 546, 557], "affin": [298, 316, 317, 324, 325, 326, 389, 390, 391, 393, 394, 395, 396, 397, 564], "affine_grid": [285, 317, 318], "after": [10, 15, 16, 23, 29, 65, 92, 125, 126, 188, 189, 213, 215, 219, 223, 234, 239, 242, 251, 252, 253, 254, 255, 256, 283, 298, 306, 330, 331, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 359, 360, 366, 369, 370, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 403, 405, 406, 407, 408, 409, 410, 414, 416, 418, 424, 431, 439, 448, 464, 465, 466, 470, 471, 472, 474, 475, 482, 483, 484, 539, 544, 545, 558, 572], "afterward": 448, "against": [237, 238], "aggreg": [10, 55, 108, 331, 473, 541, 548], "agnost": 447, "aim": 4, "al": [55, 97, 108, 113, 216, 222, 224, 236, 237, 245, 414], "alex": [5, 6, 108], "alexei": 108, "alexnet": 213, "alexnet_weight": 571, "algebra": [11, 17, 481], "algorithm": [7, 23, 25, 26, 423, 434, 463, 525], "ali": 222, "alia": 451, "align": [10, 27, 66, 130, 225, 226, 227, 229, 230, 236, 239, 242, 316, 321, 420, 468, 469, 516], "align_corn": [316, 317, 321, 420], "all": [0, 3, 4, 11, 16, 26, 65, 78, 108, 215, 224, 225, 236, 242, 245, 250, 252, 253, 254, 255, 256, 270, 271, 274, 302, 303, 304, 305, 308, 310, 311, 314, 315, 321, 325, 326, 331, 345, 347, 355, 360, 378, 399, 400, 401, 406, 407, 410, 414, 422, 423, 428, 434, 435, 438, 443, 444, 445, 448, 457, 464, 474, 499, 500, 505, 506, 507, 515, 519, 521, 528, 530, 533, 534, 541, 546, 547, 548, 550, 551, 555, 559, 560, 568, 572], "allevi": [108, 258], "alloc": [16, 479, 480], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 65, 107, 108, 109, 113, 122, 125, 126, 128, 131, 133, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 179, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 198, 215, 218, 251, 252, 253, 254, 255, 256, 258, 261, 262, 265, 271, 276, 323, 331, 341, 342, 345, 349, 350, 351, 353, 356, 358, 359, 360, 374, 412, 420, 422, 424, 425, 427, 429, 431, 436, 437, 450, 477, 482, 485, 487, 488, 516, 520, 522, 537, 557, 558, 568, 572], "along": [10, 14, 15, 65, 265, 302, 321, 331, 351, 448, 468, 469, 473, 499, 500, 505, 506, 507, 515, 519, 521, 523, 525, 526, 527, 528, 529, 532, 534, 537, 541, 543, 544, 545, 547, 548, 549, 552, 553, 554, 555, 563, 565], "alongsid": 249, "alpha": [216, 258, 261, 263, 277, 341, 349, 366, 435, 443], "alpha_": [216, 239, 242], "alpha_dropout": [284, 285, 366], "alpha_t": 216, "alphadropout": [373, 376], "alphadropoutmodel": 366, "alreadi": 452, "also": [16, 258, 259, 261, 262, 263, 264, 266, 272, 286, 288, 321, 362, 441, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 480, 487, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 516, 517, 518, 526, 528, 534, 539, 540, 541, 542, 546, 547, 548, 554, 555], "alter": [256, 378, 542, 543, 572], "altern": [1, 16, 113, 342, 436, 469], "alwai": [10, 251, 424, 494, 502, 509, 536, 540, 556, 562, 563, 565, 572], "among": [98, 331], "amount": [269, 270, 271, 309, 310, 311, 313, 314, 315, 327, 328, 329, 364, 441], "ampl": 127, "amsgrad": [438, 439], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 228, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 256, 259, 269, 270, 271, 276, 277, 280, 281, 282, 283, 286, 304, 305, 317, 319, 321, 322, 323, 327, 328, 329, 331, 339, 340, 341, 348, 350, 355, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 374, 377, 378, 380, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 414, 415, 417, 418, 423, 424, 429, 434, 435, 438, 441, 443, 447, 448, 451, 452, 453, 454, 464, 469, 478, 481, 483, 499, 500, 506, 515, 521, 525, 526, 528, 533, 541, 545, 548, 551, 552, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 572], "analog": [541, 548], "analysi": [4, 218, 222, 330, 358, 359, 360, 396, 405, 407, 408, 410], "analyz": 218, "anchor": [219, 220, 221, 239, 240, 241, 243, 244], "anchor_s": 219, "anchor_strid": 219, "andreetto": 108, "andrew": 108, "angl": [323, 564], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 114, 115, 116, 117, 118, 155, 183, 212, 214, 216, 221, 239, 249, 250, 251, 252, 254, 255, 258, 259, 261, 262, 263, 264, 266, 277, 280, 286, 288, 296, 298, 300, 317, 350, 374, 397, 422, 423, 428, 448, 449, 451, 452, 461, 464, 477, 478, 479, 481, 482, 485, 486, 487, 488, 505, 507, 520, 522, 528, 530, 534, 539, 541, 547, 548, 554, 555, 557, 568], "anneal": 425, "anoth": [122, 218, 233, 255, 475, 486, 488, 558, 568], "api": [4, 16, 399, 400, 401, 402, 568], "appear": [423, 553], "append": [253, 255, 256, 355], "appl": [16, 118, 447, 464], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 65, 78, 79, 92, 100, 108, 166, 183, 188, 189, 205, 211, 213, 215, 219, 223, 224, 227, 239, 242, 246, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 297, 298, 302, 306, 308, 316, 317, 324, 325, 326, 330, 331, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 374, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 428, 429, 435, 436, 437, 439, 440, 441, 442, 469, 482, 494, 502, 539, 541, 550, 551, 553, 557, 560, 562, 563, 564, 565, 566, 568], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 65, 73, 95, 103, 106, 107, 108, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 210, 244, 269, 274, 300, 358, 359, 360, 361, 377, 380, 463, 477, 487, 494, 539, 545, 550, 551, 566], "apply_delta": 232, "approach": [3, 10, 13, 15, 55, 57, 59, 61, 69, 105, 223, 256, 374, 425, 439], "appropri": [25, 108, 121, 125, 126, 226, 250, 254, 256, 279, 358, 359, 360, 366, 369, 370, 384, 403, 406, 407, 447, 449, 454], "approx": 263, "approxim": [25, 259, 342, 343, 344, 406, 409, 448], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 67, 70, 71, 72, 88, 89, 90, 91, 96, 97, 98, 108, 127, 129, 130, 133, 134, 135, 136, 137, 138, 142, 218, 219, 220, 223, 224, 225, 228, 230, 231, 233, 234, 236, 239, 242, 249, 250, 251, 252, 253, 254, 255, 256, 265, 269, 270, 271, 273, 274, 276, 279, 286, 288, 297, 304, 305, 307, 308, 316, 317, 319, 321, 327, 328, 329, 330, 331, 335, 336, 338, 339, 340, 343, 351, 355, 358, 359, 360, 361, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 380, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 418, 420, 422, 426, 430, 435, 438, 439, 441, 442, 443, 444, 445, 448, 449, 451, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 484, 490, 495, 499, 500, 501, 505, 506, 507, 508, 510, 515, 516, 519, 520, 526, 527, 528, 537, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 556, 557, 558, 559, 561, 562, 566, 568, 570, 572], "arang": [476, 489], "arbitrari": [253, 379, 479, 480, 495, 503, 504, 506, 511, 513, 515, 520, 521], "arcco": 489, "arch": 452, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 146, 147, 148, 149, 150, 151, 152, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 220, 221, 237, 239, 240, 241, 243, 244, 245, 246, 252, 253, 254, 255, 256, 259, 272, 330, 343, 344, 347, 352, 355, 356, 374, 377, 379, 414, 422, 452, 570, 572], "arcsin": 489, "arctan": 489, "area": [233, 317, 321, 420], "arg": [250, 379, 452, 479], "argmax": [451, 535], "argmin": 535, "argsort": 535, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 212, 214, 220, 221, 237, 238, 240, 241, 243, 244, 250, 256, 316, 379, 448, 451, 479, 520, 572], "around": [20, 218, 323, 353], "arr": [528, 534, 547, 555], "arrai": [16, 249, 251, 450, 453, 454, 455, 464, 469, 478, 480, 483, 486, 488, 522, 540, 541, 558, 568], "art": [49, 108, 207], "artifact": 227, "artifici": [108, 218], "arxiv": [108, 222], "ascend": [544, 549], "asgd": 446, "ashish": 245, "aspect": [219, 566], "aspect_ratio": 219, "assign": [16, 218, 250, 252, 254, 256, 321, 384, 387, 536], "assist": [96, 97, 98], "associ": [254, 255], "assum": [0, 1, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 423, 434, 449, 453], "astyp": 464, "attach": [219, 448], "attempt": [252, 256], "attend": [268, 356, 415, 417, 418], "attent": [31, 55, 69, 70, 71, 72, 92, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 245, 246, 255, 286, 330, 355, 356, 414, 415, 416, 417, 418, 476], "attn": [268, 356], "attn_drop": 113, "attn_drop_r": [55, 132, 133, 188, 189], "attn_mask": [268, 356], "atto": [46, 101, 108], "attribut": [16, 250, 424, 572], "attributeerror": 239, "audio": [358, 361], "augment": [3, 4, 176, 323, 463, 541, 548, 557, 561, 562, 563, 564, 565, 568], "auto": [217, 226, 572], "auto_pars": 447, "autodiff": [11, 346, 464], "autoencod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "autograd": [16, 422, 454, 544], "automat": [4, 227, 239, 251, 252, 253, 254, 255, 402, 403, 404, 422, 448, 455, 458, 459, 460, 462, 464, 479, 480, 488, 525, 537, 558], "autoregress": [268, 356], "auxiliari": [96, 97, 98, 249], "avail": [4, 5, 6, 7, 8, 572], "avd": 146, "averag": [14, 29, 92, 110, 111, 112, 113, 146, 155, 166, 173, 183, 200, 213, 249, 303, 304, 305, 309, 310, 311, 321, 330, 331, 386, 399, 400, 401, 405, 406, 407, 435, 436, 438, 443, 506], "avg": 65, "avg_down": 155, "avg_pool": [405, 406, 407], "avg_pool1d": [285, 312], "avg_pool2d": [285, 312], "avg_pool3d": [285, 312], "avgpool": [29, 173, 200, 213, 331], "avgpool1d": [376, 411], "avgpool1dmodel": 405, "avgpool2d": [376, 411], "avgpool2dmodel": 406, "avgpool3d": [376, 411], "avgpool3dmodel": 407, "avoid": [2, 3, 13, 14, 25, 79, 142, 227, 230, 254, 302, 374, 383, 426, 448, 451, 484, 494, 502], "aw": 242, "awar": 197, "ax": [10, 13, 14, 15, 17, 374, 450, 476, 505, 506, 507, 515, 516, 520, 521, 526, 529, 541, 546, 548], "axes_a": 476, "axes_b": 476, "axi": [14, 24, 65, 108, 113, 215, 265, 302, 351, 378, 468, 469, 476, 499, 500, 505, 506, 507, 515, 521, 523, 525, 527, 528, 529, 532, 534, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 563, 565], "axis1": [516, 529], "axis2": [516, 529], "b": [11, 13, 14, 15, 17, 27, 31, 108, 206, 233, 236, 237, 238, 239, 240, 241, 242, 286, 288, 338, 358, 359, 360, 361, 362, 363, 374, 377, 380, 450, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 526, 528, 532, 533, 534, 537, 547, 555, 556, 562, 569], "b0": [78, 80, 108, 139], "b1": [78, 81, 108, 140, 141], "b2": [78, 82, 108, 141, 142], "b3": [78, 83, 108, 143], "b4": [78, 84, 108, 144], "b5": [78, 85, 108, 145], "b6": [78, 86, 108], "b7": [78, 87, 108], "b_": [11, 31], "b_1": [416, 418], "b_2": [416, 418], "b_i": [470, 471, 474], "b_k": 355, "b_v": 355, "back": [11, 16, 215, 220, 239, 316, 321, 355, 406, 407, 452, 468, 473, 523, 524, 525, 527, 541, 544, 548, 552], "backbon": [65, 66, 108, 143, 184, 185, 186, 219, 220, 221, 222, 223, 224, 225, 238, 240, 241, 243, 244], "backbone_net": 221, "backbone_num_class": [220, 221], "backend": [118, 464, 482, 525], "background": [219, 223, 224], "backprop": [363, 383], "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 108, 239, 242, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 286, 288, 316, 317, 321, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 364, 366, 367, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 422, 460, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 501, 505, 507, 522, 526, 527, 536, 539, 541, 543, 548, 550, 551, 558, 569], "backward": [16, 216, 236, 249, 251, 298, 317, 364, 393, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 464, 482, 483, 484, 527, 529, 536, 543, 544, 549, 558], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 70, 79, 88, 89, 90, 91, 94, 104, 108, 121, 122, 128, 129, 131, 134, 137, 167, 168, 169, 170, 171, 172, 206, 209, 221, 385], "bar": [216, 435], "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 66, 67, 68, 73, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 114, 115, 122, 128, 129, 131, 146, 153, 154, 166, 167, 168, 169, 170, 171, 172, 183, 190, 194, 200, 206, 210, 211, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 234, 237, 238, 239, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 268, 276, 286, 303, 304, 305, 331, 356, 364, 366, 374, 384, 385, 399, 400, 401, 402, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 439, 443, 444, 445, 447, 454, 455, 465, 466, 470, 471, 472, 474, 475, 488, 501, 502, 503, 504, 505, 507, 520, 537, 539, 545, 556, 561, 562, 563, 564, 565], "base_dtyp": 447, "base_lr": 426, "base_width": [146, 147, 148, 149, 150, 151, 152, 164, 165, 166, 183], "baselin": 108, "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 92, 113, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 211, 213, 219, 220, 221, 223, 224, 237, 238, 268, 269, 270, 271, 272, 273, 274, 278, 279, 303, 304, 305, 319, 322, 324, 325, 326, 327, 328, 329, 330, 335, 336, 339, 340, 356, 361, 362, 363, 367, 399, 400, 401, 412, 484, 526, 559, 560, 561, 562, 563, 564, 565, 566], "basicblock": [155, 159, 162], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 100, 106, 107, 173, 179, 180, 181, 182, 187, 227, 237, 238, 239, 268, 269, 270, 271, 272, 273, 274, 276, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 321, 323, 324, 325, 326, 355, 356, 358, 359, 360, 364, 377, 380, 382, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 442, 451, 469, 476, 516, 559, 560, 561, 562, 564, 566], "batch_idx": [226, 227], "batch_norm": [285, 299, 389, 390, 391], "batch_norm1": 256, "batch_norm2": 256, "batch_siz": [1, 2, 3, 211, 216, 331], "batch_tensor": 516, "batchnorm": [92, 298, 324, 325, 326], "batchnorm1d": [324, 376, 398], "batchnorm1dmodel": 389, "batchnorm2d": [65, 92, 113, 256, 325, 376, 398], "batchnorm2dmodel": 390, "batchnorm3d": [326, 376, 398], "batchnorm3dmodel": 391, "bay": 217, "bbox_delta": [220, 221], "bbox_reg_mean": 223, "bbox_reg_std": 223, "bbox_to_delta": [229, 232], "bce": [215, 242, 383], "bceloss": [376, 383, 388], "bcewithlogitsloss": [376, 388], "becaus": [2, 239, 448, 451, 459], "becom": [24, 239, 250, 298, 393, 436, 444], "been": [352, 536], "befor": [10, 15, 23, 31, 65, 92, 173, 220, 251, 268, 290, 356, 378, 414, 416, 418, 425, 431, 435, 441, 457, 461, 539, 543, 560, 568], "begin": [1, 24, 229, 230, 236, 239, 242, 258, 261, 262, 263, 279, 316, 322, 341, 343, 344, 345, 347, 349, 368, 385, 386, 387, 405, 406, 407, 408, 409, 410, 442, 444, 450, 463, 470, 471, 473, 490, 495, 499, 500, 505, 507, 510, 523, 524, 536, 539, 549, 550, 551], "behav": [368, 385, 393, 519], "behavior": [10, 16, 108, 253, 256, 268, 302, 356, 364, 428, 449, 463, 469, 480, 553, 568, 570], "being": [255, 323, 366, 369, 370, 371, 372, 442, 449, 464, 527, 528, 534, 555], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 97, 98, 99, 106, 107, 109, 110, 111, 112, 224, 469, 478, 481, 529, 551], "benchmark": [5, 6, 7, 8, 16, 114, 115, 130], "benefici": 256, "benefit": [131, 258, 422, 441], "bernoulli": [366, 369, 370, 371, 372, 456], "best": [130, 306, 335, 336, 339, 340, 570], "beta": [215, 216, 297, 389, 390, 391, 392, 393, 394, 395, 396, 397, 438, 439, 440, 441, 442], "beta1": [438, 439, 440, 441, 442], "beta2": [438, 439, 440, 441, 442], "beta_1": [438, 439, 440, 441, 442], "beta_2": [438, 439, 440, 441, 442], "beta_c": [297, 392], "beta_schedul": 215, "beta_t": 216, "better": [22, 57, 59, 61, 65, 108, 129, 141, 142, 189, 197, 213, 222, 259, 335, 336, 339, 340, 352, 367, 394, 395, 396, 422, 431, 432, 439, 441, 443, 560], "between": [44, 47, 51, 55, 63, 88, 89, 90, 91, 94, 104, 108, 113, 122, 128, 129, 131, 137, 167, 168, 169, 170, 171, 172, 206, 209, 216, 231, 233, 250, 269, 270, 271, 272, 273, 274, 276, 286, 292, 324, 325, 326, 327, 328, 329, 331, 348, 358, 359, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 377, 382, 383, 384, 385, 386, 387, 426, 431, 432, 435, 443, 444, 445, 463, 465, 466, 469, 472, 475, 477, 484, 521, 562, 563, 565, 566, 572], "beyond": [10, 253, 431], "bia": [31, 55, 57, 59, 61, 92, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 269, 270, 271, 272, 273, 274, 286, 288, 296, 298, 300, 301, 324, 325, 326, 327, 328, 329, 355, 358, 359, 360, 361, 362, 363, 377, 380, 389, 390, 391, 393, 394, 395, 396, 397, 414, 416, 418, 438, 439, 440, 441, 442], "bias": [69, 108, 358, 359, 360, 380, 397, 422], "bias1": 254, "bias2": 254, "big": [239, 245, 327, 328, 329], "bij": 11, "bik": 11, "bilinear": [226, 227, 285, 287, 316, 317, 321, 376, 381, 420], "bilinearmodel": 377, "bin": [531, 532, 533], "binari": [215, 264, 289, 290, 322, 350, 366, 369, 370, 371, 372, 382, 383], "binary_cross_entropi": [285, 293], "binary_cross_entropy_with_logit": [285, 293], "bit": 447, "bjk": 11, "black": 16, "blend": 131, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 92, 100, 105, 108, 113, 114, 115, 117, 120, 121, 122, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 250, 272, 276, 278, 279, 324, 325, 326, 331, 358, 359, 360, 361, 362, 363, 364, 367, 448, 451], "block1": 422, "block2": 422, "block_arg": [155, 173], "block_cfg": 79, "block_config": 73, "block_fn": 65, "block_siz": [278, 367], "block_typ": 31, "blue": [562, 569], "bmatrix": [316, 473], "bn": [324, 325, 326], "bn_affin": [324, 325, 326], "bookkeep": 451, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 65, 78, 92, 96, 97, 98, 132, 133, 139, 140, 141, 143, 144, 145, 146, 155, 188, 189, 215, 216, 219, 224, 239, 250, 251, 268, 277, 279, 280, 281, 282, 283, 296, 300, 316, 317, 321, 322, 324, 325, 326, 327, 328, 329, 355, 356, 358, 359, 360, 361, 362, 363, 368, 377, 380, 389, 390, 391, 393, 394, 395, 396, 397, 414, 415, 416, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 443, 447, 449, 454, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 505, 506, 507, 515, 521, 522, 523, 524, 525, 531, 532, 533, 544, 549, 553, 558, 569], "boolean": [536, 556], "boost": 127, "border": 317, "both": [31, 55, 57, 59, 61, 65, 69, 92, 108, 113, 118, 122, 133, 134, 188, 190, 191, 192, 193, 219, 269, 272, 273, 288, 304, 309, 313, 324, 342, 346, 352, 358, 359, 361, 362, 363, 364, 400, 405, 406, 408, 409, 418, 420, 447, 451, 467, 468, 469, 473, 476, 478, 537, 544, 545, 566], "bottleneck": [65, 66, 67, 73, 108, 120, 121, 124, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 330], "bottleneck_cfg": 121, "bottom": 321, "bound": [218, 219, 222, 223, 224, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 243, 317, 336, 338, 340, 426, 444, 462, 464, 494, 495], "boundari": [231, 571], "box": [4, 16, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243], "boxes_a": 233, "boxes_b": 233, "branch": [55, 66, 96, 97, 98, 108, 331], "break": [10, 422], "breakdown": 219, "brief": 568, "bright": 568, "bring": [10, 374], "broad": 65, "broadcast": [15, 16, 216, 371, 372, 476, 506, 515, 521, 542, 554], "broadcast_to": 535, "bucket": 494, "budget": [51, 143], "buffer": [16, 435, 441, 443, 445], "build": [16, 41, 65, 66, 79, 107, 108, 121, 122, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 183, 184, 185, 186, 199, 222, 223, 239, 246, 250, 253, 256, 422, 568, 572], "built": [3, 16, 156, 160, 161, 239, 256, 422, 447, 451, 482, 483, 570], "burg": 8, "bypass": 108, "c": [5, 6, 8, 11, 13, 31, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 216, 217, 221, 224, 225, 226, 227, 236, 237, 238, 239, 240, 241, 242, 276, 278, 281, 282, 283, 291, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 321, 322, 323, 330, 364, 371, 372, 374, 378, 384, 387, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 426, 450, 534, 555, 560, 572], "c2": 225, "c3": 225, "c4": 225, "c5": 225, "c_": [11, 222, 239, 358, 359, 360, 361, 362, 363], "c_i": 236, "c_in": [269, 270, 271, 272, 273, 274, 324, 325, 326], "c_out": [269, 270, 271, 272, 273, 274], "calcul": [0, 1, 17, 251, 420, 436, 437, 440, 441, 442, 451, 459], "calculu": [18, 25], "call": [1, 16, 227, 239, 250, 273, 362, 424, 449, 451, 452, 457, 465, 466, 469, 470, 471, 472, 474, 475, 572], "callabl": [1, 65, 139, 140, 141, 143, 144, 145, 215, 223, 228, 414, 416, 418, 423, 426, 429, 452, 464, 557], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 78, 108, 121, 127, 128, 130, 131, 155, 164, 165, 179, 180, 181, 182, 211, 212, 216, 220, 221, 224, 233, 237, 238, 239, 249, 251, 252, 253, 254, 255, 256, 261, 269, 270, 271, 279, 298, 316, 317, 323, 331, 342, 345, 348, 353, 358, 359, 360, 361, 364, 394, 395, 396, 406, 407, 408, 409, 410, 412, 415, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 449, 450, 451, 458, 462, 463, 464, 469, 479, 480, 481, 482, 483, 485, 487, 488, 506, 509, 515, 516, 521, 523, 524, 526, 534, 537, 539, 541, 542, 544, 548, 554, 555, 557, 558, 561, 563, 564, 565, 568, 572], "candid": [224, 228], "cannot": [19, 20, 22, 23, 26, 27, 28, 455, 527], "canocical_scal": 226, "canon": [226, 242, 572], "canonical_level": 226, "cap": [233, 348], "capabl": [10, 31, 53, 65, 95, 108, 153, 154, 477, 478, 481, 485, 486, 487, 488], "capac": [42, 43, 44, 50, 54, 67, 108, 113, 114, 115, 116, 118, 119, 127, 135, 140, 144, 145, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 196, 207, 248], "captur": [16, 31, 55, 57, 59, 61, 69, 108, 113, 134, 135, 136, 183, 188, 190, 191, 192, 193, 194, 195, 198, 245, 276, 358, 359, 360, 377], "cardin": [108, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 169, 170, 171, 172, 183], "care": 55, "carefulli": [424, 448], "cartesian": 537, "case": [3, 24, 109, 121, 123, 258, 261, 262, 263, 272, 273, 279, 322, 341, 343, 344, 345, 347, 349, 368, 385, 386, 387, 405, 406, 407, 408, 409, 410, 422, 430, 437, 442, 444, 450, 470, 471, 476, 490, 495, 499, 500, 505, 507, 510, 523, 524, 525, 536, 539, 549, 550, 551, 568], "cast": 482, "categor": [319, 322, 412], "categori": [7, 114, 115, 156, 157, 158, 159, 160, 161, 162, 163, 219, 220, 223, 224, 240, 241, 243, 244, 412, 447], "caus": [3, 25, 424, 435, 443, 445], "causal": [268, 356], "cautiou": [0, 10], "cbr": 92, "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 113, 215, 226, 229, 242, 245, 258, 259, 261, 263, 264, 268, 269, 270, 271, 272, 273, 274, 286, 288, 297, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 319, 321, 330, 339, 340, 342, 343, 344, 346, 350, 352, 356, 364, 366, 377, 380, 382, 383, 384, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 412, 425, 426, 427, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 444, 467, 468, 469, 472, 474, 476, 509], "ceil": 489, "cell": [236, 237, 238, 239, 242, 243], "center": [230, 236, 239, 242, 316, 317, 323, 353, 443, 559, 568], "centercrop": [567, 568], "certain": [19, 259, 268, 286, 352, 356, 377, 418, 431, 438, 439, 449, 505, 507], "cfg": [122, 125, 126], "chain": [16, 22, 23, 256, 557, 568], "challeng": [7, 108, 134], "cham": 108, "chanc": [562, 563, 565], "chang": [10, 229, 292, 316, 317, 385, 430, 444, 448, 450, 452, 464, 540, 542, 554, 562, 568, 572], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 177, 179, 180, 181, 182, 187, 188, 189, 200, 211, 216, 219, 221, 223, 224, 225, 236, 238, 244, 269, 270, 271, 272, 273, 274, 276, 281, 282, 283, 296, 297, 298, 300, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 358, 359, 360, 361, 362, 363, 371, 372, 389, 390, 391, 392, 393, 394, 395, 396, 399, 405, 406, 407, 408, 409, 410, 560, 562, 566], "character": [164, 165], "check": [16, 449, 464, 559, 561], "checkpoint": [434, 572], "chen": [55, 108], "chien": 108, "choic": [129, 131, 537], "choleski": 21, "chollet": 108, "choos": [108, 525, 556], "chosen": [236, 366, 367, 424, 499, 500, 556], "christian": 108, "christoph": 8, "chu": 108, "chun": 108, "chunk": 535, "cifar": [5, 6, 221], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 218, 220, 221, 222, 225, 226, 227, 228, 237, 238, 240, 241, 243, 244, 247, 248, 265, 279, 291, 295, 322, 422, 434, 451, 452, 457, 568, 571, 572], "class_id": [239, 242], "classic": [112, 224], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "classifi": [29, 65, 92, 96, 97, 98, 109, 110, 111, 112, 113, 155, 166, 183, 200, 211, 213, 218, 219, 220, 221, 222, 223, 224, 572], "clean": [216, 451], "cleaner": [1, 469], "cleanli": 113, "cleanup": 448, "clear": [251, 479, 480, 484], "clearli": 239, "clf_in_featur": 109, "clf_layer": 109, "clip": [216, 229, 231, 323, 343, 348, 444, 489], "clip_box": 232, "clip_denois": 216, "clockwis": 323, "close": [22, 25, 66, 349, 382, 443], "closer": 341, "closur": [423, 434], "cloth": 7, "cls_": 242, "cls_1": [239, 242], "cls_c": [239, 242], "cls_logit": [220, 221], "cnn": [31, 57, 59, 61, 108, 220, 221, 228], "co": [108, 425, 489, 511], "coars": 108, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 108, "coatnet_1": 108, "coatnet_2": 108, "coatnet_3": 108, "coatnet_4": 108, "coatnet_5": 108, "coatnet_6": 108, "coatnet_7": 108, "coco": [243, 244], "code": [10, 16, 23, 252, 254, 256, 448, 449, 451, 463, 569], "codebas": 572, "coeffici": [27, 78, 237, 238, 321, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445], "col": 276, "collaps": 10, "collate_fn": 1, "collect": [4, 17, 218, 252, 253, 255, 256, 434], "color": [224, 228, 562, 568, 569], "colorjitt": 568, "column": [19, 20, 22, 26, 27, 28, 276, 364, 481, 534, 537], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 68, 92, 99, 105, 106, 108, 113, 131, 135, 187, 218, 222, 253, 256, 258, 259, 324, 325, 326, 330, 331, 342, 364, 367, 374, 383, 384, 422, 441, 442, 506, 515, 521, 528, 568, 570], "combined_dataset": [0, 1], "common": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 240, 241, 243, 276, 323, 434, 447, 568], "commonli": [119, 120, 121, 123, 124, 125, 126, 129, 131, 230, 259, 264, 265, 266, 269, 271, 272, 273, 274, 279, 286, 294, 296, 300, 317, 319, 322, 323, 330, 339, 340, 343, 344, 348, 351, 356, 360, 361, 362, 378, 382, 386, 387, 405, 406, 407, 408, 409, 410, 412, 414, 450, 485, 546, 558, 559, 560, 561, 563, 564, 565, 568], "compact": [45, 46, 48, 53, 104, 116, 129, 139, 140, 241], "compar": [31, 44, 45, 72, 108, 116, 133, 141, 164, 165, 213, 220, 383, 463, 547], "compat": [4, 10, 11, 16, 17, 183, 215, 374, 379, 397, 422, 450, 453, 463, 484, 526, 558, 568, 572], "competit": [46, 52, 53, 92], "complet": [246, 414, 415, 417, 572], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 92, 107, 114, 115, 130, 133, 134, 135, 136, 137, 141, 142, 143, 155, 158, 161, 162, 175, 177, 195, 220, 244, 248, 249, 251, 252, 253, 256, 262, 268, 323, 333, 337, 338, 339, 340, 347, 356, 408, 410, 422, 429, 434, 438, 439, 440, 441, 442, 444, 447, 455, 457, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 495, 522, 525, 536, 558, 568], "complex64": 447, "compon": [25, 92, 96, 97, 98, 99, 105, 106, 107, 116, 117, 219, 224, 228, 246, 250, 253, 434, 464, 568], "compos": [5, 6, 7, 8, 113, 211, 239, 358, 359, 360, 405, 406, 407, 408, 409, 410, 422, 556, 568], "compound": 79, "comprehens": [3, 62], "compress": 241, "compris": [164, 165], "compromis": [128, 131], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 67, 68, 69, 92, 94, 101, 104, 108, 113, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 142, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 187, 188, 207, 208, 215, 219, 222, 223, 229, 230, 233, 236, 237, 238, 239, 241, 242, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 276, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 307, 308, 317, 321, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 364, 366, 367, 369, 370, 371, 372, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422, 423, 425, 426, 427, 428, 429, 430, 432, 434, 435, 443, 448, 449, 450, 451, 454, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 537, 539, 541, 548, 558, 568, 569, 570], "computation": [3, 13, 25, 156, 343, 344, 374], "compute_grad": 527, "compute_loss": [434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "concat": 355, "concaten": [0, 65, 242, 269, 270, 271, 355, 476, 534, 535, 547, 555], "concept": [25, 65, 108, 120, 218, 476, 570], "concis": [10, 11, 13, 15], "concret": 572, "concurr": 448, "cond": 556, "condit": [18, 19, 22, 556], "conf": [236, 237, 238, 239], "conf_thresh": [239, 242], "confer": [108, 217, 222], "confid": [219, 234, 236, 237, 238, 239, 242], "config": 200, "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 212, 214, 215, 219, 220, 221, 223, 224, 239, 241, 244, 248, 255, 324, 325, 326, 356, 447], "confirm": 16, "conform": 453, "conjunct": [276, 387], "connect": [29, 40, 66, 68, 73, 74, 75, 76, 77, 78, 79, 92, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 200, 211, 213, 219, 223, 224, 225, 228, 238, 242, 272, 288, 330, 331, 358, 359, 360, 361, 362, 363, 378, 380, 416, 418], "consecut": 200, "consid": [3, 22, 25, 73, 127, 128, 129, 131, 220, 256, 335, 336, 339, 340, 364, 422, 444, 447, 449, 479, 480, 529, 550, 551, 568], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 110, 111, 112, 155, 224, 249, 303, 304, 305, 331, 355, 393, 399, 400, 401, 414, 416, 418, 461, 463, 539, 559, 566, 568], "consistent_tensor": 463, "constant": [289, 291, 296, 297, 300, 301, 302, 334, 349, 382, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 414, 416, 418, 432, 436, 437, 438, 439, 440, 441, 442, 443, 482, 483, 525, 536, 539], "constant_pad": 539, "constrain": [46, 48, 51, 129, 231], "constraint": [1, 13, 31, 119, 121, 128, 142, 331, 374], "construct": [16, 66, 67, 68, 74, 75, 76, 77, 95, 100, 114, 115, 116, 131, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 201, 202, 203, 204, 220, 221, 225, 237, 238, 246, 253, 422, 478, 541, 548, 550, 551], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 74, 75, 76, 77, 88, 89, 90, 91, 114, 115, 116, 117, 118, 123, 124, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 179, 180, 181, 182, 187, 201, 202, 203, 204, 240, 241, 243, 244], "consumpt": 131, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 105, 109, 155, 166, 167, 168, 169, 170, 171, 172, 173, 183, 200, 216, 219, 226, 227, 230, 233, 234, 236, 239, 242, 250, 252, 253, 254, 255, 256, 265, 268, 276, 286, 288, 289, 290, 291, 295, 317, 319, 321, 322, 382, 383, 384, 387, 423, 453, 457, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 480, 484, 490, 491, 492, 493, 496, 497, 498, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 521, 527, 529, 530, 533, 537, 545, 549, 569], "content": [218, 323], "context": [108, 113, 194, 196, 197, 316, 448, 449, 451, 464, 570], "contextmanag": 448, "contextu": [70, 71, 72, 134, 190, 191, 192, 193], "contigu": [278, 367, 378, 540], "continu": [345, 427, 432, 460, 502], "contract": [11, 13], "contrast": [246, 394, 395, 396, 568], "contribut": [242, 278, 321, 366, 369, 370, 371, 372, 405, 408, 409, 410, 435, 441, 519], "control": [10, 15, 31, 40, 133, 134, 166, 216, 228, 244, 331, 341, 385, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 463, 464, 482, 558, 568], "conv": [105, 108, 173, 219, 223, 224, 225, 324, 325, 326, 390, 391], "conv1": [110, 111, 112, 256, 358, 359, 360, 405, 406, 407, 408, 409, 410], "conv1d": [275, 285, 324, 327, 361, 365, 376, 405, 408], "conv1dmodel": 358, "conv2": [110, 111, 112, 256, 358, 359, 360], "conv2d": [219, 223, 224, 253, 256, 275, 285, 325, 328, 362, 365, 374, 376, 390, 406, 409, 422, 569], "conv2dmodel": 359, "conv3d": [275, 285, 326, 329, 365, 376, 391, 407, 410], "conv3dmodel": 360, "conv_bia": [324, 325, 326], "conv_config": [200, 236], "conv_lay": [109, 253], "conv_transpose1d": [275, 285], "conv_transpose2d": [275, 285], "conv_transpose3d": [275, 285], "convblock": 422, "convbnrelu1d": 332, "convbnrelu2d": 332, "convbnrelu3d": 332, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 214, 383, 525], "convent": [11, 469, 572], "converg": [25, 353, 424, 425, 426, 428, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 560], "convers": [384, 387, 562, 568], "convert": [5, 6, 7, 8, 55, 200, 249, 251, 265, 319, 322, 351, 454, 537, 557, 558, 562, 568], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "convnetwork": 253, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 108, "convnext_larg": 108, "convnext_smal": 108, "convnext_tini": 108, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 108, "convnext_v2_bas": 108, "convnext_v2_femto": 108, "convnext_v2_hug": 108, "convnext_v2_larg": 108, "convnext_v2_nano": 108, "convnext_v2_pico": 108, "convnext_v2_tini": 108, "convnext_xlarg": 108, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 92, 97, 98, 100, 105, 109, 110, 111, 112, 113, 119, 121, 125, 126, 127, 128, 129, 130, 131, 146, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 187, 200, 211, 213, 214, 219, 222, 223, 224, 238, 239, 253, 269, 270, 271, 272, 273, 274, 276, 324, 325, 326, 327, 328, 329, 330, 331, 358, 359, 360, 361, 362, 363, 364, 406, 407, 409, 410, 516, 539], "convolv": [269, 270, 271, 272, 273, 358, 359, 360, 361, 362, 363], "convtranspose1d": [365, 376], "convtranspose2d": [363, 365, 376], "convtranspose3d": [365, 376], "cooldown": 431, "coord": [236, 239], "coordin": [227, 229, 230, 231, 233, 236, 237, 238, 239, 242, 316, 317, 532, 537, 538], "copi": [10, 526, 552], "core": [0, 1, 2, 3, 55, 67, 92, 250, 422, 423, 447, 464, 568], "corinna": 8, "corner": [316, 317, 321, 420, 559, 561], "correct": [252, 384, 387, 438, 439, 440, 441, 442, 536, 544, 550, 551, 558], "correctli": [25, 250, 252, 253, 254, 255, 256, 384, 387, 463, 526, 527], "correl": [361, 362], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 122, 123, 125, 126, 164, 165, 184, 185, 186, 190, 191, 192, 193, 199, 226, 234, 237, 238, 243, 252, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 276, 286, 288, 319, 321, 322, 343, 347, 351, 377, 380, 383, 389, 390, 391, 394, 395, 396, 406, 407, 412, 435, 443, 445, 447, 455, 467, 468, 470, 471, 474, 494, 501, 502, 503, 504, 511, 513, 525, 526, 527, 534, 538, 539, 541, 543, 548, 552, 555, 572], "cort": 8, "cosh": [489, 512, 518], "cosin": [216, 425, 491, 496, 497, 511], "cosineannealinglr": 433, "cost": [66, 69, 108, 119, 121, 122, 128, 129, 131, 142, 166, 238, 327, 328, 329, 448], "could": 250, "count": [65, 108, 122, 139, 140, 141, 143, 144, 145, 217, 222, 244, 245, 425, 430, 448, 499, 500, 525, 528, 531, 532], "counterclockwis": [323, 564], "cover": [17, 269, 270, 271, 457], "coverag": [113, 303, 304, 305], "cpu": [11, 16, 249, 251, 447, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 525, 538, 572], "craft": 16, "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 106, 107, 110, 111, 112, 121, 123, 124, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 200, 201, 202, 203, 204, 212, 213, 214, 218, 221, 237, 238, 247, 248, 249, 250, 253, 256, 316, 331, 348, 355, 414, 415, 416, 417, 418, 422, 450, 451, 452, 453, 463, 477, 481, 482, 483, 484, 485, 486, 487, 488, 526, 537, 547, 557, 568], "creation": [88, 89, 90, 91, 253, 256, 448, 568], "criterion": [382, 383, 384, 385, 386, 387], "critic": [25, 129, 144, 434, 463], "crop": [223, 224, 226, 227, 559, 561, 568], "cross": [55, 66, 67, 68, 108, 188, 215, 289, 290, 291, 361, 362, 382, 383, 384, 414, 415, 416], "cross_entropi": [285, 293], "crossattent": 55, "crossentropyloss": [221, 376, 388], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 108, "crossvit_15_dagg": 108, "crossvit_18": 108, "crossvit_18_dagg": 108, "crossvit_9": 108, "crossvit_9_dagg": 108, "crossvit_bas": 108, "crossvit_smal": 108, "crossvit_tini": 108, "crucial": [10, 424], "csp": [65, 66, 67, 68, 108], "csp_darknet_53": 108, "csp_resnet_50": 108, "csp_resnext_50_32x4d": 108, "cspdarkblock": 66, "cspdarknet": 65, "cspnet": [66, 67, 68], "cspresnet": 65, "cspresnext": 65, "cube": 489, "cumprod": 489, "cumsum": 489, "cumul": [259, 342, 499, 500], "cup": 233, "current": [250, 425, 426, 427, 428, 429, 430, 431, 432, 435, 438, 444, 449, 525], "current_beta": 215, "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 101, 102, 103, 104, 106, 107, 109, 113, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 212, 213, 214, 216, 219, 221, 223, 224, 240, 241, 242, 243, 244, 249, 252, 253, 254, 255, 256, 322, 323, 324, 325, 326, 341, 345, 364, 414, 422, 426, 429, 448, 463, 481, 484, 545], "custom_config": 200, "custom_darknet": 239, "custom_decod": 414, "custom_encod": 414, "custom_lenet": 109, "customiz": [139, 568], "custommodul": 249, "customnetwork": 252, "customparametermodel": [254, 255], "cut": 130, "cv": 218, "cvf": 108, "cvpr": [108, 222], "cvt": [70, 71, 72], "cvt_13": 108, "cvt_21": 108, "cvt_w24": 108, "cvtspec": 69, "cycl": 426, "cycle_momentum": 426, "cyclic": [425, 426, 543], "cycliclr": 433, "d": [31, 108, 215, 217, 268, 271, 274, 283, 305, 308, 311, 315, 326, 356, 363, 364, 378, 391, 396, 397, 401, 404, 407, 410, 450, 478, 509, 529, 533, 538, 564], "d_": [245, 271, 274, 305, 308, 311, 315, 355, 360, 363, 378, 401, 404, 407, 410, 414, 415, 416, 417, 418], "d_0": 378, "d_1": [13, 14, 15, 374, 378, 397], "d_2": [13, 14, 15, 374, 397], "d_h": [355, 364, 416, 418], "d_i": 378, "d_k": [31, 55, 113], "d_model": [205, 246, 247, 248, 414, 415, 416, 417, 418], "d_n": [13, 14, 15, 374, 378, 397], "d_out": [271, 274, 311, 315], "d_w": 364, "dag": 16, "dai": 108, "dampen": [435, 443, 445], "darknet": [65, 66, 108, 240, 241, 242, 243, 244], "darknet_19": 239, "darknet_model": 239, "darknet_out_channels_arr": [242, 244], "darknetbottleneck": 65, "data": [4, 5, 6, 7, 8, 10, 16, 23, 108, 195, 215, 216, 217, 218, 245, 249, 251, 255, 266, 269, 271, 274, 276, 282, 283, 288, 319, 322, 323, 324, 325, 326, 331, 347, 353, 358, 359, 360, 380, 383, 396, 405, 407, 410, 417, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 454, 457, 463, 464, 465, 466, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 509, 516, 522, 525, 526, 531, 539, 540, 541, 542, 544, 545, 546, 548, 557, 558, 561, 562, 563, 564, 565, 568, 570], "data_dtyp": 447, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 88, 89, 90, 91, 110, 111, 112, 113, 114, 115, 118, 119, 122, 127, 134, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 218, 220, 221, 236, 239, 323, 437, 557, 559, 568, 571, 572], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 473, "deal": 383, "debug": [16, 256, 449, 461, 568, 570], "decai": [367, 424, 425, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445], "decim": 509, "declar": [13, 14, 15, 374], "decod": [215, 217, 242, 246, 272, 273, 274, 361, 362, 363, 414, 415, 416], "decoder3d": 363, "decoder_lay": [415, 416], "decoderlay": 415, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "deconv": 363, "deconv1": [361, 362], "deconv1d": 361, "deconv2d": 362, "deconv3d": 363, "deconvolut": [272, 273, 274, 361, 362], "decor": [167, 168, 169, 170, 171, 172, 451, 452], "decoupl": [108, 239, 436, 437, 439, 440, 441, 442], "decreas": [225, 426, 431, 438, 439, 444], "deep": [1, 3, 4, 10, 14, 16, 65, 92, 102, 103, 105, 108, 134, 155, 156, 157, 158, 160, 161, 167, 168, 169, 170, 171, 172, 174, 175, 178, 215, 218, 245, 296, 342, 346, 349, 374, 422, 424, 463, 484, 545, 550, 551, 557, 558, 568], "deepen": 143, "deeper": [71, 97, 99, 107, 108, 114, 115, 133, 136, 141, 144, 155, 162, 195, 196, 215, 220, 238, 242, 349], "deepest": 215, "def": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 374, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 569], "default": [1, 5, 6, 7, 8, 14, 16, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 265, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 345, 351, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 441, 449, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 495, 499, 500, 505, 506, 507, 509, 515, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 534, 537, 539, 541, 543, 544, 545, 547, 549, 550, 551, 552, 553, 555, 558, 562, 563, 565, 569, 572], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 73, 79, 96, 97, 98, 99, 105, 106, 107, 109, 121, 131, 146, 155, 173, 184, 185, 186, 200, 215, 223, 224, 236, 239, 252, 253, 254, 255, 256, 279, 342, 344, 346, 348, 352, 382, 383, 384, 385, 386, 387, 405, 420, 422, 424, 426, 429, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 459, 460, 474, 480, 495, 520, 557, 568], "definit": [16, 18, 324, 325, 326, 568], "degre": [323, 564, 568], "delai": 435, "deliv": [16, 129, 130, 145], "delta": [13, 229, 230, 265, 292, 351, 374, 385, 436], "delta_": [13, 265, 351, 374], "demand": [118, 130, 143, 144], "demonstr": [17, 179, 180, 181, 182, 187, 218, 346, 422], "demystifi": 16, "denois": 217, "denomin": [296, 297, 298, 300, 301, 324, 325, 326, 389, 390, 391, 392, 394, 395, 396, 397, 414, 416, 418, 436, 437, 438, 439, 440, 441, 442, 443, 466], "denot": [23, 153, 154, 350, 355, 358, 359, 360, 366, 369, 370, 371, 372, 520], "dens": [73, 74, 75, 76, 77, 108, 188, 190, 191, 192, 193, 219, 223, 279, 319, 412, 437], "densenet": [65, 74, 75, 76, 77, 330], "densenet_121": 108, "densenet_121_weight": 571, "densenet_169": 108, "densenet_169_weight": 571, "densenet_201": 108, "densenet_201_weight": 571, "densenet_264": 108, "densiti": [259, 342, 531, 532, 533], "depend": [11, 16, 23, 24, 31, 108, 113, 121, 134, 135, 188, 190, 191, 192, 193, 194, 195, 245, 255, 289, 290, 291, 292, 294, 295, 321, 358, 467, 476, 478, 505, 507, 541, 548, 549, 561, 562, 566, 569], "deploy": [95, 131, 139, 142], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 78, 79, 92, 93, 94, 95, 100, 108, 113, 114, 115, 116, 117, 118, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 215, 238, 253, 271, 274, 279, 283, 305, 308, 311, 315, 360, 368, 391, 396, 401, 407, 410], "depth_coef": 78, "depthseparableconv1d": 332, "depthseparableconv2d": 332, "depthseparableconv3d": 332, "depthwis": [31, 40, 69, 70, 71, 72, 92, 100, 108, 119, 211, 269, 270, 271, 272, 273, 327, 328, 329], "depthwise_separ": [327, 328, 329], "der": 108, "deriv": [16, 25, 26, 92, 265, 303, 304, 305, 342, 346, 351, 353, 358, 359, 360, 377, 380, 452], "descend": [28, 544, 549], "descent": [435, 445], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 572], "descript": [218, 568], "deseri": [249, 453], "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 70, 71, 72, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 104, 108, 110, 111, 112, 113, 114, 115, 121, 122, 127, 128, 129, 130, 131, 132, 134, 137, 144, 156, 157, 158, 159, 160, 161, 162, 163, 174, 177, 188, 195, 196, 207, 211, 214, 215, 216, 218, 239, 240, 241, 244, 245, 251, 253, 254, 255, 256, 258, 263, 349, 366, 422, 568, 570], "desir": [10, 15, 212, 226, 249, 303, 304, 305, 306, 307, 308, 322, 367, 399, 400, 401, 402, 420, 424, 482, 483, 520, 522], "despit": 302, "destin": 250, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 69, 134, 195, 219, 434, 463, 469], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "detect_head": 239, "detectiondict": [239, 242], "detector": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "determin": [0, 17, 18, 19, 55, 109, 113, 164, 165, 243, 303, 304, 305, 306, 335, 336, 339, 340, 358, 359, 360, 399, 400, 401, 406, 407, 409, 410, 426, 443, 449, 455, 458, 459, 460, 462, 476, 479, 480, 545, 553, 559, 561], "determinist": 323, "develop": [10, 16, 122, 422, 463, 568], "deviat": [335, 337, 339, 557, 560, 568], "devic": [11, 92, 93, 94, 95, 108, 120, 121, 127, 128, 238, 249, 251, 447, 455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 502, 509, 522, 538], "diag": [25, 489, 529], "diagon": [25, 26, 28, 478, 481, 519, 535, 550, 551], "diagonaliz": 20, "diagram": 570, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 214, 220, 221, 237, 238, 250, 252, 254, 374, 379, 423, 428, 572], "dict_kei": 453, "dictionari": [109, 122, 129, 239, 242, 250, 251, 252, 254, 256, 423, 428, 572], "differ": [0, 10, 14, 23, 55, 70, 71, 72, 92, 96, 100, 108, 109, 121, 122, 128, 129, 132, 134, 135, 136, 137, 138, 179, 180, 181, 182, 187, 189, 198, 226, 242, 253, 256, 265, 286, 321, 331, 351, 377, 386, 424, 431, 434, 447, 450, 461, 463, 475, 488, 521, 546, 568, 572], "differenti": [18, 27, 233, 234, 316, 317, 319, 342, 378, 422, 455, 457, 458, 459, 460, 462, 464, 477, 479, 480, 485, 487, 494, 502, 509, 538, 553, 556], "difficult": 136, "diffus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "digit": [7, 8, 108, 112], "dilat": [269, 270, 271, 272, 273, 274, 324, 325, 326, 327, 328, 329, 358, 359, 360, 361, 362, 363, 364], "dilation_height": 276, "dilation_width": 276, "dim": [40, 41, 55, 100, 216, 268, 302, 356, 384, 387, 543], "dim_feedforward": [246, 414, 416, 418], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 65, 70, 71, 72, 92, 108, 113, 117, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 155, 166, 183, 188, 189, 190, 191, 200, 205, 213, 221, 224, 225, 234, 239, 243, 246, 251, 265, 268, 273, 274, 286, 288, 296, 297, 298, 300, 301, 302, 304, 305, 307, 308, 321, 322, 330, 331, 351, 355, 356, 358, 359, 360, 361, 364, 367, 374, 378, 389, 390, 391, 394, 395, 396, 397, 400, 401, 403, 404, 406, 407, 408, 409, 410, 414, 416, 417, 418, 420, 450, 458, 462, 464, 468, 476, 479, 499, 500, 505, 506, 507, 515, 516, 519, 520, 521, 523, 524, 526, 527, 528, 533, 534, 538, 539, 541, 543, 546, 547, 548, 552, 554, 555, 559, 561, 566], "dimension": [10, 11, 23, 25, 26, 28, 100, 224, 269, 270, 271, 272, 273, 274, 309, 310, 311, 313, 314, 315, 331, 355, 358, 359, 360, 361, 364, 370, 371, 372, 389, 390, 391, 394, 395, 396, 405, 406, 407, 408, 409, 410, 414, 416, 418, 450, 457, 468, 469, 473, 476, 478, 501, 506, 515, 516, 519, 521, 529, 530, 533, 540, 541, 546, 548, 550, 551], "diminish": [424, 437], "direct": [16, 20, 382, 384, 385, 386, 387, 435, 443, 444, 445, 543, 572], "directli": [88, 89, 90, 91, 108, 222, 223, 240, 241, 243, 252, 253, 254, 255, 290, 321, 374, 420, 436, 437, 439, 440, 441, 442, 461, 463, 522, 552, 568], "directori": [3, 4, 5, 6, 7, 8], "disabl": [279, 367, 368, 449, 451], "discard": [221, 224, 454], "discontinu": 510, "discover": 572, "discrep": [382, 384, 387], "discret": [455, 459, 463, 502], "disk": [3, 453, 454], "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95, 214], "displaystyl": 499, "disrupt": 494, "distinct": [113, 122, 246], "distribut": [195, 215, 217, 259, 265, 278, 321, 335, 336, 337, 338, 339, 340, 342, 351, 358, 359, 360, 366, 367, 369, 370, 371, 372, 377, 380, 384, 387, 405, 406, 407, 455, 458, 459, 460, 462, 463, 506, 515, 519, 521, 544, 547, 560, 562, 563, 564, 565, 570], "div": 489, "diverg": 215, "divers": [47, 65, 108, 113, 323, 563, 565, 568], "diversifi": 568, "divid": [1, 25, 65, 108, 113, 188, 189, 205, 206, 207, 208, 209, 210, 236, 237, 238, 253, 256, 265, 269, 270, 271, 273, 298, 351, 382, 383, 384, 385, 386, 387, 393, 466, 527, 545, 560], "divis": [25, 236, 269, 270, 271, 274, 298, 302, 355, 366, 369, 370, 371, 372, 414, 416, 418, 436, 437, 438, 439, 440, 441, 442, 443, 466, 545], "dl": 16, "do": [25, 27, 249, 252, 253, 254, 255, 277, 280, 281, 282, 422, 424, 442, 449, 451, 488, 519, 539], "doc": 218, "document": [4, 108, 434, 463], "doe": [23, 24, 25, 26, 28, 220, 221, 239, 246, 249, 252, 253, 254, 255, 256, 302, 340, 431, 438, 439, 444, 448, 449, 451, 455, 458, 459, 460, 461, 462, 477, 478, 479, 480, 481, 485, 486, 487, 488, 525, 526, 536, 538, 542, 543, 553], "doi": 108, "domain": [4, 142], "domin": 92, "done": [239, 572], "dosovitskii": 108, "dot": [11, 13, 14, 15, 20, 23, 132, 133, 252, 253, 254, 255, 256, 268, 322, 355, 356, 374, 378, 397, 408, 409, 410, 468, 473, 476, 489, 528, 529, 534, 547, 555], "down": [3, 225, 422, 502, 566, 569], "download": [4, 5, 6, 7, 8, 572], "downsampl": [65, 92, 146], "draw": 218, "draw_tensor_graph": 570, "drawback": 258, "drawn": [216, 458, 459, 460, 462, 463, 564, 569], "drop": [40, 41, 92, 100, 113, 278, 279, 366, 367, 368, 369, 370, 371, 372], "drop_block": [284, 285], "drop_path": [40, 41, 113, 284, 285, 368], "drop_path_r": [55, 79, 92, 100, 132, 133, 188, 189], "drop_prob": 368, "drop_rat": [55, 92, 100, 132, 133, 188, 189], "dropblock": [278, 373, 376], "dropout": [29, 55, 65, 78, 79, 88, 89, 90, 91, 92, 98, 100, 108, 113, 116, 117, 132, 133, 188, 189, 200, 205, 213, 219, 223, 246, 259, 268, 277, 281, 282, 283, 355, 356, 366, 367, 370, 371, 372, 414, 416, 418], "dropout1d": [284, 285, 373, 376], "dropout1dmodel": 370, "dropout2d": [284, 285, 373, 376], "dropout3d": [284, 285, 373, 376], "dropout_p": [268, 356], "dropout_prob": 98, "dropout_r": 205, "dropoutmodel": 369, "droppath": [373, 376], "dtype": [234, 249, 251, 319, 322, 412, 447, 457, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 538, 553, 558], "due": [23, 25, 73, 118, 130, 269, 270, 272, 273, 347, 502, 564], "dummi": [67, 220, 223, 224], "duplic": [10, 15, 65, 66, 67, 234, 252, 254], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 79, 96, 97, 98, 108, 133, 155, 220, 221, 224, 228, 229, 239, 249, 250, 251, 252, 253, 254, 255, 256, 265, 277, 278, 279, 280, 281, 282, 283, 296, 300, 323, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 420, 422, 424, 428, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 451, 457, 464, 465, 494, 502, 505, 506, 507, 515, 521, 536, 543, 558, 561, 564, 568, 569, 572], "dy": [261, 345], "dynam": [0, 2, 3, 16, 31, 108, 183, 187, 226, 250, 253, 254, 255, 256, 303, 304, 305, 306, 331, 367, 397, 399, 400, 401, 402, 404, 424, 428, 429, 431, 437, 442, 447, 449], "dynamicnetwork": 253, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 69, 78, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 106, 107, 109, 110, 111, 112, 118, 146, 188, 189, 200, 216, 220, 221, 224, 225, 228, 237, 238, 239, 249, 265, 322, 331, 346, 350, 351, 352, 355, 362, 366, 384, 423, 436, 443, 444, 447, 464, 481, 482, 497, 499, 500, 501, 503, 512, 518, 519, 528, 562, 572], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 70, 71, 72, 73, 79, 92, 100, 108, 109, 113, 119, 121, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 213, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 231, 233, 234, 236, 239, 242, 243, 244, 246, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 286, 288, 296, 298, 300, 303, 304, 305, 306, 307, 308, 316, 317, 319, 322, 330, 331, 343, 347, 351, 355, 358, 359, 360, 364, 366, 369, 370, 371, 372, 377, 380, 382, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 422, 424, 425, 426, 427, 428, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 455, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 484, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 521, 525, 527, 528, 533, 534, 537, 538, 539, 541, 543, 544, 545, 547, 548, 552, 555, 557, 558, 559, 560, 561, 562, 564, 566, 568, 572], "earli": [31, 92, 108, 442], "earlier": 122, "eas": 4, "easi": [2, 3, 4, 10, 167, 168, 169, 170, 171, 172, 251, 252, 254], "easier": [3, 252, 253, 256], "easili": [4, 122, 251, 255, 568], "eccv": 108, "economi": 28, "edg": [16, 92, 93, 95, 108, 121, 130, 139, 531, 532, 533, 539], "edu": [5, 6], "educ": [218, 570], "effect": [14, 55, 57, 59, 61, 69, 108, 117, 194, 198, 245, 252, 253, 254, 255, 256, 265, 269, 270, 271, 276, 341, 342, 347, 350, 351, 353, 378, 389, 390, 391, 393, 394, 395, 396, 397, 420, 424, 425, 426, 431, 449, 450, 534, 555], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 67, 68, 69, 70, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 103, 104, 106, 107, 108, 113, 116, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 188, 190, 191, 192, 193, 195, 206, 209, 211, 223, 239, 244, 276, 327, 328, 329, 343, 344, 346, 348, 374, 384, 422, 424, 425], "efficientform": [93, 94, 95], "efficientformer_l1": 108, "efficientformer_l3": 108, "efficientformer_l7": 108, "efficientnet": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "efficientnet_b0": 108, "efficientnet_b1": 108, "efficientnet_b2": 108, "efficientnet_b3": 108, "efficientnet_b4": 108, "efficientnet_b5": 108, "efficientnet_b6": 108, "efficientnet_b7": 108, "efficientnet_v2": [88, 89, 90, 91], "efficientnet_v2_": 108, "efficientnet_v2_l": 108, "efficientnet_v2_m": 108, "efficientnet_v2_xl": 108, "efficientnetv2": 108, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 374, "einstein": [10, 11, 13, 14, 15, 374], "einsum": 12, "either": [16, 215, 239, 288, 420, 451, 455, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 522, 537, 556], "element": [0, 10, 13, 15, 25, 26, 98, 108, 233, 239, 242, 251, 255, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 319, 324, 325, 326, 327, 328, 329, 330, 343, 344, 346, 347, 351, 352, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 374, 382, 383, 384, 385, 386, 387, 393, 397, 404, 405, 406, 407, 408, 409, 410, 450, 455, 457, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 477, 481, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 521, 525, 529, 530, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 553, 556], "elementwise_affin": 397, "elimin": [13, 15, 219, 383], "els": 242, "elsewher": [408, 409, 410, 481], "elu": [260, 285, 354, 376], "elumodel": 341, "embed": [55, 57, 59, 61, 70, 71, 72, 92, 113, 117, 119, 120, 121, 122, 124, 125, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 190, 191, 205, 268, 285, 320, 355, 356, 376, 413, 414, 416, 417, 418, 552], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 92, 93, 94, 95, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 355, 414, 415, 416, 417, 418], "embedding_dim": [205, 319, 412], "embedding_lay": 412, "embedding_matrix": 319, "emphas": [122, 129], "emploi": [31, 55, 57, 59, 61, 79, 92, 130], "empti": [250, 256, 489, 527], "empty_lik": 489, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 65, 70, 71, 72, 78, 92, 106, 108, 113, 116, 132, 133, 138, 142, 146, 183, 184, 185, 186, 188, 190, 191, 199, 217, 218, 222, 237, 238, 245, 250, 251, 252, 253, 254, 255, 268, 279, 347, 355, 356, 358, 359, 360, 362, 363, 377, 380, 414, 416, 418, 422, 434, 447, 448, 449, 455, 458, 459, 460, 462, 464, 482, 557], "encapsul": [16, 356, 404, 422, 447, 464], "enclos": [448, 451], "encod": [31, 55, 108, 205, 215, 217, 239, 242, 246, 384, 387, 414, 415, 416, 417, 418, 447], "encoder_lay": [417, 418], "encoderlay": 417, "encompass": [78, 215], "encourag": [278, 367, 369, 370, 371, 372, 382, 384, 387, 438], "end": [24, 95, 145, 222, 229, 230, 236, 239, 242, 258, 261, 262, 263, 279, 316, 322, 341, 343, 344, 345, 347, 349, 368, 378, 385, 386, 387, 405, 406, 407, 408, 409, 410, 442, 444, 470, 471, 473, 477, 484, 490, 495, 499, 500, 505, 507, 510, 523, 524, 525, 528, 536, 539, 549, 550, 551, 568], "end_axi": [378, 530], "enforc": [13, 250, 252, 254, 374, 415, 416, 417, 418], "engin": [16, 25, 346, 464], "enhanc": [31, 41, 42, 57, 59, 61, 65, 67, 69, 70, 71, 72, 92, 98, 99, 100, 106, 107, 108, 111, 114, 115, 120, 130, 131, 137, 140, 153, 154, 164, 165, 179, 180, 181, 182, 187, 189, 198, 213, 214, 219, 225, 252, 254, 331, 348, 428, 568], "enough": [16, 95], "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 79, 88, 89, 90, 91, 113, 135, 197, 221, 223, 229, 249, 250, 251, 252, 253, 254, 255, 256, 265, 268, 274, 302, 303, 304, 305, 319, 324, 325, 326, 345, 351, 356, 366, 367, 368, 369, 370, 371, 372, 374, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 406, 407, 408, 409, 410, 412, 422, 423, 424, 435, 436, 438, 439, 441, 442, 443, 444, 445, 449, 450, 453, 455, 458, 459, 460, 461, 462, 463, 474, 484, 494, 506, 515, 521, 525, 526, 527, 536, 539, 543, 544, 549, 550, 551, 558, 559, 560, 561, 562, 566, 568], "entir": [3, 16, 220, 222, 223, 279, 281, 282, 283, 368, 371, 372, 463], "entri": [79, 109, 125, 126, 529, 536, 543, 546], "entropi": [215, 289, 290, 291, 382, 383, 384], "enum": [571, 572], "environ": [16, 46, 48, 125, 126, 129, 244, 453, 454, 464, 570], "ep": [20, 139, 140, 141, 143, 144, 145, 278, 289, 290, 291, 296, 297, 298, 300, 301, 302, 324, 325, 326, 367, 382, 383, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 431, 436, 437, 438, 439, 440, 441, 442, 443], "epoch": [1, 3, 16, 424, 425, 426, 427, 428, 429, 430, 431, 432], "epsilon": [31, 215, 216, 226, 230, 297, 298, 302, 382, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 436, 437, 438, 439, 440, 441, 442, 443], "epsilon_": 216, "equal": [23, 215, 321, 322, 405, 406, 407, 484, 494, 502, 525, 527, 545, 559, 561], "equat": [20, 25, 27], "equival": [11, 469, 519, 540, 552], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 79, 215, 250, 253, 254, 255, 256, 259, 292, 294, 322, 342, 368, 374, 382, 384, 385, 386, 422, 423, 453, 484, 526], "escap": 426, "especi": [3, 16, 118, 215, 252, 254, 255, 274, 350, 363, 450, 461, 557, 558, 562, 568, 570], "essenti": [1, 3, 17, 23, 25, 105, 270, 276, 422, 461, 463, 505, 557, 558, 562, 568], "estim": [216, 386, 438, 439, 440, 441, 442, 443, 448], "et": [55, 97, 108, 113, 216, 222, 224, 236, 237, 245, 414], "eta": 444, "eta_": [425, 426, 431, 444], "eta_0": [425, 427, 429, 430, 432], "eta_min": 425, "eta_t": [425, 426, 427, 429, 430, 431, 432], "etc": [10, 65, 73, 79, 122, 146, 220, 221, 382, 420, 558], "euclidean": [24, 302], "european": 108, "eval": [16, 368, 464, 572], "evalu": [250, 296, 300, 366, 367, 368, 369, 370, 371, 372, 389, 390, 391, 394, 395, 396, 451, 464, 509, 523, 524, 568], "evaluate_model": 431, "even": [67, 436, 448, 451, 477, 478, 481, 485, 486, 487, 488], "evenli": [298, 303, 304, 305, 393, 399, 400, 401, 403, 477, 484, 527, 545], "everi": [1, 16, 427, 432, 448, 568, 572], "everywher": 510, "exact": [250, 253, 520, 562, 564, 572], "exactli": [256, 316], "exampl": [4, 16, 424, 469], "exc_typ": 451, "exc_valu": 451, "exce": 92, "excel": [99, 129, 134, 135], "except": [0, 11, 145, 448, 451, 510, 528, 534, 555], "exchang": 55, "excit": [78, 108, 121, 125, 126, 173, 176, 179, 180, 181, 182, 330], "exclud": [219, 223, 224, 239, 550, 551], "exclus": [459, 462, 477], "exdb": 8, "execut": [16, 253, 448, 451, 464], "exist": [15, 27, 236, 252, 254, 256, 452, 483, 528], "exit": 448, "exp": [215, 229, 258, 263, 264, 266, 341, 349, 383, 489], "exp_rang": 426, "expand": [4, 10, 15, 50, 108, 276, 526, 541, 548], "expans": [10, 13, 15, 54, 92, 100, 122, 125, 126, 132, 133, 138, 139, 140, 141, 143, 144, 145], "expansion_factor": 121, "expect": [18, 215, 220, 233, 236, 253, 256, 274, 279, 355, 366, 368, 369, 370, 371, 372, 383, 393, 397, 414, 415, 416, 417, 418, 422], "expens": 3, "experi": [16, 122, 461, 463, 568, 572], "experiment": [16, 463], "explan": [23, 25, 29, 40, 200, 213, 223, 224, 303, 304, 305, 399, 400, 401, 435], "explicit": [13, 14, 15, 256, 374, 378], "explicitli": [15, 16, 108, 252, 254, 383, 464, 476, 482], "explod": [349, 389, 390, 391], "explor": [16, 128, 422, 463], "expon": [23, 302, 474], "exponenti": [258, 263, 265, 341, 349, 351, 366, 427, 429, 438, 439, 440, 441, 442, 501], "exponentiallr": [424, 433], "expos": [16, 448, 572], "express": [10, 11, 13, 15, 43, 114, 115, 116, 134], "extend": [4, 55, 108, 146, 166, 183, 189, 196, 242, 363, 364, 476], "extens": [108, 434, 453, 570], "extern": [4, 219, 448], "extra": [54, 91, 130, 196, 526], "extract": [31, 57, 59, 61, 70, 71, 72, 96, 102, 105, 108, 133, 134, 137, 155, 166, 183, 195, 196, 197, 199, 211, 218, 219, 221, 222, 223, 224, 227, 228, 238, 239, 242, 276, 360, 364, 405, 407, 447, 452, 478, 505, 507, 529, 549, 550, 551, 553, 559, 561], "extractor": [109, 110, 111, 112, 211, 223, 224], "extrem": [25, 108, 156, 195, 207, 317], "extrema": 316, "ey": 489, "f": [1, 4, 5, 6, 7, 8, 16, 108, 215, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 348, 351, 414, 416, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 448, 569], "f_1": 330, "f_2": 330, "facilit": [10, 14, 96, 252, 256, 265, 351, 358, 359, 360, 422, 434, 560, 568], "factor": [78, 98, 122, 132, 224, 226, 227, 239, 258, 268, 269, 270, 271, 276, 330, 339, 340, 355, 356, 420, 424, 426, 427, 429, 430, 431, 432, 435, 442, 443, 444, 445, 525], "factori": 212, "failur": [252, 253, 254, 255, 422], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 78, 125, 126, 132, 133, 139, 140, 141, 143, 144, 145, 155, 188, 189, 219, 224, 239, 249, 250, 251, 268, 277, 279, 280, 281, 282, 283, 296, 300, 316, 317, 321, 333, 335, 336, 337, 338, 339, 340, 355, 356, 358, 359, 360, 361, 368, 377, 380, 414, 415, 416, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 443, 449, 454, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 505, 506, 507, 515, 521, 522, 523, 524, 525, 531, 532, 533, 536, 544, 553, 556, 558, 569, 572], "famili": [54, 65, 108, 122, 140, 144, 145, 196, 452, 572], "fan": [108, 335, 336, 339, 340], "fan_in": [335, 336], "fan_out": [335, 336], "farhadi": 222, "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": [94, 219, 442], "faster": [108, 133, 220, 221, 424, 437, 441, 451], "faster_rcnn_resnet_101_fpn": 222, "faster_rcnn_resnet_50_fpn": 222, "fasterrcnn": [219, 220, 221, 222], "fastrcnn": [222, 223], "fc": [16, 105, 155, 166, 173, 183, 237, 238, 253, 330, 359, 360, 405, 406, 407, 408, 409, 410, 572], "fc1": [16, 111, 112, 252, 256, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 380], "fc2": [16, 111, 112, 252, 256, 342, 343, 344, 346, 347, 349, 350, 352, 353, 380], "fc3": 112, "feat": 225, "feat_channel": [219, 223], "feat_dim": 224, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 67, 69, 70, 71, 72, 73, 92, 96, 99, 100, 102, 105, 108, 109, 110, 111, 112, 113, 118, 131, 132, 133, 134, 135, 136, 137, 138, 141, 145, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 183, 184, 185, 186, 195, 196, 197, 199, 200, 211, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 242, 244, 273, 278, 286, 288, 296, 297, 324, 325, 326, 330, 331, 360, 362, 367, 369, 370, 371, 372, 377, 378, 380, 389, 390, 391, 392, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 422, 437], "feature_channel": 65, "feature_extractor": 109, "fed": [3, 237, 238, 568], "feed": [3, 92, 378, 568], "feedback": 570, "feedforward": [205, 246, 414, 416, 418], "femto": [48, 108], "fergu": [108, 213], "fetch": [0, 572], "fewer": [1, 108, 142, 147, 148, 149, 150, 151, 152, 216, 238, 526, 552], "field": [5, 6, 8, 108, 113, 142, 183, 187, 218, 331, 572], "fig": 569, "figur": 569, "file": [3, 452, 453, 454, 571], "fill": [224, 333, 337, 338, 458, 459, 460, 462, 482, 483, 485, 486, 487, 488], "fill_valu": [482, 483], "filter": [79, 108, 122, 213, 224, 234, 269, 270, 271, 272, 273, 274, 276, 324, 325, 326, 359, 360], "filter_height": 276, "filter_s": 276, "filter_width": 276, "final": [40, 55, 65, 73, 74, 75, 76, 77, 78, 79, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 121, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 205, 215, 216, 219, 220, 221, 224, 239, 240, 241, 242, 246, 252, 253, 254, 255, 256, 268, 331, 355, 414, 415, 417, 448, 464, 499, 500, 557, 568], "find": [27, 505, 507, 523, 524, 538, 549], "fine": [55, 108, 113, 128, 131, 220, 221, 330, 568], "finer": 133, "finest": 134, "finetun": 572, "first": [5, 6, 7, 8, 20, 109, 188, 189, 190, 191, 213, 215, 222, 224, 234, 253, 254, 286, 330, 377, 378, 424, 438, 439, 440, 441, 442, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 516, 527, 529, 532, 537, 549, 553, 555, 557, 558, 568], "fit": [15, 422], "fix": [108, 142, 188, 219, 223, 224, 227, 253, 427, 430, 432, 464, 539], "flag": [16, 448, 451, 525], "flat": [108, 188], "flatten": [13, 105, 109, 224, 239, 256, 276, 364, 376, 381, 473, 524, 535, 540, 541, 543, 553], "flattennet": 378, "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 65, 92, 96, 105, 106, 107, 108, 109, 122, 123, 146, 155, 179, 180, 181, 182, 187, 200, 211, 215, 252, 253, 254, 255, 256, 374, 420, 422, 429, 434, 464, 476, 485, 486, 558, 568], "flexibli": 14, "flip": [563, 565, 568], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 65, 66, 67, 68, 78, 79, 92, 98, 100, 113, 119, 123, 132, 133, 134, 135, 136, 137, 138, 188, 189, 205, 215, 219, 223, 224, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 242, 246, 249, 251, 258, 261, 268, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 319, 322, 323, 324, 325, 326, 333, 337, 338, 339, 340, 341, 345, 355, 356, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 412, 414, 416, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 455, 457, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 495, 509, 522, 531, 532, 533, 536, 558, 560, 562, 563, 564, 565], "float32": [249, 251, 447, 464, 477, 478, 481, 482, 483, 485, 487, 522, 558], "float64": [447, 488, 522, 558], "floor": [432, 489], "flop": [108, 222, 245, 448, 544], "flow": [31, 65, 67, 99, 105, 108, 173, 256, 278, 340, 342, 350, 353, 358, 359, 360, 377, 380, 449, 457, 494, 536, 569, 570, 572], "fluctuat": 426, "fly": [2, 3], "fn": 451, "fname": 3, "focu": 31, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 74, 75, 76, 77, 78, 92, 113, 114, 115, 116, 117, 125, 126, 179, 180, 181, 182, 187, 200, 211, 213, 216, 221, 224, 236, 237, 238, 239, 240, 241, 246, 258, 259, 261, 262, 263, 264, 265, 266, 268, 286, 288, 321, 324, 325, 326, 327, 328, 329, 330, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 363, 366, 368, 369, 370, 371, 372, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422, 426, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 452, 454, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 505, 507, 516, 526, 537, 542, 552, 559, 560, 561, 562, 563, 564, 565, 568, 572], "footprint": 117, "foral": [415, 417], "forc": [16, 278], "form": [16, 26, 55, 230, 242, 331, 415, 417, 473, 531, 533, 537, 541, 548, 568], "format": [2, 3, 5, 6, 7, 8, 215, 226, 229, 230, 231, 233, 234, 237, 238, 241, 316, 322, 384, 387, 453, 558], "formul": [216, 259, 290, 302], "formula": [20, 28, 265, 303, 304, 305, 346, 351, 352, 383, 385, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 469, 521, 562], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 121, 123, 124, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 213, 215, 219, 221, 222, 223, 224, 226, 227, 236, 239, 242, 244, 249, 250, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 572], "foundat": [16, 105, 122, 173, 250, 422, 434], "four": [74, 75, 76, 77, 113, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 539], "fpn": [219, 220, 221, 222, 226, 232], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 113, 216, 226, 229, 230, 233, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 279, 286, 288, 297, 298, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 319, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 416, 418, 425, 436, 437, 438, 439, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 528, 534, 536, 537, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 554, 555, 556, 560], "fraction": [67, 272, 273, 274], "frame": [222, 283], "framework": [4, 10, 16, 218, 384, 387, 389, 390, 391, 394, 395, 396, 423, 434, 568], "free": [16, 447, 523, 524, 525], "frequent": [384, 387], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 92, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 272, 276, 278, 286, 290, 296, 300, 306, 307, 308, 316, 317, 319, 321, 322, 324, 325, 326, 330, 331, 333, 335, 336, 337, 338, 339, 340, 348, 355, 358, 359, 360, 361, 364, 366, 367, 369, 370, 371, 372, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 469, 470, 471, 475, 476, 478, 499, 500, 505, 506, 507, 515, 521, 523, 524, 525, 528, 529, 534, 537, 538, 541, 545, 546, 547, 548, 549, 553, 555, 556, 559, 560, 561, 562, 563, 564, 565, 568, 569, 572], "fu": 108, "full": [16, 28, 123, 125, 126, 205, 215, 220, 222, 223, 239, 244, 246, 363, 457, 489], "full_lik": 489, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 73, 74, 75, 76, 77, 78, 79, 105, 108, 109, 110, 111, 112, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 200, 211, 213, 219, 223, 224, 238, 288, 330, 331, 378, 380, 463, 464, 544], "func": 452, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 69, 92, 100, 215, 216, 223, 239, 250, 252, 253, 254, 255, 256, 324, 325, 326, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 366, 367, 369, 370, 371, 372, 374, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 414, 416, 418, 422, 425, 426, 428, 429, 432, 434, 463, 557, 568, 572], "fundament": [218, 268, 288, 380, 464, 558], "further": [14, 42, 43, 44, 45, 54, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 121, 123, 124, 125, 126, 128, 130, 153, 154, 197, 457, 463, 506, 515, 521, 572], "fuse": [31, 108, 183, 225, 448], "fusion": [55, 184, 185, 186], "futur": [268, 356, 379, 417, 418, 570], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 69, 78, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 118, 146, 188, 189, 200, 216, 220, 221, 224, 225, 228, 237, 238, 298, 316, 330, 331, 362, 366, 423, 436, 443, 447, 464, 482, 499, 500, 528, 562, 572], "g_": 437, "g_t": 443, "gain": [339, 340], "gamma": [297, 389, 390, 391, 392, 393, 394, 395, 396, 397, 424, 426, 427, 428, 430, 432], "gamma_c": [297, 392], "gan": [273, 361, 362], "gap": [155, 166, 183, 330], "gaussian": [215, 216, 217, 259, 342], "gaussiandiffus": 216, "gelu": [69, 92, 113, 260, 285, 354, 376], "gelunetwork": 342, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "geoffrei": [5, 6], "geometr": 502, "geq": 550, "get": [5, 6, 7, 8], "get_loss": [215, 216, 219, 236, 237, 238, 239, 242], "get_lr": [425, 426, 427, 428, 429, 430, 431, 432], "girshick": [222, 224], "git": 16, "github": [7, 16], "give": [435, 443], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 65, 216, 218, 227, 247, 276, 302, 307, 308, 316, 319, 355, 356, 364, 374, 382, 383, 384, 387, 404, 423, 447, 449, 455, 482, 486, 488, 536, 544, 545, 549, 557, 562, 563, 565, 568, 569], "global": [0, 55, 57, 59, 61, 65, 69, 70, 71, 72, 78, 92, 108, 113, 132, 134, 137, 138, 142, 155, 166, 173, 183, 188, 190, 191, 192, 193, 195, 196, 197, 297, 330, 392, 448, 449, 451, 461, 463], "global_pool": [65, 92], "global_response_norm": [285, 299], "globalresponsenorm": [376, 398], "go": [10, 66, 97, 108], "goal": [382, 384, 387, 570], "good": 93, "googlenet": [97, 108], "gpu": [11, 108, 118, 249, 251, 447, 455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 525, 572], "grad": [11, 16, 239, 242, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 276, 279, 286, 288, 316, 317, 321, 327, 328, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 423, 434, 453, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 484, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 534, 536, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 563, 565, 566, 569], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 65, 66, 67, 99, 105, 108, 227, 233, 239, 242, 249, 251, 317, 364, 367, 422, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 454, 455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 502, 509, 522, 523, 524, 525, 529, 538, 553, 558, 569, 570], "gradual": [217, 424, 425, 427], "grain": [55, 108, 113, 330], "granular": 228, "graph": [16, 228, 340, 448, 451, 454, 464, 477, 478, 481, 485, 486, 487, 488, 558, 569, 570], "grayscal": [7, 8, 109, 110, 111, 112, 562, 568], "great": 137, "greater": [50, 136, 234, 322, 494, 527], "green": 562, "grid": [108, 113, 226, 227, 236, 237, 238, 239, 240, 241, 242, 243, 316, 317, 494, 537], "grid_sampl": [285, 316, 318], "grid_window_s": 113, "gridattent": 113, "grn": 392, "ground": [219, 236, 237, 238, 239], "groundbreak": 108, "group": [68, 108, 122, 146, 153, 154, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 187, 221, 253, 269, 270, 271, 272, 273, 274, 298, 324, 325, 326, 331, 358, 359, 360, 361, 362, 363, 393, 423, 424, 434], "group1": 253, "group2": 253, "group_norm": [285, 299], "groupedconvblock": 166, "groupnorm": [298, 376, 398], "grow": [16, 92], "growth_rat": [73, 74, 75, 76, 77], "guarante": [454, 461], "gw": 242, "h": [10, 13, 14, 15, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 207, 215, 216, 217, 222, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 243, 268, 270, 271, 273, 274, 276, 278, 282, 283, 297, 304, 305, 307, 308, 310, 311, 314, 315, 316, 321, 323, 325, 326, 330, 355, 356, 363, 374, 378, 390, 391, 392, 395, 396, 400, 401, 403, 404, 407, 410, 414, 416, 418, 559, 561, 572], "h_": [226, 227, 229, 230, 270, 271, 273, 274, 304, 305, 307, 308, 310, 311, 314, 315, 321, 359, 360, 362, 363, 364, 400, 401, 403, 404, 406, 407, 409, 410], "h_i": 236, "h_in": 317, "h_l": [225, 226], "h_out": [270, 271, 273, 274, 310, 311, 314, 315, 317], "h_stack": 534, "h_t": [229, 230], "ha": [0, 20, 42, 55, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 226, 238, 239, 256, 269, 270, 271, 272, 324, 325, 326, 346, 348, 352, 382, 384, 389, 390, 391, 394, 395, 396, 397, 420, 423, 434, 453, 464, 469, 494, 502, 509, 519, 526, 528, 534, 538, 547, 553, 555, 562], "hackabl": 16, "haip": 108, "half": [215, 426, 513], "han": 7, "hand": 27, "handl": [0, 3, 10, 16, 25, 195, 245, 250, 252, 253, 254, 255, 256, 319, 384, 387, 422, 434, 447, 476], "handwritten": [7, 8, 112], "hang": 108, "happen": 572, "hard": [125, 126, 344], "hard_sigmoid": 343, "hardsigmoid": [344, 354, 376], "hardswish": [354, 376], "hardwar": 118, "hashabl": 464, "hat": [31, 216, 236, 239, 242, 393, 438, 439, 440, 441, 442], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 215, 234, 236, 239, 251, 253, 255, 256, 270, 271, 278, 302, 319, 322, 340, 412, 422, 453, 481, 485, 486, 487, 488, 505, 507, 528, 534, 536, 537, 546, 547, 552, 553, 555, 560, 566, 572], "he": 108, "head": [31, 40, 55, 65, 70, 71, 72, 92, 100, 113, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 211, 219, 220, 221, 222, 223, 224, 239, 240, 241, 242, 243, 244, 246, 268, 355, 356, 414, 416, 418, 572], "head_dim": 55, "head_fn": 100, "heapsort": 544, "heart": 16, "heavi": 65, "height": [31, 211, 229, 230, 236, 270, 271, 273, 274, 276, 282, 283, 297, 304, 305, 307, 308, 310, 311, 314, 315, 317, 321, 323, 331, 359, 360, 364, 390, 391, 392, 395, 396, 400, 401, 403, 406, 407, 409, 410, 420, 559, 561, 566], "help": [31, 57, 59, 61, 69, 98, 261, 263, 283, 319, 341, 345, 348, 349, 353, 389, 390, 391, 405, 406, 408, 409, 412, 424, 426, 431, 432, 435, 438, 439, 441, 449, 450, 516, 570], "henc": [499, 500, 542], "here": [3, 18, 220, 250, 272, 286, 383, 422, 434, 450, 463, 557, 558, 568], "heurist": 224, "hidden": [29, 55, 113, 134, 135, 136, 137, 188, 189, 205, 213, 223, 246, 253], "hidden_dim": [219, 223], "hidden_s": 253, "hierarch": [40, 41, 57, 59, 61, 92, 108, 132, 133, 134, 135, 136, 137, 138, 139, 144, 188, 189, 215, 253, 256, 422], "hierarchi": [92, 215, 222, 359], "hierarchical_kl": 215, "hierarchicalnetwork": 253, "high": [11, 43, 49, 50, 72, 88, 89, 90, 91, 92, 93, 95, 102, 108, 113, 114, 115, 118, 121, 129, 130, 133, 135, 143, 144, 145, 163, 178, 187, 195, 196, 197, 207, 208, 219, 228, 424, 459, 462, 476], "higher": [50, 79, 119, 127, 166, 195, 384, 387, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 468, 469, 473, 476, 501, 516], "highest": [54, 118, 130, 236, 459], "highli": [16, 31, 46, 54, 108, 124, 134, 194, 245, 429], "highlight": [330, 408, 409, 410, 569], "hinton": [5, 6], "hist": [531, 532, 533], "histogram": [532, 533, 535], "histogram2d": 535, "histogramdd": 535, "histor": 437, "histori": [455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 485, 486, 487, 488], "ho": [216, 217], "hold": [122, 252, 253, 254, 255], "hook": 454, "horizont": [534, 547, 563, 568, 569], "hot": [236, 239, 242, 384, 387], "how": [2, 3, 13, 15, 134, 179, 180, 181, 182, 187, 253, 256, 316, 317, 374, 422, 568, 569, 570], "howard": 108, "howev": [249, 340, 502], "hstack": 535, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [108, 330], "huang": 108, "huber": [292, 385], "huber_loss": [285, 293], "huberloss": [376, 388], "huberregressionmodel": 385, "hue": 568, "huge": [49, 108, 134], "human": 218, "hybrid": [69, 92, 108, 130, 131], "hyper": 572, "hyperbol": [266, 346, 353, 497, 512, 518], "hyperparamet": [132, 147, 148, 149, 150, 151, 152, 155, 166, 212, 247, 423, 435], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572], "i_": [476, 529], "i_0": [476, 529], "i_1": [13, 14, 15, 322, 374, 476], "i_2": [13, 14, 15, 322, 374], "i_k": [15, 476], "i_m": [13, 15, 374], "i_n": 322, "iccv": 108, "iclr": [108, 217], "id": 569, "idea": 108, "ideal": [43, 47, 51, 118, 119, 122, 131, 134, 256], "ident": [22, 23, 100, 108, 316, 317, 323, 368, 376, 381, 461, 463, 481, 542], "identifi": [218, 254], "idx": [2, 3, 525], "ieee": [108, 222, 330], "ignor": [239, 414, 415, 416, 417, 418, 525], "ii": 519, "ij": [11, 31, 236, 239, 265, 321, 351, 467, 468, 469, 473, 537, 550, 551], "ijb": 242, "ik": [11, 467, 468, 469], "ill": [19, 25], "ilsvrc": 108, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572], "image_dir": 3, "image_mean": 224, "image_path": 3, "image_s": [205, 206, 207, 208, 209, 210, 216, 239, 240, 241, 242, 243], "image_shap": 231, "imagedataset": 3, "imageio": 3, "imagenet": [65, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 100, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 164, 165, 179, 180, 181, 182, 187, 220, 221, 224, 572], "imagenet1k": [571, 572], "imagenet1k_v1": 572, "imagenet_1k": 571, "imbal": [384, 387], "img": 228, "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210], "imgclf": [69, 100, 572], "imggen": [215, 216], "impact": [108, 441], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 73, 78, 92, 96, 97, 98, 99, 100, 106, 107, 108, 109, 119, 120, 121, 132, 133, 155, 164, 165, 167, 168, 169, 170, 171, 172, 173, 188, 205, 211, 213, 215, 216, 217, 219, 222, 223, 224, 228, 236, 239, 242, 245, 246, 250, 276, 279, 317, 327, 328, 329, 331, 355, 356, 364, 368, 392, 416, 418, 423, 428, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 534, 555, 562], "impli": [358, 359], "implicit": [364, 482], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 572], "impress": 222, "improp": [10, 253, 256, 463], "improv": [31, 40, 57, 59, 61, 65, 69, 71, 79, 97, 98, 99, 103, 105, 107, 108, 113, 131, 133, 140, 142, 146, 155, 166, 179, 180, 181, 182, 183, 188, 189, 196, 197, 199, 213, 216, 219, 220, 222, 223, 238, 239, 248, 278, 279, 296, 319, 323, 330, 342, 349, 353, 374, 412, 424, 425, 426, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 561, 564, 568], "imread": 3, "in1_featur": [286, 377], "in2_featur": [286, 377], "in_channel": [31, 55, 65, 69, 92, 113, 114, 115, 116, 117, 118, 132, 133, 139, 140, 141, 142, 143, 144, 145, 155, 188, 189, 205, 236, 253, 256, 324, 325, 326, 327, 328, 329, 330, 331, 358, 359, 360, 361, 362, 363, 390, 391, 405, 406, 407, 408, 409, 410, 422], "in_channels_list": 225, "in_featur": [252, 253, 256, 288, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 359, 360, 366, 369, 370, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 394, 397, 405, 406, 407, 408, 409, 410, 572], "incept": [97, 98, 99, 100, 105, 106, 107], "inception_next": 100, "inception_next_atto": 108, "inception_next_bas": 108, "inception_next_smal": 108, "inception_next_tini": 108, "inception_resnet_v1": 108, "inception_resnet_v2": 108, "inception_v1": 108, "inception_v3": 108, "inception_v4": 108, "inceptionnext": [101, 102, 103, 104], "inceptionresnet": [106, 107], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 70, 71, 72, 96, 97, 98, 106, 109, 113, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 227, 236, 237, 238, 240, 241, 243, 246, 250, 251, 253, 255, 256, 321, 324, 325, 326, 327, 328, 329, 378, 393, 416, 418, 420, 422, 423, 428, 434, 441, 448, 463, 469, 539, 550, 551, 570], "inclus": [251, 254, 459, 462, 484, 499, 500], "incom": [288, 380], "incompat": [220, 526], "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 108, 124, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 196, 198, 239, 342], "increas": [43, 44, 92, 113, 116, 118, 119, 127, 130, 134, 135, 137, 140, 145, 166, 167, 168, 169, 170, 171, 172, 183, 248, 269, 270, 271, 272, 273, 276, 323, 426, 431, 437, 444, 450, 534, 555, 562, 563, 565, 568], "increment": [216, 222], "independ": [55, 224, 253, 269, 270, 271, 272, 355, 366, 369, 370, 371, 372, 397, 469, 480, 560, 562, 564, 566], "index": [0, 2, 5, 6, 7, 8, 10, 13, 224, 227, 239, 242, 297, 319, 322, 374, 392, 412, 425, 426, 427, 428, 429, 430, 432, 450, 464, 477, 478, 481, 499, 500, 502, 525, 537, 538, 542], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 70, 71, 72, 138, 153, 154, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 224, 234, 236, 239, 251, 253, 255, 256, 291, 295, 319, 322, 384, 387, 405, 412, 414, 415, 416, 417, 418, 430, 447, 449, 464, 523, 524, 525, 538, 544, 549, 556, 559, 561], "individu": [3, 253, 256, 385, 397, 434, 437, 444], "induc": [263, 349], "induct": [57, 59, 61, 69, 92, 108], "inf": 517, "infer": [94, 133, 179, 180, 181, 182, 187, 220, 222, 223, 224, 234, 237, 238, 253, 256, 322, 447, 451, 454, 572], "infin": [26, 28, 440], "inform": [31, 55, 108, 134, 190, 191, 192, 193, 198, 217, 218, 245, 249, 330, 428, 434, 436], "infti": [24, 442], "inherit": [1, 435, 443, 445], "init": 334, "initi": [1, 16, 31, 40, 67, 73, 92, 100, 105, 113, 117, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 194, 195, 196, 197, 201, 202, 203, 204, 212, 220, 221, 239, 240, 241, 243, 247, 249, 251, 252, 253, 254, 255, 256, 331, 333, 335, 336, 337, 338, 339, 340, 355, 358, 359, 360, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 397, 412, 416, 418, 420, 422, 423, 425, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 458, 461, 462, 463, 477, 481, 484, 485, 486, 487, 488, 522], "initial_accumulator_valu": 437, "inject": 65, "inner": [467, 476, 489], "innov": [121, 131], "input": [10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 223, 224, 234, 237, 238, 240, 241, 243, 244, 245, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 451, 463, 464, 465, 467, 468, 469, 473, 476, 478, 480, 483, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 572], "input1": 377, "input2": 377, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 213, 224, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 392, 399, 400, 401, 402, 403, 404, 412, 527, 544, 549, 550, 551], "input_1": 286, "input_2": 286, "input_data": [341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 366, 369, 370, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410], "input_indic": [319, 412], "input_s": [253, 255, 351, 384, 387], "input_shap": 215, "input_tensor": [55, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 239, 249, 252, 253, 254, 255, 256, 265, 278, 279, 302, 327, 328, 329, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 366, 367, 368, 369, 370, 371, 372, 378, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 420, 422, 559, 560, 561, 562, 563, 564, 565, 566], "insert": 525, "insid": [3, 448, 449], "insight": 108, "inspect": [16, 250, 251, 256, 423, 570], "inspir": [10, 13, 15, 16, 40, 108], "instabl": [25, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 117, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 214, 221, 237, 238, 240, 241, 243, 244, 247, 248, 250, 251, 252, 254, 255, 256, 298, 300, 348, 394, 395, 396, 397, 414, 415, 417, 423, 447, 451, 452, 522, 541, 548, 568, 572], "instance_norm": [285, 299, 394, 395, 396], "instancenorm": [298, 393], "instancenorm1d": [376, 398], "instancenorm1dmodel": 394, "instancenorm2d": [376, 398], "instancenorm3d": [376, 398], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 67, 70, 71, 72, 78, 88, 89, 90, 91, 94, 100, 101, 102, 103, 104, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 179, 180, 181, 182, 187, 190, 191, 192, 193, 198, 199, 206, 207, 208, 209, 210, 223, 224, 452, 572], "instead": [57, 59, 61, 252, 253, 254, 255, 256, 335, 336, 339, 340, 412, 414, 416, 418, 438, 439, 440, 479, 480], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 265, 268, 269, 270, 271, 272, 273, 274, 276, 278, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 338, 339, 340, 351, 355, 356, 358, 359, 360, 361, 362, 363, 364, 367, 374, 377, 378, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 444, 447, 452, 455, 457, 458, 459, 460, 461, 462, 464, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 495, 499, 500, 505, 506, 507, 509, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 561, 566, 569], "int32": [412, 525, 538], "int64": [234, 447, 457, 464, 523, 524], "integ": [1, 3, 23, 173, 200, 234, 269, 270, 271, 304, 305, 322, 355, 358, 359, 360, 361, 364, 397, 400, 401, 406, 407, 408, 409, 410, 457, 458, 459, 460, 462, 463, 476, 479, 485, 487, 494, 502, 506, 509, 515, 520, 521, 533, 539, 541, 542, 545, 548], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 67, 69, 70, 71, 72, 108, 113, 130, 146, 223, 224, 246, 251, 253, 255, 256, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 374, 377, 380, 405, 406, 407, 408, 409, 410, 464], "intellig": [108, 218, 222, 330], "intend": [10, 135, 249, 254, 255], "intens": [25, 73, 156, 560, 562], "interact": [113, 188, 286, 377, 422, 463, 570], "interdepend": 108, "interest": [223, 227], "interfac": [2, 16, 250, 253, 402, 434], "interfer": [449, 552], "intermedi": [25, 134, 153, 154, 242, 330, 414, 416, 418, 464, 569], "intern": [16, 108, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 217, 220, 221, 222, 252, 253, 254, 255, 256, 346, 383, 384, 387, 422, 476, 559, 560, 561, 562, 563, 564, 565, 566], "interpol": [217, 227, 285, 317, 320, 420, 484, 566], "interpret": [10, 108, 218, 265, 351, 528], "intersect": [233, 234], "interv": [430, 432, 458, 462, 477], "introduc": [41, 57, 59, 61, 65, 69, 79, 97, 98, 108, 113, 119, 120, 121, 132, 133, 141, 166, 199, 219, 222, 223, 224, 245, 262, 272, 330, 342, 347, 348, 350, 353, 366, 369, 370, 371, 372, 414, 561, 564, 568], "introspect": [16, 256], "intuit": [10, 13, 16, 252, 254, 422, 568, 570], "inv": 21, "inv_a": 22, "invari": [406, 409], "invers": [19, 22, 23, 25, 229, 426, 437, 491, 492, 493], "invert": [19, 22, 23, 27, 108, 120, 121, 124], "invit": 16, "invok": 452, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 183, 218, 258, 259, 261, 262, 263, 264, 266, 286, 288, 321, 358, 359, 360, 374, 377, 380, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 488, 501, 503, 504, 505, 507, 511, 513, 537, 539, 541, 548], "iou": [224, 228, 232, 234, 236, 239], "iou_matrix": 233, "iou_thresh": [228, 234, 239, 242], "is_all_fre": 464, "is_bit_fre": 447, "is_caus": [268, 356, 417, 418], "is_fre": 464, "is_leaf": 464, "isn": 16, "issu": [3, 16, 349, 383, 389, 390, 391, 438, 439], "item": [7, 16, 386], "iter": [0, 1, 2, 3, 216, 249, 250, 253, 255, 415, 417, 423, 426, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 477], "ith": [265, 351], "its": [4, 16, 23, 25, 29, 41, 65, 68, 108, 118, 122, 130, 133, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 184, 185, 186, 213, 219, 226, 239, 249, 252, 253, 254, 255, 269, 270, 271, 272, 273, 276, 316, 323, 331, 340, 342, 346, 347, 352, 361, 367, 408, 409, 410, 422, 423, 436, 444, 448, 449, 450, 452, 454, 477, 479, 480, 487, 494, 502, 505, 507, 509, 522, 526, 542, 544, 545, 552, 560, 563, 565, 568, 572], "itself": [18, 23, 252, 253, 254, 255, 424, 451], "j": [8, 10, 13, 14, 15, 31, 217, 233, 236, 239, 242, 265, 319, 330, 351, 374, 389, 390, 391, 394, 395, 396, 405, 406, 408, 409, 412, 499, 500, 537, 547, 550, 551, 559, 561], "j_": 476, "j_1": [13, 15, 374], "j_2": [13, 15, 374], "j_k": [15, 476], "j_n": [13, 15, 374], "jacobian": [499, 500], "jain": 217, "jie": 108, "jk": [11, 468], "join": [3, 528], "jointli": 219, "joseph": 222, "json": 452, "jupyt": 570, "k": [23, 31, 55, 108, 113, 133, 226, 227, 268, 269, 272, 355, 356, 358, 361, 384, 390, 391, 395, 396, 405, 408, 409, 418, 467, 468, 476, 478, 481, 499, 500, 528, 529, 545, 549], "k_2": 55, "k_d": [271, 274, 360, 407, 410], "k_h": [270, 271, 273, 274, 359, 360, 364, 406, 407, 410], "k_i": 355, "k_j": 31, "k_w": [270, 271, 273, 274, 359, 360, 364, 406, 407, 410], "kaim": [108, 335, 336, 339, 340], "kaiming_norm": 334, "kaiming_uniform": 334, "kalenichenko": 108, "karen": 108, "kashif": 7, "kb": 571, "kd": 363, "kdim": 355, "keep": [234, 250, 279, 347, 436, 448, 509, 525, 542, 550, 551], "keep_grad": [251, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 558], "keep_var": 250, "keepdim": [24, 505, 506, 507, 515, 521, 523, 524], "kei": [16, 55, 69, 113, 122, 132, 138, 139, 140, 141, 143, 144, 145, 188, 189, 218, 239, 250, 252, 254, 256, 268, 355, 356, 418, 423, 453, 572], "kept": [234, 506, 515, 521], "kernel": [65, 92, 108, 109, 110, 111, 112, 122, 125, 126, 183, 184, 185, 186, 187, 213, 269, 270, 271, 272, 273, 274, 276, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 364, 399, 400, 401, 402, 403, 404, 406, 407, 410, 448], "kernel_s": [121, 125, 126, 183, 184, 185, 186, 219, 223, 224, 253, 256, 309, 310, 311, 313, 314, 315, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 364, 374, 390, 391, 405, 406, 407, 408, 409, 410], "keyerror": 250, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 114, 115, 116, 117, 118, 125, 126, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 214, 220, 221, 240, 241, 243, 244, 250, 379], "kh": [362, 363], "kind": [525, 544], "kingma": 217, "kj": [467, 469], "kl": 215, "kl_weight": 215, "known": [108, 272, 274], "kriz": [5, 6], "krizhevski": [5, 6, 108], "kroneck": [13, 265, 351, 374], "kw": [362, 363], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 237, 238, 240, 241, 243, 244, 250, 379, 452], "l": [18, 25, 88, 108, 208, 215, 216, 226, 236, 239, 242, 268, 269, 272, 281, 303, 306, 309, 313, 324, 330, 356, 364, 366, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 399, 402, 417, 418, 516, 526], "l1": [93, 108, 302], "l2": [302, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445], "l3": [94, 108], "l7": [95, 108], "l_": [245, 269, 272, 303, 306, 309, 313, 358, 361, 399, 402, 405, 408, 414], "l_0": 226, "l_k": 355, "l_m": [415, 416], "l_out": [269, 272, 309, 313], "l_q": 355, "l_t": [414, 415, 416], "l_v": 355, "label": [4, 5, 6, 7, 8, 11, 98, 218, 219, 223, 224, 322, 382, 383, 384, 387], "lambd": 435, "lambda": [20, 263, 349, 429, 435, 439], "lambda_": [236, 239], "lambda_1": 20, "lambda_2": 20, "lambda_coord": [236, 237, 238, 239], "lambda_fn": 429, "lambda_i": 20, "lambda_n": 20, "lambda_noobj": [236, 237, 238, 239], "lambdalr": 433, "languag": [4, 358, 377, 405, 408, 414], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 73, 88, 91, 108, 113, 114, 115, 118, 121, 125, 127, 130, 131, 134, 135, 145, 156, 157, 158, 161, 174, 175, 191, 195, 196, 197, 206, 207, 208, 220, 242, 243, 327, 328, 329, 348, 385, 422, 435, 438, 439, 440, 443, 444, 445], "larger": [42, 55, 58, 71, 72, 78, 79, 113, 114, 115, 155, 183, 196, 248, 252, 254, 269, 270, 271, 276, 278, 367, 435, 470, 527, 539, 559, 561, 566], "largest": [54, 95, 134, 145, 195, 505, 549], "last": [1, 65, 265, 301, 322, 351, 378, 425, 426, 427, 428, 429, 430, 432, 468, 469, 476, 499, 500, 525, 527, 528, 544, 563, 565], "last_channel": 121, "last_epoch": [425, 426, 427, 428, 429, 430, 432], "last_lr": [424, 425, 426, 427, 428, 429, 430, 431, 432], "latent": [215, 217], "later": [31, 92, 108, 225], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 66, 69, 73, 74, 75, 76, 77, 78, 79, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 188, 189, 195, 196, 200, 201, 202, 203, 204, 205, 213, 215, 218, 219, 220, 221, 223, 225, 238, 239, 242, 245, 246, 250, 252, 253, 256, 265, 279, 288, 296, 298, 300, 301, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 351, 356, 358, 359, 360, 368, 377, 378, 379, 380, 387, 397, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422, 463, 539, 558, 570], "layer1": 452, "layer2": 452, "layer_group": 253, "layer_norm": [285, 299, 397], "layer_norm_ep": [414, 416, 418], "layer_scale_init": 40, "layer_scale_init_valu": 92, "layer_sequ": [253, 256], "layernorm": [55, 69, 92, 113, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 376, 393, 398, 414, 415, 416, 417, 418], "layernormmodel": 397, "layout": [68, 274], "lcd": [453, 454], "lceil": 494, "lct": [453, 454], "ldot": [242, 523, 524], "le": [108, 499, 500], "lead": [10, 16, 65, 220, 253, 256, 302, 342, 394, 395, 396, 397, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 526], "leaf": 464, "leaki": [261, 345], "leaky_relu": [260, 285, 345], "leakyrelu": [354, 376], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 65, 79, 102, 103, 108, 113, 134, 138, 166, 167, 168, 169, 170, 171, 172, 213, 214, 217, 218, 219, 220, 221, 245, 252, 253, 254, 255, 262, 265, 330, 341, 345, 347, 351, 358, 359, 360, 369, 370, 371, 372, 374, 377, 380, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 450, 461, 484, 545, 550, 551, 557, 558, 568], "learnabl": [31, 55, 188, 189, 215, 219, 249, 250, 251, 296, 297, 298, 300, 301, 324, 325, 326, 355, 358, 359, 360, 361, 362, 363, 377, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 418, 422], "least": [25, 26, 28, 420, 519, 550, 551], "lecun": [8, 108], "left": [23, 24, 25, 28, 31, 55, 113, 216, 226, 230, 236, 242, 259, 265, 302, 342, 351, 355, 364, 382, 383, 384, 385, 387, 389, 390, 391, 394, 395, 396, 397, 408, 409, 410, 416, 418, 516, 525, 529, 559, 561, 569], "leftarrow": 441, "len": [0, 1, 2, 3, 537], "lenet": [16, 110, 111, 112], "lenet_1": 108, "lenet_1_weight": 571, "lenet_4": 108, "lenet_4_weight": 571, "lenet_5": [16, 108], "lenet_5_weight": [16, 571], "length": [55, 92, 113, 216, 236, 239, 253, 268, 269, 272, 281, 303, 306, 309, 313, 358, 379, 389, 393, 394, 399, 402, 405, 408, 417, 418, 457, 525, 539, 560], "leq": [229, 343, 344, 385, 430, 442, 474, 495, 551], "lerp": 321, "less": [0, 258, 261, 292, 341, 345, 384, 385, 387, 484, 502], "let": [20, 476, 525], "level": [105, 113, 134, 135, 136, 137, 225, 226, 364], "leverag": [13, 14, 15, 16, 27, 31, 99, 100, 107, 108, 127, 130, 139, 142, 167, 168, 169, 170, 171, 172, 190, 191, 192, 193, 194, 195, 211, 218, 331, 422, 572], "lfloor": [364, 432, 502], "li": [108, 142], "librari": [3, 10, 16, 17, 250, 422, 423, 434, 452, 463, 464, 568], "lie": [231, 455], "lightblu": 569, "lightgrai": 569, "lightgreen": 569, "lightweight": [16, 52, 60, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 108, 117, 120, 125, 126, 138, 142, 147, 148, 149, 150, 151, 152, 159, 176, 192, 193, 199, 210, 238, 241, 244, 331, 344, 348], "like": [13, 14, 15, 16, 57, 59, 61, 79, 105, 108, 122, 130, 167, 168, 169, 170, 171, 172, 184, 185, 186, 197, 216, 218, 220, 228, 237, 238, 246, 249, 250, 253, 256, 269, 274, 278, 339, 340, 349, 366, 367, 374, 378, 389, 390, 391, 393, 394, 395, 396, 449, 450, 483, 522, 558, 568, 570, 572], "likelihood": [295, 384, 387], "limit": [45, 52, 125, 126, 127, 129, 238, 244, 348, 436, 495], "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 451], "linear": [11, 16, 17, 18, 25, 26, 27, 65, 92, 100, 108, 113, 120, 124, 133, 139, 140, 141, 142, 143, 144, 145, 173, 215, 216, 252, 253, 254, 256, 258, 259, 261, 262, 263, 279, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 364, 366, 368, 369, 370, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 394, 397, 405, 406, 407, 408, 409, 410, 414, 416, 418, 424, 452, 454, 481, 572], "linearli": 385, "linguist": 218, "linspac": 489, "linspace_tensor": 484, "list": [0, 1, 16, 31, 40, 41, 55, 65, 70, 71, 72, 79, 92, 100, 109, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 155, 166, 173, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 225, 226, 236, 239, 242, 243, 249, 251, 252, 253, 254, 255, 301, 331, 379, 397, 423, 425, 426, 427, 428, 429, 430, 431, 432, 455, 458, 459, 460, 462, 464, 476, 478, 479, 480, 482, 483, 485, 486, 487, 488, 520, 526, 532, 533, 542, 545, 546, 554, 557], "listdir": 3, "liter": [14, 65, 155, 215, 228, 249, 251, 289, 290, 291, 292, 294, 295, 317, 321, 324, 325, 326, 327, 328, 329, 331, 335, 336, 358, 359, 360, 361, 362, 363, 382, 383, 384, 385, 386, 387, 420, 426, 431, 447, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 525, 537, 544], "liu": 108, "ln": [346, 474], "load": [3, 4, 5, 6, 7, 8, 220, 238, 239, 249, 250, 251, 423, 428, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 572], "load_state_dict": [220, 221, 250, 423, 428, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 572], "loadabl": 572, "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 69, 70, 71, 72, 108, 113, 132, 134, 137, 188, 189, 190, 191, 192, 193, 218, 224, 239, 276, 358, 364, 426, 572], "locat": [108, 239, 317, 321, 544], "log": [189, 215, 230, 239, 242, 295, 382, 383, 384, 387, 425, 426, 427, 428, 429, 430, 431, 432, 489, 504, 525], "log2": 489, "log_2": [226, 504], "log_softmax": 387, "logarithm": [474, 501, 503, 504], "logic": [3, 221, 399, 400, 401, 422, 423, 502], "logit": [29, 40, 213, 242, 265, 290, 351, 383, 384, 448], "logsoftmax": [384, 387], "logvar": 215, "long": [31, 92, 113, 135, 245, 316, 441, 520], "look": [222, 236, 237], "lookup": [319, 412], "loop": [1, 13, 14, 15, 16, 253, 374, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "loss": [16, 25, 216, 237, 238, 252, 253, 254, 255, 256, 265, 289, 290, 291, 292, 294, 295, 316, 341, 342, 345, 347, 349, 350, 351, 353, 366, 369, 370, 371, 372, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 544, 549], "loss_fn": 383, "lost": 378, "low": [105, 120, 125, 126, 129, 459, 462], "lower": [18, 65, 68, 119, 220, 338, 364, 415, 416, 417, 418, 426, 435, 443, 444, 445, 462, 495, 533, 550, 551], "lower_triangular": 550, "lowest": 459, "lp": 302, "lr": [16, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "lr_lambda": 429, "lr_schedul": 433, "lrschedul": 433, "ls_init_valu": 100, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456, 489, 535, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571], "m": [89, 108, 200, 217, 233, 243, 244, 245, 252, 253, 256, 298, 355, 393, 406, 407, 409, 410, 414, 415, 418, 430, 438, 439, 440, 441, 442, 476, 481, 550, 551], "m1": 16, "m2": 16, "m3": 16, "m_": [438, 439, 440, 441, 442, 550, 551], "m_m": 416, "m_t": [416, 441, 442], "maaten": 108, "mac": 16, "machin": [3, 7, 8, 25, 108, 218, 222, 246, 330, 414, 438, 450, 461], "magnitud": [279, 319, 412, 443, 444, 568], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 129, 215, 216, 220, 253, 255, 302, 323, 368, 374, 385, 424, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 463, 527, 552, 562, 568, 570, 572], "main": [26, 105, 253, 478, 481, 529, 550, 551], "maintain": [25, 31, 41, 46, 55, 64, 66, 70, 71, 72, 88, 89, 90, 91, 92, 93, 103, 108, 116, 119, 136, 137, 138, 140, 141, 142, 143, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 189, 225, 229, 241, 249, 250, 252, 253, 254, 256, 263, 279, 335, 336, 339, 340, 341, 342, 349, 366, 368, 369, 370, 371, 372, 389, 390, 391, 394, 395, 396, 438, 443, 559, 562, 566], "major": [16, 454], "make": [1, 3, 10, 31, 43, 44, 47, 48, 65, 96, 105, 108, 109, 118, 120, 122, 124, 125, 126, 128, 129, 131, 134, 143, 155, 190, 191, 192, 193, 194, 198, 199, 206, 209, 215, 218, 236, 237, 238, 253, 256, 350, 384, 385, 397, 406, 409, 422, 437, 438, 439, 440, 450, 452, 463, 469, 537, 545, 557, 568, 570], "manag": [250, 252, 253, 254, 255, 256, 422, 434, 448, 449, 451, 452, 463, 572], "manhattan": 24, "mani": [65, 572], "manipul": [10, 13, 252, 254, 568], "manner": [10, 13, 14, 188, 253, 256, 447], "manual": [10, 215, 289, 290, 291, 295, 364, 382, 383, 384, 387, 572], "map": [13, 15, 65, 67, 100, 108, 113, 153, 154, 155, 166, 176, 183, 215, 219, 222, 223, 225, 226, 227, 242, 244, 250, 264, 266, 273, 278, 297, 317, 330, 350, 353, 362, 368, 374, 392, 412, 448, 527, 544], "mark": [536, 569], "markovian": 217, "marri": 108, "mask": [108, 249, 268, 355, 356, 366, 369, 370, 371, 372, 414, 415, 416, 417, 418, 536, 550, 551, 556], "masked_fil": 535, "match": [10, 11, 15, 16, 27, 55, 92, 216, 220, 221, 227, 234, 237, 238, 244, 250, 253, 256, 268, 272, 274, 289, 290, 292, 294, 301, 306, 308, 324, 325, 326, 367, 404, 412, 423, 476, 483, 501, 526, 541, 542, 545, 548, 554, 560, 568, 572], "math": [355, 496, 511, 517], "mathbb": [216, 236, 239, 242, 355, 545], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 211, 216, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 286, 288, 316, 321, 327, 328, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 467, 468, 469, 473, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 528, 534, 539, 540, 541, 542, 546, 547, 548, 550, 551, 552, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566], "mathcal": [215, 216, 236, 239, 242, 335, 337, 339, 366, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 525], "mathemat": [16, 22, 324, 325, 326, 561, 563, 564, 565], "mathrm": [25, 499, 500, 509], "matmul": [364, 476, 489], "matplotlib": 569, "matric": [17, 19, 20, 22, 25, 27, 28, 316, 355, 418, 467, 468, 469, 481, 537, 550, 551], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 276, 286, 316, 319, 364, 379, 380, 412, 422, 467, 476, 516, 537], "matrix_pow": 21, "matthew": 108, "max": [10, 24, 65, 173, 200, 262, 302, 306, 307, 308, 313, 314, 315, 319, 322, 343, 344, 347, 348, 383, 402, 403, 404, 408, 409, 410, 412, 425, 426, 431, 440, 470, 489, 495, 531], "max_box": 228, "max_lr": 426, "max_norm": [319, 412], "max_pool": [408, 409, 410], "max_pool1d": [285, 312], "max_pool2d": [285, 312], "max_pool3d": [285, 312], "max_valu": 495, "maxim": [3, 49, 130], "maximum": [24, 118, 222, 224, 228, 234, 239, 242, 322, 347, 348, 408, 409, 410, 425, 426, 438, 440, 489, 495, 505, 531, 564], "maxpool": [29, 213], "maxpool1d": [376, 411], "maxpool1dmodel": 408, "maxpool2d": [253, 256, 359, 376, 411], "maxpool2dmodel": 409, "maxpool3d": [360, 376, 411], "maxpool3dmodel": 410, "maxvit": [114, 115, 116, 117, 118], "maxvit_bas": 108, "maxvit_larg": [108, 115], "maxvit_smal": 108, "maxvit_tini": [108, 116], "maxvit_xlarg": 108, "mb": 571, "mbconv": 113, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 153, 154, 215, 223, 224, 227, 236, 249, 263, 269, 270, 271, 277, 289, 290, 291, 292, 294, 295, 296, 298, 300, 324, 325, 326, 337, 341, 342, 343, 345, 347, 349, 350, 353, 360, 366, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 431, 438, 439, 440, 441, 442, 443, 449, 460, 489, 495, 501, 503, 504, 505, 507, 511, 513, 515, 519, 520, 521, 557, 560, 568], "meaning": [14, 256], "meant": 234, "measur": [382, 384, 386, 387], "mechan": [31, 55, 65, 69, 70, 71, 72, 92, 108, 113, 133, 134, 135, 136, 137, 142, 153, 154, 173, 183, 187, 189, 190, 191, 192, 193, 194, 197, 198, 205, 219, 245, 246, 255, 286, 355, 527], "media": 108, "medic": [274, 363], "medium": [48, 52, 56, 89, 108, 127, 128, 131, 136, 242, 243], "meet": [108, 402], "mem_is_caus": [415, 416], "mem_key_padding_mask": [414, 415, 416], "mem_mask": [414, 415, 416], "member": 572, "membership": 382, "memori": [2, 3, 16, 66, 73, 142, 414, 415, 416, 451, 479, 480], "merg": [13, 65, 67, 68, 108, 224, 228, 374], "mergesort": [525, 544], "meshgrid": 535, "meta": 572, "metablock": 92, "metal": [447, 464], "method": [3, 10, 14, 16, 17, 22, 79, 173, 211, 212, 219, 237, 238, 252, 253, 254, 255, 256, 289, 290, 291, 292, 294, 295, 317, 335, 336, 339, 340, 382, 383, 384, 385, 386, 387, 420, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 463], "metric": [431, 571], "mha": 355, "mid": [94, 103, 209], "mid_channel": [125, 126], "middl": [114, 115, 450], "might": 422, "migrat": 16, "mileston": 430, "mimic": [68, 483], "min": [343, 344, 348, 425, 426, 431, 471, 489, 495, 531], "min_lr": 431, "min_siz": 228, "min_valu": 495, "mind": [0, 3, 253, 256, 451, 509], "mingx": 108, "mini": [1, 298, 393], "minibackbon": 223, "minim": [4, 101, 108, 121, 256, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 434], "minima": 426, "minimalist": 16, "minimum": [228, 229, 425, 426, 431, 489, 495, 507, 531], "minu": 350, "mirror": [486, 488], "mish": [354, 376], "mismatch": [10, 13, 15, 79, 113, 220, 221, 250, 374, 422, 423, 572], "miss": [250, 422, 454, 572], "mitig": [65, 261, 341, 345, 349, 389, 390, 391], "mix": [100, 448, 451], "mixer": 100, "mlp": [16, 55, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 331], "mlp_dim": 205, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189], "mlx": [118, 447, 464, 482, 525], "mnist": [4, 7, 9, 110, 111, 571], "mnist_train": [4, 8], "mobil": [92, 93, 108, 119, 120, 121, 122, 124, 125, 126, 129, 139], "mobilenet": [120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 348], "mobilenet_v2": 108, "mobilenet_v2_weight": 571, "mobilenet_v3": [125, 126], "mobilenet_v3_larg": 108, "mobilenet_v3_large_weight": 571, "mobilenet_v3_smal": 108, "mobilenet_v3_small_weight": 571, "mobilenet_v4": [127, 128, 129, 130, 131], "mobilenet_v4_conv_larg": 108, "mobilenet_v4_conv_medium": 108, "mobilenet_v4_conv_smal": 108, "mobilenet_v4_hybrid_larg": 108, "mobilenet_v4_hybrid_medium": 108, "mobilenetv2": [108, 120], "mobilenetv3": [108, 121, 125, 126], "mode": [16, 92, 283, 296, 300, 316, 317, 321, 335, 336, 366, 368, 369, 370, 371, 372, 420, 426, 431, 464, 539], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 268, 272, 273, 278, 319, 323, 324, 325, 326, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 363, 364, 366, 368, 369, 370, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451, 452, 453, 454, 463, 494, 557, 558, 568, 569, 570], "model_b0": 78, "model_b7": 78, "model_tini": 100, "moder": [44, 48, 104, 128, 143, 177], "modern": [16, 40, 41, 100, 108], "modif": [212, 256], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 127, 155, 211, 214, 252, 253, 254, 255, 333, 335, 336, 337, 338, 339, 340, 366, 424, 449, 461, 464, 525, 534, 536, 543, 552, 555], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 78, 79, 92, 93, 94, 95, 96, 99, 100, 105, 106, 107, 108, 109, 113, 119, 120, 121, 122, 131, 132, 133, 155, 166, 173, 183, 188, 189, 200, 211, 213, 214, 216, 219, 223, 224, 225, 226, 227, 228, 239, 240, 241, 242, 243, 246, 249, 251, 252, 253, 254, 255, 256, 279, 324, 325, 326, 327, 328, 329, 330, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 453, 454, 463, 558, 568, 570, 571, 572], "modular": [3, 16, 215, 216, 218, 246, 250, 253, 256, 422, 568], "moduledict": [253, 254, 256, 257], "modulelist": [255, 256, 257], "moment": [438, 439, 440, 441, 442], "momentum": [296, 300, 324, 325, 326, 389, 390, 391, 394, 395, 396, 426, 435, 441, 443, 445], "momentum_decai": 441, "monitor": 431, "monoton": [346, 352], "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 65, 72, 114, 115, 116, 135, 136, 137, 141, 155, 162, 195, 196, 198, 199, 220, 223, 239, 244, 248, 252, 253, 256, 278, 322, 327, 328, 329, 341, 369, 370, 371, 372, 383, 414, 422, 423, 434, 435, 436, 439, 440, 443, 444, 445, 460, 469, 476, 519, 547, 550, 551, 568, 570], "most": [17, 47, 95, 108, 134, 218, 236, 409, 558, 559, 568], "mostli": 509, "move": [16, 435, 443, 572], "mse": [215, 216, 292, 294, 385, 386], "mse_loss": [16, 285, 293], "mseloss": [376, 388], "mu": [31, 215, 337, 389, 390, 391, 394, 395, 396, 397, 521], "mu_c": 560, "mu_g": [298, 393], "mu_i": [394, 395, 396], "much": [134, 568], "mul": 472, "multi": [3, 4, 11, 55, 57, 59, 61, 70, 71, 72, 100, 106, 108, 113, 132, 133, 138, 139, 140, 141, 143, 144, 145, 183, 184, 185, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 205, 225, 228, 239, 246, 265, 268, 291, 295, 331, 351, 355, 384, 387, 414, 416, 418, 448, 464, 506, 515, 521], "multi_conv": [55, 57, 59, 61], "multidimension": [458, 462, 479], "multiheadattent": [357, 376], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 65, 155, 173, 187, 215, 218, 226, 237, 254, 255, 256, 276, 321, 323, 330, 331, 355, 364, 366, 369, 370, 371, 372, 374, 384, 387, 415, 417, 422, 424, 427, 431, 450, 455, 458, 459, 460, 462, 467, 472, 476, 479, 480, 516, 527, 545, 552, 557, 562, 568], "multipli": [23, 123, 239, 255, 288, 380, 420, 430, 431, 432, 444, 473, 489, 504], "multiscaleroialign": 232, "multisteplr": 433, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 92, 215, 216, 220, 221, 227, 234, 239, 250, 252, 253, 254, 255, 256, 272, 279, 298, 301, 322, 355, 366, 368, 369, 370, 371, 372, 383, 387, 393, 412, 414, 416, 418, 420, 423, 428, 453, 454, 455, 519, 526, 527, 528, 534, 536, 539, 541, 542, 545, 547, 548, 550, 551, 555, 559, 560, 561, 562, 563, 565, 572], "mx": [447, 464], "my_checkpoint": 572, "my_simple_model": 452, "my_state_dict": 572, "mymodel": [250, 251, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "myoptim": [423, 434], "n": [13, 23, 24, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 215, 216, 217, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 245, 252, 253, 256, 268, 269, 270, 271, 272, 273, 274, 276, 278, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 323, 324, 325, 326, 330, 335, 337, 339, 355, 356, 358, 359, 360, 361, 362, 363, 364, 371, 372, 377, 380, 382, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 457, 476, 481, 499, 500, 506, 509, 519, 521, 525, 533, 538, 572], "n1": 24, "nabla": [499, 500, 552], "nabla_": [436, 437, 438, 439, 440, 441, 442, 444], "nabla_t": 442, "nadam": 446, "nair": [5, 6], "name": [10, 13, 14, 15, 108, 217, 222, 245, 250, 252, 254, 256, 374, 452, 454, 571, 572], "nan": [26, 28], "nano": [51, 108], "narrow": 238, "natur": [25, 358, 377, 405, 408, 414, 474, 501, 502, 503], "ndarrai": [16, 249, 251, 455, 464, 478, 480, 483, 486, 488, 522], "ndim": [26, 28, 251, 464], "ne": 23, "nearest": [317, 321, 420, 502, 509], "nearli": 464, "necessari": [4, 5, 6, 7, 8, 16, 25, 229, 534, 555], "need": [2, 4, 14, 15, 131, 219, 245, 253, 254, 255, 265, 272, 273, 322, 377, 383, 414, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 479, 480, 557, 558, 568], "neg": [23, 25, 28, 258, 295, 322, 323, 341, 345, 347, 349, 384, 387, 444, 499, 500, 509, 525, 528, 529, 556], "negative_slop": [261, 345], "neglect": 255, "neighbor": [317, 321], "neq": [24, 499], "nest": [253, 256, 422, 448, 451], "nesterov": 441, "net": [108, 213, 216, 220, 221, 223, 224], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 65, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 105, 108, 112, 119, 122, 123, 127, 130, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 178, 183, 200, 205, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 239, 246, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 269, 270, 271, 273, 278, 279, 286, 288, 296, 317, 323, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 372, 374, 377, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 394, 397, 405, 406, 407, 408, 409, 410, 412, 414, 416, 418, 422, 423, 434, 435, 443, 445, 462, 463, 464, 477, 485, 487, 505, 507, 539, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 78, 80, 81, 82, 83, 84, 85, 86, 87, 105, 108, 112, 214, 216, 217, 218, 219, 223, 224, 239, 245, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 269, 270, 271, 279, 286, 288, 296, 323, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 366, 367, 368, 369, 370, 371, 372, 374, 377, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 394, 397, 405, 406, 407, 408, 409, 410, 412, 422, 423, 434, 435, 443, 445, 462, 463, 464, 477, 485, 487, 505, 507, 539, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570], "neuralnetwork": [343, 344, 346, 347, 352], "neurip": 217, "neuron": 345, "never": [525, 562], "new": [11, 15, 108, 216, 218, 231, 250, 251, 258, 259, 261, 262, 263, 264, 266, 286, 288, 321, 322, 331, 335, 336, 337, 338, 339, 340, 423, 428, 431, 451, 452, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 483, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 522, 526, 528, 534, 536, 539, 541, 542, 543, 547, 548, 550, 551, 554, 555, 556], "new_box": 229, "new_tensor": 516, "next": [215, 256, 557], "nll": 295, "nll_loss": [285, 293], "nllloss": [376, 388], "nlp": [218, 319, 412], "nm": [221, 224, 228, 232, 239, 242], "nms_iou_thresh": 224, "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 73, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 132, 133, 139, 140, 141, 143, 144, 145, 155, 166, 173, 179, 180, 181, 182, 183, 187, 188, 189, 200, 213, 215, 216, 219, 221, 223, 224, 225, 226, 227, 228, 236, 239, 240, 241, 242, 243, 257, 260, 267, 275, 284, 287, 293, 299, 312, 318, 320, 332, 334, 354, 357, 365, 373, 375, 376, 381, 388, 398, 411, 413, 419, 421, 423, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 454, 558, 568, 569, 572], "no_grad": [16, 216, 449], "node": [16, 464], "nois": [28, 217, 463], "non": [20, 23, 25, 28, 108, 113, 222, 224, 228, 234, 239, 242, 255, 259, 261, 262, 316, 322, 335, 336, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 366, 369, 370, 371, 372, 414, 415, 416, 417, 418, 438, 439, 457, 474, 476, 494, 495, 502, 509, 538, 553], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 16, 24, 31, 55, 65, 69, 78, 79, 92, 96, 100, 105, 109, 119, 120, 121, 122, 132, 133, 146, 155, 188, 189, 211, 215, 216, 223, 225, 226, 227, 228, 236, 239, 242, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 279, 286, 288, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301, 319, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 453, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 531, 532, 534, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 569, 571], "nonzero": 535, "noobj": [236, 239, 242], "norm": [17, 21, 55, 65, 69, 92, 113, 116, 117, 132, 133, 188, 189, 302, 319, 393, 412, 415, 417, 440, 570], "norm_first": [414, 416, 418], "norm_lay": [55, 69, 92, 113, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189], "norm_layer_cl": 92, "norm_layer_tf": 113, "norm_typ": [319, 412], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 69, 92, 108, 113, 132, 133, 139, 140, 141, 143, 144, 145, 173, 188, 189, 194, 195, 196, 197, 198, 199, 223, 224, 236, 237, 238, 239, 259, 263, 265, 266, 278, 296, 297, 298, 300, 301, 316, 317, 319, 324, 325, 326, 334, 335, 339, 342, 349, 351, 366, 389, 390, 391, 392, 393, 394, 395, 396, 397, 412, 414, 415, 416, 417, 418, 443, 460, 463, 531, 532, 533, 557, 567, 568], "normalized_shap": [301, 397], "notat": [10, 11, 13, 14, 15, 374], "note": [269, 366], "notebook": 570, "noth": [277, 280, 281, 282], "notimplementederror": [2, 250, 423], "notin": 495, "nov": 108, "novel": [7, 108, 113, 218], "now": [16, 221, 572], "np": [155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 249, 251, 330, 384, 387, 412, 447, 457, 464, 469, 476, 477, 478, 481, 485, 487, 488, 516, 522, 558], "npy": [5, 6, 7, 8], "num": [415, 417, 484], "num_anchor": [239, 240, 241], "num_block": [31, 65], "num_box": [236, 237, 238], "num_channel": 393, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 236, 237, 238, 239, 240, 241, 242, 243, 244, 322, 351, 384, 387, 572], "num_decoder_lay": [246, 414], "num_embed": [319, 412], "num_encoder_lay": [246, 414], "num_featur": [256, 324, 325, 326, 389, 390, 391, 394, 395, 396], "num_group": [298, 393], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 246, 355, 414, 415, 416, 417, 418], "num_init_featur": [73, 74, 75, 76, 77], "num_lay": [205, 415, 417], "num_paramet": 255, "num_stag": 133, "num_vit": [92, 93, 94, 95], "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 227, 228, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 251, 253, 255, 256, 268, 269, 270, 271, 272, 273, 274, 276, 281, 282, 283, 286, 288, 291, 295, 296, 297, 298, 300, 303, 304, 305, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 350, 355, 358, 359, 360, 361, 362, 363, 364, 374, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 425, 426, 430, 431, 432, 435, 447, 457, 458, 461, 462, 464, 474, 477, 479, 481, 484, 505, 506, 507, 509, 520, 521, 523, 524, 527, 528, 531, 532, 533, 534, 538, 539, 541, 542, 543, 546, 548, 549, 555, 560, 562, 563, 565, 568], "numer": [14, 22, 25, 229, 278, 289, 290, 291, 296, 297, 298, 300, 301, 302, 322, 324, 325, 326, 348, 367, 382, 383, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 414, 416, 418, 436, 437, 438, 439, 440, 441, 442, 443, 457, 464, 466, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 522, 558], "numpi": [16, 249, 251, 384, 387, 447, 453, 454, 457, 464, 469, 482, 516, 519, 526, 539, 541, 548, 558, 568], "o": [3, 239, 243, 244, 245, 355, 407, 410, 485, 486, 525], "obei": 572, "obj": [236, 239, 242, 454], "objdet": [225, 226, 227, 228, 229, 230, 231, 233, 234, 236], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "observ": 438, "obtain": [1, 113, 215], "occur": [15, 323, 448, 451, 452, 528], "occurr": 23, "odot": [366, 369, 370, 371, 372], "off": [44, 128, 238, 449], "offer": [4, 10, 41, 42, 44, 54, 72, 94, 103, 114, 115, 118, 128, 136, 137, 139, 141, 206, 220, 422, 434, 463, 525, 568], "offici": 244, "offset": [229, 230, 239, 242, 481, 529], "often": [23, 164, 165, 269, 270, 271, 273, 274, 276, 317, 319, 361, 367, 384, 387, 477, 487, 558, 562, 566, 568], "old": 431, "older": 441, "onc": [219, 221, 222, 223, 236, 237], "one": [0, 11, 14, 108, 179, 180, 181, 182, 187, 218, 222, 236, 239, 242, 255, 256, 265, 269, 272, 288, 309, 313, 322, 324, 325, 326, 349, 350, 351, 358, 361, 370, 384, 387, 389, 394, 405, 408, 420, 423, 448, 450, 451, 454, 460, 475, 482, 483, 486, 505, 507, 529, 530, 540, 547, 552, 558, 572], "one_hot": [285, 320], "ones": [16, 286, 288, 298, 307, 308, 358, 359, 360, 380, 389, 390, 391, 394, 395, 396, 397, 403, 404, 422, 481, 482, 486, 489, 527], "ones_lik": 489, "onli": [65, 222, 236, 237, 316, 317, 321, 322, 343, 347, 366, 367, 369, 370, 371, 372, 382, 383, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 408, 409, 410, 444, 448, 449, 454, 477, 495, 505, 507, 516, 519, 525, 529, 539, 540, 542, 543, 546, 549, 550, 551], "onto": [26, 28, 223], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 113, 142, 153, 154, 173, 174, 175, 176, 177, 178, 223, 249, 250, 253, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 276, 279, 283, 286, 288, 303, 304, 305, 309, 310, 311, 313, 314, 315, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 356, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 422, 448, 449, 450, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 479, 480, 485, 487, 499, 500, 501, 503, 504, 505, 506, 507, 509, 511, 513, 515, 516, 519, 521, 528, 534, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 558, 560, 566, 569, 570], "operand": 464, "operatornam": [23, 25, 355, 414, 415, 416, 417, 418, 457, 523, 524, 525], "opposit": [435, 543], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 65, 73, 79, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 120, 121, 125, 126, 128, 129, 130, 131, 134, 194, 195, 221, 237, 244, 249, 251, 254, 255, 276, 358, 359, 360, 412, 422, 425, 426, 427, 428, 429, 430, 431, 432], "optimizer_st": [423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 345, 351, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 443, 445, 455, 457, 458, 459, 460, 462, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 495, 499, 500, 505, 506, 507, 509, 515, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 537, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 558, 562, 563, 565, 569], "ord": [24, 302], "order": [1, 3, 10, 16, 24, 28, 252, 253, 254, 255, 256, 457, 476, 520, 525, 544, 549, 553, 557], "ordered_dict": 256, "ordereddict": [250, 252, 253, 256, 453, 454], "organ": [55, 252, 253, 254, 256, 452], "orient": 568, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 66, 68, 98, 108, 112, 188, 189, 199, 215, 216, 217, 223, 224, 236, 237, 238, 240, 241, 243, 277, 323, 330, 353, 378, 448, 494, 502, 525, 527, 539, 540, 541, 542, 543, 544, 548, 549, 553, 554, 566], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [435, 443, 445], "other": [2, 3, 22, 57, 59, 61, 98, 107, 108, 109, 112, 128, 132, 216, 223, 249, 250, 253, 256, 335, 336, 366, 367, 378, 422, 423, 449, 463, 477, 479, 485, 487, 519, 537, 549, 568], "otherwis": [156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 215, 221, 239, 258, 261, 262, 263, 265, 279, 298, 322, 341, 343, 344, 345, 347, 349, 351, 368, 369, 370, 371, 372, 385, 405, 406, 407, 408, 409, 410, 415, 417, 423, 444, 452, 470, 471, 505, 507, 523, 524, 536, 549, 550, 551, 553], "otim": [25, 286, 377], "out": [0, 3, 4, 10, 16, 224, 225, 226, 227, 240, 241, 243, 244, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 335, 336, 339, 340, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 374, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 416, 435, 457, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 528, 530, 534, 539, 540, 541, 542, 546, 547, 548, 550, 551, 554, 555, 556, 569], "out_channel": [65, 109, 121, 125, 126, 225, 253, 256, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 390, 391, 405, 406, 407, 408, 409, 410, 422], "out_featur": [252, 253, 256, 286, 288, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 359, 360, 366, 369, 370, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 394, 397, 405, 406, 407, 408, 409, 410], "outcom": [562, 563, 565], "outer": [11, 489], "outlier": [292, 385], "output": [0, 1, 2, 10, 11, 15, 16, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 237, 238, 240, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 286, 288, 302, 303, 304, 305, 306, 307, 308, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 450, 451, 455, 457, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 485, 487, 488, 494, 501, 502, 503, 504, 505, 506, 507, 509, 511, 513, 515, 516, 519, 520, 521, 525, 532, 536, 537, 538, 539, 541, 543, 545, 548, 552, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "output_height": 276, "output_lay": [253, 256], "output_pad": [272, 273, 274, 361, 362, 363], "output_s": [226, 227, 253, 303, 304, 305, 306, 307, 308, 399, 400, 401, 402, 403, 404], "output_width": 276, "output_with_norm": [319, 412], "output_with_pad": [319, 412], "outsid": [0, 368, 448], "over": [0, 1, 2, 3, 11, 14, 17, 120, 130, 153, 154, 183, 213, 215, 217, 219, 220, 223, 233, 234, 239, 250, 253, 255, 265, 298, 303, 304, 305, 306, 307, 308, 330, 351, 358, 359, 360, 361, 362, 363, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 424, 426, 432, 435, 436, 437, 438, 439, 458, 462, 476, 505, 506, 507, 515, 519, 521, 562, 563, 565], "overal": [211, 279], "overdetermin": 25, "overfit": [1, 29, 213, 280, 283, 367, 369, 370, 371, 372, 435, 438, 443, 445], "overhead": [108, 121, 330], "overlap": [108, 113, 224, 228, 234], "overli": 348, "overrid": [2, 3, 55, 116, 117, 128, 129, 130, 188, 189, 237, 238, 525], "overridden": [250, 423], "overshoot": 424, "overwrit": [252, 254], "own": [4, 16, 221, 252, 253, 254, 255, 269, 270, 271, 272, 273, 340, 422, 560, 572], "p": [24, 25, 78, 217, 236, 239, 242, 251, 254, 255, 277, 278, 279, 280, 281, 282, 283, 302, 319, 364, 366, 367, 369, 370, 371, 372, 405, 408, 409, 412, 562, 563, 565, 568], "p_": [239, 242], "p_d": [407, 410], "p_h": [364, 406, 407, 410], "p_i": 236, "p_w": [364, 406, 407, 410], "packag": [2, 3, 4, 10, 17, 218, 422, 434, 452, 461, 463, 558, 568, 570, 572], "pad": [109, 219, 223, 224, 253, 256, 269, 270, 271, 272, 273, 274, 276, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 317, 319, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 364, 390, 391, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 535, 569], "pad_after_dim1": 539, "pad_after_dim2": 539, "pad_before_dim1": 539, "pad_before_dim2": 539, "pad_width": 539, "padding_height": 276, "padding_idx": [319, 412], "padding_mod": 317, "padding_width": 276, "pair": 286, "panda": [16, 108], "pang": 108, "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 142], "paradigm": [67, 108], "parallel": [1, 3, 55, 108, 183, 245, 355], "param": [250, 251, 254, 255, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "param1": 250, "param_dict": 254, "param_group": [423, 434], "param_groups_setup": 423, "param_list": 255, "param_s": 452, "paramet": [0, 2, 16, 108, 110, 111, 112, 217, 222, 245, 250, 422, 423, 424, 434, 463, 568, 570, 571, 572], "parameter": 122, "parameterdict": 257, "parameterlist": 257, "parent": [16, 422, 464], "pars": 447, "part": [65, 108, 239, 242, 249, 250, 272, 340, 361, 362, 378, 412, 422, 449, 463, 477, 478, 481, 485, 486, 487, 488, 527, 529, 545, 550, 551, 558, 568], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 66, 67, 68, 108, 258, 259, 261, 262, 263, 264, 265, 266, 286, 288, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 366, 369, 370, 371, 372, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 528, 534, 536, 537, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 554, 555, 556], "particip": [16, 251, 558], "particular": [252, 254], "particularli": [25, 55, 57, 59, 61, 113, 120, 128, 167, 168, 169, 170, 171, 172, 220, 253, 254, 255, 256, 265, 278, 288, 324, 325, 326, 327, 328, 329, 351, 380, 383, 384, 387, 394, 395, 396, 397, 425, 439, 449, 452, 484, 502, 557], "partit": [68, 108, 113, 403, 494, 545], "pascal": [220, 221, 237, 238, 240, 241], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 213, 221, 222, 223, 224, 236, 239, 240, 241, 242, 243, 250, 251, 252, 253, 254, 255, 256, 316, 321, 324, 325, 326, 330, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422, 448, 464, 482, 483, 484, 506, 515, 519, 520, 521, 525, 528, 534, 540, 542, 546, 550, 551, 555, 558, 568, 572], "past": [435, 436, 438, 443], "patch": [55, 57, 59, 61, 108, 113, 132, 133, 188, 189, 205, 206, 207, 208, 209, 210, 224, 276, 364, 406], "patch_norm": [188, 189], "patch_siz": [55, 132, 133, 139, 140, 141, 142, 143, 144, 145, 188, 189, 205, 206, 207, 208, 209, 210], "path": [3, 5, 6, 7, 8, 40, 41, 55, 65, 66, 67, 92, 100, 113, 133, 279, 368, 453, 454], "pathlib": 454, "pathwai": 108, "patienc": 431, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 108, 218, 222, 262, 330, 347, 358, 359, 360, 374], "pedagog": 16, "penal": [435, 443, 445], "penalti": [436, 437, 438, 439, 440, 441, 442], "penros": 25, "per": [1, 13, 117, 121, 133, 139, 140, 141, 143, 144, 145, 167, 168, 169, 170, 171, 172, 184, 185, 186, 219, 222, 223, 224, 225, 228, 236, 237, 238, 239, 240, 241, 242, 243, 244, 268, 303, 307, 355, 364, 374, 383, 393, 394, 395, 396, 397, 399, 404, 418, 426, 526, 572], "perceptron": 100, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 70, 71, 72, 79, 88, 89, 90, 91, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 121, 122, 123, 124, 128, 129, 130, 131, 134, 135, 136, 137, 139, 142, 163, 179, 180, 181, 182, 183, 189, 195, 196, 197, 200, 209, 213, 216, 218, 223, 226, 227, 238, 242, 248, 250, 251, 255, 259, 268, 269, 270, 271, 272, 273, 274, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 358, 359, 360, 361, 362, 364, 366, 369, 370, 371, 372, 374, 377, 379, 380, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 420, 423, 424, 428, 431, 448, 449, 461, 463, 465, 466, 469, 472, 475, 476, 499, 500, 501, 505, 507, 509, 515, 520, 526, 545, 556, 557, 559, 561, 566, 568], "period": 425, "permut": [13, 374, 456, 476, 520], "persist": [249, 455, 458, 459, 460, 462, 479, 480], "perturb": [20, 27, 28, 568], "phase": [31, 221], "phi": [259, 342], "pi": [259, 342, 425, 496, 511, 517], "pick": [317, 525], "pickl": [453, 454], "pico": [52, 108], "piecewis": [343, 344], "pil": [558, 568], "pinv": 21, "pioneer": 108, "pip": 16, "pipelin": [5, 6, 7, 8, 65, 221, 223, 224, 228, 233, 374, 463, 557, 558, 560], "pixel": [5, 6, 7, 8, 224, 228, 239, 242, 243, 316, 317, 321, 420, 560, 562], "pixel_scal": 224, "place": [219, 333, 335, 336, 337, 338, 339, 340, 457, 464, 509, 536, 543], "placehold": [250, 379], "placement": [16, 464], "plai": 463, "plane": 529, "platform": 447, "plot": [537, 569], "plt": 569, "plu": 322, "plug": 215, "point": [4, 227, 323, 383, 430, 448, 449], "pointer": 572, "pointwis": [327, 328, 329], "pool": [10, 29, 65, 92, 108, 109, 110, 111, 112, 113, 146, 155, 166, 173, 183, 200, 213, 219, 222, 223, 224, 226, 227, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 330, 331, 359, 360, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 505, 507], "pool1": 256, "pool2": 256, "pool_siz": [92, 219, 223], "poorli": 22, "pop": 239, "popul": 250, "popular": [4, 108], "portabl": 454, "portion": [527, 550, 551, 568], "pose": 25, "posit": [1, 18, 23, 31, 108, 188, 189, 205, 233, 236, 246, 250, 256, 268, 322, 323, 341, 345, 347, 349, 356, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 444, 450, 474, 499, 500, 527, 529, 536, 541, 544, 548, 549, 556, 561], "possibl": 568, "post": [234, 239], "posterior": 216, "potenti": [25, 379, 383, 443, 546], "power": [10, 16, 23, 51, 108, 118, 120, 125, 126, 133, 134, 136, 140, 143, 146, 194, 207, 330, 374, 424, 450, 489, 509, 557, 558, 568], "pp": [108, 222, 245], "practic": [25, 103, 238, 384, 387], "practition": 568, "pre": [31, 65, 88, 89, 90, 91, 108, 156, 160, 161, 221, 239, 242, 572], "pre_kernel_s": 65, "preactbottleneck": [156, 160, 161], "preced": [108, 251, 420], "precis": [144, 224, 447, 482, 509], "precomput": 223, "preconfigur": [80, 81, 82, 83, 84, 85, 86, 87, 106, 107, 117, 240, 243, 244], "pred": [16, 236, 237, 238, 242, 451], "predecessor": [41, 133], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 190, 191, 192, 193, 194, 196, 197, 198, 199, 206, 207, 208, 209, 210, 218, 239, 242, 253, 349, 412, 424, 447], "predict": [55, 108, 188, 190, 191, 192, 193, 211, 216, 218, 219, 222, 223, 224, 229, 234, 236, 243, 244, 382, 384, 386, 387], "prefer": 432, "prefix": [250, 452, 499, 500], "prepar": [3, 450, 539, 541, 548, 558, 568], "prepend": [250, 526], "preprint": [108, 222], "preprocess": [3, 4, 276, 323, 463, 509, 557, 558, 568, 572], "present": [382, 383, 384, 385, 387, 389, 390, 391, 393, 394, 395, 396, 397, 406], "preserv": [14, 65, 67, 108, 134, 227, 277, 279, 317, 323, 366, 368, 457, 477, 478, 481, 485, 486, 487, 488, 506, 515, 516, 521, 523, 524, 525, 527, 543, 553], "preset": [4, 114, 115, 116, 117], "pretrain": [220, 221, 572], "prevent": [1, 10, 16, 113, 229, 252, 253, 254, 255, 256, 268, 280, 283, 302, 348, 356, 367, 369, 370, 371, 372, 382, 384, 417, 418, 424, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 451], "previou": [108, 435, 444, 448, 451], "previous": [428, 438, 453], "primarili": 256, "principl": 108, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 447, 448, 449, 450, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 530, 534, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 572], "print_grad": 464, "prior": [215, 228, 448], "priorit": [125, 126, 130, 331, 343], "prob": [242, 455], "probabilist": [216, 217, 463], "probabl": [65, 78, 98, 132, 188, 189, 205, 219, 222, 223, 236, 237, 238, 239, 242, 246, 259, 265, 268, 277, 278, 279, 280, 281, 282, 283, 289, 342, 351, 355, 356, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 387, 414, 416, 418, 455, 531, 533, 562, 563, 565, 568], "problem": [25, 26, 28, 108, 222, 261, 322, 341, 345, 442], "proce": [220, 221], "proceed": [108, 222], "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 65, 106, 108, 113, 132, 153, 154, 155, 183, 188, 212, 213, 217, 219, 224, 234, 239, 244, 245, 255, 269, 270, 271, 300, 323, 324, 325, 326, 330, 331, 349, 353, 358, 360, 377, 389, 390, 391, 394, 395, 396, 397, 405, 407, 408, 410, 414, 415, 417, 435, 537, 558, 559, 560, 561, 566, 568], "prod": 298, "prod_": [216, 378, 499], "produc": [16, 29, 213, 219, 224, 303, 304, 305, 306, 307, 330, 358, 359, 360, 399, 400, 401, 402, 403, 448, 457, 461, 463], "product": [11, 26, 28, 132, 133, 268, 344, 346, 350, 352, 355, 356, 377, 397, 422, 467, 468, 472, 473, 476, 499], "profil": 448, "program": [449, 463], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "proj_drop_r": 92, "project": [26, 28, 55, 57, 59, 61, 69, 92, 113, 132, 133, 138, 139, 140, 141, 143, 144, 145, 188, 189, 223, 246, 355], "projector": 25, "promin": [405, 407, 408, 409, 410], "promis": 346, "promot": [256, 384, 387, 422], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 108, 233, 250, 256, 286, 288, 316, 321, 330, 361, 406, 407, 443, 444, 455, 467, 468, 469, 473, 476, 505, 507, 523, 524, 525, 527, 529, 537, 538, 539, 542, 544, 549, 552, 553, 554, 569, 570], "proper": [319, 527, 549], "properli": [0, 221, 237, 238, 255, 265, 351, 422, 424], "properti": [17, 19, 22, 23, 259, 263, 277, 342, 349, 366, 437, 442, 448, 454], "proport": [5, 6, 7, 8, 521], "proportion": 566, "propos": [142, 219, 222, 223, 224, 228, 236, 237], "proposal_gener": 223, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 96, 97, 98, 105, 108, 109, 122, 128, 131, 134, 136, 137, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 188, 189, 197, 200, 205, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 239, 242, 246, 250, 252, 253, 254, 255, 259, 268, 288, 298, 304, 305, 319, 323, 356, 374, 382, 383, 384, 385, 387, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 414, 415, 417, 420, 422, 423, 424, 428, 429, 434, 435, 436, 443, 445, 449, 454, 461, 463, 464, 469, 477, 486, 505, 507, 520, 522, 533, 541, 546, 548, 568, 569, 570], "pseudo": [22, 25], "purpos": [42, 47, 51, 239, 458, 462, 477, 485, 487], "pvt": [133, 134, 135, 136, 137, 138], "pvt_huge": 108, "pvt_larg": 108, "pvt_medium": 108, "pvt_small": 108, "pvt_tini": 108, "pvt_v2": [139, 140, 141, 142, 143, 144, 145], "pvt_v2_b0": 108, "pvt_v2_b1": 108, "pvt_v2_b2": [108, 142], "pvt_v2_b2_li": 108, "pvt_v2_b3": 108, "pvt_v2_b4": 108, "pvt_v2_b5": 108, "pvtv2": [108, 139, 140, 141, 142, 143, 144, 145], "pypi": 16, "pyramid": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 219, 220, 221, 225, 226], "python": [16, 447, 453, 454, 464, 482], "pytorch": [16, 522], "q": [26, 55, 108, 113, 133, 268, 355, 356, 418], "q_1": 55, "q_i": [31, 355], "qk": [31, 55, 113, 416, 418], "qk_scale": [55, 132, 133, 188, 189], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189], "qr": 21, "quad": [25, 55, 215, 216, 229, 239, 242, 319, 355, 361, 382, 383, 384, 385, 386, 387, 408, 409, 410, 415, 417, 465, 466, 470, 471, 472, 475, 550, 551, 559], "quadrat": [133, 142, 385], "qualifi": 431, "qualiti": 216, "qualnam": 571, "quanfu": 108, "quantiz": 227, "queri": [55, 69, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 268, 355, 356, 418], "quick": [448, 570], "quickli": 424, "quicksort": [525, 544], "quoc": 108, "quotient": 466, "r": [14, 15, 26, 31, 108, 220, 221, 228, 239, 316, 317, 355, 361, 362, 499, 500, 545, 562, 563, 564, 565], "r_t": 442, "radam": 446, "radix": [146, 147, 148, 149, 150, 151, 152, 153, 154, 525], "rais": [0, 1, 2, 11, 239, 250, 298, 322, 422, 423, 453, 474, 526], "rameswar": 108, "rand": [216, 236, 237, 238, 240, 241, 242, 243, 244, 456, 463, 569], "randint": [456, 463], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 213, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 268, 298, 327, 328, 329, 330, 331, 355, 356, 361, 362, 363, 374, 393, 414, 415, 416, 417, 418, 422, 456, 461, 463, 569, 572], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 211, 219, 220, 221, 223, 224, 225, 226, 227, 228, 242, 268, 327, 328, 329, 330, 331, 355, 368, 374, 393, 412, 414, 415, 416, 417, 418, 561, 562, 563, 564, 565, 568, 569], "random_integ": 463, "random_tensor": 463, "randomcrop": [567, 568], "randomgrayscal": [567, 568], "randomhorizontalflip": [567, 568], "randomli": [1, 277, 279, 280, 281, 282, 283, 323, 366, 369, 370, 371, 372, 457, 561, 562, 563, 564, 565, 568], "randomnoisedataset": [0, 1, 2], "randomrot": [567, 568], "randomverticalflip": 567, "rang": [0, 1, 16, 17, 31, 44, 53, 92, 94, 108, 113, 131, 135, 155, 163, 198, 221, 245, 255, 264, 266, 269, 270, 279, 291, 295, 316, 317, 340, 348, 350, 353, 368, 378, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 443, 445, 455, 457, 459, 484, 491, 492, 495, 531, 532, 533, 560, 564, 568], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 78, 79, 92, 100, 113, 132, 133, 188, 189, 220, 221, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "rather": [7, 13, 15, 242, 254, 255, 374, 383, 430, 439, 542], "ratio": [55, 65, 66, 68, 78, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 173, 188, 189, 219, 242, 330, 331, 566], "ravel": 535, "raw": [239, 242, 265, 290, 351, 383, 384, 453, 454, 464], "rceil": 494, "rcnn": [222, 224], "rcond": 25, "re": [16, 251, 572], "reach": [308, 403, 430], "readabl": [10, 16, 252, 253, 254, 256, 374, 422], "readi": [3, 179, 180, 181, 182, 187, 218, 237, 238, 246, 572], "real": [25, 28, 120, 222, 236, 237, 238, 244, 350], "realist": 218, "rearrang": [12, 276, 375, 376], "reassembl": 108, "recalibr": [108, 174, 176, 177, 179, 180, 181, 182, 330], "receiv": [408, 409, 410, 539, 549, 550, 551], "recent": 443, "recept": [108, 113, 142, 183, 187, 331], "recip": 572, "reciproc": [25, 489, 503, 504, 513], "recogn": 55, "recognit": [108, 112, 136, 153, 154, 188, 190, 191, 192, 193, 199, 222, 359], "recommend": [16, 118, 383], "recon": 215, "recon_loss": 215, "reconstruct": [215, 216, 217, 229, 274, 544], "reconstruction_loss": 215, "recov": 217, "rectangular": 481, "rectif": 442, "rectifi": [261, 262, 345, 347, 442], "recurr": [245, 253, 397], "recurs": 250, "red": [562, 569], "redmon": [222, 236, 237], "reduc": [12, 29, 31, 65, 66, 67, 69, 92, 108, 119, 133, 142, 155, 166, 183, 200, 213, 221, 238, 241, 244, 307, 327, 328, 329, 330, 389, 390, 391, 394, 395, 396, 405, 406, 407, 408, 409, 410, 424, 427, 430, 431, 432, 441, 444, 451, 505, 506, 507, 515, 521, 523, 524, 562], "reducelronplateau": 433, "reduct": [10, 11, 14, 28, 78, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 173, 289, 290, 291, 292, 294, 295, 330, 331, 382, 383, 384, 385, 386, 387, 425, 431, 432, 476, 505, 507], "redund": [65, 68, 108, 223, 224], "reevalu": 423, "ref_box": 229, "refer": [4, 57, 59, 61, 142, 226, 229, 250, 361, 463, 478, 481, 483, 499, 500, 528, 572], "refin": [108, 197, 219, 424], "reflect": [135, 316, 317, 449], "regardless": [25, 540], "region": [219, 222, 223, 224, 226, 227, 228, 237, 271, 278, 303, 304, 305, 306, 307, 321, 343, 367, 400, 401, 404, 539, 559, 568], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 128, 164, 165, 167, 168, 169, 170, 171, 172, 212, 249, 250, 251, 255, 422, 452, 464], "register_buff": 249, "register_hook": 464, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 237, 238, 247, 248], "register_paramet": 250, "registr": [16, 250, 422], "registri": [167, 168, 169, 170, 171, 172, 452], "registry_path": 452, "regress": [4, 219, 222, 223, 224, 229, 230, 294, 385, 386], "regul": [319, 412], "regular": [25, 29, 40, 78, 79, 98, 188, 189, 213, 279, 283, 356, 367, 369, 370, 371, 372, 430, 432, 435, 436, 437, 440, 441, 442, 443, 445], "reimagin": 108, "rel": [31, 108, 188, 189, 219, 229, 236, 239, 242, 424, 431, 525], "relat": [454, 481, 485], "relationship": [31, 134, 136, 566], "releas": 570, "relev": [321, 435, 443, 445], "reli": [278, 453], "reliabl": [5, 6, 7, 8], "reliant": [369, 370, 371, 372], "reload": [221, 572], "relu": [16, 29, 65, 108, 173, 200, 213, 215, 219, 223, 224, 252, 253, 254, 256, 258, 260, 261, 285, 324, 325, 326, 330, 331, 335, 336, 339, 340, 341, 345, 348, 352, 354, 358, 359, 360, 361, 362, 363, 376, 377, 379, 380, 414, 416, 418], "relu1": 256, "relu2": 256, "relu3": 256, "relu6": [354, 376], "remain": [5, 6, 7, 8, 16, 53, 92, 95, 231, 249, 279, 301, 366, 368, 369, 370, 371, 372, 378, 412, 444], "rememb": 463, "remot": 572, "remov": [223, 224, 234, 452, 546, 552], "ren": 222, "render": 570, "reorder": [10, 13, 374, 516, 543], "rep": 548, "reparameter": 215, "repeat": [11, 12, 535, 537, 548], "repetit": [10, 15, 457, 541, 548], "replac": [7, 57, 59, 61, 66, 219, 223, 238, 245, 414, 463, 536, 562, 572], "replic": [15, 16, 364, 415, 417, 526], "repr": 447, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 70, 71, 72, 109, 122, 132, 138, 147, 148, 149, 150, 151, 152, 229, 231, 233, 234, 239, 250, 251, 256, 286, 288, 296, 300, 301, 316, 319, 322, 358, 359, 360, 374, 377, 380, 384, 387, 397, 412, 415, 423, 432, 434, 435, 441, 442, 443, 444, 445, 447, 453, 455, 465, 466, 472, 475, 478, 506, 519, 520, 521, 532, 533, 537, 538, 559, 561, 563, 564, 565, 566], "represent": [31, 67, 108, 116, 133, 134, 135, 136, 137, 140, 144, 145, 146, 153, 154, 164, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 187, 205, 217, 225, 246, 319, 330, 406, 409, 412, 423, 570], "reproduc": [455, 457, 458, 459, 460, 461, 462, 463, 568], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 65, 104, 117, 121, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 167, 168, 169, 170, 171, 172, 183, 208, 210, 216, 230, 237, 238, 248, 249, 252, 256, 258, 259, 261, 262, 263, 264, 266, 286, 288, 321, 330, 331, 340, 361, 379, 384, 387, 422, 430, 449, 451, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 516, 517, 518, 526, 528, 534, 536, 537, 539, 540, 541, 542, 546, 547, 548, 554, 555, 558, 559, 566, 569, 572], "requires_grad": [16, 239, 242, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 276, 286, 288, 298, 316, 317, 319, 321, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 420, 422, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 534, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 569], "rescal": [289, 290, 291, 295, 382, 383, 384, 387], "research": [16, 422], "resembl": 218, "reset": [251, 425, 461, 464], "reshap": [10, 13, 173, 288, 359, 360, 374, 378, 420, 450, 476, 516, 535, 540], "resid": [464, 572], "residu": [65, 66, 67, 68, 92, 99, 105, 106, 107, 108, 113, 120, 121, 124, 133, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 242, 416, 418], "residualblock": 155, "resili": 444, "resiz": [224, 226, 321, 557, 567, 568], "resnest": [147, 148, 149, 150, 151, 152, 153, 154], "resnest_101": 108, "resnest_14": 108, "resnest_200": 108, "resnest_26": 108, "resnest_269": 108, "resnest_50": 108, "resnest_50_1s4x24d": 108, "resnest_50_4s2x40d": 108, "resnet": [57, 59, 61, 65, 67, 105, 106, 107, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 183, 184, 185, 186, 220, 221, 222, 330, 572], "resnet_1001": 108, "resnet_101": 108, "resnet_101_weight": 571, "resnet_152": 108, "resnet_152_weight": 571, "resnet_18": [108, 572], "resnet_18_weight": [571, 572], "resnet_200": 108, "resnet_269": 108, "resnet_34": 108, "resnet_34_weight": 571, "resnet_50": [108, 221, 572], "resnet_50_weight": [571, 572], "resnet_arg": 183, "resnetbottleneck": 65, "resnext": [65, 68, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187], "resnext_101_32x16d": 108, "resnext_101_32x32d": 108, "resnext_101_32x4d": 108, "resnext_101_32x8d": 108, "resnext_101_32x8d_weight": 571, "resnext_101_64x4d": 108, "resnext_101_64x4d_weight": 571, "resnext_50_32x4d": 108, "resnext_50_32x4d_weight": 571, "resolut": [31, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 108, 113, 114, 115, 118, 133, 134, 142, 179, 180, 181, 182, 187, 189, 224, 225, 226, 240, 241, 243, 272, 273, 464, 572], "resolv": [13, 14, 15, 374, 447, 572], "resourc": [16, 45, 46, 48, 49, 52, 53, 101, 108, 121, 125, 126, 127, 128, 129, 130, 131, 208, 238, 244], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 109, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 230, 249, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 286, 288, 316, 321, 331, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 364, 366, 369, 370, 371, 372, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 426, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 495, 501, 503, 504, 505, 506, 507, 511, 513, 515, 519, 520, 521, 537, 539, 541, 548, 562], "respons": [108, 179, 180, 181, 182, 239, 242, 252, 297, 392, 434], "rest": [550, 551], "restor": [330, 428, 448, 451], "restructur": 542, "result": [10, 11, 13, 15, 18, 22, 23, 25, 65, 108, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 276, 286, 288, 303, 304, 305, 308, 309, 310, 311, 313, 314, 315, 316, 317, 321, 323, 331, 343, 348, 351, 355, 368, 374, 422, 423, 449, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 516, 517, 518, 519, 522, 528, 531, 533, 534, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 553, 554, 555, 558, 561, 562, 568], "resum": [425, 426, 427, 428, 429, 430, 431, 432, 434], "retain": [92, 108, 133, 238, 251, 278, 367, 464, 477, 482, 483, 487, 505, 506, 507, 515, 521, 523, 524, 527, 536, 550, 551, 558], "retent": 558, "rethink": 108, "retriev": [0, 2, 252, 254, 255, 319, 549], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 105, 109, 117, 118, 129, 131, 173, 219, 223, 224, 239, 242, 249, 250, 252, 253, 254, 255, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410, 415, 417, 422, 423, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 452, 557, 568, 572], "return_invers": 553, "reus": [108, 220, 223, 558], "reusabl": [256, 368, 422, 557], "rev": [361, 362], "revers": [16, 217, 256, 464, 520, 544, 563, 565], "revolution": 108, "rfloor": [364, 432, 502], "rgb": [5, 6, 31, 65, 69, 97, 98, 99, 106, 107, 117, 118, 132, 188, 189, 224, 236], "rho": 436, "rho_": 442, "rho_t": 442, "rich": [16, 144, 222, 225], "richer": 134, "right": [23, 24, 25, 27, 28, 31, 55, 113, 216, 226, 230, 236, 242, 259, 265, 302, 342, 351, 355, 364, 382, 383, 384, 385, 387, 389, 390, 391, 394, 395, 396, 397, 408, 409, 410, 416, 418, 516, 525, 529, 559, 569], "rightarrow": [13, 355, 374, 545], "rmsprop": 446, "rob": 108, "robust": [42, 47, 102, 129, 198, 199, 278, 323, 366, 369, 370, 371, 372, 385, 422, 436, 561, 562, 564, 568], "roi": [219, 222, 223, 226, 227], "roi_align": 227, "roi_cls_loss": 219, "roi_reg_loss": 219, "roialign": [223, 232], "roipool": 223, "roland": 7, "role": [463, 568], "roll": 535, "root": [4, 5, 6, 7, 8, 437, 443, 513, 569], "ross": [222, 224], "rotat": [285, 320, 564, 568], "rotated_imag": 323, "round": [489, 494, 502], "rout": [68, 408, 409, 410, 549], "route_lay": 239, "row": [19, 20, 22, 27, 227, 233, 288, 319, 481, 537, 538, 544, 550, 551, 555], "rpn": [219, 222], "rpn_cls_loss": 219, "rpn_reg_loss": 219, "rprop": 446, "rule": [15, 16, 22, 23, 363, 374, 450, 465, 466, 470, 471, 472, 474, 475, 482], "run": [16, 249, 296, 300, 324, 325, 326, 389, 390, 391, 394, 395, 396, 436, 448, 461, 463], "running_mean": [249, 296, 300, 389, 390, 391, 394, 395, 396], "running_var": [296, 300, 389, 390, 391, 394, 395, 396], "runtim": [11, 79, 253, 256, 368, 422, 484], "s_": 444, "s_0": 226, "s_1": [476, 545], "s_2": 545, "s_d": [407, 410], "s_h": [364, 406, 407, 410], "s_i": 545, "s_k": 476, "s_n": 545, "s_w": [364, 406, 407, 410], "sacrif": [108, 238], "safe": [448, 451], "safeguard": 302, "safetensor": 454, "sain": 108, "same": [19, 20, 22, 23, 27, 141, 215, 225, 230, 237, 238, 244, 265, 277, 278, 279, 280, 281, 282, 283, 296, 297, 298, 300, 301, 302, 304, 305, 323, 324, 325, 326, 327, 328, 329, 331, 348, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 379, 383, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 444, 447, 455, 461, 463, 469, 480, 483, 486, 488, 494, 499, 500, 501, 502, 505, 506, 507, 509, 516, 525, 528, 534, 536, 540, 542, 544, 546, 547, 550, 551, 553, 555, 560], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 88, 89, 90, 91, 97, 98, 99, 106, 107, 109, 110, 111, 112, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 179, 180, 181, 182, 187, 215, 216, 217, 226, 227, 303, 304, 305, 316, 317, 335, 336, 337, 338, 339, 340, 366, 369, 370, 371, 372, 377, 380, 384, 387, 397, 399, 400, 401, 455, 460, 463, 484, 533, 559, 561, 563, 564, 565, 566], "sample_timestep": 216, "sampling_ratio": [226, 227], "sandbox": 16, "sandler": 108, "satisfi": [18, 20, 27, 545], "satur": [341, 568], "save": [2, 220, 221, 249, 251, 423, 428, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 452, 453, 572], "scalabl": [3, 47, 78, 108, 167, 168, 169, 170, 171, 172, 189, 211, 422], "scalar": [16, 19, 24, 236, 289, 290, 291, 292, 294, 295, 383, 455, 464, 482, 483, 536], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 65, 70, 71, 72, 73, 78, 79, 92, 100, 106, 108, 110, 111, 112, 113, 114, 115, 118, 119, 123, 127, 128, 130, 131, 132, 133, 134, 138, 142, 145, 146, 153, 154, 156, 157, 158, 161, 174, 175, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 215, 219, 220, 223, 224, 225, 226, 227, 228, 230, 239, 243, 244, 258, 263, 265, 268, 279, 296, 297, 298, 300, 301, 319, 330, 331, 339, 340, 341, 343, 345, 349, 350, 351, 353, 355, 356, 366, 368, 369, 370, 371, 372, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 412, 420, 426, 429, 435, 437, 438, 439, 463, 521, 566], "scale_by_keep": [279, 368], "scale_factor": 420, "scale_fn": 426, "scaled_dot_product_attent": [267, 285], "scaleddotproductattent": [357, 376], "scenario": [45, 50, 52, 128, 129, 130, 131, 142, 254, 255, 397, 425, 426, 432, 439, 440, 558, 562], "schedul": [215, 216, 367, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435], "scientif": 450, "score": [155, 166, 183, 219, 223, 224, 234, 236, 239, 240, 241, 242, 243, 265, 268, 356, 383, 384, 476], "score_thresh": 224, "scratch": [16, 221], "script": 463, "sd": 572, "se": [78, 108, 174, 175, 176, 177, 178, 179, 180, 181, 182], "se_resnet_101": 108, "se_resnet_152": 108, "se_resnet_18": 108, "se_resnet_34": 108, "se_resnet_50": 108, "se_resnext_101_32x4d": 108, "se_resnext_101_32x8d": 108, "se_resnext_101_64x4d": 108, "se_resnext_50_32x4d": 108, "se_scal": 78, "seamless": [0, 1, 3, 4, 14, 374, 422, 463], "seamlessli": [3, 4, 10, 13, 15, 17, 251, 253, 256, 422, 568], "search": [108, 222, 224], "second": [20, 133, 144, 215, 253, 254, 286, 330, 377, 378, 438, 439, 440, 441, 442, 450, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 516, 529, 534, 537, 549, 565], "section": 469, "see": [16, 469], "seed": [455, 456, 457, 458, 459, 460, 462, 463, 568], "seek": [16, 131], "seen": 436, "segment": [108, 145, 194, 195, 196, 197, 198, 199, 222, 228, 273, 274, 362, 363], "select": [14, 15, 108, 183, 184, 185, 186, 187, 219, 222, 224, 226, 321, 330, 331, 408, 410, 426, 515, 525, 529, 549, 556], "selectivekernel": 332, "selectivesearch": 232, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 69, 70, 71, 72, 78, 79, 92, 96, 100, 105, 108, 109, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 173, 188, 189, 200, 205, 213, 216, 219, 223, 224, 227, 245, 246, 249, 250, 251, 252, 253, 254, 255, 263, 279, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 374, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 418, 422, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 452, 464, 536, 543, 557, 558], "selfattent": 418, "selu": [260, 277, 285, 354, 366, 376], "selunetwork": 349, "semant": [55, 66, 143, 222, 225, 362], "semodul": 332, "send": 65, "senet": [174, 175, 176, 177, 178, 179, 180, 181, 182], "sens": 218, "sensit": [216, 292, 385, 389, 390, 391], "sent": 67, "sentenc": 218, "sentiment": [4, 218], "separ": [0, 55, 92, 108, 119, 153, 154, 211, 220, 269, 270, 271, 273, 327, 328, 329, 394, 395, 396], "seq_len": [268, 355, 356, 414, 415, 416, 417, 418], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "sequenti": [29, 105, 109, 173, 200, 211, 213, 215, 219, 223, 224, 245, 252, 253, 257, 269, 324, 325, 326, 374, 379, 415, 417, 557, 568], "seri": [96, 110, 111, 113, 141, 143, 183, 269, 324, 358, 405, 408], "serial": [221, 249, 250, 434, 454], "serv": [3, 7, 16, 73, 105, 173, 200, 246, 250, 252, 253, 254, 255, 256, 422, 444, 464, 558], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95, 127, 128, 129, 134, 153, 154, 164, 165, 179, 180, 181, 182, 187, 215, 219, 220, 223, 229, 230, 233, 237, 238, 239, 240, 241, 242, 244, 251, 255, 268, 269, 270, 271, 273, 319, 322, 345, 347, 349, 356, 358, 359, 360, 366, 371, 372, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 412, 423, 438, 439, 443, 455, 458, 459, 460, 461, 462, 463, 477, 479, 480, 482, 483, 487, 488, 505, 507, 522, 523, 524, 525, 536, 550, 551, 553, 558, 562, 568, 572], "setup": [4, 116, 117, 167, 168, 169, 170, 171, 172, 221], "sever": [25, 217, 358, 359, 360, 405, 406, 407, 408, 409, 410, 557, 568], "sgd": [16, 221, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 442, 446], "sgn": 24, "shallow": 65, "shaoq": 222, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 100, 101, 102, 103, 104, 105, 108, 109, 113, 114, 115, 116, 117, 118, 121, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 422, 426, 450, 455, 457, 458, 459, 460, 462, 463, 464, 467, 476, 479, 480, 481, 482, 483, 485, 486, 487, 488, 494, 495, 499, 500, 502, 503, 504, 505, 506, 507, 509, 511, 513, 515, 516, 520, 521, 523, 524, 525, 526, 528, 530, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 550, 551, 553, 555, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 572], "shapelik": 459, "share": [55, 108, 222, 223, 224], "sharp": 426, "shen": 330, "shift": [108, 113, 188, 189, 190, 191, 192, 193, 194, 197, 198, 224, 296, 297, 300, 301, 343, 389, 390, 391, 392, 393, 394, 395, 396, 397, 543], "shortcut": 65, "shorthand": 469, "should": [13, 14, 15, 16, 92, 109, 215, 219, 220, 221, 236, 239, 242, 249, 316, 374, 414, 415, 416, 417, 418, 430, 455, 457, 458, 459, 460, 462, 464, 479, 480, 491, 492, 519, 526, 539, 557, 572], "show": [317, 449, 452, 569, 570], "shown": [55, 352, 461], "shrink": 436, "shuffl": [1, 2, 3, 457], "side": [27, 236, 253, 256, 269, 270, 271, 272, 273, 309, 310, 311, 313, 314, 315, 324, 325, 326, 358, 359, 360, 361, 362, 363, 364, 405, 406, 407, 408, 409, 410], "sigma": [25, 31, 215, 239, 242, 330, 335, 337, 339, 346, 350, 352, 383, 389, 390, 391, 394, 395, 396, 397, 520], "sigma_c": 560, "sigma_g": [298, 393], "sigma_i": 25, "sigma_t": 216, "sigmoid": [239, 242, 260, 285, 290, 330, 335, 336, 339, 340, 343, 344, 346, 352, 354, 376, 382, 383], "sigmoidnetwork": 350, "sign": [23, 385, 444, 489], "signal": [324, 358, 359, 360, 389, 394, 405, 406, 407, 408, 409, 410], "signific": 43, "significantli": [66, 67, 108, 118, 120, 142, 143, 144, 145, 166, 196, 241, 330, 557], "silicon": [16, 118, 447], "sim": [215, 216, 366, 369, 370, 371, 372], "similar": [10, 57, 59, 61, 218, 224, 241, 244, 335, 336, 469, 482, 516, 522, 526, 539, 552], "similarli": [28, 215, 519], "simonyan": 108, "simpl": [3, 4, 16, 216, 224, 256, 269, 270, 271, 272, 286, 288, 309, 310, 311, 313, 314, 315, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 358, 359, 360, 366, 369, 370, 371, 372, 377, 380, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 450, 467, 468, 473, 557], "simplebackbon": 219, "simplebinaryclassifi": 383, "simplebinaryclassificationmodel": 382, "simpleblock": 279, "simpleclassificationmodel": [384, 387], "simplegelumodel": 342, "simplehardsigmoidmodel": 343, "simplehardswishmodel": 344, "simpleleakyrelumodel": 345, "simplemishmodel": 346, "simplemodel": [348, 368, 380, 452], "simpleregressionmodel": 386, "simplerelumodel": 347, "simpleselumodel": 349, "simplesigmoidmodel": 350, "simpleswishmodel": 352, "simpletanhmodel": 353, "simpli": [16, 449, 519, 520, 542], "simplic": [108, 343, 347], "simplifi": [4, 13, 15, 88, 89, 90, 91, 92, 108, 110, 212, 238, 256, 324, 325, 326, 374, 383], "simul": 568, "simultan": [55, 323], "sin": [489, 496], "sinc": [23, 26, 252, 253, 254, 255, 269, 270, 271, 340, 449, 455, 460, 516, 537, 556, 568], "sine": [492, 511, 512], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 155, 222, 223, 237, 238, 265, 324, 325, 326, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 364, 378, 383, 384, 397, 406, 407, 408, 409, 410, 415, 416, 417, 418, 423, 448, 458, 462, 479, 484, 528, 546, 560, 562, 568], "singleton": [15, 397], "singular": [19, 22, 23, 25, 27, 28], "sinh": [489, 497, 518], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 100, 103, 108, 109, 110, 111, 112, 113, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 213, 216, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 253, 268, 269, 270, 271, 272, 273, 274, 276, 278, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 355, 358, 359, 360, 361, 362, 363, 364, 367, 374, 377, 380, 382, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 459, 462, 463, 464, 505, 506, 507, 515, 521, 523, 524, 526, 527, 528, 534, 545, 546, 554, 555, 559, 561, 566, 568, 571], "size_or_sect": 545, "sk": [108, 183, 184, 185, 186, 187, 331], "sk_resnet_18": 108, "sk_resnet_34": 108, "sk_resnet_50": 108, "sk_resnext_50_32x4d": 108, "skblock": 183, "skip": [108, 451], "sknet": [184, 185, 186, 187], "slice": [286, 464, 519, 525, 552, 553], "slide": [276, 364, 405, 407, 408, 410], "slight": 330, "slightli": [568, 572], "slope": [261, 341, 345], "slow": [3, 442], "small": [25, 44, 46, 48, 51, 63, 88, 89, 90, 91, 102, 103, 108, 110, 111, 112, 117, 121, 125, 126, 129, 137, 192, 193, 198, 199, 209, 210, 228, 242, 243, 261, 278, 289, 291, 296, 297, 298, 300, 301, 302, 345, 349, 367, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 406, 409, 414, 416, 418, 424, 436, 437, 438, 439, 440, 441, 442, 443, 444], "smallbackbon": 224, "smaller": [10, 45, 55, 57, 59, 61, 64, 72, 88, 89, 90, 91, 108, 127, 213, 224, 238, 253, 256, 422, 437, 438, 471, 525, 527, 559, 561, 566], "smallest": [494, 507, 549], "smooth": [98, 217, 225, 259, 341, 342, 346, 352, 427, 435, 443, 568], "smoother": [427, 435], "so": [252, 253, 254, 255, 323, 422, 442, 448, 451, 479, 480, 494, 502, 509, 557, 572], "softmax": [31, 55, 113, 260, 268, 285, 331, 354, 355, 356, 376, 384, 416, 418], "softmaxmodel": 351, "softplu": 346, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [238, 258, 279, 280, 323, 366, 368, 369, 370, 389, 390, 391, 394, 395, 396, 437, 438, 439, 527], "sometim": 450, "sophist": [253, 256], "sort": [16, 535, 549, 553], "sourc": [230, 246, 247, 248, 268, 414, 463], "sp": 346, "space": [20, 26, 28, 57, 59, 61, 113, 189, 215, 217, 246, 269, 270, 271, 272, 273, 274, 276, 303, 304, 305, 324, 325, 326, 327, 328, 329, 358, 359, 360, 361, 362, 363, 364, 399, 400, 401, 477, 484, 568], "span": 4, "spars": [437, 438], "spatial": [29, 31, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 166, 183, 194, 200, 213, 216, 219, 221, 223, 225, 226, 227, 231, 274, 278, 297, 307, 308, 316, 317, 325, 330, 359, 360, 361, 364, 378, 389, 390, 391, 394, 395, 396, 397, 403, 404, 406, 407, 408, 409, 410, 420, 494, 537], "spatial_dim": 330, "spatial_scal": [226, 227], "spatio": 360, "spec": 69, "special": [0, 1, 25, 249, 250, 251, 366, 463], "specif": [4, 11, 69, 74, 75, 76, 77, 88, 89, 90, 91, 105, 119, 127, 128, 129, 130, 131, 153, 154, 164, 165, 242, 252, 253, 254, 255, 256, 331, 340, 366, 369, 370, 371, 372, 394, 395, 396, 412, 422, 423, 430, 449, 463, 479, 505, 507, 536, 541, 548, 572], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 70, 71, 72, 73, 79, 109, 122, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 214, 253, 265, 276, 283, 289, 290, 291, 292, 294, 295, 301, 302, 303, 304, 305, 306, 307, 317, 319, 321, 322, 323, 330, 351, 355, 358, 359, 360, 361, 364, 374, 382, 383, 384, 385, 386, 387, 397, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 412, 420, 423, 426, 430, 447, 457, 458, 459, 460, 461, 462, 464, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 495, 499, 500, 505, 506, 507, 509, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 564, 566, 568, 569], "speech": [218, 394], "speed": [108, 125, 126, 221, 222, 237, 238, 343, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 451], "split": [4, 65, 67, 68, 108, 146, 153, 154, 215, 273, 355, 527, 528, 534, 535, 552, 555], "split_ratio": [65, 66, 67, 68], "split_siz": [236, 237, 238, 239], "split_tensor": 545, "springer": 108, "sqrt": [31, 55, 113, 216, 226, 236, 259, 268, 297, 298, 335, 336, 339, 340, 342, 355, 356, 389, 390, 391, 392, 393, 394, 395, 396, 397, 416, 418, 436, 437, 438, 439, 441, 442, 443, 489, 491, 492], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 215, 216, 278, 292, 294, 367, 385, 386, 436, 437, 438, 443, 489, 513], "squaredataset": [0, 1, 2, 3], "squeez": [78, 108, 121, 125, 126, 173, 176, 179, 180, 181, 182, 330, 535, 552], "sr_ratio": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "sra": 108, "src": [230, 245, 414, 417, 418], "src_key_pad": 417, "src_key_padding_mask": [414, 418], "src_mask": [414, 417, 418], "src_vocab_s": [246, 247, 248], "ss": 228, "stabil": [22, 25, 31, 65, 108, 113, 221, 229, 239, 278, 289, 291, 296, 297, 298, 300, 301, 302, 319, 324, 325, 326, 348, 367, 382, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 412, 414, 416, 418, 424, 435, 436, 437, 438, 439, 440, 441, 442, 443, 560], "stabl": [92, 198, 290, 335, 336, 339, 340, 366, 383, 384, 435, 439, 440, 443, 444, 445, 544], "stack": [15, 68, 256, 331, 361, 414, 415, 417, 532, 534, 535, 555, 568], "stage": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "stage1": 173, "stage2": 173, "stage3": 173, "stage4": 173, "stage_def": 65, "stall": 431, "stand": 142, "standalon": 348, "standard": [16, 42, 47, 57, 59, 61, 66, 67, 92, 102, 127, 130, 155, 164, 165, 215, 220, 221, 246, 247, 259, 261, 327, 328, 329, 335, 337, 339, 341, 342, 345, 361, 366, 414, 444, 448, 460, 463, 469, 557, 560, 568], "star": [361, 362, 363], "start": [1, 3, 10, 215, 378, 424, 435, 437, 444, 464, 477, 484, 499, 500, 559, 561, 569, 571], "start_axi": [378, 530], "start_id": 569, "state": [49, 108, 207, 249, 250, 251, 253, 256, 423, 428, 448, 449, 451, 453, 461, 572], "state_dict": [220, 221, 250, 251, 423, 428, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 453, 454, 572], "statement": [448, 451], "static": 256, "statist": [25, 277, 296, 300], "std": [5, 6, 7, 8, 223, 337, 557, 560, 568], "stem": [65, 66, 67, 68, 105, 108, 113, 146, 155, 166, 183], "stem_channel": [65, 66, 67, 68], "stem_typ": 155, "stem_width": [146, 147, 148, 149, 150, 151, 152, 155], "step": [10, 16, 31, 215, 216, 234, 251, 276, 331, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 477, 557, 558, 572], "step_siz": [424, 426, 428, 432, 444], "step_size_down": 426, "step_size_up": 426, "steplr": [424, 428, 433], "still": [52, 436, 572], "stn": 317, "stochast": [40, 41, 55, 78, 79, 92, 100, 113, 132, 188, 189, 279, 368, 435, 445], "stochastic_depth": 78, "stop": [431, 477, 484], "storag": [252, 254], "store": [2, 4, 5, 6, 7, 8, 16, 155, 166, 183, 249, 250, 251, 252, 253, 254, 255, 330, 399, 400, 401, 402, 403, 404, 451, 454, 559, 560, 561, 562, 563, 564, 565, 566], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 122, 155, 200, 250, 252, 254, 256, 289, 290, 291, 292, 294, 295, 317, 321, 374, 420, 423, 426, 428, 431, 452, 453, 454, 464, 537, 569], "straight": 525, "straightforward": [445, 449, 465], "strategi": [31, 108, 130, 197, 221, 238, 317, 424, 428, 434], "stream": 223, "streamlin": [2, 3, 92, 108], "strength": [31, 92, 108, 367], "strict": [250, 423, 572], "strictli": 572, "stride": [57, 59, 61, 79, 109, 110, 111, 112, 121, 122, 125, 126, 219, 223, 224, 242, 243, 253, 256, 269, 270, 271, 272, 273, 274, 276, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 364, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 569], "stride_height": 276, "stride_width": 276, "strike": [47, 122, 129], "string": [10, 11, 13, 14, 15, 250, 252, 254, 256, 358, 359, 360, 374, 423, 447], "strong": [31, 68, 108, 136, 139, 142, 206, 238], "stronger": [116, 137, 141, 197, 222, 239], "structur": [0, 10, 14, 26, 31, 65, 66, 68, 79, 108, 121, 189, 211, 218, 219, 239, 249, 250, 253, 278, 367, 374, 422, 423, 452, 464, 481, 558, 570], "student": 16, "studi": 16, "style": [10, 16, 65, 67, 105, 221, 242, 243, 300, 394, 395, 464, 537], "sub": [252, 253, 254, 255, 256, 422, 489, 527, 545, 552, 559, 561], "subclass": [1, 2, 3, 16, 250, 251, 252, 422, 423, 428], "sublay": [414, 416, 418], "submodul": [250, 422], "subscript": 11, "subsequ": [253, 256, 340, 463], "subset": [153, 154, 242, 274, 369, 370], "subspac": 355, "substack": 499, "substanti": 208, "subtract": [475, 560], "subvolum": 308, "suffer": 437, "suffix": [142, 453, 454], "suit": [52, 74, 75, 76, 77, 98, 119, 127, 128, 130, 142, 143, 145, 183, 199, 206, 335, 336, 339, 340, 424], "suitabl": [42, 44, 45, 48, 50, 65, 80, 81, 82, 83, 84, 85, 86, 87, 94, 105, 108, 110, 111, 112, 114, 115, 117, 118, 120, 125, 126, 128, 131, 134, 139, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 190, 191, 192, 193, 209, 221, 247, 385, 437, 438, 458], "sum": [10, 11, 14, 16, 24, 252, 253, 254, 255, 256, 265, 268, 289, 290, 291, 292, 294, 295, 302, 316, 317, 331, 351, 361, 362, 364, 382, 383, 384, 385, 386, 387, 393, 437, 464, 465, 468, 473, 476, 489, 499, 500, 519, 521, 526, 528, 529, 534, 537, 541, 544, 545, 548, 549, 555], "sum_": [13, 14, 23, 31, 236, 239, 242, 265, 297, 298, 351, 374, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 430, 467, 468, 476, 499, 500, 506, 515, 519, 521, 526, 537, 541], "sum_c": 242, "sum_i": [24, 473], "sum_j": [11, 473], "sum_k": 469, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 78, 164, 165, 211, 218, 405, 406, 407], "summari": [164, 165, 179, 180, 181, 182, 187], "summat": [10, 11, 13, 14, 15, 23, 430], "sun": 330, "super": [16, 219, 223, 224, 249, 250, 251, 252, 253, 254, 255, 279, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410, 422, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452], "superior": [54, 108, 197], "superpixel": 224, "supplementari": 130, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 92, 123, 132, 155, 215, 216, 219, 239, 242, 252, 253, 254, 255, 256, 268, 317, 321, 323, 356, 364, 412, 420, 422, 434, 441, 453, 454, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 478, 481, 495, 503, 504, 506, 511, 513, 515, 519, 520, 521, 525, 528, 537, 542, 544, 545, 558, 568, 570], "suppos": 568, "suppress": [222, 224, 228, 234, 239, 242], "sure": [215, 236, 237, 238, 422, 568], "svd": [21, 25], "swap": [13, 229, 374], "swapax": 489, "swin": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "swin_bas": 108, "swin_larg": 108, "swin_smal": 108, "swin_tini": 108, "swin_v2": 189, "swin_v2_bas": 108, "swin_v2_giant": 108, "swin_v2_hug": 108, "swin_v2_larg": 108, "swin_v2_smal": 108, "swin_v2_tini": 108, "swintransform": [190, 191, 192, 193], "swintransformer_v2": [194, 195, 196, 197, 198, 199], "swish": [125, 126, 354, 376], "symbol": [13, 14, 15, 374], "symmetr": [18, 303, 304, 305, 306, 339, 340, 353], "syntax": [1, 10, 13, 14, 15, 374, 451, 469], "synthes": 218, "system": [16, 17, 18, 25, 26, 27, 108, 129, 217, 245, 317, 449, 464, 537], "systemat": [108, 568], "szegedi": [97, 108], "t": [10, 16, 25, 31, 55, 108, 113, 216, 239, 242, 316, 317, 361, 362, 414, 415, 416, 418, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 453, 454, 464, 469, 482, 483, 499, 500, 522, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568], "t0": 435, "t1": [464, 522], "t2": [464, 522], "t_": [239, 242, 415, 425], "t_0": 415, "t_cpu": 464, "t_h": 242, "t_i": 415, "t_max": 425, "t_w": 242, "t_x": 242, "t_y": 242, "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 78, 412], "tabular": 4, "tag": [571, 572], "tailor": [4, 121, 129, 147, 148, 149, 150, 151, 152, 422, 568], "take": [26, 227, 403, 405, 406, 407, 408, 409, 410, 420, 429, 448, 451, 529, 557], "taken": 519, "tan": [108, 489], "tangent": [266, 346, 353, 493, 517, 518], "tanh": [109, 253, 256, 259, 260, 285, 335, 336, 339, 340, 342, 346, 354, 376, 489], "tanhnetwork": 353, "target": [5, 6, 7, 8, 52, 219, 221, 223, 227, 230, 236, 237, 238, 239, 242, 246, 247, 248, 256, 289, 290, 291, 292, 294, 295, 303, 304, 305, 308, 316, 321, 382, 383, 384, 385, 386, 387, 399, 400, 401, 402, 403, 404, 414, 415, 416, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 483, 526, 552, 559, 561, 566], "target_tensor": [382, 384, 385, 386, 387], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 65, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 211, 218, 220, 221, 239, 242, 246, 247, 248, 264, 265, 270, 272, 273, 274, 286, 289, 291, 294, 295, 330, 331, 350, 351, 358, 359, 360, 361, 362, 382, 383, 384, 385, 386, 387, 394, 395, 396, 405, 407, 408, 410, 414, 438, 450, 463, 481, 484, 568, 572], "teach": 218, "techniqu": [18, 22, 40, 79, 100, 108, 130, 194, 196, 199, 213, 279, 296, 366, 367, 369, 370, 371, 372, 394, 395, 396, 424, 434, 566, 568], "templat": 246, "tempor": [272, 358, 360, 407, 410], "temporarili": [448, 451], "ten": 509, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 88, 89, 90, 91, 97, 98, 99, 105, 106, 107, 109, 110, 111, 112, 121, 123, 124, 125, 126, 155, 167, 168, 169, 170, 171, 172, 173, 184, 185, 186, 200, 211, 213, 215, 216, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570], "tensordot": 489, "term": [13, 25, 53, 139, 140, 141, 143, 144, 145, 219, 286, 324, 325, 326, 327, 328, 329, 355, 414, 416, 418, 435, 439, 441, 442, 443, 445], "test": [4, 5, 6, 7, 8, 484], "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 113, 155, 166, 183, 184, 185, 186, 211, 215, 216, 218, 225, 226, 227, 233, 236, 239, 242, 252, 258, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 279, 298, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 356, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 405, 406, 407, 408, 409, 410, 412, 414, 415, 417, 426, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 457, 459, 464, 465, 466, 468, 470, 471, 472, 474, 475, 476, 490, 494, 495, 502, 505, 506, 507, 509, 510, 515, 516, 521, 523, 524, 525, 526, 528, 529, 534, 536, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 559, 560, 561, 563, 564, 565], "textur": 224, "tgt": [230, 245, 414, 415, 416], "tgt_is_caus": [415, 416], "tgt_key_padding_mask": [414, 415, 416], "tgt_mask": [414, 415, 416], "tgt_vocab_s": [246, 247, 248], "th": [286, 382, 383, 384, 386, 387, 394, 395, 396, 470, 471, 474], "than": [0, 1, 7, 13, 15, 234, 242, 254, 255, 258, 261, 292, 322, 327, 328, 329, 341, 345, 352, 374, 383, 385, 423, 430, 439, 476, 484, 494, 502, 519, 526, 527, 539, 547, 552, 559, 561, 566], "thei": [0, 28, 55, 108, 249, 253, 255, 256, 317, 355, 537, 542, 559, 561, 568], "them": [3, 10, 16, 65, 108, 250, 255, 276, 364, 435, 450, 528, 547, 552, 557, 560, 568], "therebi": [366, 406, 407, 409, 410], "theta": [216, 316, 317, 435, 436, 564], "theta_": [435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "theta_t": [442, 443], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 94, 97, 98, 99, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 142, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 206, 207, 208, 209, 210, 211, 215, 216, 219, 220, 221, 223, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 251, 253, 254, 255, 256, 262, 264, 265, 266, 269, 270, 271, 272, 273, 276, 278, 279, 286, 288, 298, 303, 306, 316, 319, 321, 322, 323, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 402, 405, 406, 407, 408, 409, 410, 412, 422, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 459, 460, 461, 463, 464, 468, 469, 473, 477, 479, 482, 483, 485, 486, 487, 488, 494, 495, 501, 502, 503, 504, 505, 506, 507, 509, 511, 513, 515, 516, 519, 520, 521, 522, 525, 526, 527, 536, 538, 539, 541, 542, 543, 544, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570], "think": 572, "third": [143, 144, 145, 316], "those": [110, 111, 112, 226, 255, 340, 549], "thread": 448, "three": [28, 65, 112, 239, 242, 271, 274, 305, 308, 311, 315, 324, 325, 326, 360, 372, 391, 396, 401, 407, 410], "threshold": [25, 220, 221, 224, 228, 234, 239, 242, 292, 385, 431], "threshold_mod": 431, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 65, 66, 67, 92, 96, 105, 108, 109, 122, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 212, 213, 216, 217, 218, 223, 224, 227, 239, 242, 252, 253, 256, 278, 286, 288, 316, 317, 321, 330, 331, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 358, 359, 360, 366, 369, 370, 371, 372, 377, 379, 380, 389, 390, 391, 394, 397, 405, 406, 407, 408, 409, 410, 414, 415, 417, 418, 448, 455, 457, 460, 467, 468, 473, 523, 524, 537, 538, 540, 542, 546, 549, 550, 551, 553, 554, 568, 569, 570, 572], "throughout": [66, 92, 188, 189, 205, 246, 263, 558], "ti": [108, 210], "tier": 49, "tight": 142, "tile": [15, 535], "time": [0, 3, 16, 23, 110, 111, 112, 120, 222, 236, 237, 238, 239, 240, 241, 244, 269, 298, 324, 345, 349, 355, 358, 405, 406, 407, 408, 409, 410, 415, 417, 424, 431, 435, 436, 437, 438, 439, 443, 445, 499, 541, 548], "timestep": [216, 217], "tini": [44, 45, 53, 64, 100, 104, 108, 117, 138, 222, 238, 241, 244], "tinynet": 16, "titl": 569, "to_tensor": [5, 6, 7, 8], "togeth": [256, 557, 568], "toggl": [448, 451], "token": [55, 100, 108, 133, 140, 412], "token_mix": 100, "too": [16, 424, 444], "tool": [3, 422, 424, 448, 450, 463, 557, 568, 570], "top": [18, 19, 20, 26, 28, 49, 225, 268, 286, 288, 321, 355, 356, 358, 359, 360, 377, 380, 476, 549, 559, 561, 569], "topk": 535, "topk_indic": 549, "topolog": 16, "topologi": [67, 68], "torch": [66, 67, 68, 200, 364, 522], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 251, 322, 355, 374, 393, 448, 464, 542], "total_loss": 219, "total_op": 448, "totensor": [557, 568], "touch": 16, "toward": 222, "toybackbon": [223, 224], "trace": [17, 489], "traceback": 451, "track": [16, 324, 325, 326, 389, 390, 391, 394, 395, 396, 422, 448, 449, 451, 455, 457, 458, 459, 460, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 516, 522, 525, 526, 536, 538, 544, 553, 558], "track_running_stat": [324, 325, 326, 389, 390, 391, 394, 395, 396], "trade": [44, 128, 238], "tradit": [7, 10, 31, 55, 65, 69, 108, 131, 217, 245, 436, 437, 440, 441, 442], "trail": 301, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 79, 92, 96, 97, 98, 108, 113, 179, 180, 181, 182, 187, 215, 217, 219, 222, 233, 239, 242, 245, 246, 249, 250, 253, 255, 256, 265, 277, 278, 279, 280, 281, 282, 283, 296, 300, 319, 323, 342, 345, 349, 350, 351, 353, 366, 367, 368, 369, 370, 371, 372, 383, 389, 390, 391, 394, 395, 396, 412, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 494, 502, 557, 560, 561, 562, 563, 564, 565, 568, 570, 572], "trainabl": [389, 390, 391, 394, 395, 396, 412, 422], "transact": [222, 330], "transfer": [300, 394, 395, 457], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 569, 570, 571, 572], "transform_pipelin": [557, 568], "transformed_imag": [557, 568], "transformer_bas": 245, "transformer_big": 245, "transformer_decod": 415, "transformer_encod": 417, "transformerdecod": [376, 414, 419], "transformerdecoderlay": [376, 414, 415, 419], "transformerencod": [376, 414, 419], "transformerencoderlay": [376, 414, 417, 419], "transit": [31, 73, 385], "translat": [218, 230, 246, 316, 406, 409, 414], "transpar": 16, "transpos": [13, 18, 272, 273, 274, 361, 362, 363, 489], "transposit": [11, 13, 374], "travers": 569, "treat": [0, 249, 397, 422, 454], "triangular": [18, 26, 415, 416, 417, 418, 426, 550, 551], "triangular2": 426, "tril": 535, "triu": 535, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 92, 96, 97, 98, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 188, 189, 215, 216, 219, 224, 239, 242, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 276, 277, 279, 280, 281, 282, 283, 286, 288, 296, 298, 300, 316, 317, 319, 321, 324, 325, 326, 327, 328, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 443, 447, 449, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 569], "truli": 16, "truth": [219, 236, 237, 238, 239], "try": 0, "tu": [108, 113], "tune": [128, 131, 220, 221, 568], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 65, 73, 113, 155, 215, 219, 223, 224, 226, 227, 228, 231, 239, 242, 243, 250, 251, 269, 270, 271, 272, 273, 274, 276, 301, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 321, 323, 324, 325, 326, 327, 328, 329, 358, 359, 360, 361, 362, 363, 364, 379, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 420, 438, 439, 440, 441, 442, 444, 458, 459, 460, 462, 464, 476, 479, 482, 485, 487, 505, 506, 507, 515, 521, 526, 527, 528, 531, 532, 533, 534, 537, 539, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 559, 560, 561, 566], "twice": 539, "two": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 69, 92, 100, 109, 113, 132, 133, 146, 155, 173, 183, 188, 189, 215, 218, 249, 250, 251, 286, 322, 377, 414, 416, 418, 447, 454, 457, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 522, 537, 558, 571], "typeddict": 219, "typeerror": [0, 1, 2, 250, 423], "typic": [16, 17, 31, 65, 70, 122, 128, 155, 166, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 223, 225, 228, 234, 236, 242, 243, 249, 265, 277, 278, 323, 330, 348, 349, 351, 367, 368, 387, 389, 390, 391, 394, 395, 396, 434, 435, 443, 445, 554, 558, 560, 564, 566, 568], "u": [25, 28, 216, 336, 338, 340], "u_": 440, "ultra": [46, 161, 195], "unbind": 535, "unbound": 552, "uncertainti": 217, "unchang": [16, 249, 283, 341, 345, 347, 349, 366, 369, 370, 371, 372, 378, 379, 540, 546], "uncontract": 476, "uncontrol": 16, "undefin": 474, "under": [167, 168, 169, 170, 171, 172, 346, 422, 572], "underbrac": 23, "underdetermin": 25, "undergo": [279, 418, 568], "underli": [0, 88, 89, 90, 91, 97, 98, 99, 106, 107, 464, 516, 522, 534, 540, 542, 555], "understand": [16, 70, 71, 72, 108, 143, 144, 196, 213, 218, 256, 568, 569, 570], "understood": [13, 361], "unet": 216, "unexpect": [10, 250, 253, 256, 302, 463, 572], "unfold": [275, 285, 365, 376], "unifi": [0, 16, 92, 219, 222, 447], "uniform": [334, 336, 340, 358, 359, 360, 377, 380, 456, 458, 459, 463, 483, 562, 563, 564, 565], "uniformli": [226, 458, 462], "uniniti": [479, 480], "unintend": [10, 14], "union": [200, 233, 234], "uniqu": [18, 25, 27, 65, 252, 254, 412, 457, 535], "unit": [29, 67, 68, 92, 109, 213, 219, 223, 243, 258, 259, 261, 262, 263, 335, 336, 339, 340, 341, 342, 345, 347, 349, 366], "unless": [156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 224, 448, 525], "unlik": [31, 65, 69, 108, 188, 217, 227, 239, 249, 252, 253, 254, 255, 261, 298, 341, 345, 366, 397, 436, 437, 439, 440, 441, 442, 444], "unnecessari": 10, "unnorm": 383, "unpad": 539, "unseen": 568, "unspecifi": [447, 482], "unsqueez": 535, "unstabl": 22, "unsur": 10, "until": 16, "untouch": 65, "up": [108, 423, 428, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 451, 494, 499, 500, 564, 566], "updat": [4, 41, 249, 255, 256, 366, 369, 370, 371, 372, 382, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451], "upon": [41, 98, 108, 121, 122, 197, 199, 222, 223, 239, 252, 253, 254, 255], "upper": [26, 338, 426, 444, 462, 494, 495, 533, 550, 551], "upper_triangular": 551, "upsampl": [242, 272, 273, 274, 361, 362, 363, 376, 421], "upstream": [16, 499, 500], "url": 572, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 66, 67, 68, 69, 73, 78, 79, 92, 93, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 199, 210, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 241, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 288, 290, 294, 296, 297, 300, 302, 304, 305, 316, 317, 319, 321, 322, 323, 324, 325, 326, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 405, 406, 407, 408, 409, 410, 412, 414, 420, 422, 423, 424, 425, 427, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 495, 501, 502, 505, 506, 507, 509, 515, 516, 521, 525, 531, 533, 536, 537, 539, 541, 544, 545, 546, 548, 550, 551, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 67, 73, 92, 113, 211, 219, 220, 221, 223, 224, 237, 238, 253, 256, 279, 327, 328, 329, 356, 361, 367, 423, 434, 448, 451, 484, 559, 560, 561, 562, 563, 564, 565, 566], "use_aux": [96, 97, 98], "use_fpn": 219, "use_h": [125, 126], "use_passthrough": 239, "use_s": [125, 126], "user": [1, 2, 3, 4, 16, 131, 215, 219, 239, 252, 253, 254, 255, 422, 429, 437, 557, 558, 568, 570], "usual": [226, 317, 384], "util": [3, 17, 31, 66, 122, 138, 184, 185, 186, 197, 254, 255, 278, 422, 463, 570], "v": [16, 20, 25, 28, 31, 55, 108, 113, 133, 268, 355, 356, 416, 418, 438, 439, 441, 442, 478], "v1": [96, 97, 105, 106, 107, 108, 119, 120, 235, 237, 238, 239], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 79, 88, 89, 90, 91, 105, 107, 108, 120, 121, 124, 133, 139, 140, 141, 143, 144, 145, 194, 195, 196, 197, 198, 199, 235, 240, 241, 242], "v3": [96, 98, 99, 108, 121, 125, 126, 235, 243], "v4": [66, 96, 99, 108, 122, 128, 129, 130, 131], "v_": [435, 438, 439, 441, 442, 443, 445], "v_2": 55, "v_i": 355, "v_stack": 555, "v_t": [442, 443], "val": 333, "val_loss": 431, "valid": [11, 324, 325, 326, 327, 328, 329, 331, 358, 359, 360, 361, 362, 363, 431, 520], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 69, 70, 71, 72, 92, 100, 118, 119, 122, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 164, 165, 188, 189, 215, 224, 228, 229, 236, 239, 244, 250, 252, 254, 256, 258, 261, 264, 265, 266, 268, 269, 270, 271, 276, 278, 279, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 316, 317, 321, 322, 323, 324, 325, 326, 330, 333, 335, 336, 337, 338, 339, 340, 341, 345, 347, 348, 349, 350, 353, 355, 356, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 420, 424, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 455, 457, 458, 459, 460, 461, 462, 463, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 494, 495, 498, 501, 502, 503, 504, 505, 507, 510, 511, 513, 514, 523, 524, 525, 528, 529, 531, 532, 536, 539, 540, 542, 544, 549, 553, 554, 556, 560, 562, 563, 565, 571], "valuabl": 463, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 298, 423], "van": 108, "vanish": [108, 341, 349, 389, 390, 391], "var": 489, "varepsilon": 302, "vari": [40, 183, 253, 255, 303, 321, 393, 399, 426, 564], "variabl": [215, 217, 228, 250, 256, 303, 304, 305, 379, 399, 400, 401, 422, 449, 479, 561, 564], "varianc": [215, 263, 277, 296, 298, 300, 324, 325, 326, 335, 336, 339, 340, 349, 366, 389, 390, 391, 393, 394, 395, 396, 397, 438, 439, 440, 441, 442, 460, 521, 564, 568], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 89, 90, 91, 94, 95, 101, 102, 103, 104, 114, 115, 116, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 179, 180, 181, 182, 184, 185, 186, 187, 195, 200, 201, 202, 203, 204, 215, 220, 237, 238, 241, 244, 248, 438, 439, 440, 572], "variat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "varieti": [4, 105, 146, 463, 568], "variou": [7, 10, 13, 14, 31, 65, 73, 96, 106, 107, 108, 109, 122, 123, 131, 132, 215, 218, 347, 434, 463, 484, 505, 507, 539, 558], "vasudevan": 108, "vaswani": [245, 414], "vdim": 355, "vdot": 473, "vector": [15, 20, 25, 26, 27, 28, 215, 236, 237, 238, 239, 242, 286, 288, 319, 322, 355, 377, 378, 380, 412, 467, 468, 469, 473], "veloc": [435, 443, 445], "verbos": [13, 425, 426, 427, 428, 429, 430, 431, 432], "veri": [25, 48, 108, 134, 158, 160, 436], "verifi": 10, "versa": 444, "versatil": [31, 108, 131, 463, 537], "version": [16, 28, 40, 67, 96, 100, 105, 109, 110, 111, 128, 133, 135, 142, 241, 361, 364, 374, 443, 454, 473, 543, 562, 572], "versu": 65, "vertic": [547, 555, 565], "vgg": 200, "vggnet": [201, 202, 203, 204], "vggnet_11": 108, "vggnet_11_weight": 571, "vggnet_13": 108, "vggnet_13_weight": 571, "vggnet_16": 108, "vggnet_16_weight": 571, "vggnet_19": 108, "vggnet_19_weight": 571, "via": [3, 4, 16, 113, 131, 183, 216, 221, 226, 237, 238, 464, 572], "vice": 444, "video": [218, 271, 283, 326, 360, 363, 396, 407, 410], "view": [105, 109, 253, 406, 407, 408, 409, 410, 525, 526, 542, 552], "vinod": [5, 6], "violet": 569, "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "visual": [55, 117, 141, 213, 218], "vit": [31, 69, 188, 206, 207, 208, 209, 210], "vit_bas": 108, "vit_hug": 108, "vit_larg": 108, "vit_smal": 108, "vit_tini": 108, "voc": [220, 221, 237, 238, 240, 241], "vocabulari": [246, 247, 248, 412], "vol": 108, "vollgraf": 7, "volum": [308, 404], "volumetr": [271, 274, 283, 326, 360, 363, 396, 404, 407, 410], "vstack": 535, "w": [10, 13, 14, 15, 31, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 216, 217, 222, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 243, 270, 271, 273, 274, 276, 278, 282, 283, 286, 288, 297, 304, 305, 307, 308, 310, 311, 314, 315, 316, 317, 321, 323, 325, 326, 330, 355, 358, 359, 360, 361, 362, 363, 374, 377, 378, 380, 390, 391, 392, 395, 396, 400, 401, 403, 404, 407, 410, 499, 500, 559, 561, 569, 572], "w24": [72, 108], "w_": [226, 227, 229, 230, 270, 271, 273, 274, 304, 305, 307, 308, 310, 311, 314, 315, 321, 359, 360, 362, 363, 364, 400, 401, 403, 404, 406, 407, 409, 410], "w_1": [416, 418], "w_2": [416, 418], "w_i": 236, "w_in": 317, "w_k": [31, 55, 113], "w_l": [225, 226], "w_out": [270, 271, 273, 274, 310, 311, 314, 315, 317], "w_q": [55, 113], "w_t": [229, 230], "w_v": [55, 113], "wa": [16, 65, 97, 366, 369, 370, 371, 372, 448, 453], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 214, 218, 374, 383, 449, 542], "wait": 431, "wang": 108, "want": [0, 557, 559], "warn": [252, 254, 355, 525], "warp": [222, 224], "warper_output_s": 224, "we": [3, 450, 537], "wei": 108, "weight": [55, 108, 113, 132, 133, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 188, 189, 215, 220, 221, 236, 237, 238, 268, 269, 270, 271, 272, 273, 274, 286, 288, 289, 290, 291, 295, 296, 298, 300, 301, 319, 321, 330, 331, 335, 336, 339, 340, 355, 356, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 377, 380, 382, 383, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 412, 414, 415, 416, 417, 418, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 453, 454, 458, 463, 570], "weight1": 254, "weight2": 254, "weight_decai": [435, 436, 437, 438, 439, 440, 441, 442, 443, 445], "weihao": 108, "weinberg": 108, "well": [52, 74, 75, 76, 77, 79, 98, 128, 142, 143, 183, 199, 206, 216, 217, 239, 335, 336, 364], "wenhai": 108, "were": 256, "weyand": 108, "what": [13, 15, 374], "whatev": 448, "when": [0, 1, 3, 10, 14, 16, 23, 55, 78, 108, 215, 219, 220, 221, 227, 229, 230, 239, 240, 241, 250, 253, 255, 256, 258, 261, 269, 270, 271, 272, 273, 319, 341, 368, 379, 383, 389, 390, 391, 393, 394, 395, 396, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 436, 444, 448, 449, 451, 452, 463, 474, 483, 499, 500, 525, 526, 557, 559, 572], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 67, 108, 125, 126, 127, 128, 129, 130, 142, 144, 211, 215, 216, 218, 226, 227, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 279, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 364, 366, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 463, 464, 465, 466, 470, 471, 472, 474, 475, 479, 480, 494, 495, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 513, 515, 519, 520, 521, 527, 528, 535, 536, 538, 539, 541, 545, 548, 550, 551, 552, 557, 558, 559, 560, 561, 562, 563, 564, 565], "wherev": 536, "whether": [1, 16, 19, 31, 55, 78, 92, 96, 97, 98, 125, 126, 132, 133, 139, 140, 141, 143, 144, 145, 146, 188, 189, 216, 219, 250, 251, 335, 336, 368, 443, 449, 455, 457, 458, 459, 460, 462, 464, 479, 480, 482, 483, 505, 506, 507, 515, 521, 544, 553, 556], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 67, 69, 79, 99, 107, 108, 113, 119, 120, 122, 123, 127, 133, 137, 147, 148, 149, 150, 151, 152, 153, 154, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 201, 202, 203, 204, 215, 223, 224, 227, 246, 250, 252, 254, 256, 261, 265, 292, 302, 323, 327, 328, 329, 331, 341, 342, 345, 348, 351, 353, 366, 378, 383, 385, 387, 389, 390, 391, 394, 395, 396, 397, 412, 416, 418, 430, 432, 438, 439, 441, 443, 449, 457, 458, 459, 462, 476, 491, 492, 493, 496, 497, 499, 500, 503, 504, 505, 506, 507, 508, 511, 512, 513, 515, 517, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 538, 541, 542, 543, 544, 545, 547, 549, 550, 551, 552, 553, 554, 556, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 69, 70, 71, 72, 88, 89, 90, 91, 92, 93, 95, 103, 107, 108, 116, 119, 129, 136, 137, 138, 140, 141, 142, 143, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 189, 208, 216, 218, 238, 241, 253, 256, 277, 278, 342, 347, 348, 368, 415, 422, 425, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 448, 516, 536, 542, 547, 562, 568, 572], "who": [252, 253, 254, 255], "whose": [28, 425, 426, 427, 428, 429, 430, 431, 432, 480, 483, 486, 488, 490, 495, 499, 500, 501, 510, 516, 525, 572], "wide": [4, 5, 6, 8, 17, 25, 53, 108, 131, 155, 163, 164, 165, 198, 221, 262, 273, 347, 358, 359, 384], "wide_resnet_101": 108, "wide_resnet_101_weight": 571, "wide_resnet_50": 108, "wide_resnet_50_weight": 571, "wider": [44, 164, 165, 269, 270], "width": [31, 62, 78, 79, 108, 116, 117, 118, 119, 123, 146, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 211, 229, 230, 236, 238, 270, 271, 273, 274, 276, 282, 283, 297, 304, 305, 307, 308, 310, 311, 314, 315, 317, 321, 323, 331, 359, 360, 364, 390, 391, 392, 395, 396, 400, 401, 403, 406, 407, 409, 410, 420, 447, 559, 561, 566], "width_coef": 78, "width_multipli": [119, 123], "window": [108, 113, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 309, 310, 311, 313, 314, 315, 405, 406, 407, 408, 409, 410, 436, 505, 507], "windows_s": [188, 189], "wise": [10, 15, 92, 108, 113, 177, 179, 180, 181, 182, 219, 258, 259, 261, 262, 263, 264, 265, 266, 279, 324, 325, 326, 330, 344, 346, 351, 352, 366, 368, 369, 370, 371, 372, 383, 422, 450, 465, 466, 469, 470, 471, 472, 474, 475, 490, 491, 492, 493, 494, 495, 496, 497, 498, 502, 503, 504, 508, 510, 511, 512, 513, 514, 517, 518, 519, 534, 544, 555, 556], "within": [2, 108, 188, 205, 218, 231, 242, 246, 249, 252, 253, 254, 255, 256, 266, 298, 321, 323, 340, 342, 343, 344, 346, 347, 349, 350, 352, 353, 358, 359, 360, 363, 364, 366, 369, 370, 374, 379, 382, 384, 385, 386, 387, 389, 390, 391, 393, 394, 397, 405, 406, 407, 408, 409, 410, 434, 448, 477, 495, 564, 568], "without": [10, 16, 108, 166, 252, 253, 254, 286, 288, 358, 359, 360, 377, 380, 448, 449, 452, 454, 457, 505, 540, 542, 554], "word": [108, 319, 412], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "workflow": [14, 463, 568], "workshop": 108, "world": 218, "worth": 108, "would": [525, 544], "wrap": [3, 66, 402, 403, 422, 424, 448, 451, 453, 464, 522, 572], "wrapper": 422, "wu": 108, "www": [5, 6], "x": [11, 16, 17, 27, 31, 66, 67, 68, 105, 108, 109, 113, 173, 200, 211, 215, 216, 219, 220, 221, 223, 224, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 252, 253, 254, 255, 256, 265, 279, 286, 288, 298, 302, 316, 317, 323, 327, 328, 329, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 416, 417, 418, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451, 455, 458, 459, 460, 462, 479, 480, 494, 501, 502, 509, 523, 524, 525, 527, 531, 533, 536, 537, 538, 543, 544, 545, 549, 550, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 569, 572], "x1": [239, 242, 377], "x2": [239, 242, 377], "x_": [31, 230, 297, 384, 387, 392, 417, 537], "x_0": 417, "x_1": [55, 226, 227, 229, 230, 231, 233, 234], "x_2": [55, 226, 227, 229, 230, 231, 233, 234], "x_c": [229, 384, 387], "x_i": [236, 298, 302, 382, 383, 393, 417, 464, 494, 502, 509, 549], "x_k": 384, "x_start": 216, "x_t": [216, 230], "x_test": 16, "x_train": 16, "xavier": [335, 336, 339, 340], "xavier_norm": 334, "xavier_uniform": 334, "xiao": 7, "xie": 108, "xl": [91, 108], "xlarg": [54, 108, 118], "xmax": 532, "xmin": 532, "xy": 537, "x\u2081": 377, "x\u2082": 377, "y": [11, 16, 31, 66, 67, 68, 108, 211, 229, 230, 231, 236, 237, 238, 239, 242, 252, 253, 254, 255, 256, 298, 302, 316, 323, 327, 328, 329, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 455, 458, 459, 460, 462, 464, 479, 480, 536, 537, 543, 552, 553, 562, 572], "y0": 552, "y1": [239, 242, 527, 552], "y2": [239, 242, 527, 552], "y_": [31, 230, 297, 384, 387, 392, 537], "y_1": [226, 227, 229, 230, 231, 233, 234], "y_2": [226, 227, 229, 230, 231, 233, 234], "y_c": [229, 384, 387], "y_i": [236, 302, 382, 383, 393], "y_t": 230, "y_train": 16, "yann": [8, 108], "yanyu": 108, "yao": 108, "yellow": 569, "yet": [16, 51, 53, 116, 129, 317, 450], "yield": [0, 1, 68, 250, 499, 500, 525], "ymax": 532, "ymin": 532, "yolo": [66, 237, 238, 240, 241, 243], "yolo9000": 222, "yolo_v1": [222, 236, 238], "yolo_v1_tini": 222, "yolo_v2": [222, 239, 241], "yolo_v2_model": 239, "yolo_v2_tini": 222, "yolo_v3": [222, 242, 244], "yolo_v3_tini": 222, "yolov1": 237, "yolov3": [222, 243, 244], "yolov4": 65, "yolox": 65, "you": [0, 13, 15, 16, 121, 220, 221, 222, 236, 237, 238, 245, 253, 255, 256, 272, 364, 374, 414, 422, 434, 448, 449, 463, 479, 480, 481, 488, 520, 522, 523, 524, 525, 557, 559, 568, 572], "your": [10, 16, 121, 129, 221, 236, 239, 383, 422, 434, 449, 463, 568, 572], "yourself": 572, "yourweight": 572, "yu": 108, "z": [11, 16, 108, 215, 216, 361, 363, 416, 418, 480, 487, 488, 525], "zalandoresearch": 7, "ze": 108, "zeiler": [108, 213], "zero": [23, 25, 26, 98, 229, 230, 258, 261, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 298, 302, 309, 310, 311, 313, 314, 315, 316, 317, 319, 333, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 349, 355, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 397, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 422, 423, 436, 437, 438, 439, 440, 441, 442, 443, 479, 480, 481, 482, 488, 489, 494, 495, 502, 509, 510, 538, 539, 549, 550, 551, 556], "zero_grad": [16, 251, 423, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 464], "zeros_lik": [480, 489], "zhang": 108, "zhmoginov": 108, "zhu": 108, "zhuang": 108, "zihang": 108, "zip": 225, "zisserman": 108, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CSPNet", "csp_darknet_53", "csp_resnet_50", "csp_resnext_50_32x4d", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "EfficientFormer", "efficientformer_l1", "efficientformer_l3", "efficientformer_l7", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "VAE", "DDPM", "Image Generation", "lucid.models", "Faster R-CNN", "faster_rcnn_resnet_101_fpn", "faster_rcnn_resnet_50_fpn", "Object detection", "Fast R-CNN", "R-CNN", "util.FPN", "util.MultiScaleROIAlign", "util.ROIAlign", "util.SelectiveSearch", "util.apply_deltas", "util.bbox_to_delta", "util.clip_boxes", "Object Detection Utilities", "util.iou", "util.nms", "YOLO Series", "YOLO-v1", "yolo_v1", "yolo_v1_tiny", "YOLO-v2", "yolo_v2", "yolo_v2_tiny", "YOLO-v3", "yolo_v3", "yolo_v3_tiny", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.binary_cross_entropy_with_logits", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "nn.functional.group_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.one_hot", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.Mish", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Flatten", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.BCEWithLogitsLoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.GroupNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.load", "lucid.save", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.cumprod", "lucid.cumsum", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.diagonal", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms", "visual.draw_tensor_graph", "lucid.visual", "Pre-Trained Weights", "lucid.weights"], "titleterms": {"1": [450, 525], "19": 239, "1d": 450, "2": 450, "2d": 450, "3": 450, "It": 449, "One": 322, "The": 16, "ab": 490, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "access": 572, "activ": [260, 285, 354, 376], "ad": 450, "adadelta": 436, "adagrad": 437, "adam": 438, "adamax": 440, "adamw": 439, "adaptive_avg_pool1d": 303, "adaptive_avg_pool2d": 304, "adaptive_avg_pool3d": 305, "adaptive_max_pool1d": 306, "adaptive_max_pool2d": 307, "adaptive_max_pool3d": 308, "adaptiveavgpool1d": 399, "adaptiveavgpool2d": 400, "adaptiveavgpool3d": 401, "adaptivemaxpool1d": 402, "adaptivemaxpool2d": 403, "adaptivemaxpool3d": 404, "add": 465, "addit": [25, 355], "advanc": [276, 568], "advantag": [10, 13, 14, 15, 374], "affine_grid": 316, "alexnet": [29, 30, 108, 571], "algebra": 21, "algorithm": [435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "align": [16, 450], "along": 524, "alpha_dropout": 277, "alphadropout": 366, "also": 434, "anchor": 242, "anoth": 522, "api": 572, "apply_delta": 229, "arang": 477, "arcco": 491, "architectur": [29, 31, 40, 55, 92, 110, 111, 112, 113, 164, 165, 213, 219, 223, 224, 238], "arcsin": 492, "arctan": 493, "argmax": 523, "argmin": 524, "argsort": 525, "ascend": 525, "asgd": 435, "attent": [267, 268, 285, 331, 357, 376], "attribut": [5, 6, 7, 8, 29, 105, 109, 155, 166, 173, 183, 200, 211, 213, 239, 242, 249, 251, 252, 253, 254, 255, 256, 324, 325, 326, 327, 328, 329, 330, 341, 342, 345, 347, 349, 350, 351, 353, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 447, 464, 559, 560, 561, 562, 563, 564, 565, 566], "autodiff": 16, "autoencod": 217, "automat": 16, "avail": 570, "avg_pool1d": 309, "avg_pool2d": 310, "avg_pool3d": 311, "avgpool1d": 405, "avgpool2d": 406, "avgpool3d": 407, "axi": [450, 516, 524], "backbon": [239, 242], "backend": 16, "backpropag": [393, 464], "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 239, 242, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 278, 286, 288, 316, 321, 330, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 528, 534, 537, 539, 540, 541, 542, 546, 547, 548, 550, 551, 552, 554, 555], "base": [433, 464], "basic": 16, "batch_norm": 296, "batchnorm": 332, "batchnorm1d": 389, "batchnorm2d": 390, "batchnorm3d": 391, "bbox_to_delta": 230, "bceloss": 382, "bcewithlogitsloss": 383, "behavior": [303, 304, 305, 306, 307, 308, 399, 400, 401, 402, 403, 404, 453, 454], "benefit": [448, 451], "bernoulli": 455, "between": [16, 464], "bilinear": [286, 377], "binari": 489, "binary_cross_entropi": 289, "binary_cross_entropy_with_logit": 290, "bottleneck": [125, 126], "broadcast": [450, 526], "broadcast_to": 526, "buffer": 249, "cach": 572, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 155, 166, 173, 183, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 276, 278, 279, 286, 288, 303, 304, 305, 306, 316, 317, 321, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 528, 534, 537, 539, 540, 541, 542, 546, 547, 548, 550, 551, 552, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566], "captur": 452, "case": 65, "categori": 572, "ceil": 494, "centercrop": 559, "characterist": 65, "choleski": 18, "chunk": 527, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 73, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 146, 155, 166, 173, 183, 188, 189, 200, 205, 211, 213, 215, 216, 219, 223, 224, 232, 236, 239, 242, 246, 249, 250, 251, 252, 253, 254, 255, 256, 324, 325, 326, 327, 328, 329, 330, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 464, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566], "classif": 108, "clip": 495, "clip_box": 231, "cnn": [219, 222, 223, 224], "co": 496, "coatnet": [31, 108], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "common": 572, "compon": [3, 215, 422], "compos": 557, "comput": [218, 298, 527, 536, 543, 544, 549], "concatdataset": [0, 1], "concaten": 528, "conclus": [3, 10, 13, 14, 15, 16, 374, 422, 424, 449, 450, 463, 558, 568], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 78, 114, 115, 116, 117, 118, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154], "constant": 333, "constructor": [225, 226, 227, 228], "contain": 257, "contract": 476, "conv": 332, "conv1d": [269, 358], "conv2d": [270, 359], "conv3d": [271, 360], "conv_transpose1d": 272, "conv_transpose2d": 273, "conv_transpose3d": 274, "convbnrelu1d": 324, "convbnrelu2d": 325, "convbnrelu3d": 326, "convnext": [40, 108], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [108, 275, 285, 332, 365, 376], "convtranspose1d": 361, "convtranspose2d": 362, "convtranspose3d": 363, "core": 16, "cosh": 497, "cosineannealinglr": 425, "count_flop": 448, "creat": [251, 464, 522], "cross_entropi": 291, "crossentropyloss": 384, "crossvit": [55, 108], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "csp_darknet_53": 66, "csp_resnet_50": 67, "csp_resnext_50_32x4d": 68, "cspnet": [65, 108], "cube": 498, "cumprod": 499, "cumsum": 500, "current": 570, "custom": [1, 2, 3, 239, 250, 423, 434, 568, 572], "cvt": [69, 108], "cvt_13": 70, "cvt_21": 71, "cvt_w24": 72, "cycliclr": 426, "d": 525, "dagger": [57, 59, 61], "darknet": 239, "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "ddpm": [216, 217], "default": [239, 242], "defin": [2, 250, 423, 434], "definit": [13, 14, 15, 302, 374], "denois": 216, "densenet": [73, 108, 571], "densenet_121": 74, "densenet_169": 75, "densenet_201": 76, "densenet_264": 77, "depthseparableconv1d": 327, "depthseparableconv2d": 328, "depthseparableconv3d": 329, "depthwis": 332, "descend": 525, "descript": [167, 168, 169, 170, 171, 172, 184, 185, 186, 452], "design": 16, "det": 19, "detail": [25, 55, 113, 127, 128, 129, 130, 131, 164, 165, 355, 414, 415, 416, 417, 418], "detect": [222, 232, 242], "devic": [16, 464, 572], "diag": 478, "diagon": 529, "dictionari": 219, "differ": [238, 246], "differenti": 16, "dilat": 276, "dim": 524, "div": 466, "dot": 467, "draw_tensor_graph": 569, "drop_block": 278, "drop_path": 279, "dropblock": 367, "dropout": [280, 284, 285, 369, 373, 376], "dropout1d": [281, 370], "dropout2d": [282, 371], "dropout3d": [283, 372], "droppath": 368, "dtype": 464, "duplic": 525, "educ": 16, "efficientform": [92, 108], "efficientformer_l1": 93, "efficientformer_l3": 94, "efficientformer_l7": 95, "efficientnet": [78, 108], "efficientnet_b0": 80, "efficientnet_b1": 81, "efficientnet_b2": 82, "efficientnet_b3": 83, "efficientnet_b4": 84, "efficientnet_b5": 85, "efficientnet_b6": 86, "efficientnet_b7": 87, "efficientnet_v2": 79, "efficientnet_v2_": 90, "efficientnet_v2_l": 88, "efficientnet_v2_m": 89, "efficientnet_v2_xl": 91, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 375, 376], "einsum": 11, "elu": [258, 341], "embed": [319, 412], "empti": 479, "empty_lik": 480, "enabl": 16, "encod": 322, "enhanc": 133, "evalu": 16, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 572], "excit": 332, "exp": 501, "exponentiallr": 427, "express": [297, 494, 502, 509, 545], "ey": 481, "factori": 572, "fashionmnist": 7, "fast": [222, 223], "faster": [219, 222], "faster_rcnn_resnet_101_fpn": 220, "faster_rcnn_resnet_50_fpn": 221, "featur": [4, 17, 179, 180, 181, 182, 187, 434, 463, 568], "flatten": [378, 523, 530], "floor": 502, "flop": 525, "format": [236, 239, 242], "formula": [236, 425, 426, 427, 429, 430, 431, 432], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 155, 166, 173, 183, 211, 216, 225, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 276, 279, 286, 288, 298, 303, 304, 305, 306, 316, 317, 321, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 528, 534, 537, 539, 540, 541, 542, 546, 547, 548, 550, 551, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566], "fpn": 225, "free": 464, "from": [246, 522], "full": 482, "full_lik": 483, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 243, 244, 247, 248, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 333, 335, 336, 337, 338, 339, 340, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 569], "fuse": 332, "futur": 4, "gelu": [259, 342], "gener": [217, 456, 489], "get": 434, "global": 524, "global_response_norm": 297, "globalresponsenorm": 392, "gpu": [16, 464], "grad_en": 449, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 278, 286, 288, 316, 321, 330, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 405, 406, 407, 408, 409, 410, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 534, 536, 537, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556], "grid_sampl": 317, "group_norm": 298, "groupnorm": 393, "hardsigmoid": 343, "hardswish": 344, "heapsort": 525, "histogram": 531, "histogram2d": 532, "histogramdd": 533, "hook": [16, 464], "hot": 322, "how": [16, 449, 572], "hstack": 534, "huber_loss": 292, "huberloss": 385, "hybrid": 31, "hyperparamet": [153, 154], "ident": 379, "imag": [9, 108, 217, 567], "implement": [55, 113], "incept": [96, 108], "inception_next_atto": 101, "inception_next_bas": 102, "inception_next_smal": 103, "inception_next_tini": 104, "inception_resnet_v1": 106, "inception_resnet_v2": 107, "inception_v1": 97, "inception_v3": 98, "inception_v4": 99, "inceptionnext": [100, 108], "inceptionresnet": 105, "index": [523, 524], "infer": 464, "init": [333, 335, 336, 337, 338, 339, 340], "initi": 334, "inner": 468, "input": [225, 226, 227, 236, 239, 242, 522], "inspect": [434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "instal": 16, "instance_norm": 300, "instancenorm1d": 394, "instancenorm2d": 395, "instancenorm3d": 396, "integr": [3, 239, 422, 463, 568], "interpol": 321, "inv": 22, "iou": 233, "kaiming_norm": 335, "kaiming_uniform": 336, "keep": 524, "kei": [3, 4, 65, 133, 179, 180, 181, 182, 187, 422, 434, 463, 568], "kernel": [332, 525], "lambdalr": 429, "languag": 218, "layer": [147, 148, 149, 150, 151, 152, 332, 354, 357, 365, 373, 375, 376, 381, 388, 398, 411, 413, 419, 421], "layer_norm": 301, "layernorm": 397, "leaky_relu": 261, "leakyrelu": 345, "learn": 463, "lenet": [108, 109, 571], "lenet_1": 110, "lenet_4": 111, "lenet_5": 112, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 285, 287, 288, 376, 380, 381], "linspac": 484, "list": 522, "load": [1, 16, 453], "log": 503, "log2": 504, "logic": 322, "loss": [215, 219, 236, 239, 242, 285, 293, 376, 388], "lr": 433, "lr_schedul": [424, 425, 426, 427, 428, 429, 430, 431, 432], "lrschedul": 428, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 218, 285, 422, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 568, 570, 572], "lucid\u00b2": 16, "masked_fil": 536, "mathemat": [13, 14, 15, 55, 113, 297, 302, 355, 374, 414, 415, 416, 417, 418, 425, 426, 427, 429, 430, 431, 432, 464, 494, 502, 509, 529, 545], "matmul": 469, "matrix": 469, "matrix_pow": 23, "max": [505, 523], "max_pool1d": 313, "max_pool2d": 314, "max_pool3d": 315, "maximum": [470, 523], "maxpool1d": 408, "maxpool2d": 409, "maxpool3d": 410, "maxvit": [108, 113], "maxvit_bas": [114, 115], "maxvit_smal": 116, "maxvit_tini": 117, "maxvit_xlarg": 118, "mean": 506, "mechan": [268, 331], "meshgrid": 537, "metadata": [452, 572], "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 105, 109, 200, 215, 216, 236, 239, 242, 250, 251, 414, 415, 416, 417, 418, 423, 425, 426, 427, 428, 429, 430, 431, 432, 447, 464], "min": 507, "minimum": [471, 524], "mish": 346, "mlx": 16, "mnist": 8, "mobilenet": [108, 119, 123, 571], "mobilenet_v2": [120, 124], "mobilenet_v3": 121, "mobilenet_v3_larg": 125, "mobilenet_v3_smal": 126, "mobilenet_v4": 122, "mobilenet_v4_conv_larg": 127, "mobilenet_v4_conv_medium": 128, "mobilenet_v4_conv_smal": 129, "mobilenet_v4_hybrid_larg": 130, "mobilenet_v4_hybrid_medium": 131, "model": [114, 115, 116, 117, 118, 218, 422, 572], "modul": [215, 250, 376], "moduledict": 252, "modulelist": 253, "more": 463, "move": 464, "mse_loss": 294, "mseloss": 386, "multi": 242, "multiheadattent": 355, "multipl": [0, 469], "multipli": 472, "multiscaleroialign": 226, "multisteplr": 430, "nadam": 441, "natur": 218, "network": 16, "neural": 16, "new": 450, "newaxi": 450, "nll_loss": 295, "nllloss": 387, "nm": 234, "nn": [16, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422], "no_grad": 451, "nois": 216, "nonzero": 538, "norm": 24, "normal": [285, 299, 302, 337, 376, 398, 560], "note": [11, 220, 221, 237, 238, 317, 482, 483], "number": 456, "numer": 447, "object": [216, 222, 232], "one_hot": 322, "ones": 485, "ones_lik": 486, "oper": [21, 469, 489], "optim": [423, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "option": 355, "organ": 422, "other": 16, "outer": 473, "output": [215, 225, 226, 227, 239, 242], "overview": [3, 4, 10, 96, 97, 98, 99, 105, 106, 107, 109, 110, 111, 112, 119, 120, 121, 122, 127, 128, 129, 130, 131, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 355, 414, 415, 416, 417, 418, 422, 424, 434, 448, 451, 463, 568, 572], "pad": 539, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 347, 349, 350, 351, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "parameterdict": 254, "parameterlist": 255, "pass": 211, "perform": [464, 525], "permut": 457, "pinv": 25, "pipelin": [3, 568], "pitfal": [449, 572], "pool": [285, 312, 376, 411], "potenti": 449, "power": 474, "pre": 571, "predict": [239, 242], "pretrain": 16, "process": [216, 218, 319], "propag": [239, 242], "properti": [251, 464], "provid": 572, "pvt": [108, 132], "pvt_huge": 134, "pvt_larg": 135, "pvt_medium": 136, "pvt_small": 137, "pvt_tini": 138, "pvt_v2": 133, "pvt_v2_b0": 139, "pvt_v2_b1": 140, "pvt_v2_b2": 141, "pvt_v2_b2_li": 142, "pvt_v2_b3": 143, "pvt_v2_b4": 144, "pvt_v2_b5": 145, "pyramid": 108, "qr": 26, "quickstart": 572, "r": [219, 222, 223, 224], "radam": 442, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 458, "randint": 459, "randn": 460, "random": [455, 456, 457, 458, 459, 460, 461, 462, 463], "randomcrop": 561, "randomgrayscal": 562, "randomhorizontalflip": 563, "randomrot": 564, "randomverticalflip": 565, "ravel": 540, "rearrang": [10, 13, 374], "reciproc": 508, "reduc": [10, 14], "reducelronplateau": 431, "refer": [5, 6, 7, 8, 330, 434], "register_model": 452, "regular": 278, "relu": [262, 332, 347], "relu6": 348, "repeat": [10, 15, 541], "represent": [55, 113, 447, 464], "requir": 215, "reshap": 542, "resiz": 566, "resnest": [108, 146], "resnest_101": 147, "resnest_14": 148, "resnest_200": 149, "resnest_26": 150, "resnest_269": 151, "resnest_50": 152, "resnest_50_1s4x24d": 153, "resnest_50_4s2x40d": 154, "resnet": [108, 155, 571], "resnet_1001": 156, "resnet_101": 157, "resnet_152": 158, "resnet_18": 159, "resnet_200": 160, "resnet_269": 161, "resnet_34": 162, "resnet_50": 163, "resnext": [108, 166, 571], "resnext_101_32x16d": 167, "resnext_101_32x32d": 168, "resnext_101_32x4d": 169, "resnext_101_32x8d": 170, "resnext_101_64x4d": 171, "resnext_50_32x4d": 172, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 220, 221, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 243, 244, 247, 248, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 331, 333, 335, 336, 337, 338, 339, 340, 348, 374, 412, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 569], "revers": 216, "rmsprop": 443, "roialign": 227, "roll": 543, "rotat": 323, "round": 509, "row": 523, "rprop": 444, "rule": [469, 476, 516, 526], "save": 454, "scale": 242, "scaled_dot_product_attent": 268, "scaleddotproductattent": 356, "schedul": 433, "se_resnet_101": 174, "se_resnet_152": 175, "se_resnet_18": 176, "se_resnet_34": 177, "se_resnet_50": 178, "se_resnext_101_32x4d": 179, "se_resnext_101_32x8d": 180, "se_resnext_101_64x4d": 181, "se_resnext_50_32x4d": 182, "see": 434, "seed": 461, "select": 332, "selectivekernel": 331, "selectivesearch": 228, "selu": [263, 349], "semodul": 330, "senet": [108, 173], "separ": 332, "sequenc": 245, "sequenti": 256, "seri": 235, "sgd": 445, "shape": 16, "sigmoid": [264, 350], "sign": 510, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "sin": 511, "sinh": 512, "sk_resnet_18": 184, "sk_resnet_34": 185, "sk_resnet_50": 186, "sk_resnext_50_32x4d": 187, "sknet": [108, 183], "softmax": [265, 351], "solv": 27, "sort": [525, 544], "spars": [376, 413], "spatial": [285, 318], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95], "split": 545, "sqrt": 513, "squar": 514, "squeez": [332, 546], "stabl": 525, "stack": 547, "start": 434, "state": [434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "steplr": 432, "sub": 475, "sum": 515, "surfac": 572, "svd": 28, "swap": 516, "swapax": 516, "swin": 108, "swin_bas": 190, "swin_larg": 191, "swin_smal": 192, "swin_tini": 193, "swin_v2_bas": 194, "swin_v2_giant": 195, "swin_v2_hug": 196, "swin_v2_larg": 197, "swin_v2_smal": 198, "swin_v2_tini": 199, "swintransform": 188, "swintransformer_v2": 189, "swish": 352, "switch": 16, "tan": 517, "tanh": [266, 353, 518], "tensor": [16, 450, 464, 476, 489, 522, 535], "tensordot": 476, "tile": 548, "topk": 549, "totensor": 558, "trace": 519, "track": 464, "train": [16, 216, 220, 221, 237, 238, 571], "transform": [108, 245, 246, 376, 414, 419, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "transformer_bas": 247, "transformer_big": 248, "transformerdecod": 415, "transformerdecoderlay": 416, "transformerencod": 417, "transformerencoderlay": 418, "transpos": 520, "tril": 550, "triu": 551, "typic": 572, "unari": 489, "unbind": 552, "unfold": [276, 364], "uniform": [338, 462], "uniqu": 553, "unsqueez": 554, "upsampl": 420, "us": [1, 65, 239, 242, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 464, 522, 572], "usag": [4, 88, 89, 90, 91, 97, 98, 99, 106, 107, 109, 110, 111, 112, 127, 128, 129, 130, 131, 179, 180, 181, 182, 187, 239, 240, 241, 242, 243, 244, 249, 323, 355, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 447, 449, 450, 537, 557, 558, 568], "user": 572, "util": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 285, 320, 535], "v1": [222, 236], "v2": [222, 239], "v3": [222, 242], "v4": 222, "vae": [215, 217], "valu": 545, "var": 521, "variant": [57, 59, 61], "variat": 217, "verif": 16, "vggnet": [108, 200, 571], "vggnet_11": 201, "vggnet_13": 202, "vggnet_16": 203, "vggnet_19": 204, "vision": [108, 218, 376, 421], "visual": [108, 569, 570], "vit": [108, 205], "vit_bas": 206, "vit_hug": 207, "vit_larg": 208, "vit_smal": 209, "vit_tini": 210, "vstack": 555, "weight": [16, 334, 571, 572], "where": 556, "wide_resnet_101": 164, "wide_resnet_50": 165, "work": [4, 449], "xavier_norm": 339, "xavier_uniform": 340, "xception": [108, 211, 212], "yolo": [222, 235, 236, 239, 242], "yolo_v1": 237, "yolo_v1_tini": 238, "yolo_v2": 240, "yolo_v2_tini": 241, "yolo_v3": 243, "yolo_v3_tini": 244, "zero": 487, "zeros_lik": 488, "zfnet": [108, 213, 214]}})