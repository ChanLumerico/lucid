Search.setIndex({"alltitles": {"@ Operator": [[410, "operator"]], "About Dagger (^\\dagger) Variants": [[161, "about-dagger-dagger-variants"], [163, "about-dagger-dagger-variants"], [165, "about-dagger-dagger-variants"]], "Activation Functions": [[223, null], [245, null]], "Activation Layers": [[307, null], [326, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[308, "additional-options"]], "Advanced Example with Dilation": [[236, "advanced-example-with-dilation"]], "Advanced Features": [[493, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [324, "advantages"]], "AlexNet": [[28, null], [85, "alexnet"]], "Algorithm": [[379, "algorithm"], [380, "algorithm"], [381, "algorithm"], [382, "algorithm"], [383, "algorithm"], [384, "algorithm"], [385, "algorithm"], [386, "algorithm"], [387, "algorithm"], [388, "algorithm"], [389, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"], [159, "architecture"], [174, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[230, null], [245, null]], "Attention Layers": [[310, null], [326, null]], "Attention Mechanism": [[231, "attention-mechanism"], [285, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [212, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [278, "attributes"], [279, "attributes"], [280, "attributes"], [281, "attributes"], [282, "attributes"], [283, "attributes"], [284, "attributes"], [295, "attributes"], [296, "attributes"], [299, "attributes"], [300, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [306, "attributes"], [311, "attributes"], [312, "attributes"], [313, "attributes"], [316, "attributes"], [318, "attributes"], [319, "attributes"], [320, "attributes"], [321, "attributes"], [322, "attributes"], [327, "attributes"], [328, "attributes"], [329, "attributes"], [331, "attributes"], [332, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [337, "attributes"], [338, "attributes"], [339, "attributes"], [341, "attributes"], [342, "attributes"], [343, "attributes"], [344, "attributes"], [346, "attributes"], [347, "attributes"], [348, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [352, "attributes"], [353, "attributes"], [354, "attributes"], [391, "attributes"], [405, "attributes"], [484, "attributes"], [485, "attributes"], [486, "attributes"], [487, "attributes"], [488, "attributes"], [489, "attributes"], [490, "attributes"], [491, "attributes"]], "Automatic Differentiation (Autodiff)": [[15, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[454, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [414, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [416, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [437, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [441, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [452, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [456, "backward-gradient-calculation"], [457, "backward-gradient-calculation"], [458, "backward-gradient-calculation"], [459, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [463, "backward-gradient-calculation"], [465, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [470, "backward-gradient-calculation"], [471, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [476, "backward-gradient-calculation"], [477, "backward-gradient-calculation"], [478, "backward-gradient-calculation"], [479, "backward-gradient-calculation"], [480, "backward-gradient-calculation"], [481, "backward-gradient-calculation"]], "Base Class": [[377, null]], "Basic Installation": [[15, "basic-installation"]], "Behavior": [[261, "behavior"], [262, "behavior"], [263, "behavior"], [346, "behavior"], [347, "behavior"], [348, "behavior"]], "Benefits": [[392, "benefits"], [395, "benefits"]], "Binary Functions": [[429, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[461, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [159, "class-signature"], [169, "class-signature"], [174, "class-signature"], [194, "class-signature"], [195, "class-signature"], [206, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"], [308, "class-signature"], [309, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [316, "class-signature"], [317, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [324, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [337, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [356, "class-signature"], [358, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [364, "class-signature"], [367, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [379, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [388, "class-signature"], [389, "class-signature"], [391, "class-signature"], [405, "class-signature"], [482, "class-signature"], [483, "class-signature"], [484, "class-signature"], [485, "class-signature"], [486, "class-signature"], [487, "class-signature"], [488, "class-signature"], [489, "class-signature"], [490, "class-signature"], [491, "class-signature"]], "CoAtNet": [[30, null], [85, "coatnet"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [324, "conclusion"], [366, "conclusion"], [368, "conclusion"], [393, "conclusion"], [394, "conclusion"], [404, "conclusion"], [483, "conclusion"], [493, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[220, null]], "Conv-BatchNorm-ReLU": [[286, null]], "ConvNeXt": [[39, null], [85, "convnext"]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null]], "Convolution Functions": [[235, null], [245, null]], "Convolution Layers": [[315, null], [326, null]], "Convolutional Transformer (CvT)": [[173, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[460, null]], "Creating a Parameter": [[214, null]], "Creating a tensor on GPU with gradient tracking": [[405, null]], "CrossViT": [[159, null], [173, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[493, "custom-pipelines"]], "CvT": [[169, null]], "Defining a Custom Optimizer": [[378, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[213, null]], "Defining a custom optimizer": [[367, null]], "DenseNet": [[54, null], [85, "densenet"]], "Depthwise Separable Convolution": [[286, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [396, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Device-based dtype inference": [[405, null]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[244, null], [245, null]], "Dropout Layers": [[323, null], [326, null]], "Educational by Design": [[15, "educational-by-design"]], "EfficientNet": [[59, null], [85, "efficientnet"]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[325, null], [326, null]], "Embedding Process": [[274, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[15, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [236, "example"], [366, null], [366, null], [366, null], [393, "example"], [397, "example"], [399, "example"], [400, "example"], [401, "example"], [402, "example"], [403, "example"], [404, null], [404, null], [404, null], [417, "example"], [418, "example"], [419, "example"], [420, "example"], [421, "example"], [425, "example"], [426, "example"], [427, "example"], [428, "example"], [430, "example"], [431, "example"], [432, "example"], [433, "example"], [435, "example"], [436, "example"], [437, "example"], [438, "example"], [441, "example"], [442, "example"], [444, "example"], [446, "example"], [448, "example"], [449, "example"], [450, "example"], [451, "example"], [452, "example"], [453, "example"], [455, "example"], [456, "example"], [457, "example"], [458, "example"], [459, "example"], [462, "example"], [463, "example"], [465, "example"], [470, "example"], [472, "example"], [475, "example"], [476, "example"], [478, "example"], [479, "example"], [480, "example"], [481, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[394, null]], "Example 2: Adding a new axis to a 2D tensor": [[394, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[394, null]], "Example Usage": [[74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [277, "example-usage"], [482, "example-usage"], [483, "example-usage"], [493, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [180, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [221, "examples"], [222, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [246, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [274, "examples"], [276, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [287, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [309, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [324, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [356, "examples"], [364, "examples"], [367, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [388, "examples"], [389, "examples"], [392, "examples"], [395, "examples"], [396, "examples"], [405, "examples"], [406, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [422, "examples"], [423, "examples"], [424, "examples"], [434, "examples"], [439, "examples"], [440, "examples"], [443, "examples"], [445, "examples"], [447, "examples"], [454, "examples"], [460, "examples"], [461, "examples"], [464, "examples"], [467, "examples"], [468, "examples"], [469, "examples"], [471, "examples"], [473, "examples"], [474, "examples"], [477, "examples"], [484, "examples"], [485, "examples"], [486, "examples"], [487, "examples"], [488, "examples"], [489, "examples"], [490, "examples"], [491, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [236, "forward-calculation"], [239, "forward-calculation"], [246, "forward-calculation"], [248, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [276, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [309, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [406, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [437, "forward-calculation"], [438, "forward-calculation"], [439, "forward-calculation"], [441, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [448, "forward-calculation"], [449, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [452, "forward-calculation"], [453, "forward-calculation"], [455, "forward-calculation"], [456, "forward-calculation"], [457, "forward-calculation"], [458, "forward-calculation"], [459, "forward-calculation"], [463, "forward-calculation"], [465, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [471, "forward-calculation"], [472, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"], [477, "forward-calculation"], [478, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [481, "forward-calculation"], [484, "forward-calculation"], [485, "forward-calculation"], [486, "forward-calculation"], [487, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [490, "forward-calculation"], [491, "forward-calculation"]], "Forward Method": [[358, "forward-method"], [359, "forward-method"], [360, "forward-method"], [361, "forward-method"], [362, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [221, "function-signature"], [222, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [246, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [274, "function-signature"], [276, "function-signature"], [277, "function-signature"], [287, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [392, "function-signature"], [393, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [406, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"]], "Fused Layers": [[286, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[378, "getting-started"]], "Gradient Computation": [[462, "gradient-computation"], [467, "gradient-computation"], [473, "gradient-computation"]], "Gradient hooks": [[405, null]], "Hooks & Shape Alignment": [[15, "hooks-shape-alignment"]], "How It Works": [[393, "how-it-works"]], "How to Install": [[15, "how-to-install"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[492, null]], "Implementation Details": [[159, "implementation-details"], [174, "implementation-details"]], "Inception": [[73, null], [85, "inception"]], "Inception-ResNet": [[85, "inception-resnet"]], "InceptionNeXt": [[77, null], [85, "inceptionnext"]], "InceptionResNet": [[82, null]], "Inspecting Optimizer State": [[378, null], [379, null], [380, null], [381, null], [382, null], [383, null], [384, null], [385, null], [386, null], [387, null], [388, null], [389, null]], "Integration with lucid": [[3, "integration-with-lucid"], [366, "integration-with-lucid"], [404, "integration-with-lucid"], [493, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [366, "key-components"]], "Key Enhancements": [[181, "key-enhancements"]], "Key Features": [[4, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [378, "key-features"], [404, "key-features"]], "Key Transformations": [[493, "key-transformations"]], "LR Schedulers": [[377, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[85, "lenet"], [86, null]], "Learn More": [[404, null]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[245, null], [247, null]], "Linear Layers": [[326, null], [330, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[245, null], [252, null]], "Loss Layers": [[326, null], [336, null]], "Lucid\u00b2 \ud83d\udc8e": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [260, "mathematical-definition"], [324, "mathematical-definition"]], "Mathematical Details": [[308, "mathematical-details"], [358, "mathematical-details"], [359, "mathematical-details"], [360, "mathematical-details"], [361, "mathematical-details"], [362, "mathematical-details"]], "Mathematical Expression": [[256, "mathematical-expression"], [434, "mathematical-expression"], [440, "mathematical-expression"], [447, "mathematical-expression"], [474, "mathematical-expression"]], "Mathematical Formula": [[369, "mathematical-formula"], [370, "mathematical-formula"], [371, "mathematical-formula"], [373, "mathematical-formula"], [374, "mathematical-formula"], [375, "mathematical-formula"], [376, "mathematical-formula"]], "Mathematical Representation": [[159, "mathematical-representation"], [174, "mathematical-representation"], [405, "mathematical-representation"]], "Matrix Multiplication Rules": [[410, "matrix-multiplication-rules"]], "MaxViT": [[173, "maxvit"], [174, null]], "Metadata Captured": [[396, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[15, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [213, "methods"], [214, "methods"], [367, "methods"], [369, "methods"], [370, "methods"], [371, "methods"], [372, "methods"], [373, "methods"], [374, "methods"], [375, "methods"], [376, "methods"], [391, "methods"], [405, "methods"]], "MobileNet": [[85, "mobilenet"], [90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Model Configuration": [[175, "model-configuration"], [176, "model-configuration"], [177, "model-configuration"], [178, "model-configuration"], [179, "model-configuration"]], "Modules": [[326, null]], "Moving tensor between devices": [[405, null]], "Neural Networks with lucid.nn": [[15, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[245, null], [257, null]], "Normalization Layers": [[326, null], [345, null]], "Notes": [[272, "notes"], [422, "notes"], [423, "notes"]], "Optimizers": [[390, null]], "Organizing Models": [[366, "organizing-models"]], "Others": [[15, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [308, "overview"], [358, "overview"], [359, "overview"], [360, "overview"], [361, "overview"], [362, "overview"], [366, "overview"], [368, "overview"], [378, "overview"], [392, "overview"], [395, "overview"], [404, "overview"], [493, "overview"]], "PVT": [[180, null]], "PVT_V2": [[181, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [221, "parameters"], [222, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [246, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [274, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [287, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [299, "parameters"], [300, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [306, "parameters"], [308, "parameters"], [309, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [324, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [356, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [364, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [391, "parameters"], [392, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"]], "Performing backpropagation": [[405, null]], "Pooling Functions": [[245, null], [267, null]], "Pooling Layers": [[326, null], [355, null]], "Potential Pitfalls": [[393, "potential-pitfalls"]], "Properties": [[214, "properties"], [405, "properties"]], "Pyramid Vision Transformer (PVT)": [[173, "pyramid-vision-transformer-pvt"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[398, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [284, "references"], [378, "references"]], "Regularization": [[238, "regularization"]], "Representation": [[391, "representation"]], "ResNeSt": [[85, "resnest"], [103, null]], "ResNeXt": [[85, "resnext"], [123, null]], "ResNet": [[85, "resnet"], [112, null]], "Return Values": [[474, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [221, "returns"], [222, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [246, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [274, "returns"], [276, "returns"], [277, "returns"], [285, "returns"], [287, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [301, "returns"], [324, "returns"], [356, "returns"], [392, "returns"], [393, "returns"], [395, "returns"], [397, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"]], "SENet": [[85, "senet"], [130, null]], "SKNet": [[85, "sknet"], [140, null]], "Schedulers": [[377, null]], "See Also": [[378, "see-also"]], "Selective Kernel": [[286, null]], "Sparse Layers": [[326, null], [357, null]], "Spatial Functions": [[245, null], [273, null]], "Specifications": [[160, "specifications"], [161, "specifications"], [162, "specifications"], [163, "specifications"], [164, "specifications"], [165, "specifications"], [166, "specifications"], [167, "specifications"], [168, "specifications"]], "Squeeze-and-Excitation": [[286, null]], "Summary Table": [[155, "summary-table"]], "Swin Transformer": [[173, "swin-transformer"]], "SwinTransformer": [[194, null]], "SwinTransformer_V2": [[195, null]], "Switching Between Devices": [[15, "switching-between-devices"]], "Tensor Generating Functions": [[429, null]], "Tensor Operations": [[429, null]], "Tensor Utilites": [[466, null]], "Tensor: The Core Abstraction": [[15, "tensor-the-core-abstraction"]], "Training & Evaluation": [[15, "training-evaluation"]], "Transformer": [[156, null], [173, "transformer"]], "Transformer Layers": [[326, null], [363, null]], "Transformers": [[173, null]], "Unary Functions": [[429, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [212, "usage"], [277, "usage"], [368, "usage"], [393, "usage"], [394, "usage"], [468, "usage"], [482, "usage"], [483, "usage"], [493, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [308, "usage-example"], [358, "usage-example"], [359, "usage-example"], [360, "usage-example"], [361, "usage-example"], [362, "usage-example"], [369, "usage-example"], [370, "usage-example"], [371, "usage-example"], [372, "usage-example"], [373, "usage-example"], [374, "usage-example"], [375, "usage-example"], [376, "usage-example"]], "Usage Examples": [[391, "usage-examples"]], "Use another Tensor as input": [[460, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[405, null]], "Using the ASGD Optimizer": [[379, null]], "Using the Adadelta Optimizer": [[380, null]], "Using the Adagrad Optimizer": [[381, null]], "Using the Adam Optimizer": [[382, null]], "Using the AdamW Optimizer": [[383, null]], "Using the Adamax Optimizer": [[384, null]], "Using the NAdam Optimizer": [[385, null]], "Using the RAdam Optimizer": [[386, null]], "Using the RMSprop Optimizer": [[387, null]], "Using the Rprop Optimizer": [[388, null]], "Using the SGD Optimizer": [[389, null]], "Utility Functions": [[245, null], [275, null]], "VGGNet": [[85, "vggnet"], [145, null]], "Verification": [[15, "verification"]], "ViT": [[206, null]], "Vision Layers": [[326, null], [365, null]], "Visual Transformer (ViT)": [[173, "visual-transformer-vit"]], "Weight Initializations": [[288, null]], "Xception": [[85, "xception"], [150, null]], "ZFNet": [[85, "zfnet"], [152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "crossvit_15": [[160, null]], "crossvit_15_dagger": [[161, null]], "crossvit_18": [[162, null]], "crossvit_18_dagger": [[163, null]], "crossvit_9": [[164, null]], "crossvit_9_dagger": [[165, null]], "crossvit_base": [[166, null]], "crossvit_small": [[167, null]], "crossvit_tiny": [[168, null]], "cvt_13": [[170, null]], "cvt_21": [[171, null]], "cvt_w24": [[172, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[369, null]], "lr_scheduler.CyclicLR": [[370, null]], "lr_scheduler.ExponentialLR": [[371, null]], "lr_scheduler.LRScheduler": [[372, null]], "lr_scheduler.LambdaLR": [[373, null]], "lr_scheduler.MultiStepLR": [[374, null]], "lr_scheduler.ReduceLROnPlateau": [[375, null]], "lr_scheduler.StepLR": [[376, null]], "lucid.Numeric": [[391, null]], "lucid.Tensor": [[405, null]], "lucid.abs": [[430, null]], "lucid.add": [[406, null]], "lucid.arange": [[417, null]], "lucid.arccos": [[431, null]], "lucid.arcsin": [[432, null]], "lucid.arctan": [[433, null]], "lucid.broadcast_to": [[461, null]], "lucid.ceil": [[434, null]], "lucid.chunk": [[462, null]], "lucid.clip": [[435, null]], "lucid.concatenate": [[463, null]], "lucid.cos": [[436, null]], "lucid.cosh": [[437, null]], "lucid.count_flops": [[392, null]], "lucid.cube": [[438, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[418, null]], "lucid.div": [[407, null]], "lucid.dot": [[408, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[419, null]], "lucid.empty_like": [[420, null]], "lucid.exp": [[439, null]], "lucid.eye": [[421, null]], "lucid.flatten": [[464, null]], "lucid.floor": [[440, null]], "lucid.full": [[422, null]], "lucid.full_like": [[423, null]], "lucid.grad_enabled": [[393, null]], "lucid.hstack": [[465, null]], "lucid.inner": [[409, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[424, null]], "lucid.log": [[441, null]], "lucid.log2": [[442, null]], "lucid.masked_fill": [[467, null]], "lucid.matmul": [[410, null]], "lucid.max": [[443, null]], "lucid.maximum": [[411, null]], "lucid.mean": [[444, null]], "lucid.meshgrid": [[468, null]], "lucid.min": [[445, null]], "lucid.minimum": [[412, null]], "lucid.models": [[154, null]], "lucid.multiply": [[413, null]], "lucid.newaxis": [[394, null]], "lucid.nn": [[366, null]], "lucid.nn.functional": [[245, null]], "lucid.no_grad": [[395, null]], "lucid.ones": [[425, null]], "lucid.ones_like": [[426, null]], "lucid.optim": [[378, null]], "lucid.outer": [[414, null]], "lucid.pad": [[469, null]], "lucid.power": [[415, null]], "lucid.random": [[404, null]], "lucid.random.bernoulli": [[397, null]], "lucid.random.rand": [[399, null]], "lucid.random.randint": [[400, null]], "lucid.random.randn": [[401, null]], "lucid.random.seed": [[402, null]], "lucid.random.uniform": [[403, null]], "lucid.ravel": [[470, null]], "lucid.reciprocal": [[446, null]], "lucid.register_model": [[396, null]], "lucid.repeat": [[471, null]], "lucid.reshape": [[472, null]], "lucid.roll": [[473, null]], "lucid.round": [[447, null]], "lucid.sign": [[448, null]], "lucid.sin": [[449, null]], "lucid.sinh": [[450, null]], "lucid.split": [[474, null]], "lucid.sqrt": [[451, null]], "lucid.square": [[452, null]], "lucid.squeeze": [[475, null]], "lucid.stack": [[476, null]], "lucid.sub": [[416, null]], "lucid.sum": [[453, null]], "lucid.swapaxes": [[454, null]], "lucid.tan": [[455, null]], "lucid.tanh": [[456, null]], "lucid.tensor": [[460, null]], "lucid.tile": [[477, null]], "lucid.trace": [[457, null]], "lucid.transforms": [[493, null]], "lucid.transpose": [[458, null]], "lucid.tril": [[478, null]], "lucid.triu": [[479, null]], "lucid.unsqueeze": [[480, null]], "lucid.var": [[459, null]], "lucid.vstack": [[481, null]], "lucid.zeros": [[427, null]], "lucid.zeros_like": [[428, null]], "maxvit_base": [[175, null], [176, null]], "maxvit_small": [[177, null]], "maxvit_tiny": [[178, null]], "maxvit_xlarge": [[179, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[346, null]], "nn.AdaptiveAvgPool2d": [[347, null]], "nn.AdaptiveAvgPool3d": [[348, null]], "nn.AlphaDropout": [[316, null]], "nn.AvgPool1d": [[349, null]], "nn.AvgPool2d": [[350, null]], "nn.AvgPool3d": [[351, null]], "nn.BCELoss": [[331, null]], "nn.BatchNorm1d": [[337, null]], "nn.BatchNorm2d": [[338, null]], "nn.BatchNorm3d": [[339, null]], "nn.Bilinear": [[327, null]], "nn.Buffer": [[212, null]], "nn.Conv1d": [[311, null]], "nn.Conv2d": [[312, null]], "nn.Conv3d": [[313, null]], "nn.ConvBNReLU1d": [[278, null]], "nn.ConvBNReLU2d": [[279, null]], "nn.ConvBNReLU3d": [[280, null]], "nn.CrossEntropyLoss": [[332, null]], "nn.DepthSeparableConv1d": [[281, null]], "nn.DepthSeparableConv2d": [[282, null]], "nn.DepthSeparableConv3d": [[283, null]], "nn.DropBlock": [[317, null]], "nn.DropPath": [[318, null]], "nn.Dropout": [[319, null]], "nn.Dropout1d": [[320, null]], "nn.Dropout2d": [[321, null]], "nn.Dropout3d": [[322, null]], "nn.ELU": [[295, null]], "nn.Embedding": [[356, null]], "nn.GELU": [[296, null]], "nn.GlobalResponseNorm": [[340, null]], "nn.HardSigmoid": [[297, null]], "nn.HardSwish": [[298, null]], "nn.HuberLoss": [[333, null]], "nn.Identity": [[328, null]], "nn.InstanceNorm1d": [[341, null]], "nn.InstanceNorm2d": [[342, null]], "nn.InstanceNorm3d": [[343, null]], "nn.LayerNorm": [[344, null]], "nn.LeakyReLU": [[299, null]], "nn.Linear": [[329, null]], "nn.MSELoss": [[334, null]], "nn.MaxPool1d": [[352, null]], "nn.MaxPool2d": [[353, null]], "nn.MaxPool3d": [[354, null]], "nn.Module": [[213, null]], "nn.ModuleDict": [[215, null]], "nn.ModuleList": [[216, null]], "nn.MultiHeadAttention": [[308, null]], "nn.NLLLoss": [[335, null]], "nn.Parameter": [[214, null]], "nn.ParameterDict": [[217, null]], "nn.ParameterList": [[218, null]], "nn.ReLU": [[300, null]], "nn.ReLU6": [[301, null]], "nn.Rearrange": [[324, null]], "nn.SELU": [[302, null]], "nn.SEModule": [[284, null]], "nn.ScaledDotProductAttention": [[309, null]], "nn.SelectiveKernel": [[285, null]], "nn.Sequential": [[219, null]], "nn.Sigmoid": [[303, null]], "nn.Softmax": [[304, null]], "nn.Swish": [[305, null]], "nn.Tanh": [[306, null]], "nn.Transformer": [[358, null]], "nn.TransformerDecoder": [[359, null]], "nn.TransformerDecoderLayer": [[360, null]], "nn.TransformerEncoder": [[361, null]], "nn.TransformerEncoderLayer": [[362, null]], "nn.Unfold": [[314, null]], "nn.Upsample": [[364, null]], "nn.functional.adaptive_avg_pool1d": [[261, null]], "nn.functional.adaptive_avg_pool2d": [[262, null]], "nn.functional.adaptive_avg_pool3d": [[263, null]], "nn.functional.affine_grid": [[271, null]], "nn.functional.alpha_dropout": [[237, null]], "nn.functional.avg_pool1d": [[264, null]], "nn.functional.avg_pool2d": [[265, null]], "nn.functional.avg_pool3d": [[266, null]], "nn.functional.batch_norm": [[255, null]], "nn.functional.bilinear": [[246, null]], "nn.functional.binary_cross_entropy": [[249, null]], "nn.functional.conv1d": [[232, null]], "nn.functional.conv2d": [[233, null]], "nn.functional.conv3d": [[234, null]], "nn.functional.cross_entropy": [[250, null]], "nn.functional.drop_block": [[238, null]], "nn.functional.drop_path": [[239, null]], "nn.functional.dropout": [[240, null]], "nn.functional.dropout1d": [[241, null]], "nn.functional.dropout2d": [[242, null]], "nn.functional.dropout3d": [[243, null]], "nn.functional.elu": [[221, null]], "nn.functional.embedding": [[274, null]], "nn.functional.gelu": [[222, null]], "nn.functional.global_response_norm": [[256, null]], "nn.functional.grid_sample": [[272, null]], "nn.functional.huber_loss": [[251, null]], "nn.functional.instance_norm": [[258, null]], "nn.functional.interpolate": [[276, null]], "nn.functional.layer_norm": [[259, null]], "nn.functional.leaky_relu": [[224, null]], "nn.functional.linear": [[248, null]], "nn.functional.max_pool1d": [[268, null]], "nn.functional.max_pool2d": [[269, null]], "nn.functional.max_pool3d": [[270, null]], "nn.functional.mse_loss": [[253, null]], "nn.functional.nll_loss": [[254, null]], "nn.functional.normalize": [[260, null]], "nn.functional.relu": [[225, null]], "nn.functional.rotate": [[277, null]], "nn.functional.scaled_dot_product_attention": [[231, null]], "nn.functional.selu": [[226, null]], "nn.functional.sigmoid": [[227, null]], "nn.functional.softmax": [[228, null]], "nn.functional.tanh": [[229, null]], "nn.functional.unfold": [[236, null]], "nn.init.constant": [[287, null]], "nn.init.kaiming_normal": [[289, null]], "nn.init.kaiming_uniform": [[290, null]], "nn.init.normal": [[291, null]], "nn.init.uniform": [[292, null]], "nn.init.xavier_normal": [[293, null]], "nn.init.xavier_uniform": [[294, null]], "optim.ASGD": [[379, null]], "optim.Adadelta": [[380, null]], "optim.Adagrad": [[381, null]], "optim.Adam": [[382, null]], "optim.AdamW": [[383, null]], "optim.Adamax": [[384, null]], "optim.NAdam": [[385, null]], "optim.Optimizer": [[367, null]], "optim.RAdam": [[386, null]], "optim.RMSprop": [[387, null]], "optim.Rprop": [[388, null]], "optim.SGD": [[389, null]], "optim.lr_scheduler": [[368, null]], "pvt_huge": [[182, null]], "pvt_large": [[183, null]], "pvt_medium": [[184, null]], "pvt_small": [[185, null]], "pvt_tiny": [[186, null]], "pvt_v2_b0": [[187, null]], "pvt_v2_b1": [[188, null]], "pvt_v2_b2": [[189, null]], "pvt_v2_b2_li": [[190, null]], "pvt_v2_b3": [[191, null]], "pvt_v2_b4": [[192, null]], "pvt_v2_b5": [[193, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[196, null]], "swin_large": [[197, null]], "swin_small": [[198, null]], "swin_tiny": [[199, null]], "swin_v2_base": [[200, null]], "swin_v2_giant": [[201, null]], "swin_v2_huge": [[202, null]], "swin_v2_large": [[203, null]], "swin_v2_small": [[204, null]], "swin_v2_tiny": [[205, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[484, null]], "transforms.Compose": [[482, null]], "transforms.Normalize": [[485, null]], "transforms.RandomCrop": [[486, null]], "transforms.RandomGrayscale": [[487, null]], "transforms.RandomHorizontalFlip": [[488, null]], "transforms.RandomRotation": [[489, null]], "transforms.RandomVerticalFlip": [[490, null]], "transforms.Resize": [[491, null]], "transforms.ToTensor": [[483, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[207, null]], "vit_huge": [[208, null]], "vit_large": [[209, null]], "vit_small": [[210, null]], "vit_tiny": [[211, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/crossvit/CrossViT", "models/transformer/crossvit/crossvit_15", "models/transformer/crossvit/crossvit_15_dagger", "models/transformer/crossvit/crossvit_18", "models/transformer/crossvit/crossvit_18_dagger", "models/transformer/crossvit/crossvit_9", "models/transformer/crossvit/crossvit_9_dagger", "models/transformer/crossvit/crossvit_base", "models/transformer/crossvit/crossvit_small", "models/transformer/crossvit/crossvit_tiny", "models/transformer/cvt/CvT", "models/transformer/cvt/cvt_13", "models/transformer/cvt/cvt_21", "models/transformer/cvt/cvt_w24", "models/transformer/index", "models/transformer/maxvit/MaxViT", "models/transformer/maxvit/maxvit_base", "models/transformer/maxvit/maxvit_large", "models/transformer/maxvit/maxvit_small", "models/transformer/maxvit/maxvit_tiny", "models/transformer/maxvit/maxvit_xlarge", "models/transformer/pvt/PVT", "models/transformer/pvt/PVT_V2", "models/transformer/pvt/pvt_huge", "models/transformer/pvt/pvt_large", "models/transformer/pvt/pvt_medium", "models/transformer/pvt/pvt_small", "models/transformer/pvt/pvt_tiny", "models/transformer/pvt/pvt_v2_b0", "models/transformer/pvt/pvt_v2_b1", "models/transformer/pvt/pvt_v2_b2", "models/transformer/pvt/pvt_v2_b2_li", "models/transformer/pvt/pvt_v2_b3", "models/transformer/pvt/pvt_v2_b4", "models/transformer/pvt/pvt_v2_b5", "models/transformer/swin/SwinTransformer", "models/transformer/swin/SwinTransformer_V2", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/swin/swin_v2_base", "models/transformer/swin/swin_v2_giant", "models/transformer/swin/swin_v2_huge", "models/transformer/swin/swin_v2_large", "models/transformer/swin/swin_v2_small", "models/transformer/swin/swin_v2_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/crossvit/CrossViT.rst", "models/transformer/crossvit/crossvit_15.rst", "models/transformer/crossvit/crossvit_15_dagger.rst", "models/transformer/crossvit/crossvit_18.rst", "models/transformer/crossvit/crossvit_18_dagger.rst", "models/transformer/crossvit/crossvit_9.rst", "models/transformer/crossvit/crossvit_9_dagger.rst", "models/transformer/crossvit/crossvit_base.rst", "models/transformer/crossvit/crossvit_small.rst", "models/transformer/crossvit/crossvit_tiny.rst", "models/transformer/cvt/CvT.rst", "models/transformer/cvt/cvt_13.rst", "models/transformer/cvt/cvt_21.rst", "models/transformer/cvt/cvt_w24.rst", "models/transformer/index.rst", "models/transformer/maxvit/MaxViT.rst", "models/transformer/maxvit/maxvit_base.rst", "models/transformer/maxvit/maxvit_large.rst", "models/transformer/maxvit/maxvit_small.rst", "models/transformer/maxvit/maxvit_tiny.rst", "models/transformer/maxvit/maxvit_xlarge.rst", "models/transformer/pvt/PVT.rst", "models/transformer/pvt/PVT_V2.rst", "models/transformer/pvt/pvt_huge.rst", "models/transformer/pvt/pvt_large.rst", "models/transformer/pvt/pvt_medium.rst", "models/transformer/pvt/pvt_small.rst", "models/transformer/pvt/pvt_tiny.rst", "models/transformer/pvt/pvt_v2_b0.rst", "models/transformer/pvt/pvt_v2_b1.rst", "models/transformer/pvt/pvt_v2_b2.rst", "models/transformer/pvt/pvt_v2_b2_li.rst", "models/transformer/pvt/pvt_v2_b3.rst", "models/transformer/pvt/pvt_v2_b4.rst", "models/transformer/pvt/pvt_v2_b5.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/SwinTransformer_V2.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/swin/swin_v2_base.rst", "models/transformer/swin/swin_v2_giant.rst", "models/transformer/swin/swin_v2_huge.rst", "models/transformer/swin/swin_v2_large.rst", "models/transformer/swin/swin_v2_small.rst", "models/transformer/swin/swin_v2_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[430, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[380, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[381, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[382, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[384, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[383, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[346, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[347, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[348, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[406, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[271, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[316, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[417, "lucid.arange", false]], "arccos() (in module lucid)": [[431, "lucid.arccos", false]], "arcsin() (in module lucid)": [[432, "lucid.arcsin", false]], "arctan() (in module lucid)": [[433, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[379, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[349, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[350, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[351, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[337, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[338, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[339, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[331, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[397, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[327, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[461, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[212, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[434, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[484, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[462, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[435, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[482, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[463, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[287, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[311, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[312, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[313, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[278, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[279, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[280, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[436, "lucid.cos", false]], "cosh() (in module lucid)": [[437, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[369, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[392, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[332, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[159, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[160, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[161, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[162, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[163, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[164, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[165, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[166, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[167, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[168, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[438, "lucid.cube", false]], "cvt (class in lucid.models)": [[169, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[170, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[171, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[172, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[370, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[281, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[282, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[283, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[418, "lucid.diag", false]], "div() (in module lucid)": [[407, "lucid.div", false]], "dot() (in module lucid)": [[408, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[317, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[319, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[320, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[241, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[321, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[322, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[318, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[295, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[356, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[419, "lucid.empty", false]], "empty_like() (in module lucid)": [[420, "lucid.empty_like", false]], "exp() (in module lucid)": [[439, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[371, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[421, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[464, "lucid.flatten", false]], "floor() (in module lucid)": [[440, "lucid.floor", false]], "full() (in module lucid)": [[422, "lucid.full", false]], "full_like() (in module lucid)": [[423, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[296, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[340, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[393, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.grid_sample", false]], "hardsigmoid (class in lucid.nn)": [[297, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[298, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[465, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[251, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[333, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[328, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[409, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[341, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[342, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[343, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[289, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[290, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[373, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[259, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[344, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[299, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[329, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[424, "lucid.linspace", false]], "log() (in module lucid)": [[441, "lucid.log", false]], "log2() (in module lucid)": [[442, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[372, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[467, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[410, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[443, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[269, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[411, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[352, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[353, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[354, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[174, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[175, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[176, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[177, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[178, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[179, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[444, "lucid.mean", false]], "meshgrid() (in module lucid)": [[468, "lucid.meshgrid", false]], "min() (in module lucid)": [[445, "lucid.min", false]], "minimum() (in module lucid)": [[412, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[213, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[215, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[216, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[334, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[308, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[413, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[374, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[385, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[335, "lucid.nn.NLLLoss", false]], "no_grad (in module lucid)": [[395, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[291, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[485, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[391, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[425, "lucid.ones", false]], "ones_like() (in module lucid)": [[426, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[367, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[414, "lucid.outer", false]], "pad() (in module lucid)": [[469, "lucid.pad", false]], "parameter (class in lucid.nn)": [[214, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[217, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[218, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[415, "lucid.power", false]], "pvt (class in lucid.models)": [[180, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[182, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[183, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[184, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[185, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[186, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[181, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[187, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[188, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[189, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[190, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[191, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[192, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[193, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[386, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[399, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[400, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[401, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[486, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[487, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[488, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[489, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[490, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[470, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[324, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[446, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[375, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[396, "lucid.register_model", false]], "relu (class in lucid.nn)": [[300, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[301, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[471, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[472, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[491, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[387, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[473, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[447, "lucid.round", false]], "rprop (class in lucid.optim)": [[388, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[309, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[402, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[285, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[302, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[284, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[219, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[389, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[303, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[448, "lucid.sign", false]], "sin() (in module lucid)": [[449, "lucid.sin", false]], "sinh() (in module lucid)": [[450, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[304, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[474, "lucid.split", false]], "sqrt() (in module lucid)": [[451, "lucid.sqrt", false]], "square() (in module lucid)": [[452, "lucid.square", false]], "squeeze() (in module lucid)": [[475, "lucid.squeeze", false]], "stack() (in module lucid)": [[476, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[376, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[416, "lucid.sub", false]], "sum() (in module lucid)": [[453, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[454, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[196, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[197, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[198, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[199, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[200, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[201, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[202, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[203, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[204, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[205, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[194, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[195, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[305, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[455, "lucid.tan", false]], "tanh (class in lucid.nn)": [[306, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[456, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[229, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[405, "lucid.Tensor", false]], "tensor() (in module lucid)": [[460, "lucid.tensor", false]], "tile() (in module lucid)": [[477, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[483, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[457, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[358, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[359, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[360, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[361, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[362, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[458, "lucid.transpose", false]], "tril() (in module lucid)": [[478, "lucid.tril", false]], "triu() (in module lucid)": [[479, "lucid.triu", false]], "unfold (class in lucid.nn)": [[314, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[236, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[292, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[403, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[480, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[364, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[459, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[206, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[207, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[208, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[209, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[210, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[211, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[481, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[293, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[294, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[427, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[428, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[405, 1, 1, "", "Tensor"], [430, 2, 1, "", "abs"], [406, 2, 1, "", "add"], [417, 2, 1, "", "arange"], [431, 2, 1, "", "arccos"], [432, 2, 1, "", "arcsin"], [433, 2, 1, "", "arctan"], [461, 2, 1, "", "broadcast_to"], [434, 2, 1, "", "ceil"], [462, 2, 1, "", "chunk"], [435, 2, 1, "", "clip"], [463, 2, 1, "", "concatenate"], [436, 2, 1, "", "cos"], [437, 2, 1, "", "cosh"], [392, 2, 1, "", "count_flops"], [438, 2, 1, "", "cube"], [418, 2, 1, "", "diag"], [407, 2, 1, "", "div"], [408, 2, 1, "", "dot"], [419, 2, 1, "", "empty"], [420, 2, 1, "", "empty_like"], [439, 2, 1, "", "exp"], [421, 2, 1, "", "eye"], [464, 2, 1, "", "flatten"], [440, 2, 1, "", "floor"], [422, 2, 1, "", "full"], [423, 2, 1, "", "full_like"], [393, 2, 1, "", "grad_enabled"], [465, 2, 1, "", "hstack"], [409, 2, 1, "", "inner"], [424, 2, 1, "", "linspace"], [441, 2, 1, "", "log"], [442, 2, 1, "", "log2"], [467, 2, 1, "", "masked_fill"], [410, 2, 1, "", "matmul"], [443, 2, 1, "", "max"], [411, 2, 1, "", "maximum"], [444, 2, 1, "", "mean"], [468, 2, 1, "", "meshgrid"], [445, 2, 1, "", "min"], [412, 2, 1, "", "minimum"], [413, 2, 1, "", "multiply"], [395, 3, 1, "", "no_grad"], [425, 2, 1, "", "ones"], [426, 2, 1, "", "ones_like"], [414, 2, 1, "", "outer"], [469, 2, 1, "", "pad"], [415, 2, 1, "", "power"], [470, 2, 1, "", "ravel"], [446, 2, 1, "", "reciprocal"], [396, 2, 1, "", "register_model"], [471, 2, 1, "", "repeat"], [472, 2, 1, "", "reshape"], [473, 2, 1, "", "roll"], [447, 2, 1, "", "round"], [448, 2, 1, "", "sign"], [449, 2, 1, "", "sin"], [450, 2, 1, "", "sinh"], [474, 2, 1, "", "split"], [451, 2, 1, "", "sqrt"], [452, 2, 1, "", "square"], [475, 2, 1, "", "squeeze"], [476, 2, 1, "", "stack"], [416, 2, 1, "", "sub"], [453, 2, 1, "", "sum"], [454, 2, 1, "", "swapaxes"], [455, 2, 1, "", "tan"], [456, 2, 1, "", "tanh"], [460, 2, 1, "", "tensor"], [477, 2, 1, "", "tile"], [457, 2, 1, "", "trace"], [458, 2, 1, "", "transpose"], [478, 2, 1, "", "tril"], [479, 2, 1, "", "triu"], [480, 2, 1, "", "unsqueeze"], [459, 2, 1, "", "var"], [481, 2, 1, "", "vstack"], [427, 2, 1, "", "zeros"], [428, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [159, 1, 1, "", "CrossViT"], [169, 1, 1, "", "CvT"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [174, 1, 1, "", "MaxViT"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [180, 1, 1, "", "PVT"], [181, 1, 1, "", "PVT_V2"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [194, 1, 1, "", "SwinTransformer"], [195, 1, 1, "", "SwinTransformer_V2"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [206, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [160, 2, 1, "", "crossvit_15"], [161, 2, 1, "", "crossvit_15_dagger"], [162, 2, 1, "", "crossvit_18"], [163, 2, 1, "", "crossvit_18_dagger"], [164, 2, 1, "", "crossvit_9"], [165, 2, 1, "", "crossvit_9_dagger"], [166, 2, 1, "", "crossvit_base"], [167, 2, 1, "", "crossvit_small"], [168, 2, 1, "", "crossvit_tiny"], [170, 2, 1, "", "cvt_13"], [171, 2, 1, "", "cvt_21"], [172, 2, 1, "", "cvt_w24"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [175, 2, 1, "", "maxvit_base"], [176, 2, 1, "", "maxvit_large"], [177, 2, 1, "", "maxvit_small"], [178, 2, 1, "", "maxvit_tiny"], [179, 2, 1, "", "maxvit_xlarge"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [182, 2, 1, "", "pvt_huge"], [183, 2, 1, "", "pvt_large"], [184, 2, 1, "", "pvt_medium"], [185, 2, 1, "", "pvt_small"], [186, 2, 1, "", "pvt_tiny"], [187, 2, 1, "", "pvt_v2_b0"], [188, 2, 1, "", "pvt_v2_b1"], [189, 2, 1, "", "pvt_v2_b2"], [190, 2, 1, "", "pvt_v2_b2_li"], [191, 2, 1, "", "pvt_v2_b3"], [192, 2, 1, "", "pvt_v2_b4"], [193, 2, 1, "", "pvt_v2_b5"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [196, 2, 1, "", "swin_base"], [197, 2, 1, "", "swin_large"], [198, 2, 1, "", "swin_small"], [199, 2, 1, "", "swin_tiny"], [200, 2, 1, "", "swin_v2_base"], [201, 2, 1, "", "swin_v2_giant"], [202, 2, 1, "", "swin_v2_huge"], [203, 2, 1, "", "swin_v2_large"], [204, 2, 1, "", "swin_v2_small"], [205, 2, 1, "", "swin_v2_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [207, 2, 1, "", "vit_base"], [208, 2, 1, "", "vit_huge"], [209, 2, 1, "", "vit_large"], [210, 2, 1, "", "vit_small"], [211, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[346, 1, 1, "", "AdaptiveAvgPool1d"], [347, 1, 1, "", "AdaptiveAvgPool2d"], [348, 1, 1, "", "AdaptiveAvgPool3d"], [316, 1, 1, "", "AlphaDropout"], [349, 1, 1, "", "AvgPool1d"], [350, 1, 1, "", "AvgPool2d"], [351, 1, 1, "", "AvgPool3d"], [331, 1, 1, "", "BCELoss"], [337, 1, 1, "", "BatchNorm1d"], [338, 1, 1, "", "BatchNorm2d"], [339, 1, 1, "", "BatchNorm3d"], [327, 1, 1, "", "Bilinear"], [212, 1, 1, "", "Buffer"], [311, 1, 1, "", "Conv1d"], [312, 1, 1, "", "Conv2d"], [313, 1, 1, "", "Conv3d"], [278, 1, 1, "", "ConvBNReLU1d"], [279, 1, 1, "", "ConvBNReLU2d"], [280, 1, 1, "", "ConvBNReLU3d"], [332, 1, 1, "", "CrossEntropyLoss"], [281, 1, 1, "", "DepthSeparableConv1d"], [282, 1, 1, "", "DepthSeparableConv2d"], [283, 1, 1, "", "DepthSeparableConv3d"], [317, 1, 1, "", "DropBlock"], [318, 1, 1, "", "DropPath"], [319, 1, 1, "", "Dropout"], [320, 1, 1, "", "Dropout1d"], [321, 1, 1, "", "Dropout2d"], [322, 1, 1, "", "Dropout3d"], [295, 1, 1, "", "ELU"], [356, 1, 1, "", "Embedding"], [296, 1, 1, "", "GELU"], [340, 1, 1, "", "GlobalResponseNorm"], [297, 1, 1, "", "HardSigmoid"], [298, 1, 1, "", "HardSwish"], [333, 1, 1, "", "HuberLoss"], [328, 1, 1, "", "Identity"], [341, 1, 1, "", "InstanceNorm1d"], [342, 1, 1, "", "InstanceNorm2d"], [343, 1, 1, "", "InstanceNorm3d"], [344, 1, 1, "", "LayerNorm"], [299, 1, 1, "", "LeakyReLU"], [329, 1, 1, "", "Linear"], [334, 1, 1, "", "MSELoss"], [352, 1, 1, "", "MaxPool1d"], [353, 1, 1, "", "MaxPool2d"], [354, 1, 1, "", "MaxPool3d"], [213, 1, 1, "", "Module"], [215, 1, 1, "", "ModuleDict"], [216, 1, 1, "", "ModuleList"], [308, 1, 1, "", "MultiHeadAttention"], [335, 1, 1, "", "NLLLoss"], [214, 1, 1, "", "Parameter"], [217, 1, 1, "", "ParameterDict"], [218, 1, 1, "", "ParameterList"], [300, 1, 1, "", "ReLU"], [301, 1, 1, "", "ReLU6"], [324, 1, 1, "", "Rearrange"], [302, 1, 1, "", "SELU"], [284, 1, 1, "", "SEModule"], [309, 1, 1, "", "ScaledDotProductAttention"], [285, 1, 1, "", "SelectiveKernel"], [219, 1, 1, "", "Sequential"], [303, 1, 1, "", "Sigmoid"], [304, 1, 1, "", "Softmax"], [305, 1, 1, "", "Swish"], [306, 1, 1, "", "Tanh"], [358, 1, 1, "", "Transformer"], [359, 1, 1, "", "TransformerDecoder"], [360, 1, 1, "", "TransformerDecoderLayer"], [361, 1, 1, "", "TransformerEncoder"], [362, 1, 1, "", "TransformerEncoderLayer"], [314, 1, 1, "", "Unfold"], [364, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[261, 2, 1, "", "adaptive_avg_pool1d"], [262, 2, 1, "", "adaptive_avg_pool2d"], [263, 2, 1, "", "adaptive_avg_pool3d"], [271, 2, 1, "", "affine_grid"], [237, 2, 1, "", "alpha_dropout"], [264, 2, 1, "", "avg_pool1d"], [265, 2, 1, "", "avg_pool2d"], [266, 2, 1, "", "avg_pool3d"], [255, 2, 1, "", "batch_norm"], [246, 2, 1, "", "bilinear"], [249, 2, 1, "", "binary_cross_entropy"], [232, 2, 1, "", "conv1d"], [233, 2, 1, "", "conv2d"], [234, 2, 1, "", "conv3d"], [250, 2, 1, "", "cross_entropy"], [238, 2, 1, "", "drop_block"], [239, 2, 1, "", "drop_path"], [240, 2, 1, "", "dropout"], [241, 2, 1, "", "dropout1d"], [242, 2, 1, "", "dropout2d"], [243, 2, 1, "", "dropout3d"], [221, 2, 1, "", "elu"], [274, 2, 1, "", "embedding"], [222, 2, 1, "", "gelu"], [256, 2, 1, "", "global_response_norm"], [272, 2, 1, "", "grid_sample"], [251, 2, 1, "", "huber_loss"], [258, 2, 1, "", "instance_norm"], [276, 2, 1, "", "interpolate"], [259, 2, 1, "", "layer_norm"], [224, 2, 1, "", "leaky_relu"], [248, 2, 1, "", "linear"], [268, 2, 1, "", "max_pool1d"], [269, 2, 1, "", "max_pool2d"], [270, 2, 1, "", "max_pool3d"], [253, 2, 1, "", "mse_loss"], [254, 2, 1, "", "nll_loss"], [260, 2, 1, "", "normalize"], [225, 2, 1, "", "relu"], [277, 2, 1, "", "rotate"], [231, 2, 1, "", "scaled_dot_product_attention"], [226, 2, 1, "", "selu"], [227, 2, 1, "", "sigmoid"], [228, 2, 1, "", "softmax"], [229, 2, 1, "", "tanh"], [236, 2, 1, "", "unfold"]], "lucid.nn.init": [[287, 2, 1, "", "constant"], [289, 2, 1, "", "kaiming_normal"], [290, 2, 1, "", "kaiming_uniform"], [291, 2, 1, "", "normal"], [292, 2, 1, "", "uniform"], [293, 2, 1, "", "xavier_normal"], [294, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[379, 1, 1, "", "ASGD"], [380, 1, 1, "", "Adadelta"], [381, 1, 1, "", "Adagrad"], [382, 1, 1, "", "Adam"], [383, 1, 1, "", "AdamW"], [384, 1, 1, "", "Adamax"], [385, 1, 1, "", "NAdam"], [367, 1, 1, "", "Optimizer"], [386, 1, 1, "", "RAdam"], [387, 1, 1, "", "RMSprop"], [388, 1, 1, "", "Rprop"], [389, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[369, 1, 1, "", "CosineAnnealingLR"], [370, 1, 1, "", "CyclicLR"], [371, 1, 1, "", "ExponentialLR"], [372, 1, 1, "", "LRScheduler"], [373, 1, 1, "", "LambdaLR"], [374, 1, 1, "", "MultiStepLR"], [375, 1, 1, "", "ReduceLROnPlateau"], [376, 1, 1, "", "StepLR"]], "lucid.random": [[397, 2, 1, "", "bernoulli"], [399, 2, 1, "", "rand"], [400, 2, 1, "", "randint"], [401, 2, 1, "", "randn"], [402, 2, 1, "", "seed"], [403, 2, 1, "", "uniform"]], "lucid.transforms": [[484, 1, 1, "", "CenterCrop"], [482, 1, 1, "", "Compose"], [485, 1, 1, "", "Normalize"], [486, 1, 1, "", "RandomCrop"], [487, 1, 1, "", "RandomGrayscale"], [488, 1, 1, "", "RandomHorizontalFlip"], [489, 1, 1, "", "RandomRotation"], [490, 1, 1, "", "RandomVerticalFlip"], [491, 1, 1, "", "Resize"], [483, 1, 1, "", "ToTensor"]], "lucid.types": [[391, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 85, 96, 97, 102, 104, 105, 106, 107, 108, 109, 155, 156, 159, 173, 174, 183, 206, 210, 212, 213, 214, 215, 217, 218, 219, 231, 261, 262, 263, 285, 309, 314, 332, 335, 346, 347, 348, 349, 352, 353, 358, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 391, 394, 396, 405, 410, 418, 444, 453, 454, 457, 459, 460, 473, 475, 483, 485, 493], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 85, 86, 94, 130, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 182, 183, 184, 185, 186, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 467, 469, 470, 471, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493], "000": [5, 6, 7, 8, 157, 158, 173, 188, 201, 419, 420], "0000": [332, 333, 335], "0001": [375, 379], "000e": [419, 420], "001": [370, 379, 382, 383, 385, 386, 389], "002": [384, 385], "003": [173, 185], "004": 385, "005": 299, "006": 370, "008": [85, 94, 161, 173], "00808": 85, "009": [173, 188], "00b": 85, "01": [15, 224, 299, 367, 369, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389], "01051757": 401, "011": [37, 85], "013": [57, 85], "014": [168, 173], "016": [85, 113], "01697": 173, "01b": [85, 173], "0205": 332, "0217": 332, "0227": 332, "024": [85, 100, 135, 173, 179], "025": [166, 173], "026": [85, 124], "028": [85, 129], "0299": 332, "02b": 173, "032": [69, 85, 120], "03545": 85, "03b": 85, "044715": [222, 296], "0450": 332, "0451": 332, "046": [67, 85], "047": [85, 147], "04719755": 431, "0474259": 227, "048": [85, 137, 173, 185], "0480": 332, "04861": 85, "04b": 85, "05": [255, 258, 259, 278, 279, 280, 299, 337, 338, 339, 341, 342, 343, 344, 358, 360, 362], "050": [173, 210], "0507": [226, 302], "05m": 85, "06": [39, 77, 256, 340, 380, 388], "066": [51, 85], "069": [85, 107, 118], "06m": 85, "07": [238, 249, 250, 317, 331, 332], "070": [85, 102], "0700": 332, "0706508": 306, "071": [85, 113], "072": [173, 192], "0721": 332, "073": [85, 143], "07722396": 305, "0794": 335, "08": [375, 382, 383, 384, 385, 386, 387], "0802": 335, "081": [173, 178], "083": [81, 85], "08333333": 24, "085537": 439, "088": [85, 135], "08955": 85, "08b": [85, 173], "08m": 85, "0900": [304, 332], "096": [33, 85, 151], "0986": [228, 304], "09861229": 441, "09883": 173, "0992": 332, "09b": 85, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "10": [0, 1, 2, 3, 5, 6, 7, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 182, 215, 216, 219, 233, 234, 246, 248, 261, 308, 311, 312, 313, 321, 322, 327, 329, 338, 339, 342, 346, 350, 351, 353, 358, 359, 360, 361, 362, 368, 371, 373, 374, 375, 381, 396, 400, 403, 404, 407, 410, 413, 414, 424, 433, 447, 453, 484, 486, 487, 489], "100": [6, 15, 29, 69, 70, 71, 72, 85, 146, 147, 148, 149, 159, 369, 396, 493], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "1000000": 379, "1001": [85, 113, 332], "1003": 332, "1007": 85, "10096": 85, "101": [85, 103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138], "10106": 85, "1014": 226, "102": [85, 118], "1024": [15, 33, 38, 158, 172, 324], "1025": [216, 219], "1026": [216, 219], "1027": [216, 219], "10499": 227, "105": [166, 173], "1050": 303, "1054": 335, "1056": [216, 219], "10590": 85, "106": [173, 204], "107": [38, 85], "108": [70, 85], "1097": 85, "11": [85, 102, 116, 133, 145, 146, 246, 311, 312, 313, 321, 327, 338, 339, 342, 350, 351, 353, 410, 484, 485, 486, 487, 489], "110": [85, 108], "1105": 85, "1109": 85, "111": [63, 85], "1111": 331, "112": [85, 96, 109], "1134": 246, "114b": 487, "119": [173, 246], "1192": [227, 228, 304], "12": [19, 24, 35, 36, 54, 55, 56, 57, 58, 64, 85, 87, 88, 157, 158, 159, 166, 172, 173, 182, 186, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 217, 246, 260, 263, 311, 312, 313, 321, 322, 327, 338, 339, 342, 348, 350, 351, 353, 410, 414, 415, 484, 486, 487, 489], "120": [69, 85, 86, 89, 96, 97], "12000": [157, 158], "121": [54, 55, 85], "12122": 173, "123": [289, 290, 291, 292, 293, 294, 402, 403], "124": [36, 85, 289, 290, 293, 294], "125": 351, "1250": 333, "1251": 85, "1258": 85, "126": [85, 121], "128": [15, 30, 33, 39, 44, 67, 83, 85, 112, 121, 122, 145, 164, 165, 174, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 219, 285, 482, 493], "1280": [36, 92], "128x128": [482, 493], "12b": 85, "13": [74, 85, 145, 147, 170, 173, 246, 311, 312, 313, 327, 339, 350, 351, 353, 410, 484, 486, 487, 489], "1314": 85, "132": [85, 146], "1324": 85, "133": [85, 147], "136": [71, 85, 102], "138": [85, 148], "13b": 173, "13k": 85, "14": [32, 33, 34, 56, 85, 105, 173, 175, 176, 179, 188, 311, 312, 313, 321, 322, 327, 339, 350, 351, 353, 410, 414, 422, 447, 484, 486, 487, 489], "14030": 173, "1409": 85, "1415": 447, "143": [85, 149], "144": 97, "145": 246, "148": [43, 85], "14899": 173, "149": [56, 85, 113], "14b": 85, "15": [0, 50, 85, 160, 161, 173, 246, 311, 312, 313, 327, 339, 350, 351, 353, 410, 414, 457, 484, 486, 487, 489, 493], "1513": 335, "152": [85, 101, 115, 132], "1536": [34, 35, 37, 179], "155": 410, "1556": 85, "156": [78, 85], "157": [34, 85], "1588": [222, 296], "15b": 173, "15m": 85, "16": [54, 55, 85, 86, 89, 92, 96, 97, 124, 130, 145, 148, 159, 171, 172, 173, 180, 196, 200, 206, 207, 208, 209, 210, 211, 216, 217, 219, 231, 262, 263, 278, 279, 280, 284, 285, 308, 309, 311, 312, 313, 321, 322, 324, 327, 338, 339, 347, 348, 350, 351, 353, 358, 359, 360, 361, 362, 366, 410, 414, 451, 484, 486, 487, 489], "160": [85, 96, 114, 187], "16227766": 25, "16425": 335, "1643": 331, "166": 410, "167": [85, 298], "169": [54, 56, 85, 173], "16b": 85, "16x16": 173, "17": [85, 107, 173, 311, 312, 313, 327, 339, 351, 409, 484, 486, 487, 489], "170": 246, "1704": 85, "171": [173, 176], "174": [31, 85], "17520119": 450, "177": [85, 126], "17b": 85, "18": [85, 88, 116, 133, 141, 162, 163, 173, 184, 191, 196, 197, 198, 200, 201, 202, 203, 204, 311, 312, 313, 321, 327, 339, 351, 413, 414, 484, 486, 487, 489], "1800": 332, "182": 85, "184": 96, "187": [173, 176], "18877099": 305, "189": 85, "19": [65, 85, 145, 149, 170, 173, 233, 234, 246, 312, 313, 339, 408, 410], "192": [31, 32, 34, 35, 37, 39, 40, 77, 85, 87, 88, 115, 159, 160, 161, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 186, 197], "194": [85, 124], "196": [53, 85, 172, 173, 197, 203], "1966": [228, 303, 304], "197": [42, 49, 85], "198": [85, 96], "199": [173, 208], "1998": [85, 332], "19b": 85, "1_53": 85, "1d": [232, 261, 264, 268, 278, 281, 314, 337, 341, 346, 403, 410, 418, 457, 468, 469, 470, 471, 477], "1e": [19, 24, 39, 77, 187, 188, 189, 191, 192, 193, 238, 249, 250, 255, 256, 258, 259, 260, 278, 279, 280, 317, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 358, 360, 362, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "1e6": 379, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 85, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 155, 159, 161, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 364, 366, 369, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "20": [0, 5, 6, 7, 8, 57, 85, 172, 215, 216, 219, 312, 313, 321, 339, 359, 360, 368, 372, 374, 376, 414, 439], "200": [85, 96, 106, 117], "2004": 85, "201": [57, 85, 106], "2011": 284, "2012": 85, "2014": 85, "2015": 85, "2016": 85, "2017": [85, 173, 358], "2018": [85, 284], "2019": 85, "2020": [85, 173], "2021": [85, 173], "2022": [85, 173], "2023": [85, 284], "2024": 85, "2039": 335, "204": 313, "2048": [36, 37, 38, 156, 358, 360, 362], "209": [161, 173], "20b": 85, "21": [71, 85, 119, 134, 171, 173, 217, 246, 312, 313, 339, 414], "210": [72, 85], "2102": 173, "2103": 173, "211": 410, "2111": 173, "213": [158, 173], "21841": [48, 53], "21m": 85, "22": [83, 85, 151, 173, 190, 210, 246, 312, 313, 321, 339, 408, 410], "2201": 85, "2204": 173, "221": [72, 85], "2231": [332, 335], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "2247": [337, 338, 339, 341, 342, 343, 344], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 410, "22752314": 401, "2278": 85, "22b": 85, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 173, 185, 312, 313, 339, 447], "2301": 85, "232": [85, 94, 138, 166, 173], "2324": [85, 302], "233": [47, 85], "234": [289, 290, 291, 292, 293, 294, 403], "2345": 447, "235": [64, 85], "237": [158, 173], "238": [85, 97, 173, 191], "23840584": 305, "23b": 85, "24": [54, 55, 92, 96, 97, 106, 110, 117, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 246, 262, 312, 313, 321, 339, 347, 414], "240": [32, 47, 85, 96, 97, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168], "240x240": 59, "2424": [228, 304], "2447": 304, "246": [85, 87], "24d": 110, "25": [0, 85, 110, 120, 129, 141, 173, 178, 189, 227, 239, 303, 313, 334, 339, 350, 351, 407, 424, 446, 459], "2500": [331, 333, 335], "2512": 295, "2547": 302, "256": [30, 33, 36, 38, 39, 112, 145, 159, 164, 165, 174, 178, 180, 181, 182, 187], "258": [173, 198], "25m": 85, "26": [85, 107, 167, 173, 217, 248, 313, 329, 339, 414], "260": 85, "260x260": 59, "26325684": 401, "264": [58, 85], "265": 85, "266": [85, 163, 173], "2689": [228, 303, 304], "26894142": 305, "269": [85, 108, 118], "27": [31, 85, 109, 139, 160, 173, 183, 192, 246, 311, 313, 339, 438], "271": [162, 173], "272": [85, 128, 167, 173], "274": [85, 104, 144], "276": [289, 290, 293, 294], "277": [35, 85, 172, 173], "27b": 173, "28": [35, 36, 44, 52, 81, 85, 87, 88, 135, 161, 173, 199, 205, 246, 313, 414], "280": [51, 85], "286": [173, 182], "288": [85, 97, 106, 173, 199], "289": [48, 61, 85], "28x28": [7, 8, 87, 88], "29": [85, 144, 313], "293": 85, "296": [164, 173], "299": [85, 150], "299r": 487, "299x299": [75, 76, 83, 84], "29b": 173, "2_i": [341, 342, 343], "2c": 370, "2d": [233, 242, 262, 265, 269, 271, 279, 282, 338, 342, 347, 410, 418, 421, 454, 457, 464, 468, 469, 471, 477, 489], "2e": 384, "2nd": [28, 152], "2x": 111, "2x2": [236, 484, 486], "2x3": 271, "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 204, 205, 206, 212, 213, 214, 216, 217, 218, 219, 222, 227, 228, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 364, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491], "30": [66, 75, 85, 108, 111, 118, 216, 277, 313, 370, 374, 375, 489], "300": 85, "300x300": 59, "301": [35, 85], "302": [70, 85], "3026": 335, "304": [173, 177, 209], "3072": [38, 206], "308": [173, 203], "30823025": 305, "31": [171, 173, 246, 313, 410], "310": [419, 420], "31622777": 25, "319": 85, "31b": 85, "32": [15, 30, 54, 56, 57, 85, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 159, 174, 187, 196, 200, 216, 219, 246, 248, 262, 278, 279, 280, 284, 285, 312, 313, 324, 329, 347, 366, 391, 408, 409, 414], "320": [85, 107, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193], "321": [289, 290, 293, 294], "326": [85, 131, 173, 209], "32b": [85, 173], "32m": 85, "32x16d": 85, "32x32": [5, 6, 86, 89], "32x32d": 85, "32x4d": [85, 136, 139, 144], "32x8d": [85, 137], "33": [58, 85, 216, 219, 248, 313, 329], "330": [32, 85], "3333": 260, "33333333": 24, "336": [37, 42, 85, 127, 146], "337": [58, 85], "33b": 85, "34": [85, 119, 134, 142, 216, 219, 246, 313, 410, 414], "342": [289, 290, 293, 294], "344": [65, 85], "345": [289, 290, 291, 292, 293, 294, 403], "349": [173, 205], "34b": 85, "35": [84, 85, 216, 219, 313], "350": [53, 85], "352": [74, 85], "354": [173, 199], "355": [68, 85], "3567": [331, 335], "357": [85, 148, 153], "359": [173, 183], "35b": [85, 173], "36": [85, 106, 115, 117, 132, 173, 313], "362": [173, 189], "364": 85, "367": 85, "3679": [221, 226, 295], "368": [85, 141, 143], "36b": 173, "36th": 85, "37": [85, 101, 311], "370": [63, 85], "372": 246, "375": 334, "3750": 333, "37754067": 305, "378": [85, 88], "37b": 173, "38": 173, "380": 85, "380x380": 59, "383": [173, 179], "38344152": 399, "384": [31, 32, 34, 35, 37, 39, 40, 77, 159, 160, 161, 166, 167, 170, 171, 173, 175, 176, 177, 179], "38629436": 441, "389056": 439, "38b": 85, "38th": 85, "392": [75, 85, 172, 173], "393": [66, 74, 85], "3935": 295, "3965": 85, "3977": 85, "39b": 173, "39m": 85, "3d": [234, 243, 263, 266, 270, 280, 283, 313, 314, 339, 343, 348], "3x3": [85, 314, 404], "4": [0, 1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 85, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 155, 159, 164, 165, 166, 167, 168, 171, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 217, 219, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 246, 248, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 364, 375, 379, 382, 386, 387, 389, 394, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 426, 428, 435, 441, 442, 443, 444, 445, 446, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491], "40": [76, 85, 92, 96, 97, 111, 193, 374], "400": [45, 85, 89, 173, 200, 208], "4044": 331, "4076": 332, "408": [162, 173], "4096": [28, 152], "40b": 85, "40d": 111, "41": [173, 184], "41421356": 17, "415": 173, "416": [85, 118, 136, 173, 178, 211], "41666667": 24, "417": [85, 111], "41808962": 401, "419974": 229, "4199743": 306, "41b": 85, "42": [37, 38, 201, 246, 284, 404], "421": [289, 290, 293, 294], "423": [289, 290, 291, 292], "424": 173, "42718872": 25, "4278": 85, "4284": 85, "4286": [260, 331], "42b": [85, 173], "43": [67, 85, 162, 173, 408, 410], "431": [80, 85], "432": [66, 85], "4323": 295, "4375": 333, "43758721": 399, "43b": 85, "44": [85, 114, 126, 163, 173], "440": [71, 85], "4472": 260, "4472136": 19, "448": [68, 85, 162, 163], "4495": [339, 343], "45": [85, 142, 173, 191, 246, 277, 489], "4510": 85, "4520": 85, "4545": 316, "455": [85, 128], "456": 85, "456x456": 59, "457": [173, 186], "45b": 173, "46": [43, 85], "463": 85, "464": [41, 85, 111, 160, 173], "468": [85, 125], "46b": 85, "4700": 85, "4708": 85, "47112767": 433, "472": [85, 125, 158, 173], "476": [173, 197], "47b": [85, 173], "48": [54, 57, 58, 85, 97, 104, 108, 118, 136, 173, 197, 201, 202, 203, 248, 329], "480": [56, 85, 96, 170, 173], "481": [85, 96], "483": [85, 109], "48b": [85, 173], "48m": 85, "49": [80, 85, 131, 173, 198, 204], "492": [173, 184], "496": [52, 85], "4979": 295, "49b": 173, "49k": 85, "4s2x40d": [85, 111], "4x": 110, "4x4": 491, "5": [1, 2, 12, 13, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 85, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 155, 159, 160, 161, 173, 174, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 211, 213, 214, 215, 216, 217, 219, 222, 227, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 251, 253, 255, 258, 259, 261, 264, 265, 271, 272, 274, 276, 278, 279, 280, 285, 287, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 349, 350, 351, 353, 354, 358, 360, 362, 368, 370, 372, 374, 375, 376, 388, 394, 397, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 426, 428, 430, 431, 432, 443, 444, 445, 446, 448, 453, 454, 457, 458, 459, 460, 465, 468, 472, 473, 474, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "50": [5, 6, 85, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 248, 329, 369, 388, 408, 410, 424, 487, 488, 490, 493], "5000": [156, 331, 333, 335], "504": [85, 95], "50_1s4x24d": 85, "50b": 85, "510": 85, "5108": 335, "512": [30, 33, 36, 38, 39, 84, 85, 99, 112, 116, 142, 156, 157, 159, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 308, 358, 359, 360, 361, 362], "516": [33, 85], "519": 85, "51b": [85, 173], "520": [78, 85], "52359878": 432, "528": [85, 160, 173], "528x528": 59, "52b": 85, "53": [32, 85, 246, 409], "530": [85, 125], "531": 173, "532": [173, 197], "536": [64, 85], "537": [85, 97], "543": [289, 290, 291, 292, 293, 294, 403], "54308063": 437, "544": [80, 85, 148, 157, 173], "545": 415, "5455": 316, "549": [85, 114], "54b": 85, "55": [70, 85, 173, 177, 183], "553": [164, 173, 190], "556": [173, 192], "557": [85, 120], "558": [37, 85], "559": [85, 139], "55b": 85, "560": [62, 85, 105], "563": [289, 290, 293, 294], "564": [173, 201], "567": [173, 207], "5672": 85, "568": [72, 85], "5683": 85, "569": [85, 137], "57": [85, 143, 246], "57079633": [431, 432], "5714": 260, "5720": 85, "5730": 85, "57366333": 402, "576": 97, "57b": 173, "582": 85, "584": [85, 157, 173], "5849625": 442, "586": [76, 85], "587g": 487, "589": [44, 85], "590": [85, 98], "591": [41, 85], "592": [85, 133, 165, 173], "5987": 85, "5995": 85, "5998": 173, "59b": 173, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 85, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 156, 159, 160, 161, 162, 163, 167, 170, 171, 173, 175, 176, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 217, 218, 232, 233, 234, 236, 238, 243, 246, 248, 256, 260, 261, 271, 272, 274, 290, 294, 297, 301, 311, 312, 313, 314, 317, 319, 320, 321, 322, 327, 329, 331, 337, 338, 339, 340, 341, 342, 343, 344, 346, 350, 351, 353, 354, 358, 359, 361, 380, 388, 394, 403, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 426, 428, 443, 444, 445, 453, 454, 457, 458, 459, 460, 462, 465, 471, 472, 473, 474, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491], "60": [5, 6, 85, 115, 182], "600": [59, 85], "6008": 173, "600x600": 59, "6052": 335, "606": [173, 198], "6065": 295, "608": [36, 85, 153], "60b": 173, "61": [29, 85, 89], "6105": 85, "611": [85, 105], "6114": 85, "6124": [337, 338, 339, 341, 342, 343, 344], "617": [69, 85], "62": [85, 153, 157, 173, 192, 246], "622": [171, 173], "623": [50, 85], "626": [173, 175], "62686041": 450, "62b": 85, "630": 85, "632": [35, 85, 173, 208, 209], "6321": [221, 295], "63245553": 25, "635": [52, 85], "636": [61, 85], "63b": [85, 173], "64": [30, 39, 54, 58, 85, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 170, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 216, 219, 246, 284, 285, 391], "640": [48, 65, 85], "641": 85, "645": 85, "64589411": 399, "647": [85, 141], "648": [173, 184], "64b": 85, "64x4d": [85, 138], "654": [289, 290, 291, 292, 293, 294, 403], "656": [34, 85, 173, 207], "657": [173, 202, 289, 290, 293, 294], "6590": [228, 304], "65b": 85, "66": [68, 85, 132], "660": [48, 85], "664": [173, 210], "6652": 304, "666": [173, 187], "66666667": 24, "6667": [260, 331], "667": [85, 149], "668": [173, 202], "6682": 331, "669": [85, 117], "66b": [85, 173], "67": 410, "672": [85, 96, 119], "67326": 302, "6733": 226, "676": [85, 110], "677": 173, "678": [289, 290, 291, 292, 293, 294], "67b": [85, 173], "67m": 173, "688": [38, 85], "68811989": 401, "689": [85, 116], "68b": 85, "69314718": 441, "696": [85, 121, 171, 173, 191], "69b": 173, "7": [10, 13, 23, 38, 55, 62, 85, 145, 162, 163, 168, 173, 174, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 232, 233, 234, 236, 238, 243, 246, 248, 249, 250, 261, 271, 272, 274, 285, 296, 301, 302, 303, 306, 311, 312, 313, 314, 317, 321, 322, 327, 329, 331, 332, 334, 338, 339, 342, 343, 346, 350, 351, 353, 354, 397, 400, 403, 406, 408, 409, 410, 414, 416, 418, 422, 424, 439, 444, 453, 454, 457, 458, 459, 474, 477, 478, 479, 483, 484, 485, 486, 487, 489, 491], "70": [7, 8, 85, 106], "7001": 332, "704": [58, 85, 126], "706": [85, 89, 173, 182], "70710678": [19, 449], "708": [45, 85], "70b": 85, "7132": 85, "7141": 85, "7147": 335, "715": [85, 99], "717": [46, 85, 173, 211], "7182": 447, "7182818": 439, "71b": [85, 173], "72": [92, 96, 97, 447], "726791": 85, "72b": 85, "73": 85, "731": [173, 204], "7311": [228, 303, 304], "734": [173, 179], "739": [83, 85], "73b": [85, 173], "74": 410, "745": [173, 203], "748": [79, 85], "74b": 173, "75": [248, 329, 334, 379, 424], "755": [85, 101], "757": [173, 177], "7581": 226, "75b": 85, "760": [85, 104, 144, 173, 187], "76159416": [305, 456], "7616": [229, 306], "76219569": 437, "7635": 302, "767": [42, 85], "768": [31, 32, 34, 35, 37, 39, 40, 77, 166, 172, 173, 175, 176, 177, 179, 182, 196, 206], "770": [36, 85], "772": 415, "774": [85, 100], "776": [165, 173, 175], "778": [85, 133], "77b": 85, "78": [85, 122], "78357324": 401, "784": 15, "78539816": 433, "789": 85, "78b": 85, "790": [34, 85], "791": [85, 127], "79172504": 399, "792": [85, 124], "795": [62, 85], "796": [173, 202], "797": [85, 119], "79b": 85, "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 85, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 159, 164, 165, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 200, 216, 217, 219, 231, 232, 233, 234, 236, 238, 243, 246, 248, 249, 260, 261, 262, 263, 271, 272, 274, 278, 279, 280, 284, 296, 297, 302, 303, 306, 308, 309, 311, 312, 313, 314, 317, 319, 320, 321, 322, 327, 329, 331, 334, 338, 339, 342, 343, 346, 347, 348, 350, 351, 353, 354, 358, 359, 360, 361, 362, 375, 382, 383, 384, 385, 386, 387, 397, 400, 407, 408, 409, 410, 414, 415, 417, 418, 434, 438, 444, 453, 454, 457, 458, 459, 474, 478, 479, 483, 484, 485, 486, 487, 489, 491], "80": [5, 6, 7, 8, 96], "800": [46, 50, 85, 168, 173], "8005": 332, "808": [85, 115], "80b": [85, 173], "817": [75, 85], "818": 85, "8182": 316, "81b": [85, 173], "82": [33, 85, 173, 193, 246], "821": [85, 132], "82b": 85, "83": [85, 128, 173], "832": [81, 85], "833": 85, "83b": 173, "84": [86, 88, 89], "840": [29, 49, 79, 85], "8413": [222, 296], "842": [173, 205], "847": [84, 85], "848": [85, 132, 147, 173, 183], "849": 85, "84b": 85, "856": [55, 85, 167, 173, 189], "85772238": 305, "8584": 302, "85b": [85, 173], "86": [79, 85, 173, 207], "862": [85, 151], "863": [85, 146], "864": [85, 98, 117], "868": [85, 134], "869": [173, 201], "87": [173, 196, 200], "872": [85, 95, 110, 131], "876": [289, 290, 293, 294, 403], "87m": 85, "88": [41, 46, 85, 97, 127, 138], "880": [173, 176], "8808": [228, 303, 304], "882": [173, 193], "884": [43, 85], "886": [85, 121], "887": 415, "88m": 85, "891773": 399, "893": 85, "8944": 260, "89442719": 19, "895": [85, 142], "896": [85, 139], "89b": 85, "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 85, 99, 164, 165, 173, 233, 236, 238, 246, 248, 261, 271, 274, 311, 312, 313, 314, 317, 321, 327, 329, 331, 338, 339, 342, 346, 350, 351, 353, 368, 371, 379, 380, 382, 383, 384, 385, 386, 387, 389, 397, 400, 403, 406, 410, 414, 415, 416, 418, 423, 440, 451, 452, 478, 479, 483, 484, 485, 486, 487, 489], "904": [85, 129], "90709145": 402, "9091": 316, "9120": 335, "9163": 335, "91m": 85, "920": [173, 182], "922": [173, 200], "928": [57, 85], "929": [85, 108], "92b": 85, "93": [85, 137], "93b": [85, 173], "93k": 85, "94": 113, "944": [31, 85], "9486833": 25, "949e": [419, 420], "94b": [85, 173], "95": 373, "9526": 227, "9545": 296, "955": [85, 136], "956": [49, 85], "958": [85, 134], "95b": 173, "96": [31, 32, 39, 40, 77, 97, 168, 173, 174, 175, 176, 177, 194, 195], "960": 96, "96366276": 399, "9640": 306, "96402758": 456, "968": [53, 85], "973": [85, 122], "976": [163, 173], "978": [38, 55, 85], "97b": 85, "984": [76, 85, 138, 173, 193], "98b": 85, "99": 387, "9957": 335, "997": [170, 173], "99734545": 402, "999": [0, 382, 383, 384, 385, 386], "99b": [85, 173], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 85, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 170, 171, 172, 173, 180, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 254, 255, 256, 258, 259, 260, 271, 272, 276, 285, 309, 316, 317, 319, 320, 321, 322, 324, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 356, 358, 359, 360, 361, 362, 366, 367, 368, 373, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 489], "As": 402, "At": [15, 364, 375], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 214, 277, 366, 386, 394, 397, 399, 400, 401, 403, 483, 493], "For": [2, 3, 4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 219, 221, 222, 224, 225, 226, 227, 229, 246, 248, 260, 276, 289, 290, 293, 294, 302, 311, 312, 313, 314, 327, 329, 337, 338, 339, 341, 342, 343, 366, 378, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 439, 441, 442, 443, 444, 445, 449, 451, 453, 454, 457, 458, 459, 469, 471, 475, 477, 480, 493], "If": [0, 1, 2, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 159, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 239, 243, 246, 248, 255, 258, 262, 263, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 308, 309, 311, 312, 313, 318, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 388, 391, 396, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 483, 487, 488, 490, 491], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 85, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 159, 173, 174, 175, 176, 179, 184, 191, 193, 195, 202, 204, 213, 215, 216, 217, 218, 219, 239, 243, 246, 272, 274, 276, 277, 278, 279, 280, 284, 296, 297, 300, 301, 306, 308, 309, 318, 324, 327, 328, 331, 332, 333, 334, 335, 346, 347, 348, 356, 358, 359, 361, 364, 366, 367, 378, 379, 385, 387, 388, 389, 391, 394, 395, 402, 405, 406, 407, 408, 411, 412, 413, 415, 416, 424, 443, 445, 463, 465, 468, 469, 470, 471, 472, 474, 475, 476, 477, 481, 482, 483], "Its": [26, 404], "Near": 24, "No": [236, 239, 392], "Not": [272, 328], "One": [87, 493], "Such": 405, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "There": 472, "These": [4, 10, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 174, 179, 182, 316, 319, 320, 321, 322, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 388, 404, 493], "To": [3, 15, 85, 173, 368, 378, 397, 401, 404, 419, 420, 468, 493], "With": [3, 85, 188, 192, 236, 239, 422, 423, 483, 493], "_": [12, 13, 14, 22, 215, 216, 218, 219, 221, 222, 224, 225, 226, 227, 229, 248, 271, 274, 276, 324, 338, 339, 341, 342, 343, 349, 350, 351, 352, 353, 354, 356, 379, 380, 382, 383, 384, 385, 387, 389, 408, 409, 410, 414, 457, 458, 478, 479, 484, 485, 486, 488, 489, 490], "_1": [19, 215, 216, 217, 218, 219, 246, 327, 414, 463, 465, 481], "_2": [19, 215, 216, 217, 218, 219, 246, 327, 414, 463, 465, 481], "__call__": [1, 213, 395], "__enter__": 395, "__exit__": 395, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 159, 174, 180, 181, 212, 213, 214, 215, 216, 217, 218, 239, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 324, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 396, 405, 482, 483], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 367, "__setattr__": 213, "_activ": 228, "_arraylik": [418, 420, 423, 426, 428], "_arraylikeint": 469, "_arrayorscalar": [212, 214, 397, 405, 460], "_backward_op": 15, "_base_activ": 86, "_base_dtyp": [419, 424], "_block": 317, "_builtinnumer": [405, 422, 423], "_c": 485, "_decai": 385, "_devicetyp": [397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "_dtype_bit": 391, "_einopspattern": [12, 13, 14, 324], "_fanmod": [289, 290], "_grad_en": 393, "_i": [19, 23, 228, 239, 246, 304, 318, 334, 337, 344, 349, 352, 405, 408, 409, 411, 412, 414, 415, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 463, 465, 471, 475, 480, 481], "_in": [289, 290, 293, 294], "_interpolatetyp": [272, 364], "_j": [228, 304, 349, 352, 414, 444, 453, 458, 459], "_k": 476, "_layer": [359, 361], "_left": 276, "_make_lay": 145, "_mlphead": 77, "_mlx_dtype": 391, "_mlxarrai": 405, "_modul": 213, "_n": [19, 215, 216, 217, 218, 219, 271, 463, 465, 481], "_nograd": 395, "_np_dtype": 391, "_out": [289, 290, 293, 294, 471, 477], "_p": [23, 260, 274, 356], "_pad": 469, "_paddingstr": [278, 279, 280, 281, 282, 283, 311, 312, 313], "_paddingtyp": 272, "_paramet": 213, "_reducestr": 13, "_reductiontyp": [249, 250, 251, 253, 254, 331, 332, 333, 334, 335], "_resnestbottleneck": 103, "_right": 276, "_scalar": [231, 287, 291, 292, 293, 294, 309, 417, 422, 423, 424, 435, 467], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 259, 344, 400, 422, 425, 427, 461, 472, 475, 480], "_size": [261, 262, 263, 317], "_skresnetmodul": [141, 142, 143], "_slope": 299, "_statedict": 367, "_t": [386, 387], "_tensor": [308, 358, 360, 362], "_tensorop": 405, "_u": 24, "_v": 24, "_valu": [435, 469], "_weight": 356, "_width": 469, "a_": [30, 360], "a_1": [308, 474], "a_2": 474, "a_h": 308, "a_i": [308, 411, 412, 415, 474], "a_k": 474, "aaai": 85, "ab": [375, 429], "abc": [2, 367], "abil": [85, 493], "about": [10, 155], "abov": [393, 402, 418, 421, 478], "abs_pos_emb": [194, 195], "absolut": [22, 23, 30, 194, 195, 251, 375, 384, 430], "abstract": [2, 3, 182, 184, 366, 367, 378, 379, 387, 389, 391], "abstractmethod": 367, "abund": [48, 101], "acceler": [85, 302, 337, 338, 339, 370, 379, 385, 387, 389, 405], "accept": [328, 399], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 212, 214, 215, 216, 217, 218, 219, 392, 472], "accord": [12, 14, 239, 272, 276, 311, 312, 313, 324, 327, 329, 332, 335, 380, 381, 382, 383, 384, 385, 386, 458, 461], "accordingli": [18, 454], "account": [22, 24, 25, 305, 392], "accumul": [272, 379, 380, 381, 392, 405, 406, 407, 411, 412, 413, 416, 461], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 85, 90, 91, 92, 98, 99, 100, 101, 102, 135, 173, 207, 208, 209], "achiev": [12, 85, 123, 124, 125, 126, 127, 128, 129, 188, 232, 233, 234, 261, 324, 346, 347, 348, 385, 488, 490], "across": [0, 5, 6, 10, 12, 13, 15, 30, 39, 52, 85, 94, 173, 174, 182, 187, 188, 189, 191, 192, 193, 195, 203, 212, 216, 219, 256, 259, 261, 262, 263, 293, 294, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 391, 397, 399, 400, 401, 402, 403, 404, 419, 420, 444, 459], "act": [15, 383, 473], "act_lay": [169, 174], "activ": [28, 39, 85, 86, 96, 97, 113, 117, 118, 130, 145, 152, 161, 163, 165, 169, 174, 177, 178, 215, 219, 221, 222, 224, 225, 226, 227, 228, 229, 237, 278, 279, 280, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 316, 317, 319, 320, 321, 322, 331, 332, 335, 337, 338, 339, 344, 358, 360, 362, 392, 443, 445], "actual": [214, 331, 332, 334, 335, 486], "acycl": 15, "ad": [14, 54, 92, 112, 213, 215, 216, 217, 218, 219, 232, 233, 234, 238, 246, 248, 249, 250, 255, 256, 258, 259, 264, 265, 266, 268, 269, 270, 278, 279, 280, 308, 311, 312, 313, 314, 317, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 358, 360, 362, 380, 381, 382, 383, 384, 385, 386, 387, 396, 480, 493], "adadelta": 390, "adagrad": [380, 390], "adam": [85, 383, 384, 385, 386, 390], "adamax": 390, "adamw": 390, "adapt": [10, 28, 73, 85, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 261, 262, 263, 284, 285, 346, 347, 348, 371, 375, 380, 381, 382, 385, 386, 387, 388], "adaptive_avg_pool1d": [245, 267, 346], "adaptive_avg_pool2d": [245, 267, 347], "adaptive_avg_pool3d": [245, 267, 348], "adaptiveavgpool1d": [326, 355], "adaptiveavgpool2d": [28, 130, 145, 152, 326, 355], "adaptiveavgpool3d": [326, 355], "add": [4, 15, 159, 213, 215, 216, 219, 246, 248, 308, 311, 312, 313, 327, 329, 344, 367, 379, 382, 387, 389, 394, 429, 469, 480], "add_bias_kv": 308, "add_modul": [213, 219], "add_param_group": 367, "add_zero_attn": 308, "addit": [4, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 216, 219, 246, 248, 255, 258, 327, 329, 337, 338, 339, 341, 342, 343, 379, 385, 394, 404, 406, 476], "addition": 385, "address": [332, 335, 382, 383, 386], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 261, 262, 263, 285, 316, 317, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 368, 369, 372, 373, 374, 375, 376, 378, 382, 386, 387, 388, 465, 481], "adopt": 405, "advanc": [3, 15, 24, 60, 77, 85, 91, 101, 117, 173, 183, 185, 200, 202, 216, 219, 232, 233, 234, 261, 262, 263, 346, 347, 348, 366, 379], "advantag": 84, "affect": [271, 393, 470, 475, 482], "affin": [271, 272, 278, 279, 280, 337, 338, 339, 341, 342, 343, 344, 489], "affine_grid": [245, 272, 273], "after": [10, 14, 15, 22, 28, 96, 97, 152, 194, 195, 214, 215, 216, 217, 218, 219, 243, 284, 285, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 312, 313, 316, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 358, 360, 362, 368, 375, 383, 392, 405, 406, 407, 411, 412, 413, 415, 416, 422, 423, 424, 469, 474, 483], "afterward": 392, "aggreg": [10, 85, 159, 285, 414, 471, 477], "agnost": 391, "aim": 4, "al": [74, 85, 159, 173, 174, 358], "alex": [5, 6, 85], "alexei": 173, "alexnet": 152, "algebra": [16, 421], "algorithm": [7, 22, 24, 25, 367, 378, 404], "alia": 395, "align": [10, 26, 101, 271, 276, 364, 409, 410, 454], "align_corn": [271, 272, 276, 364], "all": [0, 3, 4, 15, 25, 59, 85, 173, 213, 215, 216, 217, 218, 219, 233, 234, 260, 261, 262, 263, 265, 266, 269, 270, 276, 279, 280, 285, 299, 300, 308, 313, 346, 347, 348, 350, 351, 354, 358, 366, 367, 372, 378, 379, 382, 387, 388, 389, 392, 405, 415, 443, 444, 445, 453, 457, 459, 463, 464, 465, 471, 475, 476, 477, 478, 479, 481, 484, 485, 493], "allevi": [85, 221], "alloc": [15, 419, 420], "allow": [0, 1, 3, 4, 10, 12, 24, 25, 84, 85, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 159, 174, 181, 182, 194, 198, 199, 200, 201, 202, 204, 214, 215, 216, 217, 218, 219, 221, 224, 225, 228, 234, 236, 277, 285, 295, 296, 299, 302, 303, 304, 306, 309, 311, 312, 313, 324, 356, 364, 366, 368, 369, 371, 373, 375, 380, 381, 394, 417, 422, 425, 427, 428, 454, 458, 460, 468, 482, 483, 493], "along": [10, 13, 14, 228, 260, 276, 285, 304, 392, 409, 410, 414, 443, 444, 445, 453, 457, 459, 461, 462, 463, 465, 468, 471, 473, 474, 476, 477, 480, 481, 488, 490], "alongsid": 212, "alpha": [221, 224, 226, 237, 295, 302, 316, 379, 387], "alpha_dropout": [244, 245, 316], "alphadropout": [323, 326], "alphadropoutmodel": 316, "alreadi": 396, "also": [155, 221, 222, 224, 225, 226, 227, 229, 246, 248, 276, 385, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 427, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 461, 463, 465, 469, 470, 471, 472, 475, 476, 477, 480, 481], "alter": [219, 472, 473], "altern": [1, 15, 174, 296, 380, 410], "alwai": [10, 214, 368, 434, 440, 447, 467, 470, 487, 488, 490], "among": [75, 285], "amount": [232, 233, 234, 264, 265, 266, 268, 269, 270, 281, 282, 283, 314, 385], "ampl": 98, "amsgrad": [382, 383], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 222, 232, 233, 234, 236, 237, 240, 241, 242, 243, 246, 262, 263, 272, 274, 276, 277, 281, 282, 283, 285, 293, 294, 295, 301, 303, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 327, 329, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 361, 362, 367, 368, 373, 378, 379, 382, 385, 387, 391, 392, 395, 396, 405, 410, 418, 421, 423, 435, 444, 453, 459, 461, 463, 471, 474, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "analog": [471, 477], "analysi": [4, 284, 311, 312, 313, 343, 349, 351, 352, 354], "andreetto": 85, "andrew": 85, "angl": [277, 489], "ani": [0, 1, 2, 3, 12, 15, 22, 24, 29, 112, 140, 151, 153, 175, 176, 177, 178, 179, 212, 213, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 237, 240, 246, 248, 255, 258, 272, 303, 324, 344, 366, 367, 372, 392, 393, 395, 396, 402, 405, 417, 418, 419, 421, 422, 425, 426, 427, 428, 443, 445, 458, 460, 463, 464, 465, 469, 471, 476, 477, 480, 481, 482, 493], "anneal": 369, "anoth": [93, 218, 416, 426, 428, 483, 493], "api": [4, 15, 346, 347, 348, 493], "appear": 367, "append": [216, 218, 219, 308], "appl": [15, 179, 391, 405], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 22, 28, 30, 39, 59, 60, 77, 85, 123, 140, 150, 152, 156, 173, 194, 195, 206, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 256, 260, 271, 272, 278, 279, 280, 284, 285, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 372, 373, 379, 380, 381, 383, 384, 385, 386, 410, 422, 434, 440, 469, 471, 478, 479, 482, 485, 487, 488, 489, 490, 491, 493], "applic": [4, 10, 13, 15, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 211, 232, 258, 311, 312, 313, 327, 329, 404, 417, 427, 434, 469, 474, 478, 479, 491], "approach": [3, 10, 12, 14, 82, 159, 161, 163, 165, 169, 219, 324, 369, 383], "appropri": [24, 85, 92, 96, 97, 213, 217, 219, 239, 311, 312, 313, 316, 319, 320, 332, 350, 351, 391, 393], "approx": 226, "approxim": [24, 222, 296, 297, 298, 350, 353, 392], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 85, 98, 100, 101, 154, 170, 171, 172, 181, 182, 183, 184, 185, 186, 190, 212, 213, 214, 215, 216, 217, 218, 219, 228, 232, 233, 234, 236, 239, 246, 248, 256, 262, 263, 271, 272, 274, 276, 281, 282, 283, 284, 285, 289, 290, 292, 293, 294, 297, 304, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 329, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 362, 364, 366, 370, 374, 379, 382, 383, 385, 386, 387, 388, 389, 392, 393, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 424, 430, 435, 439, 443, 444, 445, 446, 448, 453, 454, 457, 458, 461, 462, 463, 468, 471, 472, 473, 474, 477, 478, 479, 482, 483, 484, 486, 487, 491, 493], "arang": 429, "arbitrari": [216, 328, 419, 420, 435, 441, 442, 444, 449, 451, 453, 458, 459], "arcco": 429, "arch": 396, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 186, 188, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 222, 284, 297, 298, 300, 305, 308, 309, 324, 327, 328, 358, 366, 396], "arcsin": 429, "arctan": 429, "area": [272, 276, 364], "arg": [213, 328, 396, 419], "argmax": 395, "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 213, 219, 271, 328, 392, 395, 399, 419, 458], "around": [19, 277, 306], "arr": [463, 465, 476, 481], "arrai": [15, 212, 214, 394, 397, 405, 410, 418, 420, 423, 426, 428, 460, 470, 471, 483, 493], "art": [48, 85, 208], "artifici": 85, "arxiv": [85, 173], "asgd": 390, "ashish": 173, "aspect": 491, "assign": [15, 213, 215, 217, 219, 276, 332, 335, 467], "assist": [73, 74, 75], "associ": [217, 218], "assum": [0, 1, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 367, 378, 393], "astyp": 405, "attach": 392, "attempt": [215, 219], "attend": [231, 309, 359, 361, 362], "attent": [30, 85, 103, 110, 111, 140, 154, 156, 159, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 246, 284, 308, 309, 358, 359, 360, 361, 362], "attn": [231, 309], "attn_drop": 174, "attn_drop_r": [159, 180, 181, 194, 195], "attn_mask": [231, 309], "atto": [45, 78, 85], "attribut": [15, 213, 368], "audio": 311, "augment": [3, 4, 133, 277, 404, 471, 477, 482, 486, 487, 488, 489, 490, 493], "auto_pars": 391, "autodiff": 405, "autoencod": 85, "autograd": [15, 366], "automat": [4, 214, 215, 216, 217, 218, 366, 392, 397, 399, 400, 401, 403, 405, 419, 420, 428, 468, 483], "autoregress": [231, 309], "auxiliari": [73, 74, 75, 212], "avail": [4, 5, 6, 7, 8], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 174, 212, 261, 262, 263, 264, 265, 266, 276, 284, 285, 334, 346, 347, 348, 349, 350, 351, 379, 380, 382, 387, 444], "avg_down": 112, "avg_pool": [349, 350, 351], "avg_pool1d": [245, 267], "avg_pool2d": [245, 267], "avg_pool3d": [245, 267], "avgpool": [28, 130, 145, 152, 285], "avgpool1d": [326, 355], "avgpool1dmodel": 349, "avgpool2d": [326, 355], "avgpool2dmodel": 350, "avgpool3d": [326, 355], "avgpool3dmodel": 351, "avoid": [2, 3, 12, 13, 24, 60, 190, 217, 260, 324, 370, 392, 395, 424, 434, 440], "awar": 203, "ax": [10, 12, 13, 14, 16, 324, 394, 443, 444, 445, 453, 454, 458, 459, 461, 471, 475, 477], "axi": [13, 23, 173, 174, 228, 260, 304, 409, 410, 443, 444, 445, 453, 459, 462, 463, 464, 465, 468, 469, 471, 473, 474, 475, 476, 477, 480, 481, 488, 490], "axis1": 454, "axis2": 454, "b": [12, 13, 14, 16, 26, 30, 85, 173, 207, 246, 248, 292, 311, 312, 313, 324, 327, 329, 394, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 461, 463, 465, 468, 476, 481, 487], "b0": [59, 61, 85, 173, 187], "b1": [59, 62, 85, 173, 188, 189], "b2": [59, 63, 85, 173, 189, 190], "b3": [59, 64, 85, 173, 191], "b4": [59, 65, 85, 173, 192], "b5": [59, 66, 85, 173, 193], "b6": [59, 67, 85], "b7": [59, 68, 85], "b_": 30, "b_1": [360, 362], "b_2": [360, 362], "b_i": [411, 412, 415], "b_k": 308, "b_v": 308, "back": [15, 271, 276, 308, 350, 351, 396, 409, 414, 462, 471, 477], "backbon": [141, 142, 143, 173, 191], "backend": [179, 405, 422], "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 85, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 271, 272, 276, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 366, 401, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 439, 443, 445, 460, 461, 462, 467, 469, 471, 473, 477, 478, 479, 483], "backward": [15, 212, 214, 272, 314, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 405, 422, 423, 424, 462, 467, 473, 483], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 85, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 166, 167, 170, 182, 185, 207, 210, 333], "bar": 379, "base": [3, 12, 13, 15, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 156, 157, 166, 173, 175, 176, 196, 200, 207, 211, 213, 215, 216, 217, 218, 231, 236, 246, 261, 262, 263, 285, 309, 314, 316, 324, 332, 333, 346, 347, 348, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 383, 387, 388, 389, 391, 397, 406, 407, 411, 412, 413, 415, 416, 428, 439, 440, 441, 442, 443, 445, 458, 468, 469, 474, 486, 487, 488, 489, 490], "base_dtyp": 391, "base_lr": 370, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "baselin": 173, "basic": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 159, 174, 231, 232, 233, 234, 238, 239, 261, 262, 263, 274, 278, 279, 280, 281, 282, 283, 284, 289, 290, 293, 294, 309, 317, 346, 347, 348, 356, 424, 461, 484, 485, 486, 487, 488, 489, 490, 491], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 15, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 231, 232, 233, 234, 236, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 308, 309, 311, 312, 313, 314, 327, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 386, 395, 410, 454, 484, 485, 486, 487, 489, 491], "batch_norm": [245, 257, 337, 338, 339], "batch_norm1": 219, "batch_norm2": 219, "batch_siz": [1, 2, 3, 150, 285], "batch_tensor": 454, "batchnorm": [278, 279, 280], "batchnorm1d": [278, 326, 345], "batchnorm1dmodel": 337, "batchnorm2d": [174, 219, 279, 326, 345], "batchnorm2dmodel": 338, "batchnorm3d": [280, 326, 345], "batchnorm3dmodel": 339, "bceloss": [326, 336], "becaus": [2, 392, 395, 400], "becom": [23, 213, 380, 388], "been": [305, 467], "befor": [10, 14, 22, 30, 130, 155, 214, 231, 309, 358, 360, 362, 369, 375, 379, 385, 402, 469, 473, 485, 493], "begin": [1, 23, 221, 224, 225, 226, 239, 271, 295, 297, 298, 299, 300, 302, 318, 333, 334, 335, 349, 350, 351, 352, 353, 354, 386, 388, 394, 404, 411, 412, 414, 430, 435, 443, 445, 448, 467, 469, 478, 479], "behav": [318, 333, 457], "behavior": [10, 15, 85, 216, 219, 231, 260, 309, 314, 372, 393, 404, 410, 420, 493], "being": [218, 277, 316, 319, 320, 321, 322, 386, 393, 405, 462, 463, 465, 481], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 410, 418, 421, 479], "benchmark": [5, 6, 7, 8, 15, 101, 175, 176], "benefici": 219, "benefit": [102, 221, 366, 385], "bernoulli": [316, 319, 320, 321, 322, 398], "best": [101, 289, 290, 293, 294], "beta": [256, 337, 338, 339, 340, 341, 342, 343, 344, 382, 383, 384, 385, 386], "beta1": [382, 383, 384, 385, 386], "beta2": [382, 383, 384, 385, 386], "beta_1": [382, 383, 384, 385, 386], "beta_2": [382, 383, 384, 385, 386], "beta_c": [256, 340], "better": [21, 85, 100, 152, 161, 163, 165, 189, 190, 195, 203, 222, 289, 290, 293, 294, 305, 317, 341, 342, 343, 366, 375, 376, 383, 385, 387, 485], "between": [43, 46, 50, 69, 70, 71, 72, 81, 85, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 159, 167, 174, 185, 207, 210, 213, 232, 233, 234, 236, 246, 251, 278, 279, 280, 281, 282, 283, 285, 301, 311, 312, 313, 314, 316, 319, 320, 321, 322, 327, 331, 332, 333, 334, 335, 370, 375, 376, 379, 387, 388, 389, 404, 406, 407, 410, 413, 416, 417, 424, 459, 487, 488, 490, 491], "beyond": [10, 216, 375], "bia": [30, 159, 161, 163, 165, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 232, 233, 234, 246, 248, 255, 258, 259, 278, 279, 280, 281, 282, 283, 308, 311, 312, 313, 327, 329, 337, 338, 339, 341, 342, 343, 344, 358, 360, 362, 382, 383, 384, 385, 386], "bias": [169, 173, 311, 312, 313, 329, 344, 366], "bias1": 217, "bias2": 217, "big": [173, 281, 282, 283], "bilinear": [245, 247, 271, 272, 276, 326, 330, 364], "bilinearmodel": 327, "binari": [227, 249, 303, 316, 319, 320, 321, 322, 331], "binary_cross_entropi": [245, 252], "bit": 391, "black": 15, "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 85, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 236, 238, 239, 278, 279, 280, 285, 311, 312, 313, 314, 317, 392, 395], "block1": [155, 366], "block2": [155, 366], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [238, 317], "block_typ": 30, "blue": 487, "bmatrix": [271, 414], "bn": [278, 279, 280], "bn_affin": [278, 279, 280], "bookkeep": 395, "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 213, 214, 231, 237, 239, 240, 241, 242, 243, 255, 258, 271, 272, 276, 278, 279, 280, 281, 282, 283, 308, 309, 311, 312, 313, 318, 327, 329, 337, 338, 339, 341, 342, 343, 344, 358, 359, 360, 361, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 391, 393, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 443, 444, 445, 453, 459, 460, 483], "boolean": 467, "boost": 98, "border": 272, "both": [30, 93, 159, 161, 163, 165, 169, 173, 174, 179, 181, 182, 194, 196, 197, 198, 199, 232, 248, 262, 264, 268, 278, 296, 305, 311, 312, 314, 347, 349, 350, 352, 353, 362, 364, 391, 395, 408, 409, 410, 414, 418, 468, 474, 491], "bottleneck": [54, 85, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 284], "bottleneck_cfg": 92, "bottom": 276, "bound": [272, 290, 292, 294, 370, 388, 403, 405, 434], "box": [4, 15], "branch": [73, 74, 75, 85, 159, 285], "break": [10, 366], "brief": 493, "bright": 493, "bring": [10, 324], "broadcast": [14, 15, 321, 322, 444, 453, 459, 472, 480], "broadcast_to": 466, "bucket": 434, "budget": [50, 191], "buffer": [15, 379, 385, 387, 389], "build": [15, 40, 60, 84, 85, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 156, 205, 213, 216, 219, 366, 493], "built": [3, 15, 113, 117, 118, 219, 366, 391, 395, 422, 423], "burg": 8, "c": [5, 6, 8, 12, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 236, 238, 241, 242, 243, 250, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 284, 314, 321, 322, 324, 332, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 370, 394, 465, 481, 485], "c_": [311, 312, 313], "c_in": [232, 233, 234, 278, 279, 280], "c_out": [232, 233, 234], "calcul": [0, 1, 16, 214, 364, 380, 381, 384, 385, 386, 395, 400], "calculu": [17, 24], "call": [1, 15, 213, 368, 393, 395, 396, 406, 407, 410, 411, 412, 413, 415, 416], "callabl": [187, 188, 189, 191, 192, 193, 358, 360, 362, 367, 370, 373, 396, 405, 482], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 85, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 155, 159, 212, 214, 215, 216, 217, 218, 219, 224, 232, 233, 234, 239, 271, 272, 277, 285, 296, 299, 301, 306, 311, 312, 313, 314, 341, 342, 343, 350, 351, 352, 353, 354, 356, 359, 366, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393, 394, 395, 403, 404, 405, 410, 419, 420, 421, 422, 423, 425, 427, 428, 444, 447, 453, 454, 459, 461, 465, 468, 469, 471, 472, 477, 480, 481, 482, 483, 486, 488, 489, 490, 493], "cannot": [18, 19, 21, 22, 25, 26, 27, 397, 462], "cap": 301, "capabl": [10, 30, 52, 110, 111, 173, 417, 418, 421, 425, 426, 427, 428], "capac": [41, 42, 43, 49, 53, 85, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 158, 173, 174, 175, 176, 177, 179, 183, 188, 192, 193, 202, 208], "captur": [15, 30, 85, 140, 159, 161, 163, 165, 169, 173, 174, 182, 183, 184, 194, 196, 197, 198, 199, 200, 201, 204, 236, 311, 312, 313, 327], "cardin": [85, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140], "care": 159, "carefulli": [368, 392], "cartesian": 468, "case": [3, 23, 86, 92, 94, 221, 224, 225, 226, 239, 295, 297, 298, 299, 300, 302, 318, 333, 334, 335, 349, 350, 351, 352, 353, 354, 366, 374, 381, 386, 388, 394, 411, 412, 430, 435, 443, 445, 448, 467, 469, 478, 479, 493], "cast": 422, "categor": [274, 356], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 175, 176, 356, 391], "caus": [3, 24, 368, 379, 387, 389], "causal": [231, 309], "cautiou": [0, 10], "cdot": [15, 17, 18, 21, 22, 23, 26, 159, 173, 174, 221, 222, 224, 226, 227, 231, 232, 233, 234, 246, 248, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 276, 284, 293, 294, 296, 297, 298, 303, 305, 309, 314, 316, 327, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 356, 369, 370, 371, 373, 374, 376, 380, 381, 382, 383, 384, 385, 386, 388, 408, 409, 410, 413, 415, 447], "ceil": 429, "center": [271, 272, 277, 306, 387, 484, 493], "centercrop": [492, 493], "certain": [18, 222, 231, 246, 305, 309, 327, 362, 375, 382, 383, 393, 443, 445], "cfg": [93, 96, 97], "chain": [15, 21, 22, 219, 482, 493], "challeng": [7, 85, 182], "cham": 85, "chanc": [487, 488, 490], "chang": [10, 251, 271, 272, 333, 374, 388, 392, 394, 396, 405, 470, 472, 480, 487, 493], "chanlumerico": 15, "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 159, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 232, 233, 234, 236, 241, 242, 243, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 311, 312, 313, 321, 322, 337, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 353, 354, 485, 487, 491], "character": [121, 122], "check": [15, 393, 405, 484, 486], "checkpoint": 378, "chen": [85, 159, 173], "choic": [100, 102, 468], "choleski": 20, "chollet": 85, "choos": 85, "chosen": [316, 317, 368], "christian": 85, "christoph": 8, "chu": 85, "chun": 173, "chunk": 466, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 228, 239, 250, 254, 366, 378, 395, 396, 493], "classic": 89, "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152, 174], "clean": 395, "cleaner": [1, 410], "cleanli": 174, "cleanup": 392, "clear": [214, 419, 420, 424], "clf_in_featur": 86, "clf_layer": 86, "clip": [277, 297, 301, 388, 429], "clockwis": 277, "close": [21, 24, 302, 331, 387], "closer": 295, "closur": [367, 378], "cloth": 7, "cnn": [30, 85, 161, 163, 165, 173], "co": [85, 369, 429, 449], "coars": 173, "coatnet": [31, 32, 33, 34, 35, 36, 37, 38], "coatnet_0": 85, "coatnet_1": 85, "coatnet_2": 85, "coatnet_3": 85, "coatnet_4": 85, "coatnet_5": 85, "coatnet_6": 85, "coatnet_7": 85, "code": [10, 15, 22, 215, 217, 219, 392, 393, 395, 404], "coeffici": [26, 59, 276, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389], "col": 236, "collaps": 10, "collect": [4, 16, 154, 215, 216, 218, 219, 378], "color": [487, 493], "colorjitt": 493, "column": [18, 19, 21, 25, 26, 27, 155, 236, 314, 421, 465, 468], "com": [7, 8, 15], "combin": [1, 3, 12, 30, 76, 82, 83, 85, 102, 144, 159, 173, 174, 183, 216, 219, 221, 222, 278, 279, 280, 284, 285, 296, 314, 317, 324, 332, 366, 385, 386, 444, 453, 459, 463, 493], "combined_dataset": [0, 1], "common": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 236, 277, 378, 391, 493], "commonli": [90, 91, 92, 94, 95, 96, 97, 100, 102, 222, 227, 228, 229, 232, 234, 239, 246, 253, 255, 258, 272, 274, 277, 284, 293, 294, 297, 298, 301, 304, 309, 313, 331, 334, 335, 349, 350, 351, 352, 353, 354, 356, 358, 394, 425, 475, 483, 484, 485, 486, 488, 489, 490, 493], "compact": [44, 45, 47, 52, 81, 100, 177, 187, 188], "compar": [30, 43, 44, 85, 121, 122, 152, 172, 177, 181, 189, 404, 476], "compat": [4, 10, 15, 16, 140, 324, 328, 344, 366, 394, 404, 424, 461, 483, 493], "competit": [45, 51, 52], "complet": [156, 358, 359, 361], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 175, 176, 181, 182, 183, 184, 185, 189, 190, 191, 201, 212, 214, 215, 216, 219, 225, 231, 277, 287, 291, 292, 293, 294, 300, 309, 352, 354, 366, 373, 378, 382, 383, 384, 385, 386, 388, 391, 397, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 435, 460, 467, 483, 493], "complex64": 391, "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 177, 178, 213, 216, 378, 405, 493], "compos": [5, 6, 7, 8, 150, 174, 311, 312, 313, 349, 350, 351, 352, 353, 354, 366, 493], "compound": 60, "comprehens": [3, 166], "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 85, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 159, 169, 173, 174, 181, 182, 185, 186, 190, 194, 208, 209, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 387, 392, 393, 394, 395, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 430, 431, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 468, 469, 471, 477, 483, 493], "computation": [3, 12, 24, 113, 297, 298, 324], "compute_grad": 462, "compute_loss": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "concat": 308, "concaten": [0, 232, 233, 234, 308, 465, 466, 476, 481], "concept": [24, 85, 91, 154], "concis": [10, 12, 14], "concurr": 392, "condit": [17, 18, 21], "confer": [85, 173], "config": 145, "configur": [15, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 218, 278, 279, 280, 309, 391], "confirm": 15, "conjunct": [236, 335], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 174, 248, 284, 285, 311, 312, 313, 329, 360, 362], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 219, 289, 290, 293, 294, 314, 366, 388, 391, 393, 419, 420, 478, 479, 493], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 159, 212, 261, 262, 263, 285, 308, 346, 347, 348, 358, 360, 362, 402, 404, 469, 484, 491, 493], "consistent_tensor": 404, "consol": 155, "constant": [249, 250, 255, 256, 258, 259, 260, 288, 302, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 358, 360, 362, 376, 380, 381, 382, 383, 384, 385, 386, 387, 422, 423, 467, 469], "constant_pad": 469, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 190, 285, 324], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 175, 176, 177, 216, 366, 418, 471, 477, 478, 479], "constructor": [15, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149, 175, 176, 177, 178, 179], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 213, 215, 216, 217, 218, 219, 228, 231, 236, 246, 248, 249, 250, 254, 272, 274, 276, 331, 332, 335, 367, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 420, 424, 430, 431, 432, 433, 436, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 462, 464, 468, 474], "content": 277, "context": [85, 174, 200, 202, 203, 271, 392, 393, 395, 405], "contextmanag": 392, "contextu": [170, 171, 172, 182, 196, 197, 198, 199], "contigu": [238, 317, 470], "continu": [299, 371, 376, 401, 440], "contract": 12, "contrast": [156, 341, 342, 343, 493], "contribut": [238, 276, 316, 319, 320, 321, 322, 349, 352, 353, 354, 379, 385, 457], "control": [10, 14, 30, 39, 123, 181, 182, 285, 295, 333, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 404, 405, 422, 483, 493], "conv": [77, 82, 85, 130, 278, 279, 280, 338, 339], "conv1": [87, 88, 89, 219, 311, 312, 313, 349, 350, 351, 352, 353, 354], "conv1d": [235, 245, 278, 281, 315, 326, 349, 352], "conv1dmodel": 311, "conv2": [87, 88, 89, 219, 311, 312, 313], "conv2d": [216, 219, 235, 245, 279, 282, 315, 324, 326, 338, 350, 353, 366], "conv2dmodel": 312, "conv3d": [235, 245, 280, 283, 315, 326, 339, 351, 354], "conv3dmodel": 313, "conv_bia": [278, 279, 280], "conv_config": 145, "conv_lay": [86, 216], "convblock": 366, "convbnrelu1d": 286, "convbnrelu2d": 286, "convbnrelu3d": 286, "conveni": [4, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168], "convent": 410, "converg": [24, 306, 368, 369, 370, 372, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 485], "convers": [332, 335, 487, 493], "convert": [5, 6, 7, 8, 145, 159, 212, 214, 228, 274, 304, 468, 482, 483, 487, 493], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "convnetwork": 216, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "convnext_bas": 85, "convnext_larg": 85, "convnext_smal": 85, "convnext_tini": 85, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 85, "convnext_v2_bas": 85, "convnext_v2_femto": 85, "convnext_v2_hug": 85, "convnext_v2_larg": 85, "convnext_v2_nano": 85, "convnext_v2_pico": 85, "convnext_v2_tini": 85, "convnext_xlarg": 85, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 174, 216, 232, 233, 234, 236, 278, 279, 280, 281, 282, 283, 284, 285, 311, 312, 313, 314, 350, 351, 353, 354, 454, 469], "convolv": [232, 233, 234, 311, 312, 313], "cooldown": 375, "coordin": [271, 272, 468], "copi": [10, 461], "core": [0, 1, 2, 3, 159, 213, 366, 367, 391, 405, 493], "corinna": 8, "corner": [271, 272, 276, 364, 484, 486], "correct": [215, 332, 335, 382, 383, 384, 385, 386, 467, 478, 479, 483], "correctli": [24, 213, 215, 216, 217, 218, 219, 332, 335, 404, 461, 462], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 196, 197, 198, 199, 205, 215, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 274, 276, 297, 300, 304, 327, 329, 337, 338, 339, 341, 342, 343, 350, 351, 356, 379, 387, 389, 391, 397, 408, 409, 411, 412, 415, 434, 439, 440, 441, 442, 449, 451, 461, 462, 465, 469, 471, 473, 477, 481], "cort": 8, "cosh": [429, 450, 456], "cosin": [369, 431, 436, 437, 449], "cosineannealinglr": 377, "cost": [85, 90, 92, 93, 99, 100, 102, 123, 169, 190, 281, 282, 283, 392], "could": 213, "count": [85, 93, 155, 173, 187, 188, 189, 191, 192, 193, 369, 374, 392, 463], "counterclockwis": [277, 489], "cover": [16, 232, 233, 234], "coverag": [174, 261, 262, 263], "cpu": [15, 212, 214, 391, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "craft": 15, "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 212, 213, 216, 219, 271, 285, 301, 308, 358, 359, 360, 361, 362, 366, 394, 395, 396, 404, 417, 421, 422, 423, 424, 425, 426, 427, 428, 461, 468, 476, 482, 493], "creation": [69, 70, 71, 72, 216, 219, 392, 493], "criterion": [331, 332, 333, 334, 335], "critic": [24, 100, 192, 378, 404], "crop": [484, 486, 493], "cross": [159, 173, 194, 249, 250, 331, 332, 358, 359, 360], "cross_entropi": [245, 252], "crossattent": 159, "crossentropyloss": [326, 336], "crossvit": [160, 161, 162, 163, 164, 165, 166, 167, 168], "crossvit_15": 173, "crossvit_15_dagg": 173, "crossvit_18": 173, "crossvit_18_dagg": 173, "crossvit_9": 173, "crossvit_9_dagg": 173, "crossvit_bas": 173, "crossvit_smal": 173, "crossvit_tini": 173, "crucial": [10, 368], "cube": 429, "cumul": [222, 296], "current": [213, 369, 370, 371, 372, 373, 374, 375, 376, 379, 382, 388, 393], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 277, 278, 279, 280, 295, 299, 314, 358, 366, 370, 373, 392, 404, 421, 424, 474], "custom_config": 145, "custom_decod": 358, "custom_encod": 358, "custom_lenet": 86, "customiz": [187, 493], "custommodul": 212, "customnetwork": 215, "customparametermodel": [217, 218], "cut": 101, "cvf": [85, 173], "cvpr": 85, "cvt": [170, 171, 172], "cvt_13": 173, "cvt_21": 173, "cvt_w24": 173, "cvtspec": 169, "cycl": 370, "cycle_momentum": 370, "cyclic": [369, 370, 473], "cycliclr": 377, "d": [30, 85, 231, 234, 243, 263, 266, 270, 280, 309, 314, 339, 343, 344, 348, 351, 354, 394, 418, 447, 489], "d_": [173, 234, 263, 266, 270, 308, 313, 348, 351, 354, 358, 359, 360, 361, 362], "d_1": [12, 13, 14, 324, 344], "d_2": [12, 13, 14, 324, 344], "d_h": [308, 314, 360, 362], "d_k": [30, 159, 174], "d_model": [156, 157, 158, 206, 358, 359, 360, 361, 362], "d_n": [12, 13, 14, 324, 344], "d_out": [234, 266, 270], "d_w": 314, "dag": 15, "dai": 85, "dampen": [379, 387, 389], "data": [4, 5, 6, 7, 8, 10, 15, 22, 85, 154, 173, 201, 212, 214, 218, 229, 232, 234, 236, 242, 243, 248, 274, 277, 278, 279, 280, 285, 300, 306, 311, 312, 313, 329, 343, 349, 351, 354, 361, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 404, 405, 406, 407, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 447, 454, 460, 461, 469, 470, 471, 472, 474, 475, 477, 482, 483, 486, 487, 488, 489, 490, 493], "data_dtyp": 391, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 174, 175, 176, 179, 182, 193, 277, 381, 482, 484, 493], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 414, "debug": [15, 155, 219, 393, 402, 493], "decai": [317, 368, 369, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389], "decim": 447, "declar": [12, 13, 14, 324], "decod": [156, 358, 359, 360], "decoder_lay": [359, 360], "decoderlay": 359, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 395, 396], "decoupl": [85, 380, 381, 383, 384, 385, 386], "decreas": [370, 375, 382, 383, 388], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 85, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 173, 182, 255, 296, 302, 324, 366, 368, 404, 424, 474, 478, 479, 482, 483, 493], "deepen": 191, "deeper": [74, 76, 84, 85, 112, 119, 171, 175, 176, 181, 184, 189, 192, 201, 202, 302], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 324, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 228, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 299, 304, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 385, 393, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 443, 444, 445, 447, 453, 458, 459, 460, 462, 463, 465, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 487, 488, 490], "defer": 15, "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 159, 169, 215, 216, 217, 218, 219, 239, 296, 298, 301, 305, 331, 332, 333, 334, 335, 349, 364, 366, 368, 370, 373, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 400, 401, 415, 420, 435, 458, 482, 493], "definit": [15, 17, 278, 279, 280, 493], "degre": [277, 489, 493], "delai": 379, "deliv": [15, 100, 101, 193], "delta": [12, 228, 251, 304, 324, 333, 380], "delta_": [12, 228, 304, 324], "demand": [101, 179, 191, 192], "demonstr": [16, 136, 137, 138, 139, 144, 154, 366], "demystifi": 15, "denomin": [255, 256, 258, 259, 278, 279, 280, 337, 338, 339, 340, 341, 342, 343, 344, 358, 360, 362, 380, 381, 382, 383, 384, 385, 386, 387, 407], "denot": [22, 110, 111, 303, 308, 311, 312, 313, 316, 319, 320, 321, 322, 458], "dens": [54, 55, 56, 57, 58, 85, 173, 194, 196, 197, 198, 199, 239, 274, 356, 381], "densenet": [55, 56, 57, 58, 284], "densenet_121": 85, "densenet_169": 85, "densenet_201": 85, "densenet_264": 85, "densiti": [222, 296], "depend": [15, 22, 23, 30, 92, 154, 173, 174, 182, 183, 194, 196, 197, 198, 199, 200, 201, 218, 249, 250, 251, 253, 254, 276, 311, 408, 418, 443, 445, 471, 477, 486, 487, 491], "deploy": [102, 187, 190], "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 85, 98, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 234, 239, 243, 263, 266, 270, 313, 318, 339, 343, 348, 351, 354], "depth_coef": 59, "depthseparableconv1d": 286, "depthseparableconv2d": 286, "depthseparableconv3d": 286, "depthwis": [30, 39, 77, 85, 90, 150, 169, 170, 171, 172, 173, 232, 233, 234, 281, 282, 283], "depthwise_separ": [281, 282, 283], "der": 85, "deriv": [15, 24, 25, 228, 261, 262, 263, 296, 304, 306, 311, 312, 313, 327, 329, 396], "descend": 27, "descent": [379, 389], "describ": [10, 18, 19, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "descript": [154, 493], "deseri": 212, "design": [3, 4, 13, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 85, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 159, 170, 171, 172, 173, 174, 175, 176, 180, 182, 185, 192, 194, 201, 202, 208, 214, 216, 217, 218, 219, 221, 226, 302, 316, 366, 493], "desir": [10, 14, 151, 212, 261, 262, 263, 317, 346, 347, 348, 364, 368, 422, 423, 458, 460], "despit": 260, "destin": 213, "det": [16, 20], "det_a": 18, "detail": [155, 161, 163, 165, 169, 182, 201, 378, 404, 410], "detect": [85, 173, 193, 200, 201, 202, 203, 204, 375], "determin": [0, 16, 17, 18, 86, 121, 122, 159, 174, 261, 262, 263, 289, 290, 293, 294, 311, 312, 313, 346, 347, 348, 350, 351, 353, 354, 370, 387, 393, 397, 399, 400, 401, 403, 419, 420, 474, 484, 486], "determinist": 277, "develop": [10, 15, 93, 366, 404, 493], "deviat": [289, 291, 293, 482, 485, 493], "devic": [91, 92, 98, 99, 212, 214, 391, 397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 440, 447], "diag": [24, 429], "diagon": [24, 25, 27, 418, 421, 457, 478, 479], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 217, 324, 328, 367, 372], "dictionari": [86, 93, 100, 213, 214, 215, 217, 219, 367, 372], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 159, 170, 171, 172, 173, 180, 182, 183, 184, 185, 186, 195, 204, 216, 219, 228, 246, 276, 285, 304, 327, 334, 368, 375, 378, 391, 394, 402, 404, 416, 428, 459, 475, 493], "differenti": [17, 26, 271, 272, 274, 296, 366, 397, 399, 400, 401, 403, 405, 417, 419, 420, 425, 427, 434, 440, 447], "difficult": 184, "digit": [7, 8, 85, 89], "dilat": [232, 233, 234, 278, 279, 280, 281, 282, 283, 311, 312, 313, 314], "dilation_height": 236, "dilation_width": 236, "dim": [39, 40, 77, 159, 231, 260, 309, 332, 335, 473], "dim_feedforward": [156, 358, 360, 362], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 85, 112, 123, 140, 145, 152, 156, 159, 170, 171, 172, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 206, 214, 228, 231, 246, 248, 255, 256, 258, 259, 260, 262, 263, 276, 284, 285, 304, 308, 309, 311, 312, 313, 314, 317, 324, 337, 338, 339, 341, 342, 343, 344, 347, 348, 350, 351, 352, 353, 354, 358, 360, 361, 362, 364, 394, 399, 403, 405, 409, 419, 443, 444, 445, 453, 454, 457, 458, 459, 461, 462, 463, 465, 469, 471, 473, 475, 476, 477, 480, 481, 484, 486, 491], "dimension": [10, 22, 24, 25, 27, 77, 232, 233, 234, 264, 265, 266, 268, 269, 270, 285, 308, 311, 312, 313, 314, 320, 321, 322, 337, 338, 339, 341, 342, 343, 349, 350, 351, 352, 353, 354, 358, 360, 362, 394, 409, 410, 414, 418, 439, 444, 453, 454, 457, 459, 464, 470, 471, 475, 477, 478, 479], "diminish": [368, 381], "direct": [15, 19, 331, 332, 333, 334, 335, 379, 387, 388, 389, 473], "directli": [69, 70, 71, 72, 85, 215, 216, 217, 218, 276, 324, 364, 380, 381, 383, 384, 385, 386, 402, 404, 460, 493], "directori": [3, 4, 5, 6, 7, 8], "disabl": [239, 317, 318, 393, 395], "discontinu": 448, "discrep": [331, 332, 335], "discret": [397, 400, 404, 440], "disk": 3, "displai": [29, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168], "disrupt": 434, "distinct": [93, 156, 174], "distribut": [201, 222, 228, 238, 276, 289, 290, 291, 292, 293, 294, 296, 304, 311, 312, 313, 316, 317, 319, 320, 321, 322, 327, 329, 332, 335, 349, 350, 351, 397, 399, 400, 401, 403, 404, 444, 453, 457, 459, 476, 485, 487, 488, 489, 490], "div": 429, "divers": [46, 85, 174, 277, 488, 490, 493], "diversifi": 493, "divid": [1, 24, 85, 173, 174, 194, 195, 206, 207, 208, 209, 210, 211, 216, 219, 228, 232, 233, 234, 304, 331, 332, 333, 334, 335, 407, 462, 474, 485], "divis": [24, 232, 233, 234, 260, 308, 316, 319, 320, 321, 322, 358, 360, 362, 380, 381, 382, 383, 384, 385, 386, 387, 407, 474], "dl": 15, "do": [24, 26, 212, 215, 216, 217, 218, 237, 240, 241, 242, 366, 368, 386, 393, 395, 428, 457, 469], "do_ev": 155, "doc": 154, "document": [4, 85, 378, 404], "doe": [22, 23, 24, 25, 27, 155, 156, 212, 215, 216, 217, 218, 219, 260, 294, 375, 382, 383, 388, 392, 393, 395, 397, 399, 400, 401, 402, 403, 417, 418, 419, 420, 421, 425, 426, 427, 428, 461, 467, 472, 473], "doi": 85, "domain": [4, 190], "dosovitskii": 173, "dot": [12, 13, 14, 19, 22, 180, 181, 215, 216, 217, 218, 219, 231, 308, 309, 324, 344, 352, 353, 354, 409, 414, 429, 463, 465, 476, 481], "down": [3, 366, 440, 491], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 221, "drawn": [399, 400, 401, 403, 404, 489], "drop": [39, 40, 77, 174, 238, 239, 316, 317, 318, 319, 320, 321, 322], "drop_block": [244, 245], "drop_path": [39, 40, 174, 244, 245, 318], "drop_path_r": [60, 77, 159, 180, 181, 194, 195], "drop_prob": 318, "drop_rat": [77, 159, 180, 181, 194, 195], "dropblock": [238, 323, 326], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 85, 145, 152, 156, 159, 174, 177, 178, 180, 181, 194, 195, 206, 222, 231, 237, 241, 242, 243, 308, 309, 316, 317, 320, 321, 322, 358, 360, 362], "dropout1d": [244, 245, 323, 326], "dropout1dmodel": 320, "dropout2d": [244, 245, 323, 326], "dropout3d": [244, 245, 323, 326], "dropout_p": [231, 309], "dropout_prob": 75, "dropout_r": 206, "dropoutmodel": 319, "droppath": [323, 326], "dtype": [212, 214, 274, 356, 391, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 460, 483], "due": [22, 24, 54, 101, 179, 232, 233, 300, 440, 489], "dummi": 155, "duplic": [10, 14, 215, 217], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 85, 112, 181, 212, 213, 214, 215, 216, 217, 218, 219, 228, 237, 238, 239, 240, 241, 242, 243, 255, 258, 277, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 364, 366, 368, 372, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 395, 405, 406, 434, 440, 443, 444, 445, 453, 459, 467, 473, 483, 486, 489, 493], "dy": [224, 299], "dynam": [0, 2, 3, 15, 30, 85, 140, 144, 213, 216, 217, 218, 219, 261, 262, 263, 285, 317, 344, 346, 347, 348, 368, 372, 373, 375, 381, 386, 391, 393], "dynamicnetwork": 216, "e": [0, 10, 15, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 159, 169, 179, 194, 195, 212, 228, 285, 303, 304, 305, 308, 316, 332, 367, 380, 387, 388, 391, 405, 421, 422, 437, 439, 441, 450, 456, 457, 463, 487], "each": [1, 2, 3, 4, 15, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 85, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 156, 159, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 255, 258, 261, 262, 263, 271, 272, 274, 284, 285, 297, 300, 304, 308, 311, 312, 313, 314, 316, 319, 320, 321, 322, 327, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 366, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 397, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 424, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 462, 463, 465, 468, 469, 471, 473, 474, 476, 477, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493], "earli": [30, 85, 386], "earlier": 93, "eas": 4, "easi": [2, 3, 4, 10, 124, 125, 126, 127, 128, 129, 214, 215, 217], "easier": [3, 215, 216, 219], "easili": [4, 93, 214, 218, 493], "eccv": 85, "economi": 27, "edg": [15, 92, 101, 187, 469], "edu": [5, 6], "educ": 154, "effect": [13, 85, 159, 161, 163, 165, 169, 173, 178, 200, 204, 215, 216, 217, 218, 219, 228, 232, 233, 234, 236, 295, 296, 300, 303, 304, 306, 337, 338, 339, 341, 342, 343, 344, 364, 368, 369, 370, 375, 393, 394, 465, 481], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 159, 164, 169, 170, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 196, 197, 198, 199, 201, 207, 210, 236, 281, 282, 283, 297, 298, 301, 324, 332, 366, 368, 369], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "efficientnet_b0": 85, "efficientnet_b1": 85, "efficientnet_b2": 85, "efficientnet_b3": 85, "efficientnet_b4": 85, "efficientnet_b5": 85, "efficientnet_b6": 85, "efficientnet_b7": 85, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 85, "efficientnet_v2_l": 85, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 85, "efficientnetv2": 85, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 324, "einstein": [10, 12, 13, 14, 324], "either": [15, 248, 364, 395, 397, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 460, 468], "element": [0, 10, 12, 14, 24, 25, 75, 85, 214, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 274, 278, 279, 280, 281, 282, 283, 284, 297, 298, 300, 304, 305, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 331, 332, 333, 334, 335, 344, 349, 350, 351, 352, 353, 354, 394, 397, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 421, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 464, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479], "elementwise_affin": 344, "elimin": [12, 14], "elsewher": [352, 353, 354, 421], "elu": [223, 245, 307, 326], "elumodel": 295, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 159, 161, 163, 165, 170, 171, 172, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 206, 231, 245, 275, 308, 309, 326, 357, 358, 360, 361, 362], "embed_dim": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 308, 358, 359, 360, 361, 362], "embedding_dim": [206, 274, 356], "embedding_lay": 356, "embedding_matrix": 274, "emphas": [93, 100], "emploi": [30, 60, 101, 159, 161, 163, 165], "empti": [213, 219, 429, 462], "empty_lik": 429, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 22, 27, 59, 83, 85, 103, 140, 141, 142, 143, 154, 170, 171, 172, 173, 174, 177, 180, 181, 186, 190, 194, 196, 197, 205, 213, 214, 215, 216, 217, 218, 231, 239, 300, 308, 309, 311, 312, 313, 327, 329, 358, 360, 362, 366, 378, 391, 392, 393, 397, 399, 400, 401, 403, 405, 422, 482], "encapsul": [15, 309, 366, 391, 405], "enclos": [392, 395], "encod": [30, 85, 156, 159, 206, 332, 335, 358, 359, 360, 361, 362, 391], "encoder_lay": [361, 362], "encoderlay": 361, "encompass": 59, "encourag": [238, 317, 319, 320, 321, 322, 331, 332, 335, 382], "end": [23, 193, 221, 224, 225, 226, 239, 271, 295, 297, 298, 299, 300, 302, 318, 333, 334, 335, 349, 350, 351, 352, 353, 354, 386, 388, 411, 412, 414, 417, 424, 430, 435, 443, 445, 448, 463, 467, 469, 478, 479, 493], "enforc": [12, 213, 215, 217, 324, 359, 360, 361, 362], "engin": [15, 24, 405], "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 85, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 161, 163, 165, 169, 170, 171, 172, 173, 175, 176, 185, 188, 195, 204, 215, 217, 285, 301, 372, 493], "enough": 15, "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 174, 183, 203, 212, 213, 214, 215, 216, 217, 218, 219, 228, 231, 260, 261, 262, 263, 274, 278, 279, 280, 299, 304, 309, 316, 317, 318, 319, 320, 321, 322, 324, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 356, 366, 367, 368, 379, 380, 382, 383, 385, 386, 387, 388, 389, 393, 394, 397, 399, 400, 401, 402, 403, 404, 415, 424, 434, 444, 453, 459, 461, 462, 467, 469, 473, 478, 479, 483, 484, 485, 486, 487, 491, 493], "entir": [3, 15, 239, 241, 242, 243, 318, 321, 322, 404], "entri": [60, 86, 96, 97, 467, 473, 475], "entropi": [249, 250, 331, 332], "environ": [15, 45, 47, 96, 97, 100, 405], "ep": [19, 187, 188, 189, 191, 192, 193, 238, 249, 250, 255, 256, 258, 259, 260, 278, 279, 280, 317, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 375, 380, 381, 382, 383, 384, 385, 386, 387], "epoch": [1, 3, 15, 368, 369, 370, 371, 372, 373, 374, 375, 376], "epsilon": [30, 256, 260, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 380, 381, 382, 383, 384, 385, 386, 387], "equal": [22, 276, 349, 350, 351, 424, 434, 440, 462, 474, 484, 486], "equat": [19, 24, 26], "equival": [410, 457, 470], "error": [0, 3, 10, 12, 14, 15, 19, 21, 60, 213, 216, 217, 218, 219, 222, 251, 253, 296, 318, 324, 331, 332, 333, 334, 366, 367, 424, 461], "escap": 370, "especi": [3, 15, 179, 215, 217, 218, 303, 394, 402, 482, 483, 487, 493], "essenti": [1, 3, 16, 22, 24, 82, 233, 236, 366, 402, 404, 443, 482, 483, 487, 493], "estim": [334, 382, 383, 384, 385, 386, 387, 392], "et": [74, 85, 159, 173, 174, 358], "eta": 388, "eta_": [369, 370, 375, 388], "eta_0": [369, 371, 373, 374, 376], "eta_min": 369, "eta_t": [369, 370, 371, 373, 374, 375, 376], "etc": [10, 54, 60, 93, 103, 331, 364, 483], "euclidean": [23, 260], "european": 85, "eval": [15, 318, 405], "evalu": [213, 255, 258, 316, 317, 318, 319, 320, 321, 322, 337, 338, 339, 341, 342, 343, 395, 405, 447, 493], "evaluate_model": 375, "even": [380, 392, 395, 417, 418, 421, 425, 426, 427, 428], "evenli": [261, 262, 263, 346, 347, 348, 417, 424, 462, 474], "everi": [1, 15, 371, 376, 392, 493], "everywher": 448, "exact": [213, 216, 458, 487, 489], "exactli": [219, 271], "exampl": [4, 15, 368, 410], "exc_typ": 395, "exc_valu": 395, "excel": [76, 100, 182, 183], "except": [0, 193, 392, 395, 448, 463, 465, 481], "exchang": 159, "excit": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 284], "exclud": [478, 479], "exclus": [400, 403, 417], "exdb": 8, "execut": [15, 216, 392, 395, 405], "exist": [14, 26, 215, 217, 219, 396, 423, 463], "exit": 392, "exp": [221, 226, 227, 229, 295, 302, 429], "exp_rang": 370, "expand": [4, 10, 14, 49, 85, 236, 461, 471, 477], "expans": [10, 12, 14, 53, 77, 93, 96, 97, 180, 181, 186, 187, 188, 189, 191, 192, 193], "expansion_factor": 92, "expect": [17, 216, 219, 239, 308, 316, 318, 319, 320, 321, 322, 344, 358, 359, 360, 361, 362, 366], "expens": 3, "experi": [15, 93, 402, 404, 493], "experiment": [15, 404], "explan": [22, 24, 28, 39, 145, 152, 261, 262, 263, 346, 347, 348, 379], "explicit": [12, 13, 14, 219, 324], "explicitli": [14, 15, 85, 215, 217, 405, 422], "explod": [302, 337, 338, 339], "explor": [15, 99, 366, 404], "expon": [22, 260, 415], "exponenti": [221, 226, 228, 295, 302, 304, 316, 371, 373, 382, 383, 384, 385, 386, 439], "exponentiallr": [368, 377], "expos": [15, 392], "express": [10, 12, 14, 42, 175, 176, 177, 182], "extend": [4, 85, 103, 123, 140, 159, 195, 202, 314], "extens": [85, 378], "extern": [4, 392], "extra": [53, 72, 101, 202, 461], "extract": [30, 73, 79, 82, 85, 112, 123, 140, 150, 154, 161, 163, 165, 170, 171, 172, 173, 181, 182, 185, 201, 202, 203, 205, 236, 313, 314, 349, 351, 391, 396, 418, 443, 445, 478, 479, 484, 486], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 85, 113, 201, 208, 272], "extrema": 271, "ey": 429, "f": [1, 4, 5, 6, 7, 8, 15, 85, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 301, 304, 358, 360, 362, 368, 369, 370, 371, 372, 373, 374, 375, 376, 392], "f_1": 284, "f_2": 284, "facilit": [10, 13, 73, 215, 219, 228, 304, 311, 312, 313, 366, 378, 485, 493], "factor": [59, 75, 93, 180, 221, 231, 232, 233, 234, 236, 284, 293, 294, 308, 309, 364, 368, 370, 371, 373, 374, 375, 376, 379, 386, 387, 388, 389], "factori": 151, "failur": [215, 216, 217, 218, 366], "faithfulli": 15, "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 212, 213, 214, 231, 237, 239, 240, 241, 242, 243, 255, 258, 271, 272, 276, 287, 289, 290, 291, 292, 293, 294, 308, 309, 311, 312, 313, 318, 327, 329, 358, 359, 360, 361, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 393, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 443, 444, 445, 453, 459, 460, 467, 483], "famili": [53, 85, 93, 188, 192, 193, 202, 396], "fan": [173, 289, 290, 293, 294], "fan_in": [289, 290], "fan_out": [289, 290], "fashion": [7, 161, 163, 165], "fashion_train": 7, "fashionmnist": 9, "fast": 386, "faster": [85, 181, 368, 381, 385, 395], "fc": [15, 82, 112, 123, 130, 140, 216, 284, 312, 313, 349, 350, 351, 352, 353, 354], "fc1": [15, 88, 89, 155, 215, 219, 296, 297, 298, 300, 301, 302, 303, 305, 306, 329], "fc2": [15, 88, 89, 155, 215, 219, 296, 297, 298, 300, 302, 303, 305, 306, 329], "fc3": 89, "featur": [3, 15, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 85, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 189, 193, 201, 202, 203, 205, 238, 246, 248, 255, 256, 278, 279, 280, 284, 285, 313, 317, 319, 320, 321, 322, 327, 329, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 366, 381], "feature_extractor": 86, "fed": [3, 493], "feed": [3, 493], "feedforward": [155, 156, 206, 358, 360, 362], "femto": [47, 85], "fergu": [85, 152], "fetch": 0, "few": 155, "fewer": [1, 85, 104, 105, 106, 107, 108, 109, 190, 461], "field": [5, 6, 8, 85, 140, 144, 174, 190, 285], "file": [3, 396], "fill": [287, 291, 292, 399, 400, 401, 403, 422, 423, 425, 426, 427, 428], "fill_valu": [422, 423], "filter": [60, 85, 93, 152, 232, 233, 234, 236, 278, 279, 280, 312, 313], "filter_height": 236, "filter_s": 236, "filter_width": 236, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 159, 206, 215, 216, 217, 218, 219, 231, 285, 308, 358, 359, 361, 392, 405, 482, 493], "find": [26, 443, 445], "fine": [99, 102, 159, 173, 174, 284, 493], "finer": 181, "finest": 182, "first": [5, 6, 7, 8, 19, 86, 152, 155, 194, 195, 196, 197, 216, 217, 246, 284, 327, 368, 382, 383, 384, 385, 386, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 454, 462, 468, 481, 482, 483, 493], "fit": [14, 366], "fix": [173, 190, 194, 216, 371, 374, 376, 405, 469], "flag": [15, 392, 395], "flat": [173, 194], "flatten": [12, 82, 86, 219, 236, 314, 414, 466, 470, 471, 473], "flexibl": [1, 3, 4, 10, 12, 14, 40, 73, 82, 83, 84, 85, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 215, 216, 217, 218, 219, 324, 364, 366, 373, 378, 405, 425, 426, 483, 493], "flexibli": 13, "flip": [488, 490, 493], "float": [2, 5, 6, 7, 8, 19, 24, 39, 40, 59, 60, 75, 77, 90, 94, 156, 159, 174, 180, 181, 182, 183, 184, 185, 186, 194, 195, 206, 212, 214, 221, 224, 231, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 255, 256, 258, 259, 260, 274, 277, 278, 279, 280, 287, 291, 292, 293, 294, 295, 299, 308, 309, 316, 317, 318, 319, 320, 321, 322, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 356, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 435, 447, 460, 467, 483, 485, 487, 488, 489, 490], "float32": [212, 214, 391, 405, 417, 418, 421, 422, 423, 425, 427, 460, 483], "float64": [391, 428, 460, 483], "floor": [376, 429], "flop": [85, 173, 392], "flow": [30, 76, 82, 85, 130, 219, 238, 294, 296, 303, 306, 311, 312, 313, 327, 329, 393, 434, 467], "fluctuat": 370, "fly": [2, 3], "fn": 395, "fname": 3, "focu": 30, "follow": [0, 12, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 221, 222, 224, 225, 226, 227, 228, 229, 231, 246, 248, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 316, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 370, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 396, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 443, 445, 454, 461, 468, 472, 484, 485, 486, 487, 488, 489, 490, 493], "footprint": 178, "foral": [359, 361], "forc": [15, 238], "form": [15, 25, 159, 285, 359, 361, 414, 468, 471, 477, 493], "format": [2, 3, 5, 6, 7, 8, 155, 271, 332, 335, 483], "formul": [222, 260], "formula": [19, 27, 228, 261, 262, 263, 304, 305, 333, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 410, 459, 487], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 159, 212, 213, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392], "foundat": [15, 82, 93, 130, 213, 366, 378], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 174, 187, 188, 189, 191, 192, 193, 469], "frac": [13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 159, 174, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 239, 246, 248, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 274, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 360, 362, 369, 380, 381, 382, 383, 384, 385, 386, 387, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 485], "frame": 243, "framework": [4, 10, 15, 154, 332, 335, 337, 338, 339, 341, 342, 343, 367, 378, 493], "free": [15, 391], "frequent": [332, 335], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 159, 174, 175, 176, 177, 178, 179, 181, 212, 213, 214, 215, 216, 217, 218, 219, 236, 238, 246, 255, 258, 271, 272, 274, 276, 278, 279, 280, 284, 285, 287, 289, 290, 291, 292, 293, 294, 301, 308, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 359, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 394, 396, 397, 399, 400, 401, 403, 404, 405, 410, 411, 412, 416, 418, 443, 444, 445, 453, 459, 463, 465, 468, 471, 474, 475, 476, 477, 481, 484, 485, 486, 487, 488, 489, 490, 493], "fu": 173, "full": [15, 27, 94, 96, 97, 156, 206, 429], "full_lik": 429, "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 248, 284, 285, 329, 404, 405], "func": 396, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 169, 213, 215, 216, 217, 218, 219, 278, 279, 280, 284, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 316, 317, 319, 320, 321, 322, 324, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 358, 360, 362, 366, 369, 370, 372, 373, 376, 378, 404, 482, 493], "fundament": [231, 248, 329, 405, 483], "further": [13, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 203, 404, 444, 453, 459], "fuse": [30, 140, 173, 392], "fusion": [141, 142, 143, 159], "futur": [231, 309, 328, 361, 362], "g": [0, 10, 15, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 103, 145, 154, 159, 169, 173, 179, 194, 195, 271, 284, 285, 316, 367, 380, 387, 391, 405, 422, 463, 487], "g_": 381, "g_t": 387, "gain": [293, 294], "gamma": [256, 337, 338, 339, 340, 341, 342, 343, 344, 368, 370, 371, 372, 374, 376], "gamma_c": [256, 340], "gap": [112, 123, 140, 284], "gaussian": [222, 296], "gelu": [169, 174, 223, 245, 307, 326], "gelunetwork": 296, "gener": [15, 24, 41, 46, 50, 155, 156, 239, 271, 272, 277, 314, 316, 317, 319, 320, 321, 322, 342, 358, 383, 385, 386, 392, 397, 399, 400, 401, 402, 403, 404, 409, 417, 419, 420, 424, 468, 486, 487, 488, 490, 493], "geoffrei": [5, 6], "geometr": 440, "geq": 478, "get": [5, 6, 7, 8], "get_lr": [369, 370, 371, 372, 373, 374, 375, 376], "git": 15, "github": [7, 15], "give": [379, 387], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 236, 260, 271, 274, 308, 309, 314, 324, 331, 332, 335, 367, 391, 393, 397, 422, 426, 428, 467, 474, 482, 487, 488, 490, 493], "global": [0, 59, 85, 112, 123, 130, 140, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 180, 182, 185, 186, 190, 194, 196, 197, 198, 199, 201, 202, 203, 256, 284, 340, 392, 393, 395, 402, 404], "global_response_norm": [245, 257], "globalresponsenorm": [326, 345], "go": [10, 74, 85], "goal": [331, 332, 335], "googlenet": [74, 85], "gpu": [85, 179, 212, 214, 391, 397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "grad": [15, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 239, 246, 248, 271, 272, 276, 281, 282, 283, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 367, 378, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 423, 424, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 488, 490, 491], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 85, 212, 214, 272, 314, 317, 366, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 395, 397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 440, 447, 460, 483], "gradual": [368, 369, 371], "grain": [159, 173, 174, 284], "graph": [15, 294, 392, 395, 405, 417, 418, 421, 425, 426, 427, 428, 483], "grayscal": [7, 8, 86, 87, 88, 89, 487, 493], "great": 185, "greater": [49, 184, 434, 435, 462], "green": 487, "grid": [154, 173, 174, 271, 272, 434, 468], "grid_sampl": [245, 271, 273], "grid_window_s": 174, "gridattent": 174, "grn": 340, "groundbreak": 85, "group": [85, 93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 216, 232, 233, 234, 278, 279, 280, 285, 311, 312, 313, 367, 368, 378], "group1": 216, "group2": 216, "groupedconvblock": 123, "grow": 15, "growth_rat": [54, 55, 56, 57, 58], "guarante": 402, "h": [10, 12, 13, 14, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 208, 231, 233, 234, 236, 238, 242, 243, 256, 262, 263, 265, 266, 269, 270, 271, 276, 277, 279, 280, 284, 308, 309, 324, 338, 339, 340, 342, 343, 347, 348, 351, 354, 358, 360, 362, 484, 486], "h_": [233, 234, 262, 263, 265, 266, 269, 270, 276, 312, 313, 314, 347, 348, 350, 351, 353, 354], "h_in": 272, "h_out": [233, 234, 265, 266, 269, 270, 272], "h_stack": 465, "ha": [0, 19, 41, 155, 159, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 219, 232, 233, 234, 278, 279, 280, 301, 305, 331, 332, 337, 338, 339, 341, 342, 343, 344, 364, 367, 378, 405, 410, 434, 440, 447, 457, 461, 463, 465, 476, 481, 487], "hackabl": 15, "haip": 173, "half": [370, 451], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 173, 201, 213, 215, 216, 217, 218, 219, 274, 332, 335, 366, 378, 391], "handwritten": [7, 8, 89], "hang": 85, "hard": [96, 97, 298], "hard_sigmoid": 297, "hardsigmoid": [298, 307, 326], "hardswish": [307, 326], "hardwar": 179, "hashabl": 405, "hat": [30, 382, 383, 384, 385, 386], "have": [0, 1, 15, 18, 19, 21, 24, 25, 27, 214, 216, 218, 219, 233, 234, 238, 260, 274, 294, 356, 366, 421, 425, 426, 427, 428, 443, 445, 463, 465, 467, 468, 475, 476, 481, 485, 491], "he": 85, "head": [30, 39, 77, 92, 150, 156, 159, 170, 171, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 231, 308, 309, 358, 360, 362], "head_dim": 159, "head_fn": 77, "heart": 15, "height": [30, 150, 233, 234, 236, 242, 243, 256, 262, 263, 265, 266, 269, 270, 272, 276, 277, 285, 312, 313, 314, 338, 339, 340, 342, 343, 347, 348, 350, 351, 353, 354, 364, 484, 486, 491], "help": [30, 75, 161, 163, 165, 169, 224, 226, 243, 274, 295, 299, 301, 302, 306, 337, 338, 339, 349, 350, 352, 353, 356, 368, 370, 375, 376, 379, 382, 383, 385, 393, 394, 454], "henc": 472, "here": [3, 17, 213, 246, 366, 378, 394, 404, 482, 483, 493], "hidden": [28, 152, 156, 159, 174, 182, 183, 184, 185, 194, 195, 206, 216], "hidden_s": 216, "hierarch": [39, 40, 85, 161, 163, 165, 173, 180, 181, 182, 183, 184, 185, 186, 187, 192, 194, 195, 216, 219, 366], "hierarchi": 312, "hierarchicalnetwork": 216, "high": [42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 172, 173, 174, 175, 176, 179, 181, 183, 191, 192, 193, 201, 202, 203, 208, 209, 368, 400, 403], "higher": [49, 60, 90, 98, 123, 201, 332, 335, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 409, 410, 414, 439, 454], "highest": [53, 101, 179, 400], "highli": [15, 30, 45, 53, 85, 95, 173, 182, 200, 373], "highlight": [284, 352, 353, 354], "hinton": [5, 6], "histor": 381, "histori": [397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 425, 426, 427, 428], "hold": [93, 215, 216, 217, 218], "horizont": [465, 476, 488, 493], "hot": [332, 335], "how": [2, 3, 12, 14, 136, 137, 138, 139, 144, 182, 216, 219, 271, 272, 324, 366, 493], "howard": 85, "howev": [212, 294, 440], "hstack": 466, "html": [5, 6], "http": [5, 6, 7, 8, 15], "hu": [85, 284], "huang": 85, "huber": [251, 333], "huber_loss": [245, 252], "huberloss": [326, 336], "huberregressionmodel": 333, "hue": 493, "huge": [48, 85, 173, 182], "hybrid": [85, 101, 102, 169, 173], "hyperbol": [229, 306, 437, 450, 456], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 180, 367, 379], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "i_1": [12, 13, 14, 324], "i_2": [12, 13, 14, 324], "i_k": 14, "i_m": [12, 14, 324], "iccv": 85, "iclr": 173, "idea": 85, "ideal": [42, 46, 50, 90, 93, 102, 179, 182, 219], "ident": [21, 22, 77, 85, 271, 272, 277, 318, 326, 330, 402, 404, 421, 472], "identifi": 217, "idx": [2, 3], "ieee": [85, 173, 284], "ignor": [358, 359, 360, 361, 362], "ii": 457, "ij": [30, 228, 276, 304, 408, 409, 410, 414, 468, 478, 479], "ik": [408, 409, 410], "ill": [18, 24], "ilsvrc": 85, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "image_dir": 3, "image_path": 3, "image_s": [206, 207, 208, 209, 210, 211], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144], "imbal": [332, 335], "img_siz": [30, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "impact": [85, 385], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 85, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 156, 169, 173, 180, 181, 194, 206, 213, 236, 239, 272, 281, 282, 283, 285, 308, 309, 314, 318, 340, 360, 362, 367, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 465, 481, 487], "impli": [311, 312], "implicit": [314, 422], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "improp": [10, 216, 219, 404], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 85, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 158, 161, 163, 165, 169, 171, 173, 174, 181, 188, 190, 194, 195, 202, 203, 205, 238, 239, 255, 274, 277, 284, 296, 302, 306, 324, 356, 368, 369, 370, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 486, 489, 493], "imread": 3, "in1_featur": [246, 327], "in2_featur": [246, 327], "in_channel": [30, 112, 159, 169, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 216, 219, 278, 279, 280, 281, 282, 283, 284, 285, 311, 312, 313, 338, 339, 349, 350, 351, 352, 353, 354, 366], "in_featur": [215, 216, 219, 248, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 312, 313, 316, 319, 320, 327, 329, 331, 332, 333, 334, 335, 337, 341, 344, 349, 350, 351, 352, 353, 354], "incept": [74, 75, 76, 77, 82, 83, 84], "inception_next": 77, "inception_next_atto": 85, "inception_next_bas": 85, "inception_next_smal": 85, "inception_next_tini": 85, "inception_resnet_v1": 85, "inception_resnet_v2": 85, "inception_v1": 85, "inception_v3": 85, "inception_v4": 85, "inceptionnext": [78, 79, 80, 81], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 170, 171, 172, 174, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 216, 218, 219, 276, 278, 279, 280, 281, 282, 283, 360, 362, 364, 366, 367, 372, 378, 385, 392, 404, 410, 469, 478, 479], "inclus": [214, 217, 400, 403, 424], "incom": [248, 329], "incompat": 461, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 85, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 202, 204, 296], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 174, 177, 179, 182, 183, 185, 188, 193, 232, 233, 234, 236, 277, 370, 375, 381, 388, 394, 465, 481, 487, 488, 490, 493], "independ": [159, 216, 232, 233, 234, 308, 316, 319, 320, 321, 322, 344, 410, 420, 485, 487, 489, 491], "index": [0, 2, 5, 6, 7, 8, 10, 12, 256, 274, 324, 340, 356, 369, 370, 371, 372, 373, 374, 376, 394, 405, 417, 418, 421, 440, 468, 472], "indexerror": 0, "indic": [0, 1, 13, 14, 15, 110, 111, 145, 155, 170, 171, 172, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 216, 218, 219, 250, 254, 274, 332, 335, 349, 356, 358, 359, 360, 361, 362, 374, 391, 393, 405, 484, 486], "individu": [3, 216, 219, 333, 344, 378, 381, 388], "induc": [226, 302], "induct": [161, 163, 165, 169, 173], "inf": 455, "infer": [136, 137, 138, 139, 144, 181, 216, 219, 391, 395], "infin": [25, 27, 384], "inform": [30, 85, 155, 159, 173, 182, 196, 197, 198, 199, 204, 212, 284, 372, 378, 380], "infti": [23, 386], "inherit": [1, 379, 387, 389], "init": 288, "initi": [1, 15, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 174, 178, 200, 201, 202, 203, 212, 214, 215, 216, 217, 218, 219, 285, 287, 289, 290, 291, 292, 293, 294, 308, 311, 312, 313, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 344, 356, 360, 362, 364, 366, 367, 369, 371, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 399, 402, 403, 404, 417, 421, 424, 425, 426, 427, 428, 460], "initial_accumulator_valu": 381, "inner": [408, 429], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 155, 159, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395, 404, 405, 406, 408, 409, 410, 414, 418, 420, 423, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "input1": 327, "input2": 327, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 340, 346, 347, 348, 356, 462, 478, 479], "input_1": 246, "input_2": 246, "input_data": [295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 319, 320, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354], "input_indic": [274, 356], "input_s": [216, 218, 304, 332, 335], "input_shap": 155, "input_tensor": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 159, 174, 175, 176, 177, 178, 179, 212, 215, 216, 217, 218, 219, 228, 238, 239, 260, 281, 282, 283, 284, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 364, 366, 484, 485, 486, 487, 488, 489, 490, 491], "insid": [3, 392, 393], "insight": 85, "inspect": [15, 213, 214, 219, 367], "inspir": [10, 12, 14, 15, 39, 85], "instabl": [24, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389], "instanc": [0, 1, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 258, 301, 341, 342, 343, 344, 358, 359, 361, 367, 391, 395, 396, 460, 471, 477, 493], "instance_norm": [245, 257, 341, 342, 343], "instancenorm1d": [326, 345], "instancenorm1dmodel": 341, "instancenorm2d": [326, 345], "instancenorm3d": [326, 345], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 396], "instead": [155, 161, 163, 165, 215, 216, 217, 218, 219, 289, 290, 293, 294, 356, 358, 360, 362, 382, 383, 384, 419, 420], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 228, 231, 232, 233, 234, 236, 238, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 304, 308, 309, 311, 312, 313, 314, 317, 324, 327, 329, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 388, 391, 396, 397, 399, 400, 401, 402, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 435, 443, 444, 445, 447, 453, 454, 458, 459, 460, 461, 462, 463, 464, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 486, 491], "int32": 356, "int64": [391, 405], "integ": [1, 3, 22, 130, 145, 232, 233, 234, 262, 263, 308, 311, 312, 313, 314, 344, 347, 348, 350, 351, 352, 353, 354, 400, 401, 403, 404, 419, 425, 427, 434, 440, 444, 447, 453, 458, 459, 469, 471, 472, 474, 477], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 15, 16, 85, 101, 103, 156, 159, 169, 170, 171, 172, 174, 214, 216, 218, 219, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 324, 327, 329, 349, 350, 351, 352, 353, 354, 405], "intellig": [85, 284], "intend": [10, 183, 212, 217, 218], "intens": [24, 54, 113, 485, 487], "interact": [174, 194, 246, 327, 366, 404], "interdepend": 85, "interfac": [2, 15, 213, 216, 378], "interfer": 393, "intermedi": [24, 110, 111, 182, 284, 358, 360, 362, 405], "intern": [15, 85, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 173, 215, 216, 217, 218, 219, 332, 335, 366, 484, 485, 486, 487, 488, 489, 490, 491], "interpol": [245, 272, 275, 364, 424, 491], "interpret": [10, 85, 228, 304, 463], "interv": [374, 376, 399, 403, 417], "introduc": [40, 60, 74, 75, 85, 90, 91, 92, 123, 161, 163, 165, 169, 173, 174, 180, 181, 189, 205, 225, 284, 296, 300, 301, 303, 306, 316, 319, 320, 321, 322, 358, 486, 489, 493], "introspect": [15, 219], "intuit": [10, 12, 15, 215, 217, 366, 493], "inv": 20, "inv_a": 21, "invari": [350, 353], "invers": [18, 21, 22, 24, 370, 381, 431, 432, 433], "invert": [18, 21, 22, 26, 85, 91, 92, 95], "invit": 15, "invok": 396, "involv": [12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 140, 221, 222, 224, 225, 226, 227, 229, 246, 248, 276, 311, 312, 313, 324, 327, 329, 397, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 428, 439, 441, 442, 443, 445, 449, 451, 468, 469, 471, 477], "is_all_fre": 405, "is_bit_fre": 391, "is_caus": [231, 309, 361, 362], "is_fre": 405, "is_leaf": 405, "isn": 15, "issu": [3, 15, 302, 337, 338, 339, 382, 383], "item": [7, 15, 334], "iter": [0, 1, 2, 3, 212, 213, 216, 218, 359, 361, 367, 370, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 417], "ith": [228, 304], "its": [4, 15, 22, 24, 28, 40, 85, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 155, 179, 181, 212, 215, 216, 217, 218, 232, 233, 234, 236, 271, 277, 285, 294, 296, 300, 305, 317, 352, 353, 354, 366, 367, 380, 388, 392, 393, 394, 396, 417, 419, 420, 427, 434, 440, 443, 445, 447, 460, 461, 472, 474, 485, 488, 490, 493], "itself": [17, 22, 215, 216, 217, 218, 368, 395], "j": [8, 10, 12, 13, 14, 30, 228, 274, 284, 304, 324, 337, 338, 339, 341, 342, 343, 349, 350, 352, 353, 356, 468, 476, 478, 479, 484, 486], "j_1": [12, 14, 324], "j_2": [12, 14, 324], "j_k": 14, "j_n": [12, 14, 324], "jie": 85, "jk": 409, "join": [3, 463], "json": 396, "k": [22, 30, 85, 159, 174, 181, 231, 232, 308, 309, 311, 332, 338, 339, 342, 343, 349, 352, 353, 362, 408, 409, 418, 421, 463, 474], "k_2": 159, "k_d": [234, 313, 351, 354], "k_h": [233, 234, 312, 313, 314, 350, 351, 354], "k_i": 308, "k_j": 30, "k_w": [233, 234, 312, 313, 314, 350, 351, 354], "kaim": [85, 289, 290, 293, 294], "kaiming_norm": 288, "kaiming_uniform": 288, "kalenichenko": 85, "karen": 85, "kashif": 7, "kdim": 308, "keep": [213, 239, 300, 380, 392, 447, 472, 478, 479], "keep_grad": [214, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 460, 483], "keep_var": 213, "keepdim": [23, 443, 444, 445, 453, 459], "kei": [15, 93, 154, 159, 169, 174, 180, 186, 187, 188, 189, 191, 192, 193, 194, 195, 213, 215, 217, 219, 231, 308, 309, 362, 367], "kept": [444, 453, 459], "kernel": [85, 86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 314, 346, 347, 348, 350, 351, 354, 392], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 216, 219, 264, 265, 266, 268, 269, 270, 278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 314, 324, 338, 339, 349, 350, 351, 352, 353, 354], "keyerror": 213, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 213, 328], "kj": [408, 410], "known": 85, "kriz": [5, 6], "krizhevski": [5, 6, 85], "kroneck": [12, 228, 304, 324], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 328, 396], "l": [17, 24, 69, 85, 173, 209, 231, 232, 241, 261, 264, 268, 278, 284, 309, 314, 316, 319, 320, 321, 322, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 361, 362, 454, 461], "l1": 260, "l2": [260, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389], "l_": [173, 232, 261, 264, 268, 311, 346, 349, 352, 358], "l_k": 308, "l_m": [359, 360], "l_out": [232, 264, 268], "l_q": 308, "l_t": [358, 359, 360], "l_v": 308, "label": [4, 5, 6, 7, 8, 75, 331, 332, 335], "lambd": 379, "lambda": [19, 226, 302, 373, 379, 383], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 373, "lambda_i": 19, "lambda_n": 19, "lambdalr": 377, "languag": [4, 311, 327, 349, 352, 358], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 85, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 161, 163, 165, 173, 174, 175, 176, 179, 182, 183, 193, 197, 201, 202, 203, 207, 208, 209, 281, 282, 283, 301, 333, 366, 379, 382, 383, 384, 387, 388, 389], "larger": [41, 59, 60, 112, 140, 158, 159, 162, 171, 172, 174, 175, 176, 202, 215, 217, 232, 233, 234, 236, 238, 317, 379, 411, 462, 469, 484, 486, 491], "largest": [53, 182, 193, 201, 443], "last": [1, 228, 259, 304, 369, 370, 371, 372, 373, 374, 376, 409, 410, 462, 463, 488, 490], "last_channel": 92, "last_epoch": [369, 370, 371, 372, 373, 374, 376], "last_lr": [368, 369, 370, 371, 372, 373, 374, 375, 376], "later": [30, 85], "latest": [4, 15], "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195, 201, 202, 206, 213, 215, 216, 219, 228, 239, 248, 255, 258, 259, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 304, 309, 311, 312, 313, 318, 327, 328, 329, 335, 344, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 404, 469, 483], "layer1": 396, "layer2": 396, "layer_group": 216, "layer_norm": [245, 257, 344], "layer_norm_ep": [358, 360, 362], "layer_scale_init": 39, "layer_sequ": [216, 219], "layernorm": [159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 326, 345, 358, 359, 360, 361, 362], "layernormmodel": 344, "lceil": 434, "le": 85, "lead": [10, 15, 216, 219, 260, 296, 341, 342, 343, 344, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 404, 461], "leaf": 405, "leaki": [224, 299], "leaky_relu": [223, 245, 299], "leakyrelu": [307, 326], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 85, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 173, 174, 182, 186, 215, 216, 217, 218, 225, 228, 284, 295, 299, 300, 304, 311, 312, 313, 319, 320, 321, 322, 324, 327, 329, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 402, 424, 474, 478, 479, 482, 483, 493], "learnabl": [30, 159, 194, 195, 212, 213, 214, 255, 256, 258, 259, 278, 279, 280, 308, 311, 312, 313, 327, 329, 337, 338, 339, 340, 341, 342, 343, 344, 362, 366], "least": [24, 25, 27, 364, 457, 478, 479], "lecun": [8, 85], "left": [22, 23, 24, 27, 30, 159, 174, 222, 228, 260, 296, 304, 308, 314, 331, 332, 333, 335, 337, 338, 339, 341, 342, 343, 344, 352, 353, 354, 360, 362, 454, 484, 486], "leftarrow": 385, "len": [0, 1, 2, 3, 468], "lenet": [87, 88, 89], "lenet_1": 85, "lenet_4": 85, "lenet_5": 85, "length": [159, 174, 216, 231, 232, 241, 261, 264, 268, 311, 328, 337, 341, 346, 349, 352, 361, 362, 469, 485], "leq": [297, 298, 333, 374, 386, 415, 435, 479], "lerp": 276, "less": [0, 221, 224, 251, 295, 299, 332, 333, 335, 424, 435, 440], "let": 19, "level": [82, 174, 182, 183, 184, 185, 314], "leverag": [12, 13, 14, 15, 26, 30, 76, 77, 84, 85, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 187, 190, 196, 197, 198, 199, 200, 201, 285, 366], "lfloor": [314, 376, 440], "li": [85, 190], "librari": [3, 10, 15, 16, 213, 366, 367, 378, 396, 404, 405, 493], "lie": 397, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 164, 178, 186, 190, 198, 199, 205, 211, 285, 298, 301], "like": [12, 13, 14, 15, 60, 82, 85, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 161, 163, 165, 173, 203, 212, 213, 216, 219, 232, 238, 293, 294, 302, 316, 317, 324, 337, 338, 339, 341, 342, 343, 393, 394, 423, 460, 483, 493], "likelihood": [254, 332, 335], "limit": [44, 51, 96, 97, 98, 100, 155, 301, 380, 435], "linalg": 20, "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "line": [15, 395], "linear": [15, 16, 17, 24, 25, 26, 77, 85, 91, 95, 130, 155, 173, 174, 181, 187, 188, 189, 190, 191, 192, 193, 215, 216, 217, 219, 221, 222, 224, 225, 226, 239, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 313, 314, 316, 318, 319, 320, 327, 328, 331, 332, 333, 334, 335, 337, 341, 344, 349, 350, 351, 352, 353, 354, 358, 360, 362, 368, 396, 421], "linearli": 333, "linspac": 429, "linspace_tensor": 424, "list": [0, 1, 15, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 159, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 214, 215, 216, 217, 218, 259, 285, 328, 344, 367, 369, 370, 371, 372, 373, 374, 375, 376, 397, 399, 400, 401, 403, 405, 418, 419, 420, 422, 423, 425, 426, 427, 428, 458, 461, 472, 474, 475, 480, 482], "listdir": 3, "liter": [13, 112, 212, 214, 249, 250, 251, 253, 254, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 311, 312, 313, 331, 332, 333, 334, 335, 364, 370, 375, 391, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 468], "liu": [85, 173], "ln": 415, "load": [3, 4, 5, 6, 7, 8, 212, 213, 214, 367, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396], "load_state_dict": [213, 367, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "loader": [1, 2, 3], "local": [15, 30, 85, 161, 163, 165, 169, 170, 171, 172, 173, 174, 180, 182, 185, 194, 195, 196, 197, 198, 199, 236, 311, 314, 370], "locat": [85, 272, 276], "log": [195, 254, 331, 332, 335, 369, 370, 371, 372, 373, 374, 375, 376, 429, 442], "log2": 429, "log_2": 442, "log_softmax": 335, "logarithm": [415, 439, 441, 442], "logic": [3, 346, 347, 348, 366, 367, 440], "logit": [28, 39, 152, 228, 304, 332, 392], "logsoftmax": [332, 335], "long": [30, 154, 173, 174, 183, 271, 385, 458], "lookup": [274, 356], "loop": [1, 12, 13, 14, 15, 216, 324, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "loss": [15, 24, 215, 216, 217, 218, 219, 228, 249, 250, 251, 253, 254, 271, 295, 296, 299, 300, 302, 303, 304, 306, 316, 319, 320, 321, 322, 328, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "low": [82, 91, 96, 97, 100, 400, 403], "lower": [17, 90, 292, 314, 359, 360, 361, 362, 370, 379, 387, 388, 389, 403, 478, 479], "lower_triangular": 478, "lowest": 400, "lp": 260, "lr": [15, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "lr_lambda": 373, "lr_schedul": 377, "lrschedul": 377, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 398, 429, 466, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "m": [70, 85, 145, 173, 215, 216, 219, 308, 350, 351, 353, 354, 358, 359, 362, 374, 382, 383, 384, 385, 386, 421, 478, 479], "m1": 15, "m2": 15, "m3": 15, "m_": [382, 383, 384, 385, 386, 478, 479], "m_m": 360, "m_t": [360, 385, 386], "maaten": 85, "mac": 15, "machin": [3, 7, 8, 24, 85, 156, 284, 358, 382, 394, 402], "magnitud": [239, 274, 356, 387, 388, 493], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 216, 218, 260, 277, 318, 324, 333, 368, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 404, 462, 487, 493], "main": [25, 82, 216, 418, 421, 478, 479], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 85, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 159, 168, 170, 171, 172, 177, 184, 185, 186, 188, 189, 190, 191, 195, 212, 213, 215, 216, 217, 219, 226, 239, 289, 290, 293, 294, 295, 296, 302, 316, 318, 319, 320, 321, 322, 337, 338, 339, 341, 342, 343, 382, 387, 484, 487, 491], "major": 15, "make": [1, 3, 10, 30, 42, 43, 46, 47, 73, 82, 85, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 173, 179, 182, 191, 196, 197, 198, 199, 200, 204, 205, 207, 210, 216, 219, 303, 332, 333, 344, 350, 353, 366, 381, 382, 383, 384, 394, 396, 404, 410, 468, 474, 482, 493], "manag": [213, 215, 216, 217, 218, 219, 366, 378, 392, 393, 395, 396, 404], "manhattan": 23, "mani": 155, "manipul": [10, 12, 215, 217, 493], "manner": [10, 12, 13, 194, 216, 219, 391], "manual": [10, 249, 250, 254, 314, 331, 332, 335], "map": [12, 14, 77, 85, 110, 111, 112, 123, 133, 140, 174, 213, 227, 229, 238, 256, 272, 284, 303, 306, 318, 324, 340, 356, 392, 462], "mark": 467, "marri": 85, "mask": [85, 212, 231, 308, 309, 316, 319, 320, 321, 322, 358, 359, 360, 361, 362, 467, 478, 479], "masked_fil": 466, "match": [10, 14, 15, 26, 159, 213, 216, 219, 231, 249, 251, 253, 259, 278, 279, 280, 317, 356, 367, 423, 439, 461, 471, 472, 474, 477, 480, 485, 493], "math": [308, 436, 449, 455], "mathbb": [308, 474], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 246, 248, 271, 276, 281, 282, 283, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 312, 313, 316, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 408, 409, 410, 414, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 465, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491], "mathcal": [289, 291, 293, 316, 319, 320, 321, 322, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344], "mathemat": [15, 21, 278, 279, 280, 486, 488, 489, 490], "mathrm": [24, 447], "matmul": [314, 429], "matric": [16, 18, 19, 21, 24, 26, 27, 271, 308, 362, 408, 409, 410, 421, 468, 478, 479], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 236, 246, 271, 274, 314, 328, 329, 356, 366, 408, 454, 468], "matrix_pow": 20, "matthew": 85, "max": [10, 23, 130, 145, 225, 260, 268, 269, 270, 274, 297, 298, 300, 301, 352, 353, 354, 356, 369, 370, 375, 384, 411, 429, 435], "max_lr": 370, "max_norm": [274, 356], "max_pool": [352, 353, 354], "max_pool1d": [245, 267], "max_pool2d": [245, 267], "max_pool3d": [245, 267], "max_valu": 435, "maxim": [3, 48, 101], "maximum": [23, 179, 300, 301, 352, 353, 354, 369, 370, 382, 384, 429, 435, 443, 489], "maxpool": [28, 152], "maxpool1d": [326, 355], "maxpool1dmodel": 352, "maxpool2d": [216, 219, 312, 326, 355], "maxpool2dmodel": 353, "maxpool3d": [313, 326, 355], "maxpool3dmodel": 354, "maxvit": [175, 176, 177, 178, 179], "maxvit_bas": 173, "maxvit_larg": [173, 176], "maxvit_smal": 173, "maxvit_tini": [173, 177], "maxvit_xlarg": 173, "mbconv": 174, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 212, 226, 232, 233, 234, 237, 249, 250, 251, 253, 254, 255, 258, 278, 279, 280, 291, 295, 296, 297, 299, 300, 302, 303, 306, 313, 316, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 375, 382, 383, 384, 385, 386, 387, 393, 401, 429, 435, 439, 441, 442, 443, 445, 449, 451, 453, 457, 458, 459, 482, 485, 493], "meaning": [13, 219], "measur": [331, 332, 334, 335], "mechan": [30, 110, 111, 130, 140, 144, 154, 156, 159, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 190, 195, 196, 197, 198, 199, 200, 203, 204, 206, 218, 246, 308, 462], "media": 173, "medium": [47, 51, 70, 85, 98, 99, 102, 160, 173, 184], "meet": 85, "mem_is_caus": [359, 360], "mem_key_padding_mask": [358, 359, 360], "mem_mask": [358, 359, 360], "membership": 331, "memori": [2, 3, 15, 54, 190, 358, 359, 360, 395, 419, 420], "merg": [12, 324], "meshgrid": 466, "metal": [391, 405], "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 215, 216, 217, 218, 219, 249, 250, 251, 253, 254, 272, 289, 290, 293, 294, 331, 332, 333, 334, 335, 364, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 404], "metric": 375, "mha": 308, "mid": [80, 210], "mid_channel": [96, 97], "middl": [175, 176, 394], "might": 366, "migrat": 15, "mileston": 374, "mimic": 423, "min": [297, 298, 301, 369, 370, 375, 412, 429, 435], "min_lr": 375, "min_valu": 435, "mind": [0, 3, 216, 219, 395, 447], "mingx": 85, "mini": 1, "minim": [4, 78, 85, 92, 219, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 378], "minima": 370, "minimalist": 15, "minimum": [369, 370, 375, 429, 435, 445], "minu": 303, "mirror": [426, 428], "mismatch": [10, 12, 14, 60, 174, 213, 324, 366, 367], "miss": [213, 366], "mitig": [224, 295, 299, 302, 337, 338, 339], "mix": [77, 392, 395], "mixer": 77, "mlp": [15, 77, 159, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 285], "mlp_dim": 206, "mlp_ratio": [77, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195], "mlx": [179, 391, 405, 422], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [85, 90, 91, 92, 93, 95, 96, 97, 100, 187], "mobilenet": [91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 301], "mobilenet_v2": 85, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 85, "mobilenet_v3_smal": 85, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 85, "mobilenet_v4_conv_medium": 85, "mobilenet_v4_conv_smal": 85, "mobilenet_v4_hybrid_larg": 85, "mobilenet_v4_hybrid_medium": 85, "mobilenetv2": [85, 91], "mobilenetv3": [85, 92, 96, 97], "mode": [15, 243, 255, 258, 271, 272, 276, 289, 290, 316, 318, 319, 320, 321, 322, 364, 370, 375, 405, 469], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 231, 238, 274, 277, 278, 279, 280, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 318, 319, 320, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 396, 404, 434, 482, 483, 493], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134, 191], "modern": [15, 39, 40, 77, 85], "modif": [151, 219], "modifi": [15, 29, 98, 112, 150, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 215, 216, 217, 218, 287, 289, 290, 291, 292, 293, 294, 316, 368, 393, 402, 405, 465, 467, 473, 481], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 85, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 180, 181, 194, 195, 212, 214, 215, 216, 217, 218, 219, 239, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 404, 483, 493], "modular": [3, 15, 154, 156, 213, 216, 219, 366, 493], "moduledict": [216, 217, 219, 220], "modulelist": [218, 219, 220], "moment": [382, 383, 384, 385, 386], "momentum": [255, 258, 278, 279, 280, 337, 338, 339, 341, 342, 343, 370, 379, 385, 387, 389], "momentum_decai": 385, "monitor": 375, "monoton": 305, "moor": 24, "more": [3, 4, 7, 10, 19, 42, 112, 119, 158, 161, 163, 165, 172, 175, 176, 177, 183, 184, 185, 189, 201, 202, 204, 205, 215, 216, 219, 238, 281, 282, 283, 295, 319, 320, 321, 322, 358, 366, 367, 378, 379, 380, 383, 384, 387, 388, 389, 401, 410, 457, 476, 478, 479, 493], "most": [16, 46, 85, 182, 353, 483, 484, 493], "mostli": 447, "move": [15, 379, 387], "mse": [251, 253, 333, 334], "mse_loss": [15, 245, 252], "mseloss": [326, 336], "mu": [30, 291, 337, 338, 339, 341, 342, 343, 344, 459], "mu_c": 485, "mu_i": [341, 342, 343], "much": [182, 493], "mul": 413, "multi": [3, 4, 77, 83, 85, 140, 141, 142, 143, 156, 159, 161, 163, 165, 170, 171, 172, 173, 174, 180, 181, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 228, 231, 250, 254, 285, 304, 308, 332, 335, 358, 360, 362, 392, 405, 444, 453, 459], "multi_conv": [159, 161, 163, 165], "multidimension": [399, 403, 419], "multiheadattent": [310, 326], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 159, 161, 163, 165, 217, 218, 219, 236, 276, 277, 284, 285, 308, 314, 316, 319, 320, 321, 322, 324, 332, 335, 359, 361, 366, 368, 371, 375, 394, 397, 399, 400, 401, 403, 408, 413, 419, 420, 454, 462, 474, 482, 487, 493], "multipli": [22, 94, 218, 248, 329, 364, 374, 375, 376, 388, 414, 429, 442], "multisteplr": 377, "must": [0, 1, 3, 15, 17, 18, 19, 21, 22, 25, 26, 27, 155, 159, 213, 215, 216, 217, 218, 219, 239, 259, 308, 316, 318, 319, 320, 321, 322, 335, 356, 358, 360, 362, 364, 367, 372, 397, 457, 461, 462, 463, 465, 467, 469, 471, 472, 474, 476, 477, 478, 479, 481, 484, 485, 486, 487, 488, 490], "mx": [391, 405], "my_simple_model": 396, "mymodel": [213, 214, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "myoptim": [367, 378], "n": [12, 22, 23, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 173, 215, 216, 219, 231, 232, 233, 234, 236, 238, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 284, 289, 291, 293, 308, 309, 311, 312, 313, 314, 321, 322, 327, 329, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 421, 444, 447, 457, 459], "n1": 23, "nabla_": [380, 381, 382, 383, 384, 385, 386, 388], "nabla_t": 386, "nadam": 390, "nair": [5, 6], "name": [10, 12, 13, 14, 85, 155, 173, 213, 215, 217, 219, 324, 396], "nan": [25, 27], "nano": [50, 85], "natur": [24, 154, 311, 327, 349, 352, 358, 415, 439, 440, 441], "ndarrai": [15, 212, 214, 397, 405, 418, 420, 423, 426, 428, 460], "ndim": [25, 27, 214, 405], "ne": 22, "nearest": [272, 276, 364, 440, 447], "nearli": 405, "necessari": [4, 5, 6, 7, 8, 15, 24, 465, 481], "need": [2, 4, 13, 14, 102, 173, 216, 217, 218, 228, 327, 358, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 419, 420, 482, 483, 493], "neg": [22, 24, 27, 221, 254, 277, 295, 299, 300, 302, 332, 335, 388, 447, 463], "negative_slop": [224, 299], "neglect": 218, "neighbor": [272, 276], "neq": 23, "nest": [155, 216, 219, 366, 392, 395], "nestedmodel": 155, "nesterov": 385, "net": [85, 152], "network": [3, 4, 10, 13, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 85, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 171, 173, 206, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227, 228, 229, 232, 233, 234, 238, 239, 246, 248, 255, 272, 277, 284, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 349, 350, 351, 352, 353, 354, 356, 358, 360, 362, 366, 367, 378, 379, 387, 389, 403, 404, 405, 417, 425, 427, 443, 445, 469, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "neural": [3, 4, 10, 13, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 89, 153, 154, 155, 173, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227, 228, 229, 232, 233, 234, 239, 246, 248, 255, 277, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 349, 350, 351, 352, 353, 354, 356, 366, 367, 378, 379, 387, 389, 403, 404, 405, 417, 425, 427, 443, 445, 469, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "neuralnetwork": [297, 298, 300, 305], "neuron": 299, "never": 487, "new": [14, 213, 214, 221, 222, 224, 225, 226, 227, 229, 246, 248, 276, 285, 289, 290, 291, 292, 293, 294, 367, 372, 375, 395, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 423, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 463, 465, 467, 469, 471, 472, 473, 476, 477, 478, 479, 480, 481], "new_tensor": 454, "next": [219, 482], "nll": 254, "nll_loss": [245, 252], "nllloss": [326, 336], "nlp": [274, 356], "nn": [5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 220, 223, 230, 235, 244, 247, 252, 257, 267, 273, 275, 286, 288, 307, 310, 315, 323, 325, 326, 330, 336, 345, 355, 357, 363, 365, 367, 368, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 483, 493], "no_grad": [15, 393], "node": [15, 405], "nois": [27, 404], "non": [19, 22, 24, 27, 173, 174, 218, 222, 224, 225, 271, 289, 290, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 316, 319, 320, 321, 322, 358, 359, 360, 361, 362, 382, 383, 415, 434, 435, 440, 447], "nonconform": 15, "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 159, 169, 180, 181, 194, 195, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 246, 248, 249, 250, 251, 253, 254, 255, 258, 259, 274, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "norm": [16, 20, 159, 169, 174, 177, 178, 180, 181, 194, 195, 260, 274, 356, 359, 361, 384], "norm_first": [358, 360, 362], "norm_lay": [159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195], "norm_layer_tf": 174, "norm_typ": [274, 356], "normal": [5, 6, 7, 8, 30, 39, 85, 130, 159, 169, 174, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 222, 226, 228, 229, 238, 255, 256, 258, 259, 271, 272, 274, 278, 279, 280, 288, 289, 293, 296, 302, 304, 316, 337, 338, 339, 340, 341, 342, 343, 344, 356, 358, 359, 360, 361, 362, 387, 401, 404, 482, 492, 493], "normalized_shap": [259, 344], "notat": [10, 12, 13, 14, 324], "note": [232, 316], "noth": [237, 240, 241, 242], "notimplementederror": [2, 213, 367], "notin": 435, "nov": 85, "novel": [7, 85, 173, 174], "now": 15, "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 212, 214, 284, 332, 335, 356, 391, 405, 410, 417, 418, 421, 425, 427, 428, 454, 460, 483], "npy": [5, 6, 7, 8], "num": [359, 361, 424], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 304, 332, 335], "num_decoder_lay": [156, 358], "num_embed": [274, 356], "num_encoder_lay": [156, 358], "num_featur": [219, 278, 279, 280, 337, 338, 339, 341, 342, 343], "num_head": [30, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 308, 358, 359, 360, 361, 362], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [206, 359, 361], "num_paramet": 218, "num_stag": 181, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 231, 232, 233, 234, 236, 241, 242, 243, 246, 248, 250, 254, 255, 256, 258, 261, 262, 263, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 303, 308, 311, 312, 313, 314, 324, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 369, 370, 374, 375, 376, 379, 391, 399, 402, 403, 405, 415, 417, 419, 421, 424, 443, 444, 445, 447, 458, 459, 462, 463, 465, 469, 471, 472, 473, 475, 477, 481, 485, 487, 488, 490, 493], "numer": [13, 21, 24, 238, 249, 250, 255, 256, 258, 259, 260, 278, 279, 280, 301, 317, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 358, 360, 362, 380, 381, 382, 383, 384, 385, 386, 387, 405, 407, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 460, 483], "numpi": [15, 212, 214, 332, 335, 391, 405, 410, 422, 454, 457, 461, 469, 471, 477, 483, 493], "o": [3, 173, 308, 351, 354, 425, 426], "object": [1, 3, 16, 85, 140, 159, 174, 200, 201, 202, 203, 204, 213, 217, 218, 334, 366, 391, 392, 406, 407, 411, 412, 413, 416, 460], "observ": 382, "obtain": [1, 174], "occur": [14, 277, 392, 395, 396, 463], "occurr": 22, "odot": [316, 319, 320, 321, 322], "off": [43, 99, 393], "offer": [4, 10, 40, 41, 43, 53, 80, 99, 172, 175, 176, 179, 184, 185, 187, 189, 207, 366, 378, 404, 493], "offset": 421, "often": [22, 121, 122, 232, 233, 234, 236, 272, 274, 317, 332, 335, 417, 427, 483, 487, 491, 493], "old": 375, "older": 385, "one": [0, 13, 136, 137, 138, 139, 144, 218, 219, 228, 232, 248, 264, 268, 278, 279, 280, 302, 303, 304, 311, 320, 332, 335, 337, 341, 349, 352, 364, 367, 392, 394, 395, 401, 416, 422, 423, 426, 443, 445, 464, 470, 476, 483], "ones": [15, 246, 248, 311, 312, 313, 329, 337, 338, 339, 341, 342, 343, 344, 366, 421, 422, 426, 429, 462], "ones_lik": 429, "onli": [155, 271, 272, 276, 297, 300, 316, 317, 319, 320, 321, 322, 331, 332, 335, 337, 338, 339, 341, 342, 343, 344, 352, 353, 354, 388, 392, 393, 417, 435, 443, 445, 454, 457, 469, 470, 472, 473, 475, 478, 479], "onto": [25, 27], "openml": [5, 6, 7, 8, 15], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 159, 161, 163, 165, 174, 190, 212, 213, 216, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 239, 243, 246, 248, 261, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 327, 328, 329, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 366, 392, 393, 394, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 425, 427, 439, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 457, 459, 463, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 491], "operand": 405, "operatornam": [22, 24, 308, 358, 359, 360, 361, 362], "opposit": [379, 473], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 91, 92, 96, 97, 99, 100, 101, 102, 164, 167, 168, 182, 200, 201, 212, 214, 217, 218, 236, 311, 312, 313, 356, 366, 369, 370, 371, 372, 373, 374, 375, 376], "optimizer_st": [367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 228, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 299, 304, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 387, 389, 397, 399, 400, 401, 403, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 443, 444, 445, 447, 453, 458, 459, 460, 462, 463, 468, 471, 473, 474, 475, 476, 478, 479, 483, 487, 488, 490], "ord": [23, 260], "order": [1, 3, 10, 15, 23, 27, 215, 216, 217, 218, 219, 458, 482], "ordered_dict": 219, "ordereddict": [213, 215, 216, 219], "organ": [159, 215, 216, 217, 219, 396], "orient": 493, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 173, 194, 195, 205, 237, 277, 284, 306, 392, 434, 440, 462, 469, 470, 471, 472, 473, 477, 480, 491], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [379, 387, 389], "other": [2, 3, 21, 75, 84, 86, 89, 99, 161, 163, 165, 180, 212, 213, 216, 219, 289, 290, 316, 317, 366, 367, 393, 404, 417, 419, 425, 427, 457, 468, 493], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 221, 224, 225, 226, 228, 239, 295, 297, 298, 299, 300, 302, 304, 318, 319, 320, 321, 322, 333, 349, 350, 351, 352, 353, 354, 359, 361, 367, 388, 396, 411, 412, 443, 445, 467, 478, 479], "otim": [24, 246, 327], "out": [0, 3, 4, 10, 15, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 289, 290, 293, 294, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 360, 379, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 463, 464, 465, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481], "out_channel": [86, 92, 96, 97, 216, 219, 278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 338, 339, 349, 350, 351, 352, 353, 354, 366], "out_featur": [215, 216, 219, 246, 248, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 312, 313, 316, 319, 320, 327, 329, 331, 332, 333, 334, 335, 337, 341, 344, 349, 350, 351, 352, 353, 354], "outcom": [487, 488, 490], "outer": 429, "outlier": [251, 333], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 248, 260, 261, 262, 263, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 425, 427, 428, 434, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 457, 458, 459, 467, 468, 469, 471, 473, 474, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "output_height": 236, "output_lay": [216, 219], "output_s": [216, 261, 262, 263, 346, 347, 348], "output_width": 236, "output_with_norm": [274, 356], "output_with_pad": [274, 356], "outsid": [0, 318, 392], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 213, 216, 218, 228, 261, 262, 263, 284, 304, 311, 312, 313, 332, 335, 337, 338, 339, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 368, 370, 376, 379, 380, 381, 382, 383, 399, 403, 443, 444, 445, 453, 457, 459, 487, 488, 490], "overal": [150, 239], "overdetermin": 24, "overfit": [1, 28, 152, 240, 243, 317, 319, 320, 321, 322, 379, 382, 387, 389], "overhead": [85, 92, 284], "overlap": [173, 174], "overli": 301, "overrid": [2, 3, 99, 100, 101, 159, 177, 178, 194, 195], "overridden": [213, 367], "overshoot": 368, "overwrit": [215, 217], "own": [4, 15, 215, 216, 217, 218, 232, 233, 234, 294, 366, 485], "p": [23, 24, 59, 214, 217, 218, 237, 238, 239, 240, 241, 242, 243, 260, 274, 314, 316, 317, 319, 320, 321, 322, 349, 352, 353, 356, 487, 488, 490, 493], "p_d": [351, 354], "p_h": [314, 350, 351, 354], "p_w": [314, 350, 351, 354], "packag": [2, 3, 4, 10, 16, 154, 366, 378, 396, 402, 404, 483, 493], "pad": [86, 216, 219, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 314, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 466], "pad_after_dim1": 469, "pad_after_dim2": 469, "pad_before_dim1": 469, "pad_before_dim2": 469, "pad_width": 469, "padding_height": 236, "padding_idx": [274, 356], "padding_mod": 272, "padding_width": 236, "pair": 246, "panda": [15, 173], "pang": 85, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 190], "paradigm": 85, "parallel": [1, 3, 85, 140, 154, 159, 173, 308], "param": [213, 214, 217, 218, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "param1": 213, "param_dict": 217, "param_group": [367, 378], "param_groups_setup": 367, "param_list": 218, "param_s": 396, "paramet": [0, 2, 15, 85, 87, 88, 89, 173, 213, 366, 367, 368, 378, 404, 493], "parameter": 93, "parameterdict": 220, "parameterlist": 220, "parent": [15, 366, 405], "pars": 391, "part": [212, 213, 294, 356, 366, 393, 404, 417, 418, 421, 425, 426, 427, 428, 462, 474, 478, 479, 483, 493], "partial": [15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481], "particip": [15, 214, 483], "particular": [215, 217], "particularli": [24, 91, 99, 124, 125, 126, 127, 128, 129, 159, 161, 163, 165, 174, 216, 217, 218, 219, 228, 238, 248, 278, 279, 280, 281, 282, 283, 304, 329, 332, 335, 341, 342, 343, 344, 369, 383, 393, 396, 424, 440, 482], "partit": [174, 434, 474], "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 159, 175, 176, 177, 178, 179, 190, 213, 214, 215, 216, 217, 218, 219, 271, 276, 278, 279, 280, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 313, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 392, 405, 422, 423, 424, 444, 453, 457, 458, 459, 463, 465, 470, 472, 475, 478, 479, 481, 483, 493], "past": [379, 380, 382, 387], "patch": [159, 161, 163, 165, 173, 174, 180, 181, 194, 195, 206, 207, 208, 209, 210, 211, 236, 314, 350], "patch_norm": [194, 195], "patch_siz": [159, 180, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 209, 210, 211], "path": [3, 5, 6, 7, 8, 39, 40, 77, 159, 174, 181, 239, 318], "pathwai": 85, "patienc": 375, "pattern": [10, 12, 13, 14, 15, 30, 85, 161, 163, 165, 225, 284, 300, 311, 312, 313, 324], "pedagog": 15, "penal": [379, 387, 389], "penalti": [380, 381, 382, 383, 384, 385, 386], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 178, 181, 187, 188, 189, 191, 192, 193, 231, 261, 308, 314, 324, 341, 342, 343, 344, 346, 362, 370, 461], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 158, 161, 163, 165, 167, 168, 170, 171, 172, 173, 174, 178, 182, 183, 184, 185, 187, 190, 195, 201, 202, 203, 210, 213, 214, 218, 222, 231, 232, 233, 234, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 311, 312, 313, 314, 316, 319, 320, 321, 322, 324, 327, 328, 329, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 367, 368, 372, 375, 392, 393, 402, 404, 406, 407, 410, 413, 416, 439, 443, 445, 447, 453, 458, 461, 474, 482, 484, 486, 491, 493], "period": 369, "permut": [12, 324, 458], "persist": [212, 397, 399, 400, 401, 403, 419, 420], "perturb": [19, 26, 27, 493], "phase": 30, "phi": [222, 296], "pi": [222, 296, 369, 436, 449, 455], "pick": 272, "pico": [51, 85], "piecewis": [297, 298], "pil": [483, 493], "pinv": 20, "pioneer": 85, "pip": 15, "pipelin": [5, 6, 7, 8, 324, 404, 482, 483, 485], "pixel": [5, 6, 7, 8, 271, 272, 276, 364, 485, 487], "place": [287, 289, 290, 291, 292, 293, 294, 405, 447, 467, 473], "placehold": [213, 328], "placement": [15, 405], "plai": 404, "platform": 391, "plot": 468, "point": [4, 277, 374, 392, 393], "pointwis": [281, 282, 283], "pool": [10, 28, 85, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 174, 261, 262, 263, 264, 265, 266, 268, 269, 270, 284, 285, 312, 313, 346, 347, 348, 349, 350, 351, 352, 353, 354, 443, 445], "pool1": 219, "pool2": 219, "poorli": 21, "popul": 213, "popular": [4, 85], "portion": [462, 478, 479, 493], "pose": 24, "posit": [1, 17, 22, 30, 85, 156, 194, 195, 206, 213, 219, 231, 277, 295, 299, 300, 302, 309, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 388, 394, 415, 462, 467, 471, 477, 486], "possibl": 493, "potenti": [24, 328, 387, 475], "power": [10, 15, 22, 50, 85, 91, 96, 97, 103, 179, 181, 182, 184, 188, 191, 200, 208, 284, 324, 368, 394, 429, 447, 482, 483, 493], "pp": [85, 173], "practic": [24, 80, 332, 335], "practition": 493, "pre": [30, 69, 70, 71, 72, 85, 113, 117, 118], "preactbottleneck": [113, 117, 118], "preced": [85, 214, 364], "precis": [192, 391, 422, 447], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84, 178], "pred": [15, 395], "predecessor": [40, 181], "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 216, 302, 356, 368, 391], "predict": [150, 159, 173, 194, 196, 197, 198, 199, 331, 332, 334, 335], "prefer": 376, "prefix": [213, 396], "prepar": [3, 394, 469, 471, 477, 483, 493], "prepend": [213, 461], "preprint": [85, 173], "preprocess": [3, 4, 236, 277, 404, 447, 482, 483, 493], "present": [331, 332, 333, 335, 337, 338, 339, 341, 342, 343, 344, 350], "preserv": [13, 85, 182, 237, 239, 272, 277, 316, 318, 417, 418, 421, 425, 426, 427, 428, 444, 453, 454, 459, 462, 473], "preset": [4, 175, 176, 177, 178], "prevent": [1, 10, 15, 174, 215, 216, 217, 218, 219, 231, 240, 243, 260, 301, 309, 317, 319, 320, 321, 322, 331, 332, 361, 362, 368, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 395], "previou": [85, 379, 388, 392, 395], "previous": [372, 382], "primarili": 219, "principl": 85, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491], "print_grad": 405, "prior": 392, "priorit": [96, 97, 101, 285, 297], "prob": 397, "probabilist": 404, "probabl": [59, 75, 156, 180, 194, 195, 206, 222, 228, 231, 237, 238, 239, 240, 241, 242, 243, 249, 296, 304, 308, 309, 316, 317, 318, 319, 320, 321, 322, 331, 332, 335, 358, 360, 362, 397, 487, 488, 490, 493], "problem": [24, 25, 27, 85, 224, 295, 299, 386], "proceed": [85, 173], "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 85, 110, 111, 112, 140, 151, 152, 154, 159, 161, 163, 165, 173, 174, 180, 194, 218, 232, 233, 234, 258, 277, 278, 279, 280, 284, 285, 302, 306, 311, 313, 327, 337, 338, 339, 341, 342, 343, 344, 349, 351, 352, 354, 358, 359, 361, 379, 468, 483, 484, 485, 486, 491, 493], "produc": [15, 28, 152, 155, 261, 262, 263, 284, 311, 312, 313, 346, 347, 348, 392, 402, 404], "product": [25, 27, 180, 181, 231, 298, 303, 305, 308, 309, 327, 344, 366, 408, 409, 413, 414], "profil": 392, "program": [393, 404], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "project": [25, 27, 156, 159, 161, 163, 165, 169, 174, 180, 181, 186, 187, 188, 189, 191, 192, 193, 194, 195, 308], "projector": 24, "promin": [349, 351, 352, 353, 354], "promot": [219, 332, 335, 366], "propag": [15, 18, 19, 21, 24, 25, 26, 27, 85, 213, 219, 246, 248, 271, 276, 284, 350, 351, 387, 388, 397, 408, 409, 410, 414, 443, 445, 462, 468, 469, 472, 480], "proper": [274, 462], "properli": [0, 218, 228, 304, 366, 368], "properti": [16, 18, 21, 22, 222, 226, 237, 296, 302, 316, 381, 386, 392], "proport": [5, 6, 7, 8, 459], "proportion": 491, "propos": 190, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 85, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 184, 185, 192, 194, 195, 203, 206, 208, 209, 213, 215, 216, 217, 218, 222, 231, 248, 262, 263, 274, 277, 309, 324, 331, 332, 333, 335, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 364, 366, 367, 368, 372, 373, 378, 379, 380, 387, 389, 393, 402, 404, 405, 410, 417, 426, 443, 445, 458, 460, 471, 475, 477, 493], "pseudo": [21, 24], "purpos": [41, 46, 50, 399, 403, 417, 425, 427], "pvt": [181, 182, 183, 184, 185, 186], "pvt_huge": 173, "pvt_larg": 173, "pvt_medium": 173, "pvt_small": 173, "pvt_tini": 173, "pvt_v2": [187, 188, 189, 190, 191, 192, 193], "pvt_v2_b0": 173, "pvt_v2_b1": 173, "pvt_v2_b2": [173, 190], "pvt_v2_b2_li": 173, "pvt_v2_b3": 173, "pvt_v2_b4": 173, "pvt_v2_b5": 173, "pvtv2": [173, 187, 188, 189, 190, 191, 192, 193], "pypi": 15, "pyramid": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193], "python": [15, 391, 405, 422], "pytorch": [15, 460], "q": [25, 85, 159, 174, 181, 231, 308, 309, 362], "q_1": 159, "q_i": [30, 308], "qk": [30, 159, 174, 360, 362], "qk_scale": [159, 180, 181, 194, 195], "qkv_bia": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195], "qr": 20, "quad": [24, 159, 274, 308, 331, 332, 333, 334, 335, 352, 353, 354, 359, 361, 406, 407, 411, 412, 413, 416, 478, 479, 484], "quadrat": [181, 190, 333], "qualifi": 375, "quanfu": 173, "queri": [159, 169, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 231, 308, 309, 362], "quick": 392, "quickli": 368, "quoc": 85, "quotient": 407, "r": [13, 14, 25, 30, 85, 271, 272, 308, 474, 487, 488, 489, 490], "r_t": 386, "radam": 390, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 213, 366, 367, 415, 461], "rameswar": 173, "rand": [398, 404], "randint": [398, 404], "randn": [12, 14, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 159, 174, 175, 176, 177, 178, 179, 231, 281, 282, 283, 284, 285, 308, 309, 324, 358, 359, 360, 361, 362, 366, 398, 402, 404], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 231, 281, 282, 283, 284, 285, 308, 318, 324, 356, 358, 359, 360, 361, 362, 486, 487, 488, 489, 490, 493], "random_integ": 404, "random_tensor": 404, "randomcrop": [492, 493], "randomgrayscal": [492, 493], "randomhorizontalflip": [492, 493], "randomli": [1, 237, 239, 240, 241, 242, 243, 277, 316, 319, 320, 321, 322, 486, 487, 488, 489, 490, 493], "randomnoisedataset": [0, 1, 2], "randomrot": [492, 493], "randomverticalflip": 492, "rang": [0, 1, 15, 16, 30, 43, 52, 85, 102, 112, 120, 154, 173, 174, 183, 204, 218, 227, 229, 232, 233, 239, 250, 254, 271, 272, 294, 301, 303, 306, 318, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 387, 389, 397, 400, 424, 431, 432, 435, 485, 489, 493], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 159, 174, 180, 181, 194, 195, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "rather": [7, 12, 14, 217, 218, 324, 374, 383, 472], "ratio": [59, 77, 130, 159, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 284, 285, 491], "ravel": 466, "raw": [228, 304, 332, 405], "rceil": 434, "rcond": 24, "re": [15, 214], "reach": 374, "readabl": [10, 15, 215, 216, 217, 219, 324, 366], "readi": [3, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 303], "rearrang": [11, 236, 325, 326], "reassembl": 85, "recalibr": [85, 131, 133, 134, 136, 137, 138, 139, 284], "receiv": [352, 353, 354, 469, 478, 479], "recent": 387, "recept": [85, 140, 144, 174, 190, 285], "reciproc": [24, 429, 441, 442, 451], "recogn": 159, "recognit": [85, 89, 110, 111, 173, 184, 194, 196, 197, 198, 199, 205, 312], "recommend": [15, 179], "rectangular": 421, "rectif": 386, "rectifi": [224, 225, 299, 300, 386], "recurr": [173, 216, 344], "recurs": [155, 213], "red": 487, "reduc": [11, 28, 30, 85, 90, 112, 123, 140, 145, 152, 169, 173, 181, 190, 281, 282, 283, 284, 337, 338, 339, 341, 342, 343, 349, 350, 351, 352, 353, 354, 368, 371, 374, 375, 376, 385, 388, 395, 443, 444, 445, 453, 459, 487], "reducelronplateau": 377, "reduct": [10, 13, 27, 59, 130, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 249, 250, 251, 253, 254, 284, 285, 331, 332, 333, 334, 335, 369, 375, 376, 443, 445], "reevalu": 367, "refer": [4, 161, 163, 165, 190, 213, 404, 418, 421, 423, 463], "refin": [85, 203, 368], "reflect": [183, 271, 272, 393], "regardless": [24, 470], "region": [234, 238, 261, 262, 263, 276, 297, 317, 347, 348, 469, 484, 493], "regist": [15, 31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 212, 213, 214, 218, 366, 396, 405], "register_buff": 212, "register_hook": 405, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211], "register_paramet": 213, "registr": [15, 213, 366], "registri": [124, 125, 126, 127, 128, 129, 396], "registry_path": 396, "regress": [4, 253, 333, 334], "regul": [274, 356], "regular": [24, 28, 39, 59, 60, 75, 152, 194, 195, 239, 243, 309, 317, 319, 320, 321, 322, 374, 376, 379, 380, 381, 384, 385, 386, 387, 389], "reimagin": 85, "rel": [30, 85, 194, 195, 368, 375], "relat": [421, 425], "relationship": [30, 182, 184, 491], "relev": [276, 379, 387, 389], "reli": 238, "reliabl": [5, 6, 7, 8], "reliant": [319, 320, 321, 322], "relu": [15, 28, 85, 130, 145, 152, 155, 215, 216, 217, 219, 221, 223, 224, 245, 278, 279, 280, 284, 285, 289, 290, 293, 294, 295, 299, 301, 305, 307, 311, 312, 313, 326, 327, 328, 329, 358, 360, 362], "relu1": 219, "relu2": 219, "relu3": 219, "relu6": [307, 326], "remain": [5, 6, 7, 8, 15, 52, 212, 239, 259, 316, 318, 319, 320, 321, 322, 356, 388], "rememb": 404, "remov": [396, 475], "reorder": [10, 12, 324, 454, 473], "rep": 477, "repeat": [11, 466, 468, 477], "repetit": [10, 14, 471, 477], "replac": [7, 161, 163, 165, 173, 358, 404, 467, 487], "replic": [14, 15, 314, 359, 361, 461], "repr": 391, "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 159, 170, 171, 172, 180, 186, 213, 214, 219, 246, 248, 255, 258, 259, 271, 274, 311, 312, 313, 324, 327, 329, 332, 335, 344, 356, 359, 367, 376, 378, 379, 385, 386, 387, 388, 389, 391, 397, 406, 407, 413, 416, 418, 444, 457, 458, 459, 468, 484, 486, 488, 489, 490, 491], "represent": [30, 85, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 156, 173, 177, 181, 182, 183, 184, 185, 188, 192, 193, 206, 274, 284, 350, 353, 356, 367], "reproduc": [397, 399, 400, 401, 402, 403, 404, 493], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 178, 209, 211, 212, 215, 219, 221, 222, 224, 225, 226, 227, 229, 246, 248, 276, 284, 285, 294, 328, 332, 335, 366, 374, 393, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 461, 463, 465, 467, 468, 469, 470, 471, 472, 475, 476, 477, 480, 481, 483, 484, 491], "requires_grad": [15, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 246, 248, 271, 272, 274, 276, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 364, 366, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483], "rescal": [249, 250, 254, 331, 332, 335], "research": [15, 366], "reset": [214, 369, 402, 405], "reshap": [10, 12, 130, 248, 312, 313, 324, 364, 394, 454, 466, 470], "resid": 405, "residu": [76, 82, 83, 84, 85, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 174, 181, 360, 362], "residualblock": 112, "resili": 388, "resiz": [276, 482, 492, 493], "resnest": [104, 105, 106, 107, 108, 109, 110, 111], "resnest_101": 85, "resnest_14": 85, "resnest_200": 85, "resnest_26": 85, "resnest_269": 85, "resnest_50": 85, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 85, "resnet": [82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 161, 163, 165, 284], "resnet_1001": 85, "resnet_101": 85, "resnet_152": 85, "resnet_18": 85, "resnet_200": 85, "resnet_269": 85, "resnet_34": 85, "resnet_50": 85, "resnet_arg": 140, "resnext": [124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144], "resnext_101_32x16d": 85, "resnext_101_32x32d": 85, "resnext_101_32x4d": 85, "resnext_101_32x8d": 85, "resnext_101_64x4d": 85, "resnext_50_32x4d": 85, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 136, 137, 138, 139, 144, 173, 174, 175, 176, 179, 181, 182, 190, 195, 405], "resolv": [12, 13, 14, 324, 391], "resourc": [15, 44, 45, 47, 48, 51, 52, 78, 85, 92, 96, 97, 98, 99, 100, 101, 102, 209], "respect": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 246, 248, 271, 276, 285, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 370, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 435, 439, 441, 442, 443, 444, 445, 449, 451, 453, 457, 458, 459, 468, 469, 471, 477, 487], "respons": [85, 136, 137, 138, 139, 215, 256, 340, 378], "rest": [478, 479], "restor": [284, 372, 392, 395], "restructur": 472, "result": [10, 12, 14, 17, 21, 22, 24, 85, 213, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 246, 248, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 285, 297, 301, 304, 308, 318, 324, 366, 367, 393, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 460, 463, 465, 468, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 483, 486, 487, 493], "resum": [369, 370, 371, 372, 373, 374, 375, 376, 378], "retain": [173, 181, 214, 238, 317, 405, 417, 422, 423, 427, 443, 444, 445, 453, 459, 462, 467, 478, 479, 483], "retent": 483, "rethink": 85, "retriev": [0, 2, 215, 217, 218, 274], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 178, 179, 212, 213, 215, 216, 217, 218, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 359, 361, 366, 367, 372, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 396, 482, 493], "reus": [85, 483], "reusabl": [219, 318, 366, 482], "revers": [15, 219, 405, 458, 488, 490], "revolution": 85, "rfloor": [314, 376, 440], "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 169, 178, 179, 180, 194, 195], "rho": 380, "rho_": 386, "rho_t": 386, "rich": [15, 192], "richer": 182, "right": [22, 23, 24, 26, 27, 30, 159, 174, 222, 228, 260, 296, 304, 308, 314, 331, 332, 333, 335, 337, 338, 339, 341, 342, 343, 344, 352, 353, 354, 360, 362, 454, 484], "rightarrow": [12, 308, 324, 474], "rmsprop": 390, "rob": 85, "robust": [41, 46, 79, 100, 204, 205, 238, 277, 316, 319, 320, 321, 322, 333, 366, 380, 486, 487, 489, 493], "roland": 7, "role": [404, 493], "roll": 466, "root": [4, 5, 6, 7, 8, 381, 387, 451], "rotat": [245, 275, 489, 493], "rotated_imag": 277, "round": [429, 434, 440], "rout": [352, 353, 354], "row": [18, 19, 21, 26, 248, 274, 421, 468, 478, 479, 481], "rprop": 390, "rule": [14, 15, 21, 22, 324, 394, 406, 407, 411, 412, 413, 415, 416, 422], "run": [15, 212, 255, 258, 278, 279, 280, 337, 338, 339, 341, 342, 343, 380, 392, 402, 404], "running_mean": [212, 255, 258, 337, 338, 339, 341, 342, 343], "running_var": [255, 258, 337, 338, 339, 341, 342, 343], "runtim": [60, 216, 219, 318, 366, 424], "s_": 388, "s_1": 474, "s_2": 474, "s_d": [351, 354], "s_h": [314, 350, 351, 354], "s_i": 474, "s_n": 474, "s_w": [314, 350, 351, 354], "safe": [392, 395], "safeguard": 260, "sain": 85, "same": [18, 19, 21, 22, 26, 189, 228, 237, 238, 239, 240, 241, 242, 243, 255, 256, 258, 259, 260, 262, 263, 277, 278, 279, 280, 281, 282, 283, 285, 301, 311, 312, 313, 316, 319, 320, 321, 322, 328, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 388, 391, 397, 402, 404, 410, 420, 423, 426, 428, 434, 439, 440, 443, 444, 445, 447, 454, 463, 465, 467, 470, 472, 475, 476, 478, 479, 481, 485], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 261, 262, 263, 271, 272, 289, 290, 291, 292, 293, 294, 316, 319, 320, 321, 322, 327, 329, 332, 335, 344, 346, 347, 348, 397, 401, 404, 424, 484, 486, 488, 489, 490, 491], "sandbox": 15, "sandler": 85, "satisfi": [17, 19, 26, 474], "satur": [295, 493], "save": [2, 212, 214, 367, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 396], "scalabl": [3, 46, 59, 85, 124, 125, 126, 127, 128, 129, 150, 173, 195, 366], "scalar": [15, 18, 23, 249, 250, 251, 253, 254, 397, 405, 422, 423, 467], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 85, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 186, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 221, 226, 228, 231, 239, 255, 256, 258, 259, 274, 284, 285, 293, 294, 295, 297, 299, 302, 303, 304, 306, 308, 309, 316, 318, 319, 320, 321, 322, 332, 337, 338, 339, 340, 341, 342, 343, 344, 356, 364, 370, 373, 379, 381, 382, 383, 404, 459, 491], "scale_by_keep": [239, 318], "scale_factor": 364, "scale_fn": 370, "scaled_dot_product_attent": [230, 245], "scaleddotproductattent": [310, 326], "scenario": [44, 49, 51, 99, 100, 101, 102, 190, 217, 218, 344, 369, 370, 376, 383, 384, 483, 487], "schedul": [317, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379], "scientif": 394, "score": [112, 123, 140, 228, 231, 309, 332], "scratch": 15, "script": 404, "se": [59, 85, 131, 132, 133, 134, 135, 136, 137, 138, 139], "se_resnet_101": 85, "se_resnet_152": 85, "se_resnet_18": 85, "se_resnet_34": 85, "se_resnet_50": 85, "se_resnext_101_32x4d": 85, "se_resnext_101_32x8d": 85, "se_resnext_101_64x4d": 85, "se_resnext_50_32x4d": 85, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 324, 366, 404], "seamlessli": [3, 4, 10, 12, 14, 16, 214, 216, 219, 366, 493], "search": 85, "second": [19, 181, 192, 216, 217, 246, 284, 327, 382, 383, 384, 385, 386, 394, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 454, 465, 468, 490], "section": 410, "see": [15, 410], "seed": [397, 398, 399, 400, 401, 403, 404, 493], "seek": [15, 102], "seen": 380, "segment": [173, 193, 200, 201, 202, 203, 204, 205], "select": [13, 14, 85, 140, 141, 142, 143, 144, 276, 284, 285, 352, 354, 370, 453], "selectivekernel": 286, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 85, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 159, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 226, 239, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 317, 318, 319, 320, 324, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 362, 366, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 396, 405, 467, 473, 482, 483], "selfattent": 362, "selu": [223, 237, 245, 307, 316, 326], "selunetwork": 302, "semant": [159, 191], "semodul": 286, "senet": [131, 132, 133, 134, 135, 136, 137, 138, 139], "sensit": [251, 333, 337, 338, 339], "sentiment": 4, "separ": [0, 85, 90, 110, 111, 150, 159, 232, 233, 234, 281, 282, 283, 341, 342, 343], "seq_len": [231, 308, 309, 358, 359, 360, 361, 362], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 173, 215, 216, 220, 232, 278, 279, 280, 324, 328, 359, 361, 482, 493], "seri": [73, 87, 88, 140, 174, 189, 191, 232, 278, 311, 349, 352], "serial": [212, 213, 378], "serv": [3, 7, 15, 54, 82, 130, 145, 156, 213, 215, 216, 217, 218, 219, 366, 388, 405, 483], "set": [3, 4, 5, 6, 7, 8, 15, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 214, 218, 231, 232, 233, 234, 274, 299, 300, 302, 309, 311, 312, 313, 316, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 356, 367, 382, 383, 387, 397, 399, 400, 401, 402, 403, 404, 417, 419, 420, 422, 423, 427, 428, 435, 443, 445, 460, 467, 478, 479, 483, 487, 493], "setup": [4, 124, 125, 126, 127, 128, 129, 177, 178], "sever": [24, 311, 312, 313, 349, 350, 351, 352, 353, 354, 482, 493], "sgd": [15, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 390], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 85, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 155, 159, 173, 174, 175, 176, 177, 178, 179, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 366, 370, 394, 397, 399, 400, 401, 403, 404, 405, 408, 419, 420, 421, 422, 423, 425, 426, 427, 428, 434, 435, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 458, 459, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 488, 489, 490, 491, 493], "shapelik": 400, "share": [85, 159], "sharp": 370, "shen": 284, "shift": [173, 174, 194, 195, 196, 197, 198, 199, 200, 203, 204, 255, 256, 258, 259, 297, 337, 338, 339, 340, 341, 342, 343, 344, 473], "shorthand": 410, "should": [12, 13, 14, 15, 86, 212, 271, 324, 358, 359, 360, 361, 362, 374, 397, 399, 400, 401, 403, 405, 419, 420, 431, 432, 457, 461, 469, 482], "show": [272, 393, 396], "shown": [159, 305, 402], "shrink": 380, "shuffl": [1, 2, 3], "side": [26, 216, 219, 232, 233, 234, 264, 265, 266, 268, 269, 270, 278, 279, 280, 311, 312, 313, 314, 349, 350, 351, 352, 353, 354], "sigma": [24, 30, 284, 289, 291, 293, 303, 305, 337, 338, 339, 341, 342, 343, 344, 458], "sigma_c": 485, "sigma_i": 24, "sigmoid": [223, 245, 284, 289, 290, 293, 294, 297, 298, 305, 307, 326, 331], "sigmoidnetwork": 303, "sign": [22, 333, 388, 429], "signal": [278, 311, 312, 313, 337, 341, 349, 350, 351, 352, 353, 354], "signific": 42, "significantli": [85, 91, 123, 179, 190, 191, 192, 193, 202, 284, 482], "silicon": [15, 179, 391], "sim": [316, 319, 320, 321, 322], "similar": [10, 161, 163, 165, 289, 290, 410, 422, 454, 460, 461, 469], "similarli": [27, 457], "simonyan": 85, "simpl": [3, 4, 15, 155, 219, 232, 233, 234, 246, 248, 264, 265, 266, 268, 269, 270, 296, 297, 298, 300, 301, 302, 303, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 408, 409, 414, 482], "simplebinaryclassificationmodel": 331, "simpleblock": 239, "simpleclassificationmodel": [332, 335], "simplegelumodel": 296, "simplehardsigmoidmodel": 297, "simplehardswishmodel": 298, "simpleleakyrelumodel": 299, "simplemodel": [155, 301, 318, 329, 396], "simpleregressionmodel": 334, "simplerelumodel": 300, "simpleselumodel": 302, "simplesigmoidmodel": 303, "simpleswishmodel": 305, "simpletanhmodel": 306, "simpli": [15, 393, 457, 458, 472], "simplic": [85, 297, 300], "simplifi": [4, 12, 14, 69, 70, 71, 72, 85, 87, 151, 219, 278, 279, 280, 324], "simul": [155, 493], "simultan": [159, 277], "sin": [429, 436], "sinc": [22, 25, 215, 216, 217, 218, 232, 233, 234, 294, 393, 397, 401, 454, 468, 493], "sine": [432, 449, 450], "singl": [0, 4, 22, 25, 27, 112, 161, 163, 165, 228, 278, 279, 280, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 314, 332, 344, 350, 351, 352, 353, 354, 359, 360, 361, 362, 367, 392, 403, 419, 424, 463, 475, 485, 487, 493], "singleton": [14, 344], "singular": [18, 21, 22, 24, 26, 27], "sinh": [429, 437, 456], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 155, 156, 157, 158, 159, 160, 167, 168, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 231, 232, 233, 234, 236, 238, 241, 242, 243, 249, 250, 251, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 308, 311, 312, 313, 314, 317, 324, 327, 329, 331, 332, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 361, 362, 364, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 400, 403, 404, 405, 443, 444, 445, 453, 459, 461, 462, 463, 465, 474, 475, 480, 481, 484, 486, 491, 493], "size_or_sect": 474, "sk": [85, 140, 141, 142, 143, 144, 285], "sk_resnet_18": 85, "sk_resnet_34": 85, "sk_resnet_50": 85, "sk_resnext_50_32x4d": 85, "skblock": 140, "skip": [85, 395], "sknet": [141, 142, 143, 144], "slice": [246, 405, 457], "slide": [236, 314, 349, 351, 352, 354], "slight": 284, "slightli": 493, "slope": [224, 295, 299], "slow": [3, 386], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 85, 87, 88, 89, 92, 96, 97, 100, 167, 173, 178, 185, 198, 199, 204, 205, 210, 211, 224, 238, 249, 250, 255, 256, 258, 259, 260, 299, 302, 317, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 350, 353, 358, 360, 362, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388], "smaller": [10, 44, 69, 70, 71, 72, 85, 98, 152, 159, 161, 163, 165, 168, 172, 216, 219, 366, 381, 382, 412, 462, 484, 486, 491], "smallest": [434, 445], "smooth": [75, 222, 295, 296, 305, 371, 379, 387, 493], "smoother": [371, 379], "so": [215, 216, 217, 218, 277, 366, 386, 392, 395, 419, 420, 434, 440, 447, 482], "softmax": [30, 159, 174, 223, 231, 245, 285, 307, 308, 309, 326, 332, 360, 362], "softmaxmodel": 304, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [221, 239, 240, 277, 316, 318, 319, 320, 337, 338, 339, 341, 342, 343, 381, 382, 383, 462], "sometim": 394, "sophist": [216, 219], "sort": 15, "sourc": [156, 157, 158, 231, 358, 404], "space": [19, 25, 27, 156, 161, 163, 165, 174, 195, 232, 233, 234, 236, 261, 262, 263, 278, 279, 280, 281, 282, 283, 311, 312, 313, 314, 346, 347, 348, 417, 424, 493], "span": 4, "spars": [381, 382], "spatial": [28, 30, 85, 112, 123, 140, 145, 152, 154, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 238, 256, 271, 272, 279, 284, 312, 313, 314, 337, 338, 339, 341, 342, 343, 344, 350, 351, 352, 353, 354, 364, 434, 468], "spatial_dim": 284, "spatio": 313, "spec": 169, "special": [0, 1, 24, 212, 213, 214, 316, 404], "specif": [4, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 169, 215, 216, 217, 218, 219, 285, 294, 316, 319, 320, 321, 322, 341, 342, 343, 356, 366, 367, 374, 393, 404, 419, 443, 445, 467, 471, 477], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 170, 171, 172, 180, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 216, 228, 236, 243, 249, 250, 251, 253, 254, 259, 260, 261, 262, 263, 272, 274, 276, 277, 284, 304, 308, 311, 312, 313, 314, 324, 331, 332, 333, 334, 335, 344, 346, 347, 348, 350, 351, 352, 353, 354, 356, 364, 367, 370, 374, 391, 399, 400, 401, 402, 403, 405, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 435, 443, 444, 445, 447, 453, 454, 458, 459, 460, 461, 462, 463, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 493], "speech": 341, "speed": [96, 97, 297, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 395], "split": [4, 85, 103, 110, 111, 173, 308, 462, 463, 465, 466, 481], "split_tensor": 474, "springer": 85, "sqrt": [30, 159, 174, 222, 231, 256, 289, 290, 293, 294, 296, 308, 309, 337, 338, 339, 340, 341, 342, 343, 344, 360, 362, 380, 381, 382, 383, 385, 386, 387, 429, 431, 432], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 251, 253, 317, 333, 334, 380, 381, 382, 387, 429, 451], "squaredataset": [0, 1, 2, 3], "squeez": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 284, 466], "sr_ratio": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "sra": 173, "src": [173, 358, 361, 362], "src_key_pad": 361, "src_key_padding_mask": [358, 362], "src_mask": [358, 361, 362], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 85, 174, 238, 249, 250, 255, 256, 258, 259, 260, 274, 278, 279, 280, 301, 317, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 356, 358, 360, 362, 368, 379, 380, 381, 382, 383, 384, 385, 386, 387, 485], "stabl": [204, 289, 290, 293, 294, 316, 332, 379, 383, 384, 387, 388, 389], "stack": [14, 219, 285, 358, 359, 361, 465, 466, 481, 493], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 85, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 159, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 375, "stand": 190, "standalon": 301, "standard": [15, 41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 161, 163, 165, 222, 224, 281, 282, 283, 289, 291, 293, 295, 296, 299, 316, 358, 388, 392, 401, 404, 410, 482, 485, 493], "start": [1, 3, 10, 368, 379, 381, 388, 405, 417, 424, 484, 486], "state": [48, 85, 208, 212, 213, 214, 216, 219, 367, 372, 392, 393, 395, 402], "state_dict": [213, 214, 367, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "statement": [392, 395], "static": 219, "statist": [24, 237, 255, 258], "std": [5, 6, 7, 8, 291, 482, 485, 493], "stem": [82, 85, 103, 112, 123, 140, 174], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 15, 30, 214, 236, 285, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 417, 482, 483], "step_siz": [368, 370, 372, 376, 388], "step_size_down": 370, "step_size_up": 370, "steplr": [368, 372, 377], "still": [51, 380], "stn": 272, "stochast": [39, 40, 59, 60, 77, 159, 174, 180, 194, 195, 239, 318, 379, 389], "stochastic_depth": 59, "stop": [375, 417, 424], "storag": [215, 217], "store": [2, 4, 5, 6, 7, 8, 15, 112, 123, 140, 212, 213, 214, 215, 216, 217, 218, 284, 346, 347, 348, 395, 484, 485, 486, 487, 488, 489, 490, 491], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 213, 215, 217, 219, 249, 250, 251, 253, 254, 272, 276, 324, 364, 367, 370, 372, 375, 396, 405, 468], "straightforward": [389, 393, 406], "strategi": [30, 85, 101, 203, 272, 368, 372, 378], "streamlin": [2, 3, 85], "strength": [30, 317], "strict": [213, 367], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 161, 163, 165, 216, 219, 232, 233, 234, 236, 261, 262, 263, 264, 265, 266, 268, 269, 270, 278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 314, 346, 347, 348, 349, 350, 351, 352, 353, 354], "stride_height": 236, "stride_width": 236, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 213, 215, 217, 219, 311, 312, 313, 324, 367, 391], "strong": [30, 184, 187, 190, 207], "stronger": [177, 185, 189, 203], "structur": [0, 10, 13, 25, 30, 60, 92, 150, 173, 195, 212, 213, 216, 238, 317, 324, 366, 367, 396, 405, 421, 483], "student": 15, "studi": 15, "style": [10, 15, 82, 258, 341, 342, 405, 468], "sub": [215, 216, 217, 218, 219, 366, 429, 462, 474, 484, 486], "subclass": [1, 2, 3, 15, 213, 214, 215, 366, 367, 372], "sublay": [155, 358, 360, 362], "submodul": [155, 213, 366], "subsequ": [216, 219, 294, 404], "subset": [110, 111, 319, 320], "subspac": 308, "substanti": 209, "subtract": [416, 485], "suffer": 381, "suffix": 190, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 190, 191, 193, 205, 207, 289, 290, 293, 294, 368], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 157, 175, 176, 178, 179, 182, 187, 196, 197, 198, 199, 210, 333, 381, 382, 399], "sum": [10, 13, 15, 23, 215, 216, 217, 218, 219, 228, 231, 249, 250, 251, 253, 254, 260, 271, 272, 285, 304, 314, 331, 332, 333, 334, 335, 381, 405, 406, 409, 414, 429, 457, 459, 461, 463, 465, 468, 471, 474, 477, 481], "sum_": [12, 13, 22, 30, 228, 256, 304, 324, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 374, 408, 409, 444, 453, 457, 459, 461, 468, 471], "sum_i": [23, 414], "sum_j": 414, "sum_k": 410, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 349, 350, 351], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 374], "sun": 284, "super": [15, 155, 212, 213, 214, 215, 216, 217, 218, 239, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 316, 318, 319, 320, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 366, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396], "superior": [53, 85, 203], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 180, 215, 216, 217, 218, 219, 231, 272, 276, 277, 309, 314, 356, 364, 366, 378, 385, 404, 405, 406, 407, 410, 411, 412, 413, 415, 416, 418, 421, 435, 441, 442, 444, 449, 451, 453, 457, 458, 459, 463, 468, 472, 474, 483, 493], "suppos": 493, "sure": [366, 493], "svd": [20, 24], "swap": [12, 324], "swapax": 429, "swin": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "swin_bas": 173, "swin_larg": 173, "swin_smal": 173, "swin_tini": 173, "swin_v2": 195, "swin_v2_bas": 173, "swin_v2_giant": 173, "swin_v2_hug": 173, "swin_v2_larg": 173, "swin_v2_smal": 173, "swin_v2_tini": 173, "swintransform": [196, 197, 198, 199], "swintransformer_v2": [200, 201, 202, 203, 204, 205], "swish": [96, 97, 307, 326], "symbol": [12, 13, 14, 324], "symmetr": [17, 261, 262, 263, 293, 294, 306], "syntax": [1, 10, 12, 13, 14, 324, 395, 410], "system": [15, 16, 17, 24, 25, 26, 85, 100, 173, 272, 393, 405, 468], "systemat": [85, 493], "szegedi": [74, 85], "t": [10, 15, 24, 30, 85, 159, 173, 174, 271, 272, 358, 359, 360, 362, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 405, 410, 422, 423, 460, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "t0": 379, "t1": [405, 460], "t2": [405, 460], "t_": [359, 369], "t_0": 359, "t_cpu": 405, "t_i": 359, "t_max": 369, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 356], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 366, 493], "take": [25, 349, 350, 351, 352, 353, 354, 364, 373, 392, 395, 482], "taken": 457, "tan": [85, 429], "tangent": [229, 306, 433, 455, 456], "tanh": [86, 216, 219, 222, 223, 245, 289, 290, 293, 294, 296, 307, 326, 429], "tanhnetwork": 306, "target": [5, 6, 7, 8, 51, 156, 157, 158, 219, 249, 250, 251, 253, 254, 261, 262, 263, 271, 276, 331, 332, 333, 334, 335, 346, 347, 348, 358, 359, 360, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 423, 461, 484, 486, 491], "target_tensor": [331, 332, 333, 334, 335], "target_transform": [5, 6, 7, 8], "task": [4, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 159, 161, 163, 165, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 227, 228, 233, 246, 249, 250, 253, 254, 284, 285, 303, 304, 311, 312, 313, 331, 332, 333, 334, 335, 341, 342, 343, 349, 351, 352, 354, 358, 382, 394, 404, 421, 424, 493], "techniqu": [17, 21, 39, 60, 77, 85, 101, 152, 200, 202, 205, 239, 255, 316, 317, 319, 320, 321, 322, 341, 342, 343, 368, 378, 491, 493], "templat": 156, "tempor": [311, 313, 351, 354], "temporarili": [392, 395], "ten": 447, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 392, 393, 395, 397, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "term": [12, 24, 52, 187, 188, 189, 191, 192, 193, 246, 278, 279, 280, 281, 282, 283, 308, 358, 360, 362, 379, 383, 385, 386, 387, 389], "test": [4, 5, 6, 7, 8, 424], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 159, 174, 215, 221, 224, 225, 226, 228, 231, 232, 233, 234, 239, 261, 262, 263, 264, 265, 266, 268, 269, 270, 274, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 370, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 400, 405, 406, 407, 409, 411, 412, 413, 415, 416, 430, 434, 435, 440, 443, 444, 445, 447, 448, 453, 454, 459, 461, 463, 465, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 488, 489, 490], "tgt": [173, 358, 359, 360], "tgt_is_caus": [359, 360], "tgt_key_padding_mask": [358, 359, 360], "tgt_mask": [358, 359, 360], "tgt_vocab_s": [156, 157, 158], "th": [246, 331, 332, 334, 335, 341, 342, 343, 411, 412, 415], "than": [0, 1, 7, 12, 14, 217, 218, 221, 224, 251, 281, 282, 283, 295, 299, 305, 324, 333, 367, 374, 383, 424, 434, 435, 440, 457, 461, 462, 469, 476, 484, 486, 491], "thei": [0, 27, 85, 159, 212, 216, 218, 219, 272, 308, 468, 472, 484, 486, 493], "them": [3, 10, 15, 85, 173, 213, 218, 236, 314, 379, 394, 463, 476, 482, 485, 493], "therebi": [316, 350, 351, 353, 354], "theta": [271, 272, 379, 380, 489], "theta_": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "theta_t": [386, 387], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 159, 161, 163, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 187, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 225, 227, 228, 229, 232, 233, 234, 236, 238, 239, 246, 248, 261, 271, 274, 276, 277, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 335, 337, 338, 339, 341, 342, 343, 344, 346, 349, 350, 351, 352, 353, 354, 356, 366, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 400, 401, 402, 404, 405, 409, 410, 414, 417, 419, 422, 423, 425, 426, 427, 428, 434, 435, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 457, 458, 459, 460, 461, 462, 467, 469, 471, 472, 473, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "third": [191, 192, 193, 271], "those": [87, 88, 89, 218, 294], "thread": 392, "three": [27, 89, 234, 263, 266, 270, 278, 279, 280, 313, 322, 339, 343, 348, 351, 354], "threshold": [24, 251, 333, 375], "threshold_mod": 375, "through": [0, 3, 4, 14, 19, 24, 25, 27, 28, 39, 73, 82, 85, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 159, 215, 216, 219, 238, 246, 248, 271, 272, 276, 284, 285, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 328, 329, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 358, 359, 361, 362, 392, 397, 401, 408, 409, 414, 468, 470, 472, 475, 478, 479, 480, 493], "throughout": [156, 194, 195, 206, 226, 483], "ti": [173, 211], "tier": 48, "tight": 190, "tile": [14, 466], "time": [0, 3, 15, 22, 87, 88, 89, 91, 232, 278, 299, 302, 308, 311, 349, 350, 351, 352, 353, 354, 359, 361, 368, 375, 379, 380, 381, 382, 383, 387, 389, 471, 477], "tini": [43, 44, 52, 77, 81, 85, 168, 173, 178, 186], "tinynet": 15, "to_tensor": [5, 6, 7, 8], "togeth": [219, 482, 493], "toggl": [392, 395], "token": [77, 159, 173, 181, 188, 356], "token_mix": 77, "too": [15, 368, 388], "tool": [3, 366, 368, 392, 394, 404, 482, 493], "top": [17, 18, 19, 25, 27, 48, 231, 246, 248, 276, 308, 309, 311, 312, 313, 327, 329, 484, 486], "topolog": 15, "torch": [145, 314, 460], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 308, 324, 392, 405, 472], "total_op": 392, "totensor": [482, 493], "touch": 15, "trace": [16, 429], "traceback": 395, "track": [15, 278, 279, 280, 337, 338, 339, 341, 342, 343, 366, 392, 393, 395, 397, 399, 400, 401, 403, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 454, 460, 461, 467, 483], "track_running_stat": [278, 279, 280, 337, 338, 339, 341, 342, 343], "trade": [43, 99], "tradit": [7, 10, 30, 85, 102, 159, 169, 173, 380, 381, 384, 385, 386], "trail": 259, "train": [1, 2, 3, 4, 5, 6, 7, 8, 30, 39, 60, 73, 74, 75, 85, 136, 137, 138, 139, 144, 155, 156, 173, 174, 212, 213, 216, 218, 219, 228, 237, 238, 239, 240, 241, 242, 243, 255, 258, 274, 277, 296, 299, 302, 303, 304, 306, 316, 317, 318, 319, 320, 321, 322, 337, 338, 339, 341, 342, 343, 356, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 434, 440, 482, 485, 486, 487, 488, 489, 490, 493], "trainabl": [155, 337, 338, 339, 341, 342, 343, 356, 366], "transact": 284, "transfer": [258, 341, 342], "transformtransform_pipelin": [482, 493], "transformed_imag": [482, 493], "transformer_bas": 173, "transformer_big": 173, "transformer_decod": 359, "transformer_encod": 361, "transformerdecod": [326, 358, 363], "transformerdecoderlay": [326, 358, 359, 363], "transformerencod": [326, 358, 363], "transformerencoderlay": [326, 358, 361, 363], "transit": [30, 54, 333], "translat": [156, 271, 350, 353, 358], "transpar": 15, "transpos": [12, 17, 429], "transposit": [12, 324], "treat": [0, 212, 344, 366], "triangular": [17, 25, 359, 360, 361, 362, 370, 478, 479], "triangular2": 370, "tril": 466, "triu": 466, "true": [1, 2, 3, 4, 5, 6, 7, 8, 15, 27, 73, 74, 75, 96, 97, 103, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 187, 188, 189, 190, 191, 192, 193, 194, 195, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 236, 237, 239, 240, 241, 242, 243, 246, 248, 255, 258, 271, 272, 274, 276, 278, 279, 280, 281, 282, 283, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 391, 393, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483], "truli": 15, "truncat": 155, "truncate_from": 155, "try": 0, "tu": [173, 174], "tune": [99, 102, 493], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 174, 213, 214, 232, 233, 234, 236, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 311, 312, 313, 314, 328, 344, 347, 348, 349, 350, 351, 352, 353, 354, 364, 382, 383, 384, 385, 386, 388, 399, 400, 401, 403, 405, 419, 422, 425, 427, 443, 444, 445, 453, 459, 461, 462, 463, 465, 468, 469, 472, 473, 474, 475, 476, 480, 481, 484, 485, 486, 491], "twice": 469, "two": [18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 174, 232, 233, 234, 246, 265, 269, 284, 285, 312, 321, 327, 338, 342, 350, 353, 362, 382, 383, 384, 385, 386, 388, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 454, 457, 462, 468, 474], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 159, 169, 174, 180, 181, 194, 195, 212, 213, 214, 246, 327, 358, 360, 362, 391, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 460, 468, 483], "typeerror": [0, 1, 2, 213, 367], "typic": [15, 16, 30, 93, 99, 112, 123, 140, 170, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 228, 237, 238, 277, 284, 301, 302, 304, 317, 318, 335, 337, 338, 339, 341, 342, 343, 378, 379, 387, 389, 480, 483, 485, 489, 491, 493], "u": [24, 27, 290, 292, 294], "u_": 384, "ultra": [45, 118, 201], "unchang": [15, 212, 243, 295, 299, 300, 302, 316, 319, 320, 321, 322, 328, 470, 475], "uncontrol": 15, "undefin": 415, "under": [124, 125, 126, 127, 128, 129, 366], "underbrac": 22, "underdetermin": 24, "undergo": [239, 362, 493], "underli": [0, 69, 70, 71, 72, 74, 75, 76, 83, 84, 405, 454, 460, 465, 470, 472, 481], "understand": [15, 85, 152, 155, 170, 171, 172, 191, 192, 202, 219, 493], "understood": 12, "unexpect": [10, 213, 216, 219, 260, 404], "unfold": [235, 245, 315, 326], "unifi": [0, 15, 391], "uniform": [288, 290, 294, 311, 312, 313, 327, 329, 398, 399, 400, 404, 423, 487, 488, 489, 490], "uniformli": [399, 403], "uniniti": [419, 420], "unintend": [10, 13], "union": 145, "uniqu": [17, 24, 26, 215, 217, 356], "unit": [28, 86, 152, 221, 222, 224, 225, 226, 289, 290, 293, 294, 295, 296, 299, 300, 302, 316], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 392], "unlik": [30, 169, 173, 194, 212, 215, 216, 217, 218, 224, 295, 299, 316, 344, 380, 381, 383, 384, 385, 386, 388], "unnecessari": 10, "unpad": 469, "unseen": 493, "unspecifi": [391, 422], "unsqueez": 466, "unstabl": 21, "unsur": 10, "until": 15, "up": [173, 367, 372, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 395, 434, 489, 491], "updat": [4, 40, 212, 218, 219, 316, 319, 320, 321, 322, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395], "upon": [40, 75, 85, 92, 93, 203, 205, 215, 216, 217, 218], "upper": [25, 292, 370, 388, 403, 434, 478, 479], "upper_triangular": 479, "upsampl": [326, 365], "upstream": 15, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 159, 161, 163, 165, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 246, 248, 253, 255, 256, 258, 260, 262, 263, 271, 272, 274, 276, 277, 278, 279, 280, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 364, 366, 367, 368, 369, 371, 373, 374, 376, 378, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 439, 440, 443, 444, 445, 447, 453, 454, 459, 467, 468, 469, 471, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 159, 174, 216, 219, 239, 281, 282, 283, 309, 317, 367, 378, 392, 395, 424, 484, 485, 486, 487, 488, 489, 490, 491], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 215, 216, 217, 218, 366, 373, 381, 482, 483, 493], "usual": [272, 332], "util": [3, 16, 30, 93, 141, 142, 143, 186, 203, 217, 218, 238, 366, 404], "v": [15, 19, 24, 27, 30, 85, 159, 174, 181, 231, 308, 309, 360, 362, 382, 383, 385, 386, 418], "v1": [73, 74, 82, 83, 84, 85, 90, 91], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 173, 181, 187, 188, 189, 191, 192, 193, 200, 201, 202, 203, 204, 205], "v3": [73, 75, 76, 85, 92, 96, 97], "v4": [73, 76, 85, 93, 99, 100, 101, 102], "v_": [379, 382, 383, 385, 386, 387, 389], "v_2": 159, "v_i": 308, "v_stack": 481, "v_t": [386, 387], "val": 287, "val_loss": 375, "valid": [278, 279, 280, 281, 282, 283, 285, 311, 312, 313, 375, 458], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 159, 169, 170, 171, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 213, 215, 217, 219, 221, 224, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 271, 272, 276, 277, 278, 279, 280, 284, 287, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 306, 308, 309, 316, 317, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 368, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 397, 399, 400, 401, 402, 403, 404, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 434, 435, 438, 439, 440, 441, 442, 443, 445, 448, 449, 451, 452, 463, 467, 469, 470, 472, 480, 485, 487, 488, 490], "valuabl": 404, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 367], "van": 85, "vanish": [85, 295, 302, 337, 338, 339], "var": 429, "varepsilon": 260, "vari": [39, 140, 216, 218, 261, 276, 346, 370, 489], "variabl": [213, 219, 261, 262, 263, 328, 346, 347, 348, 366, 393, 399, 419, 486, 489], "varianc": [226, 237, 255, 258, 278, 279, 280, 289, 290, 293, 294, 302, 316, 337, 338, 339, 341, 342, 343, 344, 382, 383, 384, 385, 386, 401, 459, 489, 493], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 162, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 179, 182, 184, 185, 186, 187, 188, 190, 192, 201, 382, 383, 384], "variat": [281, 282, 283, 341, 342, 343, 486, 493], "varieti": [4, 82, 103, 404, 493], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 85, 86, 93, 94, 102, 154, 173, 180, 300, 378, 404, 424, 443, 445, 469, 483], "vasudevan": 85, "vaswani": [173, 358], "vdim": 308, "vdot": 414, "vector": [14, 19, 24, 25, 26, 27, 246, 248, 274, 308, 327, 329, 356, 408, 409, 410, 414], "veloc": [379, 387, 389], "verbos": [12, 369, 370, 371, 372, 373, 374, 375, 376], "veri": [24, 47, 85, 115, 117, 182, 380], "verifi": 10, "versa": 388, "versatil": [30, 102, 173, 404, 468], "version": [15, 27, 39, 73, 77, 82, 86, 87, 88, 99, 181, 183, 190, 314, 324, 387, 414, 473, 487], "vertic": [476, 481, 490], "vgg": 145, "vggnet": [146, 147, 148, 149], "vggnet_11": 85, "vggnet_13": 85, "vggnet_16": 85, "vggnet_19": 85, "via": [3, 4, 15, 102, 140, 174, 405], "vice": 388, "video": [234, 243, 280, 313, 343, 351, 354], "view": [82, 86, 216, 350, 351, 352, 353, 354, 461, 472], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "visual": [85, 152, 159, 178, 189], "vit": [30, 169, 194, 207, 208, 209, 210, 211], "vit_bas": 173, "vit_hug": 173, "vit_larg": 173, "vit_smal": 173, "vit_tini": 173, "vocabulari": [156, 157, 158, 356], "vol": 85, "vollgraf": 7, "volumetr": [234, 243, 280, 313, 343, 351, 354], "vstack": 466, "w": [10, 12, 13, 14, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 233, 234, 236, 238, 242, 243, 246, 248, 256, 262, 263, 265, 266, 269, 270, 271, 272, 276, 277, 279, 280, 284, 308, 311, 312, 313, 324, 327, 329, 338, 339, 340, 342, 343, 347, 348, 351, 354, 484, 486], "w24": [172, 173], "w_": [233, 234, 262, 263, 265, 266, 269, 270, 276, 312, 313, 314, 347, 348, 350, 351, 353, 354], "w_1": [360, 362], "w_2": [360, 362], "w_in": 272, "w_k": [30, 159, 174], "w_out": [233, 234, 265, 266, 269, 270, 272], "w_q": [159, 174], "w_v": [159, 174], "wa": [15, 74, 316, 319, 320, 321, 322, 392], "wai": [1, 10, 12, 14, 29, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 324, 393, 472], "wait": 375, "wang": [85, 173], "want": [0, 482, 484], "warn": [215, 217, 308], "we": [3, 394, 468], "wei": 85, "weight": [85, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 159, 174, 180, 181, 194, 195, 231, 232, 233, 234, 246, 248, 249, 250, 254, 255, 258, 259, 274, 276, 284, 285, 289, 290, 293, 294, 308, 309, 311, 312, 313, 316, 317, 319, 320, 321, 322, 327, 329, 331, 332, 335, 337, 338, 339, 341, 342, 343, 344, 356, 358, 359, 360, 361, 362, 366, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 399, 404], "weight1": 217, "weight2": 217, "weight_decai": [379, 380, 381, 382, 383, 384, 385, 386, 387, 389], "weihao": 85, "weinberg": 85, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 190, 191, 205, 207, 289, 290, 314], "wenhai": 173, "were": 219, "weyand": 85, "what": [12, 14, 324], "whatev": 392, "when": [0, 1, 3, 10, 13, 15, 22, 59, 85, 159, 213, 216, 218, 219, 221, 224, 232, 233, 234, 274, 295, 318, 328, 337, 338, 339, 341, 342, 343, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 388, 392, 393, 395, 396, 404, 415, 423, 461, 482, 484], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 85, 96, 97, 98, 99, 100, 101, 150, 159, 190, 192, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 404, 405, 406, 407, 411, 412, 413, 415, 416, 419, 420, 434, 435, 439, 440, 441, 442, 443, 444, 445, 449, 451, 453, 457, 458, 459, 462, 463, 467, 469, 471, 474, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490], "wherev": 467, "whether": [1, 15, 18, 30, 59, 73, 74, 75, 96, 97, 103, 159, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 213, 214, 289, 290, 318, 387, 393, 397, 399, 400, 401, 403, 405, 419, 420, 422, 423, 443, 444, 445, 453, 459], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 85, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 156, 159, 161, 163, 165, 169, 173, 174, 181, 185, 194, 196, 197, 198, 199, 213, 215, 217, 219, 224, 228, 251, 260, 277, 281, 282, 283, 285, 295, 296, 299, 301, 304, 306, 316, 333, 335, 337, 338, 339, 341, 342, 343, 344, 356, 360, 362, 374, 376, 382, 383, 385, 387, 393, 399, 400, 403, 431, 432, 433, 435, 436, 437, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 455, 456, 457, 459, 461, 462, 463, 471, 472, 473, 474, 476, 478, 479, 480, 483, 484, 486, 487, 488, 489, 490, 491, 493], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 85, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 168, 169, 170, 171, 172, 173, 177, 184, 185, 186, 188, 189, 190, 191, 195, 209, 216, 219, 237, 238, 296, 300, 301, 318, 359, 366, 369, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 454, 467, 472, 476, 487, 493], "who": [215, 216, 217, 218], "whose": [27, 369, 370, 371, 372, 373, 374, 375, 376, 420, 423, 426, 428, 430, 435, 439, 448, 454], "wide": [4, 5, 6, 8, 16, 24, 52, 85, 102, 112, 120, 121, 122, 204, 225, 300, 311, 312, 332], "wide_resnet_101": 85, "wide_resnet_50": 85, "wider": [43, 121, 122, 232, 233], "wideresnet": 85, "width": [30, 59, 60, 85, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 166, 177, 178, 179, 233, 234, 236, 242, 243, 256, 262, 263, 265, 266, 269, 270, 272, 276, 277, 285, 312, 313, 314, 338, 339, 340, 342, 343, 347, 348, 350, 351, 353, 354, 364, 391, 484, 486, 491], "width_coef": 59, "width_multipli": [90, 94], "window": [173, 174, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 264, 265, 266, 268, 269, 270, 349, 350, 351, 352, 353, 354, 380, 443, 445], "windows_s": [194, 195], "wise": [10, 14, 85, 134, 136, 137, 138, 139, 174, 221, 222, 224, 225, 226, 227, 228, 229, 239, 278, 279, 280, 284, 298, 304, 305, 316, 318, 319, 320, 321, 322, 366, 394, 406, 407, 410, 411, 412, 413, 415, 416, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 446, 448, 449, 450, 451, 452, 455, 456, 457, 465, 481], "within": [2, 85, 155, 156, 173, 194, 206, 212, 215, 216, 217, 218, 219, 229, 276, 277, 294, 296, 297, 298, 300, 302, 303, 305, 306, 311, 312, 313, 314, 316, 319, 320, 324, 328, 331, 332, 333, 334, 335, 337, 338, 339, 341, 344, 349, 350, 351, 352, 353, 354, 378, 392, 417, 435, 489, 493], "without": [10, 15, 123, 173, 215, 216, 217, 246, 248, 311, 312, 313, 327, 329, 392, 393, 396, 443, 470, 472, 480], "word": [173, 274, 356], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "workflow": [13, 404, 493], "worth": 173, "wrap": [3, 366, 368, 392, 395, 405, 460], "wrapper": 366, "wu": 173, "www": [5, 6], "x": [15, 16, 26, 30, 82, 85, 86, 130, 145, 150, 155, 174, 212, 213, 215, 216, 217, 218, 219, 228, 239, 246, 248, 260, 271, 272, 277, 281, 282, 283, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 360, 361, 362, 366, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 397, 399, 400, 401, 403, 419, 420, 434, 439, 440, 447, 462, 467, 468, 473, 474, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491], "x1": 327, "x2": 327, "x_": [30, 256, 332, 335, 340, 361, 468], "x_0": 361, "x_1": 159, "x_2": 159, "x_c": [332, 335], "x_i": [260, 331, 361, 405, 434, 440, 447], "x_k": 332, "x_test": 15, "x_train": 15, "xavier": [289, 290, 293, 294], "xavier_norm": 288, "xavier_uniform": 288, "xiao": 7, "xie": 85, "xl": [72, 85, 173], "xlarg": [53, 85, 179], "xy": 468, "x\u2081": 327, "x\u2082": 327, "y": [15, 30, 85, 150, 215, 216, 217, 218, 219, 260, 271, 277, 281, 282, 283, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 397, 399, 400, 401, 403, 405, 419, 420, 467, 468, 473, 487], "y1": 462, "y2": 462, "y_": [30, 256, 332, 335, 340, 468], "y_c": [332, 335], "y_i": [260, 331], "y_train": 15, "yann": [8, 85], "yet": [15, 50, 52, 100, 177, 272, 394], "yield": [0, 1, 213], "you": [0, 12, 14, 15, 92, 155, 173, 216, 218, 219, 314, 324, 358, 366, 378, 392, 393, 404, 419, 420, 421, 428, 458, 460, 482, 484, 493], "your": [10, 15, 92, 100, 366, 378, 393, 404, 493], "yu": 85, "z": [15, 85, 360, 362, 420, 427, 428], "zalandoresearch": 7, "ze": [85, 173], "zeiler": [85, 152], "zero": [22, 24, 25, 75, 155, 221, 224, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 260, 264, 265, 266, 268, 269, 270, 271, 272, 274, 287, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 302, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 344, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 366, 367, 380, 381, 382, 383, 384, 385, 386, 387, 419, 420, 421, 422, 428, 429, 434, 435, 440, 447, 448, 469, 478, 479], "zero_grad": [15, 214, 367, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 405], "zeros_lik": [420, 429], "zhang": 85, "zhmoginov": 85, "zhu": 85, "zhuang": 85, "zihang": [85, 173], "zisserman": 85, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "Transformers", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 394, "1d": 394, "2": 394, "2d": 394, "3": 394, "It": 393, "The": 15, "ab": 430, "about": [161, 163, 165], "abstract": 15, "acceler": 15, "activ": [223, 245, 307, 326], "ad": 394, "adadelta": 380, "adagrad": 381, "adam": 382, "adamax": 384, "adamw": 383, "adaptive_avg_pool1d": 261, "adaptive_avg_pool2d": 262, "adaptive_avg_pool3d": 263, "adaptiveavgpool1d": 346, "adaptiveavgpool2d": 347, "adaptiveavgpool3d": 348, "add": 406, "addit": [24, 308], "advanc": [236, 493], "advantag": [10, 12, 13, 14, 324], "affine_grid": 271, "alexnet": [28, 29, 85], "algebra": 20, "algorithm": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "align": [15, 394], "alpha_dropout": 237, "alphadropout": 316, "also": 378, "anoth": 460, "arang": 417, "arcco": 431, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152, 159, 174], "arcsin": 432, "arctan": 433, "asgd": 379, "attent": [230, 231, 245, 285, 310, 326], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 212, 214, 215, 216, 217, 218, 219, 278, 279, 280, 281, 282, 283, 284, 295, 296, 299, 300, 302, 303, 304, 306, 311, 312, 313, 316, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 391, 405, 484, 485, 486, 487, 488, 489, 490, 491], "autodiff": 15, "automat": 15, "avg_pool1d": 264, "avg_pool2d": 265, "avg_pool3d": 266, "avgpool1d": 349, "avgpool2d": 350, "avgpool3d": 351, "axi": [394, 454], "backend": 15, "backpropag": 405, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 238, 246, 248, 271, 276, 284, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481], "base": [377, 405], "basic": 15, "batch_norm": 255, "batchnorm": 286, "batchnorm1d": 337, "batchnorm2d": 338, "batchnorm3d": 339, "bceloss": 331, "behavior": [261, 262, 263, 346, 347, 348], "benefit": [392, 395], "bernoulli": 397, "between": [15, 405], "bilinear": [246, 327], "binari": 429, "binary_cross_entropi": 249, "bottleneck": [96, 97], "broadcast": [394, 461], "broadcast_to": 461, "buffer": 212, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 238, 239, 246, 248, 261, 262, 263, 271, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 465, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491], "captur": 396, "ceil": 434, "centercrop": 484, "choleski": 17, "chunk": 462, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 159, 169, 174, 194, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 405, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "clip": 435, "co": 436, "coatnet": [30, 85], "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 366], "compos": 482, "comput": [462, 467, 473], "concatdataset": [0, 1], "concaten": 463, "conclus": [3, 10, 12, 13, 14, 15, 324, 366, 368, 393, 394, 404, 483, 493], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 175, 176, 177, 178, 179], "constant": 287, "contain": 220, "conv": 286, "conv1d": [232, 311], "conv2d": [233, 312], "conv3d": [234, 313], "convbnrelu1d": 278, "convbnrelu2d": 279, "convbnrelu3d": 280, "convnet": 85, "convnext": [39, 85], "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [173, 235, 245, 286, 315, 326], "core": 15, "cosh": 437, "cosineannealinglr": 369, "count_flop": 392, "creat": [214, 405, 460], "cross_entropi": 250, "crossentropyloss": 332, "crossvit": [159, 173], "crossvit_15": 160, "crossvit_15_dagg": 161, "crossvit_18": 162, "crossvit_18_dagg": 163, "crossvit_9": 164, "crossvit_9_dagg": 165, "crossvit_bas": 166, "crossvit_smal": 167, "crossvit_tini": 168, "cube": 438, "custom": [1, 2, 3, 213, 367, 378, 493], "cvt": [169, 173], "cvt_13": 170, "cvt_21": 171, "cvt_w24": 172, "cycliclr": 370, "dagger": [161, 163, 165], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 213, 367, 378], "definit": [12, 13, 14, 260, 324], "densenet": [54, 85], "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 281, "depthseparableconv2d": 282, "depthseparableconv3d": 283, "depthwis": 286, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 396], "design": 15, "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 159, 174, 308, 358, 359, 360, 361, 362], "devic": [15, 405], "diag": 418, "differ": 156, "differenti": 15, "dilat": 236, "div": 407, "dot": 408, "drop_block": 238, "drop_path": 239, "dropblock": 317, "dropout": [240, 244, 245, 319, 323, 326], "dropout1d": [241, 320], "dropout2d": [242, 321], "dropout3d": [243, 322], "droppath": 318, "dtype": 405, "educ": 15, "efficientnet": [59, 85], "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 325, 326], "elu": [221, 295], "embed": [274, 356], "empti": 419, "empty_lik": 420, "enabl": 15, "enhanc": 181, "evalu": 15, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "excit": 286, "exp": 439, "exponentiallr": 371, "express": [256, 434, 440, 447, 474], "ey": 421, "fashionmnist": 7, "featur": [4, 16, 136, 137, 138, 139, 144, 378, 404, 493], "flatten": 464, "floor": 440, "formula": [369, 370, 371, 373, 374, 375, 376], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 236, 239, 246, 248, 261, 262, 263, 271, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 463, 465, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491], "free": 405, "from": [156, 460], "full": 422, "full_lik": 423, "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 287, 289, 290, 291, 292, 293, 294, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "fuse": 286, "futur": 4, "gelu": [222, 296], "gener": [398, 429], "get": 378, "global_response_norm": 256, "globalresponsenorm": 340, "gpu": [15, 405], "grad_en": 393, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 238, 246, 248, 271, 276, 284, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 311, 312, 313, 316, 319, 320, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481], "grid_sampl": 272, "hardsigmoid": 297, "hardswish": 298, "hook": [15, 405], "how": [15, 393], "hstack": 465, "huber_loss": 251, "huberloss": 333, "hybrid": 30, "hyperparamet": [110, 111], "ident": 328, "imag": [9, 492], "implement": [159, 174], "incept": [73, 85], "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": [77, 85], "inceptionresnet": 82, "infer": 405, "init": [287, 289, 290, 291, 292, 293, 294], "initi": 288, "inner": 409, "input": 460, "inspect": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "instal": 15, "instance_norm": 258, "instancenorm1d": 341, "instancenorm2d": 342, "instancenorm3d": 343, "integr": [3, 366, 404, 493], "interpol": 276, "inv": 21, "kaiming_norm": 289, "kaiming_uniform": 290, "kei": [3, 4, 136, 137, 138, 139, 144, 181, 366, 378, 404, 493], "kernel": 286, "lambdalr": 373, "layer": [104, 105, 106, 107, 108, 109, 286, 307, 310, 315, 323, 325, 326, 330, 336, 345, 355, 357, 363, 365], "layer_norm": 259, "layernorm": 344, "leaky_relu": 224, "leakyrelu": 299, "learn": 404, "lenet": [85, 86], "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 245, 247, 248, 326, 329, 330], "linspac": 424, "list": 460, "load": 1, "log": 441, "log2": 442, "loss": [245, 252, 326, 336], "lr": 377, "lr_schedul": [368, 369, 370, 371, 372, 373, 374, 375, 376], "lrschedul": 372, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 245, 366, 378, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 493], "lucid\u00b2": 15, "masked_fil": 467, "mathemat": [12, 13, 14, 159, 174, 256, 260, 308, 324, 358, 359, 360, 361, 362, 369, 370, 371, 373, 374, 375, 376, 405, 434, 440, 447, 474], "matmul": 410, "matrix": 410, "matrix_pow": 22, "max": 443, "max_pool1d": 268, "max_pool2d": 269, "max_pool3d": 270, "maximum": 411, "maxpool1d": 352, "maxpool2d": 353, "maxpool3d": 354, "maxvit": [173, 174], "maxvit_bas": [175, 176], "maxvit_smal": 177, "maxvit_tini": 178, "maxvit_xlarg": 179, "mean": 444, "mechan": [231, 285], "meshgrid": 468, "metadata": 396, "metal": 15, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 213, 214, 358, 359, 360, 361, 362, 367, 369, 370, 371, 372, 373, 374, 375, 376, 391, 405], "min": 445, "minimum": 412, "mlx": 15, "mnist": 8, "mobilenet": [85, 90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 175, 176, 177, 178, 179, 366], "modul": [213, 326], "moduledict": 215, "modulelist": 216, "more": 404, "move": 405, "mse_loss": 253, "mseloss": 334, "multiheadattent": 308, "multipl": [0, 410], "multipli": 413, "multisteplr": 374, "nadam": 385, "network": 15, "neural": 15, "new": 394, "newaxi": 394, "nll_loss": 254, "nllloss": 335, "nn": [15, 156, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 366], "no_grad": 395, "norm": 23, "normal": [245, 257, 260, 291, 326, 345, 485], "note": [272, 422, 423], "number": 398, "numer": 391, "ones": 425, "ones_lik": 426, "oper": [20, 410, 429], "optim": [367, 368, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "option": 308, "organ": 366, "other": 15, "outer": 414, "overview": [3, 4, 10, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 308, 358, 359, 360, 361, 362, 366, 368, 378, 392, 395, 404, 493], "pad": 469, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 302, 303, 304, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "parameterdict": 217, "parameterlist": 218, "pass": 150, "perform": 405, "pinv": 24, "pipelin": [3, 493], "pitfal": 393, "pool": [245, 267, 326, 355], "potenti": 393, "power": 415, "process": 274, "properti": [214, 405], "pvt": [173, 180], "pvt_huge": 182, "pvt_larg": 183, "pvt_medium": 184, "pvt_small": 185, "pvt_tini": 186, "pvt_v2": 181, "pvt_v2_b0": 187, "pvt_v2_b1": 188, "pvt_v2_b2": 189, "pvt_v2_b2_li": 190, "pvt_v2_b3": 191, "pvt_v2_b4": 192, "pvt_v2_b5": 193, "pyramid": 173, "qr": 25, "radam": 386, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 399, "randint": 400, "randn": 401, "random": [397, 398, 399, 400, 401, 402, 403, 404], "randomcrop": 486, "randomgrayscal": 487, "randomhorizontalflip": 488, "randomrot": 489, "randomverticalflip": 490, "ravel": 470, "rearrang": [10, 12, 324], "reciproc": 446, "reduc": [10, 13], "reducelronplateau": 375, "refer": [5, 6, 7, 8, 284, 378], "register_model": 396, "regular": 238, "relu": [225, 286, 300], "relu6": 301, "repeat": [10, 14, 471], "represent": [159, 174, 391, 405], "reshap": 472, "resiz": 491, "resnest": [85, 103], "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": [85, 112], "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": [85, 123], "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 285, 287, 289, 290, 291, 292, 293, 294, 301, 324, 356, 392, 393, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "rmsprop": 387, "roll": 473, "rotat": 277, "round": 447, "rprop": 388, "rule": [410, 454, 461], "scaled_dot_product_attent": 231, "scaleddotproductattent": 309, "schedul": 377, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 378, "seed": 402, "select": 286, "selectivekernel": 285, "selu": [226, 302], "semodul": 284, "senet": [85, 130], "separ": 286, "sequenti": 219, "sgd": 389, "shape": 15, "sigmoid": [227, 303], "sign": 448, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "sin": 449, "sinh": 450, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": [85, 140], "softmax": [228, 304], "solv": 26, "spars": [326, 357], "spatial": [245, 273], "specif": [160, 161, 162, 163, 164, 165, 166, 167, 168], "split": 474, "sqrt": 451, "squar": 452, "squeez": [286, 475], "stack": 476, "start": 378, "state": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "steplr": 376, "sub": 416, "sum": 453, "summar": 155, "summari": 155, "svd": 27, "swap": 454, "swapax": 454, "swin": 173, "swin_bas": 196, "swin_larg": 197, "swin_smal": 198, "swin_tini": 199, "swin_v2_bas": 200, "swin_v2_giant": 201, "swin_v2_hug": 202, "swin_v2_larg": 203, "swin_v2_smal": 204, "swin_v2_tini": 205, "swintransform": 194, "swintransformer_v2": 195, "swish": 305, "switch": 15, "tabl": 155, "tan": 455, "tanh": [229, 306, 456], "tensor": [15, 394, 405, 429, 460, 466], "tile": 477, "totensor": 483, "trace": 457, "track": 405, "train": 15, "transform": [156, 173, 326, 358, 363, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 359, "transformerdecoderlay": 360, "transformerencod": 361, "transformerencoderlay": 362, "transpos": 458, "tril": 478, "triu": 479, "unari": 429, "unfold": [236, 314], "uniform": [292, 403], "unsqueez": 480, "upsampl": 364, "us": [1, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 405, 460], "usag": [4, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 212, 277, 308, 358, 359, 360, 361, 362, 368, 369, 370, 371, 372, 373, 374, 375, 376, 391, 393, 394, 468, 482, 483, 493], "util": [245, 275], "utilit": 466, "valu": 474, "var": 459, "variant": [161, 163, 165], "verif": 15, "vggnet": [85, 145], "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [173, 326, 365], "visual": 173, "vit": [173, 206], "vit_bas": 207, "vit_hug": 208, "vit_larg": 209, "vit_smal": 210, "vit_tini": 211, "vstack": 481, "weight": 288, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 393], "xavier_norm": 293, "xavier_uniform": 294, "xception": [85, 150, 151], "zero": 427, "zeros_lik": 428, "zfnet": [85, 152, 153]}})