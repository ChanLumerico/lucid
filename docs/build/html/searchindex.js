Search.setIndex({"alltitles": {"@ Operator": [[120, "operator"]], "Activation Functions": [[20, null]], "Activation Layers": [[67, null], [78, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[108, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[31, "advanced-example-with-dilation"]], "Attributes": [[13, "attributes"], [15, "attributes"], [16, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [65, "attributes"], [66, "attributes"], [68, "attributes"], [69, "attributes"], [70, "attributes"], [72, "attributes"], [73, "attributes"], [74, "attributes"], [75, "attributes"], [76, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [115, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"]], "Benefits": [[107, "benefits"]], "Binary Functions": [[133, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [16, "class-signature"], [59, "class-signature"], [60, "class-signature"], [61, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [65, "class-signature"], [66, "class-signature"], [68, "class-signature"], [69, "class-signature"], [70, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [75, "class-signature"], [76, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [102, "class-signature"], [115, "class-signature"]], "Conclusion": [[0, "conclusion"], [104, "conclusion"], [105, "conclusion"], [106, "conclusion"], [107, "conclusion"], [114, "conclusion"]], "Containers": [[17, null]], "Convolution Functions": [[30, null], [38, null]], "Convolution Layers": [[71, null], [78, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[159, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[115, null]], "Defining a custom module": [[14, null]], "Dropout Functions": [[37, null], [38, null]], "Dropout Layers": [[77, null], [78, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [31, "example"], [104, null], [104, null], [104, null], [105, "example"], [107, "example"], [110, "example"], [111, "example"], [112, "example"], [113, "example"], [114, null], [114, null], [114, null], [127, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [143, "example"], [145, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [158, "example"], [160, "example"], [162, "example"], [165, "example"], [167, "example"], [168, "example"], [169, "example"], [171, "example"], [172, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[106, null]], "Example 2: Adding a new axis to a 2D tensor": [[106, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[106, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[108, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [18, "examples"], [19, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [39, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [142, "examples"], [144, "examples"], [146, "examples"], [159, "examples"], [161, "examples"], [164, "examples"], [166, "examples"], [170, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [31, "forward-calculation"], [39, "forward-calculation"], [41, "forward-calculation"], [59, "forward-calculation"], [60, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [65, "forward-calculation"], [66, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [160, "forward-calculation"], [162, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [105, "function-signature"], [107, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"]], "How It Works": [[105, "how-it-works"], [107, "how-it-works"]], "Indexing and slicing": [[115, null]], "Integration with lucid": [[104, "integration-with-lucid"], [114, "integration-with-lucid"]], "Iterating through a tensor": [[115, null]], "Key Components": [[104, "key-components"]], "Key Features": [[0, "key-features"], [114, "key-features"]], "Learn More": [[114, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[38, null], [40, null]], "Linear Layers": [[78, null], [82, null]], "Loss Functions": [[38, null], [45, null]], "Loss Layers": [[78, null], [88, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[120, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [115, "methods"]], "Modules": [[78, null]], "Normalization Functions": [[38, null], [49, null]], "Normalization Layers": [[78, null], [96, null]], "Notes": [[0, "notes"]], "Organizing Models": [[104, "organizing-models"]], "Overview": [[0, "overview"], [104, "overview"], [114, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [39, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [107, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"]], "Performing backpropagation": [[115, null]], "Pooling Functions": [[38, null], [55, null]], "Pooling Layers": [[78, null], [103, null]], "Potential Pitfalls": [[105, "potential-pitfalls"], [107, "potential-pitfalls"]], "Properties": [[15, "properties"], [115, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[109, null]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [105, "returns"], [107, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"]], "Tensor Generating Functions": [[133, null]], "Tensor Operations": [[133, null]], "Tensor Utilites": [[163, null]], "Type Definitions": [[108, "type-definitions"]], "Unary Functions": [[133, null]], "Usage": [[13, "usage"], [105, "usage"], [106, "usage"], [107, "usage"]], "Use another Tensor as input": [[159, null]], "Why Use Type Aliases?": [[108, null]], "activation Functions": [[38, null]], "lucid.Tensor": [[115, null]], "lucid.abs": [[134, null]], "lucid.add": [[116, null]], "lucid.arccos": [[135, null]], "lucid.arcsin": [[136, null]], "lucid.arctan": [[137, null]], "lucid.clip": [[138, null]], "lucid.concatenate": [[160, null]], "lucid.cos": [[139, null]], "lucid.cosh": [[140, null]], "lucid.cube": [[141, null]], "lucid.diag": [[127, null]], "lucid.div": [[117, null]], "lucid.dot": [[118, null]], "lucid.exp": [[142, null]], "lucid.eye": [[128, null]], "lucid.flatten": [[161, null]], "lucid.grad_enabled": [[105, null]], "lucid.hstack": [[162, null]], "lucid.inner": [[119, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[143, null]], "lucid.matmul": [[120, null]], "lucid.max": [[144, null]], "lucid.maximum": [[121, null]], "lucid.mean": [[145, null]], "lucid.min": [[146, null]], "lucid.minimum": [[122, null]], "lucid.mul": [[123, null]], "lucid.newaxis": [[106, null]], "lucid.nn": [[104, null]], "lucid.nn.functional": [[38, null]], "lucid.no_grad": [[107, null]], "lucid.ones": [[129, null]], "lucid.ones_like": [[130, null]], "lucid.outer": [[124, null]], "lucid.pad": [[164, null]], "lucid.power": [[125, null]], "lucid.random": [[114, null]], "lucid.random.rand": [[110, null]], "lucid.random.randint": [[111, null]], "lucid.random.randn": [[112, null]], "lucid.random.seed": [[113, null]], "lucid.ravel": [[165, null]], "lucid.reciprocal": [[147, null]], "lucid.repeat": [[166, null]], "lucid.reshape": [[167, null]], "lucid.sign": [[148, null]], "lucid.sin": [[149, null]], "lucid.sinh": [[150, null]], "lucid.sqrt": [[151, null]], "lucid.square": [[152, null]], "lucid.squeeze": [[168, null]], "lucid.stack": [[169, null]], "lucid.sub": [[126, null]], "lucid.sum": [[153, null]], "lucid.tan": [[154, null]], "lucid.tanh": [[155, null]], "lucid.tensor": [[159, null]], "lucid.tile": [[170, null]], "lucid.trace": [[156, null]], "lucid.transpose": [[157, null]], "lucid.types": [[108, null]], "lucid.unsqueeze": [[171, null]], "lucid.var": [[158, null]], "lucid.vstack": [[172, null]], "lucid.zeros": [[131, null]], "lucid.zeros_like": [[132, null]], "nn.AlphaDropout": [[72, null]], "nn.AvgPool1d": [[97, null]], "nn.AvgPool2d": [[98, null]], "nn.AvgPool3d": [[99, null]], "nn.BCELoss": [[83, null]], "nn.BatchNorm1d": [[89, null]], "nn.BatchNorm2d": [[90, null]], "nn.BatchNorm3d": [[91, null]], "nn.Bilinear": [[79, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[68, null]], "nn.Conv2d": [[69, null]], "nn.Conv3d": [[70, null]], "nn.CrossEntropyLoss": [[84, null]], "nn.Dropout": [[73, null]], "nn.Dropout1d": [[74, null]], "nn.Dropout2d": [[75, null]], "nn.Dropout3d": [[76, null]], "nn.ELU": [[59, null]], "nn.GELU": [[60, null]], "nn.HuberLoss": [[85, null]], "nn.Identity": [[80, null]], "nn.InstanceNorm1d": [[92, null]], "nn.InstanceNorm2d": [[93, null]], "nn.InstanceNorm3d": [[94, null]], "nn.LayerNorm": [[95, null]], "nn.LeakyReLU": [[61, null]], "nn.Linear": [[81, null]], "nn.MSELoss": [[86, null]], "nn.MaxPool1d": [[100, null]], "nn.MaxPool2d": [[101, null]], "nn.MaxPool3d": [[102, null]], "nn.Module": [[14, null]], "nn.NLLLoss": [[87, null]], "nn.Parameter": [[15, null]], "nn.ReLU": [[62, null]], "nn.SELU": [[63, null]], "nn.Sequential": [[16, null]], "nn.Sigmoid": [[64, null]], "nn.Softmax": [[65, null]], "nn.Tanh": [[66, null]], "nn.functional.alpha_dropout": [[32, null]], "nn.functional.avg_pool1d": [[52, null]], "nn.functional.avg_pool2d": [[53, null]], "nn.functional.avg_pool3d": [[54, null]], "nn.functional.batch_norm": [[48, null]], "nn.functional.bilinear": [[39, null]], "nn.functional.binary_cross_entropy": [[42, null]], "nn.functional.conv1d": [[27, null]], "nn.functional.conv2d": [[28, null]], "nn.functional.conv3d": [[29, null]], "nn.functional.cross_entropy": [[43, null]], "nn.functional.dropout": [[33, null]], "nn.functional.dropout1d": [[34, null]], "nn.functional.dropout2d": [[35, null]], "nn.functional.dropout3d": [[36, null]], "nn.functional.elu": [[18, null]], "nn.functional.gelu": [[19, null]], "nn.functional.huber_loss": [[44, null]], "nn.functional.instance_norm": [[50, null]], "nn.functional.layer_norm": [[51, null]], "nn.functional.leaky_relu": [[21, null]], "nn.functional.linear": [[41, null]], "nn.functional.max_pool1d": [[56, null]], "nn.functional.max_pool2d": [[57, null]], "nn.functional.max_pool3d": [[58, null]], "nn.functional.mse_loss": [[46, null]], "nn.functional.nll_loss": [[47, null]], "nn.functional.relu": [[22, null]], "nn.functional.selu": [[23, null]], "nn.functional.sigmoid": [[24, null]], "nn.functional.softmax": [[25, null]], "nn.functional.tanh": [[26, null]], "nn.functional.unfold": [[31, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[134, "lucid.abs", false]], "add() (in module lucid)": [[116, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[72, "lucid.nn.AlphaDropout", false]], "arccos() (in module lucid)": [[135, "lucid.arccos", false]], "arcsin() (in module lucid)": [[136, "lucid.arcsin", false]], "arctan() (in module lucid)": [[137, "lucid.arctan", false]], "avg_pool1d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[97, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[98, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[99, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[89, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[90, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[91, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[83, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[79, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[138, "lucid.clip", false]], "concatenate() (in module lucid)": [[160, "lucid.concatenate", false]], "conv1d (class in lucid.nn)": [[68, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[69, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[28, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[70, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[139, "lucid.cos", false]], "cosh() (in module lucid)": [[140, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[84, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[141, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[127, "lucid.diag", false]], "div() (in module lucid)": [[117, "lucid.div", false]], "dot() (in module lucid)": [[118, "lucid.dot", false]], "dropout (class in lucid.nn)": [[73, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[74, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[75, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[76, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[59, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[18, "lucid.nn.functional.elu", false]], "exp() (in module lucid)": [[142, "lucid.exp", false]], "eye() (in module lucid)": [[128, "lucid.eye", false]], "flatten() (in module lucid)": [[161, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[60, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[19, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[105, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[162, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[85, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[80, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[119, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[92, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[93, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[94, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[95, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[21, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[61, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[81, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[143, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[120, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[144, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[121, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[100, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[101, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[102, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[145, "lucid.mean", false]], "min() (in module lucid)": [[146, "lucid.min", false]], "minimum() (in module lucid)": [[122, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "mse_loss() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[86, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[123, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[87, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[107, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "ones() (in module lucid)": [[129, "lucid.ones", false]], "ones_like() (in module lucid)": [[130, "lucid.ones_like", false]], "outer() (in module lucid)": [[124, "lucid.outer", false]], "pad() (in module lucid)": [[164, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[125, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[110, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[111, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[112, "lucid.random.randn", false]], "ravel() (in module lucid)": [[165, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[147, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[62, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[166, "lucid.repeat", false]], "reshape() (in module lucid)": [[167, "lucid.reshape", false]], "seed() (in module lucid.random)": [[113, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[63, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[16, "lucid.nn.Sequential", false]], "sigmoid (class in lucid.nn)": [[64, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[24, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[148, "lucid.sign", false]], "sin() (in module lucid)": [[149, "lucid.sin", false]], "sinh() (in module lucid)": [[150, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[65, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[151, "lucid.sqrt", false]], "square() (in module lucid)": [[152, "lucid.square", false]], "squeeze() (in module lucid)": [[168, "lucid.squeeze", false]], "stack() (in module lucid)": [[169, "lucid.stack", false]], "sub() (in module lucid)": [[126, "lucid.sub", false]], "sum() (in module lucid)": [[153, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[154, "lucid.tan", false]], "tanh (class in lucid.nn)": [[66, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[155, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[115, "lucid.Tensor", false]], "tensor() (in module lucid)": [[159, "lucid.tensor", false]], "tile() (in module lucid)": [[170, "lucid.tile", false]], "trace() (in module lucid)": [[156, "lucid.trace", false]], "transpose() (in module lucid)": [[157, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.unfold", false]], "unsqueeze() (in module lucid)": [[171, "lucid.unsqueeze", false]], "var() (in module lucid)": [[158, "lucid.var", false]], "vstack() (in module lucid)": [[172, "lucid.vstack", false]], "zeros() (in module lucid)": [[131, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[132, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[115, 1, 1, "", "Tensor"], [134, 2, 1, "", "abs"], [116, 2, 1, "", "add"], [135, 2, 1, "", "arccos"], [136, 2, 1, "", "arcsin"], [137, 2, 1, "", "arctan"], [138, 2, 1, "", "clip"], [160, 2, 1, "", "concatenate"], [139, 2, 1, "", "cos"], [140, 2, 1, "", "cosh"], [141, 2, 1, "", "cube"], [127, 2, 1, "", "diag"], [117, 2, 1, "", "div"], [118, 2, 1, "", "dot"], [142, 2, 1, "", "exp"], [128, 2, 1, "", "eye"], [161, 2, 1, "", "flatten"], [105, 2, 1, "", "grad_enabled"], [162, 2, 1, "", "hstack"], [119, 2, 1, "", "inner"], [143, 2, 1, "", "log"], [120, 2, 1, "", "matmul"], [144, 2, 1, "", "max"], [121, 2, 1, "", "maximum"], [145, 2, 1, "", "mean"], [146, 2, 1, "", "min"], [122, 2, 1, "", "minimum"], [123, 2, 1, "", "mul"], [107, 2, 1, "", "no_grad"], [129, 2, 1, "", "ones"], [130, 2, 1, "", "ones_like"], [124, 2, 1, "", "outer"], [164, 2, 1, "", "pad"], [125, 2, 1, "", "power"], [165, 2, 1, "", "ravel"], [147, 2, 1, "", "reciprocal"], [166, 2, 1, "", "repeat"], [167, 2, 1, "", "reshape"], [148, 2, 1, "", "sign"], [149, 2, 1, "", "sin"], [150, 2, 1, "", "sinh"], [151, 2, 1, "", "sqrt"], [152, 2, 1, "", "square"], [168, 2, 1, "", "squeeze"], [169, 2, 1, "", "stack"], [126, 2, 1, "", "sub"], [153, 2, 1, "", "sum"], [154, 2, 1, "", "tan"], [155, 2, 1, "", "tanh"], [159, 2, 1, "", "tensor"], [170, 2, 1, "", "tile"], [156, 2, 1, "", "trace"], [157, 2, 1, "", "transpose"], [171, 2, 1, "", "unsqueeze"], [158, 2, 1, "", "var"], [172, 2, 1, "", "vstack"], [131, 2, 1, "", "zeros"], [132, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[72, 1, 1, "", "AlphaDropout"], [97, 1, 1, "", "AvgPool1d"], [98, 1, 1, "", "AvgPool2d"], [99, 1, 1, "", "AvgPool3d"], [83, 1, 1, "", "BCELoss"], [89, 1, 1, "", "BatchNorm1d"], [90, 1, 1, "", "BatchNorm2d"], [91, 1, 1, "", "BatchNorm3d"], [79, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [68, 1, 1, "", "Conv1d"], [69, 1, 1, "", "Conv2d"], [70, 1, 1, "", "Conv3d"], [84, 1, 1, "", "CrossEntropyLoss"], [73, 1, 1, "", "Dropout"], [74, 1, 1, "", "Dropout1d"], [75, 1, 1, "", "Dropout2d"], [76, 1, 1, "", "Dropout3d"], [59, 1, 1, "", "ELU"], [60, 1, 1, "", "GELU"], [85, 1, 1, "", "HuberLoss"], [80, 1, 1, "", "Identity"], [92, 1, 1, "", "InstanceNorm1d"], [93, 1, 1, "", "InstanceNorm2d"], [94, 1, 1, "", "InstanceNorm3d"], [95, 1, 1, "", "LayerNorm"], [61, 1, 1, "", "LeakyReLU"], [81, 1, 1, "", "Linear"], [86, 1, 1, "", "MSELoss"], [100, 1, 1, "", "MaxPool1d"], [101, 1, 1, "", "MaxPool2d"], [102, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [87, 1, 1, "", "NLLLoss"], [15, 1, 1, "", "Parameter"], [62, 1, 1, "", "ReLU"], [63, 1, 1, "", "SELU"], [16, 1, 1, "", "Sequential"], [64, 1, 1, "", "Sigmoid"], [65, 1, 1, "", "Softmax"], [66, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[32, 2, 1, "", "alpha_dropout"], [52, 2, 1, "", "avg_pool1d"], [53, 2, 1, "", "avg_pool2d"], [54, 2, 1, "", "avg_pool3d"], [48, 2, 1, "", "batch_norm"], [39, 2, 1, "", "bilinear"], [42, 2, 1, "", "binary_cross_entropy"], [27, 2, 1, "", "conv1d"], [28, 2, 1, "", "conv2d"], [29, 2, 1, "", "conv3d"], [43, 2, 1, "", "cross_entropy"], [33, 2, 1, "", "dropout"], [34, 2, 1, "", "dropout1d"], [35, 2, 1, "", "dropout2d"], [36, 2, 1, "", "dropout3d"], [18, 2, 1, "", "elu"], [19, 2, 1, "", "gelu"], [44, 2, 1, "", "huber_loss"], [50, 2, 1, "", "instance_norm"], [51, 2, 1, "", "layer_norm"], [21, 2, 1, "", "leaky_relu"], [41, 2, 1, "", "linear"], [56, 2, 1, "", "max_pool1d"], [57, 2, 1, "", "max_pool2d"], [58, 2, 1, "", "max_pool3d"], [46, 2, 1, "", "mse_loss"], [47, 2, 1, "", "nll_loss"], [22, 2, 1, "", "relu"], [23, 2, 1, "", "selu"], [24, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [26, 2, 1, "", "tanh"], [31, 2, 1, "", "unfold"]], "lucid.random": [[110, 2, 1, "", "rand"], [111, 2, 1, "", "randint"], [112, 2, 1, "", "randn"], [113, 2, 1, "", "seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 16, 84, 87, 97, 100, 101, 104, 106, 120, 127, 143, 145, 153, 156, 158, 159, 168], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 171, 172], "0000": [84, 85, 87], "005": 61, "01": [21, 61], "01051757": 112, "0205": 84, "0217": 84, "0227": 84, "0299": 84, "044715": [19, 60], "0450": 84, "0451": 84, "04719755": 135, "0474259": 24, "0480": 84, "05": [48, 50, 51, 61, 89, 90, 91, 92, 93, 94, 95], "0507": [23, 63], "07": [42, 43, 83, 84], "0700": 84, "0706508": 66, "0721": 84, "0794": 87, "0802": 87, "08333333": 9, "085537": 142, "0900": [65, 84], "0986": [25, 65], "09861229": 143, "0992": 84, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "10": [16, 28, 29, 39, 41, 68, 69, 70, 75, 76, 79, 81, 90, 91, 93, 98, 99, 101, 111, 114, 117, 120, 123, 124, 137, 153], "1001": 84, "1003": 84, "1014": 23, "1025": 16, "1026": 16, "1027": 16, "10499": 24, "1050": 64, "1054": 87, "1056": 16, "11": [39, 68, 69, 70, 75, 79, 90, 91, 93, 98, 99, 101, 120], "1111": 83, "1134": 39, "119": 39, "1192": [24, 25, 65], "12": [39, 68, 69, 70, 75, 76, 79, 90, 91, 93, 98, 99, 101, 120, 124, 125], "123": 113, "125": 99, "1250": 85, "128": 16, "13": [39, 68, 69, 70, 79, 91, 98, 99, 101, 120], "14": [68, 69, 70, 75, 76, 79, 91, 98, 99, 101, 108, 120, 124], "145": 39, "15": [39, 68, 69, 70, 79, 91, 98, 99, 101, 120, 124, 156], "1513": 87, "155": 120, "1588": [19, 60], "16": [16, 68, 69, 70, 75, 76, 79, 90, 91, 98, 99, 101, 104, 120, 124, 151], "16227766": 10, "16425": 87, "1643": 83, "166": 120, "17": [68, 69, 70, 79, 91, 99, 119], "170": 39, "17520119": 150, "18": [68, 69, 70, 75, 79, 91, 99, 123, 124], "1800": 84, "19": [28, 29, 39, 69, 70, 91, 118, 120], "1966": [25, 64, 65], "1998": 84, "1d": [27, 52, 56, 89, 92, 120, 127, 156, 164, 165, 166, 170], "1e": [42, 43, 48, 50, 51, 83, 84, 89, 90, 91, 92, 93, 94, 95], "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "20": [16, 69, 70, 75, 91, 124, 142], "2039": 87, "204": 70, "21": [39, 69, 70, 91, 124], "211": 120, "22": [39, 69, 70, 75, 91, 118, 120], "2231": [84, 87], "2247": [89, 90, 91, 92, 93, 94, 95], "226": 120, "22752314": 112, "23": [69, 70, 91], "2324": 63, "24": [39, 69, 70, 75, 91, 124], "2424": [25, 65], "2447": 65, "25": [24, 64, 70, 86, 91, 98, 99, 117, 147, 158], "2500": [83, 85, 87], "2512": 59, "2547": 63, "26": [41, 70, 81, 91, 124], "26325684": 112, "2689": [25, 64, 65], "27": [39, 68, 70, 91, 141], "28": [39, 70, 124], "29": 70, "2_i": [92, 93, 94], "2d": [28, 35, 53, 57, 90, 93, 120, 127, 128, 156, 161, 164, 166, 170], "2x2": 31, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "30": 70, "3026": 87, "31": [39, 70, 120], "31622777": 10, "32": [16, 39, 41, 69, 70, 81, 104, 118, 119, 124], "33": [16, 41, 70, 81], "33333333": 9, "34": [16, 39, 70, 120, 124], "35": [16, 70], "3567": [83, 87], "36": 70, "3679": [18, 23, 59], "37": 68, "372": 39, "375": 86, "3750": 85, "38344152": 110, "38629436": 143, "389056": 142, "3935": 59, "3d": [29, 36, 54, 58, 70, 91, 94], "3x3": 114, "4": [1, 2, 3, 4, 6, 8, 9, 10, 16, 27, 28, 29, 31, 34, 35, 36, 39, 41, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 138, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172], "4044": 83, "4076": 84, "41421356": 2, "41666667": 9, "41808962": 112, "419974": 26, "4199743": 66, "42": [39, 108, 114], "42718872": 10, "4286": 83, "43": [118, 120], "4323": 59, "4375": 85, "43758721": 110, "4472136": 4, "4495": [91, 94], "45": 39, "4545": 72, "47112767": 137, "48": [41, 81], "4979": 59, "5": [0, 1, 6, 7, 8, 9, 14, 15, 16, 19, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 48, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 106, 108, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 136, 144, 145, 146, 147, 148, 153, 156, 157, 158, 159, 162, 167, 172], "50": [41, 81, 118, 120], "5000": [83, 85, 87], "5108": 87, "52359878": 136, "53": [39, 119], "54308063": 140, "545": 125, "5455": 72, "57": 39, "57079633": [135, 136], "57366333": 113, "6": [1, 9, 27, 28, 29, 31, 36, 39, 41, 68, 69, 70, 73, 74, 75, 76, 79, 81, 83, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 106, 108, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 130, 132, 144, 145, 146, 153, 156, 157, 158, 159, 162, 166, 167, 172], "6052": 87, "6065": 59, "6124": [89, 90, 91, 92, 93, 94, 95], "62": 39, "62686041": 150, "6321": [18, 59], "63245553": 10, "64": [16, 39], "64589411": 110, "6590": [25, 65], "6652": 65, "66666667": 9, "6667": 83, "6682": 83, "67": 120, "67326": 63, "6733": 23, "68811989": 112, "69314718": 143, "7": [8, 27, 28, 29, 31, 36, 39, 41, 42, 43, 60, 63, 64, 66, 68, 69, 70, 75, 76, 79, 81, 83, 84, 86, 90, 91, 93, 94, 98, 99, 101, 102, 108, 111, 116, 118, 119, 120, 124, 126, 127, 142, 145, 153, 156, 157, 158, 170], "7001": 84, "70710678": [4, 149], "7147": 87, "7182818": 142, "7311": [25, 64, 65], "74": 120, "75": [41, 81, 86], "7581": 23, "76159416": 155, "7616": [26, 66], "76219569": 140, "7635": 63, "772": 125, "78357324": 112, "78539816": 137, "79172504": 110, "8": [7, 11, 16, 27, 28, 29, 31, 36, 39, 41, 42, 60, 63, 64, 66, 68, 69, 70, 73, 74, 75, 76, 79, 81, 83, 86, 90, 91, 93, 94, 98, 99, 101, 102, 108, 111, 117, 118, 119, 120, 124, 125, 127, 141, 145, 153, 156, 157, 158], "8005": 84, "8182": 72, "82": 39, "8413": [19, 60], "8584": 63, "8808": [25, 64, 65], "887": 125, "891773": 110, "89442719": 4, "9": [11, 28, 31, 39, 41, 68, 69, 70, 75, 79, 81, 83, 90, 91, 93, 98, 99, 101, 108, 111, 116, 120, 124, 125, 126, 127, 151, 152], "90709145": 113, "9091": 72, "9120": 87, "9163": 87, "9486833": 10, "9526": 24, "9545": 60, "96366276": 110, "9640": 66, "96402758": 155, "9957": 87, "99734545": 113, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 41, 42, 43, 47, 48, 50, 51, 72, 73, 74, 75, 76, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 104, 107, 108, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "As": 113, "By": [0, 15, 104, 106, 110, 111, 112], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 16, 18, 19, 21, 22, 23, 24, 26, 39, 41, 63, 68, 69, 70, 79, 81, 89, 90, 91, 92, 93, 94, 104, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 149, 151, 153, 156, 157, 158, 164, 166, 168, 170, 171], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 36, 39, 41, 48, 50, 68, 69, 70, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "In": [0, 9, 27, 28, 29, 84, 87, 105, 106, 107], "It": [0, 9, 10, 11, 14, 16, 36, 39, 60, 62, 66, 79, 80, 83, 84, 85, 86, 87, 104, 106, 113, 116, 117, 118, 121, 122, 123, 125, 126, 144, 146, 160, 162, 164, 165, 166, 167, 168, 169, 170, 172], "Its": [11, 114], "Near": 9, "No": 31, "Not": 80, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "There": 167, "These": [0, 1, 4, 7, 10, 12, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 108, 114], "To": [112, 114], "With": 31, "_": [7, 16, 18, 19, 21, 22, 23, 24, 26, 41, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 118, 119, 120, 124, 156, 157], "_1": [4, 16, 39, 79, 124, 160, 162, 172], "_2": [4, 16, 39, 79, 124, 160, 162, 172], "__call__": 14, "__init__": [0, 13, 14, 15, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 115], "__setattr__": 14, "_activ": 25, "_arraylik": [108, 127, 130, 132], "_arraylikeint": 164, "_arrayorscalar": [13, 15, 108, 115, 159], "_grad_en": [105, 107], "_i": [4, 8, 25, 39, 65, 86, 89, 95, 97, 100, 118, 119, 121, 122, 124, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 168, 171, 172], "_j": [25, 65, 97, 100, 124, 145, 153, 157, 158], "_k": 169, "_modul": 14, "_n": [4, 16, 160, 162, 172], "_numpyarrai": 108, "_out": [166, 170], "_p": 8, "_pad": 164, "_paddingstr": [68, 69, 70], "_paramet": 14, "_reductiontyp": [42, 43, 44, 46, 47, 83, 84, 85, 86, 87], "_scalar": [108, 138], "_shapelik": [51, 95, 108, 111, 129, 131, 167, 168, 171], "_slope": 61, "_tensor": [13, 15, 127, 159], "_tensorop": 115, "_u": 9, "_v": 9, "_valu": [138, 164], "_width": 164, "a_i": [121, 122, 125], "ab": 133, "abil": 0, "about": 0, "abov": [0, 105, 107, 113, 127, 128], "absolut": [7, 8, 44, 134], "abstract": 104, "acceler": [63, 89, 90, 91], "accept": [80, 110, 115], "access": [13, 15, 16, 167], "accord": [68, 69, 70, 79, 81, 84, 87, 157], "accordingli": 3, "account": [7, 9, 10], "accumul": [116, 117, 121, 122, 123, 126], "achiev": [27, 28, 29], "across": [13, 16, 51, 89, 90, 91, 92, 93, 94, 95, 108, 110, 111, 112, 113, 114, 145, 158], "activ": [0, 16, 18, 19, 21, 22, 23, 24, 25, 26, 32, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 83, 84, 87, 89, 90, 91, 95, 144, 146], "actual": [15, 83, 84, 86, 87, 115], "ad": [14, 16, 27, 28, 29, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 83, 84, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 171], "add": [14, 16, 39, 41, 68, 69, 70, 79, 81, 95, 106, 133, 164, 171], "add_modul": [14, 16], "addit": [0, 7, 14, 16, 39, 41, 48, 50, 79, 81, 89, 90, 91, 92, 93, 94, 106, 114, 116, 169], "address": [84, 87], "adjust": [72, 89, 90, 91, 92, 93, 94, 95, 162, 172], "admonit": 16, "advanc": [9, 16, 27, 28, 29, 104], "advantag": 107, "affect": [105, 165, 168], "affin": [89, 90, 91, 92, 93, 94, 95], "after": [7, 15, 16, 36, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 107, 115, 116, 117, 121, 122, 123, 125, 126, 164], "afterward": 107, "aggreg": [124, 166, 170], "aim": 0, "algebra": [0, 1, 128], "algorithm": [0, 7, 9, 10, 114], "align": [11, 119, 120], "all": [0, 10, 14, 16, 28, 29, 53, 54, 57, 58, 61, 62, 70, 98, 99, 102, 104, 125, 144, 145, 146, 153, 156, 158, 160, 161, 162, 166, 168, 169, 170, 172], "allevi": 18, "allow": [0, 9, 10, 15, 16, 18, 21, 22, 25, 29, 31, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 104, 106, 129, 131, 132, 157, 159], "along": [25, 65, 119, 120, 124, 144, 145, 146, 153, 156, 158, 160, 162, 166, 169, 170, 171, 172], "alongsid": 13, "alpha": [18, 21, 23, 32, 59, 63, 72], "alpha_dropout": [37, 38, 72], "alphadropout": [77, 78], "alphadropoutmodel": 72, "also": [18, 19, 21, 22, 23, 24, 26, 39, 41, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "alter": [16, 167], "altern": [60, 120], "alwai": [15, 165], "amount": [27, 28, 29, 52, 53, 54, 56, 57, 58], "an": [0, 4, 6, 7, 9, 10, 12, 14, 16, 19, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 59, 64, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 95, 97, 98, 99, 100, 101, 102, 107, 108, 115, 120, 127, 128, 138, 145, 153, 158, 160, 166, 170, 171], "analog": [166, 170], "analysi": [68, 69, 70, 94, 97, 99, 100, 102], "ani": [7, 9, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 32, 33, 39, 41, 48, 50, 64, 95, 104, 105, 107, 113, 115, 127, 128, 129, 130, 131, 132, 144, 146, 157, 159, 160, 161, 162, 164, 166, 169, 170, 171, 172], "anoth": [126, 130, 132], "append": 16, "appli": [0, 7, 16, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 120, 164, 166], "applic": [9, 27, 50, 68, 69, 70, 79, 81, 114, 131, 164], "approach": 16, "appropri": [9, 14, 16, 68, 69, 70, 72, 73, 74, 84, 98, 99, 105, 107], "approx": 23, "approxim": [9, 19, 60, 98, 101], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 25, 27, 28, 29, 31, 39, 41, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 138, 142, 144, 145, 146, 147, 148, 153, 156, 157, 160, 166, 167, 170], "arbitrari": [80, 138, 143, 145, 149, 151, 153, 157, 158], "arcco": 133, "architectur": [16, 19, 62, 79, 80, 104], "arcsin": 133, "arctan": 133, "arg": [14, 80], "argument": [14, 16, 80, 110, 157], "around": [4, 66], "arr": [108, 160, 162, 169, 172], "arrai": [0, 13, 15, 106, 108, 115, 120, 127, 130, 132, 159, 165, 166], "asarrai": 108, "assign": [14, 16, 84, 87], "assum": 105, "attempt": 16, "attent": 39, "attribut": 14, "audio": 68, "augment": [114, 166, 170], "autodiff": 0, "autograd": 104, "automat": [0, 15, 104, 110, 111, 112, 115, 132], "auxiliari": 13, "avail": 0, "averag": [13, 52, 53, 54, 86, 97, 98, 99, 145], "avg_pool": [97, 98, 99], "avg_pool1d": [38, 55], "avg_pool2d": [38, 55], "avg_pool3d": [38, 55], "avgpool1d": [78, 103], "avgpool1dmodel": 97, "avgpool2d": [78, 103], "avgpool2dmodel": 98, "avgpool3d": [78, 103], "avgpool3dmodel": 99, "avoid": [9, 107], "ax": [1, 106, 144, 145, 146, 153, 157, 158, 166, 168, 170], "axi": [25, 65, 119, 120, 144, 145, 146, 153, 158, 160, 162, 164, 166, 168, 169, 170, 171, 172], "b": [1, 11, 39, 41, 68, 69, 70, 79, 81, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 160, 162, 169, 172], "b_i": [121, 122, 125], "back": [98, 99, 119, 124, 166, 170], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 107, 112, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 142, 144, 146, 159, 164, 166, 170], "backward": [0, 13, 15, 115], "balanc": 85, "base": [1, 6, 7, 10, 11, 14, 31, 39, 72, 84, 85, 104, 116, 117, 121, 122, 123, 125, 126, 132, 142, 143, 144, 146, 157, 164], "basic": [0, 27, 28, 29], "batch": [1, 7, 10, 12, 27, 28, 29, 31, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 79, 81, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 120], "batch_norm": [38, 49, 89, 90, 91], "batch_norm1": 16, "batch_norm2": 16, "batchnorm1d": [78, 96], "batchnorm1dmodel": 89, "batchnorm2d": [16, 78, 96], "batchnorm2dmodel": 90, "batchnorm3d": [78, 96], "batchnorm3dmodel": 91, "bceloss": [78, 88], "becaus": 111, "becom": [8, 14], "befor": [7, 15, 107, 113, 164], "begin": [8, 18, 21, 22, 23, 59, 61, 62, 63, 85, 86, 87, 97, 98, 99, 100, 101, 102, 106, 114, 121, 122, 124, 134, 138, 144, 146, 148, 164], "behav": [85, 156], "behavior": [16, 105, 114, 120], "being": [72, 73, 74, 75, 76, 105, 107, 160, 162, 172], "below": [10, 120, 127, 128], "benefici": 16, "benefit": [18, 104, 108], "bernoulli": [72, 73, 74, 75, 76], "beta": [89, 90, 91, 92, 93, 94, 95], "better": [6, 19, 92, 93, 94, 104], "between": [14, 27, 28, 29, 31, 39, 44, 68, 69, 70, 72, 73, 74, 75, 76, 79, 83, 84, 85, 86, 87, 114, 116, 117, 120, 123, 126, 158], "beyond": 0, "bia": [27, 28, 29, 39, 41, 48, 50, 51, 68, 69, 70, 79, 81, 89, 90, 91, 92, 93, 94, 95], "bias": [68, 69, 70, 81, 95, 104], "bilinear": [38, 40, 78, 82], "bilinearmodel": 79, "binari": [24, 42, 64, 72, 73, 74, 75, 76, 83], "binary_cross_entropi": [38, 45], "block": [14, 31, 68, 69, 70, 107], "block1": 104, "block2": 104, "bmatrix": 124, "bool": [12, 14, 15, 32, 33, 34, 35, 36, 48, 50, 68, 69, 70, 79, 81, 89, 90, 91, 92, 93, 94, 95, 105, 110, 111, 112, 115, 127, 128, 129, 130, 131, 132, 144, 145, 146, 153, 158, 159], "both": [27, 41, 52, 56, 60, 68, 69, 97, 98, 100, 101, 118, 119, 120, 124, 127], "break": 104, "broadcast": [75, 76, 145, 153, 158, 167, 171], "build": [0, 14, 16, 104], "built": [0, 16, 104], "c": [31, 34, 35, 36, 43, 47, 48, 50, 52, 53, 54, 56, 57, 58, 75, 76, 84, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 106, 162, 172], "c_": [68, 69, 70], "c_in": [27, 28, 29], "c_out": [27, 28, 29], "calcul": [0, 1, 15, 107, 111, 115], "calculu": [2, 9], "call": [14, 105, 116, 117, 120, 121, 122, 123, 125, 126], "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 16, 21, 27, 28, 29, 60, 61, 66, 68, 69, 70, 92, 93, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 114, 115, 120, 128, 129, 131, 132, 145, 153, 158, 162, 164, 166, 167, 170, 171, 172], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 127, 128, 129, 130, 131, 132], "captur": [31, 68, 69, 70, 79], "care": 107, "case": [8, 18, 21, 22, 23, 59, 61, 62, 63, 85, 86, 87, 97, 98, 99, 100, 101, 102, 104, 106, 121, 122, 134, 138, 144, 146, 148, 164], "caus": 9, "cdot": [2, 3, 6, 7, 8, 11, 18, 19, 21, 23, 24, 27, 28, 29, 39, 41, 52, 53, 54, 56, 57, 58, 60, 64, 72, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 118, 119, 120, 123, 125], "center": 66, "central": 108, "certain": [3, 19, 39, 79, 105, 144, 146], "chain": [6, 7, 16], "chang": [44, 85, 106, 107, 165, 167, 171], "channel": [27, 28, 29, 31, 34, 35, 36, 48, 50, 52, 53, 54, 56, 57, 58, 68, 69, 70, 75, 76, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102], "check": 105, "choleski": 5, "chosen": 72, "clariti": 108, "class": [0, 25, 43, 47, 104, 127, 128, 129, 131, 159], "classif": [24, 25, 42, 43, 47, 64, 65, 83, 84, 87], "cleaner": [107, 120], "clear": [15, 115], "clearli": 108, "clip": 133, "close": [6, 9, 63, 83], "closer": 59, "co": [133, 149], "code": [7, 16, 105, 107, 108, 114], "coeffici": 11, "col": 31, "collect": [1, 16], "column": [3, 4, 6, 10, 11, 12, 31, 128, 162], "combin": [16, 18, 19, 60, 84, 104, 145, 153, 158, 160], "common": 31, "commonli": [0, 19, 24, 25, 26, 27, 29, 39, 46, 48, 50, 65, 70, 83, 86, 87, 97, 98, 99, 100, 101, 102, 106, 108, 129, 168], "compar": [114, 169], "compat": [1, 80, 95, 104, 106, 114], "complex": [0, 4, 16, 22, 62, 100, 102, 104], "compon": [9, 14, 115], "compos": [68, 69, 70, 97, 98, 99, 100, 101, 102, 104], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 39, 41, 42, 43, 44, 46, 47, 48, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 166, 170], "computation": 9, "concaten": [27, 28, 29, 162, 163, 169, 172], "concept": [0, 9], "condit": [2, 3, 6], "conjunct": [31, 87], "connect": [41, 68, 69, 70, 81], "consid": [6, 9, 16, 104, 105], "consider": 9, "consist": [13, 108, 113, 114, 164], "consistent_tensor": 114, "constant": [42, 43, 48, 50, 51, 63, 83, 84, 89, 90, 91, 92, 93, 94, 95, 108, 164], "constant_pad": 164, "construct": [0, 104, 127, 166, 170], "contain": [3, 4, 9, 10, 11, 12, 14, 16, 25, 31, 39, 41, 42, 43, 47, 83, 84, 87, 116, 117, 118, 119, 121, 122, 123, 124, 126, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161], "context": [105, 107], "contextmanag": 107, "contigu": 165, "continu": [61, 112], "contrast": [92, 93, 94], "contribut": [72, 73, 74, 75, 76, 97, 100, 101, 102, 156], "control": [59, 85, 105, 114], "conv": [90, 91], "conv1": [16, 68, 69, 70, 97, 98, 99, 100, 101, 102], "conv1d": [30, 38, 71, 78, 97, 100], "conv1dmodel": 68, "conv2": [16, 68, 69, 70], "conv2d": [16, 30, 38, 71, 78, 90, 98, 101, 104], "conv2dmodel": 69, "conv3d": [30, 38, 71, 78, 91, 99, 102], "conv3dmodel": 70, "convblock": 104, "convent": 120, "converg": [9, 66], "convers": [84, 87], "convert": [13, 15, 25, 65, 115], "convolut": [27, 28, 29, 31, 68, 69, 70, 98, 99, 101, 102, 164], "convolv": [27, 28, 29, 68, 69, 70], "core": [14, 104, 115], "correct": [84, 87], "correctli": [9, 14, 16, 84, 87, 114], "correspond": [4, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 39, 41, 62, 65, 79, 81, 89, 90, 91, 92, 93, 94, 98, 99, 118, 119, 121, 122, 125, 142, 143, 149, 151, 162, 164, 166, 170, 172], "cosh": [133, 150, 155], "cosin": [135, 139, 140, 149], "could": 14, "count": 160, "cover": [1, 27, 28, 29], "creat": [0, 13, 14, 16, 104, 106, 114, 128, 129, 130, 131, 132, 169], "creation": 16, "criterion": [83, 84, 85, 86, 87], "critic": [9, 114], "cross": [42, 43, 83, 84], "cross_entropi": [38, 45], "crossentropyloss": [78, 88], "cube": 133, "cumul": [19, 60], "current": [14, 105], "custom": [0, 13, 16, 59, 61, 104, 114, 128], "custommodul": 13, "d": [29, 36, 54, 58, 91, 94, 95, 99, 102, 106, 127], "d_": [29, 54, 58, 70, 99, 102], "d_1": 95, "d_2": 95, "d_n": 95, "d_out": [29, 54, 58], "data": [0, 7, 13, 15, 26, 27, 29, 31, 35, 36, 41, 62, 66, 68, 69, 70, 81, 94, 97, 99, 102, 106, 108, 114, 115, 116, 117, 123, 126, 127, 128, 129, 130, 131, 132, 159, 164, 165, 166, 167, 168, 170], "dataset": 107, "ddot": 124, "debug": [16, 105, 113], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 48, 60, 63, 104, 114], "deeper": [0, 63], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "default": [8, 12, 13, 14, 15, 18, 21, 25, 27, 28, 29, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 110, 111, 112, 115, 127, 128, 129, 130, 131, 132, 144, 145, 146, 153, 157, 158, 159, 160, 162, 164, 166, 169, 172], "defin": [0, 16, 60, 83, 84, 85, 86, 87, 97, 104, 108, 111, 112, 125, 138, 157], "definit": [0, 2], "delta": [25, 44, 65, 85], "delta_": [25, 65], "demonstr": [0, 1, 104, 108], "denomin": [48, 50, 51, 89, 90, 91, 92, 93, 94, 95, 117], "denot": [7, 64, 68, 69, 70, 72, 73, 74, 75, 76, 157], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [19, 60], "depend": [0, 7, 8, 42, 43, 44, 46, 47, 68, 118, 127, 144, 146, 166, 170], "depth": [29, 36, 54, 58, 70, 91, 94, 99, 102], "depthwis": [27, 28, 29], "deriv": [9, 10, 25, 60, 65, 66, 68, 69, 70, 79, 81], "descend": 12, "descent": 0, "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 16, 18, 23, 63, 72, 104, 108], "desir": [13, 157, 159], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 114, 120], "determin": [0, 1, 2, 3, 68, 69, 70, 98, 99, 101, 102, 105, 110, 111, 112], "develop": [0, 104, 114], "diag": [9, 133], "diagon": [9, 10, 12, 127, 128, 156], "diagonaliz": 4, "dict": [14, 80], "dictionari": [14, 15, 16], "differ": [7, 16, 25, 39, 65, 79, 86, 106, 113, 114, 126, 132, 158, 168], "differenti": [0, 2, 11, 60, 104, 110, 111, 112, 115, 129, 131], "dilat": [27, 28, 29, 68, 69, 70], "dilation_height": 31, "dilation_width": 31, "dim": [84, 87], "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 25, 39, 41, 48, 50, 51, 65, 68, 69, 70, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 106, 108, 110, 115, 119, 144, 145, 146, 153, 156, 157, 158, 160, 162, 164, 166, 168, 169, 170, 171, 172], "dimension": [7, 9, 10, 12, 27, 28, 29, 52, 53, 54, 56, 57, 58, 68, 69, 70, 74, 75, 76, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 106, 119, 120, 124, 127, 142, 145, 153, 156, 158, 161, 165, 166, 168, 170], "direct": [4, 83, 84, 85, 86, 87], "directli": [113, 114, 159], "disabl": [105, 107], "discontinu": 148, "discrep": [83, 84, 87], "discret": [111, 114], "distribut": [19, 25, 60, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 84, 87, 97, 98, 99, 110, 111, 112, 114, 145, 153, 156, 158, 169], "div": 133, "divid": [9, 16, 25, 27, 28, 29, 65, 83, 84, 85, 86, 87, 117], "divis": [0, 9, 27, 28, 29, 72, 73, 74, 75, 76, 117], "do": [9, 11, 13, 32, 33, 34, 35, 104, 105, 132, 156, 164], "document": [0, 108, 114], "doe": [0, 7, 8, 9, 10, 12, 13, 16, 105, 107, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 167], "doesn": 107, "don": 107, "dot": [4, 7, 16, 95, 100, 101, 102, 119, 124, 133, 160, 162, 169, 172], "down": 104, "drawback": 18, "drawn": [110, 111, 112, 114], "drop": [72, 73, 74, 75, 76], "dropout": [19, 32, 34, 35, 36, 72, 74, 75, 76], "dropout1d": [37, 38, 77, 78], "dropout1dmodel": 74, "dropout2d": [37, 38, 77, 78], "dropout3d": [37, 38, 77, 78], "dropoutmodel": 73, "dtype": [13, 15, 115, 127, 128, 129, 130, 131, 132, 159], "due": [7, 9, 27, 28, 62], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 25, 32, 33, 34, 35, 36, 48, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 107, 115, 116, 144, 145, 146, 153, 158], "dy": [21, 61], "dynam": [14, 16, 95, 105], "e": [3, 4, 6, 7, 10, 12, 13, 25, 64, 65, 72, 84, 128, 140, 142, 143, 150, 155, 156, 160], "each": [4, 7, 9, 10, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 39, 41, 48, 50, 62, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 164, 166, 169, 170, 172], "eas": 0, "easi": [0, 15], "easier": 16, "easili": 15, "economi": 12, "edg": 164, "educ": 0, "effect": [16, 25, 27, 28, 29, 31, 59, 60, 62, 64, 65, 66, 89, 90, 91, 92, 93, 94, 95, 105, 106, 107, 162, 172], "effici": [0, 1, 6, 11, 31, 84, 104, 107], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [41, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 159], "element": [9, 10, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 62, 65, 68, 69, 70, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 95, 97, 98, 99, 100, 101, 102, 106, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 164, 166, 167, 168, 170], "elementwise_affin": 95, "elsewher": [100, 101, 102, 128], "elu": [20, 38, 67, 78], "elumodel": 59, "empti": [14, 16], "enabl": [0, 7, 12, 14, 15, 62, 68, 69, 70, 79, 81, 104, 105, 107, 110, 111, 112, 115], "encapsul": [104, 115], "encod": [84, 87], "encourag": [73, 74, 75, 76, 83, 84, 87], "end": [8, 18, 21, 22, 23, 59, 61, 62, 63, 85, 86, 87, 97, 98, 99, 100, 101, 102, 121, 122, 124, 134, 138, 144, 146, 148, 160, 164], "enforc": 14, "engin": 9, "ensur": [9, 10, 11, 13, 14, 15, 16, 25, 61, 65, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 125, 145, 153, 158, 164], "enter": 107, "entir": [34, 35, 36, 75, 76, 114], "entri": 168, "entropi": [42, 43, 83, 84], "environ": 0, "ep": [42, 43, 48, 50, 51, 83, 84, 89, 90, 91, 92, 93, 94, 95], "epsilon": [83, 84, 89, 90, 91, 92, 93, 94, 95], "equal": [7, 97, 98, 99], "equat": [4, 9, 11], "equival": [120, 156, 165], "error": [4, 6, 14, 16, 19, 44, 46, 60, 83, 84, 85, 86, 104, 107, 108], "especi": [64, 106, 107, 108, 113], "essenti": [0, 1, 7, 9, 28, 31, 104, 113, 114, 144], "estim": 86, "etc": 83, "euclidean": 8, "evalu": [14, 48, 50, 72, 73, 74, 75, 76, 89, 90, 91, 92, 93, 94], "even": [107, 127, 128, 129, 130, 131, 132], "everywher": 148, "exact": [14, 157], "exactli": 16, "exampl": 120, "except": [148, 160, 162, 172], "exclus": 111, "execut": 107, "exist": [11, 16, 160], "exit": 107, "exp": [18, 23, 24, 26, 59, 63, 133], "expand": [31, 166, 170], "expect": [2, 16, 72, 73, 74, 75, 76, 95, 104, 108], "experi": [0, 113, 114], "experiment": 114, "explan": [7, 9], "explicit": 16, "explod": [63, 89, 90, 91], "explor": [104, 114], "expon": [7, 125], "exponenti": [18, 23, 25, 59, 63, 65, 72, 142], "extern": 0, "extract": [31, 70, 97, 99, 127, 144, 146], "extrem": 9, "ey": 133, "f": [0, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 65], "facilit": [16, 25, 65, 68, 69, 70, 104], "factor": [18, 27, 28, 29, 31, 108], "failur": 104, "fals": [12, 13, 14, 15, 32, 33, 34, 35, 36, 48, 50, 68, 69, 70, 79, 81, 105, 110, 111, 112, 115, 127, 128, 129, 130, 131, 132, 144, 145, 146, 153, 158, 159], "faster": 107, "fc": [69, 70, 97, 98, 99, 100, 101, 102], "fc1": [16, 60, 62, 63, 64, 66, 81], "fc2": [16, 60, 62, 63, 64, 66, 81], "featur": [39, 41, 48, 70, 73, 74, 75, 76, 79, 81, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104], "feed": 115, "fill": [110, 111, 112, 129, 130, 131, 132], "filter": [27, 28, 29, 31, 69, 70], "filter_height": 31, "filter_s": 31, "filter_width": 31, "final": 16, "find": [11, 144, 146], "finish": 107, "first": [4, 39, 79, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 172], "fit": 104, "fix": 164, "flatten": [16, 31, 124, 163, 165, 166], "flexibl": [0, 16, 104, 108, 129, 130], "float": [13, 15, 18, 21, 32, 33, 34, 35, 36, 42, 43, 44, 48, 50, 51, 59, 61, 72, 73, 74, 75, 76, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 108, 115, 138, 159], "float32": [13, 15, 115, 127, 128, 129, 131, 159], "float64": [132, 159], "flow": [16, 60, 64, 66, 68, 69, 70, 79, 81, 105], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 108, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 144, 146, 167], "form": [10, 124, 166, 170], "format": [84, 87], "formul": 19, "formula": [4, 12, 25, 65, 85, 120, 158], "forward": [0, 13, 14, 104], "found": 0, "foundat": [14, 104, 115], "four": 164, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 41, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "frame": 36, "framework": [0, 84, 87, 89, 90, 91, 92, 93, 94], "frequent": [84, 87], "from": [0, 7, 9, 13, 14, 15, 16, 31, 39, 48, 50, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 104, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 126, 127, 144, 145, 146, 153, 158, 160, 162, 166, 168, 169, 170, 172], "full": 12, "full_matric": 12, "fulli": [1, 41, 81, 114], "function": [0, 1, 14, 16, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 104, 108, 114], "fundament": [0, 41, 81], "further": [0, 114, 145, 153, 158], "futur": 80, "g": [3, 4, 7, 10, 12, 72, 160], "gamma": [89, 90, 91, 92, 93, 94, 95], "gaussian": [19, 60], "gelu": [20, 38, 67, 78], "gelunetwork": 60, "gener": [9, 72, 73, 74, 75, 76, 93, 107, 110, 111, 112, 113, 114, 119], "give": 0, "given": [3, 4, 7, 9, 10, 12, 31, 83, 84, 87, 105, 130, 132], "global": [105, 107, 113, 114], "goal": [83, 84, 87], "grad": [13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "grad_output": 7, "gradient": [0, 1, 13, 15, 104, 105, 107, 110, 111, 112, 127, 128, 129, 130, 131, 132, 159], "graph": [0, 115, 127, 128, 129, 130, 131, 132], "greater": 138, "group": [27, 28, 29, 68, 69, 70], "guarante": 113, "h": [28, 29, 31, 35, 36, 53, 54, 57, 58, 90, 91, 93, 94, 99, 102], "h_": [28, 29, 53, 54, 57, 58, 69, 70, 98, 99, 101, 102], "h_out": [28, 29, 53, 54, 57, 58], "h_stack": 162, "ha": [4, 16, 27, 28, 29, 83, 84, 89, 90, 91, 92, 93, 94, 95, 120, 156, 160, 162, 169, 172], "half": 151, "hand": 11, "handl": [0, 9, 14, 16, 84, 87, 104, 107], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 16, 28, 29, 104, 128, 129, 130, 131, 132, 144, 146, 160, 162, 168, 169, 172], "height": [28, 29, 31, 35, 36, 53, 54, 57, 58, 69, 70, 90, 91, 93, 94, 98, 99, 101, 102], "help": [0, 21, 23, 36, 59, 61, 63, 66, 89, 90, 91, 97, 98, 100, 101, 105, 106, 107, 108], "henc": 167, "here": [2, 14, 39, 104, 106, 107, 108, 114], "hierarch": [16, 104], "hierarchi": 69, "high": [0, 111], "higher": [84, 87, 119, 120, 124, 142], "highest": 111, "highlight": [100, 101, 102], "hint": 108, "histori": [110, 111, 112, 127, 128, 129, 130, 131, 132], "horizont": [162, 169], "hot": [84, 87], "how": [0, 16, 104, 108], "howev": 13, "hstack": 163, "huber": [44, 85], "huber_loss": [38, 45], "huberloss": [78, 88], "huberregressionmodel": 85, "hyperbol": [26, 66, 140, 150, 155], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ideal": [0, 16], "ident": [6, 7, 78, 82, 113, 114, 128, 167], "ii": 156, "ij": [25, 65, 118, 119, 120, 124], "ik": [118, 119, 120], "ill": [3, 9], "imag": [28, 50, 69, 93], "imbal": [84, 87], "implement": [0, 9, 14, 31, 162, 172], "impli": [68, 69], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "improp": [16, 114], "improv": [48, 60, 63, 66, 108], "in1_featur": [39, 79], "in2_featur": [39, 79], "in_channel": [16, 68, 69, 70, 90, 91, 97, 98, 99, 100, 101, 102, 104], "in_featur": [16, 41, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 92, 95, 97, 98, 99, 100, 101, 102], "includ": [0, 1, 7, 8, 14, 15, 16, 104, 108, 114, 120, 164], "inclus": [15, 111], "incom": [41, 81], "incorpor": [12, 60], "increas": [27, 28, 29, 31, 106, 162, 172], "independ": [27, 28, 29, 72, 73, 74, 75, 76, 95, 120], "index": [106, 127, 128, 167], "indic": [15, 16, 43, 47, 84, 87, 97, 105, 115], "individu": [16, 85, 95], "induc": [23, 63], "inf": 154, "infer": [16, 107], "infin": [10, 12], "inform": [0, 13, 107], "infti": 8, "initi": [13, 15, 16, 68, 69, 70, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 95, 104, 110, 113, 114, 128, 129, 130, 131, 132, 159], "inner": [0, 118, 133], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 107, 108, 114, 115, 116, 118, 119, 120, 124, 127, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "input1": 79, "input2": 79, "input_": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58], "input_1": 39, "input_2": 39, "input_data": [59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102], "input_s": [65, 84, 87], "input_tensor": [0, 13, 16, 25, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104], "insid": [105, 107], "insight": 0, "inspect": [14, 15, 16], "instabl": 9, "instal": 0, "instanc": [0, 14, 15, 16, 50, 92, 93, 94, 95, 159, 166, 170], "instance_norm": [38, 49, 92, 93, 94], "instancenorm1d": [78, 96], "instancenorm1dmodel": 92, "instancenorm2d": [78, 96], "instancenorm3d": [78, 96], "instead": [0, 16, 107, 108], "int": [7, 8, 13, 15, 25, 27, 28, 29, 31, 51, 52, 53, 54, 56, 57, 58, 65, 68, 69, 70, 79, 81, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 115, 127, 128, 129, 131, 138, 144, 145, 146, 153, 157, 158, 159, 160, 164, 166, 167, 168, 169, 170, 171], "integ": [7, 27, 28, 29, 68, 69, 70, 95, 98, 99, 100, 101, 102, 108, 111, 112, 114, 129, 131, 145, 153, 157, 158, 164, 166, 167, 170], "integr": [1, 15, 16, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 79, 81, 97, 98, 99, 100, 101, 102], "intend": 13, "intens": 9, "intent": 108, "interact": [39, 79, 104, 114], "interfac": 14, "interfer": [105, 107], "intermedi": 9, "intern": [16, 84, 87, 104], "interpret": [25, 65, 108, 160], "interv": 110, "introduc": [22, 60, 62, 64, 66, 72, 73, 74, 75, 76], "introspect": 16, "intuit": [0, 104], "inv": 5, "inv_a": 6, "invari": [98, 101], "invers": [0, 3, 6, 7, 9, 135, 136, 137], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 18, 19, 21, 22, 23, 24, 26, 39, 41, 68, 69, 70, 79, 81, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 142, 143, 144, 146, 149, 151, 164, 166, 170], "is_leaf": 115, "issu": [63, 89, 90, 91], "item": 86, "iter": [13, 14], "ith": [25, 65], "its": [7, 9, 13, 27, 28, 29, 31, 60, 62, 100, 101, 102, 104, 105, 106, 107, 131, 144, 146, 159, 167], "itself": [2, 7], "j": [25, 65, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 169], "jk": 119, "join": 160, "k": [7, 27, 68, 84, 90, 91, 93, 94, 97, 100, 101, 118, 119, 127, 128, 160], "k_d": [29, 70, 99, 102], "k_h": [28, 29, 69, 70, 98, 99, 102], "k_w": [28, 29, 69, 70, 98, 99, 102], "keep": [14, 62, 107, 167], "keep_grad": [15, 110, 111, 112, 115, 127, 128, 129, 130, 131, 132, 159], "keep_var": 14, "keepdim": [144, 145, 146, 153, 158], "kei": [14, 16], "kept": [145, 153, 158], "kernel": [27, 28, 29, 31, 52, 53, 54, 56, 57, 58, 68, 69, 70, 98, 99, 102], "kernel_s": [16, 52, 53, 54, 56, 57, 58, 68, 69, 70, 90, 91, 97, 98, 99, 100, 101, 102], "keyerror": 14, "keyword": [14, 80], "kj": [118, 120], "kroneck": [25, 65], "kwarg": [14, 80], "l": [2, 9, 27, 34, 52, 56, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95], "l_": [27, 52, 56, 68, 97, 100], "l_out": [27, 52, 56], "label": [83, 84, 87], "lambda": [4, 23, 63], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [68, 79, 97, 100], "larg": [9, 85, 104, 107], "larger": [27, 28, 29, 31, 121, 164], "largest": 144, "last": [25, 51, 65, 119, 120, 160], "layer": [0, 14, 16, 25, 41, 48, 50, 51, 65, 68, 69, 70, 79, 80, 81, 87, 95, 97, 98, 99, 100, 101, 102, 104, 114, 164], "layer_norm": [38, 49, 95], "layer_sequ": 16, "layernorm": [78, 96], "layernormmodel": 95, "lead": [16, 60, 92, 93, 94, 95, 114], "leaf": 115, "leaki": [21, 61], "leaky_relu": [20, 38, 61], "leakyrelu": [67, 78], "learn": [0, 7, 9, 22, 25, 59, 61, 62, 65, 68, 69, 70, 73, 74, 75, 76, 79, 81, 104, 106, 113], "learnabl": [13, 14, 15, 48, 50, 51, 68, 69, 70, 79, 81, 89, 90, 91, 92, 93, 94, 95, 104], "least": [9, 10, 12, 156], "left": [7, 8, 9, 12, 19, 25, 60, 65, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102], "length": [27, 34, 52, 56, 68, 80, 89, 92, 97, 100, 164], "leq": [85, 125, 138], "less": [18, 21, 44, 59, 61, 84, 85, 87, 138], "let": 4, "level": 0, "leverag": [11, 104], "librari": [0, 1, 14, 104, 108, 114, 115], "lightweight": 0, "like": [0, 13, 14, 16, 27, 63, 72, 89, 90, 91, 92, 93, 94, 105, 106, 108, 159], "likelihood": [47, 84, 87], "limit": 138, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 18, 19, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 79, 80, 83, 84, 85, 86, 87, 89, 92, 95, 97, 98, 99, 100, 101, 102, 128], "linearli": 85, "list": [13, 15, 51, 80, 95, 108, 111, 115, 127, 129, 130, 131, 132, 157, 167, 168, 171], "liter": [42, 43, 44, 46, 47, 68, 69, 70, 83, 84, 85, 86, 87], "ln": 125, "load": [13, 14, 15], "load_state_dict": 14, "local": [31, 68], "log": [47, 83, 84, 87, 133], "log_softmax": 87, "logarithm": [125, 142, 143], "logic": 104, "logit": [25, 65, 84], "logsoftmax": [84, 87], "long": 157, "loss": [0, 9, 16, 25, 42, 43, 44, 46, 47, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95], "low": [0, 111], "lower": 2, "lowest": 111, "lu": 6, "lucid": [5, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 109, 133, 163], "m": [16, 98, 99, 101, 102, 128], "machin": [0, 9, 106, 113], "mai": [0, 4, 6, 9, 85, 107, 114], "main": [0, 10, 127, 128], "maintain": [9, 13, 14, 16, 23, 59, 60, 63, 72, 73, 74, 75, 76, 89, 90, 91, 92, 93, 94], "make": [0, 16, 64, 84, 85, 95, 98, 101, 104, 106, 114, 115, 120], "manag": [0, 14, 16, 104, 105, 107, 114], "manhattan": 8, "manipul": 0, "manner": 16, "manual": [42, 43, 47, 83, 84, 87, 107], "map": [14, 24, 26, 64, 66], "mask": [13, 72, 73, 74, 75, 76], "match": [11, 14, 16, 42, 44, 46, 51, 142, 166, 167, 170, 171], "math": [139, 149, 154], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 118, 119, 120, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "mathcal": [72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95], "mathemat": 6, "mathrm": 9, "matmul": 133, "matric": [1, 3, 4, 6, 9, 11, 12, 118, 119, 120, 128], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 31, 39, 80, 81, 104, 118], "matrix_pow": 5, "max": [8, 22, 56, 57, 58, 62, 100, 101, 102, 121, 133, 138], "max_pool": [100, 101, 102], "max_pool1d": [38, 55], "max_pool2d": [38, 55], "max_pool3d": [38, 55], "max_valu": 138, "maximum": [8, 62, 100, 101, 102, 133, 138, 144], "maxpool1d": [78, 103], "maxpool1dmodel": 100, "maxpool2d": [16, 69, 78, 103], "maxpool2dmodel": 101, "maxpool3d": [70, 78, 103], "maxpool3dmodel": 102, "mean": [10, 13, 23, 27, 28, 29, 32, 42, 43, 44, 46, 47, 48, 50, 59, 60, 61, 62, 63, 64, 66, 70, 72, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 105, 112, 133, 138, 142, 143, 144, 146, 149, 151, 153, 156, 157, 158], "meaning": [16, 108], "measur": [83, 84, 86, 87], "mechan": [0, 39], "membership": 83, "memori": 107, "method": [0, 1, 6, 16, 42, 43, 44, 46, 47, 83, 84, 85, 86, 87, 114], "middl": 106, "might": 104, "min": [122, 133, 138], "min_valu": 138, "mind": [0, 16, 107], "minim": [0, 16, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95], "minimalist": 0, "minimum": [133, 138, 146], "minu": 64, "mirror": [130, 132], "mismatch": [14, 104], "miss": [14, 104], "mitig": [21, 59, 61, 63, 89, 90, 91], "mode": [0, 36, 48, 50, 72, 73, 74, 75, 76, 164], "model": [0, 7, 10, 12, 13, 14, 15, 16, 25, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 107, 114], "modif": [16, 107], "modifi": [72, 105, 107, 113, 162, 172], "modul": [0, 13, 15, 16, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 108, 114], "modular": [0, 14, 16, 104], "moduledict": 16, "modulelist": 16, "momentum": [48, 50, 89, 90, 91, 92, 93, 94], "moor": 9, "more": [0, 4, 16, 59, 73, 74, 75, 76, 104, 112, 120, 156, 169], "most": [1, 101], "mse": [44, 46, 85, 86], "mse_loss": [38, 45], "mseloss": [78, 88], "mu": [89, 90, 91, 92, 93, 94, 95, 158], "mu_i": [92, 93, 94], "mul": 133, "multi": [25, 43, 47, 65, 84, 87, 145, 153, 158], "multidimension": 110, "multipl": [0, 1, 7, 11, 16, 31, 72, 73, 74, 75, 76, 84, 87, 104, 106, 110, 111, 112, 118, 123], "multipli": [7, 41, 81, 123, 124], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 51, 72, 73, 74, 75, 76, 87, 107, 156, 160, 162, 164, 166, 167, 169, 170, 172], "mymodel": [14, 15, 104], "n": [7, 8, 16, 27, 28, 29, 31, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 75, 76, 79, 81, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 128, 145, 156, 158], "n1": 8, "name": [14, 16, 108], "nan": [10, 12], "natur": [9, 68, 79, 97, 100, 125, 142, 143], "ndarrai": [13, 15, 108, 115, 127, 130, 132, 159], "ndim": [10, 12, 15, 115], "ne": 7, "necessari": [9, 107, 162, 172], "need": [25, 79, 104, 107], "neg": [7, 9, 12, 18, 47, 59, 61, 62, 63, 84, 87, 160], "negative_slop": [21, 61], "neq": 8, "nest": [16, 104], "network": [0, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 39, 41, 48, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 114, 115, 129, 131, 144, 146, 164], "neural": [0, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 39, 41, 48, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 114, 115, 129, 131, 144, 146, 164], "neuralnetwork": 62, "neuron": 61, "new": [14, 15, 18, 19, 21, 22, 23, 24, 26, 39, 41, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 164, 166, 167, 169, 170, 171, 172], "next": 16, "nll": 47, "nll_loss": [38, 45], "nllloss": [78, 88], "nn": [0, 17, 20, 30, 37, 40, 45, 49, 55, 67, 71, 77, 78, 82, 88, 96, 103], "no_grad": 105, "node": 115, "nois": [12, 114], "non": [4, 7, 9, 12, 19, 21, 22, 59, 60, 61, 62, 63, 64, 66, 72, 73, 74, 75, 76, 107, 125, 138], "none": [14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "norm": [1, 5], "normal": [19, 23, 25, 26, 48, 50, 51, 60, 63, 65, 72, 89, 90, 91, 92, 93, 94, 95, 112, 114], "normalized_shap": [51, 95], "note": [16, 27, 72], "noth": [32, 33, 34, 35], "notimplementederror": 14, "notin": 138, "np": [13, 15, 84, 87, 108, 115, 120, 127, 128, 129, 131, 132, 143, 159], "num_class": [65, 84, 87], "num_featur": [16, 89, 90, 91, 92, 93, 94], "number": [3, 4, 6, 9, 11, 12, 15, 16, 27, 28, 29, 31, 34, 35, 36, 39, 41, 43, 47, 48, 50, 64, 68, 69, 70, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 110, 113, 115, 125, 128, 144, 145, 146, 157, 158, 160, 162, 164, 166, 167, 168, 170, 172], "numer": [6, 9, 42, 43, 48, 50, 51, 83, 84, 89, 90, 91, 92, 93, 94, 95, 108, 117, 129, 131], "numpi": [0, 13, 15, 84, 87, 108, 115, 120, 127, 128, 129, 131, 143, 156, 159, 164, 166, 170], "o": [99, 102, 129, 130], "object": [1, 14, 86, 104, 107, 116, 117, 121, 122, 123, 126, 159], "occur": [107, 160], "occurr": 7, "odot": [72, 73, 74, 75, 76], "off": 105, "offer": [0, 104, 114], "offset": 128, "often": [7, 27, 28, 29, 31, 84, 87, 131], "onc": 107, "one": [16, 25, 27, 41, 52, 56, 63, 64, 65, 68, 74, 84, 87, 89, 92, 97, 100, 106, 108, 112, 126, 130, 144, 146, 161, 165, 169], "ones": [39, 41, 68, 69, 70, 81, 89, 90, 91, 92, 93, 94, 95, 104, 128, 130, 133], "ones_lik": 133, "onli": [0, 62, 72, 73, 74, 75, 76, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 105, 138, 144, 146, 156, 164, 165, 167, 168], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 36, 39, 41, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 131, 142, 143, 144, 145, 146, 149, 151, 153, 156, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "operatornam": [7, 9], "optim": [0, 1, 7, 9, 10, 12, 13, 15, 31, 68, 69, 70, 104, 107], "option": [8, 12, 13, 14, 15, 18, 21, 25, 28, 29, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112, 115, 127, 128, 129, 130, 131, 132, 144, 145, 146, 153, 157, 158, 159, 160, 166, 168, 169], "ord": 8, "order": [8, 12, 16, 157], "ordered_dict": 16, "ordereddict": [14, 16], "organ": 16, "origin": [32, 66, 164, 165, 166, 167, 170, 171], "orthogon": [9, 10, 12], "orthonorm": 10, "other": [0, 6, 13, 14, 16, 72, 104, 105, 107, 114, 115, 129, 131, 156], "otherwis": [18, 21, 22, 23, 25, 59, 61, 62, 63, 65, 73, 74, 75, 76, 85, 97, 98, 99, 100, 101, 102, 121, 122, 144, 146], "otim": [9, 39, 79], "out": [18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 48, 50, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 72, 73, 74, 75, 76, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "out_channel": [16, 68, 69, 70, 90, 91, 97, 98, 99, 100, 101, 102, 104], "out_featur": [16, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 92, 95, 97, 98, 99, 100, 101, 102], "outer": 133, "outlier": [44, 85], "output": [0, 7, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 142, 143, 144, 145, 146, 149, 151, 153, 156, 157, 158, 164, 166, 170], "output_height": 31, "output_lay": 16, "output_width": 31, "over": [1, 14, 25, 65, 68, 69, 70, 84, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 144, 145, 146, 153, 156, 158], "overdetermin": 9, "overfit": [33, 36, 73, 74, 75, 76], "overridden": 14, "own": [27, 28, 29, 104], "p": [8, 9, 15, 32, 33, 34, 35, 36, 72, 73, 74, 75, 76, 97, 100, 101], "p_d": [99, 102], "p_h": [98, 99, 102], "p_w": [98, 99, 102], "packag": [1, 104, 113, 114], "pad": [16, 27, 28, 29, 31, 52, 53, 54, 56, 57, 58, 68, 69, 70, 90, 91, 97, 98, 99, 100, 101, 102, 163], "pad_after_dim1": 164, "pad_after_dim2": 164, "pad_before_dim1": 164, "pad_before_dim2": 164, "pad_width": 164, "padding_height": 31, "padding_width": 31, "pair": 39, "param": [14, 15], "param1": 14, "paramet": [0, 14, 104, 108, 114], "parent": 104, "part": [13, 14, 104, 105, 107, 114, 127, 128, 129, 130, 131, 132], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "particip": 15, "particularli": [0, 9, 16, 25, 41, 65, 81, 84, 87, 92, 93, 94, 95, 105], "pass": [0, 9, 14, 15, 16, 59, 60, 61, 62, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 108, 115, 145, 153, 156, 157, 158, 160, 162, 165, 167, 168, 172], "patch": [31, 98], "pattern": [22, 62, 68, 69, 70], "penros": 9, "per": [92, 93, 94, 95], "perform": [0, 1, 2, 9, 14, 15, 19, 27, 28, 29, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 107, 113, 114, 116, 117, 120, 123, 126, 142, 144, 146, 153, 157], "permut": 157, "persist": [13, 110, 111, 112], "perturb": [4, 11, 12], "phi": [19, 60], "pi": [19, 60, 139, 149, 154], "pinv": 5, "pipelin": 114, "placehold": [14, 80], "plai": [108, 114], "point": 105, "pool": [52, 53, 54, 56, 57, 58, 69, 70, 97, 98, 99, 100, 101, 102, 144, 146], "pool1": 16, "pool2": 16, "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 16, 59, 61, 62, 63, 97, 98, 99, 100, 101, 102, 106, 125, 166, 170], "possibl": 0, "potenti": [9, 80, 168], "power": [0, 7, 106, 107, 133], "practic": [9, 84, 87], "preced": [15, 115], "predefin": 63, "predict": [83, 84, 86, 87], "prefix": 14, "prepar": [106, 164, 166, 170], "prepend": 14, "preprocess": [31, 114], "present": [83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 98], "preserv": [32, 72, 127, 128, 129, 130, 131, 132, 145, 153, 158], "prevent": [16, 33, 36, 73, 74, 75, 76, 83, 84, 107], "previou": 107, "primari": [0, 108], "primarili": 16, "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "probabilist": 114, "probabl": [19, 25, 32, 33, 34, 35, 36, 42, 60, 65, 72, 73, 74, 75, 76, 83, 84, 87], "problem": [9, 10, 12, 21, 59, 61], "process": [7, 10, 12, 27, 28, 29, 50, 63, 66, 68, 70, 79, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 108], "produc": [68, 69, 70, 113, 114], "product": [0, 10, 12, 64, 79, 95, 104, 118, 119, 123, 124], "program": [105, 114], "project": [10, 12], "projector": 9, "promin": [97, 99, 100, 101, 102], "promot": [16, 84, 87, 104], "propag": [3, 4, 6, 9, 10, 11, 12, 14, 16, 39, 41, 98, 99, 118, 119, 120, 124, 144, 146, 164, 167, 171], "properli": [25, 65, 104], "properti": [1, 3, 6, 7, 19, 23, 32, 60, 63, 72], "proport": 158, "provid": [0, 1, 14, 19, 41, 83, 84, 85, 87, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 113, 114, 115, 120, 130, 144, 146, 157, 159, 166, 168, 170], "pseudo": [6, 9], "purpos": [110, 129, 131], "python": 108, "pytorch": 159, "q": 10, "qr": 5, "quad": [9, 83, 84, 85, 86, 87, 100, 101, 102, 116, 117, 121, 122, 123, 126], "quadrat": 85, "quotient": 117, "r": 10, "rais": [14, 104, 125], "rand": [109, 114], "randint": [109, 114], "randn": [104, 109, 113, 114], "random_integ": 114, "random_tensor": 114, "randomli": [32, 33, 34, 35, 36, 72, 73, 74, 75, 76], "rang": [1, 24, 26, 27, 28, 43, 47, 64, 66, 111, 135, 136, 138], "rank": 9, "rather": 167, "ravel": 163, "raw": [25, 65, 84, 108], "re": [15, 107], "readabl": [16, 104, 108], "readi": 0, "real": [9, 12, 64], "rearrang": 31, "receiv": [100, 101, 102, 164], "reciproc": [9, 133, 143, 151], "recognit": 69, "rectangular": 128, "rectifi": [21, 22, 61, 62], "recurr": 95, "recurs": 14, "reduc": [89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 107, 108, 144, 145, 146, 153, 158], "reduct": [12, 42, 43, 44, 46, 47, 83, 84, 85, 86, 87, 144, 146], "refer": [0, 14, 114, 127, 128, 160], "reflect": 105, "regardless": [9, 165], "region": [29, 164], "regist": [13, 14, 15, 104], "register_buff": 13, "register_paramet": 14, "registr": [14, 104], "regress": [46, 85, 86], "regular": [9, 36, 73, 74, 75, 76], "relat": [107, 128, 129], "reli": 107, "reliant": [73, 74, 75, 76], "relu": [0, 16, 18, 20, 21, 38, 59, 61, 67, 68, 69, 70, 78, 79, 80, 81], "relu1": 16, "relu2": 16, "relu3": 16, "remain": [13, 51, 72, 73, 74, 75, 76], "rememb": 114, "remov": 168, "rep": 170, "repeat": [163, 170], "repetit": [166, 170], "replac": 114, "repres": [6, 8, 12, 14, 15, 16, 39, 41, 48, 50, 51, 68, 69, 70, 79, 81, 84, 87, 95, 108, 116, 117, 123, 126, 127, 145, 156, 157, 158], "represent": [98, 101], "reproduc": [110, 111, 112, 113, 114], "requir": [0, 13, 16, 18, 19, 21, 22, 23, 24, 26, 39, 41, 80, 84, 87, 104, 105, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "requires_grad": [13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "rescal": [42, 43, 47, 83, 84, 87], "research": 104, "reset": [15, 113, 115], "reshap": [0, 41, 69, 70, 106, 108, 163, 165], "resourc": 107, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 138, 142, 143, 144, 145, 146, 149, 151, 153, 156, 157, 158, 164, 166, 170], "restor": 107, "restructur": 167, "result": [2, 6, 7, 9, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 39, 41, 52, 53, 54, 56, 57, 58, 65, 104, 105, 107, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "retain": [15, 115, 131, 144, 145, 146, 153, 158], "return": [0, 13, 14, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104, 108], "reusabl": [16, 104], "revers": [0, 16, 157], "revert": 107, "right": [7, 8, 9, 11, 12, 19, 25, 60, 65, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102], "risk": 108, "robust": [72, 73, 74, 75, 76, 85, 104], "role": [108, 114], "root": 151, "rout": [100, 101, 102], "routin": 0, "row": [3, 4, 6, 11, 41, 128, 172], "rule": [6, 7, 106, 116, 117, 121, 122, 123, 125, 126], "run": [0, 13, 48, 50, 89, 90, 91, 92, 93, 94, 107, 113, 114], "running_mean": [13, 48, 50, 89, 90, 91, 92, 93, 94], "running_var": [48, 50, 89, 90, 91, 92, 93, 94], "runtim": [16, 104], "s_d": [99, 102], "s_h": [98, 99, 102], "s_w": [98, 99, 102], "same": [3, 4, 6, 7, 11, 25, 32, 33, 34, 35, 36, 48, 50, 51, 68, 69, 70, 72, 73, 74, 75, 76, 80, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 113, 114, 120, 130, 132, 142, 144, 145, 146, 160, 162, 165, 167, 168, 169, 172], "sampl": [0, 72, 73, 74, 75, 76, 79, 81, 84, 87, 95, 112, 114], "satisfi": [2, 4, 11], "satur": 59, "save": [13, 15, 107], "scalabl": 104, "scalar": [3, 8, 42, 43, 44, 46, 47, 108], "scale": [4, 9, 18, 23, 25, 48, 50, 51, 59, 61, 63, 64, 65, 66, 72, 73, 74, 75, 76, 84, 89, 90, 91, 92, 93, 94, 95, 108, 114, 158], "scenario": 95, "scientif": 106, "score": [25, 84], "scratch": 0, "script": 114, "seamless": [104, 114], "seamlessli": [1, 15, 16, 104, 108], "second": [4, 39, 79, 106, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 162], "section": 120, "see": [0, 120], "seed": [109, 110, 111, 112, 114], "select": [100, 102, 153], "self": [0, 13, 14, 15, 23, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104], "selu": [20, 32, 38, 67, 72, 78], "selunetwork": 63, "sensit": [44, 85, 89, 90, 91], "separ": [27, 28, 29, 92, 93, 94], "sequenc": [7, 27, 160, 162, 164, 166, 169, 170, 172], "sequenti": [17, 27, 80], "seri": [27, 68, 97, 100], "serial": [13, 14], "serv": [14, 16, 104], "set": [15, 27, 28, 29, 61, 62, 63, 68, 69, 70, 72, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 110, 111, 112, 113, 114, 115, 131, 132, 138, 144, 146, 159], "setup": 0, "sever": [9, 68, 69, 70, 97, 98, 99, 100, 101, 102, 107], "sgd": 0, "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 108, 110, 111, 112, 114, 115, 118, 128, 129, 130, 131, 132, 138, 143, 144, 145, 146, 149, 151, 153, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172], "shapelik": 111, "shift": [48, 50, 51, 89, 90, 91, 92, 93, 94, 95], "shorthand": 120, "should": [13, 107, 110, 111, 112, 135, 136, 156, 164], "show": 105, "showcas": 0, "shown": 113, "side": [11, 16, 27, 28, 29, 52, 53, 54, 56, 57, 58, 68, 69, 70, 97, 98, 99, 100, 101, 102, 107], "sigma": [9, 64, 89, 90, 91, 92, 93, 94, 95, 157], "sigma_i": 9, "sigmoid": [20, 38, 67, 78, 83], "sigmoidnetwork": 64, "sign": [7, 85, 133], "signal": [68, 69, 70, 89, 92, 97, 98, 99, 100, 101, 102], "signific": 107, "sim": [72, 73, 74, 75, 76], "similar": [0, 120, 143, 159, 164], "similarli": [12, 156], "simpl": [0, 16, 27, 28, 29, 39, 41, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 118, 119, 124], "simplebinaryclassificationmodel": 83, "simpleclassificationmodel": [84, 87], "simplegelumodel": 60, "simpleleakyrelumodel": 61, "simplemodel": [0, 81], "simpleregressionmodel": 86, "simplerelumodel": 62, "simpleselumodel": 63, "simplesigmoidmodel": 64, "simpletanhmodel": 66, "simpli": [105, 156, 157, 167], "simplic": 62, "simplifi": 16, "sin": [133, 139], "sinc": [7, 10, 27, 28, 29, 105, 107, 112], "sine": [136, 149, 150], "singl": [7, 10, 12, 25, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 84, 95, 98, 99, 100, 101, 102, 108, 160, 168], "singleton": 95, "singular": [3, 6, 7, 9, 11, 12], "sinh": [133, 140, 155], "size": [12, 15, 27, 28, 29, 31, 34, 35, 36, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 79, 81, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 111, 114, 115, 144, 145, 146, 153, 158, 160, 162, 168, 171, 172], "skip": 107, "slice": [39, 156], "slide": [31, 97, 99, 100, 102], "slope": [21, 59, 61], "small": [9, 21, 42, 43, 48, 50, 51, 61, 63, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 101], "smaller": [16, 104, 122], "smallest": 146, "smooth": [19, 59, 60], "so": 104, "softmax": [20, 38, 67, 78, 84], "softmaxmodel": 65, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [18, 33, 72, 73, 74, 89, 90, 91, 92, 93, 94, 107, 108], "sometim": 106, "sophist": 16, "sourc": 114, "space": [4, 10, 12, 27, 28, 29, 31, 68, 69, 70], "spatial": [69, 70, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102], "spatio": 70, "special": [0, 9, 13, 14, 15, 72, 114], "specif": [0, 16, 72, 73, 74, 75, 76, 92, 93, 94, 104, 105, 114, 144, 146, 166, 170], "specifi": [0, 8, 25, 31, 36, 42, 43, 44, 46, 47, 51, 65, 68, 69, 70, 83, 84, 85, 86, 87, 95, 98, 99, 100, 101, 102, 108, 110, 111, 112, 113, 125, 127, 128, 129, 131, 132, 138, 144, 145, 146, 153, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 172], "speech": 92, "split": [160, 162, 172], "sqrt": [19, 60, 89, 90, 91, 92, 93, 94, 95, 133, 135, 136], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 44, 46, 85, 86, 133, 151], "squeez": 163, "stabil": [6, 9, 42, 43, 48, 50, 51, 83, 84, 89, 90, 91, 92, 93, 94, 95], "stabl": [72, 84], "stack": [16, 162, 163, 172], "standard": [19, 21, 59, 60, 61, 72, 112, 114, 120], "state": [13, 14, 15, 16, 105, 107, 113], "state_dict": [14, 15], "static": 16, "statist": [9, 32, 48, 50], "step": [15, 31, 107], "stochast": 0, "storag": 115, "store": [13, 14, 15, 107, 115], "str": [14, 16, 42, 43, 44, 46, 47], "straightforward": [105, 116], "strict": 14, "stride": [16, 27, 28, 29, 31, 52, 53, 54, 56, 57, 58, 68, 69, 70, 97, 98, 99, 100, 101, 102], "stride_height": 31, "stride_width": 31, "string": [14, 16, 68, 69, 70], "structur": [0, 10, 13, 14, 104, 108, 128], "style": [50, 92, 93], "sub": [16, 104, 133], "sub_tensor": 115, "subclass": [0, 14, 15, 104], "submodul": [14, 104], "subsequ": [16, 114], "subset": [73, 74], "subtract": [0, 126], "suitabl": [85, 110], "sum": [8, 16, 25, 42, 43, 44, 46, 47, 65, 83, 84, 85, 86, 87, 116, 119, 124, 133, 156, 158, 160, 162, 166, 170, 172], "sum_": [7, 25, 65, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 118, 119, 145, 153, 156, 158, 166], "sum_i": [8, 124], "sum_j": 124, "sum_k": 120, "summar": [97, 98, 99], "summat": 7, "super": [0, 13, 14, 15, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 104], "support": [0, 1, 7, 8, 9, 10, 12, 16, 104, 114, 115, 116, 117, 120, 121, 122, 123, 125, 126, 127, 128, 138, 143, 145, 149, 151, 153, 156, 157, 158, 160, 167], "sure": 104, "svd": [5, 9], "symmetr": [2, 66], "syntax": 120, "system": [1, 2, 9, 10, 11, 105], "t": [9, 107, 115, 120, 159], "t1": 159, "t2": 159, "tailor": 104, "take": [10, 97, 98, 99, 100, 101, 102, 107], "taken": 156, "tan": 133, "tangent": [26, 66, 137, 154, 155], "tanh": [16, 19, 20, 38, 60, 67, 78, 133], "tanhnetwork": 66, "target": [16, 42, 43, 44, 46, 47, 83, 84, 85, 86, 87], "target_tensor": [83, 84, 85, 86, 87], "task": [0, 1, 24, 25, 28, 39, 42, 43, 46, 47, 64, 65, 68, 69, 70, 83, 84, 85, 86, 87, 92, 93, 94, 97, 99, 100, 102, 106, 114, 128], "techniqu": [2, 6, 48, 72, 73, 74, 75, 76, 92, 93, 94], "tempor": [68, 70, 99, 102], "temporarili": 107, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "term": [9, 39], "text": [3, 7, 8, 18, 21, 22, 23, 25, 27, 28, 29, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 68, 69, 70, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 97, 98, 99, 100, 101, 102, 111, 116, 117, 119, 121, 122, 123, 125, 126, 134, 138, 144, 145, 146, 148, 153, 158, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172], "th": [39, 83, 84, 86, 87, 92, 93, 94, 121, 122, 125], "than": [18, 21, 44, 59, 61, 85, 138, 156, 164, 169], "thei": [0, 12, 13, 16, 108, 167], "them": [14, 31, 106, 160, 169], "therebi": [72, 98, 99, 101, 102], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 24, 25, 26, 27, 28, 29, 31, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 119, 120, 124, 129, 130, 131, 132, 138, 142, 143, 144, 145, 146, 149, 151, 153, 156, 157, 158, 159, 164, 166, 167], "thing": 107, "those": 0, "three": [12, 29, 54, 58, 70, 76, 91, 94, 99, 102], "threshold": [9, 44, 85], "through": [0, 4, 9, 10, 12, 16, 39, 41, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 112, 118, 119, 124, 165, 167, 168, 171], "throughout": 23, "tile": 163, "time": [7, 27, 61, 63, 68, 97, 98, 99, 100, 101, 102, 107, 166, 170], "togeth": 16, "tool": [0, 104, 106, 114], "top": [2, 3, 4, 10, 12, 39, 41, 68, 69, 70, 79, 81], "torch": 159, "total": [15, 115, 167], "trace": [1, 133], "track": [0, 89, 90, 91, 92, 93, 94, 104, 105, 107, 110, 111, 112, 127, 128, 129, 130, 131, 132, 159], "track_running_stat": [89, 90, 91, 92, 93, 94], "trail": 51, "train": [0, 13, 14, 16, 25, 32, 33, 34, 35, 36, 48, 50, 60, 61, 63, 64, 65, 66, 72, 73, 74, 75, 76, 89, 90, 91, 92, 93, 94, 104, 107], "trainabl": [89, 90, 91, 92, 93, 94, 104], "transfer": [50, 92, 93], "transform": [0, 4, 39, 41, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 106], "transit": 85, "translat": [98, 101], "transpos": [0, 2, 133], "treat": [13, 95, 104], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 39, 41, 48, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "tupl": [4, 10, 12, 14, 15, 27, 28, 29, 31, 51, 52, 53, 54, 56, 57, 58, 68, 69, 70, 80, 95, 97, 98, 99, 100, 101, 102, 108, 111, 115, 129, 131, 144, 145, 146, 153, 158, 160, 162, 164, 167, 168, 169, 171, 172], "twice": 164, "two": [0, 3, 4, 6, 7, 9, 10, 12, 27, 28, 29, 39, 53, 57, 69, 75, 79, 90, 93, 98, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 156], "type": [13, 14, 15, 39, 79, 115, 127, 128, 129, 130, 131, 132, 159], "typeerror": 14, "typic": [1, 13, 25, 32, 63, 65, 87, 89, 90, 91, 92, 93, 94, 107, 108, 171], "u": [9, 12], "unchang": [13, 36, 59, 61, 62, 63, 72, 73, 74, 75, 76, 80, 165, 168], "undefin": 125, "under": 104, "underbrac": 7, "underdetermin": 9, "underli": [0, 159, 162, 165, 167, 172], "understand": [0, 16], "unexpect": [14, 16, 114], "unfold": [30, 38], "uniform": [68, 69, 70, 79, 81, 110, 111, 114], "uniformli": 110, "unintend": 107, "uniqu": [2, 9, 11], "unit": [18, 19, 21, 22, 23, 59, 60, 61, 62, 63, 72], "unless": 115, "unlik": [13, 21, 59, 61, 72, 95], "unnecessari": 107, "unpad": 164, "unsqueez": 163, "unstabl": 6, "updat": [13, 16, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 104, 107], "upper": 10, "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 39, 41, 46, 48, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 144, 145, 146, 153, 158, 164, 166, 168, 170, 171], "usag": [1, 16], "user": [0, 104], "usual": 84, "util": [0, 1, 104, 114], "v": [4, 9, 12, 127], "v_stack": 172, "valid": [68, 69, 70, 157], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 18, 21, 24, 25, 26, 27, 28, 29, 31, 42, 43, 44, 46, 47, 48, 50, 51, 59, 61, 62, 63, 64, 66, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 108, 110, 111, 112, 113, 114, 127, 128, 134, 135, 136, 138, 141, 142, 143, 144, 146, 148, 149, 151, 152, 160, 164, 165, 167, 171], "valuabl": 114, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "vanish": [59, 63, 89, 90, 91], "var": 133, "variabl": [14, 16, 80, 104, 105, 107, 110], "varianc": [23, 32, 48, 50, 63, 72, 89, 90, 91, 92, 93, 94, 95, 112, 158], "variat": [92, 93, 94], "varieti": 114, "variou": [62, 114, 144, 146, 164], "vdot": 124, "vector": [4, 9, 10, 11, 12, 39, 41, 79, 81, 118, 119, 120, 124], "veri": 9, "versatil": 114, "version": [12, 124], "vertic": [169, 172], "video": [29, 36, 70, 94, 99, 102], "view": [98, 99, 100, 101, 102, 167], "vision": [28, 69, 79], "volumetr": [29, 36, 70, 94, 99, 102], "vstack": 163, "w": [28, 29, 31, 35, 36, 39, 41, 53, 54, 57, 58, 68, 69, 70, 79, 81, 90, 91, 93, 94, 99, 102], "w_": [28, 29, 53, 54, 57, 58, 69, 70, 98, 99, 101, 102], "w_out": [28, 29, 53, 54, 57, 58], "wa": [72, 73, 74, 75, 76, 107], "wai": [105, 107, 167], "want": 0, "we": [0, 106], "weight": [27, 28, 29, 39, 41, 42, 43, 47, 48, 50, 51, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 104, 110, 114], "were": 16, "what": 107, "when": [0, 7, 14, 16, 18, 21, 27, 28, 29, 59, 80, 89, 90, 91, 92, 93, 94, 105, 107, 108, 114, 125], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 107, 108, 114, 116, 117, 121, 122, 123, 125, 126, 138, 142, 143, 144, 145, 146, 149, 151, 153, 156, 157, 158, 160, 164, 166, 170], "whether": [3, 14, 15, 105, 110, 111, 112, 115, 144, 145, 146, 153, 158], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 21, 25, 44, 59, 60, 61, 65, 66, 72, 85, 87, 89, 90, 91, 92, 93, 94, 95, 105, 107, 108, 110, 111, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 158, 160, 166, 167, 169, 171], "while": [0, 16, 32, 60, 62, 104, 107, 167, 169], "who": 0, "whose": [12, 130, 132, 134, 138, 142, 148], "wide": [1, 9, 22, 62, 68, 69, 84], "wider": [27, 28], "width": [28, 29, 31, 35, 36, 53, 54, 57, 58, 69, 70, 90, 91, 93, 94, 98, 99, 101, 102], "window": [52, 53, 54, 56, 57, 58, 97, 98, 99, 100, 101, 102, 144, 146], "wise": [18, 19, 21, 22, 23, 24, 25, 26, 65, 72, 73, 74, 75, 76, 104, 106, 116, 117, 120, 121, 122, 123, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 162, 172], "within": [13, 16, 26, 60, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 107, 138], "without": [0, 39, 41, 68, 69, 70, 79, 81, 105, 144, 165, 167, 171], "won": 107, "work": [0, 2, 106, 108], "workflow": 114, "workload": 0, "wrap": [104, 107, 159], "wrapper": 104, "x": [0, 1, 11, 13, 14, 16, 25, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 110, 111, 112, 142], "x1": 79, "x2": 79, "x_": [84, 87], "x_c": [84, 87], "x_i": 83, "x_k": 84, "x\u2081": 79, "x\u2082": 79, "y": [16, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 111, 112], "y_": [84, 87], "y_c": [84, 87], "y_i": 83, "yet": [0, 106], "yield": [14, 107], "you": [16, 104, 105, 107, 114, 128, 132, 157, 159], "your": [104, 105, 107, 114], "z": [131, 132], "zero": [7, 9, 10, 18, 21, 27, 28, 29, 32, 33, 34, 35, 36, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 72, 73, 74, 75, 76, 95, 97, 98, 99, 100, 101, 102, 104, 128, 132, 133, 138, 148, 164], "zero_grad": [15, 115], "zeros_lik": 133, "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.diag", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 106, "1d": 106, "2": 106, "2d": 106, "3": 106, "It": [105, 107], "ab": 134, "activ": [20, 38, 67, 78], "ad": 106, "add": 116, "addit": 9, "admonit": 108, "advanc": 31, "algebra": 5, "alias": 108, "align": 106, "alpha_dropout": 32, "alphadropout": 72, "anoth": 159, "arcco": 135, "arcsin": 136, "arctan": 137, "attribut": [13, 15, 16, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 115], "avg_pool1d": 52, "avg_pool2d": 53, "avg_pool3d": 54, "avgpool1d": 97, "avgpool2d": 98, "avgpool3d": 99, "axi": 106, "backpropag": 115, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "batch_norm": 48, "batchnorm1d": 89, "batchnorm2d": 90, "batchnorm3d": 91, "bceloss": 83, "benefit": 107, "bilinear": [39, 79], "binari": 133, "binary_cross_entropi": 42, "broadcast": 106, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "case": 108, "choleski": 2, "class": [13, 14, 15, 16, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 115], "clip": 138, "co": 139, "compon": [0, 104], "concaten": 160, "conclus": [0, 104, 105, 106, 107, 114], "contain": 17, "conv1d": [27, 68], "conv2d": [28, 69], "conv3d": [29, 70], "convolut": [30, 38, 71, 78], "core": 0, "cosh": 140, "creat": [15, 115, 159], "cross_entropi": 43, "crossentropyloss": 84, "cube": 141, "custom": 14, "defin": 14, "definit": 108, "det": 3, "detail": 9, "diag": 127, "dilat": 31, "div": 117, "dot": 118, "dropout": [33, 37, 38, 73, 77, 78], "dropout1d": [34, 74], "dropout2d": [35, 75], "dropout3d": [36, 76], "eig": 4, "elu": [18, 59], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "exp": 142, "ey": 128, "featur": [0, 1, 114], "flatten": 161, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 31, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "from": 159, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 105, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "gelu": [19, 60], "gener": [109, 133], "grad_en": 105, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 39, 41, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "guidelin": 108, "how": [105, 107], "hstack": 162, "huber_loss": 44, "huberloss": 85, "ident": 80, "index": 115, "inner": 119, "input": 159, "instance_norm": 50, "instancenorm1d": 92, "instancenorm2d": 93, "instancenorm3d": 94, "integr": [104, 114], "inv": 6, "iter": 115, "kei": [0, 104, 114], "layer": [67, 71, 77, 78, 82, 88, 96, 103], "layer_norm": 51, "layernorm": 95, "leaky_relu": 21, "leakyrelu": 61, "learn": 114, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 38, 40, 41, 78, 81, 82], "list": 159, "log": 143, "loss": [38, 45, 78, 88], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 38, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "matmul": 120, "matrix": 120, "matrix_pow": 7, "max": 144, "max_pool1d": 56, "max_pool2d": 57, "max_pool3d": 58, "maximum": 121, "maxpool1d": 100, "maxpool2d": 101, "maxpool3d": 102, "mean": 145, "method": [14, 15, 115], "min": 146, "minimum": 122, "model": 104, "modul": [14, 78], "more": 114, "mse_loss": 46, "mseloss": 86, "mul": 123, "multipl": 120, "new": 106, "newaxi": 106, "nll_loss": 47, "nllloss": 87, "nn": [13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104], "no_grad": 107, "norm": 8, "normal": [38, 49, 78, 96], "note": 0, "number": 109, "ones": 129, "ones_lik": 130, "oper": [5, 120, 133], "organ": 104, "outer": 124, "overview": [0, 104, 114], "pad": 164, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "perform": 115, "pinv": 9, "pitfal": [105, 107], "pool": [38, 55, 78, 103], "potenti": [105, 107], "power": 125, "properti": [15, 115], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 110, "randint": 111, "randn": 112, "random": [109, 110, 111, 112, 113, 114], "ravel": 165, "reciproc": 147, "relu": [22, 62], "repeat": 166, "reshap": 167, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 105, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "rule": 120, "seed": 113, "selu": [23, 63], "sequenti": 16, "sigmoid": [24, 64], "sign": 148, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172], "sin": 149, "sinh": 150, "slice": 115, "softmax": [25, 65], "solv": 11, "sqrt": 151, "squar": 152, "squeez": 168, "stack": 169, "sub": 126, "sum": 153, "svd": 12, "tan": 154, "tanh": [26, 66, 155], "tensor": [106, 115, 133, 159, 163], "through": 115, "tile": 170, "trace": 156, "track": 115, "transpos": 157, "type": 108, "unari": 133, "unfold": 31, "unsqueez": 171, "us": [108, 159], "usag": [0, 13, 105, 106, 107, 108], "utilit": 163, "var": 158, "vstack": 172, "why": 108, "work": [105, 107], "zero": 131, "zeros_lik": 132}})