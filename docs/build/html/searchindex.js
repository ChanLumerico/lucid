Search.setIndex({"alltitles": {"@ Operator": [[200, "operator"]], "Activation Functions": [[63, null]], "Activation Layers": [[124, null], [139, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[187, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[74, "advanced-example-with-dilation"]], "Advanced Features": [[268, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[171, "algorithm"], [172, "algorithm"], [173, "algorithm"], [174, "algorithm"], [175, "algorithm"], [176, "algorithm"], [177, "algorithm"], [178, "algorithm"], [179, "algorithm"], [180, "algorithm"], [181, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [48, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [43, "attributes"], [48, "attributes"], [52, "attributes"], [54, "attributes"], [55, "attributes"], [56, "attributes"], [57, "attributes"], [58, "attributes"], [59, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [195, "attributes"], [259, "attributes"], [260, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [264, "attributes"], [265, "attributes"], [266, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [55, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"]], "Behavior": [[95, "behavior"], [96, "behavior"], [97, "behavior"], [158, "behavior"], [159, "behavior"], [160, "behavior"]], "Benefits": [[185, "benefits"]], "Binary Functions": [[216, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [43, "class-signature"], [48, "class-signature"], [52, "class-signature"], [53, "class-signature"], [54, "class-signature"], [55, "class-signature"], [56, "class-signature"], [57, "class-signature"], [58, "class-signature"], [59, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [169, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [195, "class-signature"], [257, "class-signature"], [258, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [168, "conclusion"], [183, "conclusion"], [184, "conclusion"], [185, "conclusion"], [194, "conclusion"], [258, "conclusion"], [268, "conclusion"]], "Containers": [[60, null]], "ConvNets": [[29, null], [50, "convnets"]], "Convolution Functions": [[73, null], [81, null]], "Convolution Layers": [[128, null], [139, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[242, null]], "Creating a Parameter": [[54, null]], "Creating a tensor with gradient tracking": [[195, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[268, "custom-pipelines"]], "Defining a Custom Optimizer": [[170, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[53, null]], "Defining a custom optimizer": [[169, null]], "Description": [[186, "description"]], "Dropout Functions": [[80, null], [81, null]], "Dropout Layers": [[134, null], [139, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [74, "example"], [168, null], [168, null], [168, null], [183, "example"], [185, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, null], [194, null], [194, null], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [215, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [226, "example"], [228, "example"], [230, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [243, "example"], [245, "example"], [249, "example"], [251, "example"], [252, "example"], [253, "example"], [255, "example"], [256, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[184, null]], "Example 2: Adding a new axis to a 2D tensor": [[184, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[184, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [107, "example-usage"], [257, "example-usage"], [258, "example-usage"], [268, "example-usage"]], "Example Use Cases": [[187, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [106, "examples"], [108, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [186, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [225, "examples"], [227, "examples"], [229, "examples"], [242, "examples"], [244, "examples"], [247, "examples"], [248, "examples"], [250, "examples"], [254, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [34, "forward-calculation"], [55, "forward-calculation"], [56, "forward-calculation"], [57, "forward-calculation"], [58, "forward-calculation"], [59, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [64, "forward-calculation"], [65, "forward-calculation"], [66, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [74, "forward-calculation"], [82, "forward-calculation"], [84, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [106, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [243, "forward-calculation"], [245, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [49, "function-signature"], [51, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [183, "function-signature"], [185, "function-signature"], [186, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"]], "Fused Layers": [[138, null], [139, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[170, "getting-started"]], "How It Works": [[183, "how-it-works"], [185, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[267, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[195, null]], "Inspecting Optimizer State": [[170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null]], "Integration with lucid": [[3, "integration-with-lucid"], [168, "integration-with-lucid"], [194, "integration-with-lucid"], [268, "integration-with-lucid"]], "Iterating through a tensor": [[195, null]], "Key Components": [[3, "key-components"], [168, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [170, "key-features"], [194, "key-features"]], "Key Transformations": [[268, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[194, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[81, null], [83, null]], "Linear Layers": [[139, null], [143, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[81, null], [88, null]], "Loss Layers": [[139, null], [149, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[200, "matrix-multiplication-rules"]], "Metadata Captured": [[186, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [43, "methods"], [53, "methods"], [54, "methods"], [169, "methods"], [195, "methods"]], "Modules": [[139, null]], "Normalization Functions": [[81, null], [92, null]], "Normalization Layers": [[139, null], [157, null]], "Notes": [[7, "notes"]], "Optimizers": [[182, null]], "Organizing Models": [[168, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [35, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [168, "overview"], [170, "overview"], [194, "overview"], [268, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [61, "parameters"], [62, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [185, "parameters"], [186, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"]], "Performing backpropagation": [[195, null]], "Pooling Functions": [[81, null], [101, null]], "Pooling Layers": [[139, null], [167, null]], "Potential Pitfalls": [[183, "potential-pitfalls"], [185, "potential-pitfalls"]], "Properties": [[54, "properties"], [195, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[188, null]], "References": [[5, "references"], [170, "references"]], "ResNet": [[34, null]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [49, "returns"], [51, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [183, "returns"], [185, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"]], "See Also": [[170, "see-also"]], "Summary Table": [[51, "summary-table"]], "Tensor Generating Functions": [[216, null]], "Tensor Operations": [[216, null]], "Tensor Utilites": [[246, null]], "Type Definitions": [[187, "type-definitions"]], "Unary Functions": [[216, null]], "Usage": [[4, "usage"], [52, "usage"], [107, "usage"], [183, "usage"], [184, "usage"], [185, "usage"], [247, "usage"], [257, "usage"], [258, "usage"], [268, "usage"]], "Use another Tensor as input": [[242, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[171, null]], "Using the Adadelta Optimizer": [[172, null]], "Using the Adagrad Optimizer": [[173, null]], "Using the Adam Optimizer": [[174, null]], "Using the AdamW Optimizer": [[175, null]], "Using the Adamax Optimizer": [[176, null]], "Using the NAdam Optimizer": [[177, null]], "Using the RAdam Optimizer": [[178, null]], "Using the RMSprop Optimizer": [[179, null]], "Using the Rprop Optimizer": [[180, null]], "Using the SGD Optimizer": [[181, null]], "Utility Functions": [[81, null], [105, null]], "VGGNet": [[43, null]], "Weight Initializations": [[109, null]], "Why Use Type Aliases?": [[187, null]], "ZFNet": [[48, null]], "activation Functions": [[81, null]], "alexnet": [[21, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[27, null]], "inception_resnet_v2": [[28, null]], "inception_v1": [[23, null]], "inception_v3": [[24, null]], "inception_v4": [[25, null]], "lenet_1": [[31, null]], "lenet_4": [[32, null]], "lenet_5": [[33, null]], "lucid.Tensor": [[195, null]], "lucid.abs": [[217, null]], "lucid.add": [[196, null]], "lucid.arange": [[207, null]], "lucid.arccos": [[218, null]], "lucid.arcsin": [[219, null]], "lucid.arctan": [[220, null]], "lucid.clip": [[221, null]], "lucid.concatenate": [[243, null]], "lucid.cos": [[222, null]], "lucid.cosh": [[223, null]], "lucid.cube": [[224, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[208, null]], "lucid.div": [[197, null]], "lucid.dot": [[198, null]], "lucid.empty": [[209, null]], "lucid.empty_like": [[210, null]], "lucid.exp": [[225, null]], "lucid.eye": [[211, null]], "lucid.flatten": [[244, null]], "lucid.grad_enabled": [[183, null]], "lucid.hstack": [[245, null]], "lucid.inner": [[199, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[226, null]], "lucid.matmul": [[200, null]], "lucid.max": [[227, null]], "lucid.maximum": [[201, null]], "lucid.mean": [[228, null]], "lucid.meshgrid": [[247, null]], "lucid.min": [[229, null]], "lucid.minimum": [[202, null]], "lucid.models": [[50, null]], "lucid.mul": [[203, null]], "lucid.newaxis": [[184, null]], "lucid.nn": [[168, null]], "lucid.nn.functional": [[81, null]], "lucid.no_grad": [[185, null]], "lucid.ones": [[212, null]], "lucid.ones_like": [[213, null]], "lucid.optim": [[170, null]], "lucid.outer": [[204, null]], "lucid.pad": [[248, null]], "lucid.power": [[205, null]], "lucid.random": [[194, null]], "lucid.random.rand": [[189, null]], "lucid.random.randint": [[190, null]], "lucid.random.randn": [[191, null]], "lucid.random.seed": [[192, null]], "lucid.random.uniform": [[193, null]], "lucid.ravel": [[249, null]], "lucid.reciprocal": [[230, null]], "lucid.register_model": [[186, null]], "lucid.repeat": [[250, null]], "lucid.reshape": [[251, null]], "lucid.sign": [[231, null]], "lucid.sin": [[232, null]], "lucid.sinh": [[233, null]], "lucid.sqrt": [[234, null]], "lucid.square": [[235, null]], "lucid.squeeze": [[252, null]], "lucid.stack": [[253, null]], "lucid.sub": [[206, null]], "lucid.sum": [[236, null]], "lucid.tan": [[237, null]], "lucid.tanh": [[238, null]], "lucid.tensor": [[242, null]], "lucid.tile": [[254, null]], "lucid.trace": [[239, null]], "lucid.transforms": [[268, null]], "lucid.transpose": [[240, null]], "lucid.types": [[187, null]], "lucid.unsqueeze": [[255, null]], "lucid.var": [[241, null]], "lucid.vstack": [[256, null]], "lucid.zeros": [[214, null]], "lucid.zeros_like": [[215, null]], "models.summarize": [[51, null]], "nn.AdaptiveAvgPool1d": [[158, null]], "nn.AdaptiveAvgPool2d": [[159, null]], "nn.AdaptiveAvgPool3d": [[160, null]], "nn.AlphaDropout": [[129, null]], "nn.AvgPool1d": [[161, null]], "nn.AvgPool2d": [[162, null]], "nn.AvgPool3d": [[163, null]], "nn.BCELoss": [[144, null]], "nn.BatchNorm1d": [[150, null]], "nn.BatchNorm2d": [[151, null]], "nn.BatchNorm3d": [[152, null]], "nn.Bilinear": [[140, null]], "nn.Buffer": [[52, null]], "nn.Conv1d": [[125, null]], "nn.Conv2d": [[126, null]], "nn.Conv3d": [[127, null]], "nn.ConvBNReLU1d": [[135, null]], "nn.ConvBNReLU2d": [[136, null]], "nn.ConvBNReLU3d": [[137, null]], "nn.CrossEntropyLoss": [[145, null]], "nn.Dropout": [[130, null]], "nn.Dropout1d": [[131, null]], "nn.Dropout2d": [[132, null]], "nn.Dropout3d": [[133, null]], "nn.ELU": [[116, null]], "nn.GELU": [[117, null]], "nn.HuberLoss": [[146, null]], "nn.Identity": [[141, null]], "nn.InstanceNorm1d": [[153, null]], "nn.InstanceNorm2d": [[154, null]], "nn.InstanceNorm3d": [[155, null]], "nn.LayerNorm": [[156, null]], "nn.LeakyReLU": [[118, null]], "nn.Linear": [[142, null]], "nn.MSELoss": [[147, null]], "nn.MaxPool1d": [[164, null]], "nn.MaxPool2d": [[165, null]], "nn.MaxPool3d": [[166, null]], "nn.Module": [[53, null]], "nn.ModuleDict": [[55, null]], "nn.ModuleList": [[56, null]], "nn.NLLLoss": [[148, null]], "nn.Parameter": [[54, null]], "nn.ParameterDict": [[57, null]], "nn.ParameterList": [[58, null]], "nn.ReLU": [[119, null]], "nn.SELU": [[120, null]], "nn.Sequential": [[59, null]], "nn.Sigmoid": [[121, null]], "nn.Softmax": [[122, null]], "nn.Tanh": [[123, null]], "nn.functional.adaptive_avg_pool1d": [[95, null]], "nn.functional.adaptive_avg_pool2d": [[96, null]], "nn.functional.adaptive_avg_pool3d": [[97, null]], "nn.functional.alpha_dropout": [[75, null]], "nn.functional.avg_pool1d": [[98, null]], "nn.functional.avg_pool2d": [[99, null]], "nn.functional.avg_pool3d": [[100, null]], "nn.functional.batch_norm": [[91, null]], "nn.functional.bilinear": [[82, null]], "nn.functional.binary_cross_entropy": [[85, null]], "nn.functional.conv1d": [[70, null]], "nn.functional.conv2d": [[71, null]], "nn.functional.conv3d": [[72, null]], "nn.functional.cross_entropy": [[86, null]], "nn.functional.dropout": [[76, null]], "nn.functional.dropout1d": [[77, null]], "nn.functional.dropout2d": [[78, null]], "nn.functional.dropout3d": [[79, null]], "nn.functional.elu": [[61, null]], "nn.functional.gelu": [[62, null]], "nn.functional.huber_loss": [[87, null]], "nn.functional.instance_norm": [[93, null]], "nn.functional.interpolate": [[106, null]], "nn.functional.layer_norm": [[94, null]], "nn.functional.leaky_relu": [[64, null]], "nn.functional.linear": [[84, null]], "nn.functional.max_pool1d": [[102, null]], "nn.functional.max_pool2d": [[103, null]], "nn.functional.max_pool3d": [[104, null]], "nn.functional.mse_loss": [[89, null]], "nn.functional.nll_loss": [[90, null]], "nn.functional.relu": [[65, null]], "nn.functional.rotate": [[107, null]], "nn.functional.selu": [[66, null]], "nn.functional.sigmoid": [[67, null]], "nn.functional.softmax": [[68, null]], "nn.functional.tanh": [[69, null]], "nn.functional.unfold": [[74, null]], "nn.init.constant": [[108, null]], "nn.init.kaiming_normal": [[110, null]], "nn.init.kaiming_uniform": [[111, null]], "nn.init.normal": [[112, null]], "nn.init.uniform": [[113, null]], "nn.init.xavier_normal": [[114, null]], "nn.init.xavier_uniform": [[115, null]], "optim.ASGD": [[171, null]], "optim.Adadelta": [[172, null]], "optim.Adagrad": [[173, null]], "optim.Adam": [[174, null]], "optim.AdamW": [[175, null]], "optim.Adamax": [[176, null]], "optim.NAdam": [[177, null]], "optim.Optimizer": [[169, null]], "optim.RAdam": [[178, null]], "optim.RMSprop": [[179, null]], "optim.Rprop": [[180, null]], "optim.SGD": [[181, null]], "resnet_1001": [[35, null]], "resnet_101": [[36, null]], "resnet_152": [[37, null]], "resnet_18": [[38, null]], "resnet_200": [[39, null]], "resnet_269": [[40, null]], "resnet_34": [[41, null]], "resnet_50": [[42, null]], "transforms.CenterCrop": [[259, null]], "transforms.Compose": [[257, null]], "transforms.Normalize": [[260, null]], "transforms.RandomCrop": [[261, null]], "transforms.RandomGrayscale": [[262, null]], "transforms.RandomHorizontalFlip": [[263, null]], "transforms.RandomRotation": [[264, null]], "transforms.RandomVerticalFlip": [[265, null]], "transforms.Resize": [[266, null]], "transforms.ToTensor": [[258, null]], "vggnet_11": [[44, null]], "vggnet_13": [[45, null]], "vggnet_16": [[46, null]], "vggnet_19": [[47, null]], "zfnet": [[49, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/fused/ConvBNReLU1d", "nn/modules/fused/ConvBNReLU2d", "nn/modules/fused/ConvBNReLU3d", "nn/modules/fused/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/fused/ConvBNReLU1d.rst", "nn/modules/fused/ConvBNReLU2d.rst", "nn/modules/fused/ConvBNReLU3d.rst", "nn/modules/fused/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[217, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[172, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[173, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[174, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[176, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[175, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[158, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[159, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[160, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[196, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[129, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[207, "lucid.arange", false]], "arccos() (in module lucid)": [[218, "lucid.arccos", false]], "arcsin() (in module lucid)": [[219, "lucid.arcsin", false]], "arctan() (in module lucid)": [[220, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[171, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[161, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[162, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[163, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[150, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[151, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[152, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[144, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[140, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[52, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[259, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[221, "lucid.clip", false]], "compose (class in lucid.transforms)": [[257, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[243, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[108, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[125, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[126, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[127, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[135, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[136, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[137, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[222, "lucid.cos", false]], "cosh() (in module lucid)": [[223, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[145, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[224, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[208, "lucid.diag", false]], "div() (in module lucid)": [[197, "lucid.div", false]], "dot() (in module lucid)": [[198, "lucid.dot", false]], "dropout (class in lucid.nn)": [[130, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[131, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[132, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[133, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[116, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[209, "lucid.empty", false]], "empty_like() (in module lucid)": [[210, "lucid.empty_like", false]], "exp() (in module lucid)": [[225, "lucid.exp", false]], "eye() (in module lucid)": [[211, "lucid.eye", false]], "flatten() (in module lucid)": [[244, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[117, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[183, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[245, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[146, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[141, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[199, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[153, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[154, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[155, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[110, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[111, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[156, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[118, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[142, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[226, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[200, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[227, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[201, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[164, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[165, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[166, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[228, "lucid.mean", false]], "meshgrid() (in module lucid)": [[247, "lucid.meshgrid", false]], "min() (in module lucid)": [[229, "lucid.min", false]], "minimum() (in module lucid)": [[202, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[53, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[55, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[56, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[147, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[203, "lucid.mul", false]], "nadam (class in lucid.optim)": [[177, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[148, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[185, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[112, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[260, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[212, "lucid.ones", false]], "ones_like() (in module lucid)": [[213, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[169, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[204, "lucid.outer", false]], "pad() (in module lucid)": [[248, "lucid.pad", false]], "parameter (class in lucid.nn)": [[54, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[57, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[58, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[205, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[178, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[189, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[190, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[191, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[261, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[262, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[263, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[264, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[265, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[249, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[230, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[186, "lucid.register_model", false]], "relu (class in lucid.nn)": [[119, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[250, "lucid.repeat", false]], "reshape() (in module lucid)": [[251, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[266, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[34, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[35, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[36, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[37, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[38, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[39, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[40, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[41, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[42, "lucid.models.resnet_50", false]], "rmsprop (class in lucid.optim)": [[179, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[180, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[192, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[120, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[59, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[181, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[121, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[231, "lucid.sign", false]], "sin() (in module lucid)": [[232, "lucid.sin", false]], "sinh() (in module lucid)": [[233, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[122, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[234, "lucid.sqrt", false]], "square() (in module lucid)": [[235, "lucid.square", false]], "squeeze() (in module lucid)": [[252, "lucid.squeeze", false]], "stack() (in module lucid)": [[253, "lucid.stack", false]], "sub() (in module lucid)": [[206, "lucid.sub", false]], "sum() (in module lucid)": [[236, "lucid.sum", false]], "summarize() (in module lucid.models)": [[51, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[237, "lucid.tan", false]], "tanh (class in lucid.nn)": [[123, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[238, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[195, "lucid.Tensor", false]], "tensor() (in module lucid)": [[242, "lucid.tensor", false]], "tile() (in module lucid)": [[254, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[258, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[239, "lucid.trace", false]], "transpose() (in module lucid)": [[240, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[113, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[193, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[255, "lucid.unsqueeze", false]], "var() (in module lucid)": [[241, "lucid.var", false]], "vggnet (class in lucid.models)": [[43, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[44, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[45, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[46, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[47, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[256, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[114, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[115, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[214, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[215, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[48, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[49, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[195, 1, 1, "", "Tensor"], [217, 2, 1, "", "abs"], [196, 2, 1, "", "add"], [207, 2, 1, "", "arange"], [218, 2, 1, "", "arccos"], [219, 2, 1, "", "arcsin"], [220, 2, 1, "", "arctan"], [221, 2, 1, "", "clip"], [243, 2, 1, "", "concatenate"], [222, 2, 1, "", "cos"], [223, 2, 1, "", "cosh"], [224, 2, 1, "", "cube"], [208, 2, 1, "", "diag"], [197, 2, 1, "", "div"], [198, 2, 1, "", "dot"], [209, 2, 1, "", "empty"], [210, 2, 1, "", "empty_like"], [225, 2, 1, "", "exp"], [211, 2, 1, "", "eye"], [244, 2, 1, "", "flatten"], [183, 2, 1, "", "grad_enabled"], [245, 2, 1, "", "hstack"], [199, 2, 1, "", "inner"], [226, 2, 1, "", "log"], [200, 2, 1, "", "matmul"], [227, 2, 1, "", "max"], [201, 2, 1, "", "maximum"], [228, 2, 1, "", "mean"], [247, 2, 1, "", "meshgrid"], [229, 2, 1, "", "min"], [202, 2, 1, "", "minimum"], [203, 2, 1, "", "mul"], [185, 2, 1, "", "no_grad"], [212, 2, 1, "", "ones"], [213, 2, 1, "", "ones_like"], [204, 2, 1, "", "outer"], [248, 2, 1, "", "pad"], [205, 2, 1, "", "power"], [249, 2, 1, "", "ravel"], [230, 2, 1, "", "reciprocal"], [186, 2, 1, "", "register_model"], [250, 2, 1, "", "repeat"], [251, 2, 1, "", "reshape"], [231, 2, 1, "", "sign"], [232, 2, 1, "", "sin"], [233, 2, 1, "", "sinh"], [234, 2, 1, "", "sqrt"], [235, 2, 1, "", "square"], [252, 2, 1, "", "squeeze"], [253, 2, 1, "", "stack"], [206, 2, 1, "", "sub"], [236, 2, 1, "", "sum"], [237, 2, 1, "", "tan"], [238, 2, 1, "", "tanh"], [242, 2, 1, "", "tensor"], [254, 2, 1, "", "tile"], [239, 2, 1, "", "trace"], [240, 2, 1, "", "transpose"], [255, 2, 1, "", "unsqueeze"], [241, 2, 1, "", "var"], [256, 2, 1, "", "vstack"], [214, 2, 1, "", "zeros"], [215, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [34, 1, 1, "", "ResNet"], [43, 1, 1, "", "VGGNet"], [48, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [35, 2, 1, "", "resnet_1001"], [36, 2, 1, "", "resnet_101"], [37, 2, 1, "", "resnet_152"], [38, 2, 1, "", "resnet_18"], [39, 2, 1, "", "resnet_200"], [40, 2, 1, "", "resnet_269"], [41, 2, 1, "", "resnet_34"], [42, 2, 1, "", "resnet_50"], [51, 2, 1, "", "summarize"], [44, 2, 1, "", "vggnet_11"], [45, 2, 1, "", "vggnet_13"], [46, 2, 1, "", "vggnet_16"], [47, 2, 1, "", "vggnet_19"], [49, 2, 1, "", "zfnet"]], "lucid.nn": [[158, 1, 1, "", "AdaptiveAvgPool1d"], [159, 1, 1, "", "AdaptiveAvgPool2d"], [160, 1, 1, "", "AdaptiveAvgPool3d"], [129, 1, 1, "", "AlphaDropout"], [161, 1, 1, "", "AvgPool1d"], [162, 1, 1, "", "AvgPool2d"], [163, 1, 1, "", "AvgPool3d"], [144, 1, 1, "", "BCELoss"], [150, 1, 1, "", "BatchNorm1d"], [151, 1, 1, "", "BatchNorm2d"], [152, 1, 1, "", "BatchNorm3d"], [140, 1, 1, "", "Bilinear"], [52, 1, 1, "", "Buffer"], [125, 1, 1, "", "Conv1d"], [126, 1, 1, "", "Conv2d"], [127, 1, 1, "", "Conv3d"], [135, 1, 1, "", "ConvBNReLU1d"], [136, 1, 1, "", "ConvBNReLU2d"], [137, 1, 1, "", "ConvBNReLU3d"], [145, 1, 1, "", "CrossEntropyLoss"], [130, 1, 1, "", "Dropout"], [131, 1, 1, "", "Dropout1d"], [132, 1, 1, "", "Dropout2d"], [133, 1, 1, "", "Dropout3d"], [116, 1, 1, "", "ELU"], [117, 1, 1, "", "GELU"], [146, 1, 1, "", "HuberLoss"], [141, 1, 1, "", "Identity"], [153, 1, 1, "", "InstanceNorm1d"], [154, 1, 1, "", "InstanceNorm2d"], [155, 1, 1, "", "InstanceNorm3d"], [156, 1, 1, "", "LayerNorm"], [118, 1, 1, "", "LeakyReLU"], [142, 1, 1, "", "Linear"], [147, 1, 1, "", "MSELoss"], [164, 1, 1, "", "MaxPool1d"], [165, 1, 1, "", "MaxPool2d"], [166, 1, 1, "", "MaxPool3d"], [53, 1, 1, "", "Module"], [55, 1, 1, "", "ModuleDict"], [56, 1, 1, "", "ModuleList"], [148, 1, 1, "", "NLLLoss"], [54, 1, 1, "", "Parameter"], [57, 1, 1, "", "ParameterDict"], [58, 1, 1, "", "ParameterList"], [119, 1, 1, "", "ReLU"], [120, 1, 1, "", "SELU"], [59, 1, 1, "", "Sequential"], [121, 1, 1, "", "Sigmoid"], [122, 1, 1, "", "Softmax"], [123, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[95, 2, 1, "", "adaptive_avg_pool1d"], [96, 2, 1, "", "adaptive_avg_pool2d"], [97, 2, 1, "", "adaptive_avg_pool3d"], [75, 2, 1, "", "alpha_dropout"], [98, 2, 1, "", "avg_pool1d"], [99, 2, 1, "", "avg_pool2d"], [100, 2, 1, "", "avg_pool3d"], [91, 2, 1, "", "batch_norm"], [82, 2, 1, "", "bilinear"], [85, 2, 1, "", "binary_cross_entropy"], [70, 2, 1, "", "conv1d"], [71, 2, 1, "", "conv2d"], [72, 2, 1, "", "conv3d"], [86, 2, 1, "", "cross_entropy"], [76, 2, 1, "", "dropout"], [77, 2, 1, "", "dropout1d"], [78, 2, 1, "", "dropout2d"], [79, 2, 1, "", "dropout3d"], [61, 2, 1, "", "elu"], [62, 2, 1, "", "gelu"], [87, 2, 1, "", "huber_loss"], [93, 2, 1, "", "instance_norm"], [106, 2, 1, "", "interpolate"], [94, 2, 1, "", "layer_norm"], [64, 2, 1, "", "leaky_relu"], [84, 2, 1, "", "linear"], [102, 2, 1, "", "max_pool1d"], [103, 2, 1, "", "max_pool2d"], [104, 2, 1, "", "max_pool3d"], [89, 2, 1, "", "mse_loss"], [90, 2, 1, "", "nll_loss"], [65, 2, 1, "", "relu"], [107, 2, 1, "", "rotate"], [66, 2, 1, "", "selu"], [67, 2, 1, "", "sigmoid"], [68, 2, 1, "", "softmax"], [69, 2, 1, "", "tanh"], [74, 2, 1, "", "unfold"]], "lucid.nn.init": [[108, 2, 1, "", "constant"], [110, 2, 1, "", "kaiming_normal"], [111, 2, 1, "", "kaiming_uniform"], [112, 2, 1, "", "normal"], [113, 2, 1, "", "uniform"], [114, 2, 1, "", "xavier_normal"], [115, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[171, 1, 1, "", "ASGD"], [172, 1, 1, "", "Adadelta"], [173, 1, 1, "", "Adagrad"], [174, 1, 1, "", "Adam"], [175, 1, 1, "", "AdamW"], [176, 1, 1, "", "Adamax"], [177, 1, 1, "", "NAdam"], [169, 1, 1, "", "Optimizer"], [178, 1, 1, "", "RAdam"], [179, 1, 1, "", "RMSprop"], [180, 1, 1, "", "Rprop"], [181, 1, 1, "", "SGD"]], "lucid.random": [[189, 2, 1, "", "rand"], [190, 2, 1, "", "randint"], [191, 2, 1, "", "randn"], [192, 2, 1, "", "seed"], [193, 2, 1, "", "uniform"]], "lucid.transforms": [[259, 1, 1, "", "CenterCrop"], [257, 1, 1, "", "Compose"], [260, 1, 1, "", "Normalize"], [261, 1, 1, "", "RandomCrop"], [262, 1, 1, "", "RandomGrayscale"], [263, 1, 1, "", "RandomHorizontalFlip"], [264, 1, 1, "", "RandomRotation"], [265, 1, 1, "", "RandomVerticalFlip"], [266, 1, 1, "", "Resize"], [258, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 50, 51, 52, 53, 54, 55, 57, 58, 59, 95, 96, 97, 145, 148, 158, 159, 160, 161, 164, 165, 168, 169, 170, 184, 186, 200, 208, 226, 228, 236, 239, 241, 242, 252, 258, 260, 268], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 34, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268], "000": [5, 209, 210], "0000": [145, 146, 148], "0001": 171, "000e": [209, 210], "001": [171, 174, 175, 177, 178, 181], "002": [176, 177], "004": 177, "005": 118, "01": [64, 118, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181], "01051757": 191, "016": [35, 50], "0205": 145, "0217": 145, "0227": 145, "0299": 145, "032": [42, 50], "044715": [62, 117], "0450": 145, "0451": 145, "047": [45, 50], "04719755": 218, "0474259": 67, "0480": 145, "05": [91, 93, 94, 118, 135, 136, 137, 150, 151, 152, 153, 154, 155, 156], "0507": [66, 120], "06": [172, 180], "069": [40, 50], "07": [85, 86, 144, 145], "0700": 145, "0706508": 123, "071": [35, 50], "0721": 145, "0794": 148, "08": [174, 175, 176, 177, 178, 179], "0802": 148, "08333333": 16, "085537": 225, "0900": [122, 145], "0986": [68, 122], "09861229": 226, "0992": 145, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 34, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 43, 48, 49, 50, 51, 55, 56, 59, 71, 72, 82, 84, 95, 125, 126, 127, 132, 133, 140, 142, 151, 152, 154, 158, 162, 163, 165, 173, 186, 190, 193, 194, 197, 200, 203, 204, 220, 236, 259, 261, 262, 264], "100": [21, 44, 45, 46, 47, 50, 186, 268], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "1000000": 171, "1001": [35, 50, 145], "1003": 145, "1007": 50, "101": [36, 50], "1014": 66, "102": [40, 50], "1025": [56, 59], "1026": [56, 59], "1027": [56, 59], "10499": 67, "1050": 121, "1054": 148, "1056": [56, 59], "10590": 50, "1097": 50, "11": [38, 43, 44, 50, 82, 125, 126, 127, 132, 140, 151, 152, 154, 162, 163, 165, 200, 259, 260, 261, 262, 264], "1105": 50, "1109": 50, "1111": 144, "1134": 82, "114b": 262, "119": 82, "1192": [67, 68, 122], "12": [31, 32, 57, 82, 97, 125, 126, 127, 132, 133, 140, 151, 152, 154, 160, 162, 163, 165, 200, 204, 205, 259, 261, 262, 264], "120": [30, 33], "123": [110, 111, 112, 113, 114, 115, 192, 193], "124": [110, 111, 114, 115], "125": 163, "1250": 146, "128": [27, 43, 50, 59, 257, 268], "128x128": [257, 268], "13": [23, 43, 45, 50, 82, 125, 126, 127, 140, 152, 162, 163, 165, 200, 259, 261, 262, 264], "132": [44, 50], "133": [45, 50], "138": [46, 50], "14": [125, 126, 127, 132, 133, 140, 152, 162, 163, 165, 187, 200, 204, 259, 261, 262, 264], "1409": 50, "143": [47, 50], "145": 82, "149": [35, 50], "15": [0, 82, 125, 126, 127, 140, 152, 162, 163, 165, 200, 204, 239, 259, 261, 262, 264, 268], "1513": 148, "152": [37, 50], "155": 200, "1556": 50, "1588": [62, 117], "16": [30, 33, 43, 46, 50, 56, 57, 59, 96, 97, 125, 126, 127, 132, 133, 135, 136, 137, 140, 151, 152, 159, 160, 162, 163, 165, 168, 200, 204, 234, 259, 261, 262, 264], "160": [36, 50], "16227766": 17, "16425": 148, "1643": 144, "166": 200, "17": [125, 126, 127, 140, 152, 163, 199, 259, 261, 262, 264], "170": 82, "17520119": 233, "18": [32, 38, 50, 125, 126, 127, 132, 140, 152, 163, 203, 204, 259, 261, 262, 264], "1800": 145, "19": [43, 47, 50, 71, 72, 82, 126, 127, 152, 198, 200], "192": [31, 32, 37, 50], "1966": [68, 121, 122], "1998": [50, 145], "1_53": 50, "1d": [70, 95, 98, 102, 135, 150, 153, 158, 193, 200, 208, 239, 247, 248, 249, 250, 254], "1e": [85, 86, 91, 93, 94, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "1e6": 171, "1st": [20, 48], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 38, 48, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "20": [0, 5, 55, 56, 59, 126, 127, 132, 152, 204, 225], "200": [39, 50], "2012": 50, "2014": 50, "2015": 50, "2016": 50, "2017": 50, "2039": 148, "204": 127, "21": [41, 50, 57, 82, 126, 127, 152, 204], "211": 200, "22": [27, 50, 82, 126, 127, 132, 152, 198, 200], "2231": [145, 148], "224": [20, 43, 48, 50], "2247": [150, 151, 152, 153, 154, 155, 156], "224x224": 23, "226": 200, "22752314": 191, "2278": 50, "23": [36, 126, 127, 152], "2324": [50, 120], "234": [110, 111, 112, 113, 114, 115, 193], "24": [39, 82, 96, 126, 127, 132, 152, 159, 204], "240": [47, 50], "2424": [68, 122], "2447": 122, "246": [31, 50], "25": [0, 42, 50, 67, 121, 127, 147, 152, 162, 163, 197, 230, 241], "2500": [144, 146, 148], "2512": 116, "2547": 120, "256": 43, "26": [57, 84, 127, 142, 152, 204], "26325684": 191, "2689": [68, 121, 122], "269": [40, 50], "27": [82, 125, 127, 152, 224], "276": [110, 111, 114, 115], "28": [31, 32, 50, 82, 127, 204], "28x28": [5, 31, 32], "29": 127, "299": 50, "299r": 262, "299x299": [24, 25, 27, 28], "2_i": [153, 154, 155], "2d": [71, 78, 96, 99, 103, 136, 151, 154, 159, 200, 208, 211, 239, 244, 247, 248, 250, 254, 264], "2e": 176, "2nd": [20, 48], "2x2": [74, 259, 261], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 35, 36, 37, 39, 40, 41, 42, 43, 48, 50, 52, 53, 54, 56, 57, 58, 59, 62, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266], "30": [24, 40, 50, 56, 107, 127, 264], "3026": 148, "31": [82, 127, 200], "310": [209, 210], "31622777": 17, "319": 50, "32": [33, 50, 56, 59, 82, 84, 96, 126, 127, 135, 136, 137, 142, 159, 168, 198, 199, 204], "321": [110, 111, 114, 115], "32x32": [30, 33], "33": [56, 59, 84, 127, 142], "33333333": 16, "336": [44, 50], "34": [41, 50, 56, 59, 82, 127, 200, 204], "342": [110, 111, 114, 115], "345": [110, 111, 112, 113, 114, 115, 193], "35": [28, 50, 56, 59, 127], "352": [23, 50], "3567": [144, 148], "357": [46, 49, 50], "36": [37, 39, 127], "3679": [61, 66, 116], "37": 125, "372": 82, "375": 147, "3750": 146, "378": [32, 50], "38344152": 189, "38629436": 226, "389056": 225, "392": [24, 50], "393": [23, 50], "3935": 116, "3d": [72, 79, 97, 100, 104, 127, 137, 152, 155, 160], "3x3": [50, 194], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 36, 41, 42, 50, 51, 57, 59, 70, 71, 72, 74, 77, 78, 79, 82, 84, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 174, 178, 179, 181, 184, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 215, 221, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266], "40": [25, 50], "400": 33, "4044": 144, "4076": 145, "4096": [20, 48], "41421356": 9, "416": [40, 50], "41666667": 16, "41808962": 191, "419974": 69, "4199743": 123, "42": [82, 187, 194], "421": [110, 111, 114, 115], "423": [110, 111, 112, 113], "42718872": 17, "4278": 50, "4284": 50, "4286": 144, "43": [198, 200], "4323": 116, "4375": 146, "43758721": 189, "44": [36, 50], "4472136": 11, "4495": [152, 155], "45": [82, 107, 264], "4545": 129, "47112767": 220, "48": [40, 84, 142], "4979": 116, "4x4": 266, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 48, 50, 51, 53, 54, 55, 56, 57, 59, 62, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 93, 94, 95, 98, 99, 106, 108, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 165, 166, 180, 184, 187, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 218, 219, 227, 228, 229, 230, 231, 236, 239, 240, 241, 242, 245, 247, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "50": [42, 50, 84, 142, 180, 198, 200, 262, 263, 265, 268], "5000": [144, 146, 148], "5108": 148, "512": [28, 38, 50], "52359878": 219, "53": [82, 199], "543": [110, 111, 112, 113, 114, 115, 193], "54308063": 223, "544": [46, 50], "545": 205, "5455": 129, "549": [36, 50], "557": [42, 50], "563": [110, 111, 114, 115], "57": 82, "57079633": [218, 219], "57366333": 192, "586": [25, 50], "587g": 262, "5th": [20, 48], "6": [8, 16, 20, 30, 33, 41, 42, 48, 57, 58, 70, 71, 72, 74, 79, 82, 84, 95, 111, 115, 125, 126, 127, 130, 131, 132, 133, 140, 142, 144, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 165, 166, 172, 180, 184, 187, 193, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 227, 228, 229, 236, 239, 240, 241, 242, 245, 250, 251, 256, 258, 259, 260, 261, 262, 264, 266], "60": [37, 50], "6052": 148, "6065": 116, "608": [49, 50], "61": [21, 33, 50], "6124": [150, 151, 152, 153, 154, 155, 156], "62": [49, 50, 82], "62686041": 233, "630": 50, "6321": [61, 116], "63245553": 17, "64": [39, 43, 50, 56, 59, 82], "645": 50, "64589411": 189, "654": [110, 111, 112, 113, 114, 115, 193], "657": [110, 111, 114, 115], "6590": [68, 122], "6652": 122, "66666667": 16, "6667": 144, "667": [47, 50], "6682": 144, "669": [39, 50], "67": 200, "672": [41, 50], "67326": 120, "6733": 66, "678": [110, 111, 112, 113, 114, 115], "68811989": 191, "689": [38, 50], "69314718": 226, "7": [15, 43, 57, 70, 71, 72, 74, 79, 82, 84, 85, 86, 95, 117, 120, 121, 123, 125, 126, 127, 132, 133, 140, 142, 144, 145, 147, 151, 152, 154, 155, 158, 162, 163, 165, 166, 187, 190, 193, 196, 198, 199, 200, 204, 206, 208, 225, 228, 236, 239, 240, 241, 254, 258, 259, 260, 261, 262, 264, 266], "70": 5, "7001": 145, "706": [33, 50], "70710678": [11, 232], "7147": 148, "7182818": 225, "726791": 50, "7311": [68, 121, 122], "739": [27, 50], "74": 200, "75": [84, 142, 147, 171], "7581": 66, "76159416": 238, "7616": [69, 123], "76219569": 223, "7635": 120, "770": 50, "772": 205, "778": 50, "78357324": 191, "78539816": 220, "79172504": 189, "797": [41, 50], "7x7": 48, "8": [14, 18, 37, 40, 51, 56, 57, 59, 70, 71, 72, 74, 79, 82, 84, 85, 95, 96, 97, 117, 120, 121, 123, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 147, 151, 152, 154, 155, 158, 159, 160, 162, 163, 165, 166, 174, 175, 176, 177, 178, 179, 187, 190, 197, 198, 199, 200, 204, 205, 207, 208, 224, 228, 236, 239, 240, 241, 258, 259, 260, 261, 262, 264, 266], "80": 5, "8005": 145, "808": [37, 50], "817": [24, 50], "818": 50, "8182": 129, "82": 82, "833": 50, "84": [30, 32, 33], "840": [21, 50], "8413": [62, 117], "847": [28, 50], "848": [45, 50], "8584": 120, "86": 50, "863": [44, 50], "864": [39, 50], "876": [110, 111, 114, 115, 193], "8808": [68, 121, 122], "887": 205, "891773": 189, "89442719": 11, "9": [0, 1, 3, 5, 18, 50, 71, 74, 82, 84, 95, 125, 126, 127, 132, 140, 142, 144, 151, 152, 154, 158, 162, 163, 165, 171, 172, 174, 175, 176, 177, 178, 179, 181, 187, 190, 193, 196, 200, 204, 205, 206, 208, 234, 235, 258, 259, 260, 261, 262, 264], "90709145": 192, "9091": 129, "9120": 148, "9163": 148, "94": 35, "9486833": 17, "949e": [209, 210], "9526": 67, "9545": 117, "96366276": 189, "9640": 123, "96402758": 238, "978": 50, "984": [25, 50], "99": 179, "9957": 148, "99734545": 192, "999": [0, 174, 175, 176, 177, 178], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 43, 44, 45, 46, 47, 53, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 84, 85, 86, 90, 91, 93, 94, 106, 129, 130, 131, 132, 133, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264], "As": 192, "Be": 0, "By": [0, 2, 3, 7, 35, 36, 37, 38, 39, 40, 41, 42, 54, 107, 168, 178, 184, 189, 190, 191, 193, 258, 268], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 59, 61, 62, 64, 65, 66, 67, 69, 82, 84, 106, 110, 111, 114, 115, 120, 125, 126, 127, 140, 142, 150, 151, 152, 153, 154, 155, 168, 170, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 248, 250, 252, 254, 255, 268], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 51, 53, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 79, 82, 84, 91, 93, 96, 97, 106, 107, 110, 111, 125, 126, 127, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 174, 175, 179, 180, 186, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 265, 266], "In": [3, 7, 16, 70, 71, 72, 145, 148, 183, 184, 185, 257, 268], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 53, 55, 56, 57, 58, 59, 79, 82, 106, 107, 117, 119, 123, 135, 136, 137, 140, 141, 144, 145, 146, 147, 148, 158, 159, 160, 168, 169, 170, 171, 177, 179, 180, 181, 184, 192, 196, 197, 198, 201, 202, 203, 205, 206, 227, 229, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "Its": [18, 194], "Near": 16, "No": 74, "Not": 141, "One": [31, 268], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "There": 251, "These": [4, 7, 8, 11, 14, 17, 19, 50, 129, 130, 131, 132, 133, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 180, 187, 194, 268], "To": [3, 50, 170, 191, 194, 209, 210, 247, 268], "With": [3, 74, 258, 268], "_": [14, 55, 56, 58, 59, 61, 62, 64, 65, 66, 67, 69, 84, 106, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 171, 172, 174, 175, 176, 177, 179, 181, 198, 199, 200, 204, 239, 240, 259, 260, 261, 263, 264, 265], "_1": [11, 55, 56, 57, 58, 59, 82, 140, 204, 243, 245, 256], "_2": [11, 55, 56, 57, 58, 59, 82, 140, 204, 243, 245, 256], "__call__": [1, 53], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 43, 48, 51, 52, 53, 54, 55, 56, 57, 58, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 195, 257, 258], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 169, "__setattr__": 53, "_activ": 68, "_arraylik": [187, 208, 210, 213, 215], "_arraylikeint": 248, "_arrayorscalar": [52, 54, 187, 195, 242], "_base_dtyp": [207, 209, 212, 214], "_c": 260, "_decai": 177, "_fanmod": [110, 111], "_grad_en": [183, 185], "_i": [11, 15, 68, 82, 122, 147, 150, 156, 161, 164, 198, 199, 201, 202, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 250, 252, 255, 256], "_in": [110, 111, 114, 115], "_j": [68, 122, 161, 164, 204, 228, 236, 240, 241], "_k": 253, "_left": 106, "_make_lay": 43, "_modul": 53, "_n": [11, 55, 56, 57, 58, 59, 243, 245, 256], "_numpyarrai": 187, "_out": [110, 111, 114, 115, 250, 254], "_p": 15, "_pad": 248, "_paddingstr": [125, 126, 127, 135, 136, 137], "_paramet": 53, "_reductiontyp": [85, 86, 87, 89, 90, 144, 145, 146, 147, 148], "_right": 106, "_scalar": [108, 112, 113, 114, 115, 187, 207, 221], "_shapelik": [51, 94, 156, 187, 190, 212, 214, 251, 252, 255], "_size": [95, 96, 97], "_slope": 118, "_statedict": 169, "_t": [178, 179], "_tensor": [52, 54, 208, 242], "_tensorop": 195, "_u": 16, "_v": 16, "_valu": [221, 248], "_width": 248, "a_i": [201, 202, 205], "aaai": 50, "ab": 216, "abc": [2, 169], "abil": [7, 268], "about": [7, 51], "abov": [7, 183, 185, 192, 208, 211], "absolut": [14, 15, 87, 176, 217], "abstract": [2, 3, 168, 169, 170, 171, 179, 181], "abstractmethod": 169, "acceler": [50, 120, 150, 151, 152, 171, 177, 179, 181], "accept": [141, 189, 195], "access": [0, 2, 3, 4, 5, 52, 54, 55, 56, 57, 58, 59, 251], "accord": [106, 125, 126, 127, 140, 142, 145, 148, 172, 173, 174, 175, 176, 177, 178, 240], "accordingli": 10, "account": [14, 16, 17], "accumul": [171, 172, 173, 196, 197, 201, 202, 203, 206], "accuraci": 50, "achiev": [50, 70, 71, 72, 95, 158, 159, 160, 177, 263, 265], "across": [0, 52, 56, 59, 94, 95, 96, 97, 114, 115, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 187, 189, 190, 191, 192, 193, 194, 209, 210, 228, 241], "act": 175, "activ": [7, 20, 34, 35, 39, 40, 43, 48, 50, 55, 59, 61, 62, 64, 65, 66, 67, 68, 69, 75, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 148, 150, 151, 152, 156, 227, 229], "actual": [54, 144, 145, 147, 148, 195, 261], "ad": [53, 55, 56, 57, 58, 59, 70, 71, 72, 82, 84, 85, 86, 91, 93, 94, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 186, 255, 268], "adadelta": 182, "adagrad": [172, 182], "adam": [175, 176, 177, 178, 182], "adamax": 182, "adamw": 182, "adapt": [20, 22, 30, 43, 48, 95, 96, 97, 158, 159, 160, 172, 173, 174, 177, 178, 179, 180], "adaptive_avg_pool1d": [81, 101, 158], "adaptive_avg_pool2d": [81, 101, 159], "adaptive_avg_pool3d": [81, 101, 160], "adaptiveavgpool1d": [139, 167], "adaptiveavgpool2d": [20, 34, 43, 48, 139, 167], "adaptiveavgpool3d": [139, 167], "add": [4, 53, 55, 56, 59, 82, 84, 125, 126, 127, 140, 142, 156, 169, 171, 174, 179, 181, 184, 216, 248, 255], "add_modul": [53, 59], "add_param_group": 169, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 56, 59, 82, 84, 91, 93, 140, 142, 150, 151, 152, 153, 154, 155, 171, 177, 184, 194, 196, 253], "addition": 177, "address": [145, 148, 174, 175, 178], "adjust": [27, 95, 96, 97, 129, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 170, 174, 178, 179, 180, 245, 256], "advanc": [3, 16, 39, 50, 56, 59, 70, 71, 72, 95, 96, 97, 158, 159, 160, 168, 171], "advantag": [28, 185], "affect": [183, 249, 252, 257], "affin": [135, 136, 137, 150, 151, 152, 153, 154, 155, 156, 264], "after": [14, 20, 34, 48, 54, 55, 56, 57, 58, 59, 79, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 175, 185, 195, 196, 197, 201, 202, 203, 205, 206, 248, 258], "afterward": 185, "aggreg": [204, 250, 254], "aim": [4, 7], "al": [23, 50], "alex": 50, "alexnet": [29, 48, 50], "algebra": [7, 8, 211], "algorithm": [7, 14, 16, 17, 169, 170, 194], "align": [18, 106, 199, 200], "align_corn": 106, "all": [0, 3, 4, 7, 17, 53, 55, 56, 57, 58, 59, 71, 72, 95, 96, 97, 99, 100, 103, 104, 106, 118, 119, 127, 136, 137, 158, 159, 160, 162, 163, 166, 168, 169, 170, 171, 174, 179, 180, 181, 205, 227, 228, 229, 236, 239, 241, 243, 244, 245, 250, 252, 253, 254, 256, 259, 260, 268], "allevi": [50, 61], "alloc": [209, 210], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 50, 54, 55, 56, 57, 58, 59, 61, 64, 65, 68, 72, 74, 107, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 168, 172, 173, 184, 207, 212, 214, 215, 240, 242, 247, 257, 258, 268], "along": [68, 106, 122, 199, 200, 204, 227, 228, 229, 236, 239, 241, 243, 245, 247, 250, 253, 254, 255, 256, 263, 265], "alongsid": 52, "alpha": [61, 64, 66, 75, 116, 120, 129, 171, 179], "alpha_dropout": [80, 81, 129], "alphadropout": [134, 139], "alphadropoutmodel": 129, "alreadi": 186, "also": [51, 61, 62, 64, 65, 66, 67, 69, 82, 84, 106, 177, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], "alter": [59, 251], "altern": [1, 117, 172, 200], "alwai": [54, 249, 262, 263, 265], "among": 24, "amount": [70, 71, 72, 98, 99, 100, 102, 103, 104, 177], "amsgrad": [174, 175], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 51, 53, 55, 56, 57, 58, 59, 62, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 96, 97, 106, 107, 114, 115, 116, 121, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 174, 177, 179, 185, 186, 187, 195, 200, 208, 211, 221, 228, 236, 241, 243, 250, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "analog": [250, 254], "analysi": [4, 125, 126, 127, 155, 161, 163, 164, 166], "andrew": 50, "angl": [107, 264], "ani": [0, 1, 2, 3, 14, 16, 21, 49, 52, 53, 54, 55, 57, 58, 61, 62, 64, 65, 66, 67, 69, 75, 76, 82, 84, 91, 93, 121, 156, 168, 169, 183, 185, 186, 192, 195, 207, 208, 209, 211, 212, 213, 214, 215, 227, 229, 240, 242, 243, 244, 245, 248, 250, 253, 254, 255, 256, 257, 268], "anoth": [58, 206, 213, 215, 258, 268], "api": [4, 158, 159, 160, 268], "appear": 169, "append": [56, 58, 59], "appli": [2, 4, 5, 7, 14, 20, 34, 48, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 175, 176, 177, 178, 200, 248, 250, 257, 260, 262, 263, 264, 265, 266, 268], "applic": [4, 16, 27, 28, 70, 93, 125, 126, 127, 140, 142, 194, 207, 214, 248, 266], "approach": [3, 26, 59, 175], "appropri": [16, 53, 57, 59, 125, 126, 127, 129, 130, 131, 145, 162, 163, 183, 185], "approx": 66, "approxim": [16, 62, 117, 162, 165], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 50, 52, 53, 54, 55, 56, 57, 58, 59, 68, 70, 71, 72, 74, 82, 84, 96, 97, 106, 110, 111, 113, 114, 115, 122, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 174, 175, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 217, 221, 225, 227, 228, 229, 230, 231, 236, 239, 240, 243, 247, 250, 251, 254, 257, 258, 259, 261, 262, 266, 268], "arang": 216, "arbitrari": [56, 141, 209, 210, 221, 226, 228, 232, 234, 236, 240, 241], "arcco": 216, "arch": 186, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 62, 119, 140, 141, 168, 186], "arcsin": 216, "arctan": 216, "area": 106, "arg": [53, 141, 186, 209], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 59, 141, 189, 209, 240], "around": [11, 107, 123], "arr": [187, 243, 245, 253, 256], "arrai": [7, 52, 54, 184, 187, 195, 200, 208, 213, 215, 242, 249, 250, 258, 268], "art": 50, "artifici": 50, "arxiv": 50, "asarrai": 187, "asgd": 182, "aspect": 266, "assign": [53, 55, 57, 59, 106, 145, 148], "assist": [22, 23, 24], "associ": [57, 58], "assum": [0, 1, 169, 170, 183], "attempt": [55, 59], "attent": [58, 82], "attribut": 53, "audio": 125, "augment": [3, 4, 107, 194, 250, 254, 257, 261, 262, 263, 264, 265, 268], "autodiff": 7, "autograd": 168, "automat": [4, 7, 54, 55, 56, 57, 58, 168, 189, 190, 191, 193, 195, 209, 210, 215, 247, 258], "auxiliari": [22, 23, 24, 52], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 43, 48, 52, 95, 96, 97, 98, 99, 100, 106, 147, 158, 159, 160, 161, 162, 163, 171, 172, 174, 179, 228], "avg_pool": [161, 162, 163], "avg_pool1d": [81, 101], "avg_pool2d": [81, 101], "avg_pool3d": [81, 101], "avgpool": [20, 34, 43, 48], "avgpool1d": [139, 167], "avgpool1dmodel": 161, "avgpool2d": [139, 167], "avgpool2dmodel": 162, "avgpool3d": [139, 167], "avgpool3dmodel": 163, "avoid": [2, 3, 16, 57, 185], "ax": [8, 184, 227, 228, 229, 236, 240, 241, 250, 252, 254], "axi": [68, 122, 199, 200, 227, 228, 229, 236, 241, 243, 245, 247, 248, 250, 252, 253, 254, 255, 256, 263, 265], "b": [8, 18, 82, 84, 113, 125, 126, 127, 140, 142, 184, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 243, 245, 253, 256, 262], "b_i": [201, 202, 205], "back": [106, 162, 163, 186, 199, 204, 250, 254], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 185, 191, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 225, 227, 229, 242, 248, 250, 254, 258], "backward": [7, 52, 54, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 195, 258], "balanc": 146, "bar": 171, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 43, 50, 53, 55, 56, 57, 58, 74, 82, 95, 96, 97, 129, 145, 146, 158, 159, 160, 168, 169, 170, 171, 175, 179, 180, 181, 196, 197, 201, 202, 203, 205, 206, 215, 225, 226, 227, 229, 240, 247, 248, 261, 262, 263, 264, 265], "basic": [7, 20, 48, 51, 70, 71, 72, 95, 96, 97, 110, 111, 114, 115, 135, 136, 137, 158, 159, 160, 259, 260, 261, 262, 263, 264, 265, 266], "basicblock": [34, 38, 41], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 34, 70, 71, 72, 74, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 125, 126, 127, 135, 136, 137, 140, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 178, 200, 259, 260, 261, 262, 264, 266], "batch_norm": [81, 92, 150, 151, 152], "batch_norm1": 59, "batch_norm2": 59, "batch_siz": [1, 2, 3], "batchnorm": [135, 136, 137], "batchnorm1d": [135, 139, 157], "batchnorm1dmodel": 150, "batchnorm2d": [34, 59, 136, 139, 157], "batchnorm2dmodel": 151, "batchnorm3d": [137, 139, 157], "batchnorm3dmodel": 152, "bceloss": [139, 149], "becaus": [2, 190], "becom": [15, 53, 172, 180], "befor": [14, 34, 51, 54, 171, 177, 185, 192, 248, 260, 268], "begin": [1, 15, 61, 64, 65, 66, 116, 118, 119, 120, 146, 147, 148, 161, 162, 163, 164, 165, 166, 178, 180, 184, 194, 201, 202, 204, 217, 221, 227, 229, 231, 248], "behav": [146, 239], "behavior": [50, 56, 59, 183, 194, 200, 210, 268], "being": [58, 107, 129, 130, 131, 132, 133, 178, 183, 185, 243, 245, 256], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 200, 208, 211], "benchmark": 5, "benefici": 59, "benefit": [61, 168, 177, 187], "bernoulli": [129, 130, 131, 132, 133], "best": [110, 111, 114, 115], "beta": [150, 151, 152, 153, 154, 155, 156, 174, 175, 176, 177, 178], "beta1": [174, 175, 176, 177, 178], "beta2": [174, 175, 176, 177, 178], "beta_1": [174, 175, 176, 177, 178], "beta_2": [174, 175, 176, 177, 178], "better": [13, 48, 50, 62, 110, 111, 114, 115, 153, 154, 155, 168, 175, 177, 179, 260], "between": [53, 70, 71, 72, 74, 82, 87, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 144, 145, 146, 147, 148, 171, 179, 180, 181, 194, 196, 197, 200, 203, 206, 207, 241, 262, 263, 265, 266], "beyond": [7, 56], "bia": [70, 71, 72, 82, 84, 91, 93, 94, 125, 126, 127, 135, 136, 137, 140, 142, 150, 151, 152, 153, 154, 155, 156, 174, 175, 176, 177, 178], "bias": [125, 126, 127, 142, 156, 168], "bias1": 57, "bias2": 57, "bilinear": [81, 83, 106, 139, 143], "bilinearmodel": 140, "binari": [67, 85, 121, 129, 130, 131, 132, 133, 144], "binary_cross_entropi": [81, 88], "block": [26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 74, 125, 126, 127, 135, 136, 137, 185], "block1": [51, 168], "block2": [51, 168], "blue": 262, "bmatrix": 204, "bn": [135, 136, 137], "bn1": 34, "bn_affin": [135, 136, 137], "bool": [1, 5, 19, 22, 23, 24, 51, 53, 54, 75, 76, 77, 78, 79, 91, 93, 106, 125, 126, 127, 135, 136, 137, 140, 142, 150, 151, 152, 153, 154, 155, 156, 174, 175, 179, 183, 189, 190, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 227, 228, 229, 236, 241, 242, 258], "both": [70, 84, 96, 98, 102, 117, 125, 126, 135, 159, 161, 162, 164, 165, 198, 199, 200, 204, 208, 247, 266], "bottleneck": [34, 35, 36, 37, 39, 40, 42], "bottom": 106, "bound": [111, 113, 115, 180, 193], "box": 4, "branch": [22, 23, 24, 50], "break": 168, "brief": 268, "bright": 268, "broadcast": [132, 133, 228, 236, 241, 251, 255], "buffer": [171, 177, 179, 181], "build": [7, 28, 35, 36, 37, 38, 39, 40, 41, 42, 50, 53, 56, 59, 168, 268], "built": [3, 7, 35, 39, 40, 59, 168], "burg": 5, "c": [5, 74, 77, 78, 79, 86, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 132, 133, 145, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 184, 245, 256, 260], "c_": [125, 126, 127], "c_in": [70, 71, 72, 135, 136, 137], "c_out": [70, 71, 72], "calcul": [0, 1, 7, 8, 54, 172, 173, 176, 177, 178, 185, 190, 195], "calculu": [9, 16], "call": [1, 53, 183, 186, 196, 197, 200, 201, 202, 203, 205, 206], "callabl": [169, 186, 257], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 51, 52, 54, 55, 56, 57, 58, 59, 64, 70, 71, 72, 107, 117, 118, 123, 125, 126, 127, 153, 154, 155, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 187, 193, 194, 195, 200, 209, 210, 211, 212, 214, 215, 228, 236, 241, 245, 247, 248, 250, 251, 254, 255, 256, 257, 258, 261, 263, 264, 265, 268], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 207, 208, 211, 212, 213, 214, 215], "captur": [74, 125, 126, 127, 140], "care": 185, "cartesian": 247, "case": [3, 15, 30, 61, 64, 65, 66, 116, 118, 119, 120, 146, 147, 148, 161, 162, 163, 164, 165, 166, 168, 173, 178, 180, 184, 201, 202, 217, 221, 227, 229, 231, 248, 268], "categori": [35, 36, 37, 38, 39, 40, 41, 42], "caus": [3, 16, 171, 179, 181], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 61, 62, 64, 66, 67, 70, 71, 72, 82, 84, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 114, 115, 117, 121, 129, 140, 142, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 180, 198, 199, 200, 203, 205], "center": [107, 123, 179, 259, 268], "centercrop": [267, 268], "central": 187, "certain": [10, 62, 82, 140, 174, 175, 183, 227, 229], "chain": [13, 14, 59, 257, 268], "challeng": 50, "cham": 50, "chanc": [262, 263, 265], "chang": [87, 146, 180, 184, 185, 186, 249, 251, 255, 262, 268], "channel": [30, 31, 32, 33, 43, 70, 71, 72, 74, 77, 78, 79, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 125, 126, 127, 132, 133, 135, 136, 137, 150, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 260, 262, 266], "check": [183, 259, 261], "checkpoint": 170, "choic": 247, "choleski": 12, "chosen": 129, "christian": 50, "christoph": 5, "clariti": 187, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 68, 86, 90, 168, 170, 186, 208, 211, 242, 268], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 67, 68, 85, 86, 90, 121, 122, 144, 145, 148], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 43, 48], "cleaner": [1, 185, 200], "clear": [54, 195, 209, 210], "clearli": 187, "clf_in_featur": 30, "clf_layer": 30, "clip": [107, 180, 216], "clockwis": 107, "close": [13, 16, 120, 144, 179], "closer": 116, "closur": [169, 170], "cnn": 50, "co": [216, 232], "code": [14, 55, 57, 59, 183, 185, 187, 194], "coeffici": [18, 106, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "col": 74, "collect": [4, 8, 50, 55, 56, 58, 59, 170], "color": [262, 268], "colorjitt": 268, "column": [10, 11, 13, 17, 18, 19, 51, 74, 211, 245, 247], "com": 5, "combin": [1, 3, 25, 26, 27, 50, 56, 59, 61, 62, 117, 135, 136, 137, 145, 168, 177, 178, 228, 236, 241, 243, 268], "combined_dataset": [0, 1], "common": [74, 107, 170, 268], "commonli": [7, 62, 67, 68, 69, 70, 72, 82, 89, 91, 93, 107, 114, 115, 122, 127, 144, 147, 148, 161, 162, 163, 164, 165, 166, 184, 187, 212, 252, 258, 259, 260, 261, 263, 264, 265, 268], "compar": [48, 194, 253], "compat": [4, 8, 141, 156, 168, 184, 194, 258, 268], "complex": [2, 3, 7, 11, 28, 37, 40, 41, 51, 55, 56, 59, 65, 119, 164, 166, 168, 170, 268], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 53, 56, 170, 195, 268], "compos": [5, 125, 126, 127, 161, 162, 163, 164, 165, 166, 168, 268], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 50, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 82, 84, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 179, 183, 184, 185, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 248, 250, 254, 258, 268], "computation": [3, 16, 35], "compute_loss": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "concaten": [0, 70, 71, 72, 245, 246, 253, 256], "concept": [7, 16, 50], "condit": [9, 10, 13], "confer": 50, "config": 43, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 58, 135, 136, 137], "conjunct": [74, 148], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 48, 50, 84, 125, 126, 127, 142], "consecut": 43, "consid": [3, 13, 16, 59, 110, 111, 114, 115, 168, 180, 183, 209, 210, 268], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 52, 95, 96, 97, 158, 159, 160, 187, 192, 194, 248, 259, 266, 268], "consistent_tensor": 194, "consol": 51, "constant": [85, 86, 91, 93, 94, 109, 120, 144, 145, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 187, 248], "constant_pad": 248, "constraint": 1, "construct": [7, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 56, 168, 208, 250, 254], "constructor": [44, 45, 46, 47], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 43, 51, 53, 55, 56, 57, 58, 59, 68, 74, 82, 84, 85, 86, 90, 106, 144, 145, 148, 169, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 210, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247], "content": 107, "context": [183, 185], "contextmanag": 185, "contigu": 249, "continu": [118, 191], "contrast": [153, 154, 155, 268], "contribut": [106, 129, 130, 131, 132, 133, 161, 164, 165, 166, 171, 177, 239], "control": [116, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 194, 258, 268], "conv": [26, 135, 136, 137, 151, 152], "conv1": [31, 32, 33, 34, 59, 125, 126, 127, 161, 162, 163, 164, 165, 166], "conv1d": [73, 81, 128, 135, 139, 161, 164], "conv1dmodel": 125, "conv2": [31, 32, 33, 59, 125, 126, 127], "conv2d": [34, 56, 59, 73, 81, 128, 136, 139, 151, 162, 165, 168], "conv2dmodel": 126, "conv3d": [73, 81, 128, 137, 139, 152, 163, 166], "conv3dmodel": 127, "conv_bia": [135, 136, 137], "conv_config": 43, "conv_lay": [30, 56], "convblock": 168, "convbnrelu1d": [138, 139], "convbnrelu2d": [138, 139], "convbnrelu3d": [138, 139], "conveni": [4, 21, 49], "convent": 200, "converg": [16, 123, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 260], "convers": [145, 148, 262, 268], "convert": [5, 43, 52, 54, 68, 122, 195, 247, 257, 258, 262, 268], "convnetwork": 56, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 43, 48, 49, 50, 56, 70, 71, 72, 74, 125, 126, 127, 135, 136, 137, 162, 163, 165, 166, 248], "convolv": [70, 71, 72, 125, 126, 127], "coordin": 247, "core": [0, 1, 2, 3, 53, 168, 169, 195, 268], "corinna": 5, "corner": [106, 259, 261], "correct": [55, 145, 148, 174, 175, 176, 177, 178, 258], "correctli": [16, 53, 55, 56, 57, 58, 59, 145, 148, 194], "correspond": [0, 1, 2, 5, 11, 55, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 84, 106, 119, 122, 140, 142, 150, 151, 152, 153, 154, 155, 162, 163, 171, 179, 181, 198, 199, 201, 202, 205, 225, 226, 232, 234, 245, 248, 250, 254, 256], "cort": 5, "cosh": [216, 233, 238], "cosin": [218, 222, 223, 232], "cost": 50, "could": 53, "count": [50, 51, 243], "counterclockwis": [107, 264], "cover": [8, 70, 71, 72], "coverag": [95, 96, 97], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 59, 168, 184, 186, 194, 207, 211, 212, 213, 214, 215, 247, 253, 257, 268], "creation": [56, 59, 268], "criterion": [144, 145, 146, 147, 148], "critic": [16, 170, 194], "crop": [259, 261, 268], "cross": [85, 86, 144, 145], "cross_entropi": [81, 88], "crossentropyloss": [139, 149], "cube": 216, "cumul": [62, 117], "current": [53, 171, 174, 180, 183], "custom": [4, 7, 20, 21, 27, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 52, 55, 56, 57, 58, 59, 107, 116, 118, 135, 136, 137, 168, 194, 211], "custom_config": 43, "custom_lenet": 30, "customiz": 268, "custommodul": 52, "customnetwork": 55, "customparametermodel": [57, 58], "cvpr": 50, "d": [50, 72, 79, 97, 100, 104, 137, 152, 155, 156, 160, 163, 166, 184, 208, 264], "d_": [72, 97, 100, 104, 127, 160, 163, 166], "d_1": 156, "d_2": 156, "d_n": 156, "d_out": [72, 100, 104], "dampen": [171, 179, 181], "data": [4, 5, 7, 14, 52, 54, 58, 69, 70, 72, 74, 78, 79, 84, 107, 119, 123, 125, 126, 127, 135, 136, 137, 142, 155, 161, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 194, 195, 196, 197, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 248, 249, 250, 251, 252, 254, 257, 258, 261, 262, 263, 264, 265, 268], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 107, 173, 185, 257, 259, 268], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 204, "debug": [51, 59, 183, 192, 268], "decai": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 186, "decoupl": [172, 173, 175, 176, 177, 178], "decreas": [174, 175, 180], "deep": [1, 3, 4, 7, 26, 35, 36, 37, 39, 40, 50, 91, 117, 120, 168, 194, 257, 258, 268], "deeper": [7, 23, 25, 28, 41, 50, 120], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 68, 70, 71, 72, 75, 76, 77, 78, 79, 85, 86, 87, 89, 90, 91, 93, 94, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 169, 170, 177, 183, 189, 190, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 227, 228, 229, 236, 240, 241, 242, 243, 245, 247, 248, 250, 253, 256, 258, 262, 263, 265], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 55, 56, 57, 58, 59, 117, 144, 145, 146, 147, 148, 161, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 190, 191, 205, 210, 221, 240, 257, 268], "definit": [7, 9, 135, 136, 137, 268], "degre": [107, 264, 268], "delai": 171, "delta": [68, 87, 122, 146, 172], "delta_": [68, 122], "demonstr": [7, 8, 50, 168, 187], "denomin": [91, 93, 94, 135, 136, 137, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 197], "denot": [14, 121, 125, 126, 127, 129, 130, 131, 132, 133, 240], "dens": [7, 173], "dense1": 7, "dense2": 7, "densiti": [62, 117], "depend": [7, 14, 15, 58, 85, 86, 87, 89, 90, 106, 125, 198, 208, 227, 229, 250, 254, 261, 262, 266], "depth": [56, 72, 79, 97, 100, 104, 127, 152, 155, 160, 163, 166], "depthwis": [70, 71, 72], "deriv": [16, 17, 68, 95, 96, 97, 117, 122, 123, 125, 126, 127, 140, 142, 186], "descend": 19, "descent": [7, 171, 181], "describ": [10, 11], "descript": 268, "deseri": 52, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 54, 56, 57, 58, 59, 61, 66, 120, 129, 168, 187, 268], "desir": [52, 95, 96, 97, 158, 159, 160, 240, 242], "destin": 53, "det": [8, 12], "det_a": 10, "detail": [7, 51, 170, 194, 200], "detect": 50, "determin": [0, 7, 8, 9, 10, 30, 95, 96, 97, 110, 111, 114, 115, 125, 126, 127, 158, 159, 160, 162, 163, 165, 166, 179, 183, 189, 190, 191, 193, 209, 210, 259, 261], "determinist": 107, "develop": [7, 168, 194, 268], "deviat": [110, 112, 114, 257, 260, 268], "diag": [16, 216], "diagon": [16, 17, 19, 208, 211, 239], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 49, 53, 55, 57, 141, 169], "dictionari": [30, 53, 54, 55, 57, 59, 169], "differ": [0, 14, 22, 30, 56, 59, 68, 82, 106, 122, 140, 147, 170, 184, 192, 194, 206, 215, 241, 252, 268], "differenti": [7, 9, 18, 117, 168, 189, 190, 191, 193, 195, 207, 209, 210, 212, 214], "digit": [5, 33, 50], "dilat": [70, 71, 72, 125, 126, 127, 135, 136, 137], "dilation_height": 74, "dilation_width": 74, "dim": [145, 148], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 43, 48, 54, 68, 82, 84, 91, 93, 94, 96, 97, 106, 122, 125, 126, 127, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 187, 189, 193, 195, 199, 209, 227, 228, 229, 236, 239, 240, 241, 243, 245, 248, 250, 252, 253, 254, 255, 256, 259, 261, 266], "dimension": [14, 16, 17, 19, 70, 71, 72, 98, 99, 100, 102, 103, 104, 125, 126, 127, 131, 132, 133, 150, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 184, 199, 200, 204, 208, 225, 228, 236, 239, 241, 244, 249, 250, 252, 254], "diminish": 173, "direct": [11, 144, 145, 146, 147, 148, 171, 179, 180, 181], "directli": [55, 56, 57, 58, 106, 172, 173, 175, 176, 177, 178, 192, 194, 242, 268], "directori": [3, 4, 5], "disabl": [183, 185], "discontinu": 231, "discrep": [144, 145, 148], "discret": [190, 194], "disk": 3, "displai": [21, 49, 51], "distribut": [62, 68, 106, 110, 111, 112, 113, 114, 115, 117, 122, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 145, 148, 161, 162, 163, 189, 190, 191, 193, 194, 228, 236, 239, 241, 253, 260, 262, 263, 264, 265], "div": 216, "divers": [107, 263, 265, 268], "diversifi": 268, "divid": [1, 16, 56, 59, 68, 70, 71, 72, 122, 144, 145, 146, 147, 148, 197, 260], "divis": [7, 16, 70, 71, 72, 129, 130, 131, 132, 133, 172, 173, 174, 175, 176, 177, 178, 179, 197], "do": [16, 18, 52, 55, 56, 57, 58, 75, 76, 77, 78, 168, 178, 183, 215, 239, 248], "document": [4, 7, 50, 170, 187, 194], "doe": [7, 14, 15, 16, 17, 19, 51, 52, 55, 56, 57, 58, 59, 115, 174, 175, 180, 183, 185, 189, 190, 191, 192, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 251], "doesn": 185, "doi": 50, "domain": 4, "don": 185, "dot": [11, 14, 55, 56, 57, 58, 59, 156, 164, 165, 166, 199, 204, 216, 243, 245, 253, 256], "down": [3, 168, 266], "download": [4, 5], "drawback": 61, "drawn": [189, 190, 191, 193, 194, 264], "drop": [129, 130, 131, 132, 133], "dropout": [20, 24, 43, 48, 50, 62, 75, 77, 78, 79, 129, 131, 132, 133], "dropout1d": [80, 81, 134, 139], "dropout1dmodel": 131, "dropout2d": [80, 81, 134, 139], "dropout3d": [80, 81, 134, 139], "dropout_prob": 24, "dropoutmodel": 130, "dtype": [52, 54, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 258], "due": [14, 16, 70, 71, 119, 264], "dummi": 51, "duplic": [55, 57], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 68, 75, 76, 77, 78, 79, 91, 93, 107, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 195, 196, 227, 228, 229, 236, 241, 258, 261, 264, 268], "dy": [64, 118], "dynam": [0, 2, 3, 53, 56, 57, 58, 59, 95, 96, 97, 156, 158, 159, 160, 173, 178, 183], "dynamicnetwork": 56, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 52, 68, 121, 122, 129, 145, 169, 172, 179, 180, 211, 223, 225, 226, 233, 238, 239, 243, 262], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 43, 48, 50, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 84, 91, 93, 95, 96, 97, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268], "earli": 178, "eas": [4, 7], "easi": [2, 3, 4, 7, 54, 55, 57], "easier": [3, 55, 56, 59], "easili": [4, 54, 58, 268], "eccv": 50, "economi": 19, "edg": 248, "educ": [7, 50], "effect": [50, 55, 56, 57, 58, 59, 68, 70, 71, 72, 74, 116, 117, 119, 121, 122, 123, 150, 151, 152, 153, 154, 155, 156, 183, 184, 185, 245, 256], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 50, 74, 145, 168, 185], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [84, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 242, 247], "element": [0, 16, 17, 24, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 147, 148, 156, 161, 162, 163, 164, 165, 166, 184, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 248, 250, 251, 252, 254], "elementwise_affin": 156, "elsewher": [164, 165, 166, 211], "elu": [63, 81, 124, 139], "elumodel": 116, "empti": [53, 59, 216], "empty_lik": 216, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 50, 53, 54, 55, 56, 57, 58, 119, 125, 126, 127, 140, 142, 168, 170, 183, 185, 189, 190, 191, 193, 195, 257], "encapsul": [168, 195], "encod": [145, 148], "encourag": [130, 131, 132, 133, 144, 145, 148, 174], "end": [15, 61, 64, 65, 66, 116, 118, 119, 120, 146, 147, 148, 161, 162, 163, 164, 165, 166, 178, 180, 201, 202, 204, 207, 217, 221, 227, 229, 231, 243, 248, 268], "enforc": [53, 55, 57], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 48, 49, 55, 57, 268], "ensur": [3, 5, 16, 17, 18, 52, 53, 54, 55, 56, 57, 58, 59, 68, 95, 96, 97, 118, 122, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 205, 228, 236, 241, 248, 258, 259, 260, 261, 262, 266, 268], "enter": 185, "entir": [3, 77, 78, 79, 132, 133, 194], "entri": [30, 252], "entropi": [85, 86, 144, 145], "environ": 7, "ep": [85, 86, 91, 93, 94, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179], "epoch": [1, 3], "epsilon": [144, 145, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179], "equal": [14, 106, 161, 162, 163, 259, 261], "equat": [11, 16, 18], "equival": [200, 239, 249], "error": [0, 3, 11, 13, 53, 56, 57, 58, 59, 62, 87, 89, 117, 144, 145, 146, 147, 168, 169, 185, 187], "especi": [3, 55, 57, 58, 121, 184, 185, 187, 192, 257, 258, 262, 268], "essenti": [1, 3, 7, 8, 14, 16, 26, 71, 74, 168, 192, 194, 227, 257, 258, 262, 268], "estim": [147, 174, 175, 176, 177, 178, 179], "et": [23, 50], "eta": 180, "eta_": 180, "etc": [144, 258], "euclidean": 15, "european": 50, "evalu": [53, 91, 93, 129, 130, 131, 132, 133, 150, 151, 152, 153, 154, 155, 268], "even": [172, 185, 207, 208, 211, 212, 213, 214, 215], "evenli": [95, 96, 97, 158, 159, 160, 207], "everi": [1, 268], "everywher": 231, "exact": [53, 56, 240, 262, 264], "exactli": 59, "exampl": [4, 200], "excel": 25, "except": [0, 231, 243, 245, 256], "exclus": [190, 193, 207], "exdb": 5, "execut": [56, 185], "exist": [18, 55, 57, 59, 186, 243], "exit": 185, "exp": [61, 66, 67, 69, 116, 120, 216], "expand": [4, 74, 250, 254], "expect": [9, 56, 59, 129, 130, 131, 132, 133, 156, 168, 187], "expens": 3, "experi": [7, 192, 194, 268], "experiment": 194, "explan": [14, 16, 20, 43, 48, 95, 96, 97, 158, 159, 160, 171], "explicit": 59, "explicitli": [55, 57], "explod": [120, 150, 151, 152], "explor": [168, 194], "expon": [14, 205], "exponenti": [61, 66, 68, 116, 120, 122, 129, 174, 175, 176, 177, 178, 225], "extend": 4, "extens": 170, "extern": [4, 7], "extract": [22, 26, 50, 74, 127, 161, 163, 186, 208, 227, 229, 259, 261], "extractor": [30, 31, 32, 33], "extrem": [16, 35, 50], "ey": 216, "f": [1, 4, 5, 7, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 122], "facilit": [22, 55, 59, 68, 122, 125, 126, 127, 168, 170, 260, 268], "factor": [24, 61, 70, 71, 72, 74, 114, 115, 171, 178, 179, 180, 181, 187], "failur": [55, 56, 57, 58, 168], "fals": [1, 5, 19, 51, 52, 53, 54, 75, 76, 77, 78, 79, 91, 93, 106, 108, 110, 111, 112, 113, 114, 115, 125, 126, 127, 140, 142, 174, 175, 179, 183, 189, 190, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 227, 228, 229, 236, 241, 242, 258], "famili": 186, "fan": [110, 111, 114, 115], "fan_in": [110, 111], "fan_out": [110, 111], "fast": 178, "faster": [173, 177, 185], "fc": [26, 34, 56, 126, 127, 161, 162, 163, 164, 165, 166], "fc1": [32, 33, 51, 55, 59, 117, 119, 120, 121, 123, 142], "fc2": [32, 33, 51, 55, 59, 117, 119, 120, 121, 123, 142], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 43, 48, 49, 50, 82, 84, 91, 127, 130, 131, 132, 133, 135, 136, 137, 140, 142, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 173], "feature_extractor": 30, "fed": [3, 268], "feed": [3, 195, 268], "feedforward": 51, "fergu": [48, 50], "fetch": 0, "few": 51, "fewer": 1, "field": [5, 50], "file": [3, 186], "fill": [108, 112, 113, 189, 190, 191, 193, 212, 213, 214, 215], "filter": [48, 50, 70, 71, 72, 74, 126, 127, 135, 136, 137], "filter_height": 74, "filter_s": 74, "filter_width": 74, "final": [22, 23, 24, 25, 26, 27, 28, 34, 55, 56, 57, 58, 59, 257, 268], "find": [18, 227, 229], "fine": 268, "finish": 185, "first": [5, 11, 30, 34, 48, 51, 56, 57, 82, 140, 174, 175, 176, 177, 178, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 247, 256, 257, 258, 268], "fit": 168, "fix": [56, 248], "flatten": [26, 30, 59, 74, 204, 246, 249, 250], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 43, 55, 56, 57, 58, 59, 168, 170, 187, 212, 213, 258, 268], "flip": [263, 265, 268], "float": [2, 5, 24, 52, 54, 61, 64, 75, 76, 77, 78, 79, 85, 86, 87, 91, 93, 94, 107, 108, 112, 113, 114, 115, 116, 118, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 193, 195, 207, 210, 221, 242, 260, 262, 263, 264, 265], "float32": [52, 54, 195, 207, 208, 211, 212, 214, 242, 258], "float64": [215, 242, 258], "flow": [25, 26, 34, 50, 59, 115, 117, 121, 123, 125, 126, 127, 140, 142, 183], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 43, 48, 51, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 227, 229, 247, 251, 259, 260, 261, 262, 263, 264, 265, 268], "form": [17, 204, 247, 250, 254, 268], "format": [2, 3, 5, 51, 145, 148, 258], "formul": 62, "formula": [11, 19, 68, 95, 96, 97, 122, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 200, 241, 262], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 43, 48, 51, 52, 53, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "found": 7, "foundat": [26, 34, 53, 168, 170, 195], "four": 248, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 95, 96, 97, 98, 99, 100, 102, 103, 104, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260], "frame": 79, "framework": [4, 7, 50, 145, 148, 150, 151, 152, 153, 154, 155, 169, 170, 268], "frequent": [145, 148], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 82, 91, 93, 106, 108, 110, 111, 112, 113, 114, 115, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 200, 201, 202, 206, 208, 227, 228, 229, 236, 241, 243, 245, 247, 250, 252, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 268], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 43, 48, 50, 84, 142, 194], "func": 186, "function": [3, 4, 5, 7, 8, 34, 53, 55, 56, 57, 58, 59, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 168, 170, 187, 194, 257, 268], "fundament": [7, 84, 142, 258], "further": [7, 194, 228, 236, 241], "futur": 141, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 129, 169, 172, 179, 243, 262], "g_": 173, "g_t": 179, "gain": [114, 115], "gamma": [150, 151, 152, 153, 154, 155, 156], "gaussian": [62, 117], "gelu": [63, 81, 124, 139], "gelunetwork": 117, "gener": [16, 51, 107, 129, 130, 131, 132, 133, 154, 175, 177, 178, 185, 189, 190, 191, 192, 193, 194, 199, 207, 209, 210, 247, 261, 262, 263, 265, 268], "get": 5, "give": [7, 171, 179], "given": [10, 11, 14, 16, 17, 19, 74, 144, 145, 148, 169, 183, 213, 215, 257, 262, 263, 265, 268], "global": [0, 34, 183, 185, 192, 194], "go": [23, 50], "goal": [144, 145, 148], "googlenet": [23, 50], "gpu": 50, "grad": [52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 82, 84, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 169, 170, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 265, 266], "grad_output": 14, "gradient": [7, 8, 25, 26, 50, 52, 54, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 189, 190, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 258], "graph": [7, 115, 195, 207, 208, 211, 212, 213, 214, 215, 258], "grayscal": [5, 30, 31, 32, 33, 262, 268], "greater": 221, "green": 262, "grid": 247, "groundbreak": 50, "group": [56, 70, 71, 72, 125, 126, 127, 135, 136, 137, 169, 170], "group1": 56, "group2": 56, "guarante": 192, "h": [71, 72, 74, 78, 79, 96, 97, 99, 100, 103, 104, 106, 107, 136, 137, 151, 152, 154, 155, 159, 160, 163, 166, 259, 261], "h_": [71, 72, 96, 97, 99, 100, 103, 104, 106, 126, 127, 159, 160, 162, 163, 165, 166], "h_out": [71, 72, 99, 100, 103, 104], "h_stack": 245, "ha": [0, 11, 51, 59, 70, 71, 72, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 169, 170, 200, 239, 243, 245, 253, 256, 262], "half": 234, "hand": 18, "handl": [0, 3, 7, 16, 53, 55, 56, 57, 58, 59, 145, 148, 168, 170, 185], "handwritten": [5, 33], "hardwar": 7, "hat": [174, 175, 176, 177, 178], "have": [0, 1, 10, 11, 13, 16, 17, 19, 54, 56, 58, 59, 71, 72, 115, 168, 211, 212, 213, 214, 215, 227, 229, 243, 245, 247, 252, 253, 256, 260, 266], "he": 50, "height": [71, 72, 74, 78, 79, 96, 97, 99, 100, 103, 104, 106, 107, 126, 127, 151, 152, 154, 155, 159, 160, 162, 163, 165, 166, 259, 261, 266], "help": [7, 24, 64, 66, 79, 116, 118, 120, 123, 150, 151, 152, 161, 162, 164, 165, 171, 174, 175, 177, 183, 184, 185, 187], "henc": 251, "here": [3, 9, 53, 82, 168, 170, 184, 185, 187, 194, 257, 258, 268], "hidden": [20, 48, 56], "hidden_s": 56, "hierarch": [56, 59, 168], "hierarchi": 126, "hierarchicalnetwork": 56, "high": [7, 42, 190, 193], "higher": [145, 148, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 199, 200, 204, 225], "highest": 190, "highli": 50, "highlight": [164, 165, 166], "hint": 187, "histor": 173, "histori": [189, 190, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215], "hold": [55, 56, 57, 58], "horizont": [245, 253, 263, 268], "hot": [145, 148], "how": [2, 3, 7, 56, 59, 168, 187, 268], "howev": [52, 115], "hstack": 246, "http": 5, "huber": [87, 146], "huber_loss": [81, 88], "huberloss": [139, 149], "huberregressionmodel": 146, "hue": 268, "hyperbol": [69, 123, 223, 233, 238], "hyperparamet": [169, 171], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "ideal": [7, 59], "ident": [13, 14, 50, 107, 139, 143, 192, 194, 211, 251], "identifi": 57, "idx": [2, 3], "ieee": 50, "ii": 239, "ij": [68, 106, 122, 198, 199, 200, 204, 247], "ik": [198, 199, 200], "ill": [10, 16], "ilsvrc": 50, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 71, 93, 107, 126, 136, 154, 247, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 50, "imbal": [145, 148], "impact": [50, 177], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 34, 48, 50, 53, 74, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 245, 256, 262], "impli": [125, 126], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "improp": [56, 59, 194], "improv": [23, 24, 25, 26, 28, 48, 50, 91, 107, 117, 120, 123, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 261, 264, 268], "imread": 3, "in1_featur": [82, 140], "in2_featur": [82, 140], "in_channel": [56, 59, 125, 126, 127, 135, 136, 137, 151, 152, 161, 162, 163, 164, 165, 166, 168], "in_featur": [55, 56, 59, 84, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 153, 156, 161, 162, 163, 164, 165, 166], "incept": [23, 24, 25, 26, 27, 28, 29, 50], "inception_resnet_v1": 50, "inception_resnet_v2": 50, "inception_v1": 50, "inception_v3": 50, "inception_v4": 50, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 43, 48, 51, 53, 54, 56, 58, 59, 106, 135, 136, 137, 168, 169, 170, 177, 187, 194, 200, 248], "inclus": [54, 57, 190, 193], "incom": [84, 142], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 117], "increas": [70, 71, 72, 74, 107, 173, 180, 184, 245, 256, 262, 263, 265, 268], "independ": [56, 70, 71, 72, 129, 130, 131, 132, 133, 156, 200, 210, 260, 262, 264, 266], "index": [0, 2, 5, 184, 207, 208, 211, 247, 251], "indexerror": 0, "indic": [0, 1, 43, 51, 54, 56, 58, 59, 86, 90, 145, 148, 161, 183, 195, 259, 261], "individu": [3, 56, 59, 146, 156, 170, 173, 180], "induc": [66, 120], "inf": 237, "infer": [56, 59, 185], "infin": [17, 19, 176], "inform": [7, 50, 51, 52, 170, 172, 185], "infti": [15, 178], "inherit": [1, 171, 179, 181], "init": 109, "initi": [1, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 54, 55, 56, 57, 58, 59, 108, 110, 111, 112, 113, 114, 115, 125, 126, 127, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 156, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 192, 193, 194, 207, 211, 212, 213, 214, 215, 242], "initial_accumulator_valu": 173, "inner": [7, 198, 216], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 48, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 194, 195, 196, 198, 199, 200, 204, 208, 210, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "input1": 140, "input2": 140, "input_": [20, 48, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 135, 136, 137, 158, 159, 160], "input_1": 82, "input_2": 82, "input_data": [116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166], "input_s": [56, 58, 122, 145, 148], "input_shap": 51, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 43, 52, 55, 56, 57, 58, 59, 68, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 259, 260, 261, 262, 263, 264, 265, 266], "insid": [3, 183, 185], "insight": [7, 50], "inspect": [53, 54, 59, 169], "instabl": [16, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 49, 51, 53, 54, 55, 57, 58, 59, 93, 153, 154, 155, 156, 169, 186, 242, 250, 254, 268], "instance_norm": [81, 92, 153, 154, 155], "instancenorm1d": [139, 157], "instancenorm1dmodel": 153, "instancenorm2d": [139, 157], "instancenorm3d": [139, 157], "instanti": [2, 186], "instead": [7, 51, 55, 56, 57, 58, 59, 110, 111, 114, 115, 174, 175, 176, 185, 187, 209, 210], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 68, 70, 71, 72, 74, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 122, 125, 126, 127, 135, 136, 137, 140, 142, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 180, 186, 189, 190, 191, 192, 193, 195, 207, 208, 209, 211, 212, 214, 221, 227, 228, 229, 236, 240, 241, 242, 243, 248, 250, 251, 252, 253, 254, 255, 259, 261, 266], "integ": [1, 3, 14, 34, 43, 70, 71, 72, 96, 97, 125, 126, 127, 156, 159, 160, 162, 163, 164, 165, 166, 187, 190, 191, 193, 194, 209, 212, 214, 228, 236, 240, 241, 248, 250, 251, 254], "integr": [1, 2, 4, 5, 8, 50, 54, 56, 58, 59, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 140, 142, 161, 162, 163, 164, 165, 166], "intellig": 50, "intend": [52, 57, 58], "intens": [16, 35, 260, 262], "intent": 187, "interact": [82, 140, 168, 194], "interfac": [2, 53, 56, 170], "interfer": [183, 185], "intermedi": 16, "intern": [35, 36, 37, 38, 39, 40, 41, 42, 55, 56, 57, 58, 59, 145, 148, 168, 259, 260, 261, 262, 263, 264, 265, 266], "interpol": [81, 105, 266], "interpret": [50, 68, 122, 187, 243], "interv": [189, 193, 207], "introduc": [23, 24, 50, 65, 117, 119, 121, 123, 129, 130, 131, 132, 133, 261, 264, 268], "introspect": 59, "intuit": [7, 55, 57, 168, 268], "inv": 12, "inv_a": 13, "invari": [162, 165], "invers": [7, 10, 13, 14, 16, 173, 218, 219, 220], "invert": [10, 13, 14, 18], "invok": 186, "involv": [9, 10, 11, 13, 16, 17, 19, 61, 62, 64, 65, 66, 67, 69, 82, 84, 106, 125, 126, 127, 140, 142, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 225, 226, 227, 229, 232, 234, 247, 248, 250, 254], "is_leaf": 195, "issu": [3, 120, 150, 151, 152, 174, 175], "item": 147, "iter": [0, 1, 2, 3, 52, 53, 56, 58, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 207], "ith": [68, 122], "its": [4, 14, 16, 20, 35, 36, 37, 38, 39, 40, 41, 42, 48, 50, 51, 52, 55, 56, 57, 58, 70, 71, 72, 74, 107, 115, 117, 119, 164, 165, 166, 168, 169, 172, 180, 183, 184, 185, 186, 207, 209, 210, 214, 227, 229, 242, 251, 260, 263, 265, 268], "itself": [9, 14, 55, 56, 57, 58], "j": [5, 68, 122, 150, 151, 152, 153, 154, 155, 161, 162, 164, 165, 247, 253, 259, 261], "jk": 199, "join": [3, 243], "json": 186, "k": [14, 70, 125, 145, 151, 152, 154, 155, 161, 164, 165, 198, 199, 208, 211, 243], "k_d": [72, 127, 163, 166], "k_h": [71, 72, 126, 127, 162, 163, 166], "k_w": [71, 72, 126, 127, 162, 163, 166], "kaim": [50, 110, 111, 114, 115], "kaiming_norm": 109, "kaiming_uniform": 109, "karen": 50, "keep": [53, 119, 172, 185, 251], "keep_grad": [54, 189, 190, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 258], "keep_var": 53, "keepdim": [227, 228, 229, 236, 241], "kei": [50, 53, 55, 57, 59, 169], "kept": [228, 236, 241], "kernel": [30, 31, 32, 33, 48, 70, 71, 72, 74, 95, 96, 97, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 158, 159, 160, 162, 163, 166], "kernel_s": [56, 59, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 151, 152, 161, 162, 163, 164, 165, 166], "keyerror": 53, "keyword": [21, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 141], "kj": [198, 200], "known": 50, "krizhevski": 50, "kroneck": [68, 122], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 141, 186], "l": [9, 16, 70, 77, 95, 98, 102, 129, 130, 131, 132, 133, 135, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158], "l2": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "l_": [70, 95, 98, 102, 125, 158, 161, 164], "l_out": [70, 98, 102], "label": [4, 5, 24, 144, 145, 148], "lambd": 171, "lambda": [11, 66, 120, 171, 175], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 125, 140, 161, 164], "larg": [0, 3, 16, 35, 36, 37, 40, 50, 146, 168, 171, 174, 175, 176, 179, 180, 181, 185], "larger": [55, 57, 70, 71, 72, 74, 171, 201, 248, 259, 261, 266], "largest": 227, "last": [1, 68, 94, 122, 199, 200, 243, 263, 265], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 55, 56, 59, 68, 84, 91, 93, 94, 110, 111, 114, 115, 122, 125, 126, 127, 135, 136, 137, 140, 141, 142, 148, 156, 161, 162, 163, 164, 165, 166, 168, 194, 248, 258], "layer1": [34, 186], "layer2": [34, 186], "layer3": 34, "layer4": 34, "layer_group": 56, "layer_norm": [81, 92, 156], "layer_sequ": [56, 59], "layernorm": [139, 157], "layernormmodel": 156, "lead": [56, 59, 117, 153, 154, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 194], "leaf": 195, "leaki": [64, 118], "leaky_relu": [63, 81, 118], "leakyrelu": [124, 139], "learn": [1, 3, 4, 5, 7, 14, 16, 48, 49, 50, 55, 56, 57, 58, 65, 68, 116, 118, 119, 122, 125, 126, 127, 130, 131, 132, 133, 140, 142, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 192, 257, 258, 268], "learnabl": [52, 53, 54, 91, 93, 94, 125, 126, 127, 135, 136, 137, 140, 142, 150, 151, 152, 153, 154, 155, 156, 168], "least": [16, 17, 19, 239], "lecun": [5, 50], "left": [14, 15, 16, 19, 62, 68, 117, 122, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 164, 165, 166, 259, 261], "leftarrow": 177, "len": [0, 1, 2, 3, 247], "lenet": [29, 31, 32, 33, 50], "lenet_1": 50, "lenet_4": 50, "lenet_5": 50, "length": [56, 70, 77, 95, 98, 102, 125, 141, 150, 153, 158, 161, 164, 248, 260], "leq": [146, 178, 205, 221], "lerp": 106, "less": [0, 61, 64, 87, 116, 118, 145, 146, 148, 221], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 50, 168], "librari": [3, 7, 8, 53, 168, 169, 170, 186, 187, 194, 195, 268], "lightweight": [7, 38], "like": [7, 26, 50, 52, 53, 56, 59, 70, 114, 115, 120, 129, 150, 151, 152, 153, 154, 155, 183, 184, 187, 242, 258, 268], "likelihood": [90, 145, 148], "limit": [51, 172, 221], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 34, 51, 55, 56, 57, 59, 61, 62, 64, 65, 66, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 140, 141, 144, 145, 146, 147, 148, 150, 153, 156, 161, 162, 163, 164, 165, 166, 186, 211], "linearli": 146, "list": [0, 1, 30, 34, 43, 51, 52, 54, 55, 56, 57, 58, 94, 141, 156, 169, 187, 189, 190, 191, 193, 195, 208, 209, 210, 212, 213, 214, 215, 240, 251, 252, 255, 257], "listdir": 3, "liter": [85, 86, 87, 89, 90, 106, 110, 111, 125, 126, 127, 135, 136, 137, 144, 145, 146, 147, 148, 247], "ln": 205, "load": [3, 4, 5, 52, 53, 54, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186], "load_state_dict": [53, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "loader": [1, 2, 3], "local": [50, 74, 125], "locat": 106, "log": [90, 144, 145, 148, 216], "log_softmax": 148, "logarithm": [205, 225, 226], "logic": [3, 158, 159, 160, 168, 169], "logit": [20, 48, 68, 122, 145], "logsoftmax": [145, 148], "long": [177, 240], "loop": [1, 56, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "loss": [7, 16, 55, 56, 57, 58, 59, 68, 85, 86, 87, 89, 90, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "low": [7, 26, 190, 193], "lower": [9, 113, 171, 179, 180, 181, 193], "lowest": 190, "lr": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 216, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "m": [43, 55, 56, 59, 162, 163, 165, 166, 174, 175, 176, 177, 178, 211], "m_": [174, 175, 176, 177, 178], "m_t": [177, 178], "machin": [3, 5, 7, 16, 174, 184, 192], "magnitud": [179, 180, 268], "mai": [3, 7, 11, 13, 16, 56, 58, 107, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 194, 262, 268], "main": [7, 17, 26, 56, 208, 211], "maintain": [16, 52, 53, 55, 56, 57, 59, 66, 110, 111, 114, 115, 116, 117, 120, 129, 130, 131, 132, 133, 150, 151, 152, 153, 154, 155, 174, 179, 259, 262, 266], "make": [1, 3, 7, 22, 26, 30, 50, 56, 59, 121, 145, 146, 156, 162, 165, 168, 173, 174, 175, 176, 184, 186, 194, 195, 200, 247, 257, 268], "manag": [7, 53, 55, 56, 57, 58, 59, 168, 170, 183, 185, 186, 194], "manhattan": 15, "mani": 51, "manipul": [7, 55, 57, 268], "manner": [56, 59], "manual": [85, 86, 90, 144, 145, 148, 185], "map": [50, 53, 67, 69, 121, 123], "mask": [52, 129, 130, 131, 132, 133], "match": [18, 53, 56, 59, 85, 87, 89, 94, 135, 136, 137, 169, 225, 250, 251, 254, 255, 260, 268], "math": [222, 232, 237], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 198, 199, 200, 204, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266], "mathcal": [110, 112, 114, 129, 130, 131, 132, 133, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156], "mathemat": [13, 135, 136, 137, 261, 263, 264, 265], "mathrm": 16, "matmul": 216, "matric": [8, 10, 11, 13, 16, 18, 19, 198, 199, 200, 211, 247], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 74, 82, 141, 142, 168, 198, 247], "matrix_pow": 12, "matthew": 50, "max": [15, 34, 43, 65, 102, 103, 104, 119, 164, 165, 166, 176, 201, 216, 221], "max_pool": [164, 165, 166], "max_pool1d": [81, 101], "max_pool2d": [81, 101], "max_pool3d": [81, 101], "max_valu": 221, "maxim": 3, "maximum": [15, 119, 164, 165, 166, 174, 176, 216, 221, 227, 264], "maxpool": [20, 34, 48], "maxpool1d": [139, 167], "maxpool1dmodel": 164, "maxpool2d": [34, 56, 59, 126, 139, 167], "maxpool2dmodel": 165, "maxpool3d": [127, 139, 167], "maxpool3dmodel": 166, "mean": [5, 17, 51, 52, 66, 70, 71, 72, 75, 85, 86, 87, 89, 90, 91, 93, 112, 116, 117, 118, 119, 120, 121, 123, 127, 129, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 174, 175, 176, 177, 178, 179, 183, 191, 216, 221, 225, 226, 227, 229, 232, 234, 236, 239, 240, 241, 257, 260, 268], "meaning": [59, 187], "measur": [144, 145, 147, 148], "mechan": [7, 58, 82], "membership": 144, "memori": [2, 3, 185, 209, 210], "meshgrid": 246, "method": [3, 7, 8, 13, 34, 55, 56, 57, 58, 59, 85, 86, 87, 89, 90, 110, 111, 114, 115, 144, 145, 146, 147, 148, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194], "middl": 184, "might": 168, "min": [202, 216, 221], "min_valu": 221, "mind": [0, 3, 7, 56, 59, 185], "mini": 1, "minim": [4, 7, 59, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 170], "minimalist": 7, "minimum": [216, 221, 229], "minu": 121, "mirror": [213, 215], "mismatch": [53, 168, 169], "miss": [53, 168], "mitig": [64, 116, 118, 120, 150, 151, 152], "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 79, 91, 93, 106, 110, 111, 129, 130, 131, 132, 133, 248], "model": [1, 3, 4, 7, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 68, 107, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 194, 257, 258, 268], "modern": 50, "modif": [59, 185], "modifi": [21, 49, 55, 56, 57, 58, 108, 110, 111, 112, 113, 114, 115, 129, 183, 185, 192, 245, 256], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 43, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 194, 258, 268], "modular": [3, 7, 50, 53, 56, 59, 168, 268], "moduledict": [56, 57, 59, 60], "modulelist": [58, 59, 60], "moment": [174, 175, 176, 177, 178], "momentum": [91, 93, 135, 136, 137, 150, 151, 152, 153, 154, 155, 171, 177, 179, 181], "momentum_decai": 177, "moor": 16, "more": [3, 4, 7, 11, 41, 55, 56, 59, 116, 130, 131, 132, 133, 168, 169, 170, 171, 172, 175, 176, 179, 180, 181, 191, 200, 239, 253, 268], "most": [8, 165, 258, 259, 268], "move": [171, 179], "mse": [87, 89, 146, 147], "mse_loss": [81, 88], "mseloss": [139, 149], "mu": [112, 150, 151, 152, 153, 154, 155, 156, 241], "mu_c": 260, "mu_i": [153, 154, 155], "much": 268, "mul": 216, "multi": [3, 4, 27, 50, 68, 86, 90, 122, 145, 148, 228, 236, 241], "multidimension": [189, 193, 209], "multipl": [1, 3, 7, 8, 14, 18, 20, 34, 57, 58, 59, 74, 106, 107, 129, 130, 131, 132, 133, 145, 148, 168, 184, 189, 190, 191, 193, 198, 203, 209, 210, 257, 262, 268], "multipli": [14, 58, 84, 142, 180, 203, 204], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 51, 53, 55, 56, 57, 58, 59, 94, 129, 130, 131, 132, 133, 148, 169, 185, 239, 243, 245, 248, 250, 251, 253, 254, 256, 259, 260, 261, 262, 263, 265], "my_simple_model": 186, "mymodel": [53, 54, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "myoptim": [169, 170], "n": [14, 15, 50, 55, 56, 59, 70, 71, 72, 74, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 112, 114, 125, 126, 127, 132, 133, 135, 136, 137, 140, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 211, 228, 239, 241], "n1": 15, "nabla_": [172, 173, 174, 175, 176, 177, 178, 180], "nabla_t": 178, "nadam": 182, "name": [50, 51, 53, 55, 57, 59, 186, 187], "nan": [17, 19], "natur": [16, 50, 125, 140, 161, 164, 205, 225, 226], "ndarrai": [52, 54, 187, 195, 208, 210, 213, 215, 242], "ndim": [17, 19, 54, 195], "ne": 14, "nearest": 106, "necessari": [4, 5, 16, 185, 245, 256], "need": [2, 4, 56, 57, 58, 68, 140, 168, 185, 209, 210, 257, 258, 268], "neg": [14, 16, 19, 61, 90, 107, 116, 118, 119, 120, 145, 148, 180, 243], "negative_slop": [64, 118], "neglect": 58, "neighbor": 106, "neq": 15, "nest": [51, 56, 59, 168], "nestedmodel": 51, "nesterov": 177, "net": [48, 50], "network": [3, 4, 7, 20, 21, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 91, 107, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 179, 181, 193, 194, 195, 207, 212, 214, 227, 229, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "neural": [3, 4, 7, 20, 21, 26, 33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 91, 107, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 179, 181, 193, 194, 195, 207, 212, 214, 227, 229, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "neuralnetwork": 119, "neuron": 118, "never": 262, "new": [53, 54, 61, 62, 64, 65, 66, 67, 69, 82, 84, 106, 110, 111, 112, 113, 114, 115, 169, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 248, 250, 251, 253, 254, 255, 256], "next": [59, 257], "nll": 90, "nll_loss": [81, 88], "nllloss": [139, 149], "nn": [5, 7, 20, 22, 26, 30, 43, 48, 51, 60, 63, 73, 80, 83, 88, 92, 101, 105, 109, 124, 128, 134, 138, 139, 143, 149, 157, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 258, 268], "no_grad": 183, "node": 195, "nois": [19, 194], "non": [11, 14, 16, 19, 58, 62, 64, 65, 110, 111, 116, 117, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 174, 175, 185, 205, 221], "none": [0, 1, 2, 5, 22, 26, 30, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266], "norm": [8, 12, 176], "normal": [5, 34, 62, 66, 68, 69, 91, 93, 94, 109, 110, 114, 117, 120, 122, 129, 135, 136, 137, 150, 151, 152, 153, 154, 155, 156, 179, 191, 194, 257, 267, 268], "normalized_shap": [94, 156], "note": [70, 129], "noth": [75, 76, 77, 78], "notimplementederror": [2, 53, 169], "notin": 221, "nov": 50, "np": [52, 54, 145, 148, 187, 195, 200, 207, 208, 211, 212, 214, 215, 226, 242, 258], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 122, 145, 148], "num_featur": [59, 135, 136, 137, 150, 151, 152, 153, 154, 155], "num_paramet": 58, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 56, 58, 59, 70, 71, 72, 74, 77, 78, 79, 82, 84, 86, 90, 91, 93, 95, 96, 97, 106, 107, 110, 111, 114, 115, 121, 125, 126, 127, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 171, 189, 192, 193, 195, 205, 207, 209, 211, 227, 228, 229, 240, 241, 243, 245, 248, 250, 251, 252, 254, 256, 260, 262, 263, 265, 268], "numer": [13, 16, 85, 86, 91, 93, 94, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 187, 197, 207, 212, 214], "numpi": [7, 52, 54, 145, 148, 187, 195, 200, 208, 211, 226, 239, 242, 248, 250, 254, 258, 268], "o": [3, 163, 166, 212, 213], "object": [1, 3, 8, 50, 53, 57, 58, 147, 168, 185, 196, 197, 201, 202, 203, 206, 242], "observ": 174, "obtain": 1, "occur": [107, 185, 186, 243], "occurr": 14, "odot": [129, 130, 131, 132, 133], "off": 183, "offer": [4, 7, 168, 170, 194, 268], "offset": 211, "often": [14, 70, 71, 72, 74, 145, 148, 207, 214, 258, 262, 266, 268], "older": 177, "onc": 185, "one": [0, 58, 59, 68, 70, 84, 98, 102, 120, 121, 122, 125, 131, 135, 136, 137, 145, 148, 150, 153, 161, 164, 169, 184, 187, 191, 206, 213, 227, 229, 244, 249, 253, 258], "ones": [82, 84, 125, 126, 127, 142, 150, 151, 152, 153, 154, 155, 156, 168, 211, 213, 216], "ones_lik": 216, "onli": [7, 51, 106, 119, 129, 130, 131, 132, 133, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 164, 165, 166, 180, 183, 207, 221, 227, 229, 239, 248, 249, 251, 252], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 34, 52, 53, 56, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 79, 82, 84, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 225, 226, 227, 228, 229, 232, 234, 236, 239, 241, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 266], "operatornam": [14, 16], "opposit": 171, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 52, 54, 57, 58, 74, 125, 126, 127, 168, 185], "optimizer_st": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 68, 71, 72, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 169, 171, 179, 181, 189, 190, 191, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 227, 228, 229, 236, 240, 241, 242, 243, 247, 250, 252, 253, 258, 262, 263, 265], "ord": 15, "order": [1, 3, 15, 19, 55, 56, 57, 58, 59, 240, 257], "ordered_dict": 59, "ordereddict": [53, 55, 56, 59], "organ": [55, 56, 57, 59, 186], "orient": 268, "origin": [24, 33, 75, 107, 123, 248, 249, 250, 251, 254, 255, 266], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [171, 179, 181], "other": [2, 3, 7, 13, 24, 28, 30, 33, 52, 53, 56, 59, 110, 111, 129, 168, 169, 183, 185, 194, 195, 207, 209, 212, 214, 239, 247, 268], "otherwis": [35, 36, 37, 38, 39, 40, 41, 42, 61, 64, 65, 66, 68, 116, 118, 119, 120, 122, 130, 131, 132, 133, 146, 161, 162, 163, 164, 165, 166, 169, 180, 186, 201, 202, 227, 229], "otim": [16, 82, 140], "out": [0, 3, 4, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 110, 111, 114, 115, 125, 126, 127, 129, 130, 131, 132, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], "out_channel": [30, 56, 59, 125, 126, 127, 135, 136, 137, 151, 152, 161, 162, 163, 164, 165, 166, 168], "out_featur": [55, 56, 59, 82, 84, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 153, 156, 161, 162, 163, 164, 165, 166], "outcom": [262, 263, 265], "outer": 216, "outlier": [87, 146], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 84, 95, 96, 97, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 247, 248, 250, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "output_height": 74, "output_lay": [56, 59], "output_s": [56, 95, 96, 97, 158, 159, 160], "output_width": 74, "outsid": 0, "over": [0, 1, 2, 3, 8, 48, 53, 56, 58, 68, 95, 96, 97, 122, 125, 126, 127, 145, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 189, 193, 227, 228, 229, 236, 239, 241, 262, 263, 265], "overdetermin": 16, "overfit": [1, 20, 48, 76, 79, 130, 131, 132, 133, 171, 174, 179, 181], "overrid": [2, 3], "overridden": [53, 169], "overwrit": [55, 57], "own": [4, 55, 56, 57, 58, 70, 71, 72, 115, 168, 260], "p": [15, 16, 54, 57, 58, 75, 76, 77, 78, 79, 129, 130, 131, 132, 133, 161, 164, 165, 262, 263, 265, 268], "p_d": [163, 166], "p_h": [162, 163, 166], "p_w": [162, 163, 166], "packag": [2, 3, 4, 8, 50, 168, 170, 186, 192, 194, 258, 268], "pad": [30, 56, 59, 70, 71, 72, 74, 95, 96, 97, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 246], "pad_after_dim1": 248, "pad_after_dim2": 248, "pad_before_dim1": 248, "pad_before_dim2": 248, "pad_width": 248, "padding_height": 74, "padding_width": 74, "pair": 82, "paper": 23, "parallel": [1, 3, 50], "param": [53, 54, 57, 58, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "param1": 53, "param_dict": 57, "param_group": [169, 170], "param_groups_setup": 169, "param_list": 58, "param_s": 186, "paramet": [0, 2, 7, 31, 32, 33, 50, 53, 168, 169, 170, 187, 194, 268], "parameterdict": 60, "parameterlist": 60, "parent": 168, "part": [52, 53, 115, 168, 183, 185, 194, 207, 208, 211, 212, 213, 214, 215, 258, 268], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "particip": [54, 258], "particular": [55, 57], "particularli": [7, 16, 56, 57, 58, 59, 68, 84, 122, 135, 136, 137, 142, 145, 148, 153, 154, 155, 156, 175, 183, 186, 257], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 106, 116, 117, 118, 119, 120, 121, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 168, 187, 195, 228, 236, 239, 240, 241, 243, 245, 249, 251, 252, 256, 258, 268], "past": [171, 172, 174, 179], "patch": [74, 162], "path": [3, 5], "pattern": [50, 65, 119, 125, 126, 127], "penal": [171, 179, 181], "penalti": [172, 173, 174, 175, 176, 177, 178], "penros": 16, "per": [1, 95, 153, 154, 155, 156, 158], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 42, 43, 48, 50, 53, 54, 58, 62, 70, 71, 72, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 183, 185, 192, 194, 196, 197, 200, 203, 206, 225, 227, 229, 236, 240, 257, 259, 261, 266, 268], "permut": 240, "persist": [52, 189, 190, 191, 193, 209, 210], "perturb": [11, 18, 19, 268], "phi": [62, 117], "pi": [62, 117, 222, 232, 237], "pil": [258, 268], "pinv": 12, "pioneer": 50, "pipelin": [5, 194, 257, 258, 260], "pixel": [5, 106, 260, 262], "place": [108, 110, 111, 112, 113, 114, 115], "placehold": [53, 141], "plai": [187, 194], "plot": 247, "point": [4, 107, 183], "pool": [20, 30, 31, 32, 33, 34, 43, 48, 50, 95, 96, 97, 98, 99, 100, 102, 103, 104, 126, 127, 158, 159, 160, 161, 162, 163, 164, 165, 166, 227, 229], "pool1": 59, "pool2": 59, "poorli": 13, "popul": 53, "popular": [4, 50], "portion": 268, "pose": 16, "posit": [1, 9, 14, 53, 59, 107, 116, 118, 119, 120, 161, 162, 163, 164, 165, 166, 180, 184, 205, 250, 254, 261], "possibl": [7, 268], "potenti": [16, 141, 179, 252], "power": [7, 14, 50, 184, 185, 216, 257, 258, 268], "pp": 50, "practic": [16, 145, 148], "practition": 268, "pre": [35, 39, 40], "preactbottleneck": [35, 39, 40], "preced": [54, 195], "preconfigur": [27, 28], "predefin": [4, 50, 56, 120], "predict": [144, 145, 147, 148], "prefix": [53, 186], "prepar": [3, 184, 248, 250, 254, 258, 268], "prepend": 53, "preprint": 50, "preprocess": [3, 4, 74, 107, 194, 257, 258, 268], "present": [144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 162], "preserv": [75, 107, 129, 207, 208, 211, 212, 213, 214, 215, 228, 236, 241], "preset": 4, "prevent": [1, 55, 56, 57, 58, 59, 76, 79, 130, 131, 132, 133, 144, 145, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185], "previou": [171, 180, 185], "previous": 174, "primari": [7, 187], "primarili": 59, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266], "probabilist": 194, "probabl": [24, 62, 68, 75, 76, 77, 78, 79, 85, 117, 122, 129, 130, 131, 132, 133, 144, 145, 148, 262, 263, 265, 268], "problem": [16, 17, 19, 50, 64, 116, 118, 178], "proceed": 50, "process": [2, 3, 4, 14, 17, 19, 20, 27, 48, 50, 58, 70, 71, 72, 93, 107, 120, 123, 125, 127, 135, 136, 137, 140, 150, 151, 152, 153, 154, 155, 156, 161, 163, 164, 166, 171, 187, 247, 258, 259, 260, 261, 266, 268], "produc": [20, 48, 51, 95, 96, 97, 125, 126, 127, 158, 159, 160, 192, 194], "product": [7, 17, 19, 121, 140, 156, 168, 198, 199, 203, 204], "program": [183, 194], "progress": 173, "project": [17, 19], "projector": 16, "promin": [161, 163, 164, 165, 166], "promot": [59, 145, 148, 168], "propag": [10, 11, 13, 16, 17, 18, 19, 53, 59, 82, 84, 106, 162, 163, 179, 180, 198, 199, 200, 204, 227, 229, 247, 248, 251, 255], "properli": [0, 58, 68, 122, 168], "properti": [8, 10, 13, 14, 62, 66, 75, 117, 120, 129, 173, 178], "proport": [5, 241], "proportion": 266, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 43, 49, 50, 53, 55, 56, 57, 58, 62, 84, 96, 97, 107, 144, 145, 146, 148, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 179, 181, 183, 185, 187, 192, 194, 195, 200, 207, 213, 227, 229, 240, 242, 250, 252, 254, 268], "pseudo": [13, 16], "purpos": [189, 193, 207, 212, 214], "python": 187, "pytorch": 242, "q": 17, "qr": 12, "quad": [16, 144, 145, 146, 147, 148, 164, 165, 166, 196, 197, 201, 202, 203, 206, 259], "quadrat": 146, "quotient": 197, "r": [17, 262, 263, 264, 265], "r_t": 178, "radam": 182, "rais": [0, 1, 2, 53, 168, 169, 205], "rand": [188, 194], "randint": [188, 194], "randn": [20, 43, 48, 168, 188, 192, 194], "random": [1, 2, 3, 261, 262, 263, 264, 265, 268], "random_integ": 194, "random_tensor": 194, "randomcrop": [267, 268], "randomgrayscal": [267, 268], "randomhorizontalflip": [267, 268], "randomli": [1, 75, 76, 77, 78, 79, 107, 129, 130, 131, 132, 133, 261, 262, 263, 264, 265, 268], "randomnoisedataset": [0, 1, 2], "randomrot": [267, 268], "randomverticalflip": 267, "rang": [0, 1, 8, 42, 50, 58, 67, 69, 70, 71, 86, 90, 115, 121, 123, 171, 179, 181, 190, 218, 219, 221, 260, 264, 268], "rank": 16, "rate": [169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "rather": [57, 58, 175, 251], "ratio": 266, "ravel": 246, "raw": [68, 122, 145, 187], "re": [54, 185], "readabl": [55, 56, 57, 59, 168, 187], "readi": [3, 7, 50], "real": [16, 19, 121], "rearrang": 74, "receiv": [164, 165, 166, 248], "recent": 179, "recept": 50, "reciproc": [16, 216, 226, 234], "recognit": [33, 50, 126], "rectangular": 211, "rectif": 178, "rectifi": [64, 65, 118, 119, 178], "recurr": [56, 156], "recurs": [51, 53], "red": 262, "reduc": [20, 43, 48, 50, 150, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 177, 180, 185, 187, 227, 228, 229, 236, 241, 262], "reduct": [19, 85, 86, 87, 89, 90, 144, 145, 146, 147, 148, 227, 229], "reevalu": 169, "refer": [4, 7, 53, 194, 208, 211, 243], "reflect": 183, "regardless": [16, 249], "region": [72, 95, 96, 97, 106, 159, 160, 248, 259, 268], "regist": [52, 53, 54, 58, 168, 186], "register_buff": 52, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49], "register_paramet": 53, "registr": [53, 168], "registri": 186, "registry_path": 186, "regress": [4, 89, 146, 147], "regular": [16, 20, 24, 48, 79, 130, 131, 132, 133, 171, 172, 173, 176, 177, 178, 179, 181], "relat": [185, 211, 212], "relationship": 266, "relev": [106, 171, 179, 181], "reli": 185, "reliabl": 5, "reliant": [130, 131, 132, 133], "relu": [7, 20, 34, 43, 48, 50, 51, 55, 56, 57, 59, 61, 63, 64, 81, 110, 111, 114, 115, 116, 118, 124, 125, 126, 127, 135, 136, 137, 139, 140, 141, 142], "relu1": 59, "relu2": 59, "relu3": 59, "remain": [5, 52, 94, 129, 130, 131, 132, 133, 180], "rememb": 194, "remov": [186, 252], "rep": 254, "repeat": [246, 247, 254], "repetit": [250, 254], "replac": [194, 262], "repres": [13, 15, 19, 30, 53, 54, 59, 82, 84, 91, 93, 94, 125, 126, 127, 140, 142, 145, 148, 156, 169, 170, 171, 177, 178, 179, 180, 181, 187, 196, 197, 203, 206, 208, 228, 239, 240, 241, 247, 259, 261, 263, 264, 265, 266], "represent": [162, 165, 169], "reproduc": [189, 190, 191, 192, 193, 194, 268], "requir": [2, 3, 4, 7, 52, 55, 59, 61, 62, 64, 65, 66, 67, 69, 82, 84, 106, 115, 141, 145, 148, 168, 183, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 266], "requires_grad": [52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 82, 84, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258], "rescal": [85, 86, 90, 144, 145, 148], "research": 168, "reset": [54, 192, 195], "reshap": [7, 34, 84, 126, 127, 184, 187, 246, 249], "residu": [25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 50], "resili": 180, "resiz": [106, 257, 267, 268], "resnet": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 50], "resnet_1001": 50, "resnet_101": 50, "resnet_152": 50, "resnet_18": 50, "resnet_200": 50, "resnet_269": 50, "resnet_34": 50, "resnet_50": 50, "resourc": 185, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 43, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 221, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 247, 248, 250, 254, 262], "respons": [55, 170], "restor": 185, "restructur": 251, "result": [9, 13, 14, 16, 50, 53, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 84, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 122, 168, 169, 183, 185, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 268], "resum": 170, "retain": [54, 195, 207, 214, 227, 228, 229, 236, 241, 258], "retent": 258, "retriev": [0, 2, 55, 57, 58], "return": [0, 1, 2, 3, 5, 7, 26, 30, 34, 52, 53, 55, 56, 57, 58, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 257, 268], "reus": 258, "reusabl": [59, 168, 257], "revers": [7, 59, 240, 263, 265], "revert": 185, "revolution": 50, "rgb": [23, 24, 25, 27, 28], "rho": 172, "rho_": 178, "rho_t": 178, "right": [14, 15, 16, 18, 19, 62, 68, 117, 122, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 164, 165, 166, 259], "risk": 187, "rmsprop": 182, "rob": 50, "robust": [107, 129, 130, 131, 132, 133, 146, 168, 172, 261, 262, 264, 268], "role": [187, 194, 268], "root": [4, 5, 173, 179, 234], "rotat": [81, 105, 264, 268], "rotated_imag": 107, "rout": [164, 165, 166], "routin": 7, "row": [10, 11, 13, 18, 84, 211, 247, 256], "rprop": 182, "rule": [13, 14, 184, 196, 197, 201, 202, 203, 205, 206], "run": [7, 52, 91, 93, 135, 136, 137, 150, 151, 152, 153, 154, 155, 172, 185, 192, 194], "running_mean": [52, 91, 93, 150, 151, 152, 153, 154, 155], "running_var": [91, 93, 150, 151, 152, 153, 154, 155], "runtim": [56, 59, 168], "s_": 180, "s_d": [163, 166], "s_h": [162, 163, 166], "s_w": [162, 163, 166], "same": [10, 11, 13, 14, 18, 68, 75, 76, 77, 78, 79, 91, 93, 94, 96, 97, 107, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 141, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 180, 192, 194, 200, 210, 213, 215, 225, 227, 228, 229, 243, 245, 249, 251, 252, 253, 256, 260], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 95, 96, 97, 110, 111, 112, 113, 114, 115, 129, 130, 131, 132, 133, 140, 142, 145, 148, 156, 158, 159, 160, 191, 194, 259, 261, 263, 264, 265, 266], "satisfi": [9, 11, 18], "satur": [116, 268], "save": [2, 52, 54, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186], "scalabl": [3, 50, 168], "scalar": [10, 15, 85, 86, 87, 89, 90, 187], "scale": [11, 16, 27, 31, 32, 33, 35, 36, 37, 40, 50, 61, 66, 68, 91, 93, 94, 114, 115, 116, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 145, 150, 151, 152, 153, 154, 155, 156, 171, 173, 174, 175, 187, 194, 241, 266], "scenario": [57, 58, 156, 175, 176, 258, 262], "schedul": 171, "scientif": 184, "score": [68, 145], "scratch": 7, "script": 194, "seamless": [0, 1, 3, 4, 168, 194], "seamlessli": [3, 4, 8, 54, 56, 59, 168, 187, 268], "second": [11, 56, 57, 82, 140, 174, 175, 176, 177, 178, 184, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 245, 247, 265], "section": 200, "see": [7, 200], "seed": [188, 189, 190, 191, 193, 194, 268], "seen": 172, "select": [106, 164, 166, 236], "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 34, 43, 48, 51, 52, 53, 54, 55, 56, 57, 58, 66, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 247, 257, 258], "selu": [63, 75, 81, 124, 129, 139], "selunetwork": 120, "sensit": [87, 146, 150, 151, 152], "sentiment": 4, "separ": [0, 70, 71, 72, 153, 154, 155], "sequenc": [14, 55, 57, 70, 207, 243, 245, 248, 250, 253, 254, 256, 257], "sequenti": [20, 26, 30, 34, 43, 48, 51, 55, 56, 60, 70, 135, 136, 137, 141, 257, 268], "seri": [22, 31, 32, 70, 125, 135, 161, 164], "serial": [52, 53, 170], "serv": [3, 26, 34, 43, 53, 55, 56, 57, 58, 59, 168, 180, 258], "set": [3, 4, 5, 51, 54, 58, 70, 71, 72, 118, 119, 120, 125, 126, 127, 129, 132, 133, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 169, 174, 175, 179, 189, 190, 191, 192, 193, 194, 195, 207, 209, 210, 214, 215, 221, 227, 229, 242, 258, 262, 268], "setup": [4, 7], "sever": [16, 125, 126, 127, 161, 162, 163, 164, 165, 166, 185, 257, 268], "sgd": [7, 171, 178, 182], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 43, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 184, 187, 189, 190, 191, 193, 194, 195, 198, 209, 210, 211, 212, 213, 214, 215, 221, 226, 227, 228, 229, 232, 234, 236, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268], "shapelik": 190, "share": 50, "shift": [91, 93, 94, 150, 151, 152, 153, 154, 155, 156], "shorthand": 200, "should": [30, 52, 185, 189, 190, 191, 193, 209, 210, 218, 219, 239, 248, 257], "show": [183, 186], "showcas": 7, "shown": 192, "shrink": 172, "shuffl": [1, 2, 3], "side": [18, 56, 59, 70, 71, 72, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 161, 162, 163, 164, 165, 166, 185], "sigma": [16, 110, 112, 114, 121, 150, 151, 152, 153, 154, 155, 156, 240], "sigma_c": 260, "sigma_i": 16, "sigmoid": [63, 81, 110, 111, 114, 115, 124, 139, 144], "sigmoidnetwork": 121, "sign": [14, 146, 180, 216], "signal": [125, 126, 127, 135, 150, 153, 161, 162, 163, 164, 165, 166], "signific": 185, "significantli": [50, 257], "sim": [129, 130, 131, 132, 133], "similar": [7, 110, 111, 200, 226, 242, 248], "similarli": [19, 239], "simonyan": 50, "simpl": [3, 4, 7, 51, 59, 70, 71, 72, 82, 84, 98, 99, 100, 102, 103, 104, 117, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 198, 199, 204, 257], "simplebinaryclassificationmodel": 144, "simpleclassificationmodel": [145, 148], "simplegelumodel": 117, "simpleleakyrelumodel": 118, "simplemodel": [7, 51, 142, 186], "simpleregressionmodel": 147, "simplerelumodel": 119, "simpleselumodel": 120, "simplesigmoidmodel": 121, "simpletanhmodel": 123, "simpli": [183, 239, 240, 251], "simplic": [50, 119], "simplifi": [4, 31, 59, 135, 136, 137], "simul": [51, 268], "simultan": 107, "sin": [216, 222], "sinc": [14, 17, 55, 56, 57, 58, 70, 71, 72, 115, 183, 185, 191, 247, 268], "sine": [219, 232, 233], "singl": [0, 4, 14, 17, 19, 68, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 135, 136, 137, 145, 156, 162, 163, 164, 165, 166, 169, 187, 193, 209, 243, 252, 260, 262, 268], "singleton": 156, "singular": [10, 13, 14, 16, 18, 19], "sinh": [216, 223, 238], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 48, 51, 54, 56, 70, 71, 72, 74, 77, 78, 79, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 125, 126, 127, 135, 136, 137, 140, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 190, 193, 194, 195, 227, 228, 229, 236, 241, 243, 245, 252, 255, 256, 259, 261, 266, 268], "skip": [50, 185], "slice": [82, 239], "slide": [74, 161, 163, 164, 166], "slightli": 268, "slope": [64, 116, 118], "slow": [3, 178], "small": [16, 31, 32, 33, 50, 64, 85, 86, 91, 93, 94, 118, 120, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 162, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180], "smaller": [48, 50, 56, 59, 168, 173, 174, 202, 259, 261, 266], "smallest": 229, "smooth": [24, 62, 116, 117, 171, 179, 268], "smoother": 171, "so": [55, 56, 57, 58, 107, 168, 178, 209, 210, 257], "softmax": [63, 81, 124, 139, 145], "softmaxmodel": 122, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [61, 76, 107, 129, 130, 131, 150, 151, 152, 153, 154, 155, 173, 174, 175, 185, 187], "sometim": 184, "sophist": [56, 59], "sourc": 194, "space": [11, 17, 19, 70, 71, 72, 74, 95, 96, 97, 125, 126, 127, 135, 136, 137, 158, 159, 160, 207, 268], "span": 4, "spars": [173, 174], "spatial": [20, 43, 48, 126, 127, 136, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 247], "spatio": 127, "special": [0, 1, 7, 16, 52, 53, 54, 129, 194], "specif": [4, 7, 26, 55, 56, 57, 58, 59, 115, 129, 130, 131, 132, 133, 153, 154, 155, 168, 169, 183, 194, 209, 227, 229, 250, 254], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 56, 68, 74, 79, 85, 86, 87, 89, 90, 94, 95, 96, 97, 106, 107, 122, 125, 126, 127, 144, 145, 146, 147, 148, 156, 158, 159, 160, 162, 163, 164, 165, 166, 169, 187, 189, 190, 191, 192, 193, 205, 207, 208, 209, 210, 211, 212, 214, 215, 221, 227, 228, 229, 236, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 268], "speech": 153, "speed": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "split": [4, 243, 245, 256], "springer": 50, "sqrt": [62, 110, 111, 114, 115, 117, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 177, 178, 179, 216, 218, 219], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 87, 89, 146, 147, 172, 173, 174, 179, 216, 234], "squaredataset": [0, 1, 2, 3], "squeez": 246, "stabil": [13, 16, 50, 85, 86, 91, 93, 94, 135, 136, 137, 144, 145, 150, 151, 152, 153, 154, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 260], "stabl": [110, 111, 114, 115, 129, 145, 171, 175, 176, 179, 180, 181], "stack": [59, 245, 246, 256, 268], "stage": 34, "standard": [62, 64, 110, 112, 114, 116, 117, 118, 129, 180, 191, 194, 200, 257, 260, 268], "start": [1, 3, 171, 173, 180, 207, 259, 261], "state": [50, 52, 53, 54, 56, 59, 169, 183, 185, 192], "state_dict": [53, 54, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "static": 59, "statist": [16, 75, 91, 93], "std": [5, 112, 257, 260, 268], "stem": 26, "step": [54, 74, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 207, 257, 258], "step_siz": 180, "still": 172, "stochast": [7, 171, 181], "stop": 207, "storag": [55, 57, 195], "store": [2, 4, 5, 52, 53, 54, 55, 56, 57, 58, 158, 159, 160, 185, 195, 259, 260, 261, 262, 263, 264, 265, 266], "str": [5, 43, 53, 55, 57, 59, 85, 86, 87, 89, 90, 106, 169, 186, 247], "straightforward": [181, 183, 196], "strategi": 170, "streamlin": [2, 3], "strict": [53, 169], "stride": [30, 31, 32, 33, 56, 59, 70, 71, 72, 74, 95, 96, 97, 98, 99, 100, 102, 103, 104, 125, 126, 127, 135, 136, 137, 158, 159, 160, 161, 162, 163, 164, 165, 166], "stride_height": 74, "stride_width": 74, "string": [53, 55, 57, 59, 125, 126, 127, 169], "structur": [0, 7, 17, 52, 53, 56, 168, 169, 186, 187, 211, 258], "style": [26, 93, 153, 154, 247], "sub": [55, 56, 57, 58, 59, 168, 216, 259, 261], "sub_tensor": 195, "subclass": [1, 2, 3, 7, 53, 54, 55, 168, 169], "sublay": 51, "submodul": [51, 53, 168], "subsequ": [56, 59, 115, 194], "subset": [130, 131], "subtract": [7, 206, 260], "suffer": 173, "suit": [24, 110, 111, 114, 115], "suitabl": [26, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 50, 146, 173, 174, 189], "sum": [15, 55, 56, 57, 58, 59, 68, 85, 86, 87, 89, 90, 122, 144, 145, 146, 147, 148, 173, 196, 199, 204, 216, 239, 241, 243, 245, 247, 250, 254, 256], "sum_": [14, 68, 122, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 198, 199, 228, 236, 239, 241, 247, 250], "sum_i": [15, 204], "sum_j": 204, "sum_k": 200, "summar": [161, 162, 163], "summat": 14, "super": [7, 51, 52, 53, 54, 55, 56, 57, 58, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 55, 56, 57, 58, 59, 106, 107, 168, 170, 177, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 208, 211, 221, 226, 228, 232, 234, 236, 239, 240, 241, 243, 247, 251, 258, 268], "suppos": 268, "sure": [168, 268], "svd": [12, 16], "symmetr": [9, 95, 96, 97, 114, 115, 123], "syntax": [1, 200], "system": [8, 9, 16, 17, 18, 50, 183, 247], "systemat": 268, "szegedi": [23, 50], "t": [16, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 195, 200, 242, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "t0": 171, "t1": 242, "t2": 242, "tabular": 4, "tailor": [4, 168, 268], "take": [17, 161, 162, 163, 164, 165, 166, 185, 257], "taken": 239, "tan": 216, "tangent": [69, 123, 220, 237, 238], "tanh": [56, 59, 62, 63, 81, 110, 111, 114, 115, 117, 124, 139, 216], "tanhnetwork": 123, "target": [5, 59, 85, 86, 87, 89, 90, 95, 96, 97, 106, 144, 145, 146, 147, 148, 158, 159, 160, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 259, 261, 266], "target_tensor": [144, 145, 146, 147, 148], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 50, 67, 68, 71, 82, 85, 86, 89, 90, 121, 122, 125, 126, 127, 144, 145, 146, 147, 148, 153, 154, 155, 161, 163, 164, 166, 174, 184, 194, 211, 268], "techniqu": [9, 13, 48, 91, 129, 130, 131, 132, 133, 153, 154, 155, 170, 266, 268], "tempor": [125, 127, 163, 166], "temporarili": 185, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 43, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 183, 185, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "term": [16, 82, 135, 136, 137, 171, 175, 177, 178, 179, 181], "test": [4, 5], "test_backward": 51, "test_siz": 5, "text": [4, 10, 14, 15, 55, 61, 64, 65, 66, 68, 70, 71, 72, 95, 96, 97, 98, 99, 100, 102, 103, 104, 110, 111, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 147, 148, 161, 162, 163, 164, 165, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 196, 197, 199, 201, 202, 203, 205, 206, 217, 221, 227, 228, 229, 231, 236, 241, 243, 245, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 261, 263, 264, 265], "th": [82, 144, 145, 147, 148, 153, 154, 155, 201, 202, 205], "than": [0, 1, 57, 58, 61, 64, 87, 116, 118, 146, 169, 175, 221, 239, 248, 253, 259, 261, 266], "thei": [0, 7, 19, 50, 52, 56, 58, 59, 187, 247, 251, 259, 261, 268], "them": [3, 53, 58, 74, 171, 184, 243, 253, 257, 260, 268], "therebi": [129, 162, 163, 165, 166], "theta": [171, 172, 264], "theta_": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "theta_t": [178, 179], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 50, 51, 52, 54, 56, 57, 58, 59, 65, 67, 68, 69, 70, 71, 72, 74, 82, 84, 95, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 199, 200, 204, 207, 209, 212, 213, 214, 215, 221, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 242, 248, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "thing": 185, "those": [7, 31, 32, 33, 58, 115], "three": [19, 33, 72, 97, 100, 104, 127, 133, 135, 136, 137, 152, 155, 160, 163, 166], "threshold": [16, 87, 146], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 48, 55, 56, 59, 82, 84, 106, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 191, 198, 199, 204, 247, 249, 251, 252, 255, 268], "throughout": [66, 258], "tile": 246, "time": [0, 3, 14, 31, 32, 33, 70, 118, 120, 125, 135, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 179, 181, 185, 250, 254], "to_tensor": 5, "togeth": [59, 257, 268], "too": 180, "tool": [3, 7, 168, 184, 194, 257, 268], "top": [9, 10, 11, 17, 19, 82, 84, 106, 125, 126, 127, 140, 142, 259, 261], "torch": [43, 242], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 54, 195, 251], "totensor": [257, 268], "trace": [8, 216], "track": [7, 135, 136, 137, 150, 151, 152, 153, 154, 155, 168, 183, 185, 189, 190, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 258], "track_running_stat": [135, 136, 137, 150, 151, 152, 153, 154, 155], "tradit": [172, 173, 176, 177, 178], "trail": 94, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 50, 51, 52, 53, 56, 58, 59, 68, 75, 76, 77, 78, 79, 91, 93, 107, 117, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 150, 151, 152, 153, 154, 155, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 257, 260, 261, 262, 263, 264, 265, 268], "trainabl": [51, 150, 151, 152, 153, 154, 155, 168], "transfer": [93, 153, 154], "transform": [2, 4, 5, 7, 11, 57, 82, 84, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 184, 247], "transform_pipelin": [257, 268], "transformed_imag": [257, 268], "transit": 146, "translat": [162, 165], "transpos": [7, 9, 216], "treat": [0, 52, 156, 168], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 82, 84, 91, 93, 106, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 169, 174, 175, 179, 183, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258], "truncat": 51, "truncate_from": 51, "try": 0, "tune": 268, "tupl": [2, 3, 5, 11, 17, 19, 51, 53, 54, 70, 71, 72, 74, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 125, 126, 127, 135, 136, 137, 141, 156, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 180, 187, 189, 190, 191, 193, 195, 209, 212, 214, 227, 228, 229, 236, 241, 243, 245, 247, 248, 251, 252, 253, 255, 256, 259, 260, 261, 266], "twice": 248, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 43, 70, 71, 72, 82, 99, 103, 126, 132, 140, 151, 154, 162, 165, 174, 175, 176, 177, 178, 180, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 239, 247], "type": [34, 52, 53, 54, 82, 140, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 242, 247, 258], "typeerror": [0, 1, 2, 53, 169], "typic": [8, 52, 68, 75, 107, 120, 122, 148, 150, 151, 152, 153, 154, 155, 170, 171, 179, 181, 185, 187, 255, 258, 260, 264, 266, 268], "u": [16, 19, 111, 113, 115], "u_": 176, "ultra": 40, "unchang": [52, 79, 116, 118, 119, 120, 129, 130, 131, 132, 133, 141, 249, 252], "undefin": 205, "under": 168, "underbrac": 14, "underdetermin": 16, "undergo": 268, "underli": [0, 7, 23, 24, 25, 27, 28, 242, 245, 249, 251, 256], "understand": [7, 48, 50, 51, 59, 268], "unexpect": [53, 56, 59, 194], "unfold": [73, 81], "unifi": 0, "uniform": [109, 111, 115, 125, 126, 127, 140, 142, 188, 189, 190, 194, 262, 263, 264, 265], "uniformli": [189, 193], "uniniti": [209, 210], "unintend": 185, "union": 43, "uniqu": [9, 16, 18, 55, 57], "unit": [20, 30, 48, 61, 62, 64, 65, 66, 110, 111, 114, 115, 116, 117, 118, 119, 120, 129], "unless": [35, 36, 37, 38, 39, 40, 41, 42, 195], "unlik": [52, 55, 56, 57, 58, 64, 116, 118, 129, 156, 172, 173, 175, 176, 177, 178, 180], "unnecessari": 185, "unpad": 248, "unseen": 268, "unsqueez": 246, "unstabl": 13, "up": [169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 264, 266], "updat": [4, 52, 58, 59, 129, 130, 131, 132, 133, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185], "upon": [24, 50, 55, 56, 57, 58], "upper": [17, 113, 180, 193], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 82, 84, 89, 91, 93, 96, 97, 106, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 183, 184, 185, 186, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 225, 227, 228, 229, 236, 241, 247, 248, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "usag": [3, 8, 56, 59, 169, 170, 259, 260, 261, 262, 263, 264, 265, 266], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 55, 56, 57, 58, 168, 173, 257, 258, 268], "usual": 145, "util": [3, 7, 8, 57, 58, 168, 194], "v": [11, 16, 19, 174, 175, 177, 178, 208], "v1": [22, 23, 26, 27, 28, 50], "v2": [26, 28, 50], "v3": [22, 24, 25, 50], "v4": [22, 25, 50], "v_": [171, 174, 175, 177, 178, 179, 181], "v_stack": 256, "v_t": [178, 179], "val": 108, "valid": [125, 126, 127, 135, 136, 137, 240], "valu": [7, 10, 14, 15, 16, 19, 51, 53, 55, 57, 59, 61, 64, 67, 68, 69, 70, 71, 72, 74, 85, 86, 87, 89, 90, 91, 93, 94, 95, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 135, 136, 137, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 187, 189, 190, 191, 192, 193, 194, 207, 208, 209, 210, 211, 217, 218, 219, 221, 224, 225, 226, 227, 229, 231, 232, 234, 235, 243, 248, 249, 251, 255, 260, 262, 263, 265], "valuabl": 194, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 169], "vanish": [50, 116, 120, 150, 151, 152], "var": 216, "vari": [56, 58, 95, 106, 158, 264], "variabl": [53, 59, 95, 96, 97, 141, 158, 159, 160, 168, 183, 185, 189, 209, 261, 264], "varianc": [66, 75, 91, 93, 110, 111, 114, 115, 120, 129, 135, 136, 137, 150, 151, 152, 153, 154, 155, 156, 174, 175, 176, 177, 178, 191, 241, 264, 268], "variant": [43, 44, 45, 46, 47, 174, 175, 176], "variat": [153, 154, 155, 261, 268], "varieti": [4, 26, 194, 268], "variou": [22, 27, 28, 30, 50, 119, 170, 194, 227, 229, 248, 258], "vdot": 204, "vector": [11, 16, 17, 18, 19, 82, 84, 140, 142, 198, 199, 200, 204], "veloc": [171, 179, 181], "veri": [16, 37, 39, 50, 172], "versa": 180, "versatil": [194, 247], "version": [19, 22, 26, 30, 31, 32, 179, 204, 262], "vertic": [253, 256, 265], "vgg": 43, "vggnet": [29, 44, 45, 46, 47, 50], "vggnet_11": 50, "vggnet_13": 50, "vggnet_16": 50, "vggnet_19": 50, "via": [3, 4], "vice": 180, "video": [72, 79, 127, 137, 155, 163, 166], "view": [26, 30, 56, 162, 163, 164, 165, 166, 251], "vision": [50, 71, 126, 140, 268], "visual": [48, 50], "vol": 50, "volumetr": [72, 79, 127, 137, 155, 163, 166], "vstack": 246, "w": [71, 72, 74, 78, 79, 82, 84, 96, 97, 99, 100, 103, 104, 106, 107, 125, 126, 127, 136, 137, 140, 142, 151, 152, 154, 155, 159, 160, 163, 166, 259, 261], "w_": [71, 72, 96, 97, 99, 100, 103, 104, 106, 126, 127, 159, 160, 162, 163, 165, 166], "w_out": [71, 72, 99, 100, 103, 104], "wa": [23, 129, 130, 131, 132, 133, 185], "wai": [1, 21, 49, 183, 185, 251], "want": [0, 7, 257, 259], "warn": [55, 57], "we": [3, 7, 184, 247], "weight": [35, 36, 37, 38, 39, 40, 41, 42, 50, 70, 71, 72, 82, 84, 85, 86, 90, 91, 93, 94, 106, 110, 111, 114, 115, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 194], "weight1": 57, "weight2": 57, "weight_decai": [171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "well": [24, 110, 111], "were": 59, "what": 185, "when": [0, 1, 3, 7, 14, 53, 56, 58, 59, 61, 64, 70, 71, 72, 116, 141, 150, 151, 152, 153, 154, 155, 169, 172, 180, 183, 185, 186, 187, 194, 205, 257, 259], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 194, 196, 197, 201, 202, 203, 205, 206, 209, 210, 221, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 243, 248, 250, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265], "whether": [1, 10, 22, 23, 24, 53, 54, 110, 111, 179, 183, 189, 190, 191, 193, 195, 209, 210, 227, 228, 229, 236, 241], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 44, 45, 46, 47, 50, 53, 55, 57, 59, 64, 68, 87, 107, 116, 117, 118, 122, 123, 129, 146, 148, 150, 151, 152, 153, 154, 155, 156, 174, 175, 177, 179, 183, 185, 187, 189, 190, 193, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 241, 243, 250, 251, 253, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268], "while": [7, 28, 50, 56, 59, 75, 117, 119, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 185, 251, 253, 262, 268], "who": [7, 55, 56, 57, 58], "whose": [19, 210, 213, 215, 217, 221, 225, 231], "wide": [4, 5, 8, 16, 42, 50, 65, 119, 125, 126, 145], "wider": [70, 71], "width": [71, 72, 74, 78, 79, 96, 97, 99, 100, 103, 104, 106, 107, 126, 127, 151, 152, 154, 155, 159, 160, 162, 163, 165, 166, 259, 261, 266], "window": [98, 99, 100, 102, 103, 104, 161, 162, 163, 164, 165, 166, 172, 227, 229], "wise": [61, 62, 64, 65, 66, 67, 68, 69, 122, 129, 130, 131, 132, 133, 135, 136, 137, 168, 184, 196, 197, 200, 201, 202, 203, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 245, 256], "within": [2, 50, 51, 52, 55, 56, 57, 58, 59, 69, 106, 107, 115, 117, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 170, 185, 207, 221, 264, 268], "without": [7, 55, 56, 57, 82, 84, 125, 126, 127, 140, 142, 183, 186, 227, 249, 251, 255], "won": 185, "work": [1, 2, 3, 7, 9, 184, 187], "workflow": [194, 268], "workload": 7, "wrap": [3, 168, 185, 242], "wrapper": 168, "x": [7, 8, 18, 26, 30, 34, 43, 51, 52, 53, 55, 56, 57, 58, 59, 68, 82, 84, 107, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 191, 193, 209, 210, 225, 247, 259, 260, 261, 262, 263, 264, 265, 266], "x1": 140, "x2": 140, "x_": [145, 148, 247], "x_c": [145, 148], "x_i": 144, "x_k": 145, "xavier": [110, 111, 114, 115], "xavier_norm": 109, "xavier_uniform": 109, "xy": 247, "x\u2081": 140, "x\u2082": 140, "y": [55, 56, 57, 58, 59, 107, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 189, 190, 191, 193, 209, 210, 247, 262], "y_": [145, 148, 247], "y_c": [145, 148], "y_i": 144, "yann": [5, 50], "yet": [7, 184], "yield": [0, 1, 53, 185], "you": [0, 51, 56, 58, 59, 168, 170, 183, 185, 194, 209, 210, 211, 215, 240, 242, 257, 259, 268], "your": [168, 170, 183, 185, 194, 268], "z": [210, 214, 215], "zeiler": [48, 50], "zero": [14, 16, 17, 24, 51, 61, 64, 70, 71, 72, 75, 76, 77, 78, 79, 98, 99, 100, 102, 103, 104, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 125, 126, 127, 129, 130, 131, 132, 133, 156, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 209, 210, 211, 215, 216, 221, 231, 248], "zero_grad": [54, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 195], "zeros_lik": [210, 216], "zfnet": [29, 50], "zisserman": 50, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "Fused Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 184, "1d": 184, "2": 184, "2d": 184, "3": 184, "It": [183, 185], "ab": 217, "activ": [63, 81, 124, 139], "ad": 184, "adadelta": 172, "adagrad": 173, "adam": 174, "adamax": 176, "adamw": 175, "adaptive_avg_pool1d": 95, "adaptive_avg_pool2d": 96, "adaptive_avg_pool3d": 97, "adaptiveavgpool1d": 158, "adaptiveavgpool2d": 159, "adaptiveavgpool3d": 160, "add": 196, "addit": 16, "admonit": 187, "advanc": [74, 268], "alexnet": [20, 21], "algebra": 12, "algorithm": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "alias": 187, "align": 184, "alpha_dropout": 75, "alphadropout": 129, "also": 170, "anoth": 242, "arang": 207, "arcco": 218, "architectur": [20, 31, 32, 33, 48], "arcsin": 219, "arctan": 220, "asgd": 171, "attribut": [5, 20, 26, 30, 34, 43, 48, 52, 54, 55, 56, 57, 58, 59, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 195, 259, 260, 261, 262, 263, 264, 265, 266], "avg_pool1d": 98, "avg_pool2d": 99, "avg_pool3d": 100, "avgpool1d": 161, "avgpool2d": 162, "avgpool3d": 163, "axi": 184, "backpropag": 195, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "batch_norm": 91, "batchnorm1d": 150, "batchnorm2d": 151, "batchnorm3d": 152, "bceloss": 144, "behavior": [95, 96, 97, 158, 159, 160], "benefit": 185, "bilinear": [82, 140], "binari": 216, "binary_cross_entropi": 85, "broadcast": 184, "buffer": 52, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 82, 84, 95, 96, 97, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266], "captur": 186, "case": 187, "centercrop": 259, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 43, 48, 52, 53, 54, 55, 56, 57, 58, 59, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 195, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "clip": 221, "co": 222, "combin": 0, "compon": [3, 7, 168], "compos": 257, "concatdataset": [0, 1], "concaten": 243, "conclus": [3, 7, 168, 183, 184, 185, 194, 258, 268], "constant": 108, "contain": 60, "conv1d": [70, 125], "conv2d": [71, 126], "conv3d": [72, 127], "convbnrelu1d": 135, "convbnrelu2d": 136, "convbnrelu3d": 137, "convnet": [29, 50], "convolut": [73, 81, 128, 139], "core": 7, "cosh": 223, "creat": [54, 195, 242], "cross_entropi": 86, "crossentropyloss": 145, "cube": 224, "custom": [1, 2, 3, 53, 169, 170, 268], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 53, 169, 170], "definit": 187, "descript": 186, "det": 10, "detail": 16, "diag": 208, "dilat": 74, "div": 197, "dot": 198, "dropout": [76, 80, 81, 130, 134, 139], "dropout1d": [77, 131], "dropout2d": [78, 132], "dropout3d": [79, 133], "eig": 11, "elu": [61, 116], "empti": 209, "empty_lik": 210, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "exp": 225, "ey": 211, "featur": [4, 7, 8, 170, 194, 268], "flatten": 244, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 82, 84, 95, 96, 97, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266], "from": 242, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 183, 185, 186, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "fuse": [138, 139], "futur": 4, "gelu": [62, 117], "gener": [188, 216], "get": 170, "grad_en": 183, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 82, 84, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "guidelin": 187, "how": [183, 185], "hstack": 245, "huber_loss": 87, "huberloss": 146, "ident": 141, "imag": [6, 267], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 195, "init": [108, 110, 111, 112, 113, 114, 115], "initi": 109, "inner": 199, "input": 242, "inspect": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "instance_norm": 93, "instancenorm1d": 153, "instancenorm2d": 154, "instancenorm3d": 155, "integr": [3, 168, 194, 268], "interpol": 106, "inv": 13, "iter": 195, "kaiming_norm": 110, "kaiming_uniform": 111, "kei": [3, 4, 7, 168, 170, 194, 268], "layer": [124, 128, 134, 138, 139, 143, 149, 157, 167], "layer_norm": 94, "layernorm": 156, "leaky_relu": 64, "leakyrelu": 118, "learn": 194, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 81, 83, 84, 139, 142, 143], "list": 242, "load": 1, "log": 226, "loss": [81, 88, 139, 149], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 50, 81, 168, 170, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268], "matmul": 200, "matrix": 200, "matrix_pow": 14, "max": 227, "max_pool1d": 102, "max_pool2d": 103, "max_pool3d": 104, "maximum": 201, "maxpool1d": 164, "maxpool2d": 165, "maxpool3d": 166, "mean": 228, "meshgrid": 247, "metadata": 186, "method": [0, 1, 2, 5, 26, 30, 43, 53, 54, 169, 195], "min": 229, "minimum": 202, "mnist": 5, "model": [50, 51, 168], "modul": [53, 139], "moduledict": 55, "modulelist": 56, "more": 194, "mse_loss": 89, "mseloss": 147, "mul": 203, "multipl": [0, 200], "nadam": 177, "new": 184, "newaxi": 184, "nll_loss": 90, "nllloss": 148, "nn": [52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "no_grad": 185, "norm": 15, "normal": [81, 92, 112, 139, 157, 260], "note": 7, "number": 188, "ones": 212, "ones_lik": 213, "oper": [12, 200, 216], "optim": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "organ": 168, "outer": 204, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 168, 170, 194, 268], "pad": 248, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "parameterdict": 57, "parameterlist": 58, "perform": 195, "pinv": 16, "pipelin": [3, 268], "pitfal": [183, 185], "pool": [81, 101, 139, 167], "potenti": [183, 185], "power": 205, "properti": [54, 195], "qr": 17, "radam": 178, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 189, "randint": 190, "randn": 191, "random": [188, 189, 190, 191, 192, 193, 194], "randomcrop": 261, "randomgrayscal": 262, "randomhorizontalflip": 263, "randomrot": 264, "randomverticalflip": 265, "ravel": 249, "reciproc": 230, "refer": [5, 170], "register_model": 186, "relu": [65, 119], "repeat": 250, "reshap": 251, "resiz": 266, "resnet": 34, "resnet_1001": 35, "resnet_101": 36, "resnet_152": 37, "resnet_18": 38, "resnet_200": 39, "resnet_269": 40, "resnet_34": 41, "resnet_50": 42, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 183, 185, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "rmsprop": 179, "rotat": 107, "rprop": 180, "rule": 200, "see": 170, "seed": 192, "selu": [66, 120], "sequenti": 59, "sgd": 181, "sigmoid": [67, 121], "sign": 231, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "sin": 232, "sinh": 233, "slice": 195, "softmax": [68, 122], "solv": 18, "sqrt": 234, "squar": 235, "squeez": 252, "stack": 253, "start": 170, "state": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "sub": 206, "sum": 236, "summar": 51, "summari": 51, "svd": 19, "tabl": 51, "tan": 237, "tanh": [69, 123, 238], "tensor": [184, 195, 216, 242, 246], "through": 195, "tile": 254, "totensor": 258, "trace": 239, "track": 195, "transform": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "transpos": 240, "type": 187, "unari": 216, "unfold": 74, "uniform": [113, 193], "unsqueez": 255, "us": [1, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 242], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 52, 107, 183, 184, 185, 187, 247, 257, 258, 268], "util": [81, 105], "utilit": 246, "var": 241, "vggnet": 43, "vggnet_11": 44, "vggnet_13": 45, "vggnet_16": 46, "vggnet_19": 47, "vstack": 256, "weight": 109, "why": 187, "work": [4, 183, 185], "xavier_norm": 114, "xavier_uniform": 115, "zero": 214, "zeros_lik": 215, "zfnet": [48, 49]}})