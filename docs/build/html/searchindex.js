Search.setIndex({"alltitles": {"@ Operator": [[139, "operator"]], "Activation Functions": [[24, null]], "Activation Layers": [[79, null], [90, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[126, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[35, "advanced-example-with-dilation"]], "Algorithm": [[119, "algorithm"], [120, "algorithm"], [121, "algorithm"]], "Attributes": [[13, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [71, "attributes"], [72, "attributes"], [73, "attributes"], [74, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [80, "attributes"], [81, "attributes"], [82, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [134, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"]], "Benefits": [[125, "benefits"]], "Binary Functions": [[155, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [16, "class-signature"], [17, "class-signature"], [18, "class-signature"], [19, "class-signature"], [20, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [75, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [80, "class-signature"], [81, "class-signature"], [82, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [117, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [134, "class-signature"]], "Conclusion": [[0, "conclusion"], [116, "conclusion"], [123, "conclusion"], [124, "conclusion"], [125, "conclusion"], [133, "conclusion"]], "Containers": [[21, null]], "Convolution Functions": [[34, null], [42, null]], "Convolution Layers": [[83, null], [90, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[181, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[134, null]], "Defining a Custom Optimizer": [[118, null]], "Defining a custom module": [[14, null]], "Defining a custom optimizer": [[117, null]], "Dropout Functions": [[41, null], [42, null]], "Dropout Layers": [[89, null], [90, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [35, "example"], [116, null], [116, null], [116, null], [123, "example"], [125, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [133, null], [133, null], [133, null], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [153, "example"], [154, "example"], [156, "example"], [157, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, "example"], [165, "example"], [167, "example"], [169, "example"], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"], [182, "example"], [184, "example"], [187, "example"], [189, "example"], [190, "example"], [191, "example"], [193, "example"], [194, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[124, null]], "Example 2: Adding a new axis to a 2D tensor": [[124, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[124, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[126, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [22, "examples"], [23, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [43, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [164, "examples"], [166, "examples"], [168, "examples"], [181, "examples"], [183, "examples"], [186, "examples"], [188, "examples"], [192, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [35, "forward-calculation"], [43, "forward-calculation"], [45, "forward-calculation"], [65, "forward-calculation"], [66, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [182, "forward-calculation"], [184, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [22, "function-signature"], [23, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [43, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [123, "function-signature"], [125, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"]], "Getting Started": [[118, "getting-started"]], "How It Works": [[123, "how-it-works"], [125, "how-it-works"]], "Indexing and slicing": [[134, null]], "Inspecting Optimizer State": [[118, null], [119, null], [120, null], [121, null]], "Integration with lucid": [[116, "integration-with-lucid"], [133, "integration-with-lucid"]], "Iterating through a tensor": [[134, null]], "Key Components": [[116, "key-components"]], "Key Features": [[0, "key-features"], [118, "key-features"], [133, "key-features"]], "Learn More": [[133, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[42, null], [44, null]], "Linear Layers": [[90, null], [94, null]], "Loss Functions": [[42, null], [49, null]], "Loss Layers": [[90, null], [100, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[139, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [117, "methods"], [134, "methods"]], "Modules": [[90, null]], "Normalization Functions": [[42, null], [53, null]], "Normalization Layers": [[90, null], [108, null]], "Notes": [[0, "notes"]], "Optimizers": [[122, null]], "Organizing Models": [[116, "organizing-models"]], "Overview": [[0, "overview"], [116, "overview"], [118, "overview"], [133, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [125, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"]], "Performing backpropagation": [[134, null]], "Pooling Functions": [[42, null], [59, null]], "Pooling Layers": [[90, null], [115, null]], "Potential Pitfalls": [[123, "potential-pitfalls"], [125, "potential-pitfalls"]], "Properties": [[15, "properties"], [134, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[127, null]], "References": [[118, "references"]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [22, "returns"], [23, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [123, "returns"], [125, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"]], "SGD Series": [[122, null]], "See Also": [[118, "see-also"]], "Tensor Generating Functions": [[155, null]], "Tensor Operations": [[155, null]], "Tensor Utilites": [[185, null]], "Type Definitions": [[126, "type-definitions"]], "Unary Functions": [[155, null]], "Usage": [[13, "usage"], [123, "usage"], [124, "usage"], [125, "usage"]], "Use another Tensor as input": [[181, null]], "Using the ASGD Optimizer": [[119, null]], "Using the RMSprop Optimizer": [[120, null]], "Using the SGD Optimizer": [[121, null]], "Weight Initializations": [[64, null]], "Why Use Type Aliases?": [[126, null]], "activation Functions": [[42, null]], "lucid.Tensor": [[134, null]], "lucid.abs": [[156, null]], "lucid.add": [[135, null]], "lucid.arange": [[146, null]], "lucid.arccos": [[157, null]], "lucid.arcsin": [[158, null]], "lucid.arctan": [[159, null]], "lucid.clip": [[160, null]], "lucid.concatenate": [[182, null]], "lucid.cos": [[161, null]], "lucid.cosh": [[162, null]], "lucid.cube": [[163, null]], "lucid.diag": [[147, null]], "lucid.div": [[136, null]], "lucid.dot": [[137, null]], "lucid.empty": [[148, null]], "lucid.empty_like": [[149, null]], "lucid.exp": [[164, null]], "lucid.eye": [[150, null]], "lucid.flatten": [[183, null]], "lucid.grad_enabled": [[123, null]], "lucid.hstack": [[184, null]], "lucid.inner": [[138, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[165, null]], "lucid.matmul": [[139, null]], "lucid.max": [[166, null]], "lucid.maximum": [[140, null]], "lucid.mean": [[167, null]], "lucid.min": [[168, null]], "lucid.minimum": [[141, null]], "lucid.mul": [[142, null]], "lucid.newaxis": [[124, null]], "lucid.nn": [[116, null]], "lucid.nn.functional": [[42, null]], "lucid.no_grad": [[125, null]], "lucid.ones": [[151, null]], "lucid.ones_like": [[152, null]], "lucid.optim": [[118, null]], "lucid.outer": [[143, null]], "lucid.pad": [[186, null]], "lucid.power": [[144, null]], "lucid.random": [[133, null]], "lucid.random.rand": [[128, null]], "lucid.random.randint": [[129, null]], "lucid.random.randn": [[130, null]], "lucid.random.seed": [[131, null]], "lucid.random.uniform": [[132, null]], "lucid.ravel": [[187, null]], "lucid.reciprocal": [[169, null]], "lucid.repeat": [[188, null]], "lucid.reshape": [[189, null]], "lucid.sign": [[170, null]], "lucid.sin": [[171, null]], "lucid.sinh": [[172, null]], "lucid.sqrt": [[173, null]], "lucid.square": [[174, null]], "lucid.squeeze": [[190, null]], "lucid.stack": [[191, null]], "lucid.sub": [[145, null]], "lucid.sum": [[175, null]], "lucid.tan": [[176, null]], "lucid.tanh": [[177, null]], "lucid.tensor": [[181, null]], "lucid.tile": [[192, null]], "lucid.trace": [[178, null]], "lucid.transpose": [[179, null]], "lucid.types": [[126, null]], "lucid.unsqueeze": [[193, null]], "lucid.var": [[180, null]], "lucid.vstack": [[194, null]], "lucid.zeros": [[153, null]], "lucid.zeros_like": [[154, null]], "nn.AlphaDropout": [[84, null]], "nn.AvgPool1d": [[109, null]], "nn.AvgPool2d": [[110, null]], "nn.AvgPool3d": [[111, null]], "nn.BCELoss": [[95, null]], "nn.BatchNorm1d": [[101, null]], "nn.BatchNorm2d": [[102, null]], "nn.BatchNorm3d": [[103, null]], "nn.Bilinear": [[91, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[80, null]], "nn.Conv2d": [[81, null]], "nn.Conv3d": [[82, null]], "nn.CrossEntropyLoss": [[96, null]], "nn.Dropout": [[85, null]], "nn.Dropout1d": [[86, null]], "nn.Dropout2d": [[87, null]], "nn.Dropout3d": [[88, null]], "nn.ELU": [[71, null]], "nn.GELU": [[72, null]], "nn.HuberLoss": [[97, null]], "nn.Identity": [[92, null]], "nn.InstanceNorm1d": [[104, null]], "nn.InstanceNorm2d": [[105, null]], "nn.InstanceNorm3d": [[106, null]], "nn.LayerNorm": [[107, null]], "nn.LeakyReLU": [[73, null]], "nn.Linear": [[93, null]], "nn.MSELoss": [[98, null]], "nn.MaxPool1d": [[112, null]], "nn.MaxPool2d": [[113, null]], "nn.MaxPool3d": [[114, null]], "nn.Module": [[14, null]], "nn.ModuleDict": [[16, null]], "nn.ModuleList": [[17, null]], "nn.NLLLoss": [[99, null]], "nn.Parameter": [[15, null]], "nn.ParameterDict": [[18, null]], "nn.ParameterList": [[19, null]], "nn.ReLU": [[74, null]], "nn.SELU": [[75, null]], "nn.Sequential": [[20, null]], "nn.Sigmoid": [[76, null]], "nn.Softmax": [[77, null]], "nn.Tanh": [[78, null]], "nn.functional.alpha_dropout": [[36, null]], "nn.functional.avg_pool1d": [[56, null]], "nn.functional.avg_pool2d": [[57, null]], "nn.functional.avg_pool3d": [[58, null]], "nn.functional.batch_norm": [[52, null]], "nn.functional.bilinear": [[43, null]], "nn.functional.binary_cross_entropy": [[46, null]], "nn.functional.conv1d": [[31, null]], "nn.functional.conv2d": [[32, null]], "nn.functional.conv3d": [[33, null]], "nn.functional.cross_entropy": [[47, null]], "nn.functional.dropout": [[37, null]], "nn.functional.dropout1d": [[38, null]], "nn.functional.dropout2d": [[39, null]], "nn.functional.dropout3d": [[40, null]], "nn.functional.elu": [[22, null]], "nn.functional.gelu": [[23, null]], "nn.functional.huber_loss": [[48, null]], "nn.functional.instance_norm": [[54, null]], "nn.functional.layer_norm": [[55, null]], "nn.functional.leaky_relu": [[25, null]], "nn.functional.linear": [[45, null]], "nn.functional.max_pool1d": [[60, null]], "nn.functional.max_pool2d": [[61, null]], "nn.functional.max_pool3d": [[62, null]], "nn.functional.mse_loss": [[50, null]], "nn.functional.nll_loss": [[51, null]], "nn.functional.relu": [[26, null]], "nn.functional.selu": [[27, null]], "nn.functional.sigmoid": [[28, null]], "nn.functional.softmax": [[29, null]], "nn.functional.tanh": [[30, null]], "nn.functional.unfold": [[35, null]], "nn.init.constant": [[63, null]], "nn.init.kaiming_normal": [[65, null]], "nn.init.kaiming_uniform": [[66, null]], "nn.init.normal": [[67, null]], "nn.init.uniform": [[68, null]], "nn.init.xavier_normal": [[69, null]], "nn.init.xavier_uniform": [[70, null]], "optim.ASGD": [[119, null]], "optim.Optimizer": [[117, null]], "optim.RMSprop": [[120, null]], "optim.SGD": [[121, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/init/constant_", "nn/init/index", "nn/init/kaiming_normal_", "nn/init/kaiming_uniform_", "nn/init/normal_", "nn/init/uniform_", "nn/init/xavier_normal_", "nn/init/xavier_uniform_", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/RMSprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/init/constant_.rst", "nn/init/index.rst", "nn/init/kaiming_normal_.rst", "nn/init/kaiming_uniform_.rst", "nn/init/normal_.rst", "nn/init/uniform_.rst", "nn/init/xavier_normal_.rst", "nn/init/xavier_uniform_.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[156, "lucid.abs", false]], "add() (in module lucid)": [[135, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[84, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[146, "lucid.arange", false]], "arccos() (in module lucid)": [[157, "lucid.arccos", false]], "arcsin() (in module lucid)": [[158, "lucid.arcsin", false]], "arctan() (in module lucid)": [[159, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[119, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[109, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[110, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[111, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[101, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[102, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[103, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[95, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[91, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[160, "lucid.clip", false]], "concatenate() (in module lucid)": [[182, "lucid.concatenate", false]], "constant_() (in module lucid.nn.init)": [[63, "lucid.nn.init.constant_", false]], "conv1d (class in lucid.nn)": [[80, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[81, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[82, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[161, "lucid.cos", false]], "cosh() (in module lucid)": [[162, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[96, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[163, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[147, "lucid.diag", false]], "div() (in module lucid)": [[136, "lucid.div", false]], "dot() (in module lucid)": [[137, "lucid.dot", false]], "dropout (class in lucid.nn)": [[85, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[86, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[38, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[87, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[88, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[71, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[148, "lucid.empty", false]], "empty_like() (in module lucid)": [[149, "lucid.empty_like", false]], "exp() (in module lucid)": [[164, "lucid.exp", false]], "eye() (in module lucid)": [[150, "lucid.eye", false]], "flatten() (in module lucid)": [[183, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[72, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[123, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[184, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[97, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[92, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[138, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[104, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[105, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[106, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "kaiming_normal_() (in module lucid.nn.init)": [[65, "lucid.nn.init.kaiming_normal_", false]], "kaiming_uniform_() (in module lucid.nn.init)": [[66, "lucid.nn.init.kaiming_uniform_", false]], "layer_norm() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[107, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[73, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[93, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[165, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[139, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[166, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[140, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[112, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[113, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[114, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[167, "lucid.mean", false]], "min() (in module lucid)": [[168, "lucid.min", false]], "minimum() (in module lucid)": [[141, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[16, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[17, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[98, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[142, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[99, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[125, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "normal_() (in module lucid.nn.init)": [[67, "lucid.nn.init.normal_", false]], "ones() (in module lucid)": [[151, "lucid.ones", false]], "ones_like() (in module lucid)": [[152, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[117, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[143, "lucid.outer", false]], "pad() (in module lucid)": [[186, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[18, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[19, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[144, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[128, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[129, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[130, "lucid.random.randn", false]], "ravel() (in module lucid)": [[187, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[169, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[74, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[188, "lucid.repeat", false]], "reshape() (in module lucid)": [[189, "lucid.reshape", false]], "rmsprop (class in lucid.optim)": [[120, "lucid.optim.RMSprop", false]], "seed() (in module lucid.random)": [[131, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[75, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[20, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[121, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[76, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[28, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[170, "lucid.sign", false]], "sin() (in module lucid)": [[171, "lucid.sin", false]], "sinh() (in module lucid)": [[172, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[77, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[173, "lucid.sqrt", false]], "square() (in module lucid)": [[174, "lucid.square", false]], "squeeze() (in module lucid)": [[190, "lucid.squeeze", false]], "stack() (in module lucid)": [[191, "lucid.stack", false]], "sub() (in module lucid)": [[145, "lucid.sub", false]], "sum() (in module lucid)": [[175, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[176, "lucid.tan", false]], "tanh (class in lucid.nn)": [[78, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[177, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[134, "lucid.Tensor", false]], "tensor() (in module lucid)": [[181, "lucid.tensor", false]], "tile() (in module lucid)": [[192, "lucid.tile", false]], "trace() (in module lucid)": [[178, "lucid.trace", false]], "transpose() (in module lucid)": [[179, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.random)": [[132, "lucid.random.uniform", false]], "uniform_() (in module lucid.nn.init)": [[68, "lucid.nn.init.uniform_", false]], "unsqueeze() (in module lucid)": [[193, "lucid.unsqueeze", false]], "var() (in module lucid)": [[180, "lucid.var", false]], "vstack() (in module lucid)": [[194, "lucid.vstack", false]], "xavier_normal_() (in module lucid.nn.init)": [[69, "lucid.nn.init.xavier_normal_", false]], "xavier_uniform_() (in module lucid.nn.init)": [[70, "lucid.nn.init.xavier_uniform_", false]], "zeros() (in module lucid)": [[153, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[154, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[134, 1, 1, "", "Tensor"], [156, 2, 1, "", "abs"], [135, 2, 1, "", "add"], [146, 2, 1, "", "arange"], [157, 2, 1, "", "arccos"], [158, 2, 1, "", "arcsin"], [159, 2, 1, "", "arctan"], [160, 2, 1, "", "clip"], [182, 2, 1, "", "concatenate"], [161, 2, 1, "", "cos"], [162, 2, 1, "", "cosh"], [163, 2, 1, "", "cube"], [147, 2, 1, "", "diag"], [136, 2, 1, "", "div"], [137, 2, 1, "", "dot"], [148, 2, 1, "", "empty"], [149, 2, 1, "", "empty_like"], [164, 2, 1, "", "exp"], [150, 2, 1, "", "eye"], [183, 2, 1, "", "flatten"], [123, 2, 1, "", "grad_enabled"], [184, 2, 1, "", "hstack"], [138, 2, 1, "", "inner"], [165, 2, 1, "", "log"], [139, 2, 1, "", "matmul"], [166, 2, 1, "", "max"], [140, 2, 1, "", "maximum"], [167, 2, 1, "", "mean"], [168, 2, 1, "", "min"], [141, 2, 1, "", "minimum"], [142, 2, 1, "", "mul"], [125, 2, 1, "", "no_grad"], [151, 2, 1, "", "ones"], [152, 2, 1, "", "ones_like"], [143, 2, 1, "", "outer"], [186, 2, 1, "", "pad"], [144, 2, 1, "", "power"], [187, 2, 1, "", "ravel"], [169, 2, 1, "", "reciprocal"], [188, 2, 1, "", "repeat"], [189, 2, 1, "", "reshape"], [170, 2, 1, "", "sign"], [171, 2, 1, "", "sin"], [172, 2, 1, "", "sinh"], [173, 2, 1, "", "sqrt"], [174, 2, 1, "", "square"], [190, 2, 1, "", "squeeze"], [191, 2, 1, "", "stack"], [145, 2, 1, "", "sub"], [175, 2, 1, "", "sum"], [176, 2, 1, "", "tan"], [177, 2, 1, "", "tanh"], [181, 2, 1, "", "tensor"], [192, 2, 1, "", "tile"], [178, 2, 1, "", "trace"], [179, 2, 1, "", "transpose"], [193, 2, 1, "", "unsqueeze"], [180, 2, 1, "", "var"], [194, 2, 1, "", "vstack"], [153, 2, 1, "", "zeros"], [154, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[84, 1, 1, "", "AlphaDropout"], [109, 1, 1, "", "AvgPool1d"], [110, 1, 1, "", "AvgPool2d"], [111, 1, 1, "", "AvgPool3d"], [95, 1, 1, "", "BCELoss"], [101, 1, 1, "", "BatchNorm1d"], [102, 1, 1, "", "BatchNorm2d"], [103, 1, 1, "", "BatchNorm3d"], [91, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [80, 1, 1, "", "Conv1d"], [81, 1, 1, "", "Conv2d"], [82, 1, 1, "", "Conv3d"], [96, 1, 1, "", "CrossEntropyLoss"], [85, 1, 1, "", "Dropout"], [86, 1, 1, "", "Dropout1d"], [87, 1, 1, "", "Dropout2d"], [88, 1, 1, "", "Dropout3d"], [71, 1, 1, "", "ELU"], [72, 1, 1, "", "GELU"], [97, 1, 1, "", "HuberLoss"], [92, 1, 1, "", "Identity"], [104, 1, 1, "", "InstanceNorm1d"], [105, 1, 1, "", "InstanceNorm2d"], [106, 1, 1, "", "InstanceNorm3d"], [107, 1, 1, "", "LayerNorm"], [73, 1, 1, "", "LeakyReLU"], [93, 1, 1, "", "Linear"], [98, 1, 1, "", "MSELoss"], [112, 1, 1, "", "MaxPool1d"], [113, 1, 1, "", "MaxPool2d"], [114, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [16, 1, 1, "", "ModuleDict"], [17, 1, 1, "", "ModuleList"], [99, 1, 1, "", "NLLLoss"], [15, 1, 1, "", "Parameter"], [18, 1, 1, "", "ParameterDict"], [19, 1, 1, "", "ParameterList"], [74, 1, 1, "", "ReLU"], [75, 1, 1, "", "SELU"], [20, 1, 1, "", "Sequential"], [76, 1, 1, "", "Sigmoid"], [77, 1, 1, "", "Softmax"], [78, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[36, 2, 1, "", "alpha_dropout"], [56, 2, 1, "", "avg_pool1d"], [57, 2, 1, "", "avg_pool2d"], [58, 2, 1, "", "avg_pool3d"], [52, 2, 1, "", "batch_norm"], [43, 2, 1, "", "bilinear"], [46, 2, 1, "", "binary_cross_entropy"], [31, 2, 1, "", "conv1d"], [32, 2, 1, "", "conv2d"], [33, 2, 1, "", "conv3d"], [47, 2, 1, "", "cross_entropy"], [37, 2, 1, "", "dropout"], [38, 2, 1, "", "dropout1d"], [39, 2, 1, "", "dropout2d"], [40, 2, 1, "", "dropout3d"], [22, 2, 1, "", "elu"], [23, 2, 1, "", "gelu"], [48, 2, 1, "", "huber_loss"], [54, 2, 1, "", "instance_norm"], [55, 2, 1, "", "layer_norm"], [25, 2, 1, "", "leaky_relu"], [45, 2, 1, "", "linear"], [60, 2, 1, "", "max_pool1d"], [61, 2, 1, "", "max_pool2d"], [62, 2, 1, "", "max_pool3d"], [50, 2, 1, "", "mse_loss"], [51, 2, 1, "", "nll_loss"], [26, 2, 1, "", "relu"], [27, 2, 1, "", "selu"], [28, 2, 1, "", "sigmoid"], [29, 2, 1, "", "softmax"], [30, 2, 1, "", "tanh"], [35, 2, 1, "", "unfold"]], "lucid.nn.init": [[63, 2, 1, "", "constant_"], [65, 2, 1, "", "kaiming_normal_"], [66, 2, 1, "", "kaiming_uniform_"], [67, 2, 1, "", "normal_"], [68, 2, 1, "", "uniform_"], [69, 2, 1, "", "xavier_normal_"], [70, 2, 1, "", "xavier_uniform_"]], "lucid.optim": [[119, 1, 1, "", "ASGD"], [117, 1, 1, "", "Optimizer"], [120, 1, 1, "", "RMSprop"], [121, 1, 1, "", "SGD"]], "lucid.random": [[128, 2, 1, "", "rand"], [129, 2, 1, "", "randint"], [130, 2, 1, "", "randn"], [131, 2, 1, "", "seed"], [132, 2, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 96, 99, 109, 112, 113, 116, 117, 118, 124, 139, 147, 165, 167, 175, 178, 180, 181, 190], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 190, 191, 193, 194], "000": [148, 149], "0000": [96, 97, 99], "0001": 119, "000e": [148, 149], "001": [119, 121], "005": 73, "01": [25, 73, 117, 118, 119, 120, 121], "01051757": 130, "0205": 96, "0217": 96, "0227": 96, "0299": 96, "044715": [23, 72], "0450": 96, "0451": 96, "04719755": 157, "0474259": 28, "0480": 96, "05": [52, 54, 55, 73, 101, 102, 103, 104, 105, 106, 107], "0507": [27, 75], "07": [46, 47, 95, 96], "0700": 96, "0706508": 78, "0721": 96, "0794": 99, "08": 120, "0802": 99, "08333333": 9, "085537": 164, "0900": [77, 96], "0986": [29, 77], "09861229": 165, "0992": 96, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "10": [16, 17, 20, 32, 33, 43, 45, 80, 81, 82, 87, 88, 91, 93, 102, 103, 105, 110, 111, 113, 129, 132, 133, 136, 139, 142, 143, 159, 175], "1000000": 119, "1001": 96, "1003": 96, "1014": 27, "1025": [17, 20], "1026": [17, 20], "1027": [17, 20], "10499": 28, "1050": 76, "1054": 99, "1056": [17, 20], "11": [43, 80, 81, 82, 87, 91, 102, 103, 105, 110, 111, 113, 139], "1111": 95, "1134": 43, "119": 43, "1192": [28, 29, 77], "12": [18, 43, 80, 81, 82, 87, 88, 91, 102, 103, 105, 110, 111, 113, 139, 143, 144], "123": [65, 66, 67, 68, 69, 70, 131, 132], "124": [65, 66, 69, 70], "125": 111, "1250": 97, "128": 20, "13": [43, 80, 81, 82, 91, 103, 110, 111, 113, 139], "14": [80, 81, 82, 87, 88, 91, 103, 110, 111, 113, 126, 139, 143], "145": 43, "15": [43, 80, 81, 82, 91, 103, 110, 111, 113, 139, 143, 178], "1513": 99, "155": 139, "1588": [23, 72], "16": [17, 18, 20, 80, 81, 82, 87, 88, 91, 102, 103, 110, 111, 113, 116, 139, 143, 173], "16227766": 10, "16425": 99, "1643": 95, "166": 139, "17": [80, 81, 82, 91, 103, 111, 138], "170": 43, "17520119": 172, "18": [80, 81, 82, 87, 91, 103, 111, 142, 143], "1800": 96, "19": [32, 33, 43, 81, 82, 103, 137, 139], "1966": [29, 76, 77], "1998": 96, "1d": [31, 56, 60, 101, 104, 132, 139, 147, 178, 186, 187, 188, 192], "1e": [46, 47, 52, 54, 55, 95, 96, 101, 102, 103, 104, 105, 106, 107, 119, 120, 121], "1e6": 119, "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "20": [16, 17, 20, 81, 82, 87, 103, 143, 164], "2039": 99, "204": 82, "21": [18, 43, 81, 82, 103, 143], "211": 139, "22": [43, 81, 82, 87, 103, 137, 139], "2231": [96, 99], "2247": [101, 102, 103, 104, 105, 106, 107], "226": 139, "22752314": 130, "23": [81, 82, 103], "2324": 75, "234": [65, 66, 67, 68, 69, 70, 132], "24": [43, 81, 82, 87, 103, 143], "2424": [29, 77], "2447": 77, "25": [28, 76, 82, 98, 103, 110, 111, 136, 169, 180], "2500": [95, 97, 99], "2512": 71, "2547": 75, "26": [18, 45, 82, 93, 103, 143], "26325684": 130, "2689": [29, 76, 77], "27": [43, 80, 82, 103, 163], "276": [65, 66, 69, 70], "28": [43, 82, 143], "29": 82, "2_i": [104, 105, 106], "2d": [32, 39, 57, 61, 102, 105, 139, 147, 150, 178, 183, 186, 188, 192], "2x2": 35, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 23, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 48, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "30": [17, 82], "3026": 99, "31": [43, 82, 139], "310": [148, 149], "31622777": 10, "32": [17, 20, 43, 45, 81, 82, 93, 116, 137, 138, 143], "321": [65, 66, 69, 70], "33": [17, 20, 45, 82, 93], "33333333": 9, "34": [17, 20, 43, 82, 139, 143], "342": [65, 66, 69, 70], "345": [65, 66, 67, 68, 69, 70, 132], "35": [17, 20, 82], "3567": [95, 99], "36": 82, "3679": [22, 27, 71], "37": 80, "372": 43, "375": 98, "3750": 97, "38344152": 128, "38629436": 165, "389056": 164, "3935": 71, "3d": [33, 40, 58, 62, 82, 103, 106], "3x3": 133, "4": [1, 2, 3, 4, 6, 8, 9, 10, 18, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 124, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 154, 160, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194], "4044": 95, "4076": 96, "41421356": 2, "41666667": 9, "41808962": 130, "419974": 30, "4199743": 78, "42": [43, 126, 133], "421": [65, 66, 69, 70], "423": [65, 66, 67, 68], "42718872": 10, "4286": 95, "43": [137, 139], "4323": 71, "4375": 97, "43758721": 128, "4472136": 4, "4495": [103, 106], "45": 43, "4545": 84, "47112767": 159, "48": [45, 93], "4979": 71, "5": [0, 1, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20, 23, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 48, 50, 52, 54, 55, 56, 57, 63, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 124, 126, 129, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 156, 157, 158, 166, 167, 168, 169, 170, 175, 178, 179, 180, 181, 184, 189, 194], "50": [45, 93, 137, 139], "5000": [95, 97, 99], "5108": 99, "52359878": 158, "53": [43, 138], "543": [65, 66, 67, 68, 69, 70, 132], "54308063": 162, "545": 144, "5455": 84, "563": [65, 66, 69, 70], "57": 43, "57079633": [157, 158], "57366333": 131, "6": [1, 9, 18, 19, 31, 32, 33, 35, 40, 43, 45, 66, 70, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 124, 126, 132, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 166, 167, 168, 175, 178, 179, 180, 181, 184, 188, 189, 194], "6052": 99, "6065": 71, "6124": [101, 102, 103, 104, 105, 106, 107], "62": 43, "62686041": 172, "6321": [22, 71], "63245553": 10, "64": [17, 20, 43], "64589411": 128, "654": [65, 66, 67, 68, 69, 70, 132], "657": [65, 66, 69, 70], "6590": [29, 77], "6652": 77, "66666667": 9, "6667": 95, "6682": 95, "67": 139, "67326": 75, "6733": 27, "678": [65, 66, 67, 68, 69, 70], "68811989": 130, "69314718": 165, "7": [8, 18, 31, 32, 33, 35, 40, 43, 45, 46, 47, 72, 75, 76, 78, 80, 81, 82, 87, 88, 91, 93, 95, 96, 98, 102, 103, 105, 106, 110, 111, 113, 114, 126, 129, 132, 135, 137, 138, 139, 143, 145, 147, 164, 167, 175, 178, 179, 180, 192], "7001": 96, "70710678": [4, 171], "7147": 99, "7182818": 164, "7311": [29, 76, 77], "74": 139, "75": [45, 93, 98, 119], "7581": 27, "76159416": 177, "7616": [30, 78], "76219569": 162, "7635": 75, "772": 144, "78357324": 130, "78539816": 159, "79172504": 128, "8": [7, 11, 17, 18, 20, 31, 32, 33, 35, 40, 43, 45, 46, 72, 75, 76, 78, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 98, 102, 103, 105, 106, 110, 111, 113, 114, 120, 126, 129, 136, 137, 138, 139, 143, 144, 146, 147, 163, 167, 175, 178, 179, 180], "8005": 96, "8182": 84, "82": 43, "8413": [23, 72], "8584": 75, "876": [65, 66, 69, 70, 132], "8808": [29, 76, 77], "887": 144, "891773": 128, "89442719": 4, "9": [11, 32, 35, 43, 45, 80, 81, 82, 87, 91, 93, 95, 102, 103, 105, 110, 111, 113, 119, 120, 121, 126, 129, 132, 135, 139, 143, 144, 145, 147, 173, 174], "90709145": 131, "9091": 84, "9120": 99, "9163": 99, "9486833": 10, "949e": [148, 149], "9526": 28, "9545": 72, "96366276": 128, "9640": 78, "96402758": 177, "99": 120, "9957": 99, "99734545": 131, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 43, 45, 46, 47, 51, 52, 54, 55, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 116, 117, 119, 120, 121, 125, 126, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "As": 131, "By": [0, 15, 116, 124, 128, 129, 130, 132], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 20, 22, 23, 25, 26, 27, 28, 30, 43, 45, 65, 66, 69, 70, 75, 80, 81, 82, 91, 93, 101, 102, 103, 104, 105, 106, 116, 118, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 164, 165, 166, 167, 168, 171, 173, 175, 178, 179, 180, 186, 188, 190, 192, 193], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 40, 43, 45, 52, 54, 65, 66, 80, 81, 82, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 120, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "In": [0, 9, 31, 32, 33, 96, 99, 123, 124, 125], "It": [0, 9, 10, 11, 14, 16, 17, 18, 19, 20, 40, 43, 72, 74, 78, 91, 92, 95, 96, 97, 98, 99, 116, 117, 118, 119, 120, 121, 124, 131, 135, 136, 137, 140, 141, 142, 144, 145, 166, 168, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194], "Its": [11, 133], "Near": 9, "No": 35, "Not": 92, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "There": 189, "These": [0, 1, 4, 7, 10, 12, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 126, 133], "To": [118, 130, 133, 148, 149], "With": 35, "_": [7, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 30, 45, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 120, 121, 137, 138, 139, 143, 178, 179], "_1": [4, 16, 17, 18, 19, 20, 43, 91, 143, 182, 184, 194], "_2": [4, 16, 17, 18, 19, 20, 43, 91, 143, 182, 184, 194], "__call__": 14, "__init__": [0, 13, 14, 15, 16, 17, 18, 19, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 134], "__repr__": 117, "__setattr__": 14, "_activ": 29, "_arraylik": [126, 147, 149, 152, 154], "_arraylikeint": 186, "_arrayorscalar": [13, 15, 126, 134, 181], "_base_dtyp": [146, 148, 151, 153], "_fanmod": [65, 66], "_grad_en": [123, 125], "_i": [4, 8, 29, 43, 77, 98, 101, 107, 109, 112, 137, 138, 140, 141, 143, 144, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 188, 190, 193, 194], "_in": [65, 66, 69, 70], "_j": [29, 77, 109, 112, 143, 167, 175, 179, 180], "_k": 191, "_modul": 14, "_n": [4, 16, 17, 18, 19, 20, 182, 184, 194], "_numpyarrai": 126, "_out": [65, 66, 69, 70, 188, 192], "_p": 8, "_pad": 186, "_paddingstr": [80, 81, 82], "_paramet": 14, "_reductiontyp": [46, 47, 48, 50, 51, 95, 96, 97, 98, 99], "_scalar": [63, 67, 68, 69, 70, 126, 146, 160], "_shapelik": [55, 107, 126, 129, 151, 153, 189, 190, 193], "_slope": 73, "_statedict": 117, "_t": 120, "_tensor": [13, 15, 147, 181], "_tensorop": 134, "_u": 9, "_v": 9, "_valu": [160, 186], "_width": 186, "a_i": [140, 141, 144], "ab": 155, "abc": 117, "abil": 0, "about": 0, "abov": [0, 123, 125, 131, 147, 150], "absolut": [7, 8, 48, 156], "abstract": [116, 117, 118, 119, 120, 121], "abstractmethod": 117, "acceler": [75, 101, 102, 103, 119, 120, 121], "accept": [92, 128, 134], "access": [13, 15, 16, 17, 18, 19, 20, 189], "accord": [80, 81, 82, 91, 93, 96, 99, 179], "accordingli": 3, "account": [7, 9, 10], "accumul": [119, 135, 136, 140, 141, 142, 145], "achiev": [31, 32, 33], "across": [13, 17, 20, 55, 69, 70, 101, 102, 103, 104, 105, 106, 107, 126, 128, 129, 130, 131, 132, 133, 148, 149, 167, 180], "activ": [0, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 36, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 103, 107, 166, 168], "actual": [15, 95, 96, 98, 99, 134], "ad": [14, 16, 17, 18, 19, 20, 31, 32, 33, 43, 45, 46, 47, 52, 54, 55, 56, 57, 58, 60, 61, 62, 80, 81, 82, 95, 96, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 120, 193], "adapt": 120, "add": [14, 16, 17, 20, 43, 45, 80, 81, 82, 91, 93, 107, 117, 119, 120, 121, 124, 155, 186, 193], "add_modul": [14, 20], "add_param_group": 117, "addit": [0, 7, 14, 17, 20, 43, 45, 52, 54, 91, 93, 101, 102, 103, 104, 105, 106, 119, 124, 133, 135, 191], "address": [96, 99], "adjust": [84, 101, 102, 103, 104, 105, 106, 107, 118, 120, 184, 194], "advanc": [9, 17, 20, 31, 32, 33, 116, 119], "advantag": 125, "affect": [123, 187, 190], "affin": [101, 102, 103, 104, 105, 106, 107], "after": [7, 15, 16, 17, 18, 19, 20, 40, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 125, 134, 135, 136, 140, 141, 142, 144, 145, 186], "afterward": 125, "aggreg": [143, 188, 192], "aim": 0, "algebra": [0, 1, 150], "algorithm": [0, 7, 9, 10, 117, 118, 133], "align": [11, 138, 139], "all": [0, 10, 14, 16, 17, 18, 19, 20, 32, 33, 57, 58, 61, 62, 73, 74, 82, 110, 111, 114, 116, 117, 118, 119, 120, 121, 144, 166, 167, 168, 175, 178, 180, 182, 183, 184, 188, 190, 191, 192, 194], "allevi": 22, "alloc": [148, 149], "allow": [0, 9, 10, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 33, 35, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 116, 124, 146, 151, 153, 154, 179, 181], "along": [29, 77, 138, 139, 143, 166, 167, 168, 175, 178, 180, 182, 184, 188, 191, 192, 193, 194], "alongsid": 13, "alpha": [22, 25, 27, 36, 71, 75, 84, 119, 120], "alpha_dropout": [41, 42, 84], "alphadropout": [89, 90], "alphadropoutmodel": 84, "also": [22, 23, 25, 26, 27, 28, 30, 43, 45, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "alter": [20, 189], "altern": [72, 139], "alwai": [15, 187], "amount": [31, 32, 33, 56, 57, 58, 60, 61, 62], "an": [0, 4, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 23, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 69, 70, 71, 76, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 125, 126, 134, 139, 147, 150, 160, 167, 175, 180, 182, 188, 192, 193], "analog": [188, 192], "analysi": [80, 81, 82, 106, 109, 111, 112, 114], "ani": [7, 9, 13, 14, 15, 16, 18, 19, 22, 23, 25, 26, 27, 28, 30, 36, 37, 43, 45, 52, 54, 76, 107, 116, 117, 123, 125, 131, 134, 146, 147, 148, 150, 151, 152, 153, 154, 166, 168, 179, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194], "anoth": [19, 145, 152, 154], "appear": 117, "append": [17, 19, 20], "appli": [0, 7, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 139, 186, 188], "applic": [9, 31, 54, 80, 81, 82, 91, 93, 133, 146, 153, 186], "approach": 20, "appropri": [9, 14, 18, 20, 80, 81, 82, 84, 85, 86, 96, 110, 111, 123, 125], "approx": 27, "approxim": [9, 23, 72, 110, 113], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 35, 43, 45, 65, 66, 68, 69, 70, 77, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 156, 160, 164, 166, 167, 168, 169, 170, 175, 178, 179, 182, 188, 189, 192], "arang": 155, "arbitrari": [17, 92, 148, 149, 160, 165, 167, 171, 173, 175, 179, 180], "arcco": 155, "architectur": [16, 17, 18, 19, 20, 23, 74, 91, 92, 116], "arcsin": 155, "arctan": 155, "arg": [14, 92, 148], "argument": [14, 20, 92, 128, 148, 179], "around": [4, 78], "arr": [126, 182, 184, 191, 194], "arrai": [0, 13, 15, 124, 126, 134, 139, 147, 152, 154, 181, 187, 188], "asarrai": 126, "asgd": 122, "assign": [14, 16, 18, 20, 96, 99], "associ": [18, 19], "assum": [117, 118, 123], "attempt": [16, 20], "attent": [19, 43], "attribut": 14, "audio": 80, "augment": [133, 188, 192], "autodiff": 0, "autograd": 116, "automat": [0, 15, 16, 17, 18, 19, 116, 128, 129, 130, 132, 134, 148, 149, 154], "auxiliari": 13, "avail": 0, "averag": [13, 56, 57, 58, 98, 109, 110, 111, 119, 120, 167], "avg_pool": [109, 110, 111], "avg_pool1d": [42, 59], "avg_pool2d": [42, 59], "avg_pool3d": [42, 59], "avgpool1d": [90, 115], "avgpool1dmodel": 109, "avgpool2d": [90, 115], "avgpool2dmodel": 110, "avgpool3d": [90, 115], "avgpool3dmodel": 111, "avoid": [9, 18, 125], "ax": [1, 124, 166, 167, 168, 175, 179, 180, 188, 190, 192], "axi": [29, 77, 138, 139, 166, 167, 168, 175, 180, 182, 184, 186, 188, 190, 191, 192, 193, 194], "b": [1, 11, 43, 45, 68, 80, 81, 82, 91, 93, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 182, 184, 191, 194], "b_i": [140, 141, 144], "back": [110, 111, 138, 143, 188, 192], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 125, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 164, 166, 168, 181, 186, 188, 192], "backward": [0, 13, 15, 118, 119, 120, 121, 134], "balanc": 97, "bar": 119, "base": [1, 6, 7, 10, 11, 14, 16, 17, 18, 19, 35, 43, 84, 96, 97, 116, 117, 118, 119, 120, 121, 135, 136, 140, 141, 142, 144, 145, 154, 164, 165, 166, 168, 179, 186], "basic": [0, 31, 32, 33, 65, 66, 69, 70], "batch": [1, 7, 10, 12, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 80, 81, 82, 91, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 139], "batch_norm": [42, 53, 101, 102, 103], "batch_norm1": 20, "batch_norm2": 20, "batchnorm1d": [90, 108], "batchnorm1dmodel": 101, "batchnorm2d": [20, 90, 108], "batchnorm2dmodel": 102, "batchnorm3d": [90, 108], "batchnorm3dmodel": 103, "bceloss": [90, 100], "becaus": 129, "becom": [8, 14], "befor": [7, 15, 119, 125, 131, 186], "begin": [8, 22, 25, 26, 27, 71, 73, 74, 75, 97, 98, 99, 109, 110, 111, 112, 113, 114, 124, 133, 140, 141, 143, 156, 160, 166, 168, 170, 186], "behav": [97, 178], "behavior": [17, 20, 123, 133, 139, 149], "being": [19, 84, 85, 86, 87, 88, 123, 125, 182, 184, 194], "below": [10, 139, 147, 150], "benefici": 20, "benefit": [22, 116, 126], "bernoulli": [84, 85, 86, 87, 88], "best": [65, 66, 69, 70], "beta": [101, 102, 103, 104, 105, 106, 107], "better": [6, 23, 65, 66, 69, 70, 104, 105, 106, 116, 120], "between": [14, 31, 32, 33, 35, 43, 48, 80, 81, 82, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 119, 120, 121, 133, 135, 136, 139, 142, 145, 146, 180], "beyond": [0, 17], "bia": [31, 32, 33, 43, 45, 52, 54, 55, 80, 81, 82, 91, 93, 101, 102, 103, 104, 105, 106, 107], "bias": [80, 81, 82, 93, 107, 116], "bias1": 18, "bias2": 18, "bilinear": [42, 44, 90, 94], "bilinearmodel": 91, "binari": [28, 46, 76, 84, 85, 86, 87, 88, 95], "binary_cross_entropi": [42, 49], "block": [14, 35, 80, 81, 82, 125], "block1": 116, "block2": 116, "bmatrix": 143, "bool": [12, 14, 15, 36, 37, 38, 39, 40, 52, 54, 80, 81, 82, 91, 93, 101, 102, 103, 104, 105, 106, 107, 120, 123, 128, 129, 130, 132, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 175, 180, 181], "both": [31, 45, 56, 60, 72, 80, 81, 109, 110, 112, 113, 137, 138, 139, 143, 147], "bound": [66, 68, 70, 132], "break": 116, "broadcast": [87, 88, 167, 175, 180, 189, 193], "buffer": [119, 120, 121], "build": [0, 14, 17, 20, 116], "built": [0, 20, 116], "c": [35, 38, 39, 40, 47, 51, 52, 54, 56, 57, 58, 60, 61, 62, 87, 88, 96, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 124, 184, 194], "c_": [80, 81, 82], "c_in": [31, 32, 33], "c_out": [31, 32, 33], "calcul": [0, 1, 15, 125, 129, 134], "calculu": [2, 9], "call": [14, 123, 135, 136, 139, 140, 141, 142, 144, 145], "callabl": 117, "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 25, 31, 32, 33, 72, 73, 78, 80, 81, 82, 104, 105, 106, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 124, 125, 126, 132, 133, 134, 139, 148, 149, 150, 151, 153, 154, 167, 175, 180, 184, 186, 188, 189, 192, 193, 194], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 146, 147, 150, 151, 152, 153, 154], "captur": [35, 80, 81, 82, 91], "care": 125, "case": [8, 22, 25, 26, 27, 71, 73, 74, 75, 97, 98, 99, 109, 110, 111, 112, 113, 114, 116, 124, 140, 141, 156, 160, 166, 168, 170, 186], "caus": [9, 119, 120, 121], "cdot": [2, 3, 6, 7, 8, 11, 22, 23, 25, 27, 28, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 69, 70, 72, 76, 84, 91, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 137, 138, 139, 142, 144], "center": [78, 120], "central": 126, "certain": [3, 23, 43, 91, 123, 166, 168], "chain": [6, 7, 20], "chang": [48, 97, 124, 125, 187, 189, 193], "channel": [31, 32, 33, 35, 38, 39, 40, 52, 54, 56, 57, 58, 60, 61, 62, 80, 81, 82, 87, 88, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114], "check": 123, "checkpoint": 118, "choleski": 5, "chosen": 84, "clariti": 126, "class": [0, 29, 47, 51, 116, 118, 147, 150, 181], "classif": [28, 29, 46, 47, 51, 76, 77, 95, 96, 99], "cleaner": [125, 139], "clear": [15, 134, 148, 149], "clearli": 126, "clip": 155, "close": [6, 9, 75, 95, 120], "closer": 71, "closur": [117, 118], "co": [155, 171], "code": [7, 16, 18, 20, 123, 125, 126, 133], "coeffici": [11, 119, 120, 121], "col": 35, "collect": [1, 16, 17, 19, 20, 118], "column": [3, 4, 6, 10, 11, 12, 35, 150, 184], "combin": [17, 20, 22, 23, 72, 96, 116, 167, 175, 180, 182], "common": [35, 118], "commonli": [0, 23, 28, 29, 30, 31, 33, 43, 50, 52, 54, 69, 70, 77, 82, 95, 98, 99, 109, 110, 111, 112, 113, 114, 124, 126, 151, 190], "compar": [133, 191], "compat": [1, 92, 107, 116, 124, 133], "complex": [0, 4, 16, 17, 20, 26, 74, 112, 114, 116, 118], "compon": [9, 14, 17, 118, 134], "compos": [80, 81, 82, 109, 110, 111, 112, 113, 114, 116], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 45, 46, 47, 48, 50, 51, 52, 54, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 188, 192], "computation": 9, "compute_loss": [118, 119, 120, 121], "concaten": [31, 32, 33, 184, 185, 191, 194], "concept": [0, 9], "condit": [2, 3, 6], "configur": 19, "conjunct": [35, 99], "connect": [45, 80, 81, 82, 93], "consid": [6, 9, 20, 65, 66, 69, 70, 116, 123, 148, 149], "consider": 9, "consist": [13, 126, 131, 133, 186], "consistent_tensor": 133, "constant": [46, 47, 52, 54, 55, 64, 75, 95, 96, 101, 102, 103, 104, 105, 106, 107, 120, 126, 186], "constant_": 63, "constant_pad": 186, "construct": [0, 17, 116, 147, 188, 192], "contain": [3, 4, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 29, 35, 43, 45, 46, 47, 51, 95, 96, 99, 117, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 149, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183], "context": [123, 125], "contextmanag": 125, "contigu": 187, "continu": [73, 130], "contrast": [104, 105, 106], "contribut": [84, 85, 86, 87, 88, 109, 112, 113, 114, 119, 178], "control": [71, 97, 119, 120, 121, 123, 133], "conv": [102, 103], "conv1": [20, 80, 81, 82, 109, 110, 111, 112, 113, 114], "conv1d": [34, 42, 83, 90, 109, 112], "conv1dmodel": 80, "conv2": [20, 80, 81, 82], "conv2d": [17, 20, 34, 42, 83, 90, 102, 110, 113, 116], "conv2dmodel": 81, "conv3d": [34, 42, 83, 90, 103, 111, 114], "conv3dmodel": 82, "conv_lay": 17, "convblock": 116, "convent": 139, "converg": [9, 78, 119, 120, 121], "convers": [96, 99], "convert": [13, 15, 29, 77, 134], "convnetwork": 17, "convolut": [17, 31, 32, 33, 35, 80, 81, 82, 110, 111, 113, 114, 186], "convolv": [31, 32, 33, 80, 81, 82], "core": [14, 116, 117, 134], "correct": [16, 96, 99], "correctli": [9, 14, 16, 17, 18, 19, 20, 96, 99, 133], "correspond": [4, 16, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 74, 77, 91, 93, 101, 102, 103, 104, 105, 106, 110, 111, 119, 120, 121, 137, 138, 140, 141, 144, 164, 165, 171, 173, 184, 186, 188, 192, 194], "cosh": [155, 172, 177], "cosin": [157, 161, 162, 171], "could": 14, "count": 182, "cover": [1, 31, 32, 33], "creat": [0, 13, 14, 17, 20, 116, 124, 133, 146, 150, 151, 152, 153, 154, 191], "creation": [17, 20], "criterion": [95, 96, 97, 98, 99], "critic": [9, 118, 133], "cross": [46, 47, 95, 96], "cross_entropi": [42, 49], "crossentropyloss": [90, 100], "cube": 155, "cumul": [23, 72], "current": [14, 119, 123], "custom": [0, 13, 16, 17, 18, 19, 20, 71, 73, 116, 133, 150], "custommodul": 13, "customnetwork": 16, "customparametermodel": [18, 19], "d": [33, 40, 58, 62, 103, 106, 107, 111, 114, 124, 147], "d_": [33, 58, 62, 82, 111, 114], "d_1": 107, "d_2": 107, "d_n": 107, "d_out": [33, 58, 62], "dampen": [119, 120, 121], "data": [0, 7, 13, 15, 19, 30, 31, 33, 35, 39, 40, 45, 74, 78, 80, 81, 82, 93, 106, 109, 111, 114, 117, 118, 119, 120, 121, 124, 126, 133, 134, 135, 136, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181, 186, 187, 188, 189, 190, 192], "dataset": 125, "ddot": 143, "debug": [20, 123, 131], "decai": [119, 120, 121], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 52, 72, 75, 116, 133], "deeper": [0, 75], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "default": [8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 29, 31, 32, 33, 36, 37, 38, 39, 40, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 77, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 123, 128, 129, 130, 132, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 175, 179, 180, 181, 182, 184, 186, 188, 191, 194], "defin": [0, 16, 17, 18, 19, 20, 72, 95, 96, 97, 98, 99, 109, 116, 119, 120, 121, 126, 129, 130, 144, 149, 160, 179], "definit": [0, 2], "delai": 119, "delta": [29, 48, 77, 97], "delta_": [29, 77], "demonstr": [0, 1, 116, 126], "denomin": [52, 54, 55, 101, 102, 103, 104, 105, 106, 107, 120, 136], "denot": [7, 76, 80, 81, 82, 84, 85, 86, 87, 88, 179], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [23, 72], "depend": [0, 7, 8, 19, 46, 47, 48, 50, 51, 80, 137, 147, 166, 168, 188, 192], "depth": [17, 33, 40, 58, 62, 82, 103, 106, 111, 114], "depthwis": [31, 32, 33], "deriv": [9, 10, 29, 72, 77, 78, 80, 81, 82, 91, 93], "descend": 12, "descent": [0, 119, 121], "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 17, 18, 19, 20, 22, 27, 75, 84, 116, 126], "desir": [13, 179, 181], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 118, 133, 139], "determin": [0, 1, 2, 3, 65, 66, 69, 70, 80, 81, 82, 110, 111, 113, 114, 120, 123, 128, 129, 130, 132, 148, 149], "develop": [0, 116, 133], "deviat": [65, 67, 69], "diag": [9, 155], "diagon": [9, 10, 12, 147, 150, 178], "diagonaliz": 4, "dict": [14, 16, 18, 92, 117], "dictionari": [14, 15, 16, 18, 20, 117], "differ": [7, 17, 20, 29, 43, 77, 91, 98, 118, 124, 131, 133, 145, 154, 180, 190], "differenti": [0, 2, 11, 72, 116, 128, 129, 130, 132, 134, 146, 148, 149, 151, 153], "dilat": [31, 32, 33, 80, 81, 82], "dilation_height": 35, "dilation_width": 35, "dim": [96, 99], "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 29, 43, 45, 52, 54, 55, 77, 80, 81, 82, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 124, 126, 128, 132, 134, 138, 148, 166, 167, 168, 175, 178, 179, 180, 182, 184, 186, 188, 190, 191, 192, 193, 194], "dimension": [7, 9, 10, 12, 31, 32, 33, 56, 57, 58, 60, 61, 62, 80, 81, 82, 86, 87, 88, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 124, 138, 139, 143, 147, 164, 167, 175, 178, 180, 183, 187, 188, 190, 192], "direct": [4, 95, 96, 97, 98, 99, 119, 120, 121], "directli": [16, 17, 18, 19, 131, 133, 181], "disabl": [123, 125], "discontinu": 170, "discrep": [95, 96, 99], "discret": [129, 133], "distribut": [23, 29, 65, 66, 67, 68, 69, 70, 72, 77, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 96, 99, 109, 110, 111, 128, 129, 130, 132, 133, 167, 175, 178, 180, 191], "div": 155, "divid": [9, 17, 20, 29, 31, 32, 33, 77, 95, 96, 97, 98, 99, 136], "divis": [0, 9, 31, 32, 33, 84, 85, 86, 87, 88, 120, 136], "do": [9, 11, 13, 16, 17, 18, 19, 36, 37, 38, 39, 116, 123, 154, 178, 186], "document": [0, 118, 126, 133], "doe": [0, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 70, 123, 125, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 189], "doesn": 125, "don": 125, "dot": [4, 7, 16, 17, 18, 19, 20, 107, 112, 113, 114, 138, 143, 155, 182, 184, 191, 194], "down": 116, "drawback": 22, "drawn": [128, 129, 130, 132, 133], "drop": [84, 85, 86, 87, 88], "dropout": [23, 36, 38, 39, 40, 84, 86, 87, 88], "dropout1d": [41, 42, 89, 90], "dropout1dmodel": 86, "dropout2d": [41, 42, 89, 90], "dropout3d": [41, 42, 89, 90], "dropoutmodel": 85, "dtype": [13, 15, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181], "due": [7, 9, 31, 32, 74], "duplic": [16, 18], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 37, 38, 39, 40, 52, 54, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 125, 134, 135, 166, 167, 168, 175, 180], "dy": [25, 73], "dynam": [14, 17, 18, 19, 20, 107, 123], "dynamicnetwork": 17, "e": [3, 4, 6, 7, 10, 12, 13, 29, 76, 77, 84, 96, 117, 120, 150, 162, 164, 165, 172, 177, 178, 182], "each": [4, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 52, 54, 74, 77, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 120, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 184, 186, 188, 191, 192, 194], "eas": 0, "easi": [0, 15, 16, 18], "easier": [16, 17, 20], "easili": [15, 19], "economi": 12, "edg": 186, "educ": 0, "effect": [16, 17, 18, 19, 20, 29, 31, 32, 33, 35, 71, 72, 74, 76, 77, 78, 101, 102, 103, 104, 105, 106, 107, 123, 124, 125, 184, 194], "effici": [0, 1, 6, 11, 35, 96, 116, 125], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [45, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 181], "element": [9, 10, 15, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 74, 77, 80, 81, 82, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 107, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 186, 188, 189, 190, 192], "elementwise_affin": 107, "elsewher": [112, 113, 114, 150], "elu": [24, 42, 79, 90], "elumodel": 71, "empti": [14, 20, 155], "empty_lik": 155, "enabl": [0, 7, 12, 14, 15, 16, 17, 18, 19, 74, 80, 81, 82, 91, 93, 116, 118, 123, 125, 128, 129, 130, 132, 134], "encapsul": [116, 134], "encod": [96, 99], "encourag": [85, 86, 87, 88, 95, 96, 99], "end": [8, 22, 25, 26, 27, 71, 73, 74, 75, 97, 98, 99, 109, 110, 111, 112, 113, 114, 140, 141, 143, 146, 156, 160, 166, 168, 170, 182, 186], "enforc": [14, 16, 18], "engin": 9, "enhanc": [16, 18], "ensur": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 73, 77, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 144, 167, 175, 180, 186], "enter": 125, "entir": [38, 39, 40, 87, 88, 133], "entri": 190, "entropi": [46, 47, 95, 96], "environ": 0, "ep": [46, 47, 52, 54, 55, 95, 96, 101, 102, 103, 104, 105, 106, 107, 120], "epsilon": [95, 96, 101, 102, 103, 104, 105, 106, 107, 120], "equal": [7, 109, 110, 111], "equat": [4, 9, 11], "equival": [139, 178, 187], "error": [4, 6, 14, 17, 18, 19, 20, 23, 48, 50, 72, 95, 96, 97, 98, 116, 117, 125, 126], "especi": [16, 18, 19, 76, 124, 125, 126, 131], "essenti": [0, 1, 7, 9, 32, 35, 116, 131, 133, 166], "estim": [98, 120], "etc": 95, "euclidean": 8, "evalu": [14, 52, 54, 84, 85, 86, 87, 88, 101, 102, 103, 104, 105, 106], "even": [125, 146, 147, 150, 151, 152, 153, 154], "evenli": 146, "everywher": 170, "exact": [14, 17, 179], "exactli": 20, "exampl": 139, "except": [170, 182, 184, 194], "exclus": [129, 132, 146], "execut": [17, 125], "exist": [11, 16, 18, 20, 182], "exit": 125, "exp": [22, 27, 28, 30, 71, 75, 155], "expand": [35, 188, 192], "expect": [2, 17, 20, 84, 85, 86, 87, 88, 107, 116, 126], "experi": [0, 131, 133], "experiment": 133, "explan": [7, 9, 119], "explicit": 20, "explicitli": [16, 18], "explod": [75, 101, 102, 103], "explor": [116, 133], "expon": [7, 144], "exponenti": [22, 27, 29, 71, 75, 77, 84, 164], "extens": 118, "extern": 0, "extract": [35, 82, 109, 111, 147, 166, 168], "extrem": 9, "ey": 155, "f": [0, 18, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 77], "facilit": [16, 20, 29, 77, 80, 81, 82, 116, 118], "factor": [22, 31, 32, 33, 35, 69, 70, 119, 120, 121, 126], "failur": [16, 17, 18, 19, 116], "fals": [12, 13, 14, 15, 36, 37, 38, 39, 40, 52, 54, 63, 65, 66, 67, 68, 69, 70, 80, 81, 82, 91, 93, 120, 123, 128, 129, 130, 132, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 175, 180, 181], "fan": [65, 66, 69, 70], "fan_in": [65, 66], "fan_out": [65, 66], "faster": 125, "fc": [17, 81, 82, 109, 110, 111, 112, 113, 114], "fc1": [16, 20, 72, 74, 75, 76, 78, 93], "fc2": [16, 20, 72, 74, 75, 76, 78, 93], "featur": [43, 45, 52, 82, 85, 86, 87, 88, 91, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116], "feed": 134, "fill": [63, 67, 68, 128, 129, 130, 132, 151, 152, 153, 154], "filter": [31, 32, 33, 35, 81, 82], "filter_height": 35, "filter_s": 35, "filter_width": 35, "final": [16, 17, 18, 19, 20], "find": [11, 166, 168], "finish": 125, "first": [4, 17, 18, 43, 91, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 194], "fit": 116, "fix": [17, 186], "flatten": [20, 35, 143, 185, 187, 188], "flexibl": [0, 16, 17, 18, 19, 20, 116, 118, 126, 151, 152], "float": [13, 15, 22, 25, 36, 37, 38, 39, 40, 46, 47, 48, 52, 54, 55, 63, 67, 68, 69, 70, 71, 73, 84, 85, 86, 87, 88, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 119, 120, 121, 126, 132, 134, 146, 149, 160, 181], "float32": [13, 15, 134, 146, 147, 150, 151, 153, 181], "float64": [154, 181], "flow": [20, 70, 72, 76, 78, 80, 81, 82, 91, 93, 123], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 126, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 166, 168, 189], "form": [10, 143, 188, 192], "format": [96, 99], "formul": 23, "formula": [4, 12, 29, 77, 97, 119, 120, 121, 139, 180], "forward": [0, 13, 14, 116, 118, 119, 120, 121], "found": 0, "foundat": [14, 116, 118, 134], "four": 186, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 120, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "frame": 40, "framework": [0, 96, 99, 101, 102, 103, 104, 105, 106, 117, 118], "frequent": [96, 99], "from": [0, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 43, 52, 54, 63, 65, 66, 67, 68, 69, 70, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 116, 117, 119, 120, 121, 124, 125, 126, 128, 129, 130, 132, 133, 134, 139, 140, 141, 145, 147, 166, 167, 168, 175, 180, 182, 184, 188, 190, 191, 192, 194], "full": 12, "full_matric": 12, "fulli": [1, 45, 93, 133], "function": [0, 1, 14, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 116, 118, 126, 133], "fundament": [0, 45, 93], "further": [0, 133, 167, 175, 180], "futur": 92, "g": [3, 4, 7, 10, 12, 84, 117, 120, 182], "g_t": 120, "gain": [69, 70], "gamma": [101, 102, 103, 104, 105, 106, 107], "gaussian": [23, 72], "gelu": [24, 42, 79, 90], "gelunetwork": 72, "gener": [9, 84, 85, 86, 87, 88, 105, 125, 128, 129, 130, 131, 132, 133, 138, 146, 148, 149], "give": [0, 119, 120], "given": [3, 4, 7, 9, 10, 12, 35, 95, 96, 99, 117, 123, 152, 154], "global": [123, 125, 131, 133], "goal": [95, 96, 99], "grad": [13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "grad_output": 7, "gradient": [0, 1, 13, 15, 116, 117, 118, 119, 120, 121, 123, 125, 128, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181], "graph": [0, 70, 134, 146, 147, 150, 151, 152, 153, 154], "greater": 160, "group": [17, 31, 32, 33, 80, 81, 82, 117, 118], "group1": 17, "group2": 17, "guarante": 131, "h": [32, 33, 35, 39, 40, 57, 58, 61, 62, 102, 103, 105, 106, 111, 114], "h_": [32, 33, 57, 58, 61, 62, 81, 82, 110, 111, 113, 114], "h_out": [32, 33, 57, 58, 61, 62], "h_stack": 184, "ha": [4, 20, 31, 32, 33, 95, 96, 101, 102, 103, 104, 105, 106, 107, 117, 118, 139, 178, 182, 184, 191, 194], "half": 173, "hand": 11, "handl": [0, 9, 14, 16, 17, 18, 19, 20, 96, 99, 116, 118, 125], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 17, 19, 20, 32, 33, 70, 116, 150, 151, 152, 153, 154, 166, 168, 182, 184, 190, 191, 194], "height": [32, 33, 35, 39, 40, 57, 58, 61, 62, 81, 82, 102, 103, 105, 106, 110, 111, 113, 114], "help": [0, 25, 27, 40, 71, 73, 75, 78, 101, 102, 103, 109, 110, 112, 113, 119, 123, 124, 125, 126], "henc": 189, "here": [2, 14, 43, 116, 118, 124, 125, 126, 133], "hidden": 17, "hidden_s": 17, "hierarch": [17, 20, 116], "hierarchi": 81, "hierarchicalnetwork": 17, "high": [0, 129, 132], "higher": [96, 99, 119, 120, 121, 138, 139, 143, 164], "highest": 129, "highlight": [112, 113, 114], "hint": 126, "histori": [128, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154], "hold": [16, 17, 18, 19], "horizont": [184, 191], "hot": [96, 99], "how": [0, 17, 20, 116, 126], "howev": [13, 70], "hstack": 185, "huber": [48, 97], "huber_loss": [42, 49], "huberloss": [90, 100], "huberregressionmodel": 97, "hyperbol": [30, 78, 162, 172, 177], "hyperparamet": [117, 119], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "ideal": [0, 20], "ident": [6, 7, 90, 94, 131, 133, 150, 189], "identifi": 18, "ii": 178, "ij": [29, 77, 137, 138, 139, 143], "ik": [137, 138, 139], "ill": [3, 9], "imag": [32, 54, 81, 105], "imbal": [96, 99], "implement": [0, 9, 14, 35, 117, 118, 119, 120, 121, 184, 194], "impli": [80, 81], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "improp": [17, 20, 133], "improv": [52, 72, 75, 78, 119, 120, 126], "in1_featur": [43, 91], "in2_featur": [43, 91], "in_channel": [17, 20, 80, 81, 82, 102, 103, 109, 110, 111, 112, 113, 114, 116], "in_featur": [16, 17, 20, 45, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 104, 107, 109, 110, 111, 112, 113, 114], "includ": [0, 1, 7, 8, 14, 15, 17, 19, 20, 116, 117, 118, 126, 133, 139, 186], "inclus": [15, 18, 129, 132], "incom": [45, 93], "incorpor": [12, 72], "increas": [31, 32, 33, 35, 124, 184, 194], "independ": [17, 31, 32, 33, 84, 85, 86, 87, 88, 107, 139, 149], "index": [124, 146, 147, 150, 189], "indic": [15, 17, 19, 20, 47, 51, 96, 99, 109, 123, 134], "individu": [17, 20, 97, 107, 118], "induc": [27, 75], "inf": 176, "infer": [17, 20, 125], "infin": [10, 12], "inform": [0, 13, 118, 125], "infti": 8, "inherit": [119, 120, 121], "init": 64, "initi": [13, 15, 16, 17, 18, 19, 20, 63, 65, 66, 67, 68, 69, 70, 80, 81, 82, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 107, 116, 117, 118, 119, 120, 121, 128, 131, 132, 133, 146, 150, 151, 152, 153, 154, 181], "inner": [0, 137, 155], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 125, 126, 133, 134, 135, 137, 138, 139, 143, 147, 149, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "input1": 91, "input2": 91, "input_": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62], "input_1": 43, "input_2": 43, "input_data": [71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114], "input_s": [17, 19, 77, 96, 99], "input_tensor": [0, 13, 16, 17, 18, 19, 20, 29, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116], "insid": [123, 125], "insight": 0, "inspect": [14, 15, 20, 117], "instabl": [9, 119, 120, 121], "instal": 0, "instanc": [0, 14, 15, 16, 18, 19, 20, 54, 104, 105, 106, 107, 117, 181, 188, 192], "instance_norm": [42, 53, 104, 105, 106], "instancenorm1d": [90, 108], "instancenorm1dmodel": 104, "instancenorm2d": [90, 108], "instancenorm3d": [90, 108], "instead": [0, 16, 17, 18, 19, 20, 65, 66, 69, 70, 125, 126, 148, 149], "int": [7, 8, 13, 15, 29, 31, 32, 33, 35, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 70, 77, 80, 81, 82, 91, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 134, 146, 147, 148, 150, 151, 153, 160, 166, 167, 168, 175, 179, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193], "integ": [7, 31, 32, 33, 80, 81, 82, 107, 110, 111, 112, 113, 114, 126, 129, 130, 132, 133, 148, 151, 153, 167, 175, 179, 180, 186, 188, 189, 192], "integr": [1, 15, 17, 19, 20, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 91, 93, 109, 110, 111, 112, 113, 114], "intend": [13, 18, 19], "intens": 9, "intent": 126, "interact": [43, 91, 116, 133], "interfac": [14, 17, 118], "interfer": [123, 125], "intermedi": 9, "intern": [16, 17, 18, 19, 20, 96, 99, 116], "interpret": [29, 77, 126, 182], "interv": [128, 132, 146], "introduc": [26, 72, 74, 76, 78, 84, 85, 86, 87, 88], "introspect": 20, "intuit": [0, 16, 18, 116], "inv": 5, "inv_a": 6, "invari": [110, 113], "invers": [0, 3, 6, 7, 9, 157, 158, 159], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 22, 23, 25, 26, 27, 28, 30, 43, 45, 80, 81, 82, 91, 93, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 164, 165, 166, 168, 171, 173, 186, 188, 192], "is_leaf": 134, "issu": [75, 101, 102, 103], "item": 98, "iter": [13, 14, 17, 19, 117, 119, 120, 121, 146], "ith": [29, 77], "its": [7, 9, 13, 16, 17, 18, 19, 31, 32, 33, 35, 70, 72, 74, 112, 113, 114, 116, 117, 123, 124, 125, 146, 148, 149, 153, 166, 168, 181, 189], "itself": [2, 7, 16, 17, 18, 19], "j": [29, 77, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 191], "jk": 138, "join": 182, "k": [7, 31, 80, 96, 102, 103, 105, 106, 109, 112, 113, 137, 138, 147, 150, 182], "k_d": [33, 82, 111, 114], "k_h": [32, 33, 81, 82, 110, 111, 114], "k_w": [32, 33, 81, 82, 110, 111, 114], "kaim": [65, 66, 69, 70], "kaiming_norm": 64, "kaiming_normal_": [65, 66, 69, 70], "kaiming_uniform": 64, "kaiming_uniform_": [65, 66, 69, 70], "keep": [14, 74, 125, 189], "keep_grad": [15, 128, 129, 130, 132, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181], "keep_var": 14, "keepdim": [166, 167, 168, 175, 180], "kei": [14, 16, 18, 20, 117], "kept": [167, 175, 180], "kernel": [31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 80, 81, 82, 110, 111, 114], "kernel_s": [17, 20, 56, 57, 58, 60, 61, 62, 80, 81, 82, 102, 103, 109, 110, 111, 112, 113, 114], "keyerror": 14, "keyword": [14, 92], "kj": [137, 139], "kroneck": [29, 77], "kwarg": [14, 92], "l": [2, 9, 31, 38, 56, 60, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "l2": [119, 120, 121], "l_": [31, 56, 60, 80, 109, 112], "l_out": [31, 56, 60], "label": [95, 96, 99], "lambd": 119, "lambda": [4, 27, 75, 119], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [80, 91, 109, 112], "larg": [9, 97, 116, 119, 120, 121, 125], "larger": [16, 18, 31, 32, 33, 35, 119, 140, 186], "largest": 166, "last": [29, 55, 77, 138, 139, 182], "layer": [0, 14, 16, 17, 20, 29, 45, 52, 54, 55, 65, 66, 69, 70, 77, 80, 81, 82, 91, 92, 93, 99, 107, 109, 110, 111, 112, 113, 114, 116, 133, 186], "layer_group": 17, "layer_norm": [42, 53, 107], "layer_sequ": [17, 20], "layernorm": [90, 108], "layernormmodel": 107, "lead": [17, 20, 72, 104, 105, 106, 107, 119, 120, 133], "leaf": 134, "leaki": [25, 73], "leaky_relu": [24, 42, 73], "leakyrelu": [79, 90], "learn": [0, 7, 9, 16, 17, 18, 19, 26, 29, 71, 73, 74, 77, 80, 81, 82, 85, 86, 87, 88, 91, 93, 116, 117, 119, 120, 121, 124, 131], "learnabl": [13, 14, 15, 52, 54, 55, 80, 81, 82, 91, 93, 101, 102, 103, 104, 105, 106, 107, 116], "least": [9, 10, 12, 178], "left": [7, 8, 9, 12, 23, 29, 72, 77, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114], "length": [17, 31, 38, 56, 60, 80, 92, 101, 104, 109, 112, 186], "leq": [97, 144, 160], "less": [22, 25, 48, 71, 73, 96, 97, 99, 160], "let": 4, "level": 0, "leverag": [11, 116], "librari": [0, 1, 14, 116, 117, 118, 126, 133, 134], "lightweight": 0, "like": [0, 13, 14, 17, 20, 31, 69, 70, 75, 84, 101, 102, 103, 104, 105, 106, 123, 124, 126, 181], "likelihood": [51, 96, 99], "limit": 160, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 17, 18, 20, 22, 23, 25, 26, 27, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 91, 92, 95, 96, 97, 98, 99, 101, 104, 107, 109, 110, 111, 112, 113, 114, 150], "linearli": 97, "list": [13, 15, 16, 17, 18, 19, 55, 92, 107, 117, 126, 128, 129, 130, 132, 134, 147, 148, 149, 151, 152, 153, 154, 179, 189, 190, 193], "liter": [46, 47, 48, 50, 51, 65, 66, 80, 81, 82, 95, 96, 97, 98, 99], "ln": 144, "load": [13, 14, 15, 117, 118, 119, 120, 121], "load_state_dict": [14, 117, 118, 119, 120, 121], "local": [35, 80], "log": [51, 95, 96, 99, 155], "log_softmax": 99, "logarithm": [144, 164, 165], "logic": [116, 117], "logit": [29, 77, 96], "logsoftmax": [96, 99], "long": 179, "loop": [17, 118, 119, 120, 121], "loss": [0, 9, 16, 17, 18, 19, 20, 29, 46, 47, 48, 50, 51, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 92, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 117, 118, 119, 120, 121], "low": [0, 129, 132], "lower": [2, 68, 119, 120, 121, 132], "lowest": 129, "lr": [117, 118, 119, 120, 121], "lu": 6, "lucid": [5, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 127, 155, 185], "m": [16, 17, 20, 110, 111, 113, 114, 150], "machin": [0, 9, 124, 131], "magnitud": 120, "mai": [0, 4, 6, 9, 17, 19, 97, 119, 120, 121, 125, 133], "main": [0, 10, 17, 147, 150], "maintain": [9, 13, 14, 16, 17, 18, 20, 27, 65, 66, 69, 70, 71, 72, 75, 84, 85, 86, 87, 88, 101, 102, 103, 104, 105, 106, 120], "make": [0, 17, 20, 76, 96, 97, 107, 110, 113, 116, 124, 133, 134, 139], "manag": [0, 14, 16, 17, 18, 19, 20, 116, 118, 123, 125, 133], "manhattan": 8, "manipul": [0, 16, 18], "manner": [17, 20], "manual": [46, 47, 51, 95, 96, 99, 125], "map": [14, 28, 30, 76, 78], "mask": [13, 84, 85, 86, 87, 88], "match": [11, 14, 17, 20, 46, 48, 50, 55, 117, 164, 188, 189, 192, 193], "math": [161, 171, 176], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 137, 138, 139, 143, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "mathcal": [65, 67, 69, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "mathemat": 6, "mathrm": 9, "matmul": 155, "matric": [1, 3, 4, 6, 9, 11, 12, 137, 138, 139, 150], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 35, 43, 92, 93, 116, 137], "matrix_pow": 5, "max": [8, 26, 60, 61, 62, 74, 112, 113, 114, 140, 155, 160], "max_pool": [112, 113, 114], "max_pool1d": [42, 59], "max_pool2d": [42, 59], "max_pool3d": [42, 59], "max_valu": 160, "maximum": [8, 74, 112, 113, 114, 155, 160, 166], "maxpool1d": [90, 115], "maxpool1dmodel": 112, "maxpool2d": [17, 20, 81, 90, 115], "maxpool2dmodel": 113, "maxpool3d": [82, 90, 115], "maxpool3dmodel": 114, "mean": [10, 13, 27, 31, 32, 33, 36, 46, 47, 48, 50, 51, 52, 54, 67, 71, 72, 73, 74, 75, 76, 78, 82, 84, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 120, 123, 130, 155, 160, 164, 165, 166, 168, 171, 173, 175, 178, 179, 180], "meaning": [20, 126], "measur": [95, 96, 98, 99], "mechan": [0, 19, 43], "membership": 95, "memori": [125, 148, 149], "method": [0, 1, 6, 16, 17, 18, 19, 20, 46, 47, 48, 50, 51, 65, 66, 69, 70, 95, 96, 97, 98, 99, 118, 119, 120, 121, 133], "middl": 124, "might": 116, "min": [141, 155, 160], "min_valu": 160, "mind": [0, 17, 20, 125], "minim": [0, 20, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 118], "minimalist": 0, "minimum": [155, 160, 168], "minu": 76, "mirror": [152, 154], "mismatch": [14, 116, 117], "miss": [14, 116], "mitig": [25, 71, 73, 75, 101, 102, 103], "mode": [0, 40, 52, 54, 65, 66, 84, 85, 86, 87, 88, 186], "model": [0, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 125, 133], "modif": [20, 125], "modifi": [16, 17, 18, 19, 63, 65, 66, 67, 68, 69, 70, 84, 123, 125, 131, 184, 194], "modul": [0, 13, 15, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 133], "modular": [0, 14, 17, 20, 116], "moduledict": [17, 18, 20, 21], "modulelist": [19, 20, 21], "momentum": [52, 54, 101, 102, 103, 104, 105, 106, 119, 120, 121], "moor": 9, "more": [0, 4, 16, 17, 20, 71, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 130, 139, 178, 191], "most": [1, 113], "move": [119, 120], "mse": [48, 50, 97, 98], "mse_loss": [42, 49], "mseloss": [90, 100], "mu": [67, 101, 102, 103, 104, 105, 106, 107, 180], "mu_i": [104, 105, 106], "mul": 155, "multi": [29, 47, 51, 77, 96, 99, 167, 175, 180], "multidimension": [128, 132, 148], "multipl": [0, 1, 7, 11, 18, 19, 20, 35, 84, 85, 86, 87, 88, 96, 99, 116, 124, 128, 129, 130, 132, 137, 142, 148, 149], "multipli": [7, 19, 45, 93, 142, 143], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 55, 84, 85, 86, 87, 88, 99, 117, 125, 178, 182, 184, 186, 188, 189, 191, 192, 194], "mymodel": [14, 15, 116, 118, 119, 120, 121], "myoptim": [117, 118], "n": [7, 8, 16, 17, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 69, 80, 81, 82, 87, 88, 91, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 150, 167, 178, 180], "n1": 8, "name": [14, 16, 18, 20, 126], "nan": [10, 12], "natur": [9, 80, 91, 109, 112, 144, 164, 165], "ndarrai": [13, 15, 126, 134, 147, 149, 152, 154, 181], "ndim": [10, 12, 15, 134], "ne": 7, "necessari": [9, 125, 184, 194], "need": [17, 18, 19, 29, 91, 116, 125, 148, 149], "neg": [7, 9, 12, 22, 51, 71, 73, 74, 75, 96, 99, 182], "negative_slop": [25, 73], "neglect": 19, "neq": 8, "nest": [17, 20, 116], "network": [0, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 52, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 132, 133, 134, 146, 151, 153, 166, 168, 186], "neural": [0, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 52, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 132, 133, 134, 146, 151, 153, 166, 168, 186], "neuralnetwork": 74, "neuron": 73, "new": [14, 15, 22, 23, 25, 26, 27, 28, 30, 43, 45, 65, 66, 67, 68, 69, 70, 117, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 184, 186, 188, 189, 191, 192, 193, 194], "next": 20, "nll": 51, "nll_loss": [42, 49], "nllloss": [90, 100], "nn": [0, 21, 24, 34, 41, 44, 49, 53, 59, 64, 79, 83, 89, 90, 94, 100, 108, 115, 117, 118, 119, 120, 121], "no_grad": 123, "node": 134, "nois": [12, 133], "non": [4, 7, 9, 12, 19, 23, 25, 26, 65, 66, 71, 72, 73, 74, 75, 76, 78, 84, 85, 86, 87, 88, 125, 144, 160], "none": [14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "norm": [1, 5], "normal": [23, 27, 29, 30, 52, 54, 55, 64, 65, 69, 72, 75, 77, 84, 101, 102, 103, 104, 105, 106, 107, 120, 130, 133], "normal_": 67, "normalized_shap": [55, 107], "note": [31, 84], "noth": [36, 37, 38, 39], "notimplementederror": [14, 117], "notin": 160, "np": [13, 15, 96, 99, 126, 134, 139, 146, 147, 150, 151, 153, 154, 165, 181], "num_class": [77, 96, 99], "num_featur": [20, 101, 102, 103, 104, 105, 106], "num_paramet": 19, "number": [3, 4, 6, 9, 11, 12, 15, 17, 19, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 47, 51, 52, 54, 65, 66, 69, 70, 76, 80, 81, 82, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 119, 128, 131, 132, 134, 144, 146, 148, 150, 166, 167, 168, 179, 180, 182, 184, 186, 188, 189, 190, 192, 194], "numer": [6, 9, 46, 47, 52, 54, 55, 95, 96, 101, 102, 103, 104, 105, 106, 107, 120, 126, 136, 146, 151, 153], "numpi": [0, 13, 15, 96, 99, 126, 134, 139, 147, 150, 165, 178, 181, 186, 188, 192], "o": [111, 114, 151, 152], "object": [1, 14, 18, 19, 98, 116, 125, 135, 136, 140, 141, 142, 145, 181], "occur": [125, 182], "occurr": 7, "odot": [84, 85, 86, 87, 88], "off": 123, "offer": [0, 116, 118, 133], "offset": 150, "often": [7, 31, 32, 33, 35, 96, 99, 146, 153], "onc": 125, "one": [19, 20, 29, 31, 45, 56, 60, 75, 76, 77, 80, 86, 96, 99, 101, 104, 109, 112, 117, 124, 126, 130, 145, 152, 166, 168, 183, 187, 191], "ones": [43, 45, 80, 81, 82, 93, 101, 102, 103, 104, 105, 106, 107, 116, 150, 152, 155], "ones_lik": 155, "onli": [0, 74, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 123, 146, 160, 166, 168, 178, 186, 187, 189, 190], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 17, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 40, 43, 45, 56, 57, 58, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 109, 110, 111, 112, 113, 114, 116, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 164, 165, 166, 167, 168, 171, 173, 175, 178, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "operatornam": [7, 9], "opposit": 119, "optim": [0, 1, 7, 9, 10, 12, 13, 15, 18, 19, 35, 80, 81, 82, 116, 125], "optimizer_st": [117, 118, 119, 120, 121], "option": [8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 29, 32, 33, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 77, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 128, 129, 130, 132, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 175, 179, 180, 181, 182, 188, 190, 191], "ord": 8, "order": [8, 12, 16, 17, 18, 19, 20, 179], "ordered_dict": 20, "ordereddict": [14, 16, 17, 20], "organ": [16, 17, 18, 20], "origin": [36, 78, 186, 187, 188, 189, 192, 193], "orthogon": [9, 10, 12], "orthonorm": 10, "oscil": [119, 120, 121], "other": [0, 6, 13, 14, 17, 20, 65, 66, 84, 116, 117, 123, 125, 133, 134, 146, 148, 151, 153, 178], "otherwis": [22, 25, 26, 27, 29, 71, 73, 74, 75, 77, 85, 86, 87, 88, 97, 109, 110, 111, 112, 113, 114, 117, 140, 141, 166, 168], "otim": [9, 43, 91], "out": [22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 80, 81, 82, 84, 85, 86, 87, 88, 109, 110, 111, 112, 113, 114, 119, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "out_channel": [17, 20, 80, 81, 82, 102, 103, 109, 110, 111, 112, 113, 114, 116], "out_featur": [16, 17, 20, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 104, 107, 109, 110, 111, 112, 113, 114], "outer": 155, "outlier": [48, 97], "output": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 43, 45, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 153, 154, 164, 165, 166, 167, 168, 171, 173, 175, 178, 179, 180, 186, 188, 192], "output_height": 35, "output_lay": [17, 20], "output_s": 17, "output_width": 35, "over": [1, 14, 17, 19, 29, 77, 80, 81, 82, 96, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 128, 132, 166, 167, 168, 175, 178, 180], "overdetermin": 9, "overfit": [37, 40, 85, 86, 87, 88, 119, 120, 121], "overridden": [14, 117], "overwrit": [16, 18], "own": [16, 17, 18, 19, 31, 32, 33, 70, 116], "p": [8, 9, 15, 18, 19, 36, 37, 38, 39, 40, 84, 85, 86, 87, 88, 109, 112, 113], "p_d": [111, 114], "p_h": [110, 111, 114], "p_w": [110, 111, 114], "packag": [1, 116, 118, 131, 133], "pad": [17, 20, 31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 80, 81, 82, 102, 103, 109, 110, 111, 112, 113, 114, 185], "pad_after_dim1": 186, "pad_after_dim2": 186, "pad_before_dim1": 186, "pad_before_dim2": 186, "pad_width": 186, "padding_height": 35, "padding_width": 35, "pair": 43, "param": [14, 15, 18, 19, 117, 118, 119, 120, 121], "param1": 14, "param_dict": 18, "param_group": [117, 118], "param_groups_setup": 117, "param_list": 19, "paramet": [0, 14, 116, 117, 118, 126, 133], "parameterdict": 21, "parameterlist": 21, "parent": 116, "part": [13, 14, 70, 116, 123, 125, 133, 146, 147, 150, 151, 152, 153, 154], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "particip": 15, "particular": [16, 18], "particularli": [0, 9, 17, 18, 19, 20, 29, 45, 77, 93, 96, 99, 104, 105, 106, 107, 123], "pass": [0, 9, 14, 15, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 78, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 126, 134, 167, 175, 178, 179, 180, 182, 184, 187, 189, 190, 194], "past": [119, 120], "patch": [35, 110], "pattern": [26, 74, 80, 81, 82], "penal": [119, 120, 121], "penros": 9, "per": [104, 105, 106, 107], "perform": [0, 1, 2, 9, 14, 15, 19, 23, 31, 32, 33, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 123, 125, 131, 133, 135, 136, 139, 142, 145, 164, 166, 168, 175, 179], "permut": 179, "persist": [13, 128, 129, 130, 132, 148, 149], "perturb": [4, 11, 12], "phi": [23, 72], "pi": [23, 72, 161, 171, 176], "pinv": 5, "pipelin": 133, "place": [63, 65, 66, 67, 68, 69, 70], "placehold": [14, 92], "plai": [126, 133], "point": 123, "pool": [56, 57, 58, 60, 61, 62, 81, 82, 109, 110, 111, 112, 113, 114, 166, 168], "pool1": 20, "pool2": 20, "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 20, 71, 73, 74, 75, 109, 110, 111, 112, 113, 114, 124, 144, 188, 192], "possibl": 0, "potenti": [9, 92, 120, 190], "power": [0, 7, 124, 125, 155], "practic": [9, 96, 99], "preced": [15, 134], "predefin": [17, 75], "predict": [95, 96, 98, 99], "prefix": 14, "prepar": [124, 186, 188, 192], "prepend": 14, "preprocess": [35, 133], "present": [95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 110], "preserv": [36, 84, 146, 147, 150, 151, 152, 153, 154, 167, 175, 180], "prevent": [16, 17, 18, 19, 20, 37, 40, 85, 86, 87, 88, 95, 96, 119, 120, 121, 125], "previou": [119, 125], "primari": [0, 126], "primarili": 20, "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "probabilist": 133, "probabl": [23, 29, 36, 37, 38, 39, 40, 46, 72, 77, 84, 85, 86, 87, 88, 95, 96, 99], "problem": [9, 10, 12, 25, 71, 73], "process": [7, 10, 12, 19, 31, 32, 33, 54, 75, 78, 80, 82, 91, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 119, 126], "produc": [80, 81, 82, 131, 133], "product": [0, 10, 12, 76, 91, 107, 116, 137, 138, 142, 143], "program": [123, 133], "project": [10, 12], "projector": 9, "promin": [109, 111, 112, 113, 114], "promot": [20, 96, 99, 116], "propag": [3, 4, 6, 9, 10, 11, 12, 14, 20, 43, 45, 110, 111, 120, 137, 138, 139, 143, 166, 168, 186, 189, 193], "properli": [19, 29, 77, 116], "properti": [1, 3, 6, 7, 23, 27, 36, 72, 75, 84], "proport": 180, "provid": [0, 1, 14, 16, 17, 18, 19, 23, 45, 95, 96, 97, 99, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 131, 133, 134, 139, 146, 152, 166, 168, 179, 181, 188, 190, 192], "pseudo": [6, 9], "purpos": [128, 132, 146, 151, 153], "python": 126, "pytorch": 181, "q": 10, "qr": 5, "quad": [9, 95, 96, 97, 98, 99, 112, 113, 114, 135, 136, 140, 141, 142, 145], "quadrat": 97, "quotient": 136, "r": 10, "rais": [14, 116, 117, 144], "rand": [127, 133], "randint": [127, 133], "randn": [116, 127, 131, 133], "random_integ": 133, "random_tensor": 133, "randomli": [36, 37, 38, 39, 40, 84, 85, 86, 87, 88], "rang": [1, 19, 28, 30, 31, 32, 47, 51, 70, 76, 78, 119, 120, 121, 129, 157, 158, 160], "rank": 9, "rate": [117, 119, 120, 121], "rather": [18, 19, 189], "ravel": 185, "raw": [29, 77, 96, 126], "re": [15, 125], "readabl": [16, 17, 18, 20, 116, 126], "readi": 0, "real": [9, 12, 76], "rearrang": 35, "receiv": [112, 113, 114, 186], "recent": 120, "reciproc": [9, 155, 165, 173], "recognit": 81, "rectangular": 150, "rectifi": [25, 26, 73, 74], "recurr": [17, 107], "recurs": 14, "reduc": [101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 125, 126, 166, 167, 168, 175, 180], "reduct": [12, 46, 47, 48, 50, 51, 95, 96, 97, 98, 99, 166, 168], "reevalu": 117, "refer": [0, 14, 133, 147, 150, 182], "reflect": 123, "regardless": [9, 187], "region": [33, 186], "regist": [13, 14, 15, 19, 116], "register_buff": 13, "register_paramet": 14, "registr": [14, 116], "regress": [50, 97, 98], "regular": [9, 40, 85, 86, 87, 88, 119, 120, 121], "relat": [125, 150, 151], "relev": [119, 120, 121], "reli": 125, "reliant": [85, 86, 87, 88], "relu": [0, 16, 17, 18, 20, 22, 24, 25, 42, 65, 66, 69, 70, 71, 73, 79, 80, 81, 82, 90, 91, 92, 93], "relu1": 20, "relu2": 20, "relu3": 20, "remain": [13, 55, 84, 85, 86, 87, 88], "rememb": 133, "remov": 190, "rep": 192, "repeat": [185, 192], "repetit": [188, 192], "replac": 133, "repres": [6, 8, 12, 14, 15, 20, 43, 45, 52, 54, 55, 80, 81, 82, 91, 93, 96, 99, 107, 117, 118, 119, 120, 121, 126, 135, 136, 142, 145, 147, 167, 178, 179, 180], "represent": [110, 113, 117], "reproduc": [128, 129, 130, 131, 132, 133], "requir": [0, 13, 16, 20, 22, 23, 25, 26, 27, 28, 30, 43, 45, 70, 92, 96, 99, 116, 123, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "requires_grad": [13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "rescal": [46, 47, 51, 95, 96, 99], "research": 116, "reset": [15, 131, 134], "reshap": [0, 45, 81, 82, 124, 126, 185, 187], "resourc": 125, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 164, 165, 166, 167, 168, 171, 173, 175, 178, 179, 180, 186, 188, 192], "respons": [16, 118], "restor": 125, "restructur": 189, "result": [2, 6, 7, 9, 14, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 56, 57, 58, 60, 61, 62, 77, 116, 117, 123, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "resum": 118, "retain": [15, 134, 146, 153, 166, 167, 168, 175, 180], "retriev": [16, 18, 19], "return": [0, 13, 14, 16, 17, 18, 19, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126], "reusabl": [20, 116], "revers": [0, 20, 179], "revert": 125, "right": [7, 8, 9, 11, 12, 23, 29, 72, 77, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114], "risk": 126, "rmsprop": 122, "robust": [84, 85, 86, 87, 88, 97, 116], "role": [126, 133], "root": [120, 173], "rout": [112, 113, 114], "routin": 0, "row": [3, 4, 6, 11, 45, 150, 194], "rule": [6, 7, 124, 135, 136, 140, 141, 142, 144, 145], "run": [0, 13, 52, 54, 101, 102, 103, 104, 105, 106, 125, 131, 133], "running_mean": [13, 52, 54, 101, 102, 103, 104, 105, 106], "running_var": [52, 54, 101, 102, 103, 104, 105, 106], "runtim": [17, 20, 116], "s_d": [111, 114], "s_h": [110, 111, 114], "s_w": [110, 111, 114], "same": [3, 4, 6, 7, 11, 29, 36, 37, 38, 39, 40, 52, 54, 55, 80, 81, 82, 84, 85, 86, 87, 88, 92, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 131, 133, 139, 149, 152, 154, 164, 166, 167, 168, 182, 184, 187, 189, 190, 191, 194], "sampl": [0, 65, 66, 67, 68, 69, 70, 84, 85, 86, 87, 88, 91, 93, 96, 99, 107, 130, 133], "satisfi": [2, 4, 11], "satur": 71, "save": [13, 15, 117, 118, 119, 120, 121, 125], "scalabl": 116, "scalar": [3, 8, 46, 47, 48, 50, 51, 126], "scale": [4, 9, 22, 27, 29, 52, 54, 55, 69, 70, 71, 73, 75, 76, 77, 78, 84, 85, 86, 87, 88, 96, 101, 102, 103, 104, 105, 106, 107, 119, 126, 133, 180], "scenario": [18, 19, 107], "schedul": 119, "scientif": 124, "score": [29, 96], "scratch": 0, "script": 133, "seamless": [116, 133], "seamlessli": [1, 15, 17, 20, 116, 126], "second": [4, 17, 18, 43, 91, 124, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 184], "section": 139, "see": [0, 139], "seed": [127, 128, 129, 130, 132, 133], "select": [112, 114, 175], "self": [0, 13, 14, 15, 16, 17, 18, 19, 27, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121], "selu": [24, 36, 42, 79, 84, 90], "selunetwork": 75, "sensit": [48, 97, 101, 102, 103], "separ": [31, 32, 33, 104, 105, 106], "sequenc": [7, 16, 18, 31, 146, 182, 184, 186, 188, 191, 192, 194], "sequenti": [16, 17, 21, 31, 92], "seri": [31, 80, 109, 112], "serial": [13, 14, 118], "serv": [14, 16, 17, 18, 19, 20, 116], "set": [15, 19, 31, 32, 33, 73, 74, 75, 80, 81, 82, 84, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 117, 120, 128, 129, 130, 131, 132, 133, 134, 146, 148, 149, 153, 154, 160, 166, 168, 181], "setup": 0, "sever": [9, 80, 81, 82, 109, 110, 111, 112, 113, 114, 125], "sgd": [0, 119], "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 124, 126, 128, 129, 130, 132, 133, 134, 137, 148, 149, 150, 151, 152, 153, 154, 160, 165, 166, 167, 168, 171, 173, 175, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194], "shapelik": 129, "shift": [52, 54, 55, 101, 102, 103, 104, 105, 106, 107], "shorthand": 139, "should": [13, 125, 128, 129, 130, 132, 148, 149, 157, 158, 178, 186], "show": 123, "showcas": 0, "shown": 131, "side": [11, 17, 20, 31, 32, 33, 56, 57, 58, 60, 61, 62, 80, 81, 82, 109, 110, 111, 112, 113, 114, 125], "sigma": [9, 65, 67, 69, 76, 101, 102, 103, 104, 105, 106, 107, 179], "sigma_i": 9, "sigmoid": [24, 42, 65, 66, 69, 70, 79, 90, 95], "sigmoidnetwork": 76, "sign": [7, 97, 155], "signal": [80, 81, 82, 101, 104, 109, 110, 111, 112, 113, 114], "signific": 125, "sim": [84, 85, 86, 87, 88], "similar": [0, 65, 66, 139, 165, 181, 186], "similarli": [12, 178], "simpl": [0, 20, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 72, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 137, 138, 143], "simplebinaryclassificationmodel": 95, "simpleclassificationmodel": [96, 99], "simplegelumodel": 72, "simpleleakyrelumodel": 73, "simplemodel": [0, 93], "simpleregressionmodel": 98, "simplerelumodel": 74, "simpleselumodel": 75, "simplesigmoidmodel": 76, "simpletanhmodel": 78, "simpli": [123, 178, 179, 189], "simplic": 74, "simplifi": 20, "sin": [155, 161], "sinc": [7, 10, 16, 17, 18, 19, 31, 32, 33, 70, 123, 125, 130], "sine": [158, 171, 172], "singl": [7, 10, 12, 29, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 96, 107, 110, 111, 112, 113, 114, 117, 126, 132, 148, 182, 190], "singleton": 107, "singular": [3, 6, 7, 9, 11, 12], "sinh": [155, 162, 177], "size": [12, 15, 17, 31, 32, 33, 35, 38, 39, 40, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 80, 81, 82, 91, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 129, 132, 133, 134, 166, 167, 168, 175, 180, 182, 184, 190, 193, 194], "skip": 125, "slice": [43, 178], "slide": [35, 109, 111, 112, 114], "slope": [25, 71, 73], "small": [9, 25, 46, 47, 52, 54, 55, 73, 75, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 113, 120], "smaller": [17, 20, 116, 141], "smallest": 168, "smooth": [23, 71, 72, 119, 120], "smoother": 119, "so": [16, 17, 18, 19, 116, 148, 149], "softmax": [24, 42, 79, 90, 96], "softmaxmodel": 77, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [22, 37, 84, 85, 86, 101, 102, 103, 104, 105, 106, 125, 126], "sometim": 124, "sophist": [17, 20], "sourc": 133, "space": [4, 10, 12, 31, 32, 33, 35, 80, 81, 82, 146], "spatial": [81, 82, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114], "spatio": 82, "special": [0, 9, 13, 14, 15, 84, 133], "specif": [0, 16, 17, 18, 19, 20, 70, 84, 85, 86, 87, 88, 104, 105, 106, 116, 117, 123, 133, 148, 166, 168, 188, 192], "specifi": [0, 8, 17, 29, 35, 40, 46, 47, 48, 50, 51, 55, 77, 80, 81, 82, 95, 96, 97, 98, 99, 107, 110, 111, 112, 113, 114, 117, 126, 128, 129, 130, 131, 132, 144, 146, 147, 148, 149, 150, 151, 153, 154, 160, 166, 167, 168, 175, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194], "speech": 104, "speed": [119, 120, 121], "split": [182, 184, 194], "sqrt": [23, 65, 66, 69, 70, 72, 101, 102, 103, 104, 105, 106, 107, 120, 155, 157, 158], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 48, 50, 97, 98, 120, 155, 173], "squeez": 185, "stabil": [6, 9, 46, 47, 52, 54, 55, 95, 96, 101, 102, 103, 104, 105, 106, 107, 119, 120], "stabl": [65, 66, 69, 70, 84, 96, 119, 120, 121], "stack": [20, 184, 185, 194], "standard": [23, 25, 65, 67, 69, 71, 72, 73, 84, 130, 133, 139], "start": [119, 146], "state": [13, 14, 15, 17, 20, 117, 123, 125, 131], "state_dict": [14, 15, 117, 118, 119, 120, 121], "static": 20, "statist": [9, 36, 52, 54], "std": 67, "step": [15, 35, 117, 118, 119, 120, 121, 125, 146], "stochast": [0, 119, 121], "stop": 146, "storag": [16, 18, 134], "store": [13, 14, 15, 16, 17, 18, 19, 125, 134], "str": [14, 16, 18, 20, 46, 47, 48, 50, 51, 117], "straightforward": [121, 123, 135], "strategi": 118, "strict": [14, 117], "stride": [17, 20, 31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 80, 81, 82, 109, 110, 111, 112, 113, 114], "stride_height": 35, "stride_width": 35, "string": [14, 16, 18, 20, 80, 81, 82, 117], "structur": [0, 10, 13, 14, 17, 116, 117, 126, 150], "style": [54, 104, 105], "sub": [16, 17, 18, 19, 20, 116, 155], "sub_tensor": 134, "subclass": [0, 14, 15, 16, 116, 117], "submodul": [14, 116], "subsequ": [17, 20, 70, 133], "subset": [85, 86], "subtract": [0, 145], "suit": [65, 66, 69, 70], "suitabl": [97, 128], "sum": [8, 16, 17, 18, 19, 20, 29, 46, 47, 48, 50, 51, 77, 95, 96, 97, 98, 99, 135, 138, 143, 155, 178, 180, 182, 184, 188, 192, 194], "sum_": [7, 29, 77, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 137, 138, 167, 175, 178, 180, 188], "sum_i": [8, 143], "sum_j": 143, "sum_k": 139, "summar": [109, 110, 111], "summat": 7, "super": [0, 13, 14, 15, 16, 17, 18, 19, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121], "support": [0, 1, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 116, 118, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 147, 150, 160, 165, 167, 171, 173, 175, 178, 179, 180, 182, 189], "sure": 116, "svd": [5, 9], "symmetr": [2, 69, 70, 78], "syntax": 139, "system": [1, 2, 9, 10, 11, 123], "t": [9, 119, 120, 121, 125, 134, 139, 181], "t0": 119, "t1": 181, "t2": 181, "tailor": 116, "take": [10, 109, 110, 111, 112, 113, 114, 125], "taken": 178, "tan": 155, "tangent": [30, 78, 159, 176, 177], "tanh": [17, 20, 23, 24, 42, 65, 66, 69, 70, 72, 79, 90, 155], "tanhnetwork": 78, "target": [20, 46, 47, 48, 50, 51, 95, 96, 97, 98, 99, 118, 119, 120, 121], "target_tensor": [95, 96, 97, 98, 99], "task": [0, 1, 28, 29, 32, 43, 46, 47, 50, 51, 76, 77, 80, 81, 82, 95, 96, 97, 98, 99, 104, 105, 106, 109, 111, 112, 114, 124, 133, 150], "techniqu": [2, 6, 52, 84, 85, 86, 87, 88, 104, 105, 106, 118], "tempor": [80, 82, 111, 114], "temporarili": 125, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 123, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "term": [9, 43, 119, 120, 121], "text": [3, 7, 8, 16, 22, 25, 26, 27, 29, 31, 32, 33, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 109, 110, 111, 112, 113, 114, 119, 120, 121, 129, 135, 136, 138, 140, 141, 142, 144, 145, 156, 160, 166, 167, 168, 170, 175, 180, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194], "th": [43, 95, 96, 98, 99, 104, 105, 106, 140, 141, 144], "than": [18, 19, 22, 25, 48, 71, 73, 97, 117, 160, 178, 186, 191], "thei": [0, 12, 13, 17, 19, 20, 126, 189], "them": [14, 19, 35, 119, 124, 182, 191], "therebi": [84, 110, 111, 113, 114], "theta": 119, "theta_": [119, 120, 121], "theta_t": 120, "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 43, 45, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 133, 134, 138, 139, 143, 146, 148, 151, 152, 153, 154, 160, 164, 165, 166, 167, 168, 171, 173, 175, 178, 179, 180, 181, 186, 188, 189], "thing": 125, "those": [0, 19, 70], "three": [12, 33, 58, 62, 82, 88, 103, 106, 111, 114], "threshold": [9, 48, 97], "through": [0, 4, 9, 10, 12, 16, 17, 20, 43, 45, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 130, 137, 138, 143, 187, 189, 190, 193], "throughout": 27, "tile": 185, "time": [7, 31, 73, 75, 80, 109, 110, 111, 112, 113, 114, 119, 120, 121, 125, 188, 192], "togeth": 20, "tool": [0, 116, 124, 133], "top": [2, 3, 4, 10, 12, 43, 45, 80, 81, 82, 91, 93], "torch": 181, "total": [15, 134, 189], "trace": [1, 155], "track": [0, 101, 102, 103, 104, 105, 106, 116, 123, 125, 128, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181], "track_running_stat": [101, 102, 103, 104, 105, 106], "trail": 55, "train": [0, 13, 14, 17, 19, 20, 29, 36, 37, 38, 39, 40, 52, 54, 72, 73, 75, 76, 77, 78, 84, 85, 86, 87, 88, 101, 102, 103, 104, 105, 106, 116, 118, 119, 120, 121, 125], "trainabl": [101, 102, 103, 104, 105, 106, 116], "transfer": [54, 104, 105], "transform": [0, 4, 18, 43, 45, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 124], "transit": 97, "translat": [110, 113], "transpos": [0, 2, 155], "treat": [13, 107, 116], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 43, 45, 52, 54, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 123, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "tupl": [4, 10, 12, 14, 15, 31, 32, 33, 35, 55, 56, 57, 58, 60, 61, 62, 80, 81, 82, 92, 107, 109, 110, 111, 112, 113, 114, 126, 128, 129, 130, 132, 134, 148, 151, 153, 166, 167, 168, 175, 180, 182, 184, 186, 189, 190, 191, 193, 194], "twice": 186, "two": [0, 3, 4, 6, 7, 9, 10, 12, 31, 32, 33, 43, 57, 61, 81, 87, 91, 102, 105, 110, 113, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178], "type": [13, 14, 15, 43, 91, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 181], "typeerror": [14, 117], "typic": [1, 13, 29, 36, 75, 77, 99, 101, 102, 103, 104, 105, 106, 118, 119, 120, 121, 125, 126, 193], "u": [9, 12, 66, 68, 70], "unchang": [13, 40, 71, 73, 74, 75, 84, 85, 86, 87, 88, 92, 187, 190], "undefin": 144, "under": 116, "underbrac": 7, "underdetermin": 9, "underli": [0, 181, 184, 187, 189, 194], "understand": [0, 20], "unexpect": [14, 17, 20, 133], "unfold": [34, 42], "uniform": [64, 66, 70, 80, 81, 82, 91, 93, 127, 128, 129, 133], "uniform_": 68, "uniformli": [128, 132], "uniniti": [148, 149], "unintend": 125, "uniqu": [2, 9, 11, 16, 18], "unit": [22, 23, 25, 26, 27, 65, 66, 69, 70, 71, 72, 73, 74, 75, 84], "unless": 134, "unlik": [13, 16, 17, 18, 19, 25, 71, 73, 84, 107], "unnecessari": 125, "unpad": 186, "unsqueez": 185, "unstabl": 6, "up": [117, 119, 120, 121], "updat": [13, 19, 20, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 116, 117, 118, 119, 120, 121, 125], "upon": [16, 17, 18, 19], "upper": [10, 68, 132], "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 45, 50, 52, 54, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 166, 167, 168, 175, 180, 186, 188, 190, 192, 193], "usag": [1, 17, 20, 117, 118], "user": [0, 16, 17, 18, 19, 116], "usual": 96, "util": [0, 1, 18, 19, 116, 133], "v": [4, 9, 12, 147], "v_": [119, 120, 121], "v_stack": 194, "v_t": 120, "val": 63, "valid": [80, 81, 82, 179], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 18, 20, 22, 25, 28, 29, 30, 31, 32, 33, 35, 46, 47, 48, 50, 51, 52, 54, 55, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 146, 147, 148, 149, 150, 156, 157, 158, 160, 163, 164, 165, 166, 168, 170, 171, 173, 174, 182, 186, 187, 189, 193], "valuabl": 133, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 117], "vanish": [71, 75, 101, 102, 103], "var": 155, "vari": [17, 19], "variabl": [14, 20, 92, 116, 123, 125, 128, 148], "varianc": [27, 36, 52, 54, 65, 66, 69, 70, 75, 84, 101, 102, 103, 104, 105, 106, 107, 130, 180], "variat": [104, 105, 106], "varieti": 133, "variou": [74, 118, 133, 166, 168, 186], "vdot": 143, "vector": [4, 9, 10, 11, 12, 43, 45, 91, 93, 137, 138, 139, 143], "veloc": [119, 120, 121], "veri": 9, "versatil": 133, "version": [12, 120, 143], "vertic": [191, 194], "video": [33, 40, 82, 106, 111, 114], "view": [17, 110, 111, 112, 113, 114, 189], "vision": [32, 81, 91], "volumetr": [33, 40, 82, 106, 111, 114], "vstack": 185, "w": [32, 33, 35, 39, 40, 43, 45, 57, 58, 61, 62, 80, 81, 82, 91, 93, 102, 103, 105, 106, 111, 114], "w_": [32, 33, 57, 58, 61, 62, 81, 82, 110, 111, 113, 114], "w_out": [32, 33, 57, 58, 61, 62], "wa": [84, 85, 86, 87, 88, 125], "wai": [123, 125, 189], "want": 0, "warn": [16, 18], "we": [0, 124], "weight": [31, 32, 33, 43, 45, 46, 47, 51, 52, 54, 55, 65, 66, 69, 70, 80, 81, 82, 84, 85, 86, 87, 88, 91, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 116, 119, 120, 121, 128, 133], "weight1": 18, "weight2": 18, "weight_decai": [119, 120, 121], "well": [65, 66], "were": 20, "what": 125, "when": [0, 7, 14, 17, 19, 20, 22, 25, 31, 32, 33, 71, 92, 101, 102, 103, 104, 105, 106, 117, 123, 125, 126, 133, 144], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 125, 126, 133, 135, 136, 140, 141, 142, 144, 145, 148, 149, 160, 164, 165, 166, 167, 168, 171, 173, 175, 178, 179, 180, 182, 186, 188, 192], "whether": [3, 14, 15, 65, 66, 120, 123, 128, 129, 130, 132, 134, 148, 149, 166, 167, 168, 175, 180], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 29, 48, 71, 72, 73, 77, 78, 84, 97, 99, 101, 102, 103, 104, 105, 106, 107, 120, 123, 125, 126, 128, 129, 132, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 180, 182, 188, 189, 191, 193], "while": [0, 17, 20, 36, 72, 74, 116, 119, 120, 121, 125, 189, 191], "who": [0, 16, 17, 18, 19], "whose": [12, 149, 152, 154, 156, 160, 164, 170], "wide": [1, 9, 26, 74, 80, 81, 96], "wider": [31, 32], "width": [32, 33, 35, 39, 40, 57, 58, 61, 62, 81, 82, 102, 103, 105, 106, 110, 111, 113, 114], "window": [56, 57, 58, 60, 61, 62, 109, 110, 111, 112, 113, 114, 166, 168], "wise": [22, 23, 25, 26, 27, 28, 29, 30, 77, 84, 85, 86, 87, 88, 116, 124, 135, 136, 139, 140, 141, 142, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 171, 172, 173, 174, 176, 177, 178, 184, 194], "within": [13, 16, 17, 18, 19, 20, 30, 70, 72, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 92, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 118, 125, 146, 160], "without": [0, 16, 17, 18, 43, 45, 80, 81, 82, 91, 93, 123, 166, 187, 189, 193], "won": 125, "work": [0, 2, 124, 126], "workflow": 133, "workload": 0, "wrap": [116, 125, 181], "wrapper": 116, "x": [0, 1, 11, 13, 14, 16, 17, 18, 19, 20, 29, 43, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 128, 129, 130, 132, 148, 149, 164], "x1": 91, "x2": 91, "x_": [96, 99], "x_c": [96, 99], "x_i": 95, "x_k": 96, "xavier": [65, 66, 69, 70], "xavier_norm": 64, "xavier_normal_": [65, 66, 69, 70], "xavier_uniform": 64, "xavier_uniform_": [65, 66, 69, 70], "x\u2081": 91, "x\u2082": 91, "y": [16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 128, 129, 130, 132, 148, 149], "y_": [96, 99], "y_c": [96, 99], "y_i": 95, "yet": [0, 124], "yield": [14, 125], "you": [17, 19, 20, 116, 118, 123, 125, 133, 148, 149, 150, 154, 179, 181], "your": [116, 118, 123, 125, 133], "z": [149, 153, 154], "zero": [7, 9, 10, 22, 25, 31, 32, 33, 36, 37, 38, 39, 40, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 148, 149, 150, 154, 155, 160, 170, 186], "zero_grad": [15, 117, 118, 119, 120, 121, 134], "zeros_lik": [149, 155], "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.RMSprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 124, "1d": 124, "2": 124, "2d": 124, "3": 124, "It": [123, 125], "ab": 156, "activ": [24, 42, 79, 90], "ad": 124, "add": 135, "addit": 9, "admonit": 126, "advanc": 35, "algebra": 5, "algorithm": [119, 120, 121], "alias": 126, "align": 124, "alpha_dropout": 36, "alphadropout": 84, "also": 118, "anoth": 181, "arang": 146, "arcco": 157, "arcsin": 158, "arctan": 159, "asgd": 119, "attribut": [13, 15, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 134], "avg_pool1d": 56, "avg_pool2d": 57, "avg_pool3d": 58, "avgpool1d": 109, "avgpool2d": 110, "avgpool3d": 111, "axi": 124, "backpropag": 134, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "batch_norm": 52, "batchnorm1d": 101, "batchnorm2d": 102, "batchnorm3d": 103, "bceloss": 95, "benefit": 125, "bilinear": [43, 91], "binari": 155, "binary_cross_entropi": 46, "broadcast": 124, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "case": 126, "choleski": 2, "class": [13, 14, 15, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 134], "clip": 160, "co": 161, "compon": [0, 116], "concaten": 182, "conclus": [0, 116, 123, 124, 125, 133], "constant": 63, "contain": 21, "conv1d": [31, 80], "conv2d": [32, 81], "conv3d": [33, 82], "convolut": [34, 42, 83, 90], "core": 0, "cosh": 162, "creat": [15, 134, 181], "cross_entropi": 47, "crossentropyloss": 96, "cube": 163, "custom": [14, 117, 118], "defin": [14, 117, 118], "definit": 126, "det": 3, "detail": 9, "diag": 147, "dilat": 35, "div": 136, "dot": 137, "dropout": [37, 41, 42, 85, 89, 90], "dropout1d": [38, 86], "dropout2d": [39, 87], "dropout3d": [40, 88], "eig": 4, "elu": [22, 71], "empti": 148, "empty_lik": 149, "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "exp": 164, "ey": 150, "featur": [0, 1, 118, 133], "flatten": 183, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "from": 181, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 123, 125, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "gelu": [23, 72], "gener": [127, 155], "get": 118, "grad_en": 123, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "guidelin": 126, "how": [123, 125], "hstack": 184, "huber_loss": 48, "huberloss": 97, "ident": 92, "index": 134, "init": [63, 65, 66, 67, 68, 69, 70], "initi": 64, "inner": 138, "input": 181, "inspect": [118, 119, 120, 121], "instance_norm": 54, "instancenorm1d": 104, "instancenorm2d": 105, "instancenorm3d": 106, "integr": [116, 133], "inv": 6, "iter": 134, "kaiming_norm": 65, "kaiming_uniform": 66, "kei": [0, 116, 118, 133], "layer": [79, 83, 89, 90, 94, 100, 108, 115], "layer_norm": 55, "layernorm": 107, "leaky_relu": 25, "leakyrelu": 73, "learn": 133, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 42, 44, 45, 90, 93, 94], "list": 181, "log": 165, "loss": [42, 49, 90, 100], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 42, 116, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "matmul": 139, "matrix": 139, "matrix_pow": 7, "max": 166, "max_pool1d": 60, "max_pool2d": 61, "max_pool3d": 62, "maximum": 140, "maxpool1d": 112, "maxpool2d": 113, "maxpool3d": 114, "mean": 167, "method": [14, 15, 117, 134], "min": 168, "minimum": 141, "model": 116, "modul": [14, 90], "moduledict": 16, "modulelist": 17, "more": 133, "mse_loss": 50, "mseloss": 98, "mul": 142, "multipl": 139, "new": 124, "newaxi": 124, "nll_loss": 51, "nllloss": 99, "nn": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116], "no_grad": 125, "norm": 8, "normal": [42, 53, 67, 90, 108], "note": 0, "number": 127, "ones": 151, "ones_lik": 152, "oper": [5, 139, 155], "optim": [117, 118, 119, 120, 121, 122], "organ": 116, "outer": 143, "overview": [0, 116, 118, 133], "pad": 186, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "parameterdict": 18, "parameterlist": 19, "perform": 134, "pinv": 9, "pitfal": [123, 125], "pool": [42, 59, 90, 115], "potenti": [123, 125], "power": 144, "properti": [15, 134], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 128, "randint": 129, "randn": 130, "random": [127, 128, 129, 130, 131, 132, 133], "ravel": 187, "reciproc": 169, "refer": 118, "relu": [26, 74], "repeat": 188, "reshap": 189, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 123, 125, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "rmsprop": 120, "rule": 139, "see": 118, "seed": 131, "selu": [27, 75], "sequenti": 20, "seri": 122, "sgd": [121, 122], "sigmoid": [28, 76], "sign": 170, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 123, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194], "sin": 171, "sinh": 172, "slice": 134, "softmax": [29, 77], "solv": 11, "sqrt": 173, "squar": 174, "squeez": 190, "stack": 191, "start": 118, "state": [118, 119, 120, 121], "sub": 145, "sum": 175, "svd": 12, "tan": 176, "tanh": [30, 78, 177], "tensor": [124, 134, 155, 181, 185], "through": 134, "tile": 192, "trace": 178, "track": 134, "transpos": 179, "type": 126, "unari": 155, "unfold": 35, "uniform": [68, 132], "unsqueez": 193, "us": [119, 120, 121, 126, 181], "usag": [0, 13, 123, 124, 125, 126], "utilit": 185, "var": 180, "vstack": 194, "weight": 64, "why": 126, "work": [123, 125], "xavier_norm": 69, "xavier_uniform": 70, "zero": 153, "zeros_lik": 154}})