Search.setIndex({"alltitles": {"@ Operator": [[208, "operator"]], "Activation Functions": [[69, null]], "Activation Layers": [[136, null], [147, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[195, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[80, "advanced-example-with-dilation"]], "Advanced Features": [[276, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[179, "algorithm"], [180, "algorithm"], [181, "algorithm"], [182, "algorithm"], [183, "algorithm"], [184, "algorithm"], [185, "algorithm"], [186, "algorithm"], [187, "algorithm"], [188, "algorithm"], [189, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [54, "architecture"]], "Attention Mechanism": [[118, "attention-mechanism"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [43, "attributes"], [49, "attributes"], [54, "attributes"], [58, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [65, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [117, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [203, "attributes"], [267, "attributes"], [268, "attributes"], [269, "attributes"], [270, "attributes"], [271, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"]], "Behavior": [[101, "behavior"], [102, "behavior"], [103, "behavior"], [166, "behavior"], [167, "behavior"], [168, "behavior"]], "Benefits": [[193, "benefits"]], "Binary Functions": [[224, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [43, "class-signature"], [49, "class-signature"], [54, "class-signature"], [58, "class-signature"], [59, "class-signature"], [60, "class-signature"], [61, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [65, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [177, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [203, "class-signature"], [265, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [176, "conclusion"], [191, "conclusion"], [192, "conclusion"], [193, "conclusion"], [202, "conclusion"], [266, "conclusion"], [276, "conclusion"]], "Containers": [[66, null]], "Conv-BatchNorm-ReLU": [[119, null]], "ConvNets": [[29, null], [56, "convnets"]], "Convolution Functions": [[79, null], [87, null]], "Convolution Layers": [[140, null], [147, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[250, null]], "Creating a Parameter": [[60, null]], "Creating a tensor with gradient tracking": [[203, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[276, "custom-pipelines"]], "Defining a Custom Optimizer": [[178, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[59, null]], "Defining a custom optimizer": [[177, null]], "Description": [[194, "description"]], "Dropout Functions": [[86, null], [87, null]], "Dropout Layers": [[146, null], [147, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [80, "example"], [176, null], [176, null], [176, null], [191, "example"], [193, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, null], [202, null], [202, null], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [234, "example"], [236, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [251, "example"], [253, "example"], [257, "example"], [259, "example"], [260, "example"], [261, "example"], [263, "example"], [264, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[192, null]], "Example 2: Adding a new axis to a 2D tensor": [[192, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[192, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [113, "example-usage"], [265, "example-usage"], [266, "example-usage"], [276, "example-usage"]], "Example Use Cases": [[195, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [88, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [194, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [233, "examples"], [235, "examples"], [237, "examples"], [250, "examples"], [252, "examples"], [255, "examples"], [256, "examples"], [258, "examples"], [262, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [34, "forward-calculation"], [43, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [65, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [70, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [80, "forward-calculation"], [88, "forward-calculation"], [90, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [112, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [251, "forward-calculation"], [253, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [57, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [88, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [112, "function-signature"], [113, "function-signature"], [120, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [191, "function-signature"], [193, "function-signature"], [194, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"]], "Fused Layers": [[119, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[178, "getting-started"]], "How It Works": [[191, "how-it-works"], [193, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[275, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[203, null]], "Inspecting Optimizer State": [[178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null]], "Integration with lucid": [[3, "integration-with-lucid"], [176, "integration-with-lucid"], [202, "integration-with-lucid"], [276, "integration-with-lucid"]], "Iterating through a tensor": [[203, null]], "Key Components": [[3, "key-components"], [176, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [178, "key-features"], [202, "key-features"]], "Key Transformations": [[276, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[202, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[87, null], [89, null]], "Linear Layers": [[147, null], [151, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[87, null], [94, null]], "Loss Layers": [[147, null], [157, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[208, "matrix-multiplication-rules"]], "Metadata Captured": [[194, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [49, "methods"], [59, "methods"], [60, "methods"], [177, "methods"], [203, "methods"]], "Modules": [[147, null]], "Normalization Functions": [[87, null], [98, null]], "Normalization Layers": [[147, null], [165, null]], "Notes": [[7, "notes"]], "Optimizers": [[190, null]], "Organizing Models": [[176, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [35, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [176, "overview"], [178, "overview"], [202, "overview"], [276, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [88, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [120, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [193, "parameters"], [194, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"]], "Performing backpropagation": [[203, null]], "Pooling Functions": [[87, null], [107, null]], "Pooling Layers": [[147, null], [175, null]], "Potential Pitfalls": [[191, "potential-pitfalls"], [193, "potential-pitfalls"]], "Properties": [[60, "properties"], [203, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[196, null]], "References": [[5, "references"], [117, "references"], [178, "references"]], "ResNet": [[34, null]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [57, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [88, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [112, "returns"], [113, "returns"], [118, "returns"], [120, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [191, "returns"], [193, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"]], "SENet": [[43, null]], "See Also": [[178, "see-also"]], "Selective Kernel": [[119, null]], "Squeeze-and-Excitation": [[119, null]], "Summary Table": [[57, "summary-table"]], "Tensor Generating Functions": [[224, null]], "Tensor Operations": [[224, null]], "Tensor Utilites": [[254, null]], "Type Definitions": [[195, "type-definitions"]], "Unary Functions": [[224, null]], "Usage": [[4, "usage"], [58, "usage"], [113, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [255, "usage"], [265, "usage"], [266, "usage"], [276, "usage"]], "Use another Tensor as input": [[250, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[179, null]], "Using the Adadelta Optimizer": [[180, null]], "Using the Adagrad Optimizer": [[181, null]], "Using the Adam Optimizer": [[182, null]], "Using the AdamW Optimizer": [[183, null]], "Using the Adamax Optimizer": [[184, null]], "Using the NAdam Optimizer": [[185, null]], "Using the RAdam Optimizer": [[186, null]], "Using the RMSprop Optimizer": [[187, null]], "Using the Rprop Optimizer": [[188, null]], "Using the SGD Optimizer": [[189, null]], "Utility Functions": [[87, null], [111, null]], "VGGNet": [[49, null]], "Weight Initializations": [[121, null]], "Why Use Type Aliases?": [[195, null]], "ZFNet": [[54, null]], "activation Functions": [[87, null]], "alexnet": [[21, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[27, null]], "inception_resnet_v2": [[28, null]], "inception_v1": [[23, null]], "inception_v3": [[24, null]], "inception_v4": [[25, null]], "lenet_1": [[31, null]], "lenet_4": [[32, null]], "lenet_5": [[33, null]], "lucid.Tensor": [[203, null]], "lucid.abs": [[225, null]], "lucid.add": [[204, null]], "lucid.arange": [[215, null]], "lucid.arccos": [[226, null]], "lucid.arcsin": [[227, null]], "lucid.arctan": [[228, null]], "lucid.clip": [[229, null]], "lucid.concatenate": [[251, null]], "lucid.cos": [[230, null]], "lucid.cosh": [[231, null]], "lucid.cube": [[232, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[216, null]], "lucid.div": [[205, null]], "lucid.dot": [[206, null]], "lucid.empty": [[217, null]], "lucid.empty_like": [[218, null]], "lucid.exp": [[233, null]], "lucid.eye": [[219, null]], "lucid.flatten": [[252, null]], "lucid.grad_enabled": [[191, null]], "lucid.hstack": [[253, null]], "lucid.inner": [[207, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[234, null]], "lucid.matmul": [[208, null]], "lucid.max": [[235, null]], "lucid.maximum": [[209, null]], "lucid.mean": [[236, null]], "lucid.meshgrid": [[255, null]], "lucid.min": [[237, null]], "lucid.minimum": [[210, null]], "lucid.models": [[56, null]], "lucid.mul": [[211, null]], "lucid.newaxis": [[192, null]], "lucid.nn": [[176, null]], "lucid.nn.functional": [[87, null]], "lucid.no_grad": [[193, null]], "lucid.ones": [[220, null]], "lucid.ones_like": [[221, null]], "lucid.optim": [[178, null]], "lucid.outer": [[212, null]], "lucid.pad": [[256, null]], "lucid.power": [[213, null]], "lucid.random": [[202, null]], "lucid.random.rand": [[197, null]], "lucid.random.randint": [[198, null]], "lucid.random.randn": [[199, null]], "lucid.random.seed": [[200, null]], "lucid.random.uniform": [[201, null]], "lucid.ravel": [[257, null]], "lucid.reciprocal": [[238, null]], "lucid.register_model": [[194, null]], "lucid.repeat": [[258, null]], "lucid.reshape": [[259, null]], "lucid.sign": [[239, null]], "lucid.sin": [[240, null]], "lucid.sinh": [[241, null]], "lucid.sqrt": [[242, null]], "lucid.square": [[243, null]], "lucid.squeeze": [[260, null]], "lucid.stack": [[261, null]], "lucid.sub": [[214, null]], "lucid.sum": [[244, null]], "lucid.tan": [[245, null]], "lucid.tanh": [[246, null]], "lucid.tensor": [[250, null]], "lucid.tile": [[262, null]], "lucid.trace": [[247, null]], "lucid.transforms": [[276, null]], "lucid.transpose": [[248, null]], "lucid.types": [[195, null]], "lucid.unsqueeze": [[263, null]], "lucid.var": [[249, null]], "lucid.vstack": [[264, null]], "lucid.zeros": [[222, null]], "lucid.zeros_like": [[223, null]], "models.summarize": [[57, null]], "nn.AdaptiveAvgPool1d": [[166, null]], "nn.AdaptiveAvgPool2d": [[167, null]], "nn.AdaptiveAvgPool3d": [[168, null]], "nn.AlphaDropout": [[141, null]], "nn.AvgPool1d": [[169, null]], "nn.AvgPool2d": [[170, null]], "nn.AvgPool3d": [[171, null]], "nn.BCELoss": [[152, null]], "nn.BatchNorm1d": [[158, null]], "nn.BatchNorm2d": [[159, null]], "nn.BatchNorm3d": [[160, null]], "nn.Bilinear": [[148, null]], "nn.Buffer": [[58, null]], "nn.Conv1d": [[137, null]], "nn.Conv2d": [[138, null]], "nn.Conv3d": [[139, null]], "nn.ConvBNReLU1d": [[114, null]], "nn.ConvBNReLU2d": [[115, null]], "nn.ConvBNReLU3d": [[116, null]], "nn.CrossEntropyLoss": [[153, null]], "nn.Dropout": [[142, null]], "nn.Dropout1d": [[143, null]], "nn.Dropout2d": [[144, null]], "nn.Dropout3d": [[145, null]], "nn.ELU": [[128, null]], "nn.GELU": [[129, null]], "nn.HuberLoss": [[154, null]], "nn.Identity": [[149, null]], "nn.InstanceNorm1d": [[161, null]], "nn.InstanceNorm2d": [[162, null]], "nn.InstanceNorm3d": [[163, null]], "nn.LayerNorm": [[164, null]], "nn.LeakyReLU": [[130, null]], "nn.Linear": [[150, null]], "nn.MSELoss": [[155, null]], "nn.MaxPool1d": [[172, null]], "nn.MaxPool2d": [[173, null]], "nn.MaxPool3d": [[174, null]], "nn.Module": [[59, null]], "nn.ModuleDict": [[61, null]], "nn.ModuleList": [[62, null]], "nn.NLLLoss": [[156, null]], "nn.Parameter": [[60, null]], "nn.ParameterDict": [[63, null]], "nn.ParameterList": [[64, null]], "nn.ReLU": [[131, null]], "nn.SELU": [[132, null]], "nn.SEModule": [[117, null]], "nn.SelectiveKernel": [[118, null]], "nn.Sequential": [[65, null]], "nn.Sigmoid": [[133, null]], "nn.Softmax": [[134, null]], "nn.Tanh": [[135, null]], "nn.functional.adaptive_avg_pool1d": [[101, null]], "nn.functional.adaptive_avg_pool2d": [[102, null]], "nn.functional.adaptive_avg_pool3d": [[103, null]], "nn.functional.alpha_dropout": [[81, null]], "nn.functional.avg_pool1d": [[104, null]], "nn.functional.avg_pool2d": [[105, null]], "nn.functional.avg_pool3d": [[106, null]], "nn.functional.batch_norm": [[97, null]], "nn.functional.bilinear": [[88, null]], "nn.functional.binary_cross_entropy": [[91, null]], "nn.functional.conv1d": [[76, null]], "nn.functional.conv2d": [[77, null]], "nn.functional.conv3d": [[78, null]], "nn.functional.cross_entropy": [[92, null]], "nn.functional.dropout": [[82, null]], "nn.functional.dropout1d": [[83, null]], "nn.functional.dropout2d": [[84, null]], "nn.functional.dropout3d": [[85, null]], "nn.functional.elu": [[67, null]], "nn.functional.gelu": [[68, null]], "nn.functional.huber_loss": [[93, null]], "nn.functional.instance_norm": [[99, null]], "nn.functional.interpolate": [[112, null]], "nn.functional.layer_norm": [[100, null]], "nn.functional.leaky_relu": [[70, null]], "nn.functional.linear": [[90, null]], "nn.functional.max_pool1d": [[108, null]], "nn.functional.max_pool2d": [[109, null]], "nn.functional.max_pool3d": [[110, null]], "nn.functional.mse_loss": [[95, null]], "nn.functional.nll_loss": [[96, null]], "nn.functional.relu": [[71, null]], "nn.functional.rotate": [[113, null]], "nn.functional.selu": [[72, null]], "nn.functional.sigmoid": [[73, null]], "nn.functional.softmax": [[74, null]], "nn.functional.tanh": [[75, null]], "nn.functional.unfold": [[80, null]], "nn.init.constant": [[120, null]], "nn.init.kaiming_normal": [[122, null]], "nn.init.kaiming_uniform": [[123, null]], "nn.init.normal": [[124, null]], "nn.init.uniform": [[125, null]], "nn.init.xavier_normal": [[126, null]], "nn.init.xavier_uniform": [[127, null]], "optim.ASGD": [[179, null]], "optim.Adadelta": [[180, null]], "optim.Adagrad": [[181, null]], "optim.Adam": [[182, null]], "optim.AdamW": [[183, null]], "optim.Adamax": [[184, null]], "optim.NAdam": [[185, null]], "optim.Optimizer": [[177, null]], "optim.RAdam": [[186, null]], "optim.RMSprop": [[187, null]], "optim.Rprop": [[188, null]], "optim.SGD": [[189, null]], "resnet_1001": [[35, null]], "resnet_101": [[36, null]], "resnet_152": [[37, null]], "resnet_18": [[38, null]], "resnet_200": [[39, null]], "resnet_269": [[40, null]], "resnet_34": [[41, null]], "resnet_50": [[42, null]], "se_resnet_101": [[44, null]], "se_resnet_152": [[45, null]], "se_resnet_18": [[46, null]], "se_resnet_34": [[47, null]], "se_resnet_50": [[48, null]], "transforms.CenterCrop": [[267, null]], "transforms.Compose": [[265, null]], "transforms.Normalize": [[268, null]], "transforms.RandomCrop": [[269, null]], "transforms.RandomGrayscale": [[270, null]], "transforms.RandomHorizontalFlip": [[271, null]], "transforms.RandomRotation": [[272, null]], "transforms.RandomVerticalFlip": [[273, null]], "transforms.Resize": [[274, null]], "transforms.ToTensor": [[266, null]], "vggnet_11": [[50, null]], "vggnet_13": [[51, null]], "vggnet_16": [[52, null]], "vggnet_19": [[53, null]], "zfnet": [[55, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[225, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[180, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[181, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[182, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[184, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[183, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[166, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[167, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[168, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[204, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[141, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[215, "lucid.arange", false]], "arccos() (in module lucid)": [[226, "lucid.arccos", false]], "arcsin() (in module lucid)": [[227, "lucid.arcsin", false]], "arctan() (in module lucid)": [[228, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[179, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[169, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[170, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[171, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[158, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[159, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[160, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[152, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[148, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[58, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[267, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[229, "lucid.clip", false]], "compose (class in lucid.transforms)": [[265, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[251, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[120, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[137, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[138, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[139, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[114, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[115, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[116, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[230, "lucid.cos", false]], "cosh() (in module lucid)": [[231, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[153, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[232, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[216, "lucid.diag", false]], "div() (in module lucid)": [[205, "lucid.div", false]], "dot() (in module lucid)": [[206, "lucid.dot", false]], "dropout (class in lucid.nn)": [[142, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[143, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[144, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[145, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[128, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[217, "lucid.empty", false]], "empty_like() (in module lucid)": [[218, "lucid.empty_like", false]], "exp() (in module lucid)": [[233, "lucid.exp", false]], "eye() (in module lucid)": [[219, "lucid.eye", false]], "flatten() (in module lucid)": [[252, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[129, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[191, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[253, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[154, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[149, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[207, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[161, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[162, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[163, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[122, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[123, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[164, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[130, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[150, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[234, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[208, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[235, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[209, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[172, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[173, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[174, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[236, "lucid.mean", false]], "meshgrid() (in module lucid)": [[255, "lucid.meshgrid", false]], "min() (in module lucid)": [[237, "lucid.min", false]], "minimum() (in module lucid)": [[210, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[59, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[61, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[62, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[155, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[211, "lucid.mul", false]], "nadam (class in lucid.optim)": [[185, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[156, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[193, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[124, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[268, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[220, "lucid.ones", false]], "ones_like() (in module lucid)": [[221, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[177, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[212, "lucid.outer", false]], "pad() (in module lucid)": [[256, "lucid.pad", false]], "parameter (class in lucid.nn)": [[60, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[63, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[64, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[213, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[186, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[197, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[198, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[199, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[269, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[270, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[271, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[272, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[273, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[257, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[238, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[194, "lucid.register_model", false]], "relu (class in lucid.nn)": [[131, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[258, "lucid.repeat", false]], "reshape() (in module lucid)": [[259, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[274, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[34, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[35, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[36, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[37, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[38, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[39, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[40, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[41, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[42, "lucid.models.resnet_50", false]], "rmsprop (class in lucid.optim)": [[187, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[188, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[44, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[45, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[46, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[47, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[48, "lucid.models.se_resnet_50", false]], "seed() (in module lucid.random)": [[200, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[118, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[132, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[117, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[43, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[65, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[189, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[133, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[239, "lucid.sign", false]], "sin() (in module lucid)": [[240, "lucid.sin", false]], "sinh() (in module lucid)": [[241, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[134, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[242, "lucid.sqrt", false]], "square() (in module lucid)": [[243, "lucid.square", false]], "squeeze() (in module lucid)": [[260, "lucid.squeeze", false]], "stack() (in module lucid)": [[261, "lucid.stack", false]], "sub() (in module lucid)": [[214, "lucid.sub", false]], "sum() (in module lucid)": [[244, "lucid.sum", false]], "summarize() (in module lucid.models)": [[57, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[245, "lucid.tan", false]], "tanh (class in lucid.nn)": [[135, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[246, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[203, "lucid.Tensor", false]], "tensor() (in module lucid)": [[250, "lucid.tensor", false]], "tile() (in module lucid)": [[262, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[266, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[247, "lucid.trace", false]], "transpose() (in module lucid)": [[248, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[125, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[201, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[263, "lucid.unsqueeze", false]], "var() (in module lucid)": [[249, "lucid.var", false]], "vggnet (class in lucid.models)": [[49, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[50, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[51, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[52, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[53, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[264, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[126, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[127, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[222, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[223, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[54, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[55, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[203, 1, 1, "", "Tensor"], [225, 2, 1, "", "abs"], [204, 2, 1, "", "add"], [215, 2, 1, "", "arange"], [226, 2, 1, "", "arccos"], [227, 2, 1, "", "arcsin"], [228, 2, 1, "", "arctan"], [229, 2, 1, "", "clip"], [251, 2, 1, "", "concatenate"], [230, 2, 1, "", "cos"], [231, 2, 1, "", "cosh"], [232, 2, 1, "", "cube"], [216, 2, 1, "", "diag"], [205, 2, 1, "", "div"], [206, 2, 1, "", "dot"], [217, 2, 1, "", "empty"], [218, 2, 1, "", "empty_like"], [233, 2, 1, "", "exp"], [219, 2, 1, "", "eye"], [252, 2, 1, "", "flatten"], [191, 2, 1, "", "grad_enabled"], [253, 2, 1, "", "hstack"], [207, 2, 1, "", "inner"], [234, 2, 1, "", "log"], [208, 2, 1, "", "matmul"], [235, 2, 1, "", "max"], [209, 2, 1, "", "maximum"], [236, 2, 1, "", "mean"], [255, 2, 1, "", "meshgrid"], [237, 2, 1, "", "min"], [210, 2, 1, "", "minimum"], [211, 2, 1, "", "mul"], [193, 2, 1, "", "no_grad"], [220, 2, 1, "", "ones"], [221, 2, 1, "", "ones_like"], [212, 2, 1, "", "outer"], [256, 2, 1, "", "pad"], [213, 2, 1, "", "power"], [257, 2, 1, "", "ravel"], [238, 2, 1, "", "reciprocal"], [194, 2, 1, "", "register_model"], [258, 2, 1, "", "repeat"], [259, 2, 1, "", "reshape"], [239, 2, 1, "", "sign"], [240, 2, 1, "", "sin"], [241, 2, 1, "", "sinh"], [242, 2, 1, "", "sqrt"], [243, 2, 1, "", "square"], [260, 2, 1, "", "squeeze"], [261, 2, 1, "", "stack"], [214, 2, 1, "", "sub"], [244, 2, 1, "", "sum"], [245, 2, 1, "", "tan"], [246, 2, 1, "", "tanh"], [250, 2, 1, "", "tensor"], [262, 2, 1, "", "tile"], [247, 2, 1, "", "trace"], [248, 2, 1, "", "transpose"], [263, 2, 1, "", "unsqueeze"], [249, 2, 1, "", "var"], [264, 2, 1, "", "vstack"], [222, 2, 1, "", "zeros"], [223, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [34, 1, 1, "", "ResNet"], [43, 1, 1, "", "SENet"], [49, 1, 1, "", "VGGNet"], [54, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [35, 2, 1, "", "resnet_1001"], [36, 2, 1, "", "resnet_101"], [37, 2, 1, "", "resnet_152"], [38, 2, 1, "", "resnet_18"], [39, 2, 1, "", "resnet_200"], [40, 2, 1, "", "resnet_269"], [41, 2, 1, "", "resnet_34"], [42, 2, 1, "", "resnet_50"], [44, 2, 1, "", "se_resnet_101"], [45, 2, 1, "", "se_resnet_152"], [46, 2, 1, "", "se_resnet_18"], [47, 2, 1, "", "se_resnet_34"], [48, 2, 1, "", "se_resnet_50"], [57, 2, 1, "", "summarize"], [50, 2, 1, "", "vggnet_11"], [51, 2, 1, "", "vggnet_13"], [52, 2, 1, "", "vggnet_16"], [53, 2, 1, "", "vggnet_19"], [55, 2, 1, "", "zfnet"]], "lucid.nn": [[166, 1, 1, "", "AdaptiveAvgPool1d"], [167, 1, 1, "", "AdaptiveAvgPool2d"], [168, 1, 1, "", "AdaptiveAvgPool3d"], [141, 1, 1, "", "AlphaDropout"], [169, 1, 1, "", "AvgPool1d"], [170, 1, 1, "", "AvgPool2d"], [171, 1, 1, "", "AvgPool3d"], [152, 1, 1, "", "BCELoss"], [158, 1, 1, "", "BatchNorm1d"], [159, 1, 1, "", "BatchNorm2d"], [160, 1, 1, "", "BatchNorm3d"], [148, 1, 1, "", "Bilinear"], [58, 1, 1, "", "Buffer"], [137, 1, 1, "", "Conv1d"], [138, 1, 1, "", "Conv2d"], [139, 1, 1, "", "Conv3d"], [114, 1, 1, "", "ConvBNReLU1d"], [115, 1, 1, "", "ConvBNReLU2d"], [116, 1, 1, "", "ConvBNReLU3d"], [153, 1, 1, "", "CrossEntropyLoss"], [142, 1, 1, "", "Dropout"], [143, 1, 1, "", "Dropout1d"], [144, 1, 1, "", "Dropout2d"], [145, 1, 1, "", "Dropout3d"], [128, 1, 1, "", "ELU"], [129, 1, 1, "", "GELU"], [154, 1, 1, "", "HuberLoss"], [149, 1, 1, "", "Identity"], [161, 1, 1, "", "InstanceNorm1d"], [162, 1, 1, "", "InstanceNorm2d"], [163, 1, 1, "", "InstanceNorm3d"], [164, 1, 1, "", "LayerNorm"], [130, 1, 1, "", "LeakyReLU"], [150, 1, 1, "", "Linear"], [155, 1, 1, "", "MSELoss"], [172, 1, 1, "", "MaxPool1d"], [173, 1, 1, "", "MaxPool2d"], [174, 1, 1, "", "MaxPool3d"], [59, 1, 1, "", "Module"], [61, 1, 1, "", "ModuleDict"], [62, 1, 1, "", "ModuleList"], [156, 1, 1, "", "NLLLoss"], [60, 1, 1, "", "Parameter"], [63, 1, 1, "", "ParameterDict"], [64, 1, 1, "", "ParameterList"], [131, 1, 1, "", "ReLU"], [132, 1, 1, "", "SELU"], [117, 1, 1, "", "SEModule"], [118, 1, 1, "", "SelectiveKernel"], [65, 1, 1, "", "Sequential"], [133, 1, 1, "", "Sigmoid"], [134, 1, 1, "", "Softmax"], [135, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[101, 2, 1, "", "adaptive_avg_pool1d"], [102, 2, 1, "", "adaptive_avg_pool2d"], [103, 2, 1, "", "adaptive_avg_pool3d"], [81, 2, 1, "", "alpha_dropout"], [104, 2, 1, "", "avg_pool1d"], [105, 2, 1, "", "avg_pool2d"], [106, 2, 1, "", "avg_pool3d"], [97, 2, 1, "", "batch_norm"], [88, 2, 1, "", "bilinear"], [91, 2, 1, "", "binary_cross_entropy"], [76, 2, 1, "", "conv1d"], [77, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv3d"], [92, 2, 1, "", "cross_entropy"], [82, 2, 1, "", "dropout"], [83, 2, 1, "", "dropout1d"], [84, 2, 1, "", "dropout2d"], [85, 2, 1, "", "dropout3d"], [67, 2, 1, "", "elu"], [68, 2, 1, "", "gelu"], [93, 2, 1, "", "huber_loss"], [99, 2, 1, "", "instance_norm"], [112, 2, 1, "", "interpolate"], [100, 2, 1, "", "layer_norm"], [70, 2, 1, "", "leaky_relu"], [90, 2, 1, "", "linear"], [108, 2, 1, "", "max_pool1d"], [109, 2, 1, "", "max_pool2d"], [110, 2, 1, "", "max_pool3d"], [95, 2, 1, "", "mse_loss"], [96, 2, 1, "", "nll_loss"], [71, 2, 1, "", "relu"], [113, 2, 1, "", "rotate"], [72, 2, 1, "", "selu"], [73, 2, 1, "", "sigmoid"], [74, 2, 1, "", "softmax"], [75, 2, 1, "", "tanh"], [80, 2, 1, "", "unfold"]], "lucid.nn.init": [[120, 2, 1, "", "constant"], [122, 2, 1, "", "kaiming_normal"], [123, 2, 1, "", "kaiming_uniform"], [124, 2, 1, "", "normal"], [125, 2, 1, "", "uniform"], [126, 2, 1, "", "xavier_normal"], [127, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[179, 1, 1, "", "ASGD"], [180, 1, 1, "", "Adadelta"], [181, 1, 1, "", "Adagrad"], [182, 1, 1, "", "Adam"], [183, 1, 1, "", "AdamW"], [184, 1, 1, "", "Adamax"], [185, 1, 1, "", "NAdam"], [177, 1, 1, "", "Optimizer"], [186, 1, 1, "", "RAdam"], [187, 1, 1, "", "RMSprop"], [188, 1, 1, "", "Rprop"], [189, 1, 1, "", "SGD"]], "lucid.random": [[197, 2, 1, "", "rand"], [198, 2, 1, "", "randint"], [199, 2, 1, "", "randn"], [200, 2, 1, "", "seed"], [201, 2, 1, "", "uniform"]], "lucid.transforms": [[267, 1, 1, "", "CenterCrop"], [265, 1, 1, "", "Compose"], [268, 1, 1, "", "Normalize"], [269, 1, 1, "", "RandomCrop"], [270, 1, 1, "", "RandomGrayscale"], [271, 1, 1, "", "RandomHorizontalFlip"], [272, 1, 1, "", "RandomRotation"], [273, 1, 1, "", "RandomVerticalFlip"], [274, 1, 1, "", "Resize"], [266, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 56, 57, 58, 59, 60, 61, 63, 64, 65, 101, 102, 103, 118, 153, 156, 166, 167, 168, 169, 172, 173, 176, 177, 178, 192, 194, 208, 216, 234, 236, 244, 247, 249, 250, 260, 266, 268, 276], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 34, 43, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 253, 256, 257, 258, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276], "000": [5, 217, 218], "0000": [153, 154, 156], "0001": 179, "000e": [217, 218], "001": [179, 182, 183, 185, 186, 189], "002": [184, 185], "004": 185, "005": 130, "01": [70, 130, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189], "01051757": 199, "016": [35, 56], "0205": 153, "0217": 153, "0227": 153, "024": [48, 56], "0299": 153, "032": [42, 56], "044715": [68, 129], "0450": 153, "0451": 153, "047": [51, 56], "04719755": 226, "0474259": 73, "0480": 153, "05": [97, 99, 100, 114, 115, 116, 130, 158, 159, 160, 161, 162, 163, 164], "0507": [72, 132], "06": [180, 188], "069": [40, 56], "07": [91, 92, 152, 153], "0700": 153, "0706508": 135, "071": [35, 56], "0721": 153, "0794": 156, "08": [182, 183, 184, 185, 186, 187], "0802": 156, "08333333": 16, "085537": 233, "088": [48, 56], "0900": [134, 153], "0986": [74, 134], "09861229": 234, "0992": 153, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 34, 43, 49, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 49, 54, 55, 56, 57, 61, 62, 65, 77, 78, 88, 90, 101, 137, 138, 139, 144, 145, 148, 150, 159, 160, 162, 166, 170, 171, 173, 181, 194, 198, 201, 202, 205, 208, 211, 212, 228, 244, 267, 269, 270, 272], "100": [21, 50, 51, 52, 53, 56, 194, 276], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "1000000": 179, "1001": [35, 56, 153], "1003": 153, "1007": 56, "101": [36, 44, 56], "1014": 72, "102": [40, 56], "1025": [62, 65], "1026": [62, 65], "1027": [62, 65], "10499": 73, "1050": 133, "1054": 156, "1056": [62, 65], "10590": 56, "1097": 56, "11": [38, 46, 49, 50, 56, 88, 137, 138, 139, 144, 148, 159, 160, 162, 170, 171, 173, 208, 267, 268, 269, 270, 272], "1105": 56, "1109": 56, "1111": 152, "1134": 88, "114b": 270, "119": 88, "1192": [73, 74, 134], "12": [31, 32, 63, 88, 103, 137, 138, 139, 144, 145, 148, 159, 160, 162, 168, 170, 171, 173, 208, 212, 213, 267, 269, 270, 272], "120": [30, 33], "123": [122, 123, 124, 125, 126, 127, 200, 201], "124": [122, 123, 126, 127], "125": 171, "1250": 154, "128": [27, 34, 49, 56, 65, 118, 265, 276], "128x128": [265, 276], "13": [23, 49, 51, 56, 88, 137, 138, 139, 148, 160, 170, 171, 173, 208, 267, 269, 270, 272], "132": [50, 56], "133": [51, 56], "138": [52, 56], "14": [137, 138, 139, 144, 145, 148, 160, 170, 171, 173, 195, 208, 212, 267, 269, 270, 272], "1409": 56, "143": [53, 56], "145": 88, "149": [35, 56], "15": [0, 88, 137, 138, 139, 148, 160, 170, 171, 173, 208, 212, 247, 267, 269, 270, 272, 276], "1513": 156, "152": [37, 45, 56], "155": 208, "1556": 56, "1588": [68, 129], "16": [30, 33, 43, 49, 52, 56, 62, 63, 65, 102, 103, 114, 115, 116, 117, 118, 137, 138, 139, 144, 145, 148, 159, 160, 167, 168, 170, 171, 173, 176, 208, 212, 242, 267, 269, 270, 272], "160": [36, 56], "16227766": 17, "16425": 156, "1643": 152, "166": 208, "17": [137, 138, 139, 148, 160, 171, 207, 267, 269, 270, 272], "170": 88, "17520119": 241, "18": [32, 38, 46, 56, 137, 138, 139, 144, 148, 160, 171, 211, 212, 267, 269, 270, 272], "1800": 153, "19": [49, 53, 56, 77, 78, 88, 138, 139, 160, 206, 208], "192": [31, 32, 37, 56], "1966": [74, 133, 134], "1998": [56, 153], "1_53": 56, "1d": [76, 101, 104, 108, 114, 158, 161, 166, 201, 208, 216, 247, 255, 256, 257, 258, 262], "1e": [91, 92, 97, 99, 100, 114, 115, 116, 152, 153, 158, 159, 160, 161, 162, 163, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "1e6": 179, "1st": [20, 54], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 38, 46, 54, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "20": [0, 5, 61, 62, 65, 138, 139, 144, 160, 212, 233], "200": [39, 56], "2011": 117, "2012": 56, "2014": 56, "2015": 56, "2016": 56, "2017": 56, "2018": [56, 117], "2023": 117, "2039": 156, "204": 139, "21": [41, 47, 56, 63, 88, 138, 139, 160, 212], "211": 208, "22": [27, 56, 88, 138, 139, 144, 160, 206, 208], "2231": [153, 156], "224": [20, 49, 54, 56], "2247": [158, 159, 160, 161, 162, 163, 164], "224x224": 23, "226": 208, "22752314": 199, "2278": 56, "23": [36, 44, 138, 139, 160], "2324": [56, 132], "234": [122, 123, 124, 125, 126, 127, 201], "24": [39, 88, 102, 138, 139, 144, 160, 167, 212], "240": [53, 56], "2424": [74, 134], "2447": 134, "246": [31, 56], "25": [0, 42, 56, 73, 133, 139, 155, 160, 170, 171, 205, 238, 249], "2500": [152, 154, 156], "2512": 128, "2547": 132, "256": [34, 49], "26": [63, 90, 139, 150, 160, 212], "26325684": 199, "2689": [74, 133, 134], "269": [40, 56], "27": [88, 137, 139, 160, 232], "276": [122, 123, 126, 127], "28": [31, 32, 48, 56, 88, 139, 212], "28x28": [5, 31, 32], "29": 139, "299": 56, "299r": 270, "299x299": [24, 25, 27, 28], "2_i": [161, 162, 163], "2d": [77, 84, 102, 105, 109, 115, 159, 162, 167, 208, 216, 219, 247, 252, 255, 256, 258, 262, 272], "2e": 184, "2nd": [20, 54], "2x2": [80, 267, 269], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 54, 56, 58, 59, 60, 62, 63, 64, 65, 68, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274], "30": [24, 40, 56, 62, 113, 139, 272], "3026": 156, "31": [88, 139, 208], "310": [217, 218], "31622777": 17, "319": 56, "32": [33, 56, 62, 65, 88, 90, 102, 114, 115, 116, 117, 118, 138, 139, 150, 167, 176, 206, 207, 212], "321": [122, 123, 126, 127], "326": [44, 56], "32x32": [30, 33], "33": [62, 65, 90, 139, 150], "33333333": 16, "336": [50, 56], "34": [41, 47, 56, 62, 65, 88, 139, 208, 212], "342": [122, 123, 126, 127], "345": [122, 123, 124, 125, 126, 127, 201], "35": [28, 56, 62, 65, 139], "352": [23, 56], "3567": [152, 156], "357": [52, 55, 56], "36": [37, 39, 45, 139], "3679": [67, 72, 128], "37": 137, "372": 88, "375": 155, "3750": 154, "378": [32, 56], "38344152": 197, "38629436": 234, "389056": 233, "392": [24, 56], "393": [23, 56], "3935": 128, "3d": [78, 85, 103, 106, 110, 116, 139, 160, 163, 168], "3x3": [56, 202], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 36, 41, 42, 44, 47, 48, 56, 57, 63, 65, 76, 77, 78, 80, 83, 84, 85, 88, 90, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 186, 187, 189, 192, 195, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 223, 229, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274], "40": [25, 56], "400": 33, "4044": 152, "4076": 153, "4096": [20, 54], "41421356": 9, "416": [40, 56], "41666667": 16, "41808962": 199, "419974": 75, "4199743": 135, "42": [88, 117, 195, 202], "421": [122, 123, 126, 127], "423": [122, 123, 124, 125], "42718872": 17, "4278": 56, "4284": 56, "4286": 152, "43": [206, 208], "4323": 128, "4375": 154, "43758721": 197, "44": [36, 56], "4472136": 11, "4495": [160, 163], "45": [88, 113, 272], "4545": 141, "47112767": 228, "48": [40, 90, 150], "49": [44, 56], "4979": 128, "4x4": 274, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 54, 56, 57, 59, 60, 61, 62, 63, 65, 68, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 93, 95, 97, 99, 100, 101, 104, 105, 112, 114, 115, 116, 118, 120, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 188, 192, 195, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 223, 225, 226, 227, 235, 236, 237, 238, 239, 244, 247, 248, 249, 250, 253, 255, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "50": [42, 48, 56, 90, 150, 188, 206, 208, 270, 271, 273, 276], "5000": [152, 154, 156], "5108": 156, "512": [28, 34, 38, 56], "52359878": 227, "53": [88, 207], "543": [122, 123, 124, 125, 126, 127, 201], "54308063": 231, "544": [52, 56], "545": 213, "5455": 141, "549": [36, 56], "557": [42, 56], "563": [122, 123, 126, 127], "57": 88, "57079633": [226, 227], "57366333": 200, "586": [25, 56], "587g": 270, "592": [46, 56], "5th": [20, 54], "6": [8, 16, 20, 30, 33, 41, 42, 47, 48, 54, 63, 64, 76, 77, 78, 80, 85, 88, 90, 101, 123, 127, 137, 138, 139, 142, 143, 144, 145, 148, 150, 152, 158, 159, 160, 161, 162, 163, 164, 166, 170, 171, 173, 174, 180, 188, 192, 195, 201, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 235, 236, 237, 244, 247, 248, 249, 250, 253, 258, 259, 264, 266, 267, 268, 269, 270, 272, 274], "60": [37, 56], "6052": 156, "6065": 128, "608": [55, 56], "61": [21, 33, 56], "6124": [158, 159, 160, 161, 162, 163, 164], "62": [55, 56, 88], "62686041": 241, "630": 56, "6321": [67, 128], "63245553": 17, "64": [34, 39, 49, 56, 62, 65, 88, 117, 118], "645": 56, "64589411": 197, "654": [122, 123, 124, 125, 126, 127, 201], "657": [122, 123, 126, 127], "6590": [74, 134], "66": [45, 56], "6652": 134, "66666667": 16, "6667": 152, "667": [53, 56], "6682": 152, "669": [39, 56], "67": 208, "672": [41, 56], "67326": 132, "6733": 72, "678": [122, 123, 124, 125, 126, 127], "68811989": 199, "689": [38, 56], "69314718": 234, "7": [15, 49, 63, 76, 77, 78, 80, 85, 88, 90, 91, 92, 101, 118, 129, 132, 133, 135, 137, 138, 139, 144, 145, 148, 150, 152, 153, 155, 159, 160, 162, 163, 166, 170, 171, 173, 174, 195, 198, 201, 204, 206, 207, 208, 212, 214, 216, 233, 236, 244, 247, 248, 249, 262, 266, 267, 268, 269, 270, 272, 274], "70": 5, "7001": 153, "706": [33, 56], "70710678": [11, 240], "7132": 56, "7141": 56, "7147": 156, "7182818": 233, "726791": 56, "7311": [74, 133, 134], "739": [27, 56], "74": 208, "75": [90, 150, 155, 179], "7581": 72, "76159416": 246, "7616": [75, 135], "76219569": 231, "7635": 132, "770": 56, "772": 213, "778": [46, 56], "78357324": 199, "78539816": 228, "79172504": 197, "797": [41, 56], "7x7": 54, "8": [14, 18, 37, 40, 45, 57, 62, 63, 65, 76, 77, 78, 80, 85, 88, 90, 91, 101, 102, 103, 114, 115, 116, 117, 129, 132, 133, 135, 137, 138, 139, 142, 143, 144, 145, 148, 150, 152, 155, 159, 160, 162, 163, 166, 167, 168, 170, 171, 173, 174, 182, 183, 184, 185, 186, 187, 195, 198, 205, 206, 207, 208, 212, 213, 215, 216, 232, 236, 244, 247, 248, 249, 266, 267, 268, 269, 270, 272, 274], "80": 5, "8005": 153, "808": [37, 56], "817": [24, 56], "818": 56, "8182": 141, "82": 88, "821": [45, 56], "833": 56, "84": [30, 32, 33], "840": [21, 56], "8413": [68, 129], "847": [28, 56], "848": [45, 51, 56], "8584": 132, "86": 56, "863": [50, 56], "864": [39, 56], "868": [47, 56], "872": [44, 56], "876": [122, 123, 126, 127, 201], "8808": [74, 133, 134], "887": 213, "891773": 197, "89442719": 11, "9": [0, 1, 3, 5, 18, 56, 77, 80, 88, 90, 101, 137, 138, 139, 144, 148, 150, 152, 159, 160, 162, 166, 170, 171, 173, 179, 180, 182, 183, 184, 185, 186, 187, 189, 195, 198, 201, 204, 208, 212, 213, 214, 216, 242, 243, 266, 267, 268, 269, 270, 272], "90709145": 200, "9091": 141, "9120": 156, "9163": 156, "94": 35, "9486833": 17, "949e": [217, 218], "9526": 73, "9545": 129, "958": [47, 56], "96366276": 197, "9640": 135, "96402758": 246, "978": 56, "984": [25, 56], "99": 187, "9957": 156, "99734545": 200, "999": [0, 182, 183, 184, 185, 186], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 43, 49, 50, 51, 52, 53, 59, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 88, 90, 91, 92, 96, 97, 99, 100, 112, 118, 141, 142, 143, 144, 145, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 272], "As": 200, "Be": 0, "By": [0, 2, 3, 7, 35, 36, 37, 38, 39, 40, 41, 42, 60, 113, 176, 186, 192, 197, 198, 199, 201, 266, 276], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 65, 67, 68, 70, 71, 72, 73, 75, 88, 90, 112, 122, 123, 126, 127, 132, 137, 138, 139, 148, 150, 158, 159, 160, 161, 162, 163, 176, 178, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 233, 234, 235, 236, 237, 240, 242, 244, 247, 248, 249, 256, 258, 260, 262, 263, 276], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 57, 59, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 85, 88, 90, 97, 99, 102, 103, 112, 113, 114, 115, 116, 118, 122, 123, 137, 138, 139, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 183, 187, 188, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 273, 274], "In": [3, 7, 16, 76, 77, 78, 153, 156, 191, 192, 193, 265, 276], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 56, 59, 61, 62, 63, 64, 65, 85, 88, 112, 113, 114, 115, 116, 117, 129, 131, 135, 148, 149, 152, 153, 154, 155, 156, 166, 167, 168, 176, 177, 178, 179, 185, 187, 188, 189, 192, 200, 204, 205, 206, 209, 210, 211, 213, 214, 235, 237, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266], "Its": [18, 202], "Near": 16, "No": 80, "Not": 149, "One": [31, 276], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "There": 259, "These": [4, 7, 8, 11, 14, 17, 19, 56, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 188, 195, 202, 276], "To": [3, 56, 178, 199, 202, 217, 218, 255, 276], "With": [3, 80, 266, 276], "_": [14, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 75, 90, 112, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 189, 206, 207, 208, 212, 247, 248, 267, 268, 269, 271, 272, 273], "_1": [11, 61, 62, 63, 64, 65, 88, 148, 212, 251, 253, 264], "_2": [11, 61, 62, 63, 64, 65, 88, 148, 212, 251, 253, 264], "__call__": [1, 59], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 203, 265, 266], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 177, "__setattr__": 59, "_activ": 74, "_arraylik": [195, 216, 218, 221, 223], "_arraylikeint": 256, "_arrayorscalar": [58, 60, 195, 203, 250], "_base_dtyp": [215, 217, 220, 222], "_c": 268, "_decai": 185, "_fanmod": [122, 123], "_grad_en": [191, 193], "_i": [11, 15, 74, 88, 134, 155, 158, 164, 169, 172, 206, 207, 209, 210, 212, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 258, 260, 263, 264], "_in": [122, 123, 126, 127], "_j": [74, 134, 169, 172, 212, 236, 244, 248, 249], "_k": 261, "_left": 112, "_make_lay": 49, "_modul": 59, "_n": [11, 61, 62, 63, 64, 65, 251, 253, 264], "_numpyarrai": 195, "_out": [122, 123, 126, 127, 258, 262], "_p": 15, "_pad": 256, "_paddingstr": [114, 115, 116, 137, 138, 139], "_paramet": 59, "_reductiontyp": [91, 92, 93, 95, 96, 152, 153, 154, 155, 156], "_right": 112, "_scalar": [120, 124, 125, 126, 127, 195, 215, 229], "_seresnetbottleneck": [44, 45, 48], "_seresnetmodul": [46, 47], "_shapelik": [57, 100, 164, 195, 198, 220, 222, 259, 260, 263], "_size": [101, 102, 103], "_slope": 130, "_statedict": 177, "_t": [186, 187], "_tensor": [58, 60, 216, 250], "_tensorop": 203, "_u": 16, "_v": 16, "_valu": [229, 256], "_width": 256, "a_i": [209, 210, 213], "aaai": 56, "ab": 224, "abc": [2, 177], "abil": [7, 276], "about": [7, 57], "abov": [7, 191, 193, 200, 216, 219], "absolut": [14, 15, 93, 184, 225], "abstract": [2, 3, 176, 177, 178, 179, 187, 189], "abstractmethod": 177, "acceler": [56, 132, 158, 159, 160, 179, 185, 187, 189], "accept": [149, 197, 203], "access": [0, 2, 3, 4, 5, 58, 60, 61, 62, 63, 64, 65, 259], "accord": [112, 137, 138, 139, 148, 150, 153, 156, 180, 181, 182, 183, 184, 185, 186, 248], "accordingli": 10, "account": [14, 16, 17], "accumul": [179, 180, 181, 204, 205, 209, 210, 211, 214], "accur": 45, "accuraci": [48, 56], "achiev": [56, 76, 77, 78, 101, 166, 167, 168, 185, 271, 273], "across": [0, 58, 62, 65, 100, 101, 102, 103, 126, 127, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 195, 197, 198, 199, 200, 201, 202, 217, 218, 236, 249], "act": 183, "activ": [7, 20, 34, 35, 39, 40, 43, 49, 54, 56, 61, 65, 67, 68, 70, 71, 72, 73, 74, 75, 81, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 152, 153, 156, 158, 159, 160, 164, 235, 237], "actual": [60, 152, 153, 155, 156, 203, 269], "ad": [59, 61, 62, 63, 64, 65, 76, 77, 78, 88, 90, 91, 92, 97, 99, 100, 104, 105, 106, 108, 109, 110, 114, 115, 116, 137, 138, 139, 152, 153, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 194, 263, 276], "adadelta": 190, "adagrad": [180, 190], "adam": [183, 184, 185, 186, 190], "adamax": 190, "adamw": 190, "adapt": [20, 22, 30, 44, 46, 49, 54, 56, 101, 102, 103, 117, 118, 166, 167, 168, 180, 181, 182, 185, 186, 187, 188], "adaptive_avg_pool1d": [87, 107, 166], "adaptive_avg_pool2d": [87, 107, 167], "adaptive_avg_pool3d": [87, 107, 168], "adaptiveavgpool1d": [147, 175], "adaptiveavgpool2d": [20, 34, 43, 49, 54, 147, 175], "adaptiveavgpool3d": [147, 175], "add": [4, 59, 61, 62, 65, 88, 90, 137, 138, 139, 148, 150, 164, 177, 179, 182, 187, 189, 192, 224, 256, 263], "add_modul": [59, 65], "add_param_group": 177, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 62, 65, 88, 90, 97, 99, 148, 150, 158, 159, 160, 161, 162, 163, 179, 185, 192, 202, 204, 261], "addition": 185, "address": [153, 156, 182, 183, 186], "adjust": [27, 101, 102, 103, 118, 141, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 178, 182, 186, 187, 188, 253, 264], "advanc": [3, 16, 39, 56, 62, 65, 76, 77, 78, 101, 102, 103, 166, 167, 168, 176, 179], "advantag": [28, 193], "affect": [191, 257, 260, 265], "affin": [114, 115, 116, 158, 159, 160, 161, 162, 163, 164, 272], "after": [14, 20, 34, 54, 60, 61, 62, 63, 64, 65, 85, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 183, 193, 203, 204, 205, 209, 210, 211, 213, 214, 256, 266], "afterward": 193, "aggreg": [118, 212, 258, 262], "aim": [4, 7], "al": [23, 56], "alex": 56, "alexnet": [29, 54, 56], "algebra": [7, 8, 219], "algorithm": [7, 14, 16, 17, 177, 178, 202], "align": [18, 112, 207, 208], "align_corn": 112, "all": [0, 3, 4, 7, 17, 59, 61, 62, 63, 64, 65, 77, 78, 101, 102, 103, 105, 106, 109, 110, 112, 115, 116, 118, 130, 131, 139, 166, 167, 168, 170, 171, 174, 176, 177, 178, 179, 182, 187, 188, 189, 213, 235, 236, 237, 244, 247, 249, 251, 252, 253, 258, 260, 261, 262, 264, 267, 268, 276], "allevi": [56, 67], "alloc": [217, 218], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 56, 60, 61, 62, 63, 64, 65, 67, 70, 71, 74, 78, 80, 113, 118, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 176, 180, 181, 192, 215, 220, 222, 223, 248, 250, 255, 265, 266, 276], "along": [74, 112, 118, 134, 207, 208, 212, 235, 236, 237, 244, 247, 249, 251, 253, 255, 258, 261, 262, 263, 264, 271, 273], "alongsid": 58, "alpha": [67, 70, 72, 81, 128, 132, 141, 179, 187], "alpha_dropout": [86, 87, 141], "alphadropout": [146, 147], "alphadropoutmodel": 141, "alreadi": 194, "also": [57, 67, 68, 70, 71, 72, 73, 75, 88, 90, 112, 185, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264], "alter": [65, 259], "altern": [1, 129, 180, 208], "alwai": [60, 257, 270, 271, 273], "among": [24, 118], "amount": [76, 77, 78, 104, 105, 106, 108, 109, 110, 185], "amsgrad": [182, 183], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 57, 59, 61, 62, 63, 64, 65, 68, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 102, 103, 112, 113, 118, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 182, 185, 187, 193, 194, 195, 203, 208, 216, 219, 229, 236, 244, 249, 251, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "analog": [258, 262], "analysi": [4, 117, 137, 138, 139, 163, 169, 171, 172, 174], "andrew": 56, "angl": [113, 272], "ani": [0, 1, 2, 3, 14, 16, 21, 34, 55, 58, 59, 60, 61, 63, 64, 67, 68, 70, 71, 72, 73, 75, 81, 82, 88, 90, 97, 99, 133, 164, 176, 177, 191, 193, 194, 200, 203, 215, 216, 217, 219, 220, 221, 222, 223, 235, 237, 248, 250, 251, 252, 253, 256, 258, 261, 262, 263, 264, 265, 276], "anoth": [64, 214, 221, 223, 266, 276], "api": [4, 166, 167, 168, 276], "appear": 177, "append": [62, 64, 65], "appli": [2, 4, 5, 7, 14, 20, 34, 54, 56, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 183, 184, 185, 186, 208, 256, 258, 265, 268, 270, 271, 272, 273, 274, 276], "applic": [4, 16, 27, 28, 76, 99, 137, 138, 139, 148, 150, 202, 215, 222, 256, 274], "approach": [3, 26, 65, 183], "appropri": [16, 59, 63, 65, 137, 138, 139, 141, 142, 143, 153, 170, 171, 191, 193], "approx": 72, "approxim": [16, 68, 129, 170, 173], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 56, 58, 59, 60, 61, 62, 63, 64, 65, 74, 76, 77, 78, 80, 88, 90, 102, 103, 112, 117, 118, 122, 123, 125, 126, 127, 134, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 182, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 225, 229, 233, 235, 236, 237, 238, 239, 244, 247, 248, 251, 255, 258, 259, 262, 265, 266, 267, 269, 270, 274, 276], "arang": 224, "arbitrari": [62, 149, 217, 218, 229, 234, 236, 240, 242, 244, 248, 249], "arcco": 224, "arch": 194, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 49, 50, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 68, 117, 131, 148, 149, 176, 194], "arcsin": 224, "arctan": 224, "area": 112, "arg": [59, 149, 194, 217], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 65, 149, 197, 217, 248], "around": [11, 113, 135], "arr": [195, 251, 253, 261, 264], "arrai": [7, 58, 60, 192, 195, 203, 208, 216, 221, 223, 250, 257, 258, 266, 276], "art": 56, "artifici": 56, "arxiv": 56, "asarrai": 195, "asgd": 190, "aspect": 274, "assign": [59, 61, 63, 65, 112, 153, 156], "assist": [22, 23, 24], "associ": [63, 64], "assum": [0, 1, 177, 178, 191], "attempt": [61, 65], "attent": [64, 88, 117], "attribut": 59, "audio": 137, "augment": [3, 4, 46, 113, 202, 258, 262, 265, 269, 270, 271, 272, 273, 276], "autodiff": 7, "autograd": 176, "automat": [4, 7, 60, 61, 62, 63, 64, 176, 197, 198, 199, 201, 203, 217, 218, 223, 255, 266], "auxiliari": [22, 23, 24, 58], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 43, 49, 54, 58, 101, 102, 103, 104, 105, 106, 112, 117, 118, 155, 166, 167, 168, 169, 170, 171, 179, 180, 182, 187, 236], "avg_pool": [169, 170, 171], "avg_pool1d": [87, 107], "avg_pool2d": [87, 107], "avg_pool3d": [87, 107], "avgpool": [20, 34, 43, 49, 54, 118], "avgpool1d": [147, 175], "avgpool1dmodel": 169, "avgpool2d": [147, 175], "avgpool2dmodel": 170, "avgpool3d": [147, 175], "avgpool3dmodel": 171, "avoid": [2, 3, 16, 63, 193], "ax": [8, 192, 235, 236, 237, 244, 248, 249, 258, 260, 262], "axi": [74, 134, 207, 208, 235, 236, 237, 244, 249, 251, 253, 255, 256, 258, 260, 261, 262, 263, 264, 271, 273], "b": [8, 18, 88, 90, 125, 137, 138, 139, 148, 150, 192, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 251, 253, 261, 264, 270], "b_i": [209, 210, 213], "back": [112, 170, 171, 194, 207, 212, 258, 262], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 193, 199, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 233, 235, 237, 250, 256, 258, 262, 266], "backward": [7, 58, 60, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203, 266], "balanc": 154, "bar": 179, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 49, 56, 59, 61, 62, 63, 64, 80, 88, 101, 102, 103, 118, 141, 153, 154, 166, 167, 168, 176, 177, 178, 179, 183, 187, 188, 189, 204, 205, 209, 210, 211, 213, 214, 223, 233, 234, 235, 237, 248, 255, 256, 269, 270, 271, 272, 273], "basic": [7, 20, 54, 57, 76, 77, 78, 101, 102, 103, 114, 115, 116, 117, 122, 123, 126, 127, 166, 167, 168, 267, 268, 269, 270, 271, 272, 273, 274], "basicblock": [34, 38, 41], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 34, 43, 76, 77, 78, 80, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 137, 138, 139, 148, 150, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 186, 208, 267, 268, 269, 270, 272, 274], "batch_norm": [87, 98, 158, 159, 160], "batch_norm1": 65, "batch_norm2": 65, "batch_siz": [1, 2, 3, 118], "batchnorm": [114, 115, 116], "batchnorm1d": [114, 147, 165], "batchnorm1dmodel": 158, "batchnorm2d": [34, 65, 115, 147, 165], "batchnorm2dmodel": 159, "batchnorm3d": [116, 147, 165], "batchnorm3dmodel": 160, "bceloss": [147, 157], "becaus": [2, 198], "becom": [15, 59, 180, 188], "befor": [14, 34, 43, 57, 60, 179, 185, 193, 200, 256, 268, 276], "begin": [1, 15, 67, 70, 71, 72, 128, 130, 131, 132, 154, 155, 156, 169, 170, 171, 172, 173, 174, 186, 188, 192, 202, 209, 210, 212, 225, 229, 235, 237, 239, 256], "behav": [154, 247], "behavior": [56, 62, 65, 191, 202, 208, 218, 276], "being": [64, 113, 141, 142, 143, 144, 145, 186, 191, 193, 251, 253, 264], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 208, 216, 219], "benchmark": 5, "benefici": 65, "benefit": [67, 176, 185, 195], "bernoulli": [141, 142, 143, 144, 145], "best": [122, 123, 126, 127], "beta": [158, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186], "beta1": [182, 183, 184, 185, 186], "beta2": [182, 183, 184, 185, 186], "beta_1": [182, 183, 184, 185, 186], "beta_2": [182, 183, 184, 185, 186], "better": [13, 54, 56, 68, 122, 123, 126, 127, 161, 162, 163, 176, 183, 185, 187, 268], "between": [59, 76, 77, 78, 80, 88, 93, 114, 115, 116, 118, 137, 138, 139, 141, 142, 143, 144, 145, 148, 152, 153, 154, 155, 156, 179, 187, 188, 189, 202, 204, 205, 208, 211, 214, 215, 249, 270, 271, 273, 274], "beyond": [7, 62], "bia": [76, 77, 78, 88, 90, 97, 99, 100, 114, 115, 116, 137, 138, 139, 148, 150, 158, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186], "bias": [137, 138, 139, 150, 164, 176], "bias1": 63, "bias2": 63, "bilinear": [87, 89, 112, 147, 151], "bilinearmodel": 148, "binari": [73, 91, 133, 141, 142, 143, 144, 145, 152], "binary_cross_entropi": [87, 94], "block": [26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 80, 114, 115, 116, 118, 137, 138, 139, 193], "block1": [57, 176], "block2": [57, 176], "block_arg": 34, "blue": 270, "bmatrix": 212, "bn": [114, 115, 116], "bn1": 34, "bn_affin": [114, 115, 116], "bool": [1, 5, 19, 22, 23, 24, 57, 59, 60, 81, 82, 83, 84, 85, 97, 99, 112, 114, 115, 116, 137, 138, 139, 148, 150, 158, 159, 160, 161, 162, 163, 164, 182, 183, 187, 191, 197, 198, 199, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 236, 237, 244, 249, 250, 266], "both": [76, 90, 102, 104, 108, 114, 129, 137, 138, 167, 169, 170, 172, 173, 206, 207, 208, 212, 216, 255, 274], "bottleneck": [34, 35, 36, 37, 39, 40, 42, 117], "bottom": 112, "bound": [123, 125, 127, 188, 201], "box": 4, "branch": [22, 23, 24, 56, 118], "break": 176, "brief": 276, "bright": 276, "broadcast": [144, 145, 236, 244, 249, 259, 263], "buffer": [179, 185, 187, 189], "build": [7, 28, 35, 36, 37, 38, 39, 40, 41, 42, 56, 59, 62, 65, 176, 276], "built": [3, 7, 35, 39, 40, 65, 176], "burg": 5, "c": [5, 80, 83, 84, 85, 92, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117, 144, 145, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 192, 253, 264, 268], "c_": [137, 138, 139], "c_in": [76, 77, 78, 114, 115, 116], "c_out": [76, 77, 78], "calcul": [0, 1, 7, 8, 60, 180, 181, 184, 185, 186, 193, 198, 203], "calculu": [9, 16], "call": [1, 59, 191, 194, 204, 205, 208, 209, 210, 211, 213, 214], "callabl": [177, 194, 265], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 57, 58, 60, 61, 62, 63, 64, 65, 70, 76, 77, 78, 113, 118, 129, 130, 135, 137, 138, 139, 161, 162, 163, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 201, 202, 203, 208, 217, 218, 219, 220, 222, 223, 236, 244, 249, 253, 255, 256, 258, 259, 262, 263, 264, 265, 266, 269, 271, 272, 273, 276], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 215, 216, 219, 220, 221, 222, 223], "captur": [80, 137, 138, 139, 148], "care": 193, "cartesian": 255, "case": [3, 15, 30, 67, 70, 71, 72, 128, 130, 131, 132, 154, 155, 156, 169, 170, 171, 172, 173, 174, 176, 181, 186, 188, 192, 209, 210, 225, 229, 235, 237, 239, 256, 276], "categori": [35, 36, 37, 38, 39, 40, 41, 42], "caus": [3, 16, 179, 187, 189], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 67, 68, 70, 72, 73, 76, 77, 78, 88, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 117, 126, 127, 129, 133, 141, 148, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 188, 206, 207, 208, 211, 213], "center": [113, 135, 187, 267, 276], "centercrop": [275, 276], "central": 195, "certain": [10, 68, 88, 148, 182, 183, 191, 235, 237], "chain": [13, 14, 65, 265, 276], "challeng": 56, "cham": 56, "chanc": [270, 271, 273], "chang": [93, 154, 188, 192, 193, 194, 257, 259, 263, 270, 276], "channel": [30, 31, 32, 33, 34, 47, 49, 56, 76, 77, 78, 80, 83, 84, 85, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 137, 138, 139, 144, 145, 158, 159, 160, 161, 162, 163, 166, 169, 170, 171, 172, 173, 174, 268, 270, 274], "check": [191, 267, 269], "checkpoint": 178, "choic": 255, "choleski": 12, "chosen": 141, "christian": 56, "christoph": 5, "clariti": 195, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 74, 92, 96, 176, 178, 194, 216, 219, 250, 276], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 73, 74, 91, 92, 96, 133, 134, 152, 153, 156], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 49, 54], "cleaner": [1, 193, 208], "clear": [60, 203, 217, 218], "clearli": 195, "clf_in_featur": 30, "clf_layer": 30, "clip": [113, 188, 224], "clockwis": 113, "close": [13, 16, 132, 152, 187], "closer": 128, "closur": [177, 178], "cnn": 56, "co": [224, 240], "code": [14, 61, 63, 65, 191, 193, 195, 202], "coeffici": [18, 112, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "col": 80, "collect": [4, 8, 56, 61, 62, 64, 65, 178], "color": [270, 276], "colorjitt": 276, "column": [10, 11, 13, 17, 18, 19, 57, 80, 219, 253, 255], "com": 5, "combin": [1, 3, 25, 26, 27, 56, 62, 65, 67, 68, 114, 115, 116, 117, 118, 129, 153, 176, 185, 186, 236, 244, 249, 251, 276], "combined_dataset": [0, 1], "common": [80, 113, 178, 276], "commonli": [7, 68, 73, 74, 75, 76, 78, 88, 95, 97, 99, 113, 117, 126, 127, 134, 139, 152, 155, 156, 169, 170, 171, 172, 173, 174, 192, 195, 220, 260, 266, 267, 268, 269, 271, 272, 273, 276], "compar": [54, 202, 261], "compat": [4, 8, 149, 164, 176, 192, 202, 266, 276], "complex": [2, 3, 7, 11, 28, 37, 40, 41, 45, 47, 57, 61, 62, 65, 71, 131, 172, 174, 176, 178, 276], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 59, 62, 178, 203, 276], "compos": [5, 137, 138, 139, 169, 170, 171, 172, 173, 174, 176, 276], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 56, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 88, 90, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 112, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 191, 192, 193, 195, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 258, 262, 266, 276], "computation": [3, 16, 35], "compute_loss": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "concaten": [0, 76, 77, 78, 253, 254, 261, 264], "concept": [7, 16, 56], "condit": [9, 10, 13], "confer": 56, "config": 49, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 55, 64, 114, 115, 116], "conjunct": [80, 156], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 49, 54, 56, 90, 117, 118, 137, 138, 139, 150], "consecut": 49, "consid": [3, 13, 16, 65, 122, 123, 126, 127, 176, 188, 191, 217, 218, 276], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 58, 101, 102, 103, 118, 166, 167, 168, 195, 200, 202, 256, 267, 274, 276], "consistent_tensor": 202, "consol": 57, "constant": [91, 92, 97, 99, 100, 121, 132, 152, 153, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 187, 195, 256], "constant_pad": 256, "constraint": [1, 118], "construct": [7, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 62, 176, 216, 258, 262], "constructor": [50, 51, 52, 53], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 43, 49, 57, 59, 61, 62, 63, 64, 65, 74, 80, 88, 90, 91, 92, 96, 112, 152, 153, 156, 177, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 218, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 255], "content": 113, "context": [191, 193], "contextmanag": 193, "contigu": 257, "continu": [130, 199], "contrast": [161, 162, 163, 276], "contribut": [112, 141, 142, 143, 144, 145, 169, 172, 173, 174, 179, 185, 247], "control": [118, 128, 154, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 202, 266, 276], "conv": [26, 43, 114, 115, 116, 159, 160], "conv1": [31, 32, 33, 34, 65, 137, 138, 139, 169, 170, 171, 172, 173, 174], "conv1d": [79, 87, 114, 140, 147, 169, 172], "conv1dmodel": 137, "conv2": [31, 32, 33, 65, 137, 138, 139], "conv2d": [34, 62, 65, 79, 87, 115, 140, 147, 159, 170, 173, 176], "conv2dmodel": 138, "conv3d": [79, 87, 116, 140, 147, 160, 171, 174], "conv3dmodel": 139, "conv_bia": [114, 115, 116], "conv_config": 49, "conv_lay": [30, 62], "convblock": 176, "convbnrelu1d": 119, "convbnrelu2d": 119, "convbnrelu3d": 119, "conveni": [4, 21, 55], "convent": 208, "converg": [16, 135, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 268], "convers": [153, 156, 270, 276], "convert": [5, 49, 58, 60, 74, 134, 203, 255, 265, 266, 270, 276], "convnetwork": 62, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 43, 49, 54, 55, 56, 62, 76, 77, 78, 80, 114, 115, 116, 117, 118, 137, 138, 139, 170, 171, 173, 174, 256], "convolv": [76, 77, 78, 137, 138, 139], "coordin": 255, "core": [0, 1, 2, 3, 59, 176, 177, 203, 276], "corinna": 5, "corner": [112, 267, 269], "correct": [61, 153, 156, 182, 183, 184, 185, 186, 266], "correctli": [16, 59, 61, 62, 63, 64, 65, 153, 156, 202], "correspond": [0, 1, 2, 5, 11, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 90, 112, 131, 134, 148, 150, 158, 159, 160, 161, 162, 163, 170, 171, 179, 187, 189, 206, 207, 209, 210, 213, 233, 234, 240, 242, 253, 256, 258, 262, 264], "cort": 5, "cosh": [224, 241, 246], "cosin": [226, 230, 231, 240], "cost": 56, "could": 59, "count": [56, 57, 251], "counterclockwis": [113, 272], "cover": [8, 76, 77, 78], "coverag": [101, 102, 103], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 118, 176, 192, 194, 202, 215, 219, 220, 221, 222, 223, 255, 261, 265, 276], "creation": [62, 65, 276], "criterion": [152, 153, 154, 155, 156], "critic": [16, 178, 202], "crop": [267, 269, 276], "cross": [91, 92, 152, 153], "cross_entropi": [87, 94], "crossentropyloss": [147, 157], "cube": 224, "cumul": [68, 129], "current": [59, 179, 182, 188, 191], "custom": [4, 7, 20, 21, 27, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 54, 55, 58, 61, 62, 63, 64, 65, 113, 114, 115, 116, 128, 130, 176, 202, 219], "custom_config": 49, "custom_lenet": 30, "customiz": 276, "custommodul": 58, "customnetwork": 61, "customparametermodel": [63, 64], "cvpr": 56, "d": [56, 78, 85, 103, 106, 110, 116, 160, 163, 164, 168, 171, 174, 192, 216, 272], "d_": [78, 103, 106, 110, 139, 168, 171, 174], "d_1": 164, "d_2": 164, "d_n": 164, "d_out": [78, 106, 110], "dampen": [179, 187, 189], "data": [4, 5, 7, 14, 58, 60, 64, 75, 76, 78, 80, 84, 85, 90, 113, 114, 115, 116, 118, 131, 135, 137, 138, 139, 150, 163, 169, 171, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 195, 202, 203, 204, 205, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 256, 257, 258, 259, 260, 262, 265, 266, 269, 270, 271, 272, 273, 276], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 113, 181, 193, 265, 267, 276], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 212, "debug": [57, 65, 191, 200, 276], "decai": [179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 194, "decoupl": [180, 181, 183, 184, 185, 186], "decreas": [182, 183, 188], "deep": [1, 3, 4, 7, 26, 34, 35, 36, 37, 39, 40, 44, 45, 48, 56, 97, 129, 132, 176, 202, 265, 266, 276], "deeper": [7, 23, 25, 28, 41, 56, 132], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 74, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 130, 134, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 177, 178, 185, 191, 197, 198, 199, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 236, 237, 244, 248, 249, 250, 251, 253, 255, 256, 258, 261, 264, 266, 270, 271, 273], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 49, 61, 62, 63, 64, 65, 129, 152, 153, 154, 155, 156, 169, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 198, 199, 213, 218, 229, 248, 265, 276], "definit": [7, 9, 114, 115, 116, 276], "degre": [113, 272, 276], "delai": 179, "delta": [74, 93, 134, 154, 180], "delta_": [74, 134], "demonstr": [7, 8, 56, 176, 195], "denomin": [97, 99, 100, 114, 115, 116, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 187, 205], "denot": [14, 133, 137, 138, 139, 141, 142, 143, 144, 145, 248], "dens": [7, 181], "dense1": 7, "dense2": 7, "densenet": 117, "densiti": [68, 129], "depend": [7, 14, 15, 64, 91, 92, 93, 95, 96, 112, 137, 206, 216, 235, 237, 258, 262, 269, 270, 274], "depth": [62, 78, 85, 103, 106, 110, 139, 160, 163, 168, 171, 174], "depthwis": [76, 77, 78], "deriv": [16, 17, 74, 101, 102, 103, 129, 134, 135, 137, 138, 139, 148, 150, 194], "descend": 19, "descent": [7, 179, 189], "describ": [10, 11], "descript": 276, "deseri": 58, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 55, 56, 60, 62, 63, 64, 65, 67, 72, 132, 141, 176, 195, 276], "desir": [58, 101, 102, 103, 166, 167, 168, 248, 250], "destin": 59, "det": [8, 12], "det_a": 10, "detail": [7, 57, 178, 202, 208], "detect": 56, "determin": [0, 7, 8, 9, 10, 30, 101, 102, 103, 122, 123, 126, 127, 137, 138, 139, 166, 167, 168, 170, 171, 173, 174, 187, 191, 197, 198, 199, 201, 217, 218, 267, 269], "determinist": 113, "develop": [7, 176, 202, 276], "deviat": [122, 124, 126, 265, 268, 276], "diag": [16, 224], "diagon": [16, 17, 19, 216, 219, 247], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 34, 55, 59, 61, 63, 149, 177], "dictionari": [30, 59, 60, 61, 63, 65, 177], "differ": [0, 14, 22, 30, 62, 65, 74, 88, 112, 118, 134, 148, 155, 178, 192, 200, 202, 214, 223, 249, 260, 276], "differenti": [7, 9, 18, 129, 176, 197, 198, 199, 201, 203, 215, 217, 218, 220, 222], "digit": [5, 33, 56], "dilat": [76, 77, 78, 114, 115, 116, 137, 138, 139], "dilation_height": 80, "dilation_width": 80, "dim": [153, 156], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 49, 54, 60, 74, 88, 90, 97, 99, 100, 102, 103, 112, 117, 118, 134, 137, 138, 139, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 192, 195, 197, 201, 203, 207, 217, 235, 236, 237, 244, 247, 248, 249, 251, 253, 256, 258, 260, 261, 262, 263, 264, 267, 269, 274], "dimension": [14, 16, 17, 19, 76, 77, 78, 104, 105, 106, 108, 109, 110, 118, 137, 138, 139, 143, 144, 145, 158, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 192, 207, 208, 212, 216, 233, 236, 244, 247, 249, 252, 257, 258, 260, 262], "diminish": 181, "direct": [11, 152, 153, 154, 155, 156, 179, 187, 188, 189], "directli": [61, 62, 63, 64, 112, 180, 181, 183, 184, 185, 186, 200, 202, 250, 276], "directori": [3, 4, 5], "disabl": [191, 193], "discontinu": 239, "discrep": [152, 153, 156], "discret": [198, 202], "disk": 3, "displai": [21, 55, 57], "distribut": [68, 74, 112, 122, 123, 124, 125, 126, 127, 129, 134, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 153, 156, 169, 170, 171, 197, 198, 199, 201, 202, 236, 244, 247, 249, 261, 268, 270, 271, 272, 273], "div": 224, "divers": [113, 271, 273, 276], "diversifi": 276, "divid": [1, 16, 62, 65, 74, 76, 77, 78, 134, 152, 153, 154, 155, 156, 205, 268], "divis": [7, 16, 76, 77, 78, 141, 142, 143, 144, 145, 180, 181, 182, 183, 184, 185, 186, 187, 205], "do": [16, 18, 58, 61, 62, 63, 64, 81, 82, 83, 84, 176, 186, 191, 223, 247, 256], "document": [4, 7, 56, 178, 195, 202], "doe": [7, 14, 15, 16, 17, 19, 57, 58, 61, 62, 63, 64, 65, 127, 182, 183, 188, 191, 193, 197, 198, 199, 200, 201, 215, 216, 217, 218, 219, 220, 221, 222, 223, 259], "doesn": 193, "doi": 56, "domain": 4, "don": 193, "dot": [11, 14, 61, 62, 63, 64, 65, 164, 172, 173, 174, 207, 212, 224, 251, 253, 261, 264], "down": [3, 176, 274], "download": [4, 5], "drawback": 67, "drawn": [197, 198, 199, 201, 202, 272], "drop": [141, 142, 143, 144, 145], "dropout": [20, 24, 49, 54, 56, 68, 81, 83, 84, 85, 141, 143, 144, 145], "dropout1d": [86, 87, 146, 147], "dropout1dmodel": 143, "dropout2d": [86, 87, 146, 147], "dropout3d": [86, 87, 146, 147], "dropout_prob": 24, "dropoutmodel": 142, "dtype": [58, 60, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 266], "due": [14, 16, 76, 77, 131, 272], "dummi": 57, "duplic": [61, 63], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 58, 59, 60, 61, 62, 63, 64, 65, 74, 81, 82, 83, 84, 85, 97, 99, 113, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 203, 204, 235, 236, 237, 244, 249, 266, 269, 272, 276], "dy": [70, 130], "dynam": [0, 2, 3, 59, 62, 63, 64, 65, 101, 102, 103, 118, 164, 166, 167, 168, 181, 186, 191], "dynamicnetwork": 62, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 49, 58, 74, 118, 133, 134, 141, 153, 177, 180, 187, 188, 219, 231, 233, 234, 241, 246, 247, 251, 270], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 43, 49, 54, 56, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 90, 97, 99, 101, 102, 103, 117, 118, 131, 134, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 255, 256, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276], "earli": 186, "eas": [4, 7], "easi": [2, 3, 4, 7, 60, 61, 63], "easier": [3, 61, 62, 65], "easili": [4, 60, 64, 276], "eccv": 56, "economi": 19, "edg": 256, "educ": [7, 56], "effect": [56, 61, 62, 63, 64, 65, 74, 76, 77, 78, 80, 128, 129, 131, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 191, 192, 193, 253, 264], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 56, 80, 153, 176, 193], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [90, 195, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 250, 255], "element": [0, 16, 17, 24, 60, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 114, 115, 116, 117, 131, 134, 137, 138, 139, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 164, 169, 170, 171, 172, 173, 174, 192, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 255, 256, 258, 259, 260, 262], "elementwise_affin": 164, "elsewher": [172, 173, 174, 219], "elu": [69, 87, 136, 147], "elumodel": 128, "empti": [59, 65, 224], "empty_lik": 224, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 56, 59, 60, 61, 62, 63, 64, 131, 137, 138, 139, 148, 150, 176, 178, 191, 193, 197, 198, 199, 201, 203, 265], "encapsul": [176, 203], "encod": [153, 156], "encourag": [142, 143, 144, 145, 152, 153, 156, 182], "end": [15, 67, 70, 71, 72, 128, 130, 131, 132, 154, 155, 156, 169, 170, 171, 172, 173, 174, 186, 188, 209, 210, 212, 215, 225, 229, 235, 237, 239, 251, 256, 276], "enforc": [59, 61, 63], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 54, 55, 56, 61, 63, 118, 276], "ensur": [3, 5, 16, 17, 18, 58, 59, 60, 61, 62, 63, 64, 65, 74, 101, 102, 103, 114, 115, 116, 130, 134, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 213, 236, 244, 249, 256, 266, 267, 268, 269, 270, 274, 276], "enter": 193, "entir": [3, 83, 84, 85, 144, 145, 202], "entri": [30, 260], "entropi": [91, 92, 152, 153], "environ": 7, "ep": [91, 92, 97, 99, 100, 114, 115, 116, 152, 153, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 187], "epoch": [1, 3], "epsilon": [152, 153, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 187], "equal": [14, 112, 169, 170, 171, 267, 269], "equat": [11, 16, 18], "equival": [208, 247, 257], "error": [0, 3, 11, 13, 59, 62, 63, 64, 65, 68, 93, 95, 129, 152, 153, 154, 155, 176, 177, 193, 195], "especi": [3, 61, 63, 64, 133, 192, 193, 195, 200, 265, 266, 270, 276], "essenti": [1, 3, 7, 8, 14, 16, 26, 77, 80, 176, 200, 202, 235, 265, 266, 270, 276], "estim": [155, 182, 183, 184, 185, 186, 187], "et": [23, 56], "eta": 188, "eta_": 188, "etc": [152, 266], "euclidean": 15, "european": 56, "evalu": [59, 97, 99, 141, 142, 143, 144, 145, 158, 159, 160, 161, 162, 163, 276], "even": [180, 193, 215, 216, 219, 220, 221, 222, 223], "evenli": [101, 102, 103, 166, 167, 168, 215], "everi": [1, 276], "everywher": 239, "exact": [59, 62, 248, 270, 272], "exactli": 65, "exampl": [4, 208], "excel": 25, "except": [0, 239, 251, 253, 264], "excit": [43, 46, 56, 117], "exclus": [198, 201, 215], "exdb": 5, "execut": [62, 193], "exist": [18, 61, 63, 65, 194, 251], "exit": 193, "exp": [67, 72, 73, 75, 128, 132, 224], "expand": [4, 80, 258, 262], "expect": [9, 62, 65, 141, 142, 143, 144, 145, 164, 176, 195], "expens": 3, "experi": [7, 200, 202, 276], "experiment": 202, "explan": [14, 16, 20, 49, 54, 101, 102, 103, 166, 167, 168, 179], "explicit": 65, "explicitli": [56, 61, 63], "explod": [132, 158, 159, 160], "explor": [176, 202], "expon": [14, 213], "exponenti": [67, 72, 74, 128, 132, 134, 141, 182, 183, 184, 185, 186, 233], "extend": 4, "extens": 178, "extern": [4, 7], "extract": [22, 26, 56, 80, 139, 169, 171, 194, 216, 235, 237, 267, 269], "extractor": [30, 31, 32, 33], "extrem": [16, 35, 56], "ey": 224, "f": [1, 4, 5, 7, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 134], "f_1": 117, "f_2": 117, "facilit": [22, 61, 65, 74, 134, 137, 138, 139, 176, 178, 268, 276], "factor": [24, 67, 76, 77, 78, 80, 117, 126, 127, 179, 186, 187, 188, 189, 195], "failur": [61, 62, 63, 64, 176], "fals": [1, 5, 19, 57, 58, 59, 60, 81, 82, 83, 84, 85, 97, 99, 112, 120, 122, 123, 124, 125, 126, 127, 137, 138, 139, 148, 150, 182, 183, 187, 191, 197, 198, 199, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 236, 237, 244, 249, 250, 266], "famili": 194, "fan": [122, 123, 126, 127], "fan_in": [122, 123], "fan_out": [122, 123], "fast": 186, "faster": [181, 185, 193], "fc": [26, 34, 43, 62, 117, 138, 139, 169, 170, 171, 172, 173, 174], "fc1": [32, 33, 57, 61, 65, 129, 131, 132, 133, 135, 150], "fc2": [32, 33, 57, 61, 65, 129, 131, 132, 133, 135, 150], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 44, 46, 47, 49, 54, 55, 56, 88, 90, 97, 114, 115, 116, 117, 118, 139, 142, 143, 144, 145, 148, 150, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 181], "feature_extractor": 30, "fed": [3, 276], "feed": [3, 203, 276], "feedforward": 57, "fergu": [54, 56], "fetch": 0, "few": 57, "fewer": 1, "field": [5, 56, 118], "file": [3, 194], "fill": [120, 124, 125, 197, 198, 199, 201, 220, 221, 222, 223], "filter": [54, 56, 76, 77, 78, 80, 114, 115, 116, 138, 139], "filter_height": 80, "filter_s": 80, "filter_width": 80, "final": [22, 23, 24, 25, 26, 27, 28, 34, 43, 61, 62, 63, 64, 65, 118, 265, 276], "find": [18, 235, 237], "fine": [117, 276], "finish": 193, "first": [5, 11, 30, 34, 54, 57, 62, 63, 88, 117, 148, 182, 183, 184, 185, 186, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 255, 264, 265, 266, 276], "fit": 176, "fix": [62, 256], "flatten": [26, 30, 65, 80, 212, 254, 257, 258], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 49, 61, 62, 63, 64, 65, 176, 178, 195, 220, 221, 266, 276], "flip": [271, 273, 276], "float": [2, 5, 24, 58, 60, 67, 70, 81, 82, 83, 84, 85, 91, 92, 93, 97, 99, 100, 113, 114, 115, 116, 120, 124, 125, 126, 127, 128, 130, 141, 142, 143, 144, 145, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 201, 203, 215, 218, 229, 250, 268, 270, 271, 272, 273], "float32": [58, 60, 203, 215, 216, 219, 220, 222, 250, 266], "float64": [223, 250, 266], "flow": [25, 26, 34, 43, 56, 65, 127, 129, 133, 135, 137, 138, 139, 148, 150, 191], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 49, 54, 57, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 195, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 235, 237, 255, 259, 267, 268, 269, 270, 271, 272, 273, 276], "form": [17, 118, 212, 255, 258, 262, 276], "format": [2, 3, 5, 57, 153, 156, 266], "formul": 68, "formula": [11, 19, 74, 101, 102, 103, 134, 154, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 208, 249, 270], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 49, 54, 57, 58, 59, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "found": 7, "foundat": [26, 34, 43, 59, 176, 178, 203], "four": 256, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268], "frame": 85, "framework": [4, 7, 56, 153, 156, 158, 159, 160, 161, 162, 163, 177, 178, 276], "frequent": [153, 156], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 88, 97, 99, 112, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 208, 209, 210, 214, 216, 235, 236, 237, 244, 249, 251, 253, 255, 258, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 276], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 43, 49, 54, 56, 90, 117, 118, 150, 202], "func": 194, "function": [3, 4, 5, 7, 8, 34, 59, 61, 62, 63, 64, 65, 114, 115, 116, 117, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 176, 178, 195, 202, 265, 276], "fundament": [7, 90, 150, 266], "further": [7, 202, 236, 244, 249], "futur": 149, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 49, 117, 118, 141, 177, 180, 187, 251, 270], "g_": 181, "g_t": 187, "gain": [126, 127], "gamma": [158, 159, 160, 161, 162, 163, 164], "gap": 117, "gaussian": [68, 129], "gelu": [69, 87, 136, 147], "gelunetwork": 129, "gener": [16, 57, 113, 141, 142, 143, 144, 145, 162, 183, 185, 186, 193, 197, 198, 199, 200, 201, 202, 207, 215, 217, 218, 255, 269, 270, 271, 273, 276], "get": 5, "give": [7, 179, 187], "given": [10, 11, 14, 16, 17, 19, 80, 152, 153, 156, 177, 191, 221, 223, 265, 270, 271, 273, 276], "global": [0, 34, 43, 117, 191, 193, 200, 202], "go": [23, 56], "goal": [152, 153, 156], "googlenet": [23, 56], "gpu": 56, "grad": [58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 88, 90, 112, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 177, 178, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 273, 274], "grad_output": 14, "gradient": [7, 8, 25, 26, 56, 58, 60, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 197, 198, 199, 201, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 266], "grain": 117, "graph": [7, 127, 203, 215, 216, 219, 220, 221, 222, 223, 266], "grayscal": [5, 30, 31, 32, 33, 270, 276], "greater": 229, "green": 270, "grid": 255, "groundbreak": 56, "group": [62, 76, 77, 78, 114, 115, 116, 118, 137, 138, 139, 177, 178], "group1": 62, "group2": 62, "guarante": 200, "h": [77, 78, 80, 84, 85, 102, 103, 105, 106, 109, 110, 112, 113, 115, 116, 117, 159, 160, 162, 163, 167, 168, 171, 174, 267, 269], "h_": [77, 78, 102, 103, 105, 106, 109, 110, 112, 138, 139, 167, 168, 170, 171, 173, 174], "h_out": [77, 78, 105, 106, 109, 110], "h_stack": 253, "ha": [0, 11, 57, 65, 76, 77, 78, 114, 115, 116, 152, 153, 158, 159, 160, 161, 162, 163, 164, 177, 178, 208, 247, 251, 253, 261, 264, 270], "half": 242, "hand": 18, "handl": [0, 3, 7, 16, 59, 61, 62, 63, 64, 65, 153, 156, 176, 178, 193], "handwritten": [5, 33], "hardwar": 7, "hat": [182, 183, 184, 185, 186], "have": [0, 1, 10, 11, 13, 16, 17, 19, 60, 62, 64, 65, 77, 78, 127, 176, 219, 220, 221, 222, 223, 235, 237, 251, 253, 255, 260, 261, 264, 268, 274], "he": 56, "height": [77, 78, 80, 84, 85, 102, 103, 105, 106, 109, 110, 112, 113, 118, 138, 139, 159, 160, 162, 163, 167, 168, 170, 171, 173, 174, 267, 269, 274], "help": [7, 24, 70, 72, 85, 128, 130, 132, 135, 158, 159, 160, 169, 170, 172, 173, 179, 182, 183, 185, 191, 192, 193, 195], "henc": 259, "here": [3, 9, 59, 88, 176, 178, 192, 193, 195, 202, 265, 266, 276], "hidden": [20, 54, 62], "hidden_s": 62, "hierarch": [62, 65, 176], "hierarchi": 138, "hierarchicalnetwork": 62, "high": [7, 42, 48, 198, 201], "higher": [153, 156, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 207, 208, 212, 233], "highest": 198, "highli": 56, "highlight": [117, 172, 173, 174], "hint": 195, "histor": 181, "histori": [197, 198, 199, 201, 215, 216, 217, 218, 219, 220, 221, 222, 223], "hold": [61, 62, 63, 64], "horizont": [253, 261, 271, 276], "hot": [153, 156], "how": [2, 3, 7, 62, 65, 176, 195, 276], "howev": [58, 127], "hstack": 254, "http": 5, "hu": [56, 117], "huber": [93, 154], "huber_loss": [87, 94], "huberloss": [147, 157], "huberregressionmodel": 154, "hue": 276, "hyperbol": [75, 135, 231, 241, 246], "hyperparamet": [177, 179], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "ideal": [7, 65], "ident": [13, 14, 56, 113, 147, 151, 200, 202, 219, 259], "identifi": 63, "idx": [2, 3], "ieee": [56, 117], "ii": 247, "ij": [74, 112, 134, 206, 207, 208, 212, 255], "ik": [206, 207, 208], "ill": [10, 16], "ilsvrc": 56, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 55, 56, 77, 99, 113, 115, 117, 138, 162, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 56, "imbal": [153, 156], "impact": [56, 185], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 34, 43, 54, 56, 59, 80, 118, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 253, 264, 270], "impli": [137, 138], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "improp": [62, 65, 202], "improv": [23, 24, 25, 26, 28, 54, 56, 97, 113, 117, 129, 132, 135, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 269, 272, 276], "imread": 3, "in1_featur": [88, 148], "in2_featur": [88, 148], "in_channel": [34, 62, 65, 114, 115, 116, 117, 118, 137, 138, 139, 159, 160, 169, 170, 171, 172, 173, 174, 176], "in_featur": [61, 62, 65, 90, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 161, 164, 169, 170, 171, 172, 173, 174], "incept": [23, 24, 25, 26, 27, 28, 29, 56], "inception_resnet_v1": 56, "inception_resnet_v2": 56, "inception_v1": 56, "inception_v3": 56, "inception_v4": 56, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 43, 49, 54, 57, 59, 60, 62, 64, 65, 112, 114, 115, 116, 176, 177, 178, 185, 195, 202, 208, 256], "inclus": [60, 63, 198, 201], "incom": [90, 150], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 43, 44, 45, 46, 47, 48, 129], "increas": [76, 77, 78, 80, 113, 181, 188, 192, 253, 264, 270, 271, 273, 276], "independ": [62, 76, 77, 78, 141, 142, 143, 144, 145, 164, 208, 218, 268, 270, 272, 274], "index": [0, 2, 5, 192, 215, 216, 219, 255, 259], "indexerror": 0, "indic": [0, 1, 49, 57, 60, 62, 64, 65, 92, 96, 153, 156, 169, 191, 203, 267, 269], "individu": [3, 62, 65, 154, 164, 178, 181, 188], "induc": [72, 132], "inf": 245, "infer": [62, 65, 193], "infin": [17, 19, 184], "inform": [7, 56, 57, 58, 117, 178, 180, 193], "infti": [15, 186], "inherit": [1, 179, 187, 189], "init": 121, "initi": [1, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 58, 60, 61, 62, 63, 64, 65, 118, 120, 122, 123, 124, 125, 126, 127, 137, 138, 139, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 200, 201, 202, 215, 219, 220, 221, 222, 223, 250], "initial_accumulator_valu": 181, "inner": [7, 206, 224], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 54, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 202, 203, 204, 206, 207, 208, 212, 216, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "input1": 148, "input2": 148, "input_": [20, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 166, 167, 168], "input_1": 88, "input_2": 88, "input_data": [128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174], "input_s": [62, 64, 134, 153, 156], "input_shap": 57, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 49, 58, 61, 62, 63, 64, 65, 74, 117, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 267, 268, 269, 270, 271, 272, 273, 274], "insid": [3, 191, 193], "insight": [7, 56], "inspect": [59, 60, 65, 177], "instabl": [16, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 55, 57, 59, 60, 61, 63, 64, 65, 99, 161, 162, 163, 164, 177, 194, 250, 258, 262, 276], "instance_norm": [87, 98, 161, 162, 163], "instancenorm1d": [147, 165], "instancenorm1dmodel": 161, "instancenorm2d": [147, 165], "instancenorm3d": [147, 165], "instanti": [2, 194], "instead": [7, 57, 61, 62, 63, 64, 65, 122, 123, 126, 127, 182, 183, 184, 193, 195, 217, 218], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 74, 76, 77, 78, 80, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 134, 137, 138, 139, 148, 150, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 183, 184, 185, 186, 188, 194, 197, 198, 199, 200, 201, 203, 215, 216, 217, 219, 220, 222, 229, 235, 236, 237, 244, 248, 249, 250, 251, 256, 258, 259, 260, 261, 262, 263, 267, 269, 274], "integ": [1, 3, 14, 34, 43, 49, 76, 77, 78, 102, 103, 137, 138, 139, 164, 167, 168, 170, 171, 172, 173, 174, 195, 198, 199, 201, 202, 217, 220, 222, 236, 244, 248, 249, 256, 258, 259, 262], "integr": [1, 2, 4, 5, 8, 56, 60, 62, 64, 65, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 148, 150, 169, 170, 171, 172, 173, 174], "intellig": [56, 117], "intend": [58, 63, 64], "intens": [16, 35, 268, 270], "intent": 195, "interact": [88, 148, 176, 202], "interdepend": 56, "interfac": [2, 59, 62, 178], "interfer": [191, 193], "intermedi": [16, 117], "intern": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 153, 156, 176, 267, 268, 269, 270, 271, 272, 273, 274], "interpol": [87, 111, 274], "interpret": [56, 74, 134, 195, 251], "interv": [197, 201, 215], "introduc": [23, 24, 56, 71, 117, 129, 131, 133, 135, 141, 142, 143, 144, 145, 269, 272, 276], "introspect": 65, "intuit": [7, 61, 63, 176, 276], "inv": 12, "inv_a": 13, "invari": [170, 173], "invers": [7, 10, 13, 14, 16, 181, 226, 227, 228], "invert": [10, 13, 14, 18], "invok": 194, "involv": [9, 10, 11, 13, 16, 17, 19, 67, 68, 70, 71, 72, 73, 75, 88, 90, 112, 137, 138, 139, 148, 150, 195, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 233, 234, 235, 237, 240, 242, 255, 256, 258, 262], "is_leaf": 203, "issu": [3, 132, 158, 159, 160, 182, 183], "item": 155, "iter": [0, 1, 2, 3, 58, 59, 62, 64, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 215], "ith": [74, 134], "its": [4, 14, 16, 20, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 56, 57, 58, 61, 62, 63, 64, 76, 77, 78, 80, 113, 118, 127, 129, 131, 172, 173, 174, 176, 177, 180, 188, 191, 192, 193, 194, 215, 217, 218, 222, 235, 237, 250, 259, 268, 271, 273, 276], "itself": [9, 14, 61, 62, 63, 64], "j": [5, 74, 117, 134, 158, 159, 160, 161, 162, 163, 169, 170, 172, 173, 255, 261, 267, 269], "jie": 56, "jk": 207, "join": [3, 251], "json": 194, "k": [14, 76, 137, 153, 159, 160, 162, 163, 169, 172, 173, 206, 207, 216, 219, 251], "k_d": [78, 139, 171, 174], "k_h": [77, 78, 138, 139, 170, 171, 174], "k_w": [77, 78, 138, 139, 170, 171, 174], "kaim": [56, 122, 123, 126, 127], "kaiming_norm": 121, "kaiming_uniform": 121, "karen": 56, "keep": [59, 131, 180, 193, 259], "keep_grad": [60, 197, 198, 199, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 266], "keep_var": 59, "keepdim": [235, 236, 237, 244, 249], "kei": [56, 59, 61, 63, 65, 177], "kept": [236, 244, 249], "kernel": [30, 31, 32, 33, 54, 76, 77, 78, 80, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 137, 138, 139, 166, 167, 168, 170, 171, 174], "kernel_s": [62, 65, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 137, 138, 139, 159, 160, 169, 170, 171, 172, 173, 174], "keyerror": 59, "keyword": [21, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 149], "kj": [206, 208], "known": 56, "krizhevski": 56, "kroneck": [74, 134], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 149, 194], "l": [9, 16, 76, 83, 101, 104, 108, 114, 117, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166], "l2": [179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "l_": [76, 101, 104, 108, 137, 166, 169, 172], "l_out": [76, 104, 108], "label": [4, 5, 24, 152, 153, 156], "lambd": 179, "lambda": [11, 72, 132, 179, 183], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 137, 148, 169, 172], "larg": [0, 3, 16, 35, 36, 37, 40, 44, 45, 56, 154, 176, 179, 182, 183, 184, 187, 188, 189, 193], "larger": [61, 63, 76, 77, 78, 80, 179, 209, 256, 267, 269, 274], "largest": 235, "last": [1, 74, 100, 134, 207, 208, 251, 271, 273], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 65, 74, 90, 97, 99, 100, 114, 115, 116, 117, 118, 122, 123, 126, 127, 134, 137, 138, 139, 148, 149, 150, 156, 164, 169, 170, 171, 172, 173, 174, 176, 202, 256, 266], "layer1": [34, 194], "layer2": [34, 194], "layer3": 34, "layer4": 34, "layer_group": 62, "layer_norm": [87, 98, 164], "layer_sequ": [62, 65], "layernorm": [147, 165], "layernormmodel": 164, "lead": [62, 65, 129, 161, 162, 163, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 202], "leaf": 203, "leaki": [70, 130], "leaky_relu": [69, 87, 130], "leakyrelu": [136, 147], "learn": [1, 3, 4, 5, 7, 14, 16, 54, 55, 56, 61, 62, 63, 64, 71, 74, 117, 128, 130, 131, 134, 137, 138, 139, 142, 143, 144, 145, 148, 150, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 200, 265, 266, 276], "learnabl": [58, 59, 60, 97, 99, 100, 114, 115, 116, 137, 138, 139, 148, 150, 158, 159, 160, 161, 162, 163, 164, 176], "least": [16, 17, 19, 247], "lecun": [5, 56], "left": [14, 15, 16, 19, 68, 74, 129, 134, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 267, 269], "leftarrow": 185, "len": [0, 1, 2, 3, 255], "lenet": [29, 31, 32, 33, 56], "lenet_1": 56, "lenet_4": 56, "lenet_5": 56, "length": [62, 76, 83, 101, 104, 108, 137, 149, 158, 161, 166, 169, 172, 256, 268], "leq": [154, 186, 213, 229], "lerp": 112, "less": [0, 67, 70, 93, 128, 130, 153, 154, 156, 229], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 56, 118, 176], "librari": [3, 7, 8, 59, 176, 177, 178, 194, 195, 202, 203, 276], "lightweight": [7, 38, 46, 118], "like": [7, 26, 56, 58, 59, 62, 65, 76, 126, 127, 132, 141, 158, 159, 160, 161, 162, 163, 191, 192, 195, 250, 266, 276], "likelihood": [96, 153, 156], "limit": [57, 180, 229], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 34, 43, 57, 61, 62, 63, 65, 67, 68, 70, 71, 72, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 148, 149, 152, 153, 154, 155, 156, 158, 161, 164, 169, 170, 171, 172, 173, 174, 194, 219], "linearli": 154, "list": [0, 1, 30, 34, 43, 49, 57, 58, 60, 61, 62, 63, 64, 100, 118, 149, 164, 177, 195, 197, 198, 199, 201, 203, 216, 217, 218, 220, 221, 222, 223, 248, 259, 260, 263, 265], "listdir": 3, "liter": [34, 91, 92, 93, 95, 96, 112, 114, 115, 116, 118, 122, 123, 137, 138, 139, 152, 153, 154, 155, 156, 255], "ln": 213, "load": [3, 4, 5, 58, 59, 60, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194], "load_state_dict": [59, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "loader": [1, 2, 3], "local": [56, 80, 137], "locat": 112, "log": [96, 152, 153, 156, 224], "log_softmax": 156, "logarithm": [213, 233, 234], "logic": [3, 166, 167, 168, 176, 177], "logit": [20, 54, 74, 134, 153], "logsoftmax": [153, 156], "long": [185, 248], "loop": [1, 62, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "loss": [7, 16, 61, 62, 63, 64, 65, 74, 91, 92, 93, 95, 96, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 149, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "low": [7, 26, 198, 201], "lower": [9, 125, 179, 187, 188, 189, 201], "lowest": 198, "lr": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 224, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "m": [49, 61, 62, 65, 170, 171, 173, 174, 182, 183, 184, 185, 186, 219], "m_": [182, 183, 184, 185, 186], "m_t": [185, 186], "machin": [3, 5, 7, 16, 117, 182, 192, 200], "magnitud": [187, 188, 276], "mai": [3, 7, 11, 13, 16, 62, 64, 113, 154, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 202, 270, 276], "main": [7, 17, 26, 62, 216, 219], "maintain": [16, 58, 59, 61, 62, 63, 65, 72, 122, 123, 126, 127, 128, 129, 132, 141, 142, 143, 144, 145, 158, 159, 160, 161, 162, 163, 182, 187, 267, 270, 274], "make": [1, 3, 7, 22, 26, 30, 56, 62, 65, 133, 153, 154, 164, 170, 173, 176, 181, 182, 183, 184, 192, 194, 202, 203, 208, 255, 265, 276], "manag": [7, 59, 61, 62, 63, 64, 65, 176, 178, 191, 193, 194, 202], "manhattan": 15, "mani": 57, "manipul": [7, 61, 63, 276], "manner": [62, 65], "manual": [91, 92, 96, 152, 153, 156, 193], "map": [46, 56, 59, 73, 75, 117, 133, 135], "mask": [58, 141, 142, 143, 144, 145], "match": [18, 59, 62, 65, 91, 93, 95, 100, 114, 115, 116, 177, 233, 258, 259, 262, 263, 268, 276], "math": [230, 240, 245], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 206, 207, 208, 212, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274], "mathcal": [122, 124, 126, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164], "mathemat": [13, 114, 115, 116, 269, 271, 272, 273], "mathrm": 16, "matmul": 224, "matric": [8, 10, 11, 13, 16, 18, 19, 206, 207, 208, 219, 255], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 80, 88, 149, 150, 176, 206, 255], "matrix_pow": 12, "matthew": 56, "max": [15, 34, 43, 49, 71, 108, 109, 110, 131, 172, 173, 174, 184, 209, 224, 229], "max_pool": [172, 173, 174], "max_pool1d": [87, 107], "max_pool2d": [87, 107], "max_pool3d": [87, 107], "max_valu": 229, "maxim": 3, "maximum": [15, 131, 172, 173, 174, 182, 184, 224, 229, 235, 272], "maxpool": [20, 34, 54], "maxpool1d": [147, 175], "maxpool1dmodel": 172, "maxpool2d": [34, 62, 65, 138, 147, 175], "maxpool2dmodel": 173, "maxpool3d": [139, 147, 175], "maxpool3dmodel": 174, "mean": [5, 17, 57, 58, 72, 76, 77, 78, 81, 91, 92, 93, 95, 96, 97, 99, 114, 115, 116, 124, 128, 129, 130, 131, 132, 133, 135, 139, 141, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186, 187, 191, 199, 224, 229, 233, 234, 235, 237, 240, 242, 244, 247, 248, 249, 265, 268, 276], "meaning": [65, 195], "measur": [152, 153, 155, 156], "mechan": [7, 43, 64, 88], "membership": 152, "memori": [2, 3, 193, 217, 218], "meshgrid": 254, "method": [3, 7, 8, 13, 34, 43, 61, 62, 63, 64, 65, 91, 92, 93, 95, 96, 122, 123, 126, 127, 152, 153, 154, 155, 156, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 202], "middl": 192, "might": 176, "min": [210, 224, 229], "min_valu": 229, "mind": [0, 3, 7, 62, 65, 193], "mini": 1, "minim": [4, 7, 65, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 178], "minimalist": 7, "minimum": [224, 229, 237], "minu": 133, "mirror": [221, 223], "mismatch": [59, 176, 177], "miss": [59, 176], "mitig": [70, 128, 130, 132, 158, 159, 160], "mlp": 118, "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 85, 97, 99, 112, 122, 123, 141, 142, 143, 144, 145, 256], "model": [1, 3, 4, 7, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 74, 113, 114, 115, 116, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 202, 265, 266, 276], "moder": 47, "modern": 56, "modif": [65, 193], "modifi": [21, 55, 61, 62, 63, 64, 120, 122, 123, 124, 125, 126, 127, 141, 191, 193, 200, 253, 264], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 43, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 202, 266, 276], "modular": [3, 7, 56, 59, 62, 65, 176, 276], "moduledict": [62, 63, 65, 66], "modulelist": [64, 65, 66], "moment": [182, 183, 184, 185, 186], "momentum": [97, 99, 114, 115, 116, 158, 159, 160, 161, 162, 163, 179, 185, 187, 189], "momentum_decai": 185, "moor": 16, "more": [3, 4, 7, 11, 41, 61, 62, 65, 128, 142, 143, 144, 145, 176, 177, 178, 179, 180, 183, 184, 187, 188, 189, 199, 208, 247, 261, 276], "most": [8, 173, 266, 267, 276], "move": [179, 187], "mse": [93, 95, 154, 155], "mse_loss": [87, 94], "mseloss": [147, 157], "mu": [124, 158, 159, 160, 161, 162, 163, 164, 249], "mu_c": 268, "mu_i": [161, 162, 163], "much": 276, "mul": 224, "multi": [3, 4, 27, 56, 74, 92, 96, 118, 134, 153, 156, 236, 244, 249], "multidimension": [197, 201, 217], "multipl": [1, 3, 7, 8, 14, 18, 20, 34, 43, 63, 64, 65, 80, 112, 113, 117, 118, 141, 142, 143, 144, 145, 153, 156, 176, 192, 197, 198, 199, 201, 206, 211, 217, 218, 265, 270, 276], "multipli": [14, 64, 90, 150, 188, 211, 212], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 57, 59, 61, 62, 63, 64, 65, 100, 141, 142, 143, 144, 145, 156, 177, 193, 247, 251, 253, 256, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 273], "my_simple_model": 194, "mymodel": [59, 60, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "myoptim": [177, 178], "n": [14, 15, 56, 61, 62, 65, 76, 77, 78, 80, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 122, 124, 126, 137, 138, 139, 144, 145, 148, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 219, 236, 247, 249], "n1": 15, "nabla_": [180, 181, 182, 183, 184, 185, 186, 188], "nabla_t": 186, "nadam": 190, "name": [56, 57, 59, 61, 63, 65, 194, 195], "nan": [17, 19], "natur": [16, 56, 137, 148, 169, 172, 213, 233, 234], "ndarrai": [58, 60, 195, 203, 216, 218, 221, 223, 250], "ndim": [17, 19, 60, 203], "ne": 14, "nearest": 112, "necessari": [4, 5, 16, 193, 253, 264], "need": [2, 4, 62, 63, 64, 74, 148, 176, 193, 217, 218, 265, 266, 276], "neg": [14, 16, 19, 67, 96, 113, 128, 130, 131, 132, 153, 156, 188, 251], "negative_slop": [70, 130], "neglect": 64, "neighbor": 112, "neq": 15, "nest": [57, 62, 65, 176], "nestedmodel": 57, "nesterov": 185, "net": [54, 56], "network": [3, 4, 7, 20, 21, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 97, 113, 117, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 189, 201, 202, 203, 215, 220, 222, 235, 237, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "neural": [3, 4, 7, 20, 21, 26, 33, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 97, 113, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 189, 201, 202, 203, 215, 220, 222, 235, 237, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "neuralnetwork": 131, "neuron": 130, "never": 270, "new": [59, 60, 67, 68, 70, 71, 72, 73, 75, 88, 90, 112, 118, 122, 123, 124, 125, 126, 127, 177, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 253, 256, 258, 259, 261, 262, 263, 264], "next": [65, 265], "nll": 96, "nll_loss": [87, 94], "nllloss": [147, 157], "nn": [5, 7, 20, 22, 26, 30, 43, 49, 54, 57, 66, 69, 79, 86, 89, 94, 98, 107, 111, 119, 121, 136, 140, 146, 147, 151, 157, 165, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 266, 276], "no_grad": 191, "node": 203, "nois": [19, 202], "non": [11, 14, 16, 19, 64, 68, 70, 71, 122, 123, 128, 129, 130, 131, 132, 133, 135, 141, 142, 143, 144, 145, 182, 183, 193, 213, 229], "none": [0, 1, 2, 5, 22, 26, 30, 34, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 113, 114, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274], "norm": [8, 12, 184], "normal": [5, 34, 43, 68, 72, 74, 75, 97, 99, 100, 114, 115, 116, 121, 122, 126, 129, 132, 134, 141, 158, 159, 160, 161, 162, 163, 164, 187, 199, 202, 265, 275, 276], "normalized_shap": [100, 164], "note": [76, 141], "noth": [81, 82, 83, 84], "notimplementederror": [2, 59, 177], "notin": 229, "nov": 56, "novel": 56, "np": [58, 60, 117, 153, 156, 195, 203, 208, 215, 216, 219, 220, 222, 223, 234, 250, 266], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 134, 153, 156], "num_featur": [65, 114, 115, 116, 158, 159, 160, 161, 162, 163], "num_paramet": 64, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 64, 65, 76, 77, 78, 80, 83, 84, 85, 88, 90, 92, 96, 97, 99, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 122, 123, 126, 127, 133, 137, 138, 139, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 179, 197, 200, 201, 203, 213, 215, 217, 219, 235, 236, 237, 248, 249, 251, 253, 256, 258, 259, 260, 262, 264, 268, 270, 271, 273, 276], "numer": [13, 16, 91, 92, 97, 99, 100, 114, 115, 116, 152, 153, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 184, 185, 186, 187, 195, 205, 215, 220, 222], "numpi": [7, 58, 60, 153, 156, 195, 203, 208, 216, 219, 234, 247, 250, 256, 258, 262, 266, 276], "o": [3, 171, 174, 220, 221], "object": [1, 3, 8, 56, 59, 63, 64, 155, 176, 193, 204, 205, 209, 210, 211, 214, 250], "observ": 182, "obtain": 1, "occur": [113, 193, 194, 251], "occurr": 14, "odot": [141, 142, 143, 144, 145], "off": 191, "offer": [4, 7, 176, 178, 202, 276], "offset": 219, "often": [14, 76, 77, 78, 80, 153, 156, 215, 222, 266, 270, 274, 276], "older": 185, "onc": 193, "one": [0, 64, 65, 74, 76, 90, 104, 108, 114, 115, 116, 132, 133, 134, 137, 143, 153, 156, 158, 161, 169, 172, 177, 192, 195, 199, 214, 221, 235, 237, 252, 257, 261, 266], "ones": [88, 90, 137, 138, 139, 150, 158, 159, 160, 161, 162, 163, 164, 176, 219, 221, 224], "ones_lik": 224, "onli": [7, 57, 112, 131, 141, 142, 143, 144, 145, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 188, 191, 215, 229, 235, 237, 247, 256, 257, 259, 260], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 34, 43, 44, 45, 46, 47, 48, 58, 59, 62, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 85, 88, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 233, 234, 235, 236, 237, 240, 242, 244, 247, 249, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 274], "operatornam": [14, 16], "opposit": 179, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 58, 60, 63, 64, 80, 137, 138, 139, 176, 193], "optimizer_st": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 74, 77, 78, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 130, 134, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 177, 179, 187, 189, 197, 198, 199, 201, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 236, 237, 244, 248, 249, 250, 251, 255, 258, 260, 261, 266, 270, 271, 273], "ord": 15, "order": [1, 3, 15, 19, 61, 62, 63, 64, 65, 248, 265], "ordered_dict": 65, "ordereddict": [59, 61, 62, 65], "organ": [61, 62, 63, 65, 194], "orient": 276, "origin": [24, 33, 81, 113, 117, 135, 256, 257, 258, 259, 262, 263, 274], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [179, 187, 189], "other": [2, 3, 7, 13, 24, 28, 30, 33, 58, 59, 62, 65, 122, 123, 141, 176, 177, 191, 193, 202, 203, 215, 217, 220, 222, 247, 255, 276], "otherwis": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 67, 70, 71, 72, 74, 128, 130, 131, 132, 134, 142, 143, 144, 145, 154, 169, 170, 171, 172, 173, 174, 177, 188, 194, 209, 210, 235, 237], "otim": [16, 88, 148], "out": [0, 3, 4, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 122, 123, 126, 127, 137, 138, 139, 141, 142, 143, 144, 145, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264], "out_channel": [30, 62, 65, 114, 115, 116, 118, 137, 138, 139, 159, 160, 169, 170, 171, 172, 173, 174, 176], "out_featur": [61, 62, 65, 88, 90, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 161, 164, 169, 170, 171, 172, 173, 174], "outcom": [270, 271, 273], "outer": 224, "outlier": [93, 154], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 90, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 223, 233, 234, 235, 236, 237, 240, 242, 244, 247, 248, 249, 255, 256, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "output_height": 80, "output_lay": [62, 65], "output_s": [62, 101, 102, 103, 166, 167, 168], "output_width": 80, "outsid": 0, "over": [0, 1, 2, 3, 8, 54, 59, 62, 64, 74, 101, 102, 103, 117, 134, 137, 138, 139, 153, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 197, 201, 235, 236, 237, 244, 247, 249, 270, 271, 273], "overdetermin": 16, "overfit": [1, 20, 54, 82, 85, 142, 143, 144, 145, 179, 182, 187, 189], "overhead": 117, "overrid": [2, 3], "overridden": [59, 177], "overwrit": [61, 63], "own": [4, 61, 62, 63, 64, 76, 77, 78, 127, 176, 268], "p": [15, 16, 60, 63, 64, 81, 82, 83, 84, 85, 141, 142, 143, 144, 145, 169, 172, 173, 270, 271, 273, 276], "p_d": [171, 174], "p_h": [170, 171, 174], "p_w": [170, 171, 174], "packag": [2, 3, 4, 8, 56, 176, 178, 194, 200, 202, 266, 276], "pad": [30, 62, 65, 76, 77, 78, 80, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 137, 138, 139, 159, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 254], "pad_after_dim1": 256, "pad_after_dim2": 256, "pad_before_dim1": 256, "pad_before_dim2": 256, "pad_width": 256, "padding_height": 80, "padding_width": 80, "pair": 88, "paper": 23, "parallel": [1, 3, 56], "param": [59, 60, 63, 64, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "param1": 59, "param_dict": 63, "param_group": [177, 178], "param_groups_setup": 177, "param_list": 64, "param_s": 194, "paramet": [0, 2, 7, 31, 32, 33, 56, 59, 176, 177, 178, 195, 202, 276], "parameterdict": 66, "parameterlist": 66, "parent": 176, "part": [58, 59, 127, 176, 191, 193, 202, 215, 216, 219, 220, 221, 222, 223, 266, 276], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "particip": [60, 266], "particular": [61, 63], "particularli": [7, 16, 62, 63, 64, 65, 74, 90, 114, 115, 116, 134, 150, 153, 156, 161, 162, 163, 164, 183, 191, 194, 265], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 112, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 176, 195, 203, 236, 244, 247, 248, 249, 251, 253, 257, 259, 260, 264, 266, 276], "past": [179, 180, 182, 187], "patch": [80, 170], "path": [3, 5], "pattern": [56, 71, 117, 131, 137, 138, 139], "penal": [179, 187, 189], "penalti": [180, 181, 182, 183, 184, 185, 186], "penros": 16, "per": [1, 101, 161, 162, 163, 164, 166], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 42, 49, 54, 56, 59, 60, 64, 68, 76, 77, 78, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 191, 193, 200, 202, 204, 205, 208, 211, 214, 233, 235, 237, 244, 248, 265, 267, 269, 274, 276], "permut": 248, "persist": [58, 197, 198, 199, 201, 217, 218], "perturb": [11, 18, 19, 276], "phi": [68, 129], "pi": [68, 129, 230, 240, 245], "pil": [266, 276], "pinv": 12, "pioneer": 56, "pipelin": [5, 202, 265, 266, 268], "pixel": [5, 112, 268, 270], "place": [120, 122, 123, 124, 125, 126, 127], "placehold": [59, 149], "plai": [195, 202], "plot": 255, "point": [4, 113, 191], "pool": [20, 30, 31, 32, 33, 34, 43, 49, 54, 56, 101, 102, 103, 104, 105, 106, 108, 109, 110, 117, 118, 138, 139, 166, 167, 168, 169, 170, 171, 172, 173, 174, 235, 237], "pool1": 65, "pool2": 65, "poorli": 13, "popul": 59, "popular": [4, 56], "portion": 276, "pose": 16, "posit": [1, 9, 14, 59, 65, 113, 128, 130, 131, 132, 169, 170, 171, 172, 173, 174, 188, 192, 213, 258, 262, 269], "possibl": [7, 276], "potenti": [16, 149, 187, 260], "power": [7, 14, 56, 117, 192, 193, 224, 265, 266, 276], "pp": 56, "practic": [16, 153, 156], "practition": 276, "pre": [35, 39, 40], "preactbottleneck": [35, 39, 40], "preced": [60, 203], "preconfigur": [27, 28], "predefin": [4, 56, 62, 132], "predict": [152, 153, 155, 156], "prefix": [59, 194], "prepar": [3, 192, 256, 258, 262, 266, 276], "prepend": 59, "preprint": 56, "preprocess": [3, 4, 80, 113, 202, 265, 266, 276], "present": [152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 170], "preserv": [81, 113, 141, 215, 216, 219, 220, 221, 222, 223, 236, 244, 249], "preset": 4, "prevent": [1, 61, 62, 63, 64, 65, 82, 85, 142, 143, 144, 145, 152, 153, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193], "previou": [179, 188, 193], "previous": 182, "primari": [7, 195], "primarili": 65, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274], "priorit": 118, "probabilist": 202, "probabl": [24, 68, 74, 81, 82, 83, 84, 85, 91, 129, 134, 141, 142, 143, 144, 145, 152, 153, 156, 270, 271, 273, 276], "problem": [16, 17, 19, 56, 70, 128, 130, 186], "proceed": 56, "process": [2, 3, 4, 14, 17, 19, 20, 27, 54, 56, 64, 76, 77, 78, 99, 113, 114, 115, 116, 117, 118, 132, 135, 137, 139, 148, 158, 159, 160, 161, 162, 163, 164, 169, 171, 172, 174, 179, 195, 255, 266, 267, 268, 269, 274, 276], "produc": [20, 54, 57, 101, 102, 103, 117, 137, 138, 139, 166, 167, 168, 200, 202], "product": [7, 17, 19, 133, 148, 164, 176, 206, 207, 211, 212], "program": [191, 202], "progress": 181, "project": [17, 19], "projector": 16, "promin": [169, 171, 172, 173, 174], "promot": [65, 153, 156, 176], "propag": [10, 11, 13, 16, 17, 18, 19, 59, 65, 88, 90, 112, 117, 170, 171, 187, 188, 206, 207, 208, 212, 235, 237, 255, 256, 259, 263], "properli": [0, 64, 74, 134, 176], "properti": [8, 10, 13, 14, 68, 72, 81, 129, 132, 141, 181, 186], "proport": [5, 249], "proportion": 274, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 49, 55, 56, 59, 61, 62, 63, 64, 68, 90, 102, 103, 113, 152, 153, 154, 156, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 187, 189, 191, 193, 195, 200, 202, 203, 208, 215, 221, 235, 237, 248, 250, 258, 260, 262, 276], "pseudo": [13, 16], "purpos": [197, 201, 215, 220, 222], "python": 195, "pytorch": 250, "q": 17, "qr": 12, "quad": [16, 152, 153, 154, 155, 156, 172, 173, 174, 204, 205, 209, 210, 211, 214, 267], "quadrat": 154, "quotient": 205, "r": [17, 270, 271, 272, 273], "r_t": 186, "radam": 190, "rais": [0, 1, 2, 59, 176, 177, 213], "rand": [196, 202], "randint": [196, 202], "randn": [20, 49, 54, 117, 118, 176, 196, 200, 202], "random": [1, 2, 3, 117, 118, 269, 270, 271, 272, 273, 276], "random_integ": 202, "random_tensor": 202, "randomcrop": [275, 276], "randomgrayscal": [275, 276], "randomhorizontalflip": [275, 276], "randomli": [1, 81, 82, 83, 84, 85, 113, 141, 142, 143, 144, 145, 269, 270, 271, 272, 273, 276], "randomnoisedataset": [0, 1, 2], "randomrot": [275, 276], "randomverticalflip": 275, "rang": [0, 1, 8, 42, 56, 64, 73, 75, 76, 77, 92, 96, 127, 133, 135, 179, 187, 189, 198, 226, 227, 229, 268, 272, 276], "rank": 16, "rate": [177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "rather": [63, 64, 183, 259], "ratio": [43, 117, 118, 274], "ravel": 254, "raw": [74, 134, 153, 195], "re": [60, 193], "readabl": [61, 62, 63, 65, 176, 195], "readi": [3, 7, 56], "real": [16, 19, 133], "rearrang": 80, "recalibr": [44, 46, 47, 56, 117], "receiv": [172, 173, 174, 256], "recent": 187, "recept": [56, 118], "reciproc": [16, 224, 234, 242], "recognit": [33, 56, 138], "rectangular": 219, "rectif": 186, "rectifi": [70, 71, 130, 131, 186], "recurr": [62, 164], "recurs": [57, 59], "red": 270, "reduc": [20, 49, 54, 56, 117, 158, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 185, 188, 193, 195, 235, 236, 237, 244, 249, 270], "reduct": [19, 43, 91, 92, 93, 95, 96, 117, 118, 152, 153, 154, 155, 156, 235, 237], "reevalu": 177, "refer": [4, 7, 59, 202, 216, 219, 251], "reflect": 191, "regardless": [16, 257], "region": [78, 101, 102, 103, 112, 167, 168, 256, 267, 276], "regist": [58, 59, 60, 64, 176, 194], "register_buff": 58, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55], "register_paramet": 59, "registr": [59, 176], "registri": 194, "registry_path": 194, "regress": [4, 95, 154, 155], "regular": [16, 20, 24, 54, 85, 142, 143, 144, 145, 179, 180, 181, 184, 185, 186, 187, 189], "relat": [193, 219, 220], "relationship": 274, "relev": [112, 179, 187, 189], "reli": 193, "reliabl": 5, "reliant": [142, 143, 144, 145], "relu": [7, 20, 34, 43, 49, 54, 56, 57, 61, 62, 63, 65, 67, 69, 70, 87, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 130, 136, 137, 138, 139, 147, 148, 149, 150], "relu1": 65, "relu2": 65, "relu3": 65, "remain": [5, 58, 100, 141, 142, 143, 144, 145, 188], "rememb": 202, "remov": [194, 260], "rep": 262, "repeat": [254, 255, 262], "repetit": [258, 262], "replac": [202, 270], "repres": [13, 15, 19, 30, 59, 60, 65, 88, 90, 97, 99, 100, 137, 138, 139, 148, 150, 153, 156, 164, 177, 178, 179, 185, 186, 187, 188, 189, 195, 204, 205, 211, 214, 216, 236, 247, 248, 249, 255, 267, 269, 271, 272, 273, 274], "represent": [56, 117, 170, 173, 177], "reproduc": [197, 198, 199, 200, 201, 202, 276], "requir": [2, 3, 4, 7, 58, 61, 65, 67, 68, 70, 71, 72, 73, 75, 88, 90, 112, 117, 118, 127, 149, 153, 156, 176, 191, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 274], "requires_grad": [58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 88, 90, 112, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266], "rescal": [91, 92, 96, 152, 153, 156], "research": 176, "reset": [60, 200, 203], "reshap": [7, 34, 43, 90, 138, 139, 192, 195, 254, 257], "residu": [25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 56], "resili": 188, "resiz": [112, 265, 275, 276], "resnet": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 56, 117], "resnet_1001": 56, "resnet_101": 56, "resnet_152": 56, "resnet_18": 56, "resnet_200": 56, "resnet_269": 56, "resnet_34": 56, "resnet_50": 56, "resourc": 193, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 49, 58, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 233, 234, 235, 236, 237, 240, 242, 244, 247, 248, 249, 255, 256, 258, 262, 270], "respons": [56, 61, 178], "restor": [117, 193], "restructur": 259, "result": [9, 13, 14, 16, 56, 59, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 88, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 134, 176, 177, 191, 193, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 276], "resum": 178, "retain": [60, 203, 215, 222, 235, 236, 237, 244, 249, 266], "retent": 266, "retriev": [0, 2, 61, 63, 64], "return": [0, 1, 2, 3, 5, 7, 26, 30, 34, 43, 58, 59, 61, 62, 63, 64, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 265, 276], "reus": 266, "reusabl": [65, 176, 265], "revers": [7, 65, 248, 271, 273], "revert": 193, "revolution": 56, "rgb": [23, 24, 25, 27, 28], "rho": 180, "rho_": 186, "rho_t": 186, "right": [14, 15, 16, 18, 19, 68, 74, 129, 134, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 267], "risk": 195, "rmsprop": 190, "rob": 56, "robust": [113, 141, 142, 143, 144, 145, 154, 176, 180, 269, 270, 272, 276], "role": [195, 202, 276], "root": [4, 5, 181, 187, 242], "rotat": [87, 111, 272, 276], "rotated_imag": 113, "rout": [172, 173, 174], "routin": 7, "row": [10, 11, 13, 18, 90, 219, 255, 264], "rprop": 190, "rule": [13, 14, 192, 204, 205, 209, 210, 211, 213, 214], "run": [7, 58, 97, 99, 114, 115, 116, 158, 159, 160, 161, 162, 163, 180, 193, 200, 202], "running_mean": [58, 97, 99, 158, 159, 160, 161, 162, 163], "running_var": [97, 99, 158, 159, 160, 161, 162, 163], "runtim": [62, 65, 176], "s_": 188, "s_d": [171, 174], "s_h": [170, 171, 174], "s_w": [170, 171, 174], "same": [10, 11, 13, 14, 18, 74, 81, 82, 83, 84, 85, 97, 99, 100, 102, 103, 113, 114, 115, 116, 118, 137, 138, 139, 141, 142, 143, 144, 145, 149, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 188, 200, 202, 208, 218, 221, 223, 233, 235, 236, 237, 251, 253, 257, 259, 260, 261, 264, 268], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 101, 102, 103, 122, 123, 124, 125, 126, 127, 141, 142, 143, 144, 145, 148, 150, 153, 156, 164, 166, 167, 168, 199, 202, 267, 269, 271, 272, 273, 274], "satisfi": [9, 11, 18], "satur": [128, 276], "save": [2, 58, 60, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194], "scalabl": [3, 56, 176], "scalar": [10, 15, 91, 92, 93, 95, 96, 195], "scale": [11, 16, 27, 31, 32, 33, 35, 36, 37, 40, 44, 45, 56, 67, 72, 74, 97, 99, 100, 117, 118, 126, 127, 128, 130, 132, 133, 134, 135, 141, 142, 143, 144, 145, 153, 158, 159, 160, 161, 162, 163, 164, 179, 181, 182, 183, 195, 202, 249, 274], "scenario": [63, 64, 164, 183, 184, 266, 270], "schedul": 179, "scientif": 192, "score": [74, 153], "scratch": 7, "script": 202, "se": [44, 45, 46, 47, 48, 56], "se_resnet_101": 56, "se_resnet_152": 56, "se_resnet_18": 56, "se_resnet_34": 56, "se_resnet_50": 56, "seamless": [0, 1, 3, 4, 176, 202], "seamlessli": [3, 4, 8, 60, 62, 65, 176, 195, 276], "second": [11, 62, 63, 88, 117, 148, 182, 183, 184, 185, 186, 192, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 253, 255, 273], "section": 208, "see": [7, 208], "seed": [196, 197, 198, 199, 201, 202, 276], "seen": 180, "select": [112, 117, 118, 172, 174, 244], "selectivekernel": 119, "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 34, 43, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 72, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 255, 265, 266], "selu": [69, 81, 87, 136, 141, 147], "selunetwork": 132, "semodul": 119, "senet": [29, 44, 45, 46, 47, 48, 56], "sensit": [93, 154, 158, 159, 160], "sentiment": 4, "separ": [0, 76, 77, 78, 161, 162, 163], "sequenc": [14, 61, 63, 76, 215, 251, 253, 256, 258, 261, 262, 264, 265], "sequenti": [20, 26, 30, 34, 43, 49, 54, 57, 61, 62, 66, 76, 114, 115, 116, 149, 265, 276], "seri": [22, 31, 32, 76, 114, 137, 169, 172], "serial": [58, 59, 178], "serv": [3, 26, 34, 43, 49, 59, 61, 62, 63, 64, 65, 176, 188, 266], "set": [3, 4, 5, 57, 60, 64, 76, 77, 78, 130, 131, 132, 137, 138, 139, 141, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 177, 182, 183, 187, 197, 198, 199, 200, 201, 202, 203, 215, 217, 218, 222, 223, 229, 235, 237, 250, 266, 270, 276], "setup": [4, 7], "sever": [16, 137, 138, 139, 169, 170, 171, 172, 173, 174, 193, 265, 276], "sgd": [7, 179, 186, 190], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 43, 49, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 192, 195, 197, 198, 199, 201, 202, 203, 206, 217, 218, 219, 220, 221, 222, 223, 229, 234, 235, 236, 237, 240, 242, 244, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276], "shapelik": 198, "share": 56, "shen": 117, "shift": [97, 99, 100, 158, 159, 160, 161, 162, 163, 164], "shorthand": 208, "should": [30, 58, 193, 197, 198, 199, 201, 217, 218, 226, 227, 247, 256, 265], "show": [191, 194], "showcas": 7, "shown": 200, "shrink": 180, "shuffl": [1, 2, 3], "side": [18, 62, 65, 76, 77, 78, 104, 105, 106, 108, 109, 110, 114, 115, 116, 137, 138, 139, 169, 170, 171, 172, 173, 174, 193], "sigma": [16, 117, 122, 124, 126, 133, 158, 159, 160, 161, 162, 163, 164, 248], "sigma_c": 268, "sigma_i": 16, "sigmoid": [69, 87, 117, 122, 123, 126, 127, 136, 147, 152], "sigmoidnetwork": 133, "sign": [14, 154, 188, 224], "signal": [114, 137, 138, 139, 158, 161, 169, 170, 171, 172, 173, 174], "signific": 193, "significantli": [56, 117, 265], "sim": [141, 142, 143, 144, 145], "similar": [7, 122, 123, 208, 234, 250, 256], "similarli": [19, 247], "simonyan": 56, "simpl": [3, 4, 7, 57, 65, 76, 77, 78, 88, 90, 104, 105, 106, 108, 109, 110, 129, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 206, 207, 212, 265], "simplebinaryclassificationmodel": 152, "simpleclassificationmodel": [153, 156], "simplegelumodel": 129, "simpleleakyrelumodel": 130, "simplemodel": [7, 57, 150, 194], "simpleregressionmodel": 155, "simplerelumodel": 131, "simpleselumodel": 132, "simplesigmoidmodel": 133, "simpletanhmodel": 135, "simpli": [191, 247, 248, 259], "simplic": [56, 131], "simplifi": [4, 31, 65, 114, 115, 116], "simul": [57, 276], "simultan": 113, "sin": [224, 230], "sinc": [14, 17, 61, 62, 63, 64, 76, 77, 78, 127, 191, 193, 199, 255, 276], "sine": [227, 240, 241], "singl": [0, 4, 14, 17, 19, 74, 114, 115, 116, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 153, 164, 170, 171, 172, 173, 174, 177, 195, 201, 217, 251, 260, 268, 270, 276], "singleton": 164, "singular": [10, 13, 14, 16, 18, 19], "sinh": [224, 231, 246], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 54, 57, 60, 62, 76, 77, 78, 80, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 137, 138, 139, 148, 150, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 198, 201, 202, 203, 235, 236, 237, 244, 249, 251, 253, 260, 263, 264, 267, 269, 274, 276], "sk": 118, "skip": [56, 193], "slice": [88, 247], "slide": [80, 169, 171, 172, 174], "slight": 117, "slightli": 276, "slope": [70, 128, 130], "slow": [3, 186], "small": [16, 31, 32, 33, 56, 70, 91, 92, 97, 99, 100, 130, 132, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 170, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188], "smaller": [54, 56, 62, 65, 176, 181, 182, 210, 267, 269, 274], "smallest": 237, "smooth": [24, 68, 128, 129, 179, 187, 276], "smoother": 179, "so": [61, 62, 63, 64, 113, 176, 186, 217, 218, 265], "softmax": [69, 87, 118, 136, 147, 153], "softmaxmodel": 134, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [67, 82, 113, 141, 142, 143, 158, 159, 160, 161, 162, 163, 181, 182, 183, 193, 195], "sometim": 192, "sophist": [62, 65], "sourc": 202, "space": [11, 17, 19, 76, 77, 78, 80, 101, 102, 103, 114, 115, 116, 137, 138, 139, 166, 167, 168, 215, 276], "span": 4, "spars": [181, 182], "spatial": [20, 49, 54, 115, 117, 138, 139, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 255], "spatial_dim": 117, "spatio": 139, "special": [0, 1, 7, 16, 58, 59, 60, 141, 202], "specif": [4, 7, 26, 61, 62, 63, 64, 65, 118, 127, 141, 142, 143, 144, 145, 161, 162, 163, 176, 177, 191, 202, 217, 235, 237, 258, 262], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 62, 74, 80, 85, 91, 92, 93, 95, 96, 100, 101, 102, 103, 112, 113, 117, 134, 137, 138, 139, 152, 153, 154, 155, 156, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 195, 197, 198, 199, 200, 201, 213, 215, 216, 217, 218, 219, 220, 222, 223, 229, 235, 236, 237, 244, 248, 249, 250, 251, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 276], "speech": 161, "speed": [179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "split": [4, 251, 253, 264], "springer": 56, "sqrt": [68, 122, 123, 126, 127, 129, 158, 159, 160, 161, 162, 163, 164, 180, 181, 182, 183, 185, 186, 187, 224, 226, 227], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 93, 95, 154, 155, 180, 181, 182, 187, 224, 242], "squaredataset": [0, 1, 2, 3], "squeez": [43, 46, 56, 117, 254], "stabil": [13, 16, 56, 91, 92, 97, 99, 100, 114, 115, 116, 152, 153, 158, 159, 160, 161, 162, 163, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187, 268], "stabl": [122, 123, 126, 127, 141, 153, 179, 183, 184, 187, 188, 189], "stack": [65, 118, 253, 254, 264, 276], "stage": [34, 43], "stage1": 43, "stage2": 43, "stage3": 43, "stage4": 43, "standard": [68, 70, 122, 124, 126, 128, 129, 130, 141, 188, 199, 202, 208, 265, 268, 276], "start": [1, 3, 179, 181, 188, 215, 267, 269], "state": [56, 58, 59, 60, 62, 65, 177, 191, 193, 200], "state_dict": [59, 60, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "static": 65, "statist": [16, 81, 97, 99], "std": [5, 124, 265, 268, 276], "stem": 26, "stem_typ": 34, "stem_width": 34, "step": [60, 80, 118, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 215, 265, 266], "step_siz": 188, "still": 180, "stochast": [7, 179, 189], "stop": 215, "storag": [61, 63, 203], "store": [2, 4, 5, 58, 59, 60, 61, 62, 63, 64, 117, 166, 167, 168, 193, 203, 267, 268, 269, 270, 271, 272, 273, 274], "str": [5, 34, 49, 59, 61, 63, 65, 91, 92, 93, 95, 96, 112, 177, 194, 255], "straightforward": [189, 191, 204], "strategi": 178, "streamlin": [2, 3], "strict": [59, 177], "stride": [30, 31, 32, 33, 62, 65, 76, 77, 78, 80, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 137, 138, 139, 166, 167, 168, 169, 170, 171, 172, 173, 174], "stride_height": 80, "stride_width": 80, "string": [59, 61, 63, 65, 137, 138, 139, 177], "structur": [0, 7, 17, 58, 59, 62, 176, 177, 194, 195, 219, 266], "style": [26, 99, 161, 162, 255], "sub": [61, 62, 63, 64, 65, 176, 224, 267, 269], "sub_tensor": 203, "subclass": [1, 2, 3, 7, 59, 60, 61, 176, 177], "sublay": 57, "submodul": [57, 59, 176], "subsequ": [62, 65, 127, 202], "subset": [142, 143], "subtract": [7, 214, 268], "suffer": 181, "suit": [24, 122, 123, 126, 127], "suitabl": [26, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 56, 154, 181, 182, 197], "sum": [15, 61, 62, 63, 64, 65, 74, 91, 92, 93, 95, 96, 118, 134, 152, 153, 154, 155, 156, 181, 204, 207, 212, 224, 247, 249, 251, 253, 255, 258, 262, 264], "sum_": [14, 74, 134, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 206, 207, 236, 244, 247, 249, 255, 258], "sum_i": [15, 212], "sum_j": 212, "sum_k": 208, "summar": [169, 170, 171], "summat": 14, "sun": 117, "super": [7, 57, 58, 59, 60, 61, 62, 63, 64, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 61, 62, 63, 64, 65, 112, 113, 176, 178, 185, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 216, 219, 229, 234, 236, 240, 242, 244, 247, 248, 249, 251, 255, 259, 266, 276], "suppos": 276, "sure": [176, 276], "svd": [12, 16], "symmetr": [9, 101, 102, 103, 126, 127, 135], "syntax": [1, 208], "system": [8, 9, 16, 17, 18, 56, 191, 255], "systemat": 276, "szegedi": [23, 56], "t": [16, 56, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 203, 208, 250, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "t0": 179, "t1": 250, "t2": 250, "tabular": 4, "tailor": [4, 176, 276], "take": [17, 169, 170, 171, 172, 173, 174, 193, 265], "taken": 247, "tan": 224, "tangent": [75, 135, 228, 245, 246], "tanh": [62, 65, 68, 69, 87, 122, 123, 126, 127, 129, 136, 147, 224], "tanhnetwork": 135, "target": [5, 65, 91, 92, 93, 95, 96, 101, 102, 103, 112, 152, 153, 154, 155, 156, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 267, 269, 274], "target_tensor": [152, 153, 154, 155, 156], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 56, 73, 74, 77, 88, 91, 92, 95, 96, 117, 118, 133, 134, 137, 138, 139, 152, 153, 154, 155, 156, 161, 162, 163, 169, 171, 172, 174, 182, 192, 202, 219, 276], "techniqu": [9, 13, 54, 97, 141, 142, 143, 144, 145, 161, 162, 163, 178, 274, 276], "tempor": [137, 139, 171, 174], "temporarili": 193, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 43, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 191, 193, 195, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "term": [16, 88, 114, 115, 116, 179, 183, 185, 186, 187, 189], "test": [4, 5], "test_backward": 57, "test_siz": 5, "text": [4, 10, 14, 15, 61, 67, 70, 71, 72, 74, 76, 77, 78, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 130, 131, 132, 134, 137, 138, 139, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 169, 170, 171, 172, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 204, 205, 207, 209, 210, 211, 213, 214, 225, 229, 235, 236, 237, 239, 244, 249, 251, 253, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 271, 272, 273], "th": [88, 152, 153, 155, 156, 161, 162, 163, 209, 210, 213], "than": [0, 1, 63, 64, 67, 70, 93, 128, 130, 154, 177, 183, 229, 247, 256, 261, 267, 269, 274], "thei": [0, 7, 19, 56, 58, 62, 64, 65, 195, 255, 259, 267, 269, 276], "them": [3, 59, 64, 80, 179, 192, 251, 261, 265, 268, 276], "therebi": [141, 170, 171, 173, 174], "theta": [179, 180, 272], "theta_": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "theta_t": [186, 187], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 56, 57, 58, 60, 62, 63, 64, 65, 71, 73, 74, 75, 76, 77, 78, 80, 88, 90, 101, 112, 113, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 207, 208, 212, 215, 217, 220, 221, 222, 223, 229, 233, 234, 235, 236, 237, 240, 242, 244, 247, 248, 249, 250, 256, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "thing": 193, "those": [7, 31, 32, 33, 64, 127], "three": [19, 33, 78, 103, 106, 110, 114, 115, 116, 139, 145, 160, 163, 168, 171, 174], "threshold": [16, 93, 154], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 61, 62, 65, 88, 90, 112, 117, 118, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 199, 206, 207, 212, 255, 257, 259, 260, 263, 276], "throughout": [72, 266], "tile": 254, "time": [0, 3, 14, 31, 32, 33, 76, 114, 130, 132, 137, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 187, 189, 193, 258, 262], "to_tensor": 5, "togeth": [65, 265, 276], "too": 188, "tool": [3, 7, 176, 192, 202, 265, 276], "top": [9, 10, 11, 17, 19, 88, 90, 112, 137, 138, 139, 148, 150, 267, 269], "torch": [49, 250], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 60, 203, 259], "totensor": [265, 276], "trace": [8, 224], "track": [7, 114, 115, 116, 158, 159, 160, 161, 162, 163, 176, 191, 193, 197, 198, 199, 201, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 266], "track_running_stat": [114, 115, 116, 158, 159, 160, 161, 162, 163], "tradit": [180, 181, 184, 185, 186], "trail": 100, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 56, 57, 58, 59, 62, 64, 65, 74, 81, 82, 83, 84, 85, 97, 99, 113, 129, 130, 132, 133, 134, 135, 141, 142, 143, 144, 145, 158, 159, 160, 161, 162, 163, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 265, 268, 269, 270, 271, 272, 273, 276], "trainabl": [57, 158, 159, 160, 161, 162, 163, 176], "transact": 117, "transfer": [99, 161, 162], "transform": [2, 4, 5, 7, 11, 63, 88, 90, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 192, 255], "transform_pipelin": [265, 276], "transformed_imag": [265, 276], "transit": 154, "translat": [170, 173], "transpos": [7, 9, 224], "treat": [0, 58, 164, 176], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 88, 90, 97, 99, 112, 114, 115, 116, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 177, 182, 183, 187, 191, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266], "truncat": 57, "truncate_from": 57, "try": 0, "tune": 276, "tupl": [2, 3, 5, 11, 17, 19, 34, 57, 59, 60, 76, 77, 78, 80, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 137, 138, 139, 149, 164, 167, 168, 169, 170, 171, 172, 173, 174, 182, 183, 184, 185, 186, 188, 195, 197, 198, 199, 201, 203, 217, 220, 222, 235, 236, 237, 244, 249, 251, 253, 255, 256, 259, 260, 261, 263, 264, 267, 268, 269, 274], "twice": 256, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 49, 76, 77, 78, 88, 105, 109, 117, 118, 138, 144, 148, 159, 162, 170, 173, 182, 183, 184, 185, 186, 188, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 247, 255], "type": [34, 43, 58, 59, 60, 88, 148, 203, 215, 216, 217, 218, 219, 220, 221, 222, 223, 250, 255, 266], "typeerror": [0, 1, 2, 59, 177], "typic": [8, 58, 74, 81, 113, 117, 132, 134, 156, 158, 159, 160, 161, 162, 163, 178, 179, 187, 189, 193, 195, 263, 266, 268, 272, 274, 276], "u": [16, 19, 123, 125, 127], "u_": 184, "ultra": 40, "unchang": [58, 85, 128, 130, 131, 132, 141, 142, 143, 144, 145, 149, 257, 260], "undefin": 213, "under": 176, "underbrac": 14, "underdetermin": 16, "undergo": 276, "underli": [0, 7, 23, 24, 25, 27, 28, 250, 253, 257, 259, 264], "understand": [7, 54, 56, 57, 65, 276], "unexpect": [59, 62, 65, 202], "unfold": [79, 87], "unifi": 0, "uniform": [121, 123, 127, 137, 138, 139, 148, 150, 196, 197, 198, 202, 270, 271, 272, 273], "uniformli": [197, 201], "uniniti": [217, 218], "unintend": 193, "union": 49, "uniqu": [9, 16, 18, 61, 63], "unit": [20, 30, 54, 67, 68, 70, 71, 72, 122, 123, 126, 127, 128, 129, 130, 131, 132, 141], "unless": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 203], "unlik": [58, 61, 62, 63, 64, 70, 128, 130, 141, 164, 180, 181, 183, 184, 185, 186, 188], "unnecessari": 193, "unpad": 256, "unseen": 276, "unsqueez": 254, "unstabl": 13, "up": [177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 272, 274], "updat": [4, 58, 64, 65, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193], "upon": [24, 56, 61, 62, 63, 64], "upper": [17, 125, 188, 201], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 88, 90, 95, 97, 99, 102, 103, 112, 113, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 191, 192, 193, 194, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 233, 235, 236, 237, 244, 249, 255, 256, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "usag": [3, 8, 62, 65, 177, 178, 267, 268, 269, 270, 271, 272, 273, 274], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 61, 62, 63, 64, 176, 181, 265, 266, 276], "usual": 153, "util": [3, 7, 8, 63, 64, 176, 202], "v": [11, 16, 19, 182, 183, 185, 186, 216], "v1": [22, 23, 26, 27, 28, 56], "v2": [26, 28, 56], "v3": [22, 24, 25, 56], "v4": [22, 25, 56], "v_": [179, 182, 183, 185, 186, 187, 189], "v_stack": 264, "v_t": [186, 187], "val": 120, "valid": [114, 115, 116, 118, 137, 138, 139, 248], "valu": [7, 10, 14, 15, 16, 19, 57, 59, 61, 63, 65, 67, 70, 73, 74, 75, 76, 77, 78, 80, 91, 92, 93, 95, 96, 97, 99, 100, 101, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197, 198, 199, 200, 201, 202, 215, 216, 217, 218, 219, 225, 226, 227, 229, 232, 233, 234, 235, 237, 239, 240, 242, 243, 251, 256, 257, 259, 263, 268, 270, 271, 273], "valuabl": 202, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 177], "vanish": [56, 128, 132, 158, 159, 160], "var": 224, "vari": [62, 64, 101, 112, 166, 272], "variabl": [59, 65, 101, 102, 103, 149, 166, 167, 168, 176, 191, 193, 197, 217, 269, 272], "varianc": [72, 81, 97, 99, 114, 115, 116, 122, 123, 126, 127, 132, 141, 158, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186, 199, 249, 272, 276], "variant": [49, 50, 51, 52, 53, 182, 183, 184], "variat": [161, 162, 163, 269, 276], "varieti": [4, 26, 202, 276], "variou": [22, 27, 28, 30, 56, 131, 178, 202, 235, 237, 256, 266], "vdot": 212, "vector": [11, 16, 17, 18, 19, 88, 90, 148, 150, 206, 207, 208, 212], "veloc": [179, 187, 189], "veri": [16, 37, 39, 56, 180], "versa": 188, "versatil": [202, 255], "version": [19, 22, 26, 30, 31, 32, 187, 212, 270], "vertic": [261, 264, 273], "vgg": 49, "vggnet": [29, 50, 51, 52, 53, 56], "vggnet_11": 56, "vggnet_13": 56, "vggnet_16": 56, "vggnet_19": 56, "via": [3, 4], "vice": 188, "video": [78, 85, 116, 139, 163, 171, 174], "view": [26, 30, 62, 170, 171, 172, 173, 174, 259], "vision": [56, 77, 138, 148, 276], "visual": [54, 56], "vol": 56, "volumetr": [78, 85, 116, 139, 163, 171, 174], "vstack": 254, "w": [77, 78, 80, 84, 85, 88, 90, 102, 103, 105, 106, 109, 110, 112, 113, 115, 116, 117, 137, 138, 139, 148, 150, 159, 160, 162, 163, 167, 168, 171, 174, 267, 269], "w_": [77, 78, 102, 103, 105, 106, 109, 110, 112, 138, 139, 167, 168, 170, 171, 173, 174], "w_out": [77, 78, 105, 106, 109, 110], "wa": [23, 141, 142, 143, 144, 145, 193], "wai": [1, 21, 55, 191, 193, 259], "want": [0, 7, 265, 267], "warn": [61, 63], "we": [3, 7, 192, 255], "weight": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 56, 76, 77, 78, 88, 90, 91, 92, 96, 97, 99, 100, 112, 117, 118, 122, 123, 126, 127, 137, 138, 139, 141, 142, 143, 144, 145, 148, 150, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 202], "weight1": 63, "weight2": 63, "weight_decai": [179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "well": [24, 122, 123], "were": 65, "what": 193, "when": [0, 1, 3, 7, 14, 59, 62, 64, 65, 67, 70, 76, 77, 78, 128, 149, 158, 159, 160, 161, 162, 163, 177, 180, 188, 191, 193, 194, 195, 202, 213, 265, 267], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 202, 204, 205, 209, 210, 211, 213, 214, 217, 218, 229, 233, 234, 235, 236, 237, 240, 242, 244, 247, 248, 249, 251, 256, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273], "whether": [1, 10, 22, 23, 24, 59, 60, 122, 123, 187, 191, 197, 198, 199, 201, 203, 217, 218, 235, 236, 237, 244, 249], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 50, 51, 52, 53, 56, 59, 61, 63, 65, 70, 74, 93, 113, 118, 128, 129, 130, 134, 135, 141, 154, 156, 158, 159, 160, 161, 162, 163, 164, 182, 183, 185, 187, 191, 193, 195, 197, 198, 201, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 251, 258, 259, 261, 263, 266, 267, 269, 270, 271, 272, 273, 274, 276], "while": [7, 28, 56, 62, 65, 81, 129, 131, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 193, 259, 261, 270, 276], "who": [7, 61, 62, 63, 64], "whose": [19, 218, 221, 223, 225, 229, 233, 239], "wide": [4, 5, 8, 16, 42, 56, 71, 131, 137, 138, 153], "wider": [76, 77], "width": [77, 78, 80, 84, 85, 102, 103, 105, 106, 109, 110, 112, 113, 118, 138, 139, 159, 160, 162, 163, 167, 168, 170, 171, 173, 174, 267, 269, 274], "window": [104, 105, 106, 108, 109, 110, 169, 170, 171, 172, 173, 174, 180, 235, 237], "wise": [47, 56, 67, 68, 70, 71, 72, 73, 74, 75, 114, 115, 116, 117, 134, 141, 142, 143, 144, 145, 176, 192, 204, 205, 208, 209, 210, 211, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 240, 241, 242, 243, 245, 246, 247, 253, 264], "within": [2, 56, 57, 58, 61, 62, 63, 64, 65, 75, 112, 113, 127, 129, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 149, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 169, 170, 171, 172, 173, 174, 178, 193, 215, 229, 272, 276], "without": [7, 61, 62, 63, 88, 90, 137, 138, 139, 148, 150, 191, 194, 235, 257, 259, 263], "won": 193, "work": [1, 2, 3, 7, 9, 192, 195], "workflow": [202, 276], "workload": 7, "wrap": [3, 176, 193, 250], "wrapper": 176, "x": [7, 8, 18, 26, 30, 34, 43, 49, 57, 58, 59, 61, 62, 63, 64, 65, 74, 88, 90, 113, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 198, 199, 201, 217, 218, 233, 255, 267, 268, 269, 270, 271, 272, 273, 274], "x1": 148, "x2": 148, "x_": [153, 156, 255], "x_c": [153, 156], "x_i": 152, "x_k": 153, "xavier": [122, 123, 126, 127], "xavier_norm": 121, "xavier_uniform": 121, "xy": 255, "x\u2081": 148, "x\u2082": 148, "y": [61, 62, 63, 64, 65, 113, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 197, 198, 199, 201, 217, 218, 255, 270], "y_": [153, 156, 255], "y_c": [153, 156], "y_i": 152, "yann": [5, 56], "yet": [7, 192], "yield": [0, 1, 59, 193], "you": [0, 57, 62, 64, 65, 176, 178, 191, 193, 202, 217, 218, 219, 223, 248, 250, 265, 267, 276], "your": [176, 178, 191, 193, 202, 276], "z": [218, 222, 223], "zeiler": [54, 56], "zero": [14, 16, 17, 24, 57, 67, 70, 76, 77, 78, 81, 82, 83, 84, 85, 104, 105, 106, 108, 109, 110, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 164, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 217, 218, 219, 223, 224, 229, 239, 256], "zero_grad": [60, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203], "zeros_lik": [218, 224], "zfnet": [29, 56], "zisserman": 56, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 192, "1d": 192, "2": 192, "2d": 192, "3": 192, "It": [191, 193], "ab": 225, "activ": [69, 87, 136, 147], "ad": 192, "adadelta": 180, "adagrad": 181, "adam": 182, "adamax": 184, "adamw": 183, "adaptive_avg_pool1d": 101, "adaptive_avg_pool2d": 102, "adaptive_avg_pool3d": 103, "adaptiveavgpool1d": 166, "adaptiveavgpool2d": 167, "adaptiveavgpool3d": 168, "add": 204, "addit": 16, "admonit": 195, "advanc": [80, 276], "alexnet": [20, 21], "algebra": 12, "algorithm": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "alias": 195, "align": 192, "alpha_dropout": 81, "alphadropout": 141, "also": 178, "anoth": 250, "arang": 215, "arcco": 226, "architectur": [20, 31, 32, 33, 54], "arcsin": 227, "arctan": 228, "asgd": 179, "attent": 118, "attribut": [5, 20, 26, 30, 34, 43, 49, 54, 58, 60, 61, 62, 63, 64, 65, 114, 115, 116, 117, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 203, 267, 268, 269, 270, 271, 272, 273, 274], "avg_pool1d": 104, "avg_pool2d": 105, "avg_pool3d": 106, "avgpool1d": 169, "avgpool2d": 170, "avgpool3d": 171, "axi": 192, "backpropag": 203, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "batch_norm": 97, "batchnorm": 119, "batchnorm1d": 158, "batchnorm2d": 159, "batchnorm3d": 160, "bceloss": 152, "behavior": [101, 102, 103, 166, 167, 168], "benefit": 193, "bilinear": [88, 148], "binari": 224, "binary_cross_entropi": 91, "broadcast": 192, "buffer": 58, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 88, 90, 101, 102, 103, 112, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274], "captur": 194, "case": 195, "centercrop": 267, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 43, 49, 54, 58, 59, 60, 61, 62, 63, 64, 65, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "clip": 229, "co": 230, "combin": 0, "compon": [3, 7, 176], "compos": 265, "concatdataset": [0, 1], "concaten": 251, "conclus": [3, 7, 176, 191, 192, 193, 202, 266, 276], "constant": 120, "contain": 66, "conv": 119, "conv1d": [76, 137], "conv2d": [77, 138], "conv3d": [78, 139], "convbnrelu1d": 114, "convbnrelu2d": 115, "convbnrelu3d": 116, "convnet": [29, 56], "convolut": [79, 87, 140, 147], "core": 7, "cosh": 231, "creat": [60, 203, 250], "cross_entropi": 92, "crossentropyloss": 153, "cube": 232, "custom": [1, 2, 3, 59, 177, 178, 276], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 59, 177, 178], "definit": 195, "descript": 194, "det": 10, "detail": 16, "diag": 216, "dilat": 80, "div": 205, "dot": 206, "dropout": [82, 86, 87, 142, 146, 147], "dropout1d": [83, 143], "dropout2d": [84, 144], "dropout3d": [85, 145], "eig": 11, "elu": [67, 128], "empti": 217, "empty_lik": 218, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276], "excit": 119, "exp": 233, "ey": 219, "featur": [4, 7, 8, 178, 202, 276], "flatten": 252, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 88, 90, 101, 102, 103, 112, 114, 115, 116, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274], "from": 250, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 123, 124, 125, 126, 127, 191, 193, 194, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "fuse": 119, "futur": 4, "gelu": [68, 129], "gener": [196, 224], "get": 178, "grad_en": 191, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 88, 90, 112, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "guidelin": 195, "how": [191, 193], "hstack": 253, "huber_loss": 93, "huberloss": 154, "ident": 149, "imag": [6, 275], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 203, "init": [120, 122, 123, 124, 125, 126, 127], "initi": 121, "inner": 207, "input": 250, "inspect": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "instance_norm": 99, "instancenorm1d": 161, "instancenorm2d": 162, "instancenorm3d": 163, "integr": [3, 176, 202, 276], "interpol": 112, "inv": 13, "iter": 203, "kaiming_norm": 122, "kaiming_uniform": 123, "kei": [3, 4, 7, 176, 178, 202, 276], "kernel": 119, "layer": [119, 136, 140, 146, 147, 151, 157, 165, 175], "layer_norm": 100, "layernorm": 164, "leaky_relu": 70, "leakyrelu": 130, "learn": 202, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 87, 89, 90, 147, 150, 151], "list": 250, "load": 1, "log": 234, "loss": [87, 94, 147, 157], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 56, 87, 176, 178, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 276], "matmul": 208, "matrix": 208, "matrix_pow": 14, "max": 235, "max_pool1d": 108, "max_pool2d": 109, "max_pool3d": 110, "maximum": 209, "maxpool1d": 172, "maxpool2d": 173, "maxpool3d": 174, "mean": 236, "mechan": 118, "meshgrid": 255, "metadata": 194, "method": [0, 1, 2, 5, 26, 30, 49, 59, 60, 177, 203], "min": 237, "minimum": 210, "mnist": 5, "model": [56, 57, 176], "modul": [59, 147], "moduledict": 61, "modulelist": 62, "more": 202, "mse_loss": 95, "mseloss": 155, "mul": 211, "multipl": [0, 208], "nadam": 185, "new": 192, "newaxi": 192, "nll_loss": 96, "nllloss": 156, "nn": [58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176], "no_grad": 193, "norm": 15, "normal": [87, 98, 124, 147, 165, 268], "note": 7, "number": 196, "ones": 220, "ones_lik": 221, "oper": [12, 208, 224], "optim": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "organ": 176, "outer": 212, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 176, 178, 202, 276], "pad": 256, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "parameterdict": 63, "parameterlist": 64, "perform": 203, "pinv": 16, "pipelin": [3, 276], "pitfal": [191, 193], "pool": [87, 107, 147, 175], "potenti": [191, 193], "power": 213, "properti": [60, 203], "qr": 17, "radam": 186, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 197, "randint": 198, "randn": 199, "random": [196, 197, 198, 199, 200, 201, 202], "randomcrop": 269, "randomgrayscal": 270, "randomhorizontalflip": 271, "randomrot": 272, "randomverticalflip": 273, "ravel": 257, "reciproc": 238, "refer": [5, 117, 178], "register_model": 194, "relu": [71, 119, 131], "repeat": 258, "reshap": 259, "resiz": 274, "resnet": 34, "resnet_1001": 35, "resnet_101": 36, "resnet_152": 37, "resnet_18": 38, "resnet_200": 39, "resnet_269": 40, "resnet_34": 41, "resnet_50": 42, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 120, 122, 123, 124, 125, 126, 127, 191, 193, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "rmsprop": 187, "rotat": 113, "rprop": 188, "rule": 208, "se_resnet_101": 44, "se_resnet_152": 45, "se_resnet_18": 46, "se_resnet_34": 47, "se_resnet_50": 48, "see": 178, "seed": 200, "select": 119, "selectivekernel": 118, "selu": [72, 132], "semodul": 117, "senet": 43, "sequenti": 65, "sgd": 189, "sigmoid": [73, 133], "sign": 239, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "sin": 240, "sinh": 241, "slice": 203, "softmax": [74, 134], "solv": 18, "sqrt": 242, "squar": 243, "squeez": [119, 260], "stack": 261, "start": 178, "state": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "sub": 214, "sum": 244, "summar": 57, "summari": 57, "svd": 19, "tabl": 57, "tan": 245, "tanh": [75, 135, 246], "tensor": [192, 203, 224, 250, 254], "through": 203, "tile": 262, "totensor": 266, "trace": 247, "track": 203, "transform": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "transpos": 248, "type": 195, "unari": 224, "unfold": 80, "uniform": [125, 201], "unsqueez": 263, "us": [1, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 250], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 58, 113, 191, 192, 193, 195, 255, 265, 266, 276], "util": [87, 111], "utilit": 254, "var": 249, "vggnet": 49, "vggnet_11": 50, "vggnet_13": 51, "vggnet_16": 52, "vggnet_19": 53, "vstack": 264, "weight": 121, "why": 195, "work": [4, 191, 193], "xavier_norm": 126, "xavier_uniform": 127, "zero": 222, "zeros_lik": 223, "zfnet": [54, 55]}})