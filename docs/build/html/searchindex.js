Search.setIndex({"alltitles": {"Attributes": [[2, "attributes"]], "Backward Gradient Calculation": [[3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [5, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"]], "Binary Functions": [[13, null]], "Class Signature": [[2, "class-signature"]], "Create a Tensor from a list": [[14, null]], "Creating a tensor with gradient tracking": [[2, null]], "Examples": [[2, "examples"], [3, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [14, "examples"]], "Forward Calculation": [[3, "forward-calculation"], [4, "forward-calculation"], [5, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"]], "Function Signature": [[3, "function-signature"], [4, "function-signature"], [5, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"]], "Indexing and slicing": [[2, null]], "Iterating through a tensor": [[2, null]], "Lucid documentation": [[0, null]], "Methods": [[2, "methods"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"]], "Performing backpropagation": [[2, null]], "Properties": [[2, "properties"]], "Returns": [[3, "returns"], [4, "returns"], [5, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"]], "Tensor Operations": [[13, null]], "Use another Tensor as input": [[14, null]], "lucid.Tensor": [[2, null]], "lucid.add": [[3, null]], "lucid.div": [[4, null]], "lucid.dot": [[5, null]], "lucid.exp": [[6, null]], "lucid.inner": [[7, null]], "lucid.linalg.inv": [[1, null]], "lucid.maximum": [[8, null]], "lucid.minimum": [[9, null]], "lucid.mul": [[10, null]], "lucid.power": [[11, null]], "lucid.sub": [[12, null]], "lucid.tensor": [[14, null]]}, "docnames": ["index", "linalg/inv", "tensor/Tensor", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/exp", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/index", "tensor/tensor"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/inv.rst", "tensor/Tensor.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/exp.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/index.rst", "tensor/tensor.rst"], "indexentries": {"power() (in module lucid)": [[11, "lucid.power", false]]}, "objects": {"lucid": [[2, 0, 1, "", "Tensor"], [3, 1, 1, "", "add"], [4, 1, 1, "", "div"], [5, 1, 1, "", "dot"], [6, 1, 1, "", "exp"], [7, 1, 1, "", "inner"], [8, 1, 1, "", "maximum"], [9, 1, 1, "", "minimum"], [10, 1, 1, "", "mul"], [11, 1, 1, "", "power"], [12, 1, 1, "", "sub"], [14, 1, 1, "", "tensor"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:function"}, "terms": {"": [0, 14], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "085537": 6, "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "10": [4, 10], "12": 11, "17": 7, "18": 10, "19": 5, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "20": 6, "22": 5, "25": 4, "3": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "32": [5, 7], "389056": 6, "4": [3, 4, 5, 7, 8, 9, 10, 11, 12, 14], "43": 5, "5": [3, 4, 5, 7, 8, 9, 10, 11, 12, 14], "50": 5, "53": 7, "545": 11, "6": [3, 4, 5, 7, 10, 11, 12, 14], "7": [3, 5, 6, 7, 12], "7182818": 6, "772": 11, "8": [4, 5, 7, 11], "887": 11, "9": [3, 11, 12], "A": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "If": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "It": [3, 4, 5, 8, 9, 10, 11, 12], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "_": [5, 7], "__getitem__": [], "__hash__": [], "__init__": 2, "__iter__": [], "__repr__": [], "__str__": [], "_arrayorscalar": [2, 14], "_backward_op": [], "_func": [], "_i": [5, 6, 7, 8, 9, 11], "_numpyarrai": [], "_prev": [], "_tensor": 14, "_tensorop": 2, "a_": [], "a_i": [8, 9, 11], "accept": 2, "access": [], "accumul": [3, 4, 8, 9, 10, 12], "actual": 2, "add": 13, "addit": 3, "after": [2, 3, 4, 8, 9, 10, 11, 12], "align": 7, "all": 11, "allow": 14, "along": 7, "alreadi": [], "also": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "an": 2, "ani": [2, 14], "anoth": 12, "applic": [], "ar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "arrai": [2, 14], "assign": [], "attribut": [], "automat": 2, "axi": 7, "b": [3, 4, 5, 7, 8, 9, 10, 11, 12], "b_": [], "b_i": [8, 9, 11], "back": 7, "backend": [], "backpropag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "backward": 2, "base": [3, 4, 6, 8, 9, 10, 11, 12], "begin": [8, 9], "between": [3, 4, 10, 12], "bfunc": [], "bool": [2, 14], "both": [5, 7], "build": [], "c": [], "calcul": 2, "call": [3, 4, 8, 9, 10, 11, 12], "callabl": [], "can": 2, "case": [8, 9], "cdot": [5, 7, 10, 11], "class": 14, "clear": 2, "compon": 2, "comprehens": 0, "comput": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "construct": [], "constructor": [], "contain": [3, 4, 5, 7, 8, 9, 10, 12], "content": [], "convert": 2, "core": 2, "correspond": [5, 6, 7, 8, 9, 11], "creat": [], "custom": [], "data": [2, 3, 4, 10, 12, 14], "deep": 0, "def": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "default": [2, 14], "defin": 11, "definit": [], "denomin": 4, "depend": 5, "deriv": [], "design": [], "desir": 14, "detail": [], "determin": [], "differ": 12, "differenti": 2, "dimens": [2, 7], "dimension": [6, 7], "directli": 14, "displai": [], "div": 13, "divid": 4, "divis": 4, "dot": [7, 13], "dtype": [2, 14], "dure": [2, 3], "e": 6, "each": [2, 3, 4, 6, 8, 9, 10, 11, 12], "either": [3, 4, 5, 7, 8, 9, 10, 11, 12, 14], "element": [2, 3, 4, 6, 8, 9, 10, 11, 12], "enabl": 2, "encapsul": 2, "end": [8, 9], "ensur": 11, "exampl": [], "exp": 13, "expon": 11, "exponenti": 6, "ext": [], "fals": [2, 14], "feed": 2, "first": [3, 5, 7, 8, 9, 10, 11, 12], "flag": [], "float": [2, 14], "float32": [2, 14], "float64": 14, "flow": [], "follow": [4, 5, 7, 8, 9, 10, 11, 12], "forward": [], "foundat": 2, "frac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "from": [2, 8, 9, 12], "function": [], "gener": 7, "given": [], "grad": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "gradient": 14, "graph": 2, "hash": [], "hello": [], "higher": [6, 7], "hold": [], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "id": [], "idx": [], "ij": [5, 7], "ik": [5, 7], "implement": [], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "improt": [], "includ": [], "index": [], "indic": 2, "individu": [], "inform": [], "initi": 14, "inner": [5, 13], "input": [2, 3, 5, 6, 7], "instanc": 14, "int": [2, 14], "interfac": 0, "inv": [], "involv": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "is_leaf": 2, "iter": [], "its": 14, "j": [], "jk": 7, "k": [5, 7], "keep_grad": 2, "keepdim": [], "kj": 5, "larger": 8, "last": 7, "leaf": 2, "learn": 0, "leq": 11, "librari": 2, "like": 14, "linalg": [], "list": 2, "ln": 11, "logarithm": [6, 11], "lucid": 13, "lumeruco": 0, "make": 2, "match": 6, "math": [], "mathbf": [5, 6, 7], "matric": [5, 7], "matrix": 5, "max": 8, "maximum": 13, "mean": 6, "method": [], "min": 9, "minimum": 13, "mul": 13, "multipl": [5, 10], "multipli": 10, "natur": [6, 11], "ndarrai": [2, 14], "ndim": 2, "network": 2, "neural": 2, "new": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "node": 2, "non": 11, "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "np": [2, 14], "number": [2, 11], "numer": 4, "numpi": [2, 14], "object": [3, 4, 8, 9, 10, 12, 14], "one": 12, "onli": [], "oper": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "option": [2, 14], "order": [], "origin": [], "other": 2, "otherwis": [8, 9], "out": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "over": [], "paramet": [], "partial": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "particip": [], "pass": 2, "perform": [3, 4, 6, 10, 12], "posit": 11, "power": 13, "preced": 2, "print": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "produc": [], "product": [5, 7, 10], "propag": [5, 7], "properti": [], "provid": [2, 14], "pytorch": 14, "quad": [3, 4, 8, 9, 10, 12], "quotient": 4, "rais": 11, "repr": [], "repres": [3, 4, 10, 12], "represent": [], "requir": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "requires_grad": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "resembl": [], "reset": 2, "respect": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "restructuredtext": [], "result": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "retain": 2, "retriev": [], "return": [], "rule": [3, 4, 8, 9, 10, 11, 12], "same": 6, "second": [3, 5, 7, 8, 9, 10, 11, 12], "see": [], "self": [], "set": [2, 14], "shape": [2, 5], "signatur": [], "similar": 14, "simpl": [5, 7], "simpli": [], "size": 2, "slice": [], "smaller": 9, "specifi": [11, 14], "storag": 2, "store": 2, "str": [], "straightforward": 3, "string": [], "sub": 13, "sub_tensor": 2, "subtract": 12, "sum": [3, 7], "sum_": [5, 7], "support": [2, 3, 4, 8, 9, 10, 11, 12], "supportsindex": [], "syntax": [], "t": [2, 14], "t1": 14, "t2": 14, "tensor": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "text": [3, 4, 7, 8, 9, 10, 11, 12], "th": [8, 9, 11], "thi": [2, 6, 7, 14], "through": [5, 7], "thu": [], "time": [], "topolog": [], "torch": 14, "total": 2, "track": 14, "true": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "tupl": 2, "two": [3, 4, 5, 7, 8, 9, 10, 11, 12], "type": [2, 14], "undefin": 11, "underli": 14, "uniqu": [], "unless": 2, "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "usag": [], "valu": 6, "var": [], "vector": [5, 7], "wa": [], "when": 11, "where": [3, 4, 6, 8, 9, 10, 11, 12], "whether": 2, "which": [], "whose": 6, "wise": [3, 4, 8, 9, 10, 11, 12], "wrap": 14, "x": 6, "yield": [], "you": 14, "your": [], "zero_grad": 2}, "titles": ["Lucid documentation", "lucid.linalg.inv", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.exp", "lucid.inner", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.power", "lucid.sub", "Tensor Operations", "lucid.tensor"], "titleterms": {"add": 3, "algebra": [], "anoth": 14, "attribut": 2, "backpropag": 2, "backward": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "binari": 13, "calcul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "class": 2, "constructor": [], "creat": [2, 14], "definit": [], "div": 4, "document": 0, "dot": 5, "exampl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "exp": 6, "forward": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "from": 14, "function": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "gradient": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "index": 2, "inner": 7, "input": 14, "inv": 1, "iter": 2, "linalg": 1, "linear": [], "list": 14, "lucid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "maximum": 8, "method": 2, "minimum": 9, "mul": 10, "oper": 13, "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "perform": 2, "power": 11, "properti": 2, "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "signatur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "slice": 2, "sub": 12, "tensor": [2, 13, 14], "through": 2, "track": 2, "us": 14, "usag": []}})