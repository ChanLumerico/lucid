Search.setIndex({"alltitles": {"@ Operator": [[306, "operator"]], "Activation Functions": [[147, null], [169, null]], "Activation Layers": [[226, null], [241, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[292, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[160, "advanced-example-with-dilation"]], "Advanced Features": [[379, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[276, "algorithm"], [277, "algorithm"], [278, "algorithm"], [279, "algorithm"], [280, "algorithm"], [281, "algorithm"], [282, "algorithm"], [283, "algorithm"], [284, "algorithm"], [285, "algorithm"], [286, "algorithm"]], "Architecture": [[23, "architecture"], [25, "architecture"], [73, "architecture"], [74, "architecture"], [75, "architecture"], [132, "architecture"]], "Architecture Details": [[101, "architecture-details"], [102, "architecture-details"]], "Attention Functions": [[154, null], [169, null]], "Attention Layers": [[228, null], [241, null]], "Attention Mechanism": [[155, "attention-mechanism"], [204, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [68, "attributes"], [72, "attributes"], [92, "attributes"], [103, "attributes"], [110, "attributes"], [120, "attributes"], [125, "attributes"], [130, "attributes"], [132, "attributes"], [136, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [214, "attributes"], [215, "attributes"], [218, "attributes"], [219, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [225, "attributes"], [229, "attributes"], [230, "attributes"], [231, "attributes"], [233, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [242, "attributes"], [243, "attributes"], [244, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [256, "attributes"], [257, "attributes"], [258, "attributes"], [259, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [264, "attributes"], [265, "attributes"], [266, "attributes"], [267, "attributes"], [268, "attributes"], [269, "attributes"], [301, "attributes"], [370, "attributes"], [371, "attributes"], [372, "attributes"], [373, "attributes"], [374, "attributes"], [375, "attributes"], [376, "attributes"], [377, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [355, "backward-gradient-calculation"], [356, "backward-gradient-calculation"], [357, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"]], "Behavior": [[184, "behavior"], [185, "behavior"], [186, "behavior"], [261, "behavior"], [262, "behavior"], [263, "behavior"]], "Benefits": [[290, "benefits"]], "Binary Functions": [[323, null]], "Bottleneck Configuration": [[81, "bottleneck-configuration"], [82, "bottleneck-configuration"]], "Broadcasting Rules": [[350, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [26, "class-signature"], [40, "class-signature"], [45, "class-signature"], [46, "class-signature"], [59, "class-signature"], [63, "class-signature"], [68, "class-signature"], [72, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [83, "class-signature"], [92, "class-signature"], [103, "class-signature"], [110, "class-signature"], [120, "class-signature"], [125, "class-signature"], [130, "class-signature"], [132, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [227, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [242, "class-signature"], [243, "class-signature"], [244, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [257, "class-signature"], [258, "class-signature"], [259, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [271, "class-signature"], [274, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [301, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [273, "conclusion"], [288, "conclusion"], [289, "conclusion"], [290, "conclusion"], [300, "conclusion"], [369, "conclusion"], [379, "conclusion"]], "Configurations": [[45, "configurations"]], "Containers": [[144, null]], "Conv-BatchNorm-ReLU": [[205, null]], "ConvNeXt": [[25, null]], "ConvNeXt_V2": [[26, null]], "ConvNets": [[71, null], [134, "convnets"]], "Convolution Functions": [[159, null], [169, null]], "Convolution Layers": [[232, null], [241, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[349, null]], "Creating a Parameter": [[138, null]], "Creating a tensor with gradient tracking": [[301, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[379, "custom-pipelines"]], "Defining a Custom Optimizer": [[275, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[137, null]], "Defining a custom optimizer": [[274, null]], "DenseNet": [[40, null]], "Depthwise Separable Convolution": [[205, null]], "Description": [[104, "description"], [105, "description"], [106, "description"], [107, "description"], [108, "description"], [109, "description"], [121, "description"], [122, "description"], [123, "description"], [291, "description"]], "Dropout Functions": [[168, null], [169, null]], "Dropout Layers": [[240, null], [241, null]], "EfficientNet": [[45, null]], "EfficientNet Configurations": [[45, "id1"]], "EfficientNet_V2": [[46, null]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [64, "example"], [65, "example"], [66, "example"], [67, "example"], [79, "example"], [80, "example"], [160, "example"], [273, null], [273, null], [273, null], [288, "example"], [290, "example"], [293, "example"], [295, "example"], [296, "example"], [297, "example"], [298, "example"], [299, "example"], [300, null], [300, null], [300, null], [313, "example"], [314, "example"], [315, "example"], [316, "example"], [317, "example"], [319, "example"], [320, "example"], [321, "example"], [322, "example"], [324, "example"], [325, "example"], [326, "example"], [327, "example"], [328, "example"], [329, "example"], [330, "example"], [331, "example"], [333, "example"], [335, "example"], [337, "example"], [338, "example"], [339, "example"], [340, "example"], [341, "example"], [342, "example"], [343, "example"], [344, "example"], [345, "example"], [346, "example"], [347, "example"], [348, "example"], [351, "example"], [353, "example"], [357, "example"], [359, "example"], [361, "example"], [362, "example"], [364, "example"], [365, "example"], [366, "example"], [367, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[289, null]], "Example 2: Adding a new axis to a 2D tensor": [[289, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[289, null]], "Example Usage": [[10, "example-usage"], [60, "example-usage"], [61, "example-usage"], [62, "example-usage"], [69, "example-usage"], [70, "example-usage"], [72, "example-usage"], [73, "example-usage"], [74, "example-usage"], [75, "example-usage"], [116, "example-usage"], [117, "example-usage"], [118, "example-usage"], [119, "example-usage"], [124, "example-usage"], [196, "example-usage"], [368, "example-usage"], [369, "example-usage"], [379, "example-usage"]], "Example Use Cases": [[292, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [63, "examples"], [78, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [170, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [195, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [227, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [271, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [291, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [318, "examples"], [332, "examples"], [334, "examples"], [336, "examples"], [349, "examples"], [350, "examples"], [352, "examples"], [355, "examples"], [356, "examples"], [358, "examples"], [360, "examples"], [363, "examples"], [370, "examples"], [371, "examples"], [372, "examples"], [373, "examples"], [374, "examples"], [375, "examples"], [376, "examples"], [377, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [92, "forward-calculation"], [103, "forward-calculation"], [110, "forward-calculation"], [120, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [160, "forward-calculation"], [163, "forward-calculation"], [170, "forward-calculation"], [172, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [195, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [227, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [351, "forward-calculation"], [353, "forward-calculation"], [355, "forward-calculation"], [356, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [375, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"]], "Forward Pass": [[130, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [133, "function-signature"], [135, "function-signature"], [145, "function-signature"], [146, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [170, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [195, "function-signature"], [196, "function-signature"], [206, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [288, "function-signature"], [290, "function-signature"], [291, "function-signature"], [293, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [324, "function-signature"], [325, "function-signature"], [326, "function-signature"], [327, "function-signature"], [328, "function-signature"], [329, "function-signature"], [330, "function-signature"], [331, "function-signature"], [332, "function-signature"], [333, "function-signature"], [334, "function-signature"], [335, "function-signature"], [336, "function-signature"], [337, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [342, "function-signature"], [343, "function-signature"], [344, "function-signature"], [345, "function-signature"], [346, "function-signature"], [347, "function-signature"], [348, "function-signature"], [349, "function-signature"], [350, "function-signature"], [351, "function-signature"], [352, "function-signature"], [353, "function-signature"], [355, "function-signature"], [356, "function-signature"], [357, "function-signature"], [358, "function-signature"], [359, "function-signature"], [360, "function-signature"], [361, "function-signature"], [362, "function-signature"], [363, "function-signature"], [364, "function-signature"], [365, "function-signature"], [366, "function-signature"], [367, "function-signature"]], "Fused Layers": [[205, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[275, "getting-started"]], "How It Works": [[288, "how-it-works"], [290, "how-it-works"]], "Hyperparameter Configuration": [[90, "hyperparameter-configuration"], [91, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[378, null]], "Inception": [[59, null]], "InceptionNeXt": [[63, null]], "InceptionResNet": [[68, null]], "Indexing and slicing": [[301, null]], "Inspecting Optimizer State": [[275, null], [276, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null]], "Integration with lucid": [[3, "integration-with-lucid"], [273, "integration-with-lucid"], [300, "integration-with-lucid"], [379, "integration-with-lucid"]], "Iterating through a tensor": [[301, null]], "Key Components": [[3, "key-components"], [273, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [116, "key-features"], [117, "key-features"], [118, "key-features"], [119, "key-features"], [124, "key-features"], [275, "key-features"], [300, "key-features"]], "Key Transformations": [[379, "key-transformations"]], "Layer Configuration": [[84, "layer-configuration"], [85, "layer-configuration"], [86, "layer-configuration"], [87, "layer-configuration"], [88, "layer-configuration"], [89, "layer-configuration"]], "LeNet": [[72, null]], "Learn More": [[300, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[169, null], [171, null]], "Linear Layers": [[241, null], [245, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[169, null], [176, null]], "Loss Layers": [[241, null], [251, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Mathematical Expression": [[180, "mathematical-expression"], [360, "mathematical-expression"]], "Matrix Multiplication Rules": [[306, "matrix-multiplication-rules"]], "Metadata Captured": [[291, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [68, "methods"], [72, "methods"], [125, "methods"], [137, "methods"], [138, "methods"], [274, "methods"], [301, "methods"]], "MobileNet": [[76, null]], "MobileNet_V2": [[77, null]], "MobileNet_V3": [[78, null]], "Modules": [[241, null]], "Normalization Functions": [[169, null], [181, null]], "Normalization Layers": [[241, null], [260, null]], "Notes": [[10, "notes"]], "Optimizers": [[287, null]], "Organizing Models": [[273, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [68, "overview"], [69, "overview"], [70, "overview"], [72, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [77, "overview"], [78, "overview"], [93, "overview"], [94, "overview"], [95, "overview"], [96, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [111, "overview"], [112, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [273, "overview"], [275, "overview"], [300, "overview"], [379, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [135, "parameters"], [136, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [145, "parameters"], [146, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [170, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [218, "parameters"], [219, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [227, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [271, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [290, "parameters"], [291, "parameters"], [293, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"]], "Performing backpropagation": [[301, null]], "Pooling Functions": [[169, null], [190, null]], "Pooling Layers": [[241, null], [270, null]], "Potential Pitfalls": [[288, "potential-pitfalls"], [290, "potential-pitfalls"]], "Properties": [[138, "properties"], [301, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[294, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [203, "references"], [275, "references"]], "Regularization": [[162, "regularization"]], "ResNeSt": [[83, null]], "ResNeXt": [[103, null]], "ResNet": [[92, null]], "Return Values": [[360, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [133, "returns"], [135, "returns"], [145, "returns"], [146, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [170, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [195, "returns"], [196, "returns"], [204, "returns"], [206, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [220, "returns"], [288, "returns"], [290, "returns"], [293, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [331, "returns"], [332, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [343, "returns"], [344, "returns"], [345, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [355, "returns"], [356, "returns"], [357, "returns"], [358, "returns"], [359, "returns"], [361, "returns"], [362, "returns"], [363, "returns"], [364, "returns"], [365, "returns"], [366, "returns"], [367, "returns"]], "SENet": [[110, null]], "SKNet": [[120, null]], "See Also": [[275, "see-also"]], "Selective Kernel": [[205, null]], "Squeeze-and-Excitation": [[205, null]], "Summary Table": [[135, "summary-table"]], "Tensor Generating Functions": [[323, null]], "Tensor Operations": [[323, null]], "Tensor Utilites": [[354, null]], "Type Definitions": [[292, "type-definitions"]], "Unary Functions": [[323, null]], "Usage": [[4, "usage"], [55, "usage"], [56, "usage"], [57, "usage"], [58, "usage"], [136, "usage"], [196, "usage"], [288, "usage"], [289, "usage"], [290, "usage"], [355, "usage"], [368, "usage"], [369, "usage"], [379, "usage"]], "Use another Tensor as input": [[349, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[276, null]], "Using the Adadelta Optimizer": [[277, null]], "Using the Adagrad Optimizer": [[278, null]], "Using the Adam Optimizer": [[279, null]], "Using the AdamW Optimizer": [[280, null]], "Using the Adamax Optimizer": [[281, null]], "Using the NAdam Optimizer": [[282, null]], "Using the RAdam Optimizer": [[283, null]], "Using the RMSprop Optimizer": [[284, null]], "Using the Rprop Optimizer": [[285, null]], "Using the SGD Optimizer": [[286, null]], "Utility Functions": [[169, null], [194, null]], "VGGNet": [[125, null]], "Vision Layers": [[241, null], [272, null]], "Weight Initializations": [[207, null]], "Why Use Type Aliases?": [[292, null]], "Xception": [[130, null]], "ZFNet": [[132, null]], "alexnet": [[24, null]], "convnext_base": [[27, null]], "convnext_large": [[28, null]], "convnext_small": [[29, null]], "convnext_tiny": [[30, null]], "convnext_v2_atto": [[31, null]], "convnext_v2_base": [[32, null]], "convnext_v2_femto": [[33, null]], "convnext_v2_huge": [[34, null]], "convnext_v2_large": [[35, null]], "convnext_v2_nano": [[36, null]], "convnext_v2_pico": [[37, null]], "convnext_v2_tiny": [[38, null]], "convnext_xlarge": [[39, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[41, null]], "densenet_169": [[42, null]], "densenet_201": [[43, null]], "densenet_264": [[44, null]], "efficientnet_b0": [[47, null]], "efficientnet_b1": [[48, null]], "efficientnet_b2": [[49, null]], "efficientnet_b3": [[50, null]], "efficientnet_b4": [[51, null]], "efficientnet_b5": [[52, null]], "efficientnet_b6": [[53, null]], "efficientnet_b7": [[54, null]], "efficientnet_v2_l": [[55, null]], "efficientnet_v2_m": [[56, null]], "efficientnet_v2_s": [[57, null]], "efficientnet_v2_xl": [[58, null]], "inception_next_atto": [[64, null]], "inception_next_base": [[65, null]], "inception_next_small": [[66, null]], "inception_next_tiny": [[67, null]], "inception_resnet_v1": [[69, null]], "inception_resnet_v2": [[70, null]], "inception_v1": [[60, null]], "inception_v3": [[61, null]], "inception_v4": [[62, null]], "lenet_1": [[73, null]], "lenet_4": [[74, null]], "lenet_5": [[75, null]], "lucid.Tensor": [[301, null]], "lucid.abs": [[324, null]], "lucid.add": [[302, null]], "lucid.arange": [[313, null]], "lucid.arccos": [[325, null]], "lucid.arcsin": [[326, null]], "lucid.arctan": [[327, null]], "lucid.broadcast_to": [[350, null]], "lucid.clip": [[328, null]], "lucid.concatenate": [[351, null]], "lucid.cos": [[329, null]], "lucid.cosh": [[330, null]], "lucid.cube": [[331, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[314, null]], "lucid.div": [[303, null]], "lucid.dot": [[304, null]], "lucid.empty": [[315, null]], "lucid.empty_like": [[316, null]], "lucid.exp": [[332, null]], "lucid.eye": [[317, null]], "lucid.flatten": [[352, null]], "lucid.grad_enabled": [[288, null]], "lucid.hstack": [[353, null]], "lucid.inner": [[305, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.linspace": [[318, null]], "lucid.log": [[333, null]], "lucid.matmul": [[306, null]], "lucid.max": [[334, null]], "lucid.maximum": [[307, null]], "lucid.mean": [[335, null]], "lucid.meshgrid": [[355, null]], "lucid.min": [[336, null]], "lucid.minimum": [[308, null]], "lucid.models": [[134, null]], "lucid.mul": [[309, null]], "lucid.newaxis": [[289, null]], "lucid.nn": [[273, null]], "lucid.nn.functional": [[169, null]], "lucid.no_grad": [[290, null]], "lucid.ones": [[319, null]], "lucid.ones_like": [[320, null]], "lucid.optim": [[275, null]], "lucid.outer": [[310, null]], "lucid.pad": [[356, null]], "lucid.power": [[311, null]], "lucid.random": [[300, null]], "lucid.random.bernoulli": [[293, null]], "lucid.random.rand": [[295, null]], "lucid.random.randint": [[296, null]], "lucid.random.randn": [[297, null]], "lucid.random.seed": [[298, null]], "lucid.random.uniform": [[299, null]], "lucid.ravel": [[357, null]], "lucid.reciprocal": [[337, null]], "lucid.register_model": [[291, null]], "lucid.repeat": [[358, null]], "lucid.reshape": [[359, null]], "lucid.sign": [[338, null]], "lucid.sin": [[339, null]], "lucid.sinh": [[340, null]], "lucid.split": [[360, null]], "lucid.sqrt": [[341, null]], "lucid.square": [[342, null]], "lucid.squeeze": [[361, null]], "lucid.stack": [[362, null]], "lucid.sub": [[312, null]], "lucid.sum": [[343, null]], "lucid.tan": [[344, null]], "lucid.tanh": [[345, null]], "lucid.tensor": [[349, null]], "lucid.tile": [[363, null]], "lucid.trace": [[346, null]], "lucid.transforms": [[379, null]], "lucid.transpose": [[347, null]], "lucid.tril": [[364, null]], "lucid.triu": [[365, null]], "lucid.types": [[292, null]], "lucid.unsqueeze": [[366, null]], "lucid.var": [[348, null]], "lucid.vstack": [[367, null]], "lucid.zeros": [[321, null]], "lucid.zeros_like": [[322, null]], "mobilenet": [[79, null]], "mobilenet_v2": [[80, null]], "mobilenet_v3_large": [[81, null]], "mobilenet_v3_small": [[82, null]], "models.summarize": [[135, null]], "nn.AdaptiveAvgPool1d": [[261, null]], "nn.AdaptiveAvgPool2d": [[262, null]], "nn.AdaptiveAvgPool3d": [[263, null]], "nn.AlphaDropout": [[233, null]], "nn.AvgPool1d": [[264, null]], "nn.AvgPool2d": [[265, null]], "nn.AvgPool3d": [[266, null]], "nn.BCELoss": [[246, null]], "nn.BatchNorm1d": [[252, null]], "nn.BatchNorm2d": [[253, null]], "nn.BatchNorm3d": [[254, null]], "nn.Bilinear": [[242, null]], "nn.Buffer": [[136, null]], "nn.Conv1d": [[229, null]], "nn.Conv2d": [[230, null]], "nn.Conv3d": [[231, null]], "nn.ConvBNReLU1d": [[197, null]], "nn.ConvBNReLU2d": [[198, null]], "nn.ConvBNReLU3d": [[199, null]], "nn.CrossEntropyLoss": [[247, null]], "nn.DepthSeparableConv1d": [[200, null]], "nn.DepthSeparableConv2d": [[201, null]], "nn.DepthSeparableConv3d": [[202, null]], "nn.DropBlock": [[234, null]], "nn.DropPath": [[235, null]], "nn.Dropout": [[236, null]], "nn.Dropout1d": [[237, null]], "nn.Dropout2d": [[238, null]], "nn.Dropout3d": [[239, null]], "nn.ELU": [[214, null]], "nn.GELU": [[215, null]], "nn.GlobalResponseNorm": [[255, null]], "nn.HardSigmoid": [[216, null]], "nn.HardSwish": [[217, null]], "nn.HuberLoss": [[248, null]], "nn.Identity": [[243, null]], "nn.InstanceNorm1d": [[256, null]], "nn.InstanceNorm2d": [[257, null]], "nn.InstanceNorm3d": [[258, null]], "nn.LayerNorm": [[259, null]], "nn.LeakyReLU": [[218, null]], "nn.Linear": [[244, null]], "nn.MSELoss": [[249, null]], "nn.MaxPool1d": [[267, null]], "nn.MaxPool2d": [[268, null]], "nn.MaxPool3d": [[269, null]], "nn.Module": [[137, null]], "nn.ModuleDict": [[139, null]], "nn.ModuleList": [[140, null]], "nn.NLLLoss": [[250, null]], "nn.Parameter": [[138, null]], "nn.ParameterDict": [[141, null]], "nn.ParameterList": [[142, null]], "nn.ReLU": [[219, null]], "nn.ReLU6": [[220, null]], "nn.SELU": [[221, null]], "nn.SEModule": [[203, null]], "nn.ScaledDotProductAttention": [[227, null]], "nn.SelectiveKernel": [[204, null]], "nn.Sequential": [[143, null]], "nn.Sigmoid": [[222, null]], "nn.Softmax": [[223, null]], "nn.Swish": [[224, null]], "nn.Tanh": [[225, null]], "nn.Upsample": [[271, null]], "nn.functional.adaptive_avg_pool1d": [[184, null]], "nn.functional.adaptive_avg_pool2d": [[185, null]], "nn.functional.adaptive_avg_pool3d": [[186, null]], "nn.functional.alpha_dropout": [[161, null]], "nn.functional.avg_pool1d": [[187, null]], "nn.functional.avg_pool2d": [[188, null]], "nn.functional.avg_pool3d": [[189, null]], "nn.functional.batch_norm": [[179, null]], "nn.functional.bilinear": [[170, null]], "nn.functional.binary_cross_entropy": [[173, null]], "nn.functional.conv1d": [[156, null]], "nn.functional.conv2d": [[157, null]], "nn.functional.conv3d": [[158, null]], "nn.functional.cross_entropy": [[174, null]], "nn.functional.drop_block": [[162, null]], "nn.functional.drop_path": [[163, null]], "nn.functional.dropout": [[164, null]], "nn.functional.dropout1d": [[165, null]], "nn.functional.dropout2d": [[166, null]], "nn.functional.dropout3d": [[167, null]], "nn.functional.elu": [[145, null]], "nn.functional.gelu": [[146, null]], "nn.functional.global_response_norm": [[180, null]], "nn.functional.huber_loss": [[175, null]], "nn.functional.instance_norm": [[182, null]], "nn.functional.interpolate": [[195, null]], "nn.functional.layer_norm": [[183, null]], "nn.functional.leaky_relu": [[148, null]], "nn.functional.linear": [[172, null]], "nn.functional.max_pool1d": [[191, null]], "nn.functional.max_pool2d": [[192, null]], "nn.functional.max_pool3d": [[193, null]], "nn.functional.mse_loss": [[177, null]], "nn.functional.nll_loss": [[178, null]], "nn.functional.relu": [[149, null]], "nn.functional.rotate": [[196, null]], "nn.functional.scaled_dot_product_attention": [[155, null]], "nn.functional.selu": [[150, null]], "nn.functional.sigmoid": [[151, null]], "nn.functional.softmax": [[152, null]], "nn.functional.tanh": [[153, null]], "nn.functional.unfold": [[160, null]], "nn.init.constant": [[206, null]], "nn.init.kaiming_normal": [[208, null]], "nn.init.kaiming_uniform": [[209, null]], "nn.init.normal": [[210, null]], "nn.init.uniform": [[211, null]], "nn.init.xavier_normal": [[212, null]], "nn.init.xavier_uniform": [[213, null]], "optim.ASGD": [[276, null]], "optim.Adadelta": [[277, null]], "optim.Adagrad": [[278, null]], "optim.Adam": [[279, null]], "optim.AdamW": [[280, null]], "optim.Adamax": [[281, null]], "optim.NAdam": [[282, null]], "optim.Optimizer": [[274, null]], "optim.RAdam": [[283, null]], "optim.RMSprop": [[284, null]], "optim.Rprop": [[285, null]], "optim.SGD": [[286, null]], "resnest_101": [[84, null]], "resnest_14": [[85, null]], "resnest_200": [[86, null]], "resnest_26": [[87, null]], "resnest_269": [[88, null]], "resnest_50": [[89, null]], "resnest_50_1s4x24d": [[90, null]], "resnest_50_4s2x40d": [[91, null]], "resnet_1001": [[93, null]], "resnet_101": [[94, null]], "resnet_152": [[95, null]], "resnet_18": [[96, null]], "resnet_200": [[97, null]], "resnet_269": [[98, null]], "resnet_34": [[99, null]], "resnet_50": [[100, null]], "resnext_101_32x16d": [[104, null]], "resnext_101_32x32d": [[105, null]], "resnext_101_32x4d": [[106, null]], "resnext_101_32x8d": [[107, null]], "resnext_101_64x4d": [[108, null]], "resnext_50_32x4d": [[109, null]], "se_resnet_101": [[111, null]], "se_resnet_152": [[112, null]], "se_resnet_18": [[113, null]], "se_resnet_34": [[114, null]], "se_resnet_50": [[115, null]], "se_resnext_101_32x4d": [[116, null]], "se_resnext_101_32x8d": [[117, null]], "se_resnext_101_64x4d": [[118, null]], "se_resnext_50_32x4d": [[119, null]], "sk_resnet_18": [[121, null]], "sk_resnet_34": [[122, null]], "sk_resnet_50": [[123, null]], "sk_resnext_50_32x4d": [[124, null]], "transforms.CenterCrop": [[370, null]], "transforms.Compose": [[368, null]], "transforms.Normalize": [[371, null]], "transforms.RandomCrop": [[372, null]], "transforms.RandomGrayscale": [[373, null]], "transforms.RandomHorizontalFlip": [[374, null]], "transforms.RandomRotation": [[375, null]], "transforms.RandomVerticalFlip": [[376, null]], "transforms.Resize": [[377, null]], "transforms.ToTensor": [[369, null]], "vggnet_11": [[126, null]], "vggnet_13": [[127, null]], "vggnet_16": [[128, null]], "vggnet_19": [[129, null]], "wide_resnet_101": [[101, null]], "wide_resnet_50": [[102, null]], "xception": [[131, null]], "zfnet": [[133, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[324, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[277, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[278, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[279, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[281, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[280, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[184, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[185, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[186, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[261, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[262, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[263, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[302, "lucid.add", false]], "alexnet (class in lucid.models)": [[23, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[24, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[161, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[233, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[313, "lucid.arange", false]], "arccos() (in module lucid)": [[325, "lucid.arccos", false]], "arcsin() (in module lucid)": [[326, "lucid.arcsin", false]], "arctan() (in module lucid)": [[327, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[276, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[187, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[188, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[189, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[264, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[265, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[266, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[179, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[252, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[253, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[254, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[246, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[293, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[242, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[170, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[173, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[350, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[136, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[370, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[12, "lucid.linalg.cholesky", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[328, "lucid.clip", false]], "compose (class in lucid.transforms)": [[368, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[351, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[206, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[229, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[156, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[230, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[157, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[231, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[158, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[197, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[198, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[199, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[25, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[27, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[28, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[29, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[30, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[26, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[31, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[32, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[33, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[34, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[35, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[36, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[37, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[38, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[39, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[329, "lucid.cos", false]], "cosh() (in module lucid)": [[330, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[174, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[247, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[331, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[40, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[41, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[42, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[43, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[44, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[200, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[201, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[202, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[13, "lucid.linalg.det", false]], "diag() (in module lucid)": [[314, "lucid.diag", false]], "div() (in module lucid)": [[303, "lucid.div", false]], "dot() (in module lucid)": [[304, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[162, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[163, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[234, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[236, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[164, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[237, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[165, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[238, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[166, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[239, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[167, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[235, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[45, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[47, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[48, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[49, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[50, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[51, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[52, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[53, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[54, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[46, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[55, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[56, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[57, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[58, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[14, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[214, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[315, "lucid.empty", false]], "empty_like() (in module lucid)": [[316, "lucid.empty_like", false]], "exp() (in module lucid)": [[332, "lucid.exp", false]], "eye() (in module lucid)": [[317, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[352, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[215, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[146, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[255, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[288, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[216, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[217, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[353, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[175, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[248, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[243, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[59, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[64, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[65, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[66, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[67, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[69, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[70, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[60, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[61, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[62, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[63, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[68, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[305, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[182, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[256, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[257, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[258, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[195, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[16, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[208, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[209, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[183, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[259, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[148, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[218, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[72, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[73, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[74, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[75, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[244, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[172, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[318, "lucid.linspace", false]], "log() (in module lucid)": [[333, "lucid.log", false]], "lucid": [[10, "module-lucid", false]], "matmul() (in module lucid)": [[306, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[17, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[334, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[191, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[192, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[193, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[307, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[267, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[268, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[269, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[335, "lucid.mean", false]], "meshgrid() (in module lucid)": [[355, "lucid.meshgrid", false]], "min() (in module lucid)": [[336, "lucid.min", false]], "minimum() (in module lucid)": [[308, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[76, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[79, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[77, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[80, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[78, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[81, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[82, "lucid.models.mobilenet_v3_small", false]], "module": [[10, "module-lucid", false]], "module (class in lucid.nn)": [[137, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[139, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[140, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[177, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[249, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[309, "lucid.mul", false]], "nadam (class in lucid.optim)": [[282, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[178, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[250, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[290, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[18, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[210, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[371, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[319, "lucid.ones", false]], "ones_like() (in module lucid)": [[320, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[274, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[310, "lucid.outer", false]], "pad() (in module lucid)": [[356, "lucid.pad", false]], "parameter (class in lucid.nn)": [[138, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[141, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[142, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[19, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[311, "lucid.power", false]], "qr() (in module lucid.linalg)": [[20, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[283, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[295, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[296, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[297, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[372, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[373, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[374, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[375, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[376, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[357, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[337, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[291, "lucid.register_model", false]], "relu (class in lucid.nn)": [[219, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[149, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[220, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[358, "lucid.repeat", false]], "reshape() (in module lucid)": [[359, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[377, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[83, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[84, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[85, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[86, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[87, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[88, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[89, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[90, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[91, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[92, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[93, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[94, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[95, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[96, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[97, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[98, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[99, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[100, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[103, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[104, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[105, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[106, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[107, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[108, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[109, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[284, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[196, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[285, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[155, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[227, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[111, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[112, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[113, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[114, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[115, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[116, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[117, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[118, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[119, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[298, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[204, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[221, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[150, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[203, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[110, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[143, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[286, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[222, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[151, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[338, "lucid.sign", false]], "sin() (in module lucid)": [[339, "lucid.sin", false]], "sinh() (in module lucid)": [[340, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[121, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[122, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[123, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[124, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[120, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[223, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[152, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[21, "lucid.linalg.solve", false]], "split() (in module lucid)": [[360, "lucid.split", false]], "sqrt() (in module lucid)": [[341, "lucid.sqrt", false]], "square() (in module lucid)": [[342, "lucid.square", false]], "squeeze() (in module lucid)": [[361, "lucid.squeeze", false]], "stack() (in module lucid)": [[362, "lucid.stack", false]], "sub() (in module lucid)": [[312, "lucid.sub", false]], "sum() (in module lucid)": [[343, "lucid.sum", false]], "summarize() (in module lucid.models)": [[135, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[22, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[224, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[344, "lucid.tan", false]], "tanh (class in lucid.nn)": [[225, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[345, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[153, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[301, "lucid.Tensor", false]], "tensor() (in module lucid)": [[349, "lucid.tensor", false]], "tile() (in module lucid)": [[363, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[369, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[346, "lucid.trace", false]], "transpose() (in module lucid)": [[347, "lucid.transpose", false]], "tril() (in module lucid)": [[364, "lucid.tril", false]], "triu() (in module lucid)": [[365, "lucid.triu", false]], "unfold() (in module lucid.nn.functional)": [[160, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[211, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[299, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[366, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[271, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[348, "lucid.var", false]], "vggnet (class in lucid.models)": [[125, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[126, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[127, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[128, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[129, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[367, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[101, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[102, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[212, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[213, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[130, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[131, "lucid.models.xception", false]], "zeros() (in module lucid)": [[321, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[322, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[132, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[133, "lucid.models.zfnet", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[301, 1, 1, "", "Tensor"], [324, 2, 1, "", "abs"], [302, 2, 1, "", "add"], [313, 2, 1, "", "arange"], [325, 2, 1, "", "arccos"], [326, 2, 1, "", "arcsin"], [327, 2, 1, "", "arctan"], [350, 2, 1, "", "broadcast_to"], [328, 2, 1, "", "clip"], [351, 2, 1, "", "concatenate"], [329, 2, 1, "", "cos"], [330, 2, 1, "", "cosh"], [331, 2, 1, "", "cube"], [314, 2, 1, "", "diag"], [303, 2, 1, "", "div"], [304, 2, 1, "", "dot"], [315, 2, 1, "", "empty"], [316, 2, 1, "", "empty_like"], [332, 2, 1, "", "exp"], [317, 2, 1, "", "eye"], [352, 2, 1, "", "flatten"], [288, 2, 1, "", "grad_enabled"], [353, 2, 1, "", "hstack"], [305, 2, 1, "", "inner"], [318, 2, 1, "", "linspace"], [333, 2, 1, "", "log"], [306, 2, 1, "", "matmul"], [334, 2, 1, "", "max"], [307, 2, 1, "", "maximum"], [335, 2, 1, "", "mean"], [355, 2, 1, "", "meshgrid"], [336, 2, 1, "", "min"], [308, 2, 1, "", "minimum"], [309, 2, 1, "", "mul"], [290, 2, 1, "", "no_grad"], [319, 2, 1, "", "ones"], [320, 2, 1, "", "ones_like"], [310, 2, 1, "", "outer"], [356, 2, 1, "", "pad"], [311, 2, 1, "", "power"], [357, 2, 1, "", "ravel"], [337, 2, 1, "", "reciprocal"], [291, 2, 1, "", "register_model"], [358, 2, 1, "", "repeat"], [359, 2, 1, "", "reshape"], [338, 2, 1, "", "sign"], [339, 2, 1, "", "sin"], [340, 2, 1, "", "sinh"], [360, 2, 1, "", "split"], [341, 2, 1, "", "sqrt"], [342, 2, 1, "", "square"], [361, 2, 1, "", "squeeze"], [362, 2, 1, "", "stack"], [312, 2, 1, "", "sub"], [343, 2, 1, "", "sum"], [344, 2, 1, "", "tan"], [345, 2, 1, "", "tanh"], [349, 2, 1, "", "tensor"], [363, 2, 1, "", "tile"], [346, 2, 1, "", "trace"], [347, 2, 1, "", "transpose"], [364, 2, 1, "", "tril"], [365, 2, 1, "", "triu"], [366, 2, 1, "", "unsqueeze"], [348, 2, 1, "", "var"], [367, 2, 1, "", "vstack"], [321, 2, 1, "", "zeros"], [322, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "ConvNeXt"], [26, 1, 1, "", "ConvNeXt_V2"], [40, 1, 1, "", "DenseNet"], [45, 1, 1, "", "EfficientNet"], [46, 1, 1, "", "EfficientNet_V2"], [59, 1, 1, "", "Inception"], [63, 1, 1, "", "InceptionNeXt"], [68, 1, 1, "", "InceptionResNet"], [72, 1, 1, "", "LeNet"], [76, 1, 1, "", "MobileNet"], [77, 1, 1, "", "MobileNet_V2"], [78, 1, 1, "", "MobileNet_V3"], [83, 1, 1, "", "ResNeSt"], [103, 1, 1, "", "ResNeXt"], [92, 1, 1, "", "ResNet"], [110, 1, 1, "", "SENet"], [120, 1, 1, "", "SKNet"], [125, 1, 1, "", "VGGNet"], [130, 1, 1, "", "Xception"], [132, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [27, 2, 1, "", "convnext_base"], [28, 2, 1, "", "convnext_large"], [29, 2, 1, "", "convnext_small"], [30, 2, 1, "", "convnext_tiny"], [31, 2, 1, "", "convnext_v2_atto"], [32, 2, 1, "", "convnext_v2_base"], [33, 2, 1, "", "convnext_v2_femto"], [34, 2, 1, "", "convnext_v2_huge"], [35, 2, 1, "", "convnext_v2_large"], [36, 2, 1, "", "convnext_v2_nano"], [37, 2, 1, "", "convnext_v2_pico"], [38, 2, 1, "", "convnext_v2_tiny"], [39, 2, 1, "", "convnext_xlarge"], [41, 2, 1, "", "densenet_121"], [42, 2, 1, "", "densenet_169"], [43, 2, 1, "", "densenet_201"], [44, 2, 1, "", "densenet_264"], [47, 2, 1, "", "efficientnet_b0"], [48, 2, 1, "", "efficientnet_b1"], [49, 2, 1, "", "efficientnet_b2"], [50, 2, 1, "", "efficientnet_b3"], [51, 2, 1, "", "efficientnet_b4"], [52, 2, 1, "", "efficientnet_b5"], [53, 2, 1, "", "efficientnet_b6"], [54, 2, 1, "", "efficientnet_b7"], [55, 2, 1, "", "efficientnet_v2_l"], [56, 2, 1, "", "efficientnet_v2_m"], [57, 2, 1, "", "efficientnet_v2_s"], [58, 2, 1, "", "efficientnet_v2_xl"], [64, 2, 1, "", "inception_next_atto"], [65, 2, 1, "", "inception_next_base"], [66, 2, 1, "", "inception_next_small"], [67, 2, 1, "", "inception_next_tiny"], [69, 2, 1, "", "inception_resnet_v1"], [70, 2, 1, "", "inception_resnet_v2"], [60, 2, 1, "", "inception_v1"], [61, 2, 1, "", "inception_v3"], [62, 2, 1, "", "inception_v4"], [73, 2, 1, "", "lenet_1"], [74, 2, 1, "", "lenet_4"], [75, 2, 1, "", "lenet_5"], [79, 2, 1, "", "mobilenet"], [80, 2, 1, "", "mobilenet_v2"], [81, 2, 1, "", "mobilenet_v3_large"], [82, 2, 1, "", "mobilenet_v3_small"], [84, 2, 1, "", "resnest_101"], [85, 2, 1, "", "resnest_14"], [86, 2, 1, "", "resnest_200"], [87, 2, 1, "", "resnest_26"], [88, 2, 1, "", "resnest_269"], [89, 2, 1, "", "resnest_50"], [90, 2, 1, "", "resnest_50_1s4x24d"], [91, 2, 1, "", "resnest_50_4s2x40d"], [93, 2, 1, "", "resnet_1001"], [94, 2, 1, "", "resnet_101"], [95, 2, 1, "", "resnet_152"], [96, 2, 1, "", "resnet_18"], [97, 2, 1, "", "resnet_200"], [98, 2, 1, "", "resnet_269"], [99, 2, 1, "", "resnet_34"], [100, 2, 1, "", "resnet_50"], [104, 2, 1, "", "resnext_101_32x16d"], [105, 2, 1, "", "resnext_101_32x32d"], [106, 2, 1, "", "resnext_101_32x4d"], [107, 2, 1, "", "resnext_101_32x8d"], [108, 2, 1, "", "resnext_101_64x4d"], [109, 2, 1, "", "resnext_50_32x4d"], [111, 2, 1, "", "se_resnet_101"], [112, 2, 1, "", "se_resnet_152"], [113, 2, 1, "", "se_resnet_18"], [114, 2, 1, "", "se_resnet_34"], [115, 2, 1, "", "se_resnet_50"], [116, 2, 1, "", "se_resnext_101_32x4d"], [117, 2, 1, "", "se_resnext_101_32x8d"], [118, 2, 1, "", "se_resnext_101_64x4d"], [119, 2, 1, "", "se_resnext_50_32x4d"], [121, 2, 1, "", "sk_resnet_18"], [122, 2, 1, "", "sk_resnet_34"], [123, 2, 1, "", "sk_resnet_50"], [124, 2, 1, "", "sk_resnext_50_32x4d"], [135, 2, 1, "", "summarize"], [126, 2, 1, "", "vggnet_11"], [127, 2, 1, "", "vggnet_13"], [128, 2, 1, "", "vggnet_16"], [129, 2, 1, "", "vggnet_19"], [101, 2, 1, "", "wide_resnet_101"], [102, 2, 1, "", "wide_resnet_50"], [131, 2, 1, "", "xception"], [133, 2, 1, "", "zfnet"]], "lucid.nn": [[261, 1, 1, "", "AdaptiveAvgPool1d"], [262, 1, 1, "", "AdaptiveAvgPool2d"], [263, 1, 1, "", "AdaptiveAvgPool3d"], [233, 1, 1, "", "AlphaDropout"], [264, 1, 1, "", "AvgPool1d"], [265, 1, 1, "", "AvgPool2d"], [266, 1, 1, "", "AvgPool3d"], [246, 1, 1, "", "BCELoss"], [252, 1, 1, "", "BatchNorm1d"], [253, 1, 1, "", "BatchNorm2d"], [254, 1, 1, "", "BatchNorm3d"], [242, 1, 1, "", "Bilinear"], [136, 1, 1, "", "Buffer"], [229, 1, 1, "", "Conv1d"], [230, 1, 1, "", "Conv2d"], [231, 1, 1, "", "Conv3d"], [197, 1, 1, "", "ConvBNReLU1d"], [198, 1, 1, "", "ConvBNReLU2d"], [199, 1, 1, "", "ConvBNReLU3d"], [247, 1, 1, "", "CrossEntropyLoss"], [200, 1, 1, "", "DepthSeparableConv1d"], [201, 1, 1, "", "DepthSeparableConv2d"], [202, 1, 1, "", "DepthSeparableConv3d"], [234, 1, 1, "", "DropBlock"], [235, 1, 1, "", "DropPath"], [236, 1, 1, "", "Dropout"], [237, 1, 1, "", "Dropout1d"], [238, 1, 1, "", "Dropout2d"], [239, 1, 1, "", "Dropout3d"], [214, 1, 1, "", "ELU"], [215, 1, 1, "", "GELU"], [255, 1, 1, "", "GlobalResponseNorm"], [216, 1, 1, "", "HardSigmoid"], [217, 1, 1, "", "HardSwish"], [248, 1, 1, "", "HuberLoss"], [243, 1, 1, "", "Identity"], [256, 1, 1, "", "InstanceNorm1d"], [257, 1, 1, "", "InstanceNorm2d"], [258, 1, 1, "", "InstanceNorm3d"], [259, 1, 1, "", "LayerNorm"], [218, 1, 1, "", "LeakyReLU"], [244, 1, 1, "", "Linear"], [249, 1, 1, "", "MSELoss"], [267, 1, 1, "", "MaxPool1d"], [268, 1, 1, "", "MaxPool2d"], [269, 1, 1, "", "MaxPool3d"], [137, 1, 1, "", "Module"], [139, 1, 1, "", "ModuleDict"], [140, 1, 1, "", "ModuleList"], [250, 1, 1, "", "NLLLoss"], [138, 1, 1, "", "Parameter"], [141, 1, 1, "", "ParameterDict"], [142, 1, 1, "", "ParameterList"], [219, 1, 1, "", "ReLU"], [220, 1, 1, "", "ReLU6"], [221, 1, 1, "", "SELU"], [203, 1, 1, "", "SEModule"], [227, 1, 1, "", "ScaledDotProductAttention"], [204, 1, 1, "", "SelectiveKernel"], [143, 1, 1, "", "Sequential"], [222, 1, 1, "", "Sigmoid"], [223, 1, 1, "", "Softmax"], [224, 1, 1, "", "Swish"], [225, 1, 1, "", "Tanh"], [271, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[184, 2, 1, "", "adaptive_avg_pool1d"], [185, 2, 1, "", "adaptive_avg_pool2d"], [186, 2, 1, "", "adaptive_avg_pool3d"], [161, 2, 1, "", "alpha_dropout"], [187, 2, 1, "", "avg_pool1d"], [188, 2, 1, "", "avg_pool2d"], [189, 2, 1, "", "avg_pool3d"], [179, 2, 1, "", "batch_norm"], [170, 2, 1, "", "bilinear"], [173, 2, 1, "", "binary_cross_entropy"], [156, 2, 1, "", "conv1d"], [157, 2, 1, "", "conv2d"], [158, 2, 1, "", "conv3d"], [174, 2, 1, "", "cross_entropy"], [162, 2, 1, "", "drop_block"], [163, 2, 1, "", "drop_path"], [164, 2, 1, "", "dropout"], [165, 2, 1, "", "dropout1d"], [166, 2, 1, "", "dropout2d"], [167, 2, 1, "", "dropout3d"], [145, 2, 1, "", "elu"], [146, 2, 1, "", "gelu"], [180, 2, 1, "", "global_response_norm"], [175, 2, 1, "", "huber_loss"], [182, 2, 1, "", "instance_norm"], [195, 2, 1, "", "interpolate"], [183, 2, 1, "", "layer_norm"], [148, 2, 1, "", "leaky_relu"], [172, 2, 1, "", "linear"], [191, 2, 1, "", "max_pool1d"], [192, 2, 1, "", "max_pool2d"], [193, 2, 1, "", "max_pool3d"], [177, 2, 1, "", "mse_loss"], [178, 2, 1, "", "nll_loss"], [149, 2, 1, "", "relu"], [196, 2, 1, "", "rotate"], [155, 2, 1, "", "scaled_dot_product_attention"], [150, 2, 1, "", "selu"], [151, 2, 1, "", "sigmoid"], [152, 2, 1, "", "softmax"], [153, 2, 1, "", "tanh"], [160, 2, 1, "", "unfold"]], "lucid.nn.init": [[206, 2, 1, "", "constant"], [208, 2, 1, "", "kaiming_normal"], [209, 2, 1, "", "kaiming_uniform"], [210, 2, 1, "", "normal"], [211, 2, 1, "", "uniform"], [212, 2, 1, "", "xavier_normal"], [213, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[276, 1, 1, "", "ASGD"], [277, 1, 1, "", "Adadelta"], [278, 1, 1, "", "Adagrad"], [279, 1, 1, "", "Adam"], [280, 1, 1, "", "AdamW"], [281, 1, 1, "", "Adamax"], [282, 1, 1, "", "NAdam"], [274, 1, 1, "", "Optimizer"], [283, 1, 1, "", "RAdam"], [284, 1, 1, "", "RMSprop"], [285, 1, 1, "", "Rprop"], [286, 1, 1, "", "SGD"]], "lucid.random": [[293, 2, 1, "", "bernoulli"], [295, 2, 1, "", "rand"], [296, 2, 1, "", "randint"], [297, 2, 1, "", "randn"], [298, 2, 1, "", "seed"], [299, 2, 1, "", "uniform"]], "lucid.transforms": [[370, 1, 1, "", "CenterCrop"], [368, 1, 1, "", "Compose"], [371, 1, 1, "", "Normalize"], [372, 1, 1, "", "RandomCrop"], [373, 1, 1, "", "RandomGrayscale"], [374, 1, 1, "", "RandomHorizontalFlip"], [375, 1, 1, "", "RandomRotation"], [376, 1, 1, "", "RandomVerticalFlip"], [377, 1, 1, "", "Resize"], [369, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 57, 81, 82, 84, 85, 86, 87, 88, 89, 134, 135, 136, 137, 138, 139, 141, 142, 143, 155, 184, 185, 186, 204, 227, 247, 250, 261, 262, 263, 264, 267, 268, 273, 274, 275, 289, 291, 306, 314, 333, 335, 343, 346, 348, 349, 361, 369, 371, 379], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 45, 46, 55, 56, 57, 58, 61, 63, 68, 72, 79, 110, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 349, 351, 353, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379], "000": [5, 6, 7, 8, 315, 316], "0000": [247, 248, 250], "0001": 276, "000e": [315, 316], "001": [276, 279, 280, 282, 283, 286], "002": [281, 282], "004": 282, "005": 218, "008": [79, 134], "00808": 134, "01": [148, 218, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286], "01051757": 297, "013": [43, 134], "016": [93, 134], "0205": 247, "0217": 247, "0227": 247, "024": [115, 134], "026": [104, 134], "028": [109, 134], "0299": 247, "032": [55, 100, 134], "03545": 134, "044715": [146, 215], "0450": 247, "0451": 247, "046": [53, 134], "047": [127, 134], "04719755": 325, "0474259": 151, "048": [117, 134], "0480": 247, "04861": 134, "05": [179, 182, 183, 197, 198, 199, 218, 252, 253, 254, 256, 257, 258, 259], "0507": [150, 221], "06": [25, 63, 180, 255, 277, 285], "066": [37, 134], "069": [87, 98, 134], "07": [162, 173, 174, 234, 246, 247], "0700": 247, "0706508": 225, "071": [93, 134], "0721": 247, "073": [123, 134], "07722396": 224, "0794": 250, "08": [279, 280, 281, 282, 283, 284], "0802": 250, "083": [67, 134], "08333333": 19, "085537": 332, "088": [115, 134], "08955": 134, "0900": [223, 247], "096": [131, 134], "0986": [152, 223], "09861229": 333, "0992": 247, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 116, 117, 118, 119, 120, 124, 125, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 40, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 125, 132, 133, 134, 135, 139, 140, 143, 157, 158, 170, 172, 184, 229, 230, 231, 238, 239, 242, 244, 253, 254, 257, 261, 265, 266, 268, 278, 291, 296, 299, 300, 303, 306, 309, 310, 318, 327, 343, 370, 372, 373, 375], "100": [6, 24, 55, 56, 57, 58, 126, 127, 128, 129, 134, 291, 379], "1000": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "1000000": 276, "1001": [93, 134, 247], "1003": 247, "1007": 134, "10096": 134, "101": [83, 84, 94, 101, 104, 105, 106, 107, 108, 111, 116, 117, 118, 134], "10106": 134, "1014": 150, "102": [98, 134], "1025": [140, 143], "1026": [140, 143], "1027": [140, 143], "10499": 151, "1050": 222, "1054": 250, "1056": [140, 143], "10590": 134, "108": [56, 134], "1097": 134, "11": [96, 113, 125, 126, 134, 170, 229, 230, 231, 238, 242, 253, 254, 257, 265, 266, 268, 306, 370, 371, 372, 373, 375], "110": [88, 134], "1105": 134, "1109": 134, "111": [49, 134], "1111": 246, "112": [81, 89, 134], "1134": 170, "114b": 373, "119": 170, "1192": [151, 152, 223], "12": [40, 41, 42, 43, 44, 50, 73, 74, 134, 141, 170, 186, 229, 230, 231, 238, 239, 242, 253, 254, 257, 263, 265, 266, 268, 306, 310, 311, 370, 372, 373, 375], "120": [55, 72, 75, 81, 82, 134], "121": [40, 41, 134], "123": [208, 209, 210, 211, 212, 213, 298, 299], "124": [208, 209, 212, 213], "125": 266, "1250": 248, "1251": 134, "1258": 134, "126": [101, 134], "128": [25, 30, 53, 69, 92, 101, 102, 125, 134, 143, 204, 368, 379], "1280": 78, "128x128": [368, 379], "13": [60, 125, 127, 134, 170, 229, 230, 231, 242, 254, 265, 266, 268, 306, 370, 372, 373, 375], "1314": 134, "132": [126, 134], "1324": 134, "133": [127, 134], "136": [57, 134], "138": [128, 134], "14": [42, 85, 134, 229, 230, 231, 238, 239, 242, 254, 265, 266, 268, 292, 306, 310, 370, 372, 373, 375], "1409": 134, "143": [129, 134], "144": 82, "145": 170, "148": [29, 134], "149": [42, 93, 134], "15": [0, 36, 134, 170, 229, 230, 231, 242, 254, 265, 266, 268, 306, 310, 346, 370, 372, 373, 375, 379], "1513": 250, "152": [95, 112, 134], "155": 306, "1556": 134, "156": [64, 134], "1588": [146, 215], "16": [40, 41, 72, 75, 78, 81, 82, 104, 110, 125, 128, 134, 140, 141, 143, 155, 185, 186, 197, 198, 199, 203, 204, 227, 229, 230, 231, 238, 239, 242, 253, 254, 262, 263, 265, 266, 268, 273, 306, 310, 341, 370, 372, 373, 375], "160": [81, 94, 134], "16227766": 20, "16425": 250, "1643": 246, "166": 306, "167": 217, "169": [40, 42, 134], "17": [87, 134, 229, 230, 231, 242, 254, 266, 305, 370, 372, 373, 375], "170": 170, "1704": 134, "17520119": 340, "177": [106, 134], "18": [74, 96, 113, 121, 134, 229, 230, 231, 238, 242, 254, 266, 309, 310, 370, 372, 373, 375], "1800": 247, "184": 81, "18877099": 224, "19": [51, 125, 129, 134, 157, 158, 170, 230, 231, 254, 304, 306], "192": [25, 26, 63, 73, 74, 95, 134], "194": [104, 134], "196": [39, 134], "1966": [152, 222, 223], "197": [28, 35, 134], "198": [81, 134], "1998": [134, 247], "1_53": 134, "1d": [156, 184, 187, 191, 197, 200, 252, 256, 261, 299, 306, 314, 346, 355, 356, 357, 358, 363], "1e": [25, 63, 162, 173, 174, 179, 180, 182, 183, 197, 198, 199, 234, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "1e6": 276, "1s4x24d": 90, "1st": [23, 132], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 45, 46, 55, 56, 57, 58, 73, 74, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 113, 121, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "20": [0, 5, 6, 7, 8, 43, 134, 139, 140, 143, 230, 231, 238, 254, 310, 332], "200": [81, 86, 97, 134], "2004": 134, "201": [43, 86, 134], "2011": 203, "2012": 134, "2014": 134, "2015": 134, "2016": 134, "2017": 134, "2018": [134, 203], "2019": 134, "2020": 134, "2021": 134, "2022": 134, "2023": [134, 203], "2024": 134, "2039": 250, "204": 231, "21": [57, 99, 114, 134, 141, 170, 230, 231, 254, 310], "210": [58, 134], "211": 306, "21841": [34, 39], "22": [69, 131, 134, 170, 230, 231, 238, 254, 304, 306], "2201": 134, "221": [58, 134], "2231": [247, 250], "224": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 125, 132, 134], "2247": [252, 253, 254, 256, 257, 258, 259], "224x224": [45, 60, 116, 117, 118, 119, 124], "226": 306, "22752314": 297, "2278": 134, "23": [84, 94, 101, 104, 105, 106, 107, 108, 111, 230, 231, 254], "2301": 134, "232": [79, 118, 134], "2324": [134, 221], "233": [33, 134], "234": [208, 209, 210, 211, 212, 213, 299], "235": [50, 134], "238": [82, 134], "23840584": 224, "24": [40, 41, 78, 81, 82, 86, 90, 97, 170, 185, 230, 231, 238, 254, 262, 310], "240": [33, 81, 82, 129, 134], "240x240": 45, "2424": [152, 223], "2447": 223, "246": [73, 134], "24d": 90, "25": [0, 90, 100, 109, 121, 134, 151, 163, 222, 231, 249, 254, 265, 266, 303, 318, 337, 348], "2500": [246, 248, 250], "2512": 214, "2547": 221, "256": [25, 92, 125], "26": [87, 134, 141, 172, 231, 244, 254, 310], "260": 134, "260x260": 45, "26325684": 297, "264": [44, 134], "2689": [152, 222, 223], "26894142": 224, "269": [88, 98, 134], "27": [89, 119, 134, 170, 229, 231, 254, 331], "272": [108, 134], "274": [84, 124, 134], "276": [208, 209, 212, 213], "28": [30, 38, 67, 73, 74, 115, 134, 170, 231, 310], "280": [37, 134], "288": [82, 86, 134], "289": [34, 47, 134], "28x28": [7, 8, 73, 74], "29": [124, 134, 231], "299": [130, 134], "299r": 373, "299x299": [61, 62, 69, 70], "2_i": [256, 257, 258], "2d": [157, 166, 185, 188, 192, 198, 201, 253, 257, 262, 306, 314, 317, 346, 352, 355, 356, 358, 363, 375], "2e": 281, "2nd": [23, 132], "2x": 91, "2x2": [160, 370, 372], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 132, 134, 136, 137, 138, 140, 141, 142, 143, 146, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377], "30": [52, 61, 88, 91, 98, 134, 140, 196, 231, 375], "300": 134, "300x300": 45, "302": [56, 134], "3026": 250, "30823025": 224, "31": [170, 231, 306], "310": [315, 316], "31622777": 20, "319": 134, "32": [40, 42, 43, 75, 83, 84, 85, 86, 87, 88, 89, 104, 105, 106, 107, 109, 134, 140, 143, 170, 172, 185, 197, 198, 199, 203, 204, 230, 231, 244, 262, 273, 304, 305, 310], "320": [87, 134], "321": [208, 209, 212, 213], "326": [111, 134], "32x16d": 134, "32x32": [5, 6, 72, 75], "32x32d": 134, "32x4d": [116, 119, 124, 134], "32x8d": [117, 134], "33": [44, 134, 140, 143, 172, 231, 244], "33333333": 19, "336": [28, 107, 126, 134], "337": [44, 134], "34": [99, 114, 122, 134, 140, 143, 170, 231, 306, 310], "342": [208, 209, 212, 213], "344": [51, 134], "345": [208, 209, 210, 211, 212, 213, 299], "35": [70, 134, 140, 143, 231], "350": [39, 134], "352": [60, 134], "355": [54, 134], "3567": [246, 250], "357": [128, 133, 134], "36": [86, 95, 97, 112, 231], "3679": [145, 150, 214], "368": [121, 123, 134], "36th": 134, "37": 229, "370": [49, 134], "372": 170, "375": 249, "3750": 248, "37754067": 224, "378": [74, 134], "380": 134, "380x380": 45, "38344152": 295, "384": [25, 26, 63], "38629436": 333, "389056": 332, "38th": 134, "392": [61, 134], "393": [52, 60, 134], "3935": 214, "3d": [158, 167, 186, 189, 193, 199, 202, 231, 254, 258, 263], "3x3": [134, 300], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 40, 45, 63, 64, 72, 73, 74, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 114, 115, 122, 123, 134, 135, 141, 143, 155, 156, 157, 158, 160, 162, 163, 165, 166, 167, 170, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 279, 283, 284, 286, 289, 292, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 320, 322, 328, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377], "40": [62, 78, 81, 82, 91, 134], "400": [31, 75, 134], "4044": 246, "4076": 247, "4096": [23, 132], "40d": 91, "41421356": 12, "416": [98, 116, 134], "41666667": 19, "417": [91, 134], "41808962": 297, "419974": 153, "4199743": 225, "42": [170, 203, 292, 300], "421": [208, 209, 212, 213], "423": [208, 209, 210, 211], "42718872": 20, "4278": 134, "4284": 134, "4286": 246, "43": [53, 134, 304, 306], "431": [66, 134], "432": [52, 134], "4323": 214, "4375": 248, "43758721": 295, "44": [94, 106, 134], "440": [57, 134], "4472136": 14, "448": [54, 134], "4495": [254, 258], "45": [122, 134, 170, 196, 375], "4510": 134, "4520": 134, "4545": 233, "455": [108, 134], "456": 134, "456x456": 45, "46": [29, 134], "464": [27, 91, 134], "468": [105, 134], "4700": 134, "4708": 134, "47112767": 327, "472": [105, 134], "48": [40, 43, 44, 82, 84, 88, 98, 116, 134, 172, 244], "480": [42, 81, 134], "481": [81, 134], "483": [89, 134], "49": [66, 111, 134], "496": [38, 134], "4979": 214, "4s2x40d": [91, 134], "4x": 90, "4x4": 377, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 25, 33, 45, 47, 61, 72, 73, 74, 75, 78, 81, 82, 120, 121, 122, 123, 132, 134, 135, 137, 138, 139, 140, 141, 143, 146, 151, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 175, 177, 179, 182, 183, 184, 187, 188, 195, 197, 198, 199, 204, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 268, 269, 285, 289, 292, 293, 296, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 322, 324, 325, 326, 334, 335, 336, 337, 338, 343, 346, 347, 348, 349, 353, 355, 359, 360, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "50": [5, 6, 83, 89, 90, 91, 92, 100, 102, 109, 115, 119, 123, 124, 134, 172, 244, 285, 304, 306, 318, 373, 374, 376, 379], "5000": [246, 248, 250], "504": [80, 134], "50_1s4x24d": 134, "510": 134, "5108": 250, "512": [25, 70, 92, 96, 122, 134], "519": 134, "520": [64, 134], "52359878": 326, "528": 134, "528x528": 45, "53": [170, 305], "530": [105, 134], "536": [50, 134], "537": [82, 134], "543": [208, 209, 210, 211, 212, 213, 299], "54308063": 330, "544": [66, 128, 134], "545": 311, "5455": 233, "549": [94, 134], "55": [56, 134], "557": [100, 134], "559": [119, 134], "560": [48, 85, 134], "563": [208, 209, 212, 213], "5672": 134, "568": [58, 134], "5683": 134, "569": [117, 134], "57": [123, 134, 170], "57079633": [325, 326], "57366333": 298, "576": 82, "586": [62, 134], "587g": 373, "589": [30, 134], "591": [27, 134], "592": [113, 134], "5987": 134, "5995": 134, "5th": [23, 132], "6": [11, 19, 23, 25, 40, 41, 42, 43, 44, 45, 63, 72, 75, 83, 89, 92, 99, 100, 102, 109, 114, 115, 122, 123, 132, 141, 142, 156, 157, 158, 160, 162, 167, 170, 172, 180, 184, 209, 213, 216, 220, 229, 230, 231, 234, 236, 237, 238, 239, 242, 244, 246, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 266, 268, 269, 277, 285, 289, 292, 299, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 334, 335, 336, 343, 346, 347, 348, 349, 353, 358, 359, 360, 364, 365, 367, 369, 370, 371, 372, 373, 375, 377], "60": [5, 6, 95, 134], "600": [45, 134], "600x600": 45, "6052": 250, "6065": 214, "608": [133, 134], "61": [24, 75, 134], "6105": 134, "611": [85, 134], "6114": 134, "6124": [252, 253, 254, 256, 257, 258, 259], "617": [55, 134], "62": [133, 134, 170], "623": [36, 134], "62686041": 340, "630": 134, "6321": [145, 214], "63245553": 20, "635": [38, 134], "636": [47, 134], "64": [25, 40, 44, 78, 81, 83, 84, 85, 86, 87, 88, 89, 92, 97, 108, 120, 125, 134, 140, 143, 170, 203, 204], "640": [34, 51, 134], "645": 134, "64589411": 295, "647": [121, 134], "64x4d": [118, 134], "654": [208, 209, 210, 211, 212, 213, 299], "657": [208, 209, 212, 213], "6590": [152, 223], "66": [54, 112, 134], "660": [34, 134], "6652": 223, "66666667": 19, "6667": 246, "667": [129, 134], "6682": 246, "669": [97, 134], "67": 306, "672": [81, 99, 134], "67326": 221, "6733": 150, "676": [90, 134], "678": [208, 209, 210, 211, 212, 213], "68811989": 297, "689": [96, 134], "69314718": 333, "696": [101, 134], "7": [18, 41, 48, 125, 134, 141, 156, 157, 158, 160, 162, 167, 170, 172, 173, 174, 184, 204, 215, 220, 221, 222, 225, 229, 230, 231, 234, 238, 239, 242, 244, 246, 247, 249, 253, 254, 257, 258, 261, 265, 266, 268, 269, 292, 293, 296, 299, 302, 304, 305, 306, 310, 312, 314, 318, 332, 335, 343, 346, 347, 348, 360, 363, 364, 365, 369, 370, 371, 372, 373, 375, 377], "70": [7, 8, 86, 134], "7001": 247, "704": [44, 106, 134], "706": [75, 134], "70710678": [14, 339], "708": [31, 134], "7132": 134, "7141": 134, "7147": 250, "717": [32, 134], "7182818": 332, "72": [78, 81, 82], "726791": 134, "7311": [152, 222, 223], "739": [69, 134], "74": 306, "748": [65, 134], "75": [172, 244, 249, 276, 318], "7581": 150, "760": [84, 124, 134], "76159416": [224, 345], "7616": [153, 225], "76219569": 330, "7635": 221, "767": [28, 134], "768": [25, 26, 63], "770": 134, "772": 311, "778": [113, 134], "78": [102, 134], "78357324": 297, "78539816": 327, "791": [107, 134], "79172504": 295, "792": [104, 134], "795": [48, 134], "797": [99, 134], "7x7": 132, "8": [17, 21, 40, 45, 88, 92, 95, 98, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 135, 140, 141, 143, 155, 156, 157, 158, 160, 162, 167, 170, 172, 173, 184, 185, 186, 197, 198, 199, 203, 215, 216, 221, 222, 225, 227, 229, 230, 231, 234, 236, 237, 238, 239, 242, 244, 246, 249, 253, 254, 257, 258, 261, 262, 263, 265, 266, 268, 269, 279, 280, 281, 282, 283, 284, 292, 293, 296, 303, 304, 305, 306, 310, 311, 313, 314, 331, 335, 343, 346, 347, 348, 360, 364, 365, 369, 370, 371, 372, 373, 375, 377], "80": [5, 6, 7, 8, 81], "800": [32, 36, 134], "8005": 247, "808": [95, 134], "817": [61, 134], "818": 134, "8182": 233, "82": 170, "821": [112, 134], "83": [108, 134], "832": [67, 134], "833": 134, "84": [72, 74, 75], "840": [24, 35, 65, 134], "8413": [146, 215], "847": [70, 134], "848": [112, 127, 134], "856": [41, 134], "85772238": 224, "8584": 221, "86": [65, 134], "862": [131, 134], "863": [126, 134], "864": [97, 134], "868": [114, 134], "872": [80, 90, 111, 134], "876": [208, 209, 212, 213, 299], "88": [27, 32, 82, 107, 118, 134], "8808": [152, 222, 223], "884": [29, 134], "886": [101, 134], "887": 311, "891773": 295, "89442719": 14, "895": [122, 134], "896": [119, 134], "9": [0, 1, 3, 8, 21, 25, 26, 37, 49, 63, 134, 157, 160, 162, 170, 172, 184, 229, 230, 231, 234, 238, 242, 244, 246, 253, 254, 257, 261, 265, 266, 268, 276, 277, 279, 280, 281, 282, 283, 284, 286, 292, 293, 296, 299, 302, 306, 310, 311, 312, 314, 341, 342, 364, 365, 369, 370, 371, 372, 373, 375], "904": [109, 134], "90709145": 298, "9091": 233, "9120": 250, "9163": 250, "928": [43, 134], "929": [88, 134], "93": [117, 134], "94": 93, "9486833": 20, "949e": [315, 316], "9526": 151, "9545": 215, "955": [116, 134], "956": [35, 134], "958": [114, 134], "96": [25, 26, 63, 82], "960": 81, "96366276": 295, "9640": 225, "96402758": 345, "968": [39, 134], "973": [102, 134], "978": [41, 134], "984": [62, 118, 134], "99": 284, "9957": 250, "99734545": 298, "999": [0, 279, 280, 281, 282, 283], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 46, 68, 72, 76, 83, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 125, 126, 127, 128, 129, 134, 137, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 174, 178, 179, 180, 182, 183, 195, 204, 227, 233, 234, 236, 237, 238, 239, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 293, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 375], "As": 298, "At": 271, "Be": 0, "By": [0, 2, 3, 10, 93, 94, 95, 96, 97, 98, 99, 100, 138, 196, 273, 283, 289, 293, 295, 296, 297, 299, 369, 379], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 143, 145, 146, 148, 149, 150, 151, 153, 170, 172, 195, 208, 209, 212, 213, 221, 229, 230, 231, 242, 244, 252, 253, 254, 256, 257, 258, 273, 275, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 332, 333, 334, 335, 336, 339, 341, 343, 346, 347, 348, 356, 358, 361, 363, 366, 379], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 92, 135, 137, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 153, 155, 156, 157, 158, 163, 167, 170, 172, 179, 182, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208, 209, 227, 229, 230, 231, 235, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 279, 280, 284, 285, 291, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 373, 374, 376, 377], "In": [3, 10, 19, 156, 157, 158, 247, 250, 288, 289, 290, 368, 379], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 25, 26, 38, 41, 42, 43, 44, 59, 60, 61, 72, 73, 74, 75, 77, 78, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 113, 125, 131, 134, 137, 139, 140, 141, 142, 143, 163, 167, 170, 195, 196, 197, 198, 199, 203, 215, 216, 219, 220, 225, 227, 235, 242, 243, 246, 247, 248, 249, 250, 261, 262, 263, 271, 273, 274, 275, 276, 282, 284, 285, 286, 289, 298, 302, 303, 304, 307, 308, 309, 311, 312, 318, 334, 336, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369], "Its": [21, 300], "Near": 19, "No": [160, 163], "Not": 243, "One": [73, 379], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "There": 359, "These": [4, 10, 11, 14, 17, 20, 22, 55, 56, 57, 58, 101, 102, 121, 122, 123, 131, 134, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 285, 292, 300, 379], "To": [3, 134, 275, 293, 297, 300, 315, 316, 355, 379], "With": [3, 160, 163, 369, 379], "_": [17, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 153, 172, 195, 253, 254, 256, 257, 258, 264, 265, 266, 267, 268, 269, 276, 277, 279, 280, 281, 282, 284, 286, 304, 305, 306, 310, 346, 347, 364, 365, 370, 371, 372, 374, 375, 376], "_1": [14, 139, 140, 141, 142, 143, 170, 242, 310, 351, 353, 367], "_2": [14, 139, 140, 141, 142, 143, 170, 242, 310, 351, 353, 367], "__call__": [1, 137], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 25, 26, 45, 46, 59, 63, 68, 72, 76, 77, 78, 83, 125, 132, 135, 136, 137, 138, 139, 140, 141, 142, 163, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 301, 368, 369], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 274, "__setattr__": 137, "_activ": 152, "_arraylik": [292, 314, 316, 320, 322], "_arraylikeint": 356, "_arrayorscalar": [136, 138, 292, 293, 301, 349], "_base_activ": 72, "_base_dtyp": [313, 315, 318, 319, 321], "_block": 234, "_c": 371, "_decai": 282, "_fanmod": [208, 209], "_grad_en": [288, 290], "_i": [14, 18, 152, 163, 170, 223, 235, 249, 252, 259, 264, 267, 304, 305, 307, 308, 310, 311, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 353, 358, 361, 366, 367], "_in": [208, 209, 212, 213], "_interpolatetyp": 271, "_j": [152, 223, 264, 267, 310, 335, 343, 347, 348], "_k": 362, "_left": 195, "_make_lay": 125, "_mlphead": 63, "_modul": 137, "_n": [14, 139, 140, 141, 142, 143, 351, 353, 367], "_numpyarrai": 292, "_out": [208, 209, 212, 213, 358, 363], "_p": 18, "_pad": 356, "_paddingstr": [197, 198, 199, 200, 201, 202, 229, 230, 231], "_paramet": 137, "_reductiontyp": [173, 174, 175, 177, 178, 246, 247, 248, 249, 250], "_resnestbottleneck": 83, "_right": 195, "_scalar": [155, 206, 210, 211, 212, 213, 227, 292, 313, 318, 328], "_seresnetbottleneck": [111, 112, 115], "_seresnetmodul": [113, 114], "_shapelik": [135, 183, 259, 292, 296, 319, 321, 350, 359, 361, 366], "_size": [184, 185, 186, 234], "_skresnetmodul": [121, 122, 123], "_slope": 218, "_statedict": 274, "_t": [283, 284], "_tensor": [136, 138, 314, 349], "_tensorop": 301, "_u": 19, "_v": 19, "_valu": [328, 356], "_width": 356, "a_1": 360, "a_2": 360, "a_i": [307, 308, 311, 360], "a_k": 360, "aaai": 134, "ab": 323, "abc": [2, 274], "abil": [10, 134, 379], "about": [10, 135], "abov": [10, 288, 290, 298, 314, 317, 364], "absolut": [17, 18, 175, 281, 324], "abstract": [2, 3, 273, 274, 275, 276, 284, 286], "abstractmethod": 274, "abund": 34, "acceler": [134, 221, 252, 253, 254, 276, 282, 284, 286], "accept": [243, 295, 301], "access": [0, 2, 3, 4, 5, 6, 7, 8, 104, 105, 106, 107, 108, 109, 136, 138, 139, 140, 141, 142, 143, 359], "accord": [163, 195, 229, 230, 231, 242, 244, 247, 250, 277, 278, 279, 280, 281, 282, 283, 347, 350], "accordingli": 13, "account": [17, 19, 20, 224], "accumul": [276, 277, 278, 302, 303, 307, 308, 309, 312, 350], "accur": 112, "accuraci": [32, 34, 35, 36, 37, 55, 56, 57, 58, 65, 67, 76, 77, 78, 115, 134], "achiev": [103, 104, 105, 106, 107, 108, 109, 134, 156, 157, 158, 184, 261, 262, 263, 282, 374, 376], "across": [0, 5, 6, 25, 38, 79, 134, 136, 140, 143, 180, 183, 184, 185, 186, 212, 213, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 292, 293, 295, 296, 297, 298, 299, 300, 315, 316, 335, 348], "act": 280, "activ": [10, 23, 25, 72, 81, 82, 93, 97, 98, 110, 125, 132, 134, 139, 143, 145, 146, 148, 149, 150, 151, 152, 153, 161, 197, 198, 199, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 234, 236, 237, 238, 239, 246, 247, 250, 252, 253, 254, 259, 334, 336], "actual": [138, 246, 247, 249, 250, 301, 372], "ad": [40, 78, 92, 137, 139, 140, 141, 142, 143, 156, 157, 158, 162, 170, 172, 173, 174, 179, 180, 182, 183, 187, 188, 189, 191, 192, 193, 197, 198, 199, 229, 230, 231, 234, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 282, 283, 284, 291, 366, 379], "adadelta": 287, "adagrad": [277, 287], "adam": [134, 280, 281, 282, 283, 287], "adamax": 287, "adamw": 287, "adapt": [23, 59, 72, 83, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 134, 184, 185, 186, 203, 204, 261, 262, 263, 277, 278, 279, 282, 283, 284, 285], "adaptive_avg_pool1d": [169, 190, 261], "adaptive_avg_pool2d": [169, 190, 262], "adaptive_avg_pool3d": [169, 190, 263], "adaptiveavgpool1d": [241, 270], "adaptiveavgpool2d": [23, 110, 125, 132, 241, 270], "adaptiveavgpool3d": [241, 270], "add": [4, 137, 139, 140, 143, 170, 172, 229, 230, 231, 242, 244, 259, 274, 276, 279, 284, 286, 289, 323, 356, 366], "add_modul": [137, 143], "add_param_group": 274, "addit": [4, 10, 17, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 137, 140, 143, 170, 172, 179, 182, 242, 244, 252, 253, 254, 256, 257, 258, 276, 282, 289, 300, 302, 362], "addition": 282, "address": [247, 250, 279, 280, 283], "adjust": [69, 76, 78, 79, 116, 117, 118, 119, 120, 124, 184, 185, 186, 204, 233, 234, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 275, 279, 283, 284, 285, 353, 367], "advanc": [3, 19, 46, 63, 77, 97, 134, 140, 143, 156, 157, 158, 184, 185, 186, 261, 262, 263, 273, 276], "advantag": [70, 290], "affect": [288, 357, 361, 368], "affin": [197, 198, 199, 252, 253, 254, 256, 257, 258, 259, 375], "after": [17, 23, 81, 82, 132, 138, 139, 140, 141, 142, 143, 167, 203, 204, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 230, 231, 233, 236, 237, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 280, 290, 301, 302, 303, 307, 308, 309, 311, 312, 318, 356, 360, 369], "afterward": 290, "aggreg": [134, 204, 310, 358, 363], "aim": [4, 10], "al": [60, 134], "alex": [5, 6, 134], "alexnet": [71, 132, 134], "algebra": [10, 11, 317], "algorithm": [7, 10, 17, 19, 20, 274, 275, 300], "align": [21, 195, 271, 305, 306], "align_corn": [195, 271], "all": [0, 3, 4, 10, 20, 45, 134, 137, 139, 140, 141, 142, 143, 157, 158, 184, 185, 186, 188, 189, 192, 193, 195, 198, 199, 204, 218, 219, 231, 261, 262, 263, 265, 266, 269, 273, 274, 275, 276, 279, 284, 285, 286, 311, 334, 335, 336, 343, 346, 348, 351, 352, 353, 358, 361, 362, 363, 364, 365, 367, 370, 371, 379], "allevi": [134, 145], "alloc": [315, 316], "allow": [0, 1, 3, 4, 10, 19, 20, 70, 72, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 116, 117, 118, 119, 120, 124, 134, 138, 139, 140, 141, 142, 143, 145, 148, 149, 152, 158, 160, 196, 204, 214, 215, 218, 221, 222, 223, 225, 227, 229, 230, 231, 271, 273, 277, 278, 289, 313, 319, 321, 322, 347, 349, 355, 368, 369, 379], "along": [152, 195, 204, 223, 305, 306, 310, 334, 335, 336, 343, 346, 348, 350, 351, 353, 355, 358, 360, 362, 363, 366, 367, 374, 376], "alongsid": 136, "alpha": [145, 148, 150, 161, 214, 221, 233, 276, 284], "alpha_dropout": [168, 169, 233], "alphadropout": [240, 241], "alphadropoutmodel": 233, "alreadi": 291, "also": [135, 145, 146, 148, 149, 150, 151, 153, 170, 172, 195, 282, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 350, 351, 353, 356, 357, 358, 359, 361, 362, 363, 366, 367], "alter": [143, 359], "altern": [1, 215, 277, 306], "alwai": [138, 357, 373, 374, 376], "among": [61, 204], "amount": [156, 157, 158, 187, 188, 189, 191, 192, 193, 200, 201, 202, 282], "amsgrad": [279, 280], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 146, 156, 157, 158, 160, 161, 164, 165, 166, 167, 170, 185, 186, 195, 196, 200, 201, 202, 204, 212, 213, 214, 220, 222, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 244, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 279, 282, 284, 290, 291, 292, 301, 306, 314, 317, 328, 335, 343, 348, 350, 351, 358, 360, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "analog": [358, 363], "analysi": [4, 203, 229, 230, 231, 258, 264, 266, 267, 269], "andreetto": 134, "andrew": 134, "angl": [196, 375], "ani": [0, 1, 2, 3, 17, 19, 24, 92, 120, 131, 133, 136, 137, 138, 139, 141, 142, 145, 146, 148, 149, 150, 151, 153, 161, 164, 170, 172, 179, 182, 222, 259, 273, 274, 288, 290, 291, 298, 301, 313, 314, 315, 317, 319, 320, 321, 322, 334, 336, 347, 349, 351, 352, 353, 356, 358, 362, 363, 366, 367, 368, 379], "anoth": [142, 312, 320, 322, 369, 379], "api": [4, 261, 262, 263, 379], "appear": 274, "append": [140, 142, 143], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 25, 45, 46, 63, 103, 120, 130, 132, 134, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 180, 197, 198, 199, 203, 204, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 280, 281, 282, 283, 306, 356, 358, 364, 365, 368, 371, 373, 374, 375, 376, 377, 379], "applic": [4, 19, 27, 28, 29, 32, 34, 39, 40, 66, 69, 70, 76, 77, 78, 80, 81, 82, 134, 156, 182, 229, 230, 231, 242, 244, 300, 313, 321, 356, 360, 364, 365, 377], "approach": [3, 68, 143, 280], "appropri": [19, 78, 81, 82, 134, 137, 141, 143, 163, 229, 230, 231, 233, 236, 237, 247, 265, 266, 288, 290], "approx": 150, "approxim": [19, 146, 215, 216, 217, 265, 268], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 55, 56, 57, 58, 59, 60, 61, 134, 136, 137, 138, 139, 140, 141, 142, 143, 152, 156, 157, 158, 160, 163, 170, 172, 180, 185, 186, 195, 200, 201, 202, 203, 204, 208, 209, 211, 212, 213, 216, 223, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 276, 279, 280, 282, 283, 284, 285, 286, 288, 290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 324, 328, 332, 334, 335, 336, 337, 338, 343, 346, 347, 350, 351, 355, 358, 359, 360, 363, 364, 365, 368, 369, 370, 372, 373, 377, 379], "arang": 323, "arbitrari": [140, 243, 315, 316, 328, 333, 335, 339, 341, 343, 347, 348], "arcco": 323, "arch": 291, "architectur": [24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 146, 203, 216, 217, 219, 224, 227, 242, 243, 273, 291], "arcsin": 323, "arctan": 323, "area": [195, 271], "arg": [137, 243, 291, 315], "argument": [3, 4, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 137, 143, 243, 295, 315, 347], "around": [14, 196, 225], "arr": [292, 351, 353, 362, 367], "arrai": [10, 136, 138, 289, 292, 301, 306, 314, 320, 322, 349, 357, 358, 369, 379], "art": [34, 134], "artifici": 134, "arxiv": 134, "asarrai": 292, "asgd": 287, "aspect": 377, "assign": [137, 139, 141, 143, 195, 247, 250], "assist": [59, 60, 61], "associ": [141, 142], "assum": [0, 1, 274, 275, 288], "attempt": [139, 143], "attend": [155, 227], "attent": [83, 90, 91, 120, 134, 142, 170, 203, 227], "attn": [155, 227], "attn_mask": [155, 227], "atto": [31, 64, 134], "attribut": 137, "audio": 229, "augment": [3, 4, 113, 196, 300, 358, 363, 368, 372, 373, 374, 375, 376, 379], "autodiff": 10, "autoencod": 134, "autograd": 273, "automat": [4, 10, 138, 139, 140, 141, 142, 273, 293, 295, 296, 297, 299, 301, 315, 316, 322, 355, 369], "autoregress": [155, 227], "auxiliari": [59, 60, 61, 136], "avail": [4, 5, 6, 7, 8, 10], "avd": 83, "averag": [23, 73, 74, 75, 83, 92, 103, 110, 120, 125, 132, 136, 184, 185, 186, 187, 188, 189, 195, 203, 204, 249, 261, 262, 263, 264, 265, 266, 276, 277, 279, 284, 335], "avg_down": 92, "avg_pool": [264, 265, 266], "avg_pool1d": [169, 190], "avg_pool2d": [169, 190], "avg_pool3d": [169, 190], "avgpool": [23, 110, 125, 132, 204], "avgpool1d": [241, 270], "avgpool1dmodel": 264, "avgpool2d": [241, 270], "avgpool2dmodel": 265, "avgpool3d": [241, 270], "avgpool3dmodel": 266, "avoid": [2, 3, 19, 46, 141, 290, 318], "ax": [11, 289, 334, 335, 336, 343, 347, 348, 350, 358, 361, 363], "axi": [18, 152, 223, 305, 306, 334, 335, 336, 343, 348, 351, 353, 355, 356, 358, 360, 361, 362, 363, 366, 367, 374, 376], "b": [11, 21, 134, 170, 172, 211, 229, 230, 231, 242, 244, 289, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 350, 351, 353, 355, 362, 367, 373], "b0": [45, 47, 134], "b1": [45, 48, 134], "b2": [45, 49, 134], "b3": [45, 50, 134], "b4": [45, 51, 134], "b5": [45, 52, 134], "b6": [45, 53, 134], "b7": [45, 54, 134], "b_i": [307, 308, 311], "back": [195, 265, 266, 291, 305, 310, 358, 363], "backbon": [121, 122, 123], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 170, 172, 195, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 290, 297, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 332, 334, 336, 349, 350, 356, 358, 363, 364, 365, 369], "backward": [10, 136, 138, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 301, 318, 369], "balanc": [29, 32, 33, 36, 46, 55, 56, 57, 58, 67, 78, 104, 105, 106, 107, 108, 109, 134, 248], "bar": 276, "base": [3, 11, 16, 17, 20, 21, 27, 30, 32, 40, 59, 60, 61, 62, 65, 68, 69, 70, 72, 83, 90, 91, 103, 104, 105, 106, 107, 108, 109, 120, 125, 130, 134, 137, 139, 140, 141, 142, 155, 160, 170, 184, 185, 186, 204, 227, 233, 247, 248, 261, 262, 263, 273, 274, 275, 276, 280, 284, 285, 286, 293, 302, 303, 307, 308, 309, 311, 312, 322, 332, 333, 334, 336, 347, 355, 356, 360, 372, 373, 374, 375, 376], "base_width": [83, 84, 85, 86, 87, 88, 89, 101, 102, 103, 120], "basic": [10, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 130, 132, 135, 155, 156, 157, 158, 162, 163, 184, 185, 186, 197, 198, 199, 200, 201, 202, 203, 208, 209, 212, 213, 227, 234, 261, 262, 263, 318, 350, 370, 371, 372, 373, 374, 375, 376, 377], "basicblock": [92, 96, 99], "batch": [1, 2, 3, 11, 17, 20, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 69, 70, 110, 116, 117, 118, 119, 124, 155, 156, 157, 158, 160, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 227, 229, 230, 231, 242, 244, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 283, 306, 370, 371, 372, 373, 375, 377], "batch_norm": [169, 181, 252, 253, 254], "batch_norm1": 143, "batch_norm2": 143, "batch_siz": [1, 2, 3, 130, 204], "batchnorm": [197, 198, 199], "batchnorm1d": [197, 241, 260], "batchnorm1dmodel": 252, "batchnorm2d": [143, 198, 241, 260], "batchnorm2dmodel": 253, "batchnorm3d": [199, 241, 260], "batchnorm3dmodel": 254, "bceloss": [241, 251], "becaus": [2, 296], "becom": [18, 137, 277, 285], "been": 224, "befor": [17, 110, 135, 138, 155, 227, 276, 282, 290, 298, 356, 371, 379], "begin": [1, 18, 145, 148, 149, 150, 163, 214, 216, 217, 218, 219, 221, 235, 248, 249, 250, 264, 265, 266, 267, 268, 269, 283, 285, 289, 300, 307, 308, 310, 324, 328, 334, 336, 338, 356, 364, 365], "behav": [235, 248, 346], "behavior": [134, 140, 143, 155, 227, 288, 300, 306, 316, 379], "being": [142, 196, 233, 236, 237, 238, 239, 283, 288, 290, 351, 353, 367], "belong": 0, "below": [20, 60, 61, 62, 69, 70, 72, 73, 74, 75, 306, 314, 317, 365], "benchmark": [5, 6, 7, 8], "benefici": 143, "benefit": [145, 273, 282, 292], "bernoulli": [233, 236, 237, 238, 239, 294], "best": [208, 209, 212, 213], "beta": [180, 252, 253, 254, 255, 256, 257, 258, 259, 279, 280, 281, 282, 283], "beta1": [279, 280, 281, 282, 283], "beta2": [279, 280, 281, 282, 283], "beta_1": [279, 280, 281, 282, 283], "beta_2": [279, 280, 281, 282, 283], "beta_c": [180, 255], "better": [16, 132, 134, 146, 208, 209, 212, 213, 224, 234, 256, 257, 258, 273, 280, 282, 284, 371], "between": [29, 32, 36, 55, 56, 57, 58, 67, 104, 105, 106, 107, 108, 109, 134, 137, 156, 157, 158, 160, 170, 175, 197, 198, 199, 200, 201, 202, 204, 220, 229, 230, 231, 233, 236, 237, 238, 239, 242, 246, 247, 248, 249, 250, 276, 284, 285, 286, 300, 302, 303, 306, 309, 312, 313, 318, 348, 373, 374, 376, 377], "beyond": [10, 140], "bia": [156, 157, 158, 170, 172, 179, 182, 183, 197, 198, 199, 200, 201, 202, 229, 230, 231, 242, 244, 252, 253, 254, 256, 257, 258, 259, 279, 280, 281, 282, 283], "bias": [229, 230, 231, 244, 259, 273], "bias1": 141, "bias2": 141, "big": [200, 201, 202], "bilinear": [169, 171, 195, 241, 245, 271], "bilinearmodel": 242, "binari": [151, 173, 222, 233, 236, 237, 238, 239, 246], "binary_cross_entropi": [169, 176], "block": [40, 41, 42, 43, 44, 45, 46, 63, 68, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 134, 137, 160, 162, 163, 197, 198, 199, 204, 229, 230, 231, 234, 290], "block1": [135, 273], "block2": [135, 273], "block_arg": [92, 110], "block_cfg": 46, "block_config": 40, "block_siz": [162, 234], "blue": 373, "bmatrix": 310, "bn": [197, 198, 199], "bn_affin": [197, 198, 199], "bool": [1, 5, 6, 7, 8, 18, 22, 45, 59, 60, 61, 83, 92, 135, 137, 138, 155, 161, 163, 164, 165, 166, 167, 179, 182, 195, 197, 198, 199, 200, 201, 202, 227, 229, 230, 231, 235, 242, 244, 252, 253, 254, 256, 257, 258, 259, 271, 279, 280, 284, 288, 293, 295, 296, 297, 299, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 343, 348, 349, 369], "both": [156, 172, 185, 187, 191, 197, 215, 224, 229, 230, 262, 264, 265, 267, 268, 271, 304, 305, 306, 310, 314, 355, 360, 377], "bottleneck": [40, 77, 78, 80, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 134, 203], "bottleneck_cfg": 78, "bottom": 195, "bound": [209, 211, 213, 285, 299], "box": 4, "branch": [59, 60, 61, 134, 204], "break": 273, "brief": 379, "bright": 379, "broadcast": [238, 239, 335, 343, 348, 359, 366], "broadcast_to": 354, "budget": 36, "buffer": [276, 282, 284, 286], "build": [10, 26, 46, 70, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 120, 121, 122, 123, 134, 137, 140, 143, 273, 379], "built": [3, 10, 93, 97, 98, 143, 273], "burg": 8, "c": [5, 6, 8, 92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 134, 160, 162, 165, 166, 167, 174, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 203, 238, 239, 247, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 289, 353, 367, 371], "c_": [229, 230, 231], "c_in": [156, 157, 158, 197, 198, 199], "c_out": [156, 157, 158], "calcul": [0, 1, 10, 11, 138, 271, 277, 278, 281, 282, 283, 290, 296, 301], "calculu": [12, 19], "call": [1, 137, 288, 291, 302, 303, 306, 307, 308, 309, 311, 312], "callabl": [274, 291, 368], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 45, 78, 92, 101, 102, 116, 117, 118, 119, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 156, 157, 158, 163, 196, 204, 215, 218, 220, 225, 229, 230, 231, 256, 257, 258, 265, 266, 267, 268, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 292, 299, 300, 301, 306, 315, 316, 317, 319, 321, 322, 335, 343, 348, 350, 353, 355, 356, 358, 359, 363, 366, 367, 368, 369, 372, 374, 375, 376, 379], "cannot": [13, 14, 16, 17, 20, 21, 22, 293], "cap": 220, "capabl": [10, 38, 90, 91, 313, 314, 317, 319, 320, 321, 322], "capac": [27, 28, 29, 35, 39, 76, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 124, 134], "captur": [120, 134, 160, 229, 230, 231, 242], "cardin": [83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 104, 105, 106, 107, 108, 109, 120, 134], "care": 290, "cartesian": 355, "case": [3, 18, 72, 78, 79, 145, 148, 149, 150, 163, 214, 216, 217, 218, 219, 221, 235, 248, 249, 250, 264, 265, 266, 267, 268, 269, 273, 278, 283, 285, 289, 307, 308, 324, 328, 334, 336, 338, 356, 364, 365, 379], "categori": [7, 93, 94, 95, 96, 97, 98, 99, 100], "caus": [3, 19, 276, 284, 286], "causal": [155, 227], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 145, 146, 148, 150, 151, 155, 156, 157, 158, 170, 172, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 203, 212, 213, 215, 216, 217, 222, 224, 227, 233, 242, 244, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 285, 304, 305, 306, 309, 311], "center": [196, 225, 284, 370, 379], "centercrop": [378, 379], "central": 292, "certain": [13, 146, 155, 170, 224, 227, 242, 279, 280, 288, 334, 336], "cfg": [81, 82], "chain": [16, 17, 143, 368, 379], "challeng": [7, 134], "cham": 134, "chanc": [373, 374, 376], "chang": [175, 248, 285, 289, 290, 291, 357, 359, 366, 373, 379], "channel": [25, 26, 40, 45, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 114, 116, 117, 118, 119, 124, 125, 130, 134, 156, 157, 158, 160, 165, 166, 167, 179, 180, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 238, 239, 252, 253, 254, 255, 256, 257, 258, 261, 264, 265, 266, 267, 268, 269, 371, 373, 377], "character": [101, 102], "check": [288, 370, 372], "checkpoint": 275, "chen": 134, "choic": 355, "choleski": 15, "chollet": 134, "choos": 134, "chosen": [233, 234], "christian": 134, "christoph": 8, "chu": 134, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 292, "class": [3, 4, 10, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 152, 163, 174, 178, 273, 275, 291, 314, 317, 318, 349, 379], "classic": 75, "classif": [4, 5, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 151, 152, 173, 174, 178, 222, 223, 246, 247, 250], "classifi": [23, 59, 60, 61, 72, 73, 74, 75, 92, 103, 120, 125, 130, 132], "cleaner": [1, 290, 306], "clear": [138, 301, 315, 316, 318], "clearli": 292, "clf_in_featur": 72, "clf_layer": 72, "clip": [196, 216, 220, 285, 323], "clockwis": 196, "close": [16, 19, 221, 246, 284], "closer": 214, "closur": [274, 275], "cloth": 7, "cnn": 134, "co": [134, 323, 339], "code": [17, 139, 141, 143, 288, 290, 292, 300], "coeffici": [21, 45, 195, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "col": 160, "collect": [4, 11, 134, 139, 140, 142, 143, 275], "color": [373, 379], "colorjitt": 379, "column": [13, 14, 16, 20, 21, 22, 135, 160, 317, 353, 355], "com": [7, 8], "combin": [1, 3, 62, 68, 69, 124, 134, 140, 143, 145, 146, 197, 198, 199, 203, 204, 215, 234, 247, 273, 282, 283, 335, 343, 348, 351, 379], "combined_dataset": [0, 1], "common": [160, 196, 275, 379], "commonli": [10, 76, 77, 78, 79, 80, 81, 82, 146, 151, 152, 153, 156, 158, 163, 170, 177, 179, 182, 196, 203, 212, 213, 216, 217, 220, 223, 227, 231, 246, 249, 250, 264, 265, 266, 267, 268, 269, 289, 292, 319, 361, 369, 370, 371, 372, 374, 375, 376, 379], "compact": [30, 31, 33, 38, 67], "compar": [29, 30, 101, 102, 132, 134, 300, 362], "compat": [4, 11, 120, 243, 259, 273, 289, 300, 318, 350, 369, 379], "competit": [31, 37, 38], "complex": [2, 3, 10, 14, 28, 34, 39, 70, 92, 95, 98, 99, 112, 114, 135, 139, 140, 143, 149, 219, 267, 269, 273, 275, 379], "compon": [19, 59, 60, 61, 62, 68, 69, 70, 137, 140, 275, 301, 379], "compos": [5, 6, 7, 8, 130, 229, 230, 231, 264, 265, 266, 267, 268, 269, 273, 379], "compound": 46, "comprehens": 3, "compris": [101, 102], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 33, 34, 36, 37, 64, 67, 76, 78, 81, 82, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 124, 134, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 184, 185, 186, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 284, 288, 289, 290, 292, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 355, 356, 358, 363, 369, 379], "computation": [3, 19, 93, 216, 217], "compute_loss": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "concaten": [0, 156, 157, 158, 353, 354, 362, 367], "concept": [10, 19, 77, 134], "condit": [12, 13, 16], "confer": 134, "config": 125, "configur": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 133, 142, 197, 198, 199, 227], "conjunct": [160, 250], "connect": [23, 25, 40, 41, 42, 43, 44, 45, 46, 62, 68, 69, 70, 72, 73, 74, 75, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 125, 130, 132, 134, 172, 203, 204, 229, 230, 231, 244], "consecut": 125, "consid": [3, 16, 19, 40, 143, 208, 209, 212, 213, 273, 285, 288, 315, 316, 364, 365, 379], "consider": 19, "consist": [2, 4, 7, 23, 73, 74, 75, 92, 136, 184, 185, 186, 204, 261, 262, 263, 292, 298, 300, 356, 370, 377, 379], "consistent_tensor": 300, "consol": 135, "constant": [173, 174, 179, 180, 182, 183, 207, 221, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 284, 292, 356], "constant_pad": 356, "constrain": [31, 33, 36], "constraint": [1, 76, 78, 204], "construct": [10, 41, 42, 43, 44, 63, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 122, 123, 126, 127, 128, 129, 140, 273, 314, 358, 363, 364, 365], "constructor": [41, 42, 43, 44, 55, 56, 57, 58, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 116, 117, 118, 119, 124, 126, 127, 128, 129], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 68, 72, 92, 103, 104, 105, 106, 107, 108, 109, 110, 120, 125, 135, 137, 139, 140, 141, 142, 143, 152, 155, 160, 170, 172, 173, 174, 178, 195, 246, 247, 250, 274, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 316, 318, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 355, 360], "content": 196, "context": [288, 290], "contextmanag": 290, "contigu": [162, 234, 357], "continu": [218, 297], "contrast": [256, 257, 258, 379], "contribut": [162, 195, 233, 236, 237, 238, 239, 264, 267, 268, 269, 276, 282, 346], "control": [25, 103, 204, 214, 248, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 300, 369, 379], "conv": [63, 68, 110, 197, 198, 199, 253, 254], "conv1": [73, 74, 75, 143, 229, 230, 231, 264, 265, 266, 267, 268, 269], "conv1d": [159, 169, 197, 200, 232, 241, 264, 267], "conv1dmodel": 229, "conv2": [73, 74, 75, 143, 229, 230, 231], "conv2d": [140, 143, 159, 169, 198, 201, 232, 241, 253, 265, 268, 273], "conv2dmodel": 230, "conv3d": [159, 169, 199, 202, 232, 241, 254, 266, 269], "conv3dmodel": 231, "conv_bia": [197, 198, 199], "conv_config": 125, "conv_lay": [72, 140], "convblock": 273, "convbnrelu1d": 205, "convbnrelu2d": 205, "convbnrelu3d": 205, "conveni": [4, 24, 133], "convent": 306, "converg": [19, 225, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 371], "convers": [247, 250, 373, 379], "convert": [5, 6, 7, 8, 125, 136, 138, 152, 223, 301, 355, 368, 369, 373, 379], "convnetwork": 140, "convnext": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 71, 134], "convnext_bas": 134, "convnext_larg": 134, "convnext_smal": 134, "convnext_tini": 134, "convnext_v2": [31, 32, 33, 34, 35, 36, 37, 38], "convnext_v2_atto": 134, "convnext_v2_bas": 134, "convnext_v2_femto": 134, "convnext_v2_hug": 134, "convnext_v2_larg": 134, "convnext_v2_nano": 134, "convnext_v2_pico": 134, "convnext_v2_tini": 134, "convnext_xlarg": 134, "convolut": [23, 24, 25, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 63, 68, 72, 73, 74, 75, 76, 78, 81, 82, 83, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 124, 125, 130, 132, 133, 134, 140, 156, 157, 158, 160, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 265, 266, 268, 269, 356], "convolv": [156, 157, 158, 229, 230, 231], "coordin": 355, "copi": 350, "core": [0, 1, 2, 3, 137, 273, 274, 301, 379], "corinna": 8, "corner": [195, 271, 370, 372], "correct": [139, 247, 250, 279, 280, 281, 282, 283, 364, 365, 369], "correctli": [19, 137, 139, 140, 141, 142, 143, 247, 250, 300, 350], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 79, 81, 82, 101, 102, 121, 122, 123, 139, 141, 143, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 170, 172, 195, 216, 219, 223, 242, 244, 252, 253, 254, 256, 257, 258, 265, 266, 276, 284, 286, 293, 304, 305, 307, 308, 311, 332, 333, 339, 341, 350, 353, 356, 358, 363, 367], "cort": 8, "cosh": [323, 340, 345], "cosin": [325, 329, 330, 339], "cost": [76, 78, 103, 134, 200, 201, 202], "could": 137, "count": [134, 135, 351], "counterclockwis": [196, 375], "cover": [11, 156, 157, 158], "coverag": [184, 185, 186], "creat": [2, 3, 10, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 69, 70, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 143, 204, 220, 273, 289, 291, 300, 313, 317, 318, 319, 320, 321, 322, 350, 355, 362, 368, 379], "creation": [55, 56, 57, 58, 140, 143, 379], "criterion": [246, 247, 248, 249, 250], "critic": [19, 275, 300], "crop": [370, 372, 379], "cross": [173, 174, 246, 247], "cross_entropi": [169, 176], "crossentropyloss": [241, 251], "cube": 323, "cumul": [146, 215], "current": [137, 276, 279, 285, 288], "custom": [4, 10, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 69, 70, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 131, 132, 133, 136, 139, 140, 141, 142, 143, 196, 197, 198, 199, 214, 218, 273, 300, 317, 318, 360], "custom_config": 125, "custom_lenet": 72, "customiz": 379, "custommodul": 136, "customnetwork": 139, "customparametermodel": [141, 142], "cvf": 134, "cvpr": 134, "d": [134, 155, 158, 167, 186, 189, 193, 199, 227, 254, 258, 259, 263, 266, 269, 289, 314, 375], "d_": [158, 186, 189, 193, 231, 263, 266, 269], "d_1": 259, "d_2": 259, "d_n": 259, "d_out": [158, 189, 193], "dampen": [276, 284, 286], "data": [4, 5, 6, 7, 8, 10, 17, 136, 138, 142, 153, 156, 158, 160, 166, 167, 172, 196, 197, 198, 199, 204, 219, 225, 229, 230, 231, 244, 258, 264, 266, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 292, 300, 301, 302, 303, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 350, 356, 357, 358, 359, 360, 361, 363, 368, 369, 372, 373, 374, 375, 376, 379], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 28, 55, 56, 57, 58, 73, 74, 75, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 196, 278, 290, 368, 370, 379], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 310, "debug": [135, 143, 288, 298, 379], "decai": [234, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [104, 105, 106, 107, 108, 109, 291], "decoupl": [134, 277, 278, 280, 281, 282, 283], "decreas": [279, 280, 285], "deep": [1, 3, 4, 10, 65, 66, 68, 92, 93, 94, 95, 97, 98, 104, 105, 106, 107, 108, 109, 111, 112, 115, 134, 179, 215, 221, 273, 300, 318, 360, 364, 365, 368, 369, 379], "deeper": [10, 60, 62, 70, 92, 99, 134, 221], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 177, 178, 179, 180, 182, 183, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 218, 223, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 274, 275, 282, 288, 293, 295, 296, 297, 299, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 343, 347, 348, 349, 351, 353, 355, 356, 358, 360, 362, 364, 365, 367, 369, 373, 374, 376], "defin": [1, 3, 4, 10, 25, 40, 46, 59, 60, 61, 62, 68, 69, 70, 72, 78, 83, 92, 110, 121, 122, 123, 125, 139, 140, 141, 142, 143, 163, 215, 217, 220, 224, 246, 247, 248, 249, 250, 264, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 297, 311, 316, 328, 347, 368, 379], "definit": [10, 12, 197, 198, 199, 379], "degre": [196, 375, 379], "delai": 276, "delta": [152, 175, 223, 248, 277], "delta_": [152, 223], "demonstr": [10, 11, 116, 117, 118, 119, 124, 134, 273, 292], "denomin": [179, 180, 182, 183, 197, 198, 199, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 284, 303], "denot": [17, 90, 91, 222, 229, 230, 231, 233, 236, 237, 238, 239, 347], "dens": [10, 40, 41, 42, 43, 44, 134, 163, 278], "dense1": 10, "dense2": 10, "densenet": [41, 42, 43, 44, 71, 134, 203], "densenet_121": 134, "densenet_169": 134, "densenet_201": 134, "densenet_264": 134, "densiti": [146, 215], "depend": [10, 17, 18, 78, 142, 173, 174, 175, 177, 178, 195, 229, 304, 314, 334, 336, 358, 363, 372, 373, 377], "depth": [25, 26, 27, 28, 29, 30, 39, 45, 46, 63, 134, 140, 158, 163, 167, 186, 189, 193, 231, 235, 254, 258, 263, 266, 269], "depth_coef": 45, "depthseparableconv1d": 205, "depthseparableconv2d": 205, "depthseparableconv3d": 205, "depthwis": [25, 63, 76, 130, 134, 156, 157, 158, 200, 201, 202], "depthwise_separ": [200, 201, 202], "der": 134, "deriv": [19, 20, 152, 184, 185, 186, 215, 223, 225, 229, 230, 231, 242, 244, 291], "descend": 22, "descent": [10, 276, 286], "describ": [13, 14], "descript": 379, "deseri": 136, "design": [3, 4, 10, 11, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 55, 56, 57, 58, 60, 61, 62, 64, 67, 73, 74, 75, 78, 93, 94, 95, 96, 97, 98, 99, 100, 111, 114, 130, 133, 134, 138, 140, 141, 142, 143, 145, 150, 221, 233, 273, 292, 379], "desir": [131, 136, 184, 185, 186, 234, 261, 262, 263, 271, 347, 349], "destin": 137, "det": [11, 15], "det_a": 13, "detail": [10, 135, 275, 300, 306], "detect": 134, "determin": [0, 10, 11, 12, 13, 72, 101, 102, 184, 185, 186, 208, 209, 212, 213, 229, 230, 231, 261, 262, 263, 265, 266, 268, 269, 284, 288, 293, 295, 296, 297, 299, 315, 316, 360, 370, 372], "determinist": 196, "develop": [10, 273, 300, 379], "deviat": [208, 210, 212, 368, 371, 379], "devic": [77, 78], "diag": [19, 323], "diagon": [19, 20, 22, 314, 317, 346, 364, 365], "diagonaliz": 14, "dict": [24, 27, 28, 29, 30, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 121, 122, 123, 124, 131, 133, 137, 139, 141, 243, 274], "dictionari": [72, 137, 138, 139, 141, 143, 274], "differ": [0, 17, 59, 63, 72, 78, 116, 117, 118, 119, 124, 140, 143, 152, 170, 195, 204, 223, 242, 249, 275, 289, 298, 300, 312, 322, 348, 361, 379], "differenti": [10, 12, 21, 215, 273, 293, 295, 296, 297, 299, 301, 313, 315, 316, 319, 321], "digit": [7, 8, 75, 134], "dilat": [156, 157, 158, 197, 198, 199, 200, 201, 202, 229, 230, 231], "dilation_height": 160, "dilation_width": 160, "dim": [25, 26, 63, 155, 227, 247, 250], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 25, 27, 28, 29, 30, 39, 92, 103, 120, 125, 132, 134, 138, 152, 155, 170, 172, 179, 180, 182, 183, 185, 186, 195, 203, 204, 223, 227, 229, 230, 231, 234, 252, 253, 254, 256, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 271, 289, 292, 295, 299, 301, 305, 315, 334, 335, 336, 343, 346, 347, 348, 350, 351, 353, 356, 358, 361, 362, 363, 366, 367, 370, 372, 377], "dimension": [17, 19, 20, 22, 63, 156, 157, 158, 187, 188, 189, 191, 192, 193, 204, 229, 230, 231, 237, 238, 239, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 268, 269, 289, 305, 306, 310, 314, 332, 335, 343, 346, 348, 352, 357, 358, 361, 363, 364, 365], "diminish": 278, "direct": [14, 246, 247, 248, 249, 250, 276, 284, 285, 286], "directli": [55, 56, 57, 58, 134, 139, 140, 141, 142, 195, 271, 277, 278, 280, 281, 282, 283, 298, 300, 349, 379], "directori": [3, 4, 5, 6, 7, 8], "disabl": [163, 234, 235, 288, 290], "discontinu": 338, "discrep": [246, 247, 250], "discret": [293, 296, 300], "disk": 3, "displai": [24, 133, 135], "distribut": [146, 152, 162, 195, 208, 209, 210, 211, 212, 213, 215, 223, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 244, 247, 250, 264, 265, 266, 293, 295, 296, 297, 299, 300, 335, 343, 346, 348, 362, 371, 373, 374, 375, 376], "div": 323, "divers": [32, 134, 196, 374, 376, 379], "diversifi": 379, "divid": [1, 19, 134, 140, 143, 152, 156, 157, 158, 223, 246, 247, 248, 249, 250, 303, 360, 371], "divis": [10, 19, 156, 157, 158, 233, 236, 237, 238, 239, 277, 278, 279, 280, 281, 282, 283, 284, 303, 360], "do": [19, 21, 136, 139, 140, 141, 142, 161, 164, 165, 166, 273, 283, 288, 322, 346, 356], "document": [4, 10, 134, 275, 292, 300], "doe": [10, 17, 18, 19, 20, 22, 135, 136, 139, 140, 141, 142, 143, 213, 279, 280, 285, 288, 290, 293, 295, 296, 297, 298, 299, 313, 314, 315, 316, 317, 319, 320, 321, 322, 350, 359], "doesn": 290, "doi": 134, "domain": 4, "don": 290, "dot": [14, 17, 139, 140, 141, 142, 143, 155, 227, 259, 267, 268, 269, 305, 310, 323, 351, 353, 362, 367], "down": [3, 273, 377], "download": [4, 5, 6, 7, 8], "downsampl": 83, "drawback": 145, "drawn": [295, 296, 297, 299, 300, 375], "drop": [25, 26, 63, 162, 163, 233, 234, 235, 236, 237, 238, 239], "drop_block": [168, 169], "drop_path": [25, 26, 168, 169, 235], "drop_path_r": [46, 63], "drop_prob": 235, "drop_rat": 63, "dropblock": [162, 240, 241], "dropout": [23, 45, 46, 55, 56, 57, 58, 61, 63, 125, 132, 134, 146, 155, 161, 165, 166, 167, 227, 233, 234, 237, 238, 239], "dropout1d": [168, 169, 240, 241], "dropout1dmodel": 237, "dropout2d": [168, 169, 240, 241], "dropout3d": [168, 169, 240, 241], "dropout_p": [155, 227], "dropout_prob": 61, "dropoutmodel": 236, "droppath": [240, 241], "dtype": [136, 138, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 369], "due": [17, 19, 40, 156, 157, 219, 375], "dummi": 135, "duplic": [139, 141], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 46, 59, 60, 61, 92, 134, 136, 137, 138, 139, 140, 141, 142, 143, 152, 161, 162, 163, 164, 165, 166, 167, 179, 182, 196, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 301, 302, 334, 335, 336, 343, 348, 369, 372, 375, 379], "dy": [148, 218], "dynam": [0, 2, 3, 120, 124, 134, 137, 140, 141, 142, 143, 184, 185, 186, 204, 234, 259, 261, 262, 263, 278, 283, 288], "dynamicnetwork": 140, "e": [0, 13, 14, 16, 17, 20, 22, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 69, 70, 72, 73, 74, 75, 83, 125, 136, 152, 204, 222, 223, 224, 233, 247, 274, 277, 284, 285, 317, 330, 332, 333, 340, 345, 346, 351, 373], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 26, 40, 46, 63, 72, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 125, 132, 134, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 170, 172, 179, 182, 184, 185, 186, 203, 204, 216, 219, 223, 229, 230, 231, 233, 236, 237, 238, 239, 242, 244, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 293, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 353, 355, 356, 358, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 377, 379], "earli": 283, "eas": [4, 10], "easi": [2, 3, 4, 10, 104, 105, 106, 107, 108, 109, 138, 139, 141], "easier": [3, 139, 140, 143], "easili": [4, 138, 142, 379], "eccv": 134, "economi": 22, "edg": [78, 356], "edu": [5, 6], "educ": [10, 134], "effect": [134, 139, 140, 141, 142, 143, 152, 156, 157, 158, 160, 214, 215, 219, 222, 223, 225, 252, 253, 254, 256, 257, 258, 259, 271, 288, 289, 290, 353, 367], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 26, 29, 30, 31, 33, 36, 37, 38, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 66, 67, 69, 70, 77, 78, 80, 81, 82, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 124, 130, 134, 160, 200, 201, 202, 216, 217, 220, 247, 273, 290], "efficientnet": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 134], "efficientnet_b0": 134, "efficientnet_b1": 134, "efficientnet_b2": 134, "efficientnet_b3": 134, "efficientnet_b4": 134, "efficientnet_b5": 134, "efficientnet_b6": 134, "efficientnet_b7": 134, "efficientnet_v2": [55, 56, 57, 58], "efficientnet_v2_": 134, "efficientnet_v2_l": 134, "efficientnet_v2_m": 134, "efficientnet_v2_xl": 134, "efficientnetv2": 134, "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [172, 271, 292, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 349, 355], "element": [0, 19, 20, 61, 134, 138, 142, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 197, 198, 199, 200, 201, 202, 203, 216, 217, 219, 223, 224, 229, 230, 231, 233, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 259, 264, 265, 266, 267, 268, 269, 289, 293, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 355, 356, 358, 359, 360, 361, 363, 364, 365], "elementwise_affin": 259, "elsewher": [267, 268, 269, 317], "elu": [147, 169, 226, 241], "elumodel": 214, "embed": [76, 77, 78, 80, 81, 82, 155, 227], "emploi": 46, "empti": [137, 143, 323], "empty_lik": 323, "enabl": [0, 1, 2, 3, 10, 17, 22, 45, 69, 83, 120, 121, 122, 123, 134, 137, 138, 139, 140, 141, 142, 155, 163, 219, 227, 229, 230, 231, 242, 244, 273, 275, 288, 290, 293, 295, 296, 297, 299, 301, 368], "encapsul": [227, 273, 301], "encod": [247, 250], "encompass": 45, "encourag": [162, 234, 236, 237, 238, 239, 246, 247, 250, 279], "end": [18, 145, 148, 149, 150, 163, 214, 216, 217, 218, 219, 221, 235, 248, 249, 250, 264, 265, 266, 267, 268, 269, 283, 285, 307, 308, 310, 313, 318, 324, 328, 334, 336, 338, 351, 356, 364, 365, 379], "enforc": [137, 139, 141], "engin": 19, "enhanc": [26, 27, 61, 62, 63, 69, 70, 74, 77, 90, 91, 101, 102, 116, 117, 118, 119, 124, 132, 133, 134, 139, 141, 204, 220, 379], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 46, 55, 56, 57, 58, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 184, 185, 186, 197, 198, 199, 218, 223, 227, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 311, 318, 335, 343, 348, 350, 356, 364, 365, 369, 370, 371, 372, 373, 377, 379], "enter": 290, "entir": [3, 163, 165, 166, 167, 235, 238, 239, 300], "entri": [46, 72, 81, 82, 361], "entropi": [173, 174, 246, 247], "environ": [10, 31, 33, 81, 82], "ep": [162, 173, 174, 179, 180, 182, 183, 197, 198, 199, 234, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 284], "epoch": [1, 3], "epsilon": [180, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 284], "equal": [17, 195, 264, 265, 266, 318, 360, 370, 372], "equat": [14, 19, 21], "equival": [306, 346, 357], "error": [0, 3, 14, 16, 46, 137, 140, 141, 142, 143, 146, 175, 177, 215, 235, 246, 247, 248, 249, 273, 274, 290, 292, 318, 350], "especi": [3, 139, 141, 142, 222, 289, 290, 292, 298, 368, 369, 373, 379], "essenti": [1, 3, 10, 11, 17, 19, 68, 157, 160, 273, 298, 300, 334, 368, 369, 373, 379], "estim": [249, 279, 280, 281, 282, 283, 284], "et": [60, 134], "eta": 285, "eta_": 285, "etc": [40, 46, 83, 246, 271, 369], "euclidean": 18, "european": 134, "eval": 235, "evalu": [137, 179, 182, 233, 234, 235, 236, 237, 238, 239, 252, 253, 254, 256, 257, 258, 379], "even": [277, 290, 313, 314, 317, 319, 320, 321, 322], "evenli": [184, 185, 186, 261, 262, 263, 313, 318, 360], "everi": [1, 379], "everywher": 338, "exact": [137, 140, 347, 373, 375], "exactli": 143, "exampl": [4, 306], "excel": 62, "except": [0, 338, 351, 353, 367], "excit": [45, 78, 81, 82, 110, 113, 116, 117, 118, 119, 134, 203], "exclud": [364, 365], "exclus": [296, 299, 313], "exdb": 8, "execut": [140, 290], "exist": [21, 139, 141, 143, 291, 351], "exit": 290, "exp": [145, 150, 151, 153, 214, 221, 323], "expand": [4, 35, 134, 160, 350, 358, 363], "expans": [39, 63, 81, 82], "expansion_factor": 78, "expect": [12, 140, 143, 163, 233, 235, 236, 237, 238, 239, 259, 273, 292], "expens": 3, "experi": [10, 298, 300, 379], "experiment": 300, "explan": [17, 19, 23, 25, 125, 132, 184, 185, 186, 261, 262, 263, 276], "explicit": 143, "explicitli": [134, 139, 141], "explod": [221, 252, 253, 254], "explor": [273, 300], "expon": [17, 311], "exponenti": [145, 150, 152, 214, 221, 223, 233, 279, 280, 281, 282, 283, 332], "express": 28, "extend": [4, 83, 103, 120, 134], "extens": [134, 275], "extern": [4, 10], "extra": [39, 58, 350], "extract": [59, 65, 68, 92, 103, 120, 130, 134, 160, 231, 264, 266, 291, 314, 334, 336, 364, 365, 370, 372], "extractor": [72, 73, 74, 75, 130], "extrem": [19, 93, 134], "ey": 323, "f": [1, 4, 5, 6, 7, 8, 10, 134, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 220, 223], "f_1": 203, "f_2": 203, "facilit": [59, 139, 143, 152, 223, 229, 230, 231, 273, 275, 371, 379], "factor": [45, 61, 145, 155, 156, 157, 158, 160, 203, 212, 213, 227, 271, 276, 283, 284, 285, 286, 292], "factori": 131, "failur": [139, 140, 141, 142, 273], "fals": [1, 5, 6, 7, 8, 18, 22, 45, 81, 82, 92, 135, 136, 137, 138, 155, 161, 163, 164, 165, 166, 167, 179, 182, 195, 206, 208, 209, 210, 211, 212, 213, 227, 229, 230, 231, 235, 242, 244, 271, 279, 280, 284, 288, 293, 295, 296, 297, 299, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 343, 348, 349, 369], "famili": [39, 134, 291], "fan": [208, 209, 212, 213], "fan_in": [208, 209], "fan_out": [208, 209], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 283, "faster": [134, 278, 282, 290], "fc": [68, 92, 103, 110, 120, 140, 203, 230, 231, 264, 265, 266, 267, 268, 269], "fc1": [74, 75, 135, 139, 143, 215, 216, 217, 219, 220, 221, 222, 224, 225, 244], "fc2": [74, 75, 135, 139, 143, 215, 216, 217, 219, 221, 222, 224, 225, 244], "fc3": 75, "featur": [3, 23, 25, 28, 29, 39, 40, 59, 62, 63, 65, 68, 72, 73, 74, 75, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 120, 121, 122, 123, 125, 130, 132, 133, 134, 162, 170, 172, 179, 180, 197, 198, 199, 203, 204, 231, 234, 236, 237, 238, 239, 242, 244, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 278], "feature_extractor": 72, "fed": [3, 379], "feed": [3, 301, 379], "feedforward": 135, "femto": [33, 134], "fergu": [132, 134], "fetch": 0, "few": 135, "fewer": [1, 84, 85, 86, 87, 88, 89, 134, 350], "field": [5, 6, 8, 120, 124, 134, 204], "file": [3, 291], "fill": [206, 210, 211, 295, 296, 297, 299, 319, 320, 321, 322], "filter": [46, 132, 134, 156, 157, 158, 160, 197, 198, 199, 230, 231], "filter_height": 160, "filter_s": 160, "filter_width": 160, "final": [25, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 139, 140, 141, 142, 143, 155, 204, 368, 379], "find": [21, 334, 336], "fine": [203, 379], "finish": 290, "first": [5, 6, 7, 8, 14, 72, 132, 135, 140, 141, 170, 203, 242, 279, 280, 281, 282, 283, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 355, 367, 368, 369, 379], "fit": 273, "fix": [140, 356], "flatten": [68, 72, 143, 160, 310, 354, 357, 358], "flexibl": [1, 3, 4, 10, 26, 59, 68, 69, 70, 72, 79, 83, 92, 116, 117, 118, 119, 124, 125, 130, 134, 139, 140, 141, 142, 143, 271, 273, 275, 292, 319, 320, 369, 379], "flip": [374, 376, 379], "float": [2, 5, 6, 7, 8, 25, 26, 45, 46, 61, 63, 76, 79, 136, 138, 145, 148, 155, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 179, 180, 182, 183, 196, 197, 198, 199, 206, 210, 211, 212, 213, 214, 218, 227, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 299, 301, 313, 316, 318, 328, 349, 371, 373, 374, 375, 376], "float32": [136, 138, 301, 313, 314, 317, 318, 319, 321, 349, 369], "float64": [322, 349, 369], "flow": [62, 68, 110, 134, 143, 162, 213, 215, 222, 225, 229, 230, 231, 242, 244, 288], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 25, 41, 42, 43, 44, 45, 81, 82, 116, 117, 118, 119, 124, 125, 130, 132, 135, 145, 146, 148, 149, 150, 151, 152, 153, 155, 170, 172, 195, 197, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 336, 350, 355, 359, 370, 371, 372, 373, 374, 375, 376, 379], "forc": 162, "form": [20, 204, 310, 355, 358, 363, 379], "format": [2, 3, 5, 6, 7, 8, 135, 247, 250, 369], "formul": 146, "formula": [14, 22, 152, 184, 185, 186, 223, 224, 248, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 306, 348, 373], "forward": [10, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 125, 132, 135, 136, 137, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "found": 10, "foundat": [68, 110, 137, 273, 275, 301], "four": [41, 42, 43, 44, 84, 85, 86, 87, 88, 89, 356], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 163, 170, 172, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 282, 283, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 371], "frame": 167, "framework": [4, 10, 134, 247, 250, 252, 253, 254, 256, 257, 258, 274, 275, 379], "frequent": [247, 250], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 135, 136, 137, 138, 139, 140, 141, 142, 143, 160, 162, 170, 179, 182, 195, 197, 198, 199, 203, 204, 206, 208, 209, 210, 211, 212, 213, 220, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 306, 307, 308, 312, 314, 334, 335, 336, 343, 348, 351, 353, 355, 358, 360, 361, 362, 363, 367, 370, 371, 372, 373, 374, 375, 376, 379], "full": [22, 79, 81, 82], "full_matric": 22, "fulli": [4, 11, 23, 25, 40, 41, 42, 43, 44, 45, 46, 68, 72, 73, 74, 75, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 125, 130, 132, 134, 172, 203, 204, 244, 300], "func": 291, "function": [3, 4, 5, 6, 7, 8, 10, 11, 63, 137, 139, 140, 141, 142, 143, 197, 198, 199, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 234, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 273, 275, 292, 300, 368, 379], "fundament": [10, 155, 172, 244, 369], "further": [10, 27, 28, 29, 30, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 79, 80, 81, 82, 90, 91, 300, 335, 343, 348], "fuse": 120, "fusion": [121, 122, 123], "futur": [155, 227, 243], "g": [0, 13, 14, 17, 20, 22, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 69, 70, 72, 73, 74, 75, 83, 125, 134, 203, 204, 233, 274, 277, 284, 351, 373], "g_": 278, "g_t": 284, "gain": [212, 213], "gamma": [180, 252, 253, 254, 255, 256, 257, 258, 259], "gamma_c": [180, 255], "gap": [92, 103, 120, 203], "gaussian": [146, 215], "gelu": [147, 169, 226, 241], "gelunetwork": 215, "gener": [19, 27, 32, 36, 135, 163, 196, 233, 234, 236, 237, 238, 239, 257, 280, 282, 283, 290, 293, 295, 296, 297, 298, 299, 300, 305, 313, 315, 316, 318, 355, 372, 373, 374, 376, 379], "geoffrei": [5, 6], "geq": 364, "get": [5, 6, 7, 8], "github": 7, "give": [10, 276, 284], "given": [13, 14, 17, 19, 20, 22, 160, 227, 246, 247, 250, 274, 288, 293, 320, 322, 360, 368, 373, 374, 376, 379], "global": [0, 45, 92, 103, 110, 120, 180, 203, 255, 288, 290, 298, 300], "global_response_norm": [169, 181], "globalresponsenorm": [241, 260], "go": [60, 134], "goal": [246, 247, 250], "googlenet": [60, 134], "gpu": 134, "grad": [136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 160, 163, 170, 172, 195, 200, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 274, 275, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 376, 377], "grad_output": 17, "gradient": [10, 11, 62, 68, 134, 136, 138, 234, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 293, 295, 296, 297, 299, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 369], "grain": 203, "graph": [10, 213, 301, 313, 314, 317, 319, 320, 321, 322, 369], "grayscal": [7, 8, 72, 73, 74, 75, 373, 379], "greater": [35, 328], "green": 373, "grid": 355, "grn": 255, "groundbreak": 134, "group": [83, 90, 91, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 124, 134, 140, 156, 157, 158, 197, 198, 199, 204, 229, 230, 231, 274, 275], "group1": 140, "group2": 140, "groupedconvblock": 103, "growth_rat": [40, 41, 42, 43, 44], "guarante": 298, "h": [92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 134, 155, 157, 158, 160, 162, 166, 167, 180, 185, 186, 188, 189, 192, 193, 195, 196, 198, 199, 203, 227, 253, 254, 255, 257, 258, 262, 263, 266, 269, 370, 372], "h_": [157, 158, 185, 186, 188, 189, 192, 193, 195, 230, 231, 262, 263, 265, 266, 268, 269], "h_out": [157, 158, 188, 189, 192, 193], "h_stack": 353, "ha": [0, 14, 27, 135, 143, 156, 157, 158, 197, 198, 199, 220, 224, 246, 247, 252, 253, 254, 256, 257, 258, 259, 271, 274, 275, 306, 346, 350, 351, 353, 362, 367, 373], "half": 341, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 137, 139, 140, 141, 142, 143, 247, 250, 273, 275, 290], "handwritten": [7, 8, 75], "hang": 134, "hard": [81, 82, 217], "hard_sigmoid": 216, "hardsigmoid": [217, 226, 241], "hardswish": [226, 241], "hardwar": 10, "hat": [279, 280, 281, 282, 283], "have": [0, 1, 13, 14, 16, 19, 20, 22, 138, 140, 142, 143, 157, 158, 162, 213, 273, 317, 319, 320, 321, 322, 334, 336, 351, 353, 355, 361, 362, 367, 371, 377], "he": 134, "head": [25, 63, 78, 130, 155, 227], "head_fn": 63, "height": [130, 157, 158, 160, 166, 167, 180, 185, 186, 188, 189, 192, 193, 195, 196, 204, 230, 231, 253, 254, 255, 257, 258, 262, 263, 265, 266, 268, 269, 271, 370, 372, 377], "help": [10, 61, 148, 150, 167, 214, 218, 220, 221, 225, 252, 253, 254, 264, 265, 267, 268, 276, 279, 280, 282, 288, 289, 290, 292], "henc": 359, "here": [3, 12, 137, 170, 273, 275, 289, 290, 292, 300, 368, 369, 379], "hidden": [23, 132, 140], "hidden_s": 140, "hierarch": [25, 26, 140, 143, 273], "hierarchi": 230, "hierarchicalnetwork": 140, "high": [10, 28, 34, 35, 55, 56, 57, 58, 65, 78, 100, 115, 124, 296, 299], "higher": [35, 46, 76, 103, 247, 250, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 305, 306, 310, 332], "highest": [39, 296], "highli": [31, 39, 80, 134], "highlight": [203, 267, 268, 269], "hint": 292, "hinton": [5, 6], "histor": 278, "histori": [293, 295, 296, 297, 299, 313, 314, 315, 316, 317, 319, 320, 321, 322], "hold": [139, 140, 141, 142], "horizont": [353, 362, 374, 379], "hot": [247, 250], "how": [2, 3, 10, 116, 117, 118, 119, 124, 140, 143, 273, 292, 379], "howard": 134, "howev": [136, 213], "hstack": 354, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [134, 203], "huang": 134, "huber": [175, 248], "huber_loss": [169, 176], "huberloss": [241, 251], "huberregressionmodel": 248, "hue": 379, "huge": [34, 134], "hyperbol": [153, 225, 330, 340, 345], "hyperparamet": [84, 85, 86, 87, 88, 89, 92, 103, 131, 274, 276], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "iccv": 134, "idea": 134, "ideal": [10, 28, 32, 36, 76, 143], "ident": [16, 17, 63, 134, 196, 235, 241, 245, 298, 300, 317, 359], "identifi": 141, "idx": [2, 3], "ieee": [134, 203], "ii": 346, "ij": [152, 195, 223, 304, 305, 306, 310, 355, 364, 365], "ik": [304, 305, 306], "ill": [13, 19], "ilsvrc": 134, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 55, 56, 57, 58, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 133, 134, 157, 182, 196, 198, 203, 230, 257, 355, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 63, 76, 77, 78, 79, 80, 81, 82, 101, 102, 116, 117, 118, 119, 124, 134], "imbal": [247, 250], "impact": [134, 282], "implement": [2, 3, 10, 19, 23, 25, 40, 45, 59, 60, 61, 62, 63, 69, 70, 72, 76, 77, 78, 92, 101, 102, 104, 105, 106, 107, 108, 109, 110, 130, 132, 134, 137, 160, 163, 200, 201, 202, 204, 227, 235, 255, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 353, 367, 373], "impli": [229, 230], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 163, 164, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "improp": [140, 143, 300], "improv": [25, 46, 60, 61, 62, 66, 68, 70, 83, 92, 103, 116, 117, 118, 119, 120, 132, 134, 162, 163, 179, 196, 203, 215, 221, 225, 276, 277, 278, 279, 280, 281, 282, 283, 284, 292, 372, 375, 379], "imread": 3, "in1_featur": [170, 242], "in2_featur": [170, 242], "in_channel": [92, 140, 143, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 253, 254, 264, 265, 266, 267, 268, 269, 273], "in_featur": [139, 140, 143, 172, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 230, 231, 233, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 256, 259, 264, 265, 266, 267, 268, 269], "incept": [60, 61, 62, 63, 68, 69, 70, 71, 134], "inception_next": 63, "inception_next_atto": 134, "inception_next_bas": 134, "inception_next_smal": 134, "inception_next_tini": 134, "inception_resnet_v1": 134, "inception_resnet_v2": 134, "inception_v1": 134, "inception_v3": 134, "inception_v4": 134, "inceptionnext": [64, 65, 66, 67, 71, 134], "inceptionresnet": [69, 70], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 25, 59, 60, 61, 69, 72, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 125, 131, 132, 135, 137, 138, 140, 142, 143, 195, 197, 198, 199, 200, 201, 202, 271, 273, 274, 275, 282, 292, 300, 306, 356, 364, 365], "inclus": [138, 141, 296, 299, 318], "incom": [172, 244], "incompat": 350, "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 80, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 134, 215], "increas": [28, 29, 76, 103, 104, 105, 106, 107, 108, 109, 120, 156, 157, 158, 160, 196, 278, 285, 289, 353, 367, 373, 374, 376, 379], "independ": [140, 156, 157, 158, 233, 236, 237, 238, 239, 259, 306, 316, 371, 373, 375, 377], "index": [0, 2, 5, 6, 7, 8, 180, 255, 289, 313, 314, 317, 355, 359], "indexerror": 0, "indic": [0, 1, 90, 91, 125, 135, 138, 140, 142, 143, 174, 178, 247, 250, 264, 288, 301, 370, 372], "individu": [3, 140, 143, 248, 259, 275, 278, 285], "induc": [150, 221], "inf": 344, "infer": [116, 117, 118, 119, 124, 140, 143, 290], "infin": [20, 22, 281], "inform": [10, 134, 135, 136, 203, 275, 277, 290], "infti": [18, 283], "inherit": [1, 276, 284, 286], "init": 207, "initi": [1, 25, 40, 63, 68, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 126, 127, 128, 129, 131, 136, 138, 139, 140, 141, 142, 143, 204, 206, 208, 209, 210, 211, 212, 213, 229, 230, 231, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 298, 299, 300, 313, 317, 318, 319, 320, 321, 322, 349], "initial_accumulator_valu": 278, "inner": [10, 304, 323], "innov": 78, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 103, 116, 117, 118, 119, 120, 124, 130, 132, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 300, 301, 302, 304, 305, 306, 310, 314, 316, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "input1": 242, "input2": 242, "input_": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 132, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 255, 261, 262, 263, 364, 365], "input_1": 170, "input_2": 170, "input_data": [214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269], "input_s": [140, 142, 223, 247, 250], "input_shap": 135, "input_tensor": [10, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 125, 130, 136, 139, 140, 141, 142, 143, 152, 162, 163, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 273, 370, 371, 372, 373, 374, 375, 376, 377], "insid": [3, 288, 290], "insight": [10, 134], "inspect": [137, 138, 143, 274], "inspir": [25, 134], "instabl": [19, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "instal": 10, "instanc": [0, 1, 10, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 131, 133, 135, 137, 138, 139, 141, 142, 143, 182, 220, 256, 257, 258, 259, 274, 291, 349, 358, 363, 379], "instance_norm": [169, 181, 256, 257, 258], "instancenorm1d": [241, 260], "instancenorm1dmodel": 256, "instancenorm2d": [241, 260], "instancenorm3d": [241, 260], "instanti": [2, 45, 55, 56, 57, 58, 63, 64, 65, 66, 67, 116, 117, 118, 119, 124, 291], "instead": [10, 135, 139, 140, 141, 142, 143, 208, 209, 212, 213, 279, 280, 281, 290, 292, 315, 316], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 152, 155, 156, 157, 158, 160, 162, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 213, 223, 227, 229, 230, 231, 234, 242, 244, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 280, 281, 282, 283, 285, 291, 293, 295, 296, 297, 298, 299, 301, 313, 314, 315, 317, 318, 319, 321, 328, 334, 335, 336, 343, 347, 348, 349, 350, 351, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 372, 377], "integ": [1, 3, 17, 110, 125, 156, 157, 158, 185, 186, 229, 230, 231, 259, 262, 263, 265, 266, 267, 268, 269, 292, 296, 297, 299, 300, 315, 319, 321, 335, 343, 347, 348, 356, 358, 359, 360, 363], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 83, 134, 138, 140, 142, 143, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 242, 244, 264, 265, 266, 267, 268, 269], "intellig": [134, 203], "intend": [136, 141, 142], "intens": [19, 40, 93, 371, 373], "intent": 292, "interact": [170, 242, 273, 300], "interdepend": 134, "interfac": [2, 137, 140, 275], "interfer": [288, 290], "intermedi": [19, 90, 91, 203], "intern": [93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 134, 139, 140, 141, 142, 143, 247, 250, 273, 370, 371, 372, 373, 374, 375, 376, 377], "interpol": [169, 194, 271, 318, 377], "interpret": [134, 152, 223, 292, 351], "interv": [295, 299, 313], "introduc": [26, 46, 60, 61, 76, 77, 78, 103, 134, 149, 203, 215, 219, 220, 222, 225, 233, 236, 237, 238, 239, 372, 375, 379], "introspect": 143, "intuit": [10, 139, 141, 273, 379], "inv": 15, "inv_a": 16, "invari": [265, 268], "invers": [10, 13, 16, 17, 19, 278, 325, 326, 327], "invert": [13, 16, 17, 21, 77, 78, 80, 134], "invok": 291, "involv": [12, 13, 14, 16, 19, 20, 22, 120, 145, 146, 148, 149, 150, 151, 153, 170, 172, 195, 229, 230, 231, 242, 244, 292, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 332, 333, 334, 336, 339, 341, 355, 356, 358, 363], "is_caus": [155, 227], "is_leaf": 301, "issu": [3, 221, 252, 253, 254, 279, 280], "item": [7, 249], "iter": [0, 1, 2, 3, 136, 137, 140, 142, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 313], "ith": [152, 223], "its": [4, 17, 19, 23, 26, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 121, 122, 123, 132, 134, 135, 136, 139, 140, 141, 142, 156, 157, 158, 160, 196, 204, 213, 215, 219, 224, 234, 267, 268, 269, 273, 274, 277, 285, 288, 289, 290, 291, 313, 315, 316, 321, 334, 336, 349, 350, 359, 360, 371, 374, 376, 379], "itself": [12, 17, 139, 140, 141, 142], "j": [8, 152, 203, 223, 252, 253, 254, 256, 257, 258, 264, 265, 267, 268, 355, 362, 364, 365, 370, 372], "jie": 134, "jk": 305, "join": [3, 351], "json": 291, "k": [17, 134, 155, 156, 227, 229, 247, 253, 254, 257, 258, 264, 267, 268, 304, 305, 314, 317, 351, 360], "k_d": [158, 231, 266, 269], "k_h": [157, 158, 230, 231, 265, 266, 269], "k_w": [157, 158, 230, 231, 265, 266, 269], "kaim": [134, 208, 209, 212, 213], "kaiming_norm": 207, "kaiming_uniform": 207, "kalenichenko": 134, "karen": 134, "kashif": 7, "keep": [137, 163, 219, 277, 290, 359, 364, 365], "keep_grad": [138, 293, 295, 296, 297, 299, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 369], "keep_var": 137, "keepdim": [18, 334, 335, 336, 343, 348], "kei": [134, 137, 139, 141, 143, 155, 227, 274], "kept": [335, 343, 348], "kernel": [72, 73, 74, 75, 81, 82, 120, 121, 122, 123, 124, 132, 134, 156, 157, 158, 160, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 261, 262, 263, 265, 266, 269], "kernel_s": [78, 81, 82, 120, 121, 122, 123, 140, 143, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 253, 254, 264, 265, 266, 267, 268, 269], "keyerror": 137, "keyword": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 133, 137, 243], "kj": [304, 306], "known": 134, "kriz": [5, 6], "krizhevski": [5, 6, 134], "kroneck": [152, 223], "kwarg": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 137, 243, 291], "l": [12, 19, 55, 134, 155, 156, 165, 184, 187, 191, 197, 203, 227, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 350], "l2": [276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "l_": [156, 184, 187, 191, 229, 261, 264, 267], "l_out": [156, 187, 191], "label": [4, 5, 6, 7, 8, 61, 246, 247, 250], "lambd": 276, "lambda": [14, 150, 221, 276, 280], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 229, 242, 264, 267], "larg": [0, 3, 19, 28, 34, 35, 39, 40, 55, 58, 78, 81, 93, 94, 95, 98, 111, 112, 134, 200, 201, 202, 220, 248, 273, 276, 279, 280, 281, 284, 285, 286, 290], "larger": [27, 45, 46, 92, 120, 139, 141, 156, 157, 158, 160, 162, 234, 276, 307, 356, 370, 372, 377], "largest": [39, 334], "last": [1, 152, 183, 223, 305, 306, 351, 374, 376], "last_channel": 78, "latest": 4, "layer": [10, 23, 25, 26, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 134, 135, 137, 139, 140, 143, 152, 163, 172, 179, 182, 183, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 223, 227, 229, 230, 231, 235, 242, 243, 244, 250, 259, 264, 265, 266, 267, 268, 269, 273, 300, 356, 369], "layer1": 291, "layer2": 291, "layer_group": 140, "layer_norm": [169, 181, 259], "layer_scale_init": 25, "layer_sequ": [140, 143], "layernorm": [241, 260], "layernormmodel": 259, "le": 134, "lead": [140, 143, 215, 256, 257, 258, 259, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 300, 350], "leaf": 301, "leaki": [148, 218], "leaky_relu": [147, 169, 218], "leakyrelu": [226, 241], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 46, 65, 66, 103, 104, 105, 106, 107, 108, 109, 132, 133, 134, 139, 140, 141, 142, 149, 152, 203, 214, 218, 219, 223, 229, 230, 231, 236, 237, 238, 239, 242, 244, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 298, 318, 360, 364, 365, 368, 369, 379], "learnabl": [136, 137, 138, 179, 180, 182, 183, 197, 198, 199, 229, 230, 231, 242, 244, 252, 253, 254, 255, 256, 257, 258, 259, 273], "least": [19, 20, 22, 271, 346, 364, 365], "lecun": [8, 134], "left": [17, 18, 19, 22, 146, 152, 215, 223, 246, 247, 248, 250, 252, 253, 254, 256, 257, 258, 259, 267, 268, 269, 370, 372], "leftarrow": 282, "len": [0, 1, 2, 3, 355], "lenet": [71, 73, 74, 75, 134], "lenet_1": 134, "lenet_4": 134, "lenet_5": 134, "length": [140, 155, 156, 165, 184, 187, 191, 229, 243, 252, 256, 261, 264, 267, 356, 371], "leq": [216, 217, 248, 283, 311, 328, 365], "lerp": 195, "less": [0, 145, 148, 175, 214, 218, 247, 248, 250, 318, 328], "let": 14, "level": [10, 68], "leverag": [21, 62, 63, 70, 104, 105, 106, 107, 108, 109, 130, 134, 204, 273], "li": 134, "librari": [3, 10, 11, 137, 273, 274, 275, 291, 292, 300, 301, 379], "lie": 293, "lightweight": [10, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 77, 81, 82, 84, 85, 86, 87, 88, 89, 96, 113, 204, 217, 220], "like": [10, 46, 68, 104, 105, 106, 107, 108, 109, 121, 122, 123, 134, 136, 137, 140, 143, 156, 162, 212, 213, 221, 233, 234, 252, 253, 254, 256, 257, 258, 288, 289, 292, 349, 369, 379], "likelihood": [178, 247, 250], "limit": [30, 37, 81, 82, 135, 220, 277, 328], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 63, 77, 80, 110, 134, 135, 139, 140, 141, 143, 145, 146, 148, 149, 150, 163, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 233, 235, 236, 237, 242, 243, 246, 247, 248, 249, 250, 252, 256, 259, 264, 265, 266, 267, 268, 269, 291, 317], "linearli": 248, "linspac": 323, "linspace_tensor": 318, "list": [0, 1, 25, 26, 46, 63, 72, 78, 83, 92, 103, 110, 120, 125, 135, 136, 138, 139, 140, 141, 142, 183, 204, 243, 259, 274, 292, 293, 295, 296, 297, 299, 301, 314, 315, 316, 319, 320, 321, 322, 347, 350, 359, 360, 361, 366, 368], "listdir": 3, "liter": [92, 173, 174, 175, 177, 178, 195, 197, 198, 199, 200, 201, 202, 204, 208, 209, 229, 230, 231, 246, 247, 248, 249, 250, 271, 355], "liu": 134, "ln": 311, "load": [3, 4, 5, 6, 7, 8, 136, 137, 138, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291], "load_state_dict": [137, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "loader": [1, 2, 3], "local": [134, 160, 229], "locat": [134, 195], "log": [178, 246, 247, 250, 323], "log_softmax": 250, "logarithm": [311, 332, 333], "logic": [3, 261, 262, 263, 273, 274], "logit": [23, 25, 132, 152, 223, 247], "logsoftmax": [247, 250], "long": [282, 347], "loop": [1, 140, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "loss": [10, 19, 139, 140, 141, 142, 143, 152, 173, 174, 175, 177, 178, 214, 215, 218, 219, 221, 222, 223, 225, 233, 236, 237, 238, 239, 243, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "low": [10, 68, 77, 81, 82, 296, 299], "lower": [12, 76, 211, 276, 284, 285, 286, 299, 364, 365], "lower_triangular": 364, "lowest": 296, "lr": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "ls_init_valu": 63, "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 323, 354, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "m": [56, 125, 134, 139, 140, 143, 265, 266, 268, 269, 279, 280, 281, 282, 283, 317, 364, 365], "m_": [279, 280, 281, 282, 283, 364, 365], "m_t": [282, 283], "maaten": 134, "machin": [3, 7, 8, 10, 19, 134, 203, 279, 289, 298], "magnitud": [163, 284, 285, 379], "mai": [3, 10, 14, 16, 19, 140, 142, 196, 235, 248, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 300, 373, 379], "main": [10, 20, 68, 140, 314, 317, 364, 365], "maintain": [19, 26, 31, 55, 56, 57, 58, 66, 76, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 124, 134, 136, 137, 139, 140, 141, 143, 150, 163, 208, 209, 212, 213, 214, 215, 221, 233, 235, 236, 237, 238, 239, 252, 253, 254, 256, 257, 258, 279, 284, 370, 373, 377], "make": [1, 3, 10, 28, 29, 32, 33, 59, 68, 72, 77, 80, 81, 82, 92, 134, 140, 143, 222, 247, 248, 259, 265, 268, 273, 278, 279, 280, 281, 289, 291, 300, 301, 306, 355, 360, 368, 379], "manag": [10, 137, 139, 140, 141, 142, 143, 273, 275, 288, 290, 291, 300], "manhattan": 18, "mani": 135, "manipul": [10, 139, 141, 379], "manner": [140, 143], "manual": [173, 174, 178, 246, 247, 250, 290], "map": [63, 90, 91, 92, 103, 113, 120, 134, 137, 151, 153, 162, 180, 203, 222, 225, 235, 255], "mask": [134, 136, 155, 227, 233, 236, 237, 238, 239, 364, 365], "match": [21, 137, 140, 143, 155, 173, 175, 177, 183, 197, 198, 199, 234, 274, 332, 350, 358, 359, 360, 363, 366, 371, 379], "math": [329, 339, 344], "mathbb": 360, "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 130, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 170, 172, 195, 200, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 304, 305, 306, 310, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377], "mathcal": [208, 210, 212, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259], "mathemat": [16, 197, 198, 199, 372, 374, 375, 376], "mathrm": 19, "matmul": 323, "matric": [11, 13, 14, 16, 19, 21, 22, 304, 305, 306, 317, 355, 364, 365], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 160, 170, 243, 244, 273, 304, 355], "matrix_pow": 15, "matthew": 134, "max": [18, 110, 125, 149, 191, 192, 193, 216, 217, 219, 220, 267, 268, 269, 281, 307, 323, 328], "max_pool": [267, 268, 269], "max_pool1d": [169, 190], "max_pool2d": [169, 190], "max_pool3d": [169, 190], "max_valu": 328, "maxim": [3, 34], "maximum": [18, 219, 220, 267, 268, 269, 279, 281, 323, 328, 334, 375], "maxpool": [23, 132], "maxpool1d": [241, 270], "maxpool1dmodel": 267, "maxpool2d": [140, 143, 230, 241, 270], "maxpool2dmodel": 268, "maxpool3d": [231, 241, 270], "maxpool3dmodel": 269, "mean": [5, 6, 7, 8, 20, 90, 91, 135, 136, 150, 156, 157, 158, 161, 173, 174, 175, 177, 178, 179, 182, 197, 198, 199, 210, 214, 215, 216, 218, 219, 221, 222, 225, 231, 233, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 279, 280, 281, 282, 283, 284, 288, 297, 323, 328, 332, 333, 334, 336, 339, 341, 343, 346, 347, 348, 368, 371, 379], "meaning": [143, 292], "measur": [246, 247, 249, 250], "mechan": [10, 90, 91, 110, 120, 124, 142, 170], "medium": [33, 37, 56], "meet": 134, "membership": 246, "memori": [2, 3, 40, 290, 315, 316], "meshgrid": 354, "method": [3, 10, 11, 16, 46, 110, 130, 131, 139, 140, 141, 142, 143, 173, 174, 175, 177, 178, 208, 209, 212, 213, 246, 247, 248, 249, 250, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 300], "mid": 66, "mid_channel": [81, 82], "middl": 289, "might": 273, "min": [216, 217, 220, 308, 323, 328], "min_valu": 328, "mind": [0, 3, 10, 140, 143, 290], "mingx": 134, "mini": 1, "minim": [4, 10, 64, 78, 134, 143, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 275], "minimalist": 10, "minimum": [323, 328, 336], "minu": 222, "mirror": [320, 322], "mismatch": [46, 137, 273, 274], "miss": [137, 273], "mitig": [148, 214, 218, 221, 252, 253, 254], "mix": 63, "mixer": 63, "mlp": [63, 204], "mlp_ratio": 63, "mnist": [4, 7, 9, 73, 74], "mnist_train": [4, 8], "mobil": [76, 77, 78, 80, 81, 82, 134], "mobilenet": [71, 77, 78, 80, 81, 82, 134, 220], "mobilenet_v2": 134, "mobilenet_v3": [81, 82], "mobilenet_v3_larg": 134, "mobilenet_v3_smal": 134, "mobilenetv2": [77, 134], "mobilenetv3": [78, 81, 82, 134], "mode": [10, 167, 179, 182, 195, 208, 209, 233, 235, 236, 237, 238, 239, 271, 356], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 152, 155, 162, 196, 197, 198, 199, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 300, 368, 369, 379], "model_b0": 45, "model_b7": 45, "model_tini": 63, "moder": [29, 33, 67, 114], "modern": [25, 26, 63, 134], "modif": [131, 143, 290], "modifi": [24, 92, 130, 133, 139, 140, 141, 142, 206, 208, 209, 210, 211, 212, 213, 233, 288, 290, 298, 353, 367], "modul": [5, 6, 7, 8, 10, 23, 24, 25, 26, 45, 46, 59, 62, 63, 68, 69, 70, 72, 76, 77, 78, 92, 103, 110, 120, 125, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 163, 197, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 300, 369, 379], "modular": [3, 10, 134, 137, 140, 143, 273, 379], "moduledict": [140, 141, 143, 144], "modulelist": [142, 143, 144], "moment": [279, 280, 281, 282, 283], "momentum": [179, 182, 197, 198, 199, 252, 253, 254, 256, 257, 258, 276, 282, 284, 286], "momentum_decai": 282, "monoton": 224, "moor": 19, "more": [3, 4, 7, 10, 14, 28, 92, 99, 139, 140, 143, 162, 200, 201, 202, 214, 236, 237, 238, 239, 273, 274, 275, 276, 277, 280, 281, 284, 285, 286, 297, 306, 346, 362, 364, 365, 379], "most": [11, 32, 134, 268, 369, 370, 379], "move": [276, 284], "mse": [175, 177, 248, 249], "mse_loss": [169, 176], "mseloss": [241, 251], "mu": [210, 252, 253, 254, 256, 257, 258, 259, 348], "mu_c": 371, "mu_i": [256, 257, 258], "much": 379, "mul": 323, "multi": [3, 4, 63, 69, 120, 121, 122, 123, 134, 152, 155, 174, 178, 204, 223, 247, 250, 335, 343, 348], "multidimension": [295, 299, 315], "multipl": [1, 3, 10, 11, 17, 21, 23, 92, 110, 124, 141, 142, 143, 160, 195, 196, 203, 204, 233, 236, 237, 238, 239, 247, 250, 273, 289, 293, 295, 296, 297, 299, 304, 309, 315, 316, 360, 368, 373, 379], "multipli": [17, 79, 142, 172, 244, 271, 285, 309, 310], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 135, 137, 139, 140, 141, 142, 143, 163, 183, 233, 235, 236, 237, 238, 239, 250, 271, 274, 290, 293, 346, 350, 351, 353, 356, 358, 359, 360, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 376], "my_simple_model": 291, "mymodel": [137, 138, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "myoptim": [274, 275], "n": [17, 18, 92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 134, 139, 140, 143, 155, 156, 157, 158, 160, 162, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 203, 208, 210, 212, 227, 229, 230, 231, 238, 239, 242, 244, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 317, 335, 346, 348], "n1": 18, "nabla_": [277, 278, 279, 280, 281, 282, 283, 285], "nabla_t": 283, "nadam": 287, "nair": [5, 6], "name": [134, 135, 137, 139, 141, 143, 291, 292], "nan": [20, 22], "nano": [36, 134], "natur": [19, 134, 229, 242, 264, 267, 311, 332, 333], "ndarrai": [136, 138, 292, 293, 301, 314, 316, 320, 322, 349], "ndim": [20, 22, 138, 301], "ne": 17, "nearest": [195, 271], "necessari": [4, 5, 6, 7, 8, 19, 290, 353, 367], "need": [2, 4, 140, 141, 142, 152, 242, 273, 290, 315, 316, 368, 369, 379], "neg": [17, 19, 22, 145, 178, 196, 214, 218, 219, 221, 247, 250, 285, 351], "negative_slop": [148, 218], "neglect": 142, "neighbor": 195, "neq": 18, "nest": [135, 140, 143, 273], "nestedmodel": 135, "nesterov": 282, "net": [132, 134], "network": [3, 4, 10, 23, 24, 25, 26, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 68, 75, 76, 79, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 120, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 162, 163, 170, 172, 179, 196, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 284, 286, 299, 300, 301, 313, 319, 321, 334, 336, 356, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "neural": [3, 4, 10, 23, 24, 25, 45, 47, 48, 49, 50, 51, 52, 53, 54, 68, 75, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 163, 170, 172, 179, 196, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 284, 286, 299, 300, 301, 313, 319, 321, 334, 336, 356, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "neuralnetwork": [216, 217, 219, 224], "neuron": 218, "never": 373, "new": [137, 138, 145, 146, 148, 149, 150, 151, 153, 170, 172, 195, 204, 208, 209, 210, 211, 212, 213, 274, 291, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 353, 356, 358, 359, 362, 363, 364, 365, 366, 367], "next": [143, 368], "nll": 178, "nll_loss": [169, 176], "nllloss": [241, 251], "nn": [5, 6, 7, 8, 10, 23, 25, 26, 40, 45, 46, 59, 63, 68, 72, 76, 77, 78, 92, 103, 110, 116, 117, 118, 119, 120, 124, 125, 132, 135, 144, 147, 154, 159, 168, 171, 176, 181, 190, 194, 205, 207, 226, 228, 232, 240, 241, 245, 251, 260, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 369, 379], "no_grad": 288, "node": 301, "nois": [22, 300], "non": [14, 17, 19, 22, 142, 146, 148, 149, 208, 209, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 233, 236, 237, 238, 239, 279, 280, 290, 311, 328], "none": [0, 1, 2, 5, 6, 7, 8, 18, 45, 46, 59, 63, 68, 72, 76, 77, 78, 83, 92, 130, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 170, 172, 173, 174, 175, 177, 178, 179, 182, 183, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377], "norm": [11, 15, 281], "normal": [5, 6, 7, 8, 25, 110, 134, 146, 150, 152, 153, 162, 179, 180, 182, 183, 197, 198, 199, 207, 208, 212, 215, 221, 223, 233, 252, 253, 254, 255, 256, 257, 258, 259, 284, 297, 300, 368, 378, 379], "normalized_shap": [183, 259], "note": [156, 233], "noth": [161, 164, 165, 166], "notimplementederror": [2, 137, 274], "notin": 328, "nov": 134, "novel": [7, 134], "np": [92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 136, 138, 203, 247, 250, 292, 301, 306, 313, 314, 317, 319, 321, 322, 333, 349, 369], "npy": [5, 6, 7, 8], "num": 318, "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 223, 247, 250], "num_featur": [143, 197, 198, 199, 252, 253, 254, 256, 257, 258], "num_init_featur": [40, 41, 42, 43, 44], "num_paramet": 142, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 142, 143, 155, 156, 157, 158, 160, 165, 166, 167, 170, 172, 174, 178, 179, 180, 182, 184, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 222, 229, 230, 231, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 276, 295, 298, 299, 301, 311, 313, 315, 317, 318, 334, 335, 336, 347, 348, 351, 353, 356, 358, 359, 361, 363, 367, 371, 373, 374, 376, 379], "numer": [16, 19, 162, 173, 174, 179, 180, 182, 183, 197, 198, 199, 220, 234, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 281, 282, 283, 284, 292, 303, 313, 319, 321], "numpi": [10, 136, 138, 247, 250, 292, 301, 306, 314, 317, 318, 333, 346, 349, 350, 356, 358, 363, 369, 379], "o": [3, 266, 269, 319, 320], "object": [1, 3, 11, 120, 134, 137, 141, 142, 249, 273, 290, 302, 303, 307, 308, 309, 312, 349], "observ": 279, "obtain": 1, "occur": [196, 290, 291, 351], "occurr": 17, "odot": [233, 236, 237, 238, 239], "off": [29, 288], "offer": [4, 10, 26, 27, 29, 39, 66, 273, 275, 300, 379], "offset": 317, "often": [17, 101, 102, 156, 157, 158, 160, 234, 247, 250, 313, 321, 369, 373, 377, 379], "older": 282, "onc": 290, "one": [0, 116, 117, 118, 119, 124, 142, 143, 152, 156, 172, 187, 191, 197, 198, 199, 221, 222, 223, 229, 237, 247, 250, 252, 256, 264, 267, 271, 274, 289, 292, 297, 312, 320, 334, 336, 352, 357, 362, 369], "ones": [170, 172, 229, 230, 231, 244, 252, 253, 254, 256, 257, 258, 259, 273, 317, 320, 323], "ones_lik": 323, "onli": [10, 135, 195, 216, 219, 233, 234, 236, 237, 238, 239, 246, 247, 250, 252, 253, 254, 256, 257, 258, 259, 267, 268, 269, 285, 288, 313, 328, 334, 336, 346, 356, 357, 359, 361, 364, 365], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 90, 91, 110, 111, 112, 113, 114, 115, 136, 137, 140, 145, 146, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 163, 167, 170, 172, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 319, 321, 332, 333, 334, 335, 336, 339, 341, 343, 346, 348, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 377], "operatornam": [17, 19], "opposit": 276, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 30, 31, 34, 37, 39, 40, 46, 55, 56, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 77, 78, 81, 82, 134, 136, 138, 141, 142, 160, 229, 230, 231, 273, 290], "optimizer_st": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 152, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 218, 223, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 274, 276, 284, 286, 293, 295, 296, 297, 299, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 343, 347, 348, 349, 351, 355, 358, 360, 361, 362, 364, 365, 369, 373, 374, 376], "ord": 18, "order": [1, 3, 18, 22, 139, 140, 141, 142, 143, 347, 368], "ordered_dict": 143, "ordereddict": [137, 139, 140, 143], "organ": [139, 140, 141, 143, 291], "orient": 379, "origin": [26, 61, 75, 161, 196, 203, 225, 356, 357, 358, 359, 363, 366, 377], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [276, 284, 286], "other": [2, 3, 10, 16, 61, 70, 72, 75, 136, 137, 140, 143, 208, 209, 233, 234, 273, 274, 288, 290, 300, 301, 313, 315, 319, 321, 346, 355, 379], "otherwis": [93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 145, 148, 149, 150, 152, 163, 214, 216, 217, 218, 219, 221, 223, 235, 236, 237, 238, 239, 248, 264, 265, 266, 267, 268, 269, 274, 285, 291, 307, 308, 334, 336, 364, 365], "otim": [19, 170, 242], "out": [0, 3, 4, 145, 146, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 208, 209, 212, 213, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367], "out_channel": [72, 78, 81, 82, 140, 143, 197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 253, 254, 264, 265, 266, 267, 268, 269, 273], "out_featur": [139, 140, 143, 170, 172, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 230, 231, 233, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 256, 259, 264, 265, 266, 267, 268, 269], "outcom": [373, 374, 376], "outer": 323, "outlier": [175, 248], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 170, 172, 184, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 296, 297, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 319, 321, 322, 332, 333, 334, 335, 336, 339, 341, 343, 346, 347, 348, 355, 356, 358, 360, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "output_height": 160, "output_lay": [140, 143], "output_s": [140, 184, 185, 186, 261, 262, 263], "output_width": 160, "outsid": [0, 235], "over": [0, 1, 2, 3, 11, 77, 90, 91, 120, 132, 137, 140, 142, 152, 184, 185, 186, 203, 223, 229, 230, 231, 247, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 295, 299, 334, 335, 336, 343, 346, 348, 373, 374, 376], "overal": [130, 163], "overdetermin": 19, "overfit": [1, 23, 132, 164, 167, 234, 236, 237, 238, 239, 276, 279, 284, 286], "overhead": [78, 134, 203], "overli": 220, "overrid": [2, 3], "overridden": [137, 274], "overwrit": [139, 141], "own": [4, 139, 140, 141, 142, 156, 157, 158, 213, 273, 371], "p": [18, 19, 45, 138, 141, 142, 161, 162, 163, 164, 165, 166, 167, 233, 234, 236, 237, 238, 239, 264, 267, 268, 373, 374, 376, 379], "p_d": [266, 269], "p_h": [265, 266, 269], "p_w": [265, 266, 269], "packag": [2, 3, 4, 11, 134, 273, 275, 291, 298, 300, 369, 379], "pad": [72, 140, 143, 156, 157, 158, 160, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 253, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 354], "pad_after_dim1": 356, "pad_after_dim2": 356, "pad_before_dim1": 356, "pad_before_dim2": 356, "pad_width": 356, "padding_height": 160, "padding_width": 160, "pair": 170, "pang": 134, "paper": 60, "parallel": [1, 3, 120, 134], "param": [137, 138, 141, 142, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "param1": 137, "param_dict": 141, "param_group": [274, 275], "param_groups_setup": 274, "param_list": 142, "param_s": 291, "paramet": [0, 2, 10, 73, 74, 75, 134, 137, 273, 274, 275, 292, 300, 379], "parameterdict": 144, "parameterlist": 144, "parent": 273, "part": [136, 137, 213, 273, 288, 290, 300, 313, 314, 317, 319, 320, 321, 322, 360, 364, 365, 369, 379], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 145, 146, 148, 149, 150, 151, 152, 153, 170, 172, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367], "particip": [138, 369], "particular": [139, 141], "particularli": [10, 19, 77, 104, 105, 106, 107, 108, 109, 140, 141, 142, 143, 152, 162, 172, 197, 198, 199, 200, 201, 202, 223, 244, 247, 250, 256, 257, 258, 259, 280, 288, 291, 318, 368], "partit": 360, "pass": [2, 10, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 138, 139, 140, 141, 142, 143, 195, 197, 198, 199, 203, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 273, 292, 301, 318, 335, 343, 346, 347, 348, 351, 353, 357, 359, 361, 364, 365, 367, 369, 379], "past": [276, 277, 279, 284], "patch": [160, 265], "path": [3, 5, 6, 7, 8, 25, 26, 63, 163, 235], "pathwai": 134, "pattern": [134, 149, 203, 219, 229, 230, 231], "penal": [276, 284, 286], "penalti": [277, 278, 279, 280, 281, 282, 283], "penros": 19, "per": [1, 78, 104, 105, 106, 107, 108, 109, 121, 122, 123, 155, 184, 256, 257, 258, 259, 261, 350], "perceptron": 63, "perform": [3, 10, 11, 12, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 55, 56, 57, 58, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 100, 116, 117, 118, 119, 120, 125, 132, 134, 137, 138, 142, 146, 155, 156, 157, 158, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 288, 290, 298, 300, 302, 303, 306, 309, 312, 332, 334, 336, 343, 347, 350, 360, 368, 370, 372, 377, 379], "permut": 347, "persist": [136, 293, 295, 296, 297, 299, 315, 316], "perturb": [14, 21, 22, 379], "phi": [146, 215], "pi": [146, 215, 329, 339, 344], "pico": [37, 134], "piecewis": [216, 217], "pil": [369, 379], "pinv": 15, "pioneer": 134, "pipelin": [5, 6, 7, 8, 300, 368, 369, 371], "pixel": [5, 6, 7, 8, 195, 271, 371, 373], "place": [206, 208, 209, 210, 211, 212, 213], "placehold": [137, 243], "plai": [292, 300], "plot": 355, "point": [4, 196, 288], "pointwis": [200, 201, 202], "pool": [23, 72, 73, 74, 75, 83, 92, 103, 110, 120, 125, 132, 134, 184, 185, 186, 187, 188, 189, 191, 192, 193, 203, 204, 230, 231, 261, 262, 263, 264, 265, 266, 267, 268, 269, 334, 336], "pool1": 143, "pool2": 143, "poorli": 16, "popul": 137, "popular": [4, 134], "portion": [364, 365, 379], "pose": 19, "posit": [1, 12, 17, 137, 143, 155, 196, 214, 218, 219, 221, 227, 264, 265, 266, 267, 268, 269, 285, 289, 311, 358, 363, 372], "possibl": [10, 379], "potenti": [19, 243, 284, 361], "power": [10, 17, 36, 77, 81, 82, 83, 134, 203, 289, 290, 323, 368, 369, 379], "pp": 134, "practic": [19, 66, 247, 250], "practition": 379, "pre": [55, 56, 57, 58, 93, 97, 98], "preactbottleneck": [93, 97, 98], "preced": [134, 138, 271, 301], "preconfigur": [47, 48, 49, 50, 51, 52, 53, 54, 69, 70], "predecessor": 26, "predefin": [4, 134, 140, 221], "predict": [130, 246, 247, 249, 250], "prefix": [137, 291], "prepar": [3, 289, 356, 358, 363, 369, 379], "prepend": [137, 350], "preprint": 134, "preprocess": [3, 4, 160, 196, 300, 368, 369, 379], "present": [246, 247, 248, 250, 252, 253, 254, 256, 257, 258, 259, 265], "preserv": [134, 161, 163, 196, 233, 235, 313, 314, 317, 319, 320, 321, 322, 335, 343, 348], "preset": 4, "prevent": [1, 139, 140, 141, 142, 143, 155, 164, 167, 220, 227, 234, 236, 237, 238, 239, 246, 247, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290], "previou": [134, 276, 285, 290], "previous": 279, "primari": [10, 292], "primarili": 143, "principl": 134, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377], "priorit": [81, 82, 204, 216], "prob": 293, "probabilist": 300, "probabl": [45, 61, 146, 152, 155, 161, 162, 163, 164, 165, 166, 167, 173, 215, 223, 227, 233, 234, 235, 236, 237, 238, 239, 246, 247, 250, 293, 373, 374, 376, 379], "problem": [19, 20, 22, 134, 148, 214, 218, 283], "proceed": 134, "process": [2, 3, 4, 17, 20, 22, 23, 25, 69, 90, 91, 92, 120, 131, 132, 134, 142, 156, 157, 158, 182, 196, 197, 198, 199, 203, 204, 221, 225, 229, 231, 242, 252, 253, 254, 256, 257, 258, 259, 264, 266, 267, 269, 276, 292, 355, 369, 370, 371, 372, 377, 379], "produc": [23, 132, 135, 184, 185, 186, 203, 229, 230, 231, 261, 262, 263, 298, 300], "product": [10, 20, 22, 155, 217, 222, 224, 227, 242, 259, 273, 304, 305, 309, 310], "program": [288, 300], "progress": [46, 278], "project": [20, 22], "projector": 19, "promin": [264, 266, 267, 268, 269], "promot": [143, 247, 250, 273], "propag": [13, 14, 16, 19, 20, 21, 22, 134, 137, 143, 170, 172, 195, 203, 265, 266, 284, 285, 293, 304, 305, 306, 310, 334, 336, 355, 356, 359, 366], "properli": [0, 142, 152, 223, 273], "properti": [11, 13, 16, 17, 146, 150, 161, 215, 221, 233, 278, 283], "proport": [5, 6, 7, 8, 348], "proportion": 377, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 27, 36, 38, 59, 60, 61, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 125, 130, 131, 133, 134, 137, 139, 140, 141, 142, 146, 155, 172, 185, 186, 196, 227, 246, 247, 248, 250, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 284, 286, 288, 290, 292, 298, 300, 301, 306, 313, 320, 334, 336, 347, 349, 358, 361, 363, 379], "pseudo": [16, 19], "purpos": [27, 32, 36, 295, 299, 313, 319, 321], "python": 292, "pytorch": 349, "q": [20, 134, 155, 227], "qr": 15, "quad": [19, 246, 247, 248, 249, 250, 267, 268, 269, 302, 303, 307, 308, 309, 312, 364, 365, 370], "quadrat": 248, "queri": [155, 227], "quoc": 134, "quotient": 303, "r": [20, 134, 360, 373, 374, 375, 376], "r_t": 283, "radam": 287, "radix": [83, 84, 85, 86, 87, 88, 89, 90, 91], "rais": [0, 1, 2, 137, 273, 274, 311, 350], "rand": [294, 300], "randint": [294, 300], "randn": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 125, 130, 132, 155, 200, 201, 202, 203, 204, 227, 273, 294, 298, 300], "random": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 121, 122, 123, 124, 130, 155, 200, 201, 202, 203, 204, 235, 372, 373, 374, 375, 376, 379], "random_integ": 300, "random_tensor": 300, "randomcrop": [378, 379], "randomgrayscal": [378, 379], "randomhorizontalflip": [378, 379], "randomli": [1, 161, 163, 164, 165, 166, 167, 196, 233, 236, 237, 238, 239, 372, 373, 374, 375, 376, 379], "randomnoisedataset": [0, 1, 2], "randomrot": [378, 379], "randomverticalflip": 378, "rang": [0, 1, 11, 29, 38, 92, 100, 134, 142, 151, 153, 156, 157, 163, 174, 178, 213, 220, 222, 225, 235, 276, 284, 286, 293, 296, 318, 325, 326, 328, 371, 375, 379], "rank": 19, "rasul": 7, "rate": [25, 26, 45, 46, 63, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "rather": [7, 141, 142, 280, 359], "ratio": [45, 63, 110, 203, 204, 377], "ravel": 354, "raw": [152, 223, 247, 292], "re": [138, 290], "readabl": [139, 140, 141, 143, 273, 292], "readi": [3, 10, 116, 117, 118, 119, 124, 134], "real": [19, 22, 77, 222], "rearrang": 160, "reassembl": 134, "recalibr": [111, 113, 114, 116, 117, 118, 119, 134, 203], "receiv": [267, 268, 269, 356, 364, 365], "recent": 284, "recept": [120, 124, 134, 204], "reciproc": [19, 323, 333, 341], "recognit": [75, 90, 91, 134, 230], "rectangular": 317, "rectif": 283, "rectifi": [148, 149, 218, 219, 283], "recurr": [140, 259], "recurs": [135, 137], "red": 373, "reduc": [23, 76, 92, 103, 120, 125, 132, 134, 200, 201, 202, 203, 252, 253, 254, 256, 257, 258, 264, 265, 266, 267, 268, 269, 282, 285, 290, 292, 334, 335, 336, 343, 348, 373], "reduct": [22, 45, 110, 173, 174, 175, 177, 178, 203, 204, 246, 247, 248, 249, 250, 334, 336], "reevalu": 274, "refer": [4, 10, 137, 300, 314, 317, 351], "refin": 134, "reflect": 288, "regardless": [19, 357], "region": [158, 162, 184, 185, 186, 195, 216, 234, 262, 263, 356, 370, 379], "regist": [101, 102, 104, 105, 106, 107, 108, 109, 131, 136, 137, 138, 142, 273, 291], "register_buff": 136, "register_model": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 122, 123, 126, 127, 128, 129, 131, 133], "register_paramet": 137, "registr": [137, 273], "registri": [104, 105, 106, 107, 108, 109, 291], "registry_path": 291, "regress": [4, 177, 248, 249], "regular": [19, 23, 25, 45, 46, 61, 132, 163, 167, 227, 234, 236, 237, 238, 239, 276, 277, 278, 281, 282, 283, 284, 286], "reimagin": 134, "relat": [290, 317, 319], "relationship": 377, "relev": [195, 276, 284, 286], "reli": [162, 290], "reliabl": [5, 6, 7, 8], "reliant": [236, 237, 238, 239], "relu": [10, 23, 110, 125, 132, 134, 135, 139, 140, 141, 143, 145, 147, 148, 169, 197, 198, 199, 203, 204, 208, 209, 212, 213, 214, 218, 220, 224, 226, 229, 230, 231, 241, 242, 243, 244], "relu1": 143, "relu2": 143, "relu3": 143, "relu6": [226, 241], "remain": [5, 6, 7, 8, 38, 136, 163, 183, 233, 235, 236, 237, 238, 239, 285], "rememb": 300, "remov": [291, 361], "rep": 363, "repeat": [354, 355, 363], "repetit": [358, 363], "replac": [7, 300, 373], "replic": 350, "repres": [7, 16, 18, 22, 72, 84, 85, 86, 87, 88, 89, 137, 138, 143, 170, 172, 179, 182, 183, 229, 230, 231, 242, 244, 247, 250, 259, 274, 275, 276, 282, 283, 284, 285, 286, 292, 293, 302, 303, 309, 312, 314, 335, 346, 347, 348, 355, 370, 372, 374, 375, 376, 377], "represent": [83, 90, 91, 101, 102, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 124, 134, 203, 265, 268, 274], "reproduc": [293, 295, 296, 297, 298, 299, 300, 379], "requir": [2, 3, 4, 10, 28, 34, 35, 67, 78, 84, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 120, 136, 139, 143, 145, 146, 148, 149, 150, 151, 153, 170, 172, 195, 203, 204, 213, 243, 247, 250, 273, 288, 290, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 366, 367, 369, 370, 377], "requires_grad": [136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 160, 170, 172, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 273, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369], "rescal": [173, 174, 178, 246, 247, 250], "research": 273, "reset": [138, 298, 301], "reshap": [10, 110, 172, 230, 231, 271, 289, 292, 354, 357], "residu": [62, 68, 69, 70, 77, 78, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 134], "residualblock": 92, "resili": 285, "resiz": [195, 368, 378, 379], "resnest": [71, 84, 85, 86, 87, 88, 89, 90, 91, 134], "resnest_101": 134, "resnest_14": 134, "resnest_200": 134, "resnest_26": 134, "resnest_269": 134, "resnest_50": 134, "resnest_50_1s4x24d": 134, "resnest_50_4s2x40d": 134, "resnet": [68, 69, 70, 71, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 120, 121, 122, 123, 134, 203], "resnet_1001": 134, "resnet_101": 134, "resnet_152": 134, "resnet_18": 134, "resnet_200": 134, "resnet_269": 134, "resnet_34": 134, "resnet_50": 134, "resnet_arg": 120, "resnext": [71, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 124, 134], "resnext_101_32x16d": 134, "resnext_101_32x32d": 134, "resnext_101_32x4d": 134, "resnext_101_32x8d": 134, "resnext_101_64x4d": 134, "resnext_50_32x4d": 134, "resolut": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 116, 117, 118, 119, 124, 134], "resourc": [30, 31, 33, 34, 37, 38, 64, 78, 81, 82, 134, 290], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 72, 125, 136, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 170, 172, 195, 204, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 328, 332, 333, 334, 335, 336, 339, 341, 343, 346, 347, 348, 355, 356, 358, 363, 373], "respons": [116, 117, 118, 119, 134, 139, 180, 255, 275], "rest": [364, 365], "restor": [203, 290], "restructur": 359, "result": [12, 16, 17, 19, 134, 137, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 170, 172, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 204, 216, 220, 223, 235, 273, 274, 288, 290, 293, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 372, 373, 379], "resum": 275, "retain": [138, 162, 234, 301, 313, 321, 334, 335, 336, 343, 348, 364, 365, 369], "retent": 369, "rethink": 134, "retriev": [0, 2, 139, 141, 142], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 68, 72, 110, 136, 137, 139, 140, 141, 142, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 235, 236, 237, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 368, 379], "reus": [134, 369], "reusabl": [143, 235, 273, 368], "revers": [10, 143, 347, 374, 376], "revert": 290, "revolution": 134, "rgb": [5, 6, 60, 61, 62, 69, 70], "rho": 277, "rho_": 283, "rho_t": 283, "right": [17, 18, 19, 21, 22, 146, 152, 215, 223, 246, 247, 248, 250, 252, 253, 254, 256, 257, 258, 259, 267, 268, 269, 370], "rightarrow": 360, "risk": 292, "rmsprop": 287, "rob": 134, "robust": [27, 32, 65, 162, 196, 233, 236, 237, 238, 239, 248, 273, 277, 372, 373, 375, 379], "roland": 7, "role": [292, 300, 379], "root": [4, 5, 6, 7, 8, 278, 284, 341], "rotat": [169, 194, 375, 379], "rotated_imag": 196, "rout": [267, 268, 269], "routin": 10, "row": [13, 14, 16, 21, 172, 317, 355, 364, 365, 367], "rprop": 287, "rule": [16, 17, 289, 302, 303, 307, 308, 309, 311, 312], "run": [10, 136, 179, 182, 197, 198, 199, 252, 253, 254, 256, 257, 258, 277, 290, 298, 300], "running_mean": [136, 179, 182, 252, 253, 254, 256, 257, 258], "running_var": [179, 182, 252, 253, 254, 256, 257, 258], "runtim": [46, 140, 143, 235, 273, 318], "s_": 285, "s_1": 360, "s_2": 360, "s_d": [266, 269], "s_h": [265, 266, 269], "s_i": 360, "s_n": 360, "s_w": [265, 266, 269], "sain": 134, "same": [13, 14, 16, 17, 21, 152, 161, 162, 163, 164, 165, 166, 167, 179, 180, 182, 183, 185, 186, 196, 197, 198, 199, 200, 201, 202, 204, 220, 229, 230, 231, 233, 236, 237, 238, 239, 243, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 285, 293, 298, 300, 306, 316, 320, 322, 332, 334, 335, 336, 351, 353, 357, 359, 361, 362, 364, 365, 367, 371], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 55, 56, 57, 58, 60, 61, 62, 69, 70, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 116, 117, 118, 119, 124, 184, 185, 186, 208, 209, 210, 211, 212, 213, 233, 236, 237, 238, 239, 242, 244, 247, 250, 259, 261, 262, 263, 293, 297, 300, 318, 370, 372, 374, 375, 376, 377], "sandler": 134, "satisfi": [12, 14, 21, 360], "satur": [214, 379], "save": [2, 136, 138, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291], "scalabl": [3, 32, 45, 104, 105, 106, 107, 108, 109, 130, 134, 273], "scalar": [13, 18, 173, 174, 175, 177, 178, 292, 293], "scale": [14, 19, 25, 31, 33, 34, 35, 37, 39, 40, 45, 46, 63, 69, 73, 74, 75, 76, 79, 83, 90, 91, 93, 94, 95, 98, 111, 112, 120, 121, 122, 123, 134, 145, 150, 152, 155, 163, 179, 180, 182, 183, 203, 204, 212, 213, 214, 216, 218, 221, 222, 223, 225, 227, 233, 235, 236, 237, 238, 239, 247, 252, 253, 254, 255, 256, 257, 258, 259, 271, 276, 278, 279, 280, 292, 300, 348, 377], "scale_by_keep": [163, 235], "scale_factor": 271, "scaled_dot_product_attent": [154, 169], "scaleddotproductattent": [228, 241], "scenario": [30, 35, 37, 141, 142, 259, 280, 281, 369, 373], "schedul": [234, 276], "scientif": 289, "score": [92, 103, 120, 152, 155, 227, 247], "scratch": 10, "script": 300, "se": [45, 111, 112, 113, 114, 115, 116, 117, 118, 119, 134], "se_resnet_101": 134, "se_resnet_152": 134, "se_resnet_18": 134, "se_resnet_34": 134, "se_resnet_50": 134, "se_resnext_101_32x4d": 134, "se_resnext_101_32x8d": 134, "se_resnext_101_64x4d": 134, "se_resnext_50_32x4d": 134, "se_scal": 45, "seamless": [0, 1, 3, 4, 273, 300], "seamlessli": [3, 4, 11, 138, 140, 143, 273, 292, 379], "search": 134, "second": [14, 140, 141, 170, 203, 242, 279, 280, 281, 282, 283, 289, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 355, 376], "section": 306, "see": [10, 306], "seed": [293, 294, 295, 296, 297, 299, 300, 379], "seen": 277, "select": [120, 121, 122, 123, 124, 134, 195, 203, 204, 267, 269, 343], "selectivekernel": 205, "self": [0, 1, 2, 3, 10, 23, 45, 46, 59, 63, 68, 72, 76, 77, 78, 83, 110, 125, 132, 135, 136, 137, 138, 139, 140, 141, 142, 150, 163, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 368, 369], "selu": [147, 161, 169, 226, 233, 241], "selunetwork": 221, "semodul": 205, "senet": [71, 111, 112, 113, 114, 115, 116, 117, 118, 119, 134], "sensit": [175, 248, 252, 253, 254], "sentiment": 4, "separ": [0, 76, 90, 91, 130, 134, 156, 157, 158, 200, 201, 202, 256, 257, 258], "seq_len": [155, 227], "sequenc": [17, 92, 103, 120, 139, 141, 155, 156, 313, 318, 351, 353, 356, 358, 362, 363, 367, 368], "sequenti": [23, 68, 72, 110, 125, 130, 132, 135, 139, 140, 144, 156, 197, 198, 199, 243, 368, 379], "seri": [59, 73, 74, 120, 156, 197, 229, 264, 267], "serial": [136, 137, 275], "serv": [3, 7, 40, 68, 110, 125, 137, 139, 140, 141, 142, 143, 273, 285, 369], "set": [3, 4, 5, 6, 7, 8, 90, 91, 101, 102, 116, 117, 118, 119, 124, 135, 138, 142, 155, 156, 157, 158, 218, 219, 221, 227, 229, 230, 231, 233, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 274, 279, 280, 284, 293, 295, 296, 297, 298, 299, 300, 301, 313, 315, 316, 321, 322, 328, 334, 336, 349, 364, 365, 369, 373, 379], "setup": [4, 10, 104, 105, 106, 107, 108, 109], "sever": [19, 229, 230, 231, 264, 265, 266, 267, 268, 269, 290, 368, 379], "sgd": [10, 276, 283, 287], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 72, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 121, 122, 123, 124, 125, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 289, 292, 293, 295, 296, 297, 299, 300, 301, 304, 315, 316, 317, 319, 320, 321, 322, 328, 333, 334, 335, 336, 339, 341, 343, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 379], "shapelik": 296, "share": 134, "shen": 203, "shift": [179, 180, 182, 183, 216, 252, 253, 254, 255, 256, 257, 258, 259], "shorthand": 306, "should": [72, 136, 290, 293, 295, 296, 297, 299, 315, 316, 325, 326, 346, 350, 356, 368], "show": [288, 291], "showcas": 10, "shown": [224, 298], "shrink": 277, "shuffl": [1, 2, 3], "side": [21, 140, 143, 156, 157, 158, 187, 188, 189, 191, 192, 193, 197, 198, 199, 229, 230, 231, 264, 265, 266, 267, 268, 269, 290], "sigma": [19, 203, 208, 210, 212, 222, 224, 252, 253, 254, 256, 257, 258, 259, 347], "sigma_c": 371, "sigma_i": 19, "sigmoid": [147, 169, 203, 208, 209, 212, 213, 216, 217, 224, 226, 241, 246], "sigmoidnetwork": 222, "sign": [17, 248, 285, 323], "signal": [197, 229, 230, 231, 252, 256, 264, 265, 266, 267, 268, 269], "signific": [28, 290], "significantli": [77, 103, 134, 203, 368], "sim": [233, 236, 237, 238, 239], "similar": [10, 208, 209, 306, 333, 349, 350, 356], "similarli": [22, 346], "simonyan": 134, "simpl": [3, 4, 10, 135, 143, 156, 157, 158, 170, 172, 187, 188, 189, 191, 192, 193, 215, 216, 217, 219, 220, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 304, 305, 310, 368], "simplebinaryclassificationmodel": 246, "simpleblock": 163, "simpleclassificationmodel": [247, 250], "simplegelumodel": 215, "simplehardsigmoidmodel": 216, "simplehardswishmodel": 217, "simpleleakyrelumodel": 218, "simplemodel": [10, 135, 220, 235, 244, 291], "simpleregressionmodel": 249, "simplerelumodel": 219, "simpleselumodel": 221, "simplesigmoidmodel": 222, "simpleswishmodel": 224, "simpletanhmodel": 225, "simpli": [288, 346, 347, 359], "simplic": [134, 216, 219], "simplifi": [4, 55, 56, 57, 58, 73, 131, 134, 143, 197, 198, 199], "simul": [135, 379], "simultan": 196, "sin": [323, 329], "sinc": [17, 20, 139, 140, 141, 142, 156, 157, 158, 213, 288, 290, 293, 297, 355, 379], "sine": [326, 339, 340], "singl": [0, 4, 17, 20, 22, 92, 152, 197, 198, 199, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 247, 259, 265, 266, 267, 268, 269, 274, 292, 299, 315, 318, 351, 361, 371, 373, 379], "singleton": 259, "singular": [13, 16, 17, 19, 21, 22], "sinh": [323, 330, 345], "size": [0, 1, 2, 3, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 63, 66, 72, 73, 74, 75, 79, 81, 82, 92, 120, 132, 134, 135, 138, 140, 155, 156, 157, 158, 160, 162, 165, 166, 167, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 234, 242, 244, 246, 247, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 296, 299, 300, 301, 334, 335, 336, 343, 348, 350, 351, 353, 360, 361, 366, 367, 370, 372, 377, 379], "size_or_sect": 360, "sk": [120, 121, 122, 123, 124, 134, 204], "sk_resnet_18": 134, "sk_resnet_34": 134, "sk_resnet_50": 134, "sk_resnext_50_32x4d": 134, "skblock": 120, "skip": [134, 290], "sknet": [71, 121, 122, 123, 124, 134], "slice": [170, 346], "slide": [160, 264, 266, 267, 269], "slight": 203, "slightli": 379, "slope": [148, 214, 218], "slow": [3, 283], "small": [19, 29, 31, 33, 36, 55, 56, 57, 58, 65, 66, 73, 74, 75, 78, 81, 82, 134, 148, 162, 173, 174, 179, 180, 182, 183, 218, 221, 234, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 265, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285], "smaller": [30, 55, 56, 57, 58, 132, 134, 140, 143, 273, 278, 279, 308, 370, 372, 377], "smallest": 336, "smooth": [61, 146, 214, 215, 224, 276, 284, 379], "smoother": 276, "so": [139, 140, 141, 142, 196, 273, 283, 315, 316, 368], "softmax": [147, 155, 169, 204, 226, 227, 241, 247], "softmaxmodel": 223, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [145, 163, 164, 196, 233, 235, 236, 237, 252, 253, 254, 256, 257, 258, 278, 279, 280, 290, 292], "sometim": 289, "sophist": [140, 143], "sourc": [155, 300], "space": [14, 20, 22, 156, 157, 158, 160, 184, 185, 186, 197, 198, 199, 200, 201, 202, 229, 230, 231, 261, 262, 263, 313, 318, 379], "span": 4, "spars": [278, 279], "spatial": [23, 92, 103, 120, 125, 132, 134, 162, 180, 198, 203, 230, 231, 252, 253, 254, 256, 257, 258, 259, 265, 266, 267, 268, 269, 271, 355], "spatial_dim": 203, "spatio": 231, "special": [0, 1, 10, 19, 136, 137, 138, 233, 300], "specif": [4, 10, 41, 42, 43, 44, 55, 56, 57, 58, 68, 76, 90, 91, 101, 102, 139, 140, 141, 142, 143, 204, 213, 233, 236, 237, 238, 239, 256, 257, 258, 273, 274, 288, 300, 315, 334, 336, 358, 363], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 40, 46, 72, 79, 80, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 135, 140, 152, 160, 167, 173, 174, 175, 177, 178, 183, 184, 185, 186, 195, 196, 203, 223, 229, 230, 231, 246, 247, 248, 249, 250, 259, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 292, 295, 296, 297, 298, 299, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 334, 335, 336, 343, 347, 348, 349, 350, 351, 353, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 377, 379], "speech": 256, "speed": [81, 82, 216, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "split": [4, 83, 90, 91, 134, 351, 353, 354, 367], "split_tensor": 360, "springer": 134, "sqrt": [146, 155, 180, 208, 209, 212, 213, 215, 227, 252, 253, 254, 255, 256, 257, 258, 259, 277, 278, 279, 280, 282, 283, 284, 323, 325, 326], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 162, 175, 177, 234, 248, 249, 277, 278, 279, 284, 323, 341], "squaredataset": [0, 1, 2, 3], "squeez": [45, 78, 81, 82, 110, 113, 116, 117, 118, 119, 134, 203, 354], "stabil": [16, 19, 134, 162, 173, 174, 179, 180, 182, 183, 197, 198, 199, 220, 234, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 276, 277, 278, 279, 280, 281, 282, 283, 284, 371], "stabl": [208, 209, 212, 213, 233, 247, 276, 280, 281, 284, 285, 286], "stack": [143, 204, 353, 354, 367, 379], "stage": [25, 26, 63, 83, 84, 85, 86, 87, 88, 89, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 134], "stage1": 110, "stage2": 110, "stage3": 110, "stage4": 110, "standalon": 220, "standard": [27, 32, 65, 92, 101, 102, 146, 148, 200, 201, 202, 208, 210, 212, 214, 215, 218, 233, 285, 297, 300, 306, 368, 371, 379], "start": [1, 3, 276, 278, 285, 313, 318, 370, 372], "state": [34, 134, 136, 137, 138, 140, 143, 274, 288, 290, 298], "state_dict": [137, 138, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "static": 143, "statist": [19, 161, 179, 182], "std": [5, 6, 7, 8, 210, 368, 371, 379], "stem": [68, 83, 92, 103, 120, 134], "stem_typ": 92, "stem_width": [83, 84, 85, 86, 87, 88, 89, 92], "step": [138, 160, 204, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 313, 368, 369], "step_siz": 285, "still": [37, 277], "stochast": [10, 25, 26, 45, 46, 63, 163, 235, 276, 286], "stochastic_depth": 45, "stop": [313, 318], "storag": [139, 141, 301], "store": [2, 4, 5, 6, 7, 8, 92, 103, 120, 136, 137, 138, 139, 140, 141, 142, 203, 261, 262, 263, 290, 301, 370, 371, 372, 373, 374, 375, 376, 377], "str": [5, 6, 7, 8, 92, 125, 137, 139, 141, 143, 173, 174, 175, 177, 178, 195, 271, 274, 291, 355], "straightforward": [286, 288, 302], "strategi": 275, "streamlin": [2, 3, 134], "strength": 234, "strict": [137, 274], "stride": [46, 72, 73, 74, 75, 78, 81, 82, 140, 143, 156, 157, 158, 160, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 261, 262, 263, 264, 265, 266, 267, 268, 269], "stride_height": 160, "stride_width": 160, "strike": 32, "string": [137, 139, 141, 143, 229, 230, 231, 274], "structur": [0, 10, 20, 46, 78, 130, 136, 137, 140, 162, 234, 273, 274, 291, 292, 317, 369], "style": [68, 182, 256, 257, 355], "sub": [139, 140, 141, 142, 143, 273, 323, 360, 370, 372], "sub_tensor": 301, "subclass": [1, 2, 3, 10, 137, 138, 139, 273, 274], "sublay": 135, "submodul": [135, 137, 273], "subsequ": [140, 143, 213, 300], "subset": [90, 91, 236, 237], "subtract": [10, 312, 371], "suffer": 278, "suit": [37, 41, 42, 43, 44, 61, 76, 120, 208, 209, 212, 213], "suitabl": [27, 29, 30, 33, 35, 47, 48, 49, 50, 51, 52, 53, 54, 68, 73, 74, 75, 77, 81, 82, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 115, 134, 248, 278, 279, 295], "sum": [18, 139, 140, 141, 142, 143, 152, 155, 173, 174, 175, 177, 178, 204, 223, 246, 247, 248, 249, 250, 278, 302, 305, 310, 323, 346, 348, 350, 351, 353, 355, 358, 360, 363, 367], "sum_": [17, 152, 180, 223, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 304, 305, 335, 343, 346, 348, 350, 355, 358], "sum_i": [18, 310], "sum_j": 310, "sum_k": 306, "summar": [45, 101, 102, 130, 264, 265, 266], "summari": [101, 102, 116, 117, 118, 119, 124], "summat": 17, "sun": 203, "super": [10, 135, 136, 137, 138, 139, 140, 141, 142, 163, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 235, 236, 237, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291], "superior": 39, "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 79, 92, 139, 140, 141, 142, 143, 155, 195, 196, 227, 271, 273, 275, 282, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 314, 317, 328, 333, 335, 339, 341, 343, 346, 347, 348, 351, 355, 359, 360, 369, 379], "suppos": 379, "sure": [273, 379], "svd": [15, 19], "swish": [81, 82, 226, 241], "symmetr": [12, 184, 185, 186, 212, 213, 225], "syntax": [1, 306], "system": [11, 12, 19, 20, 21, 134, 288, 355], "systemat": [134, 379], "szegedi": [60, 134], "t": [19, 134, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 301, 306, 349, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "t0": 276, "t1": 349, "t2": 349, "tabl": 45, "tabular": 4, "tailor": [4, 78, 84, 85, 86, 87, 88, 89, 273, 379], "take": [20, 264, 265, 266, 267, 268, 269, 271, 290, 368], "taken": 346, "tan": [134, 323], "tangent": [153, 225, 327, 344, 345], "tanh": [72, 140, 143, 146, 147, 169, 208, 209, 212, 213, 215, 226, 241, 323], "tanhnetwork": 225, "target": [5, 6, 7, 8, 37, 143, 173, 174, 175, 177, 178, 184, 185, 186, 195, 246, 247, 248, 249, 250, 261, 262, 263, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 350, 370, 372, 377], "target_tensor": [246, 247, 248, 249, 250], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 130, 134, 151, 152, 157, 170, 173, 174, 177, 178, 203, 204, 222, 223, 229, 230, 231, 246, 247, 248, 249, 250, 256, 257, 258, 264, 266, 267, 269, 279, 289, 300, 317, 318, 379], "techniqu": [12, 16, 25, 46, 63, 132, 134, 163, 179, 233, 234, 236, 237, 238, 239, 256, 257, 258, 275, 377, 379], "tempor": [229, 231, 266, 269], "temporarili": 290, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 92, 104, 105, 106, 107, 108, 109, 110, 121, 122, 123, 125, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 288, 290, 292, 293, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "term": [19, 38, 170, 197, 198, 199, 200, 201, 202, 276, 280, 282, 283, 284, 286], "test": [4, 5, 6, 7, 8, 318], "test_backward": 135, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 92, 103, 120, 121, 122, 123, 130, 139, 145, 148, 149, 150, 152, 155, 156, 157, 158, 163, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 264, 265, 266, 267, 268, 269, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 296, 302, 303, 305, 307, 308, 309, 311, 312, 324, 328, 334, 335, 336, 338, 343, 348, 350, 351, 353, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376], "th": [170, 246, 247, 249, 250, 256, 257, 258, 307, 308, 311], "than": [0, 1, 7, 141, 142, 145, 148, 175, 200, 201, 202, 214, 218, 224, 248, 274, 280, 318, 328, 346, 350, 356, 362, 370, 372, 377], "thei": [0, 10, 22, 134, 136, 140, 142, 143, 292, 355, 359, 370, 372, 379], "them": [3, 134, 137, 142, 160, 276, 289, 351, 362, 368, 371, 379], "therebi": [233, 265, 266, 268, 269], "theta": [276, 277, 375], "theta_": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "theta_t": [283, 284], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 60, 61, 62, 68, 69, 70, 72, 76, 77, 78, 80, 81, 82, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 134, 135, 136, 138, 140, 141, 142, 143, 149, 151, 152, 153, 156, 157, 158, 160, 162, 163, 170, 172, 184, 195, 196, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 250, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 298, 300, 301, 305, 306, 310, 313, 315, 319, 320, 321, 322, 328, 332, 333, 334, 335, 336, 339, 341, 343, 346, 347, 348, 349, 350, 356, 358, 359, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "thing": 290, "those": [10, 73, 74, 75, 142, 213], "three": [22, 75, 158, 186, 189, 193, 197, 198, 199, 231, 239, 254, 258, 263, 266, 269], "threshold": [19, 175, 248], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 25, 59, 68, 72, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 122, 123, 131, 132, 134, 139, 140, 143, 162, 170, 172, 195, 203, 204, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 293, 297, 304, 305, 310, 355, 357, 359, 361, 364, 365, 366, 379], "throughout": [150, 369], "tier": 34, "tile": 354, "time": [0, 3, 17, 73, 74, 75, 77, 156, 197, 218, 221, 229, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 284, 286, 290, 358, 363], "tini": [29, 30, 38, 63, 67, 134], "to_tensor": [5, 6, 7, 8], "togeth": [143, 368, 379], "token": 63, "token_mix": 63, "too": 285, "tool": [3, 10, 273, 289, 300, 368, 379], "top": [12, 13, 14, 20, 22, 34, 155, 170, 172, 195, 227, 229, 230, 231, 242, 244, 370, 372], "torch": [125, 349], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 138, 301, 359], "totensor": [368, 379], "trace": [11, 323], "track": [10, 197, 198, 199, 252, 253, 254, 256, 257, 258, 273, 288, 290, 293, 295, 296, 297, 299, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 350, 369], "track_running_stat": [197, 198, 199, 252, 253, 254, 256, 257, 258], "trade": 29, "tradit": [7, 134, 277, 278, 281, 282, 283], "trail": 183, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 46, 59, 60, 61, 116, 117, 118, 119, 124, 134, 135, 136, 137, 140, 142, 143, 152, 161, 162, 163, 164, 165, 166, 167, 179, 182, 196, 215, 218, 221, 222, 223, 225, 233, 234, 235, 236, 237, 238, 239, 252, 253, 254, 256, 257, 258, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 368, 371, 372, 373, 374, 375, 376, 379], "trainabl": [135, 252, 253, 254, 256, 257, 258, 273], "transact": 203, "transfer": [182, 256, 257], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 25, 134, 141, 155, 170, 172, 227, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 289, 355], "transform_pipelin": [368, 379], "transformed_imag": [368, 379], "transit": [40, 248], "translat": [265, 268], "transpos": [10, 12, 323], "treat": [0, 136, 259, 273], "triangular": [12, 20, 364, 365], "tril": 354, "triu": 354, "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 59, 60, 61, 81, 82, 83, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 160, 161, 163, 164, 165, 166, 167, 170, 172, 179, 182, 195, 197, 198, 199, 200, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 273, 274, 279, 280, 284, 288, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369], "truncat": 135, "truncate_from": 135, "try": 0, "tune": 379, "tupl": [2, 3, 5, 6, 7, 8, 14, 18, 20, 22, 40, 92, 135, 137, 138, 156, 157, 158, 160, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 229, 230, 231, 243, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 280, 281, 282, 283, 285, 292, 295, 296, 297, 299, 301, 315, 319, 321, 334, 335, 336, 343, 348, 350, 351, 353, 355, 356, 359, 360, 361, 362, 366, 367, 370, 371, 372, 377], "twice": 356, "two": [10, 13, 14, 16, 17, 19, 20, 22, 73, 74, 75, 78, 90, 91, 121, 125, 156, 157, 158, 170, 188, 192, 203, 204, 230, 238, 242, 253, 257, 265, 268, 279, 280, 281, 282, 283, 285, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 346, 355, 360], "type": [63, 72, 83, 92, 110, 120, 136, 137, 138, 170, 242, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349, 355, 369], "typeerror": [0, 1, 2, 137, 274], "typic": [11, 92, 103, 120, 136, 152, 161, 162, 196, 203, 220, 221, 223, 234, 235, 250, 252, 253, 254, 256, 257, 258, 275, 276, 284, 286, 290, 292, 366, 369, 371, 375, 377, 379], "u": [19, 22, 209, 211, 213], "u_": 281, "ultra": [31, 98], "unchang": [136, 167, 214, 218, 219, 221, 233, 236, 237, 238, 239, 243, 357, 361], "undefin": 311, "under": [104, 105, 106, 107, 108, 109, 273], "underbrac": 17, "underdetermin": 19, "undergo": [163, 379], "underli": [0, 10, 55, 56, 57, 58, 60, 61, 62, 69, 70, 349, 353, 357, 359, 367], "understand": [10, 132, 134, 135, 143, 379], "unexpect": [137, 140, 143, 300], "unfold": [159, 169], "unifi": 0, "uniform": [207, 209, 213, 229, 230, 231, 242, 244, 294, 295, 296, 300, 373, 374, 375, 376], "uniformli": [295, 299], "uniniti": [315, 316], "unintend": 290, "union": 125, "uniqu": [12, 19, 21, 139, 141], "unit": [23, 72, 132, 145, 146, 148, 149, 150, 208, 209, 212, 213, 214, 215, 218, 219, 221, 233], "unless": [93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 301], "unlik": [136, 139, 140, 141, 142, 148, 214, 218, 233, 259, 277, 278, 280, 281, 282, 283, 285], "unnecessari": 290, "unpad": 356, "unseen": 379, "unsqueez": 354, "unstabl": 16, "up": [274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 375, 377], "updat": [4, 26, 136, 142, 143, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290], "upon": [26, 61, 78, 134, 139, 140, 141, 142], "upper": [20, 211, 285, 299, 364, 365], "upper_triangular": 365, "upsampl": [241, 272], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 40, 45, 46, 59, 60, 61, 62, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 170, 172, 177, 179, 180, 182, 185, 186, 195, 196, 197, 198, 199, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 288, 289, 290, 291, 293, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 332, 334, 335, 336, 343, 348, 355, 356, 358, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "usag": [3, 11, 27, 28, 29, 30, 38, 39, 40, 130, 140, 143, 163, 200, 201, 202, 227, 234, 274, 275, 318, 370, 371, 372, 373, 374, 375, 376, 377], "use_aux": [59, 60, 61], "use_h": [81, 82], "use_s": [81, 82], "user": [1, 2, 3, 4, 10, 139, 140, 141, 142, 273, 278, 368, 369, 379], "usual": 247, "util": [3, 10, 11, 121, 122, 123, 141, 142, 162, 273, 300], "v": [14, 19, 22, 134, 155, 227, 279, 280, 282, 283, 314], "v1": [59, 60, 68, 69, 70, 76, 77, 134], "v2": [31, 32, 33, 34, 35, 36, 37, 38, 46, 55, 56, 57, 58, 68, 70, 71, 77, 78, 80, 134], "v3": [59, 61, 62, 71, 78, 81, 82, 134], "v4": [59, 62, 134], "v_": [276, 279, 280, 282, 283, 284, 286], "v_stack": 367, "v_t": [283, 284], "val": 206, "valid": [197, 198, 199, 200, 201, 202, 204, 229, 230, 231, 347], "valu": [10, 13, 17, 18, 19, 22, 25, 63, 76, 101, 102, 135, 137, 139, 141, 143, 145, 148, 151, 152, 153, 155, 156, 157, 158, 160, 162, 163, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 195, 196, 197, 198, 199, 203, 206, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 225, 227, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 295, 296, 297, 298, 299, 300, 313, 314, 315, 316, 317, 318, 324, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 351, 356, 357, 359, 366, 371, 373, 374, 376], "valuabl": 300, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 274], "van": 134, "vanish": [134, 214, 221, 252, 253, 254], "var": 323, "vari": [25, 120, 140, 142, 184, 195, 261, 375], "variabl": [137, 143, 184, 185, 186, 243, 261, 262, 263, 273, 288, 290, 295, 315, 372, 375], "varianc": [150, 161, 179, 182, 197, 198, 199, 208, 209, 212, 213, 221, 233, 252, 253, 254, 256, 257, 258, 259, 279, 280, 281, 282, 283, 297, 348, 375, 379], "variant": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 58, 64, 65, 66, 67, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 279, 280, 281], "variat": [200, 201, 202, 256, 257, 258, 372, 379], "varieti": [4, 68, 83, 300, 379], "variou": [7, 40, 59, 69, 70, 72, 79, 134, 219, 275, 300, 318, 334, 336, 356, 369], "vasudevan": 134, "vdot": 310, "vector": [14, 19, 20, 21, 22, 170, 172, 242, 244, 304, 305, 306, 310], "veloc": [276, 284, 286], "veri": [19, 33, 95, 97, 134, 277], "versa": 285, "versatil": [300, 355], "version": [22, 25, 59, 63, 68, 72, 73, 74, 284, 310, 373], "vertic": [362, 367, 376], "vgg": 125, "vggnet": [71, 126, 127, 128, 129, 134], "vggnet_11": 134, "vggnet_13": 134, "vggnet_16": 134, "vggnet_19": 134, "via": [3, 4, 120], "vice": 285, "video": [158, 167, 199, 231, 258, 266, 269], "view": [68, 72, 140, 265, 266, 267, 268, 269, 350, 359], "vinod": [5, 6], "vision": [76, 77, 80, 83, 92, 134, 157, 230, 242, 379], "visual": [132, 134], "vol": 134, "vollgraf": 7, "volumetr": [158, 167, 199, 231, 258, 266, 269], "vstack": 354, "w": [92, 104, 105, 106, 107, 108, 109, 121, 122, 123, 134, 157, 158, 160, 162, 166, 167, 170, 172, 180, 185, 186, 188, 189, 192, 193, 195, 196, 198, 199, 203, 229, 230, 231, 242, 244, 253, 254, 255, 257, 258, 262, 263, 266, 269, 370, 372], "w_": [157, 158, 185, 186, 188, 189, 192, 193, 195, 230, 231, 262, 263, 265, 266, 268, 269], "w_out": [157, 158, 188, 189, 192, 193], "wa": [60, 233, 236, 237, 238, 239, 290], "wai": [1, 24, 133, 288, 290, 359], "wang": 134, "want": [0, 10, 368, 370], "warn": [139, 141], "we": [3, 10, 289, 355], "weight": [90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 134, 155, 156, 157, 158, 170, 172, 173, 174, 178, 179, 182, 183, 195, 203, 204, 208, 209, 212, 213, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 242, 244, 246, 247, 250, 252, 253, 254, 256, 257, 258, 259, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 295, 300], "weight1": 141, "weight2": 141, "weight_decai": [276, 277, 278, 279, 280, 281, 282, 283, 284, 286], "weihao": 134, "weinberg": 134, "well": [37, 41, 42, 43, 44, 46, 61, 120, 208, 209], "were": 143, "weyand": 134, "what": 290, "when": [0, 1, 3, 10, 17, 45, 134, 137, 140, 142, 143, 145, 148, 156, 157, 158, 214, 235, 243, 252, 253, 254, 256, 257, 258, 271, 274, 277, 285, 288, 290, 291, 292, 300, 311, 350, 368, 370], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 81, 82, 130, 134, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 300, 302, 303, 307, 308, 309, 311, 312, 315, 316, 328, 332, 333, 334, 335, 336, 339, 341, 343, 346, 347, 348, 351, 356, 358, 360, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376], "whether": [1, 13, 45, 59, 60, 61, 81, 82, 83, 137, 138, 208, 209, 235, 284, 288, 293, 295, 296, 297, 299, 301, 315, 316, 334, 335, 336, 343, 348], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 46, 62, 70, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 91, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 134, 137, 139, 141, 143, 148, 152, 175, 196, 200, 201, 202, 204, 214, 215, 218, 220, 223, 225, 233, 248, 250, 252, 253, 254, 256, 257, 258, 259, 279, 280, 282, 284, 288, 290, 292, 295, 296, 299, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 350, 351, 358, 359, 360, 362, 364, 365, 366, 369, 370, 372, 373, 374, 375, 376, 377, 379], "while": [10, 26, 31, 37, 38, 55, 56, 57, 58, 66, 70, 76, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 124, 134, 140, 143, 161, 162, 215, 219, 220, 235, 273, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 290, 359, 362, 373, 379], "who": [10, 139, 140, 141, 142], "whose": [22, 316, 320, 322, 324, 328, 332, 338], "wide": [4, 5, 6, 8, 11, 19, 38, 92, 100, 101, 102, 134, 149, 219, 229, 230, 247], "wide_resnet_101": 134, "wide_resnet_50": 134, "wider": [29, 101, 102, 156, 157], "wideresnet": 134, "width": [45, 46, 76, 79, 83, 90, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 120, 130, 134, 157, 158, 160, 166, 167, 180, 185, 186, 188, 189, 192, 193, 195, 196, 204, 230, 231, 253, 254, 255, 257, 258, 262, 263, 265, 266, 268, 269, 271, 370, 372, 377], "width_coef": 45, "width_multipli": [76, 79], "window": [187, 188, 189, 191, 192, 193, 264, 265, 266, 267, 268, 269, 277, 334, 336], "wise": [114, 116, 117, 118, 119, 134, 145, 146, 148, 149, 150, 151, 152, 153, 163, 197, 198, 199, 203, 217, 223, 224, 233, 235, 236, 237, 238, 239, 273, 289, 302, 303, 306, 307, 308, 309, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 338, 339, 340, 341, 342, 344, 345, 346, 353, 367], "within": [2, 134, 135, 136, 139, 140, 141, 142, 143, 153, 195, 196, 213, 215, 216, 217, 219, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 243, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 264, 265, 266, 267, 268, 269, 275, 290, 313, 328, 375, 379], "without": [10, 103, 139, 140, 141, 170, 172, 229, 230, 231, 242, 244, 288, 291, 334, 357, 359, 366], "won": 290, "work": [1, 2, 3, 10, 12, 289, 292], "workflow": [300, 379], "workload": 10, "wrap": [3, 273, 290, 349], "wrapper": 273, "www": [5, 6], "x": [10, 11, 21, 68, 72, 110, 125, 130, 134, 135, 136, 137, 139, 140, 141, 142, 143, 152, 163, 170, 172, 196, 200, 201, 202, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 295, 296, 297, 299, 315, 316, 332, 355, 360, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377], "x1": 242, "x2": 242, "x_": [180, 247, 250, 255, 355], "x_c": [247, 250], "x_i": 246, "x_k": 247, "xavier": [208, 209, 212, 213], "xavier_norm": 207, "xavier_uniform": 207, "xception": [71, 134], "xiao": 7, "xie": 134, "xl": [58, 134], "xlarg": [39, 134], "xy": 355, "x\u2081": 242, "x\u2082": 242, "y": [130, 134, 139, 140, 141, 142, 143, 196, 200, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 293, 295, 296, 297, 299, 315, 316, 355, 373], "y_": [180, 247, 250, 255, 355], "y_c": [247, 250], "y_i": 246, "yann": [8, 134], "yet": [10, 36, 38, 289], "yield": [0, 1, 137, 290], "you": [0, 78, 135, 140, 142, 143, 273, 275, 288, 290, 300, 315, 316, 317, 322, 347, 349, 368, 370, 379], "your": [78, 273, 275, 288, 290, 300, 379], "yu": 134, "z": [134, 316, 321, 322], "zalandoresearch": 7, "ze": 134, "zeiler": [132, 134], "zero": [17, 19, 20, 61, 135, 145, 148, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 187, 188, 189, 191, 192, 193, 206, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 221, 229, 230, 231, 233, 235, 236, 237, 238, 239, 259, 264, 265, 266, 267, 268, 269, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 315, 316, 317, 322, 323, 328, 338, 356, 364, 365], "zero_grad": [138, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 301], "zeros_lik": [316, 323], "zfnet": [71, 134], "zhang": 134, "zhmoginov": 134, "zhu": 134, "zhuang": 134, "zisserman": 134, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 289, "1d": 289, "2": 289, "2d": 289, "3": 289, "It": [288, 290], "ab": 324, "activ": [147, 169, 226, 241], "ad": 289, "adadelta": 277, "adagrad": 278, "adam": 279, "adamax": 281, "adamw": 280, "adaptive_avg_pool1d": 184, "adaptive_avg_pool2d": 185, "adaptive_avg_pool3d": 186, "adaptiveavgpool1d": 261, "adaptiveavgpool2d": 262, "adaptiveavgpool3d": 263, "add": 302, "addit": 19, "admonit": 292, "advanc": [160, 379], "alexnet": [23, 24], "algebra": 15, "algorithm": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "alias": 292, "align": 289, "alpha_dropout": 161, "alphadropout": 233, "also": 275, "anoth": 349, "arang": 313, "arcco": 325, "architectur": [23, 25, 73, 74, 75, 101, 102, 132], "arcsin": 326, "arctan": 327, "asgd": 276, "attent": [154, 155, 169, 204, 228, 241], "attribut": [5, 6, 7, 8, 23, 68, 72, 92, 103, 110, 120, 125, 130, 132, 136, 138, 139, 140, 141, 142, 143, 197, 198, 199, 200, 201, 202, 203, 214, 215, 218, 219, 221, 222, 223, 225, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 301, 370, 371, 372, 373, 374, 375, 376, 377], "avg_pool1d": 187, "avg_pool2d": 188, "avg_pool3d": 189, "avgpool1d": 264, "avgpool2d": 265, "avgpool3d": 266, "axi": 289, "backpropag": 301, "backward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 162, 170, 172, 195, 203, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367], "batch_norm": 179, "batchnorm": 205, "batchnorm1d": 252, "batchnorm2d": 253, "batchnorm3d": 254, "bceloss": 246, "behavior": [184, 185, 186, 261, 262, 263], "benefit": 290, "bernoulli": 293, "bilinear": [170, 242], "binari": 323, "binary_cross_entropi": 173, "bottleneck": [81, 82], "broadcast": [289, 350], "broadcast_to": 350, "buffer": 136, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 92, 103, 110, 120, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 160, 162, 163, 170, 172, 184, 185, 186, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377], "captur": 291, "case": 292, "centercrop": 370, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 26, 40, 45, 46, 59, 63, 68, 72, 76, 77, 78, 83, 92, 103, 110, 120, 125, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 197, 198, 199, 200, 201, 202, 203, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 301, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "clip": 328, "co": 329, "combin": 0, "compon": [3, 10, 273], "compos": 368, "concatdataset": [0, 1], "concaten": 351, "conclus": [3, 10, 273, 288, 289, 290, 300, 369, 379], "configur": [45, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91], "constant": 206, "contain": 144, "conv": 205, "conv1d": [156, 229], "conv2d": [157, 230], "conv3d": [158, 231], "convbnrelu1d": 197, "convbnrelu2d": 198, "convbnrelu3d": 199, "convnet": [71, 134], "convnext": 25, "convnext_bas": 27, "convnext_larg": 28, "convnext_smal": 29, "convnext_tini": 30, "convnext_v2": 26, "convnext_v2_atto": 31, "convnext_v2_bas": 32, "convnext_v2_femto": 33, "convnext_v2_hug": 34, "convnext_v2_larg": 35, "convnext_v2_nano": 36, "convnext_v2_pico": 37, "convnext_v2_tini": 38, "convnext_xlarg": 39, "convolut": [159, 169, 205, 232, 241], "core": 10, "cosh": 330, "creat": [138, 301, 349], "cross_entropi": 174, "crossentropyloss": 247, "cube": 331, "custom": [1, 2, 3, 137, 274, 275, 379], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 137, 274, 275], "definit": 292, "densenet": 40, "densenet_121": 41, "densenet_169": 42, "densenet_201": 43, "densenet_264": 44, "depthseparableconv1d": 200, "depthseparableconv2d": 201, "depthseparableconv3d": 202, "depthwis": 205, "descript": [104, 105, 106, 107, 108, 109, 121, 122, 123, 291], "det": 13, "detail": [19, 101, 102], "diag": 314, "dilat": 160, "div": 303, "dot": 304, "drop_block": 162, "drop_path": 163, "dropblock": 234, "dropout": [164, 168, 169, 236, 240, 241], "dropout1d": [165, 237], "dropout2d": [166, 238], "dropout3d": [167, 239], "droppath": 235, "efficientnet": 45, "efficientnet_b0": 47, "efficientnet_b1": 48, "efficientnet_b2": 49, "efficientnet_b3": 50, "efficientnet_b4": 51, "efficientnet_b5": 52, "efficientnet_b6": 53, "efficientnet_b7": 54, "efficientnet_v2": 46, "efficientnet_v2_": 57, "efficientnet_v2_l": 55, "efficientnet_v2_m": 56, "efficientnet_v2_xl": 58, "eig": 14, "elu": [145, 214], "empti": 315, "empty_lik": 316, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379], "excit": 205, "exp": 332, "express": [180, 360], "ey": 317, "fashionmnist": 7, "featur": [4, 10, 11, 116, 117, 118, 119, 124, 275, 300, 379], "flatten": 352, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 92, 103, 110, 120, 130, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 160, 163, 170, 172, 184, 185, 186, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377], "from": 349, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 206, 208, 209, 210, 211, 212, 213, 288, 290, 291, 293, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "fuse": 205, "futur": 4, "gelu": [146, 215], "gener": [294, 323], "get": 275, "global_response_norm": 180, "globalresponsenorm": 255, "grad_en": 288, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 162, 170, 172, 195, 203, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367], "guidelin": 292, "hardsigmoid": 216, "hardswish": 217, "how": [288, 290], "hstack": 353, "huber_loss": 175, "huberloss": 248, "hyperparamet": [90, 91], "ident": 243, "imag": [9, 378], "incept": 59, "inception_next_atto": 64, "inception_next_bas": 65, "inception_next_smal": 66, "inception_next_tini": 67, "inception_resnet_v1": 69, "inception_resnet_v2": 70, "inception_v1": 60, "inception_v3": 61, "inception_v4": 62, "inceptionnext": 63, "inceptionresnet": 68, "index": 301, "init": [206, 208, 209, 210, 211, 212, 213], "initi": 207, "inner": 305, "input": 349, "inspect": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "instance_norm": 182, "instancenorm1d": 256, "instancenorm2d": 257, "instancenorm3d": 258, "integr": [3, 273, 300, 379], "interpol": 195, "inv": 16, "iter": 301, "kaiming_norm": 208, "kaiming_uniform": 209, "kei": [3, 4, 10, 116, 117, 118, 119, 124, 273, 275, 300, 379], "kernel": 205, "layer": [84, 85, 86, 87, 88, 89, 205, 226, 228, 232, 240, 241, 245, 251, 260, 270, 272], "layer_norm": 183, "layernorm": 259, "leaky_relu": 148, "leakyrelu": 218, "learn": 300, "lenet": 72, "lenet_1": 73, "lenet_4": 74, "lenet_5": 75, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 169, 171, 172, 241, 244, 245], "linspac": 318, "list": 349, "load": 1, "log": 333, "loss": [169, 176, 241, 251], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 134, 169, 273, 275, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 379], "mathemat": [180, 360], "matmul": 306, "matrix": 306, "matrix_pow": 17, "max": 334, "max_pool1d": 191, "max_pool2d": 192, "max_pool3d": 193, "maximum": 307, "maxpool1d": 267, "maxpool2d": 268, "maxpool3d": 269, "mean": 335, "mechan": [155, 204], "meshgrid": 355, "metadata": 291, "method": [0, 1, 2, 5, 6, 7, 8, 68, 72, 125, 137, 138, 274, 301], "min": 336, "minimum": 308, "mnist": 8, "mobilenet": [76, 79], "mobilenet_v2": [77, 80], "mobilenet_v3": 78, "mobilenet_v3_larg": 81, "mobilenet_v3_smal": 82, "model": [134, 135, 273], "modul": [137, 241], "moduledict": 139, "modulelist": 140, "more": 300, "mse_loss": 177, "mseloss": 249, "mul": 309, "multipl": [0, 306], "nadam": 282, "new": 289, "newaxi": 289, "nll_loss": 178, "nllloss": 250, "nn": [136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273], "no_grad": 290, "norm": 18, "normal": [169, 181, 210, 241, 260, 371], "note": 10, "number": 294, "ones": 319, "ones_lik": 320, "oper": [15, 306, 323], "optim": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "organ": 273, "outer": 310, "overview": [3, 4, 10, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 273, 275, 300, 379], "pad": 356, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "parameterdict": 141, "parameterlist": 142, "pass": 130, "perform": 301, "pinv": 19, "pipelin": [3, 379], "pitfal": [288, 290], "pool": [169, 190, 241, 270], "potenti": [288, 290], "power": 311, "properti": [138, 301], "qr": 20, "radam": 283, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 295, "randint": 296, "randn": 297, "random": [293, 294, 295, 296, 297, 298, 299, 300], "randomcrop": 372, "randomgrayscal": 373, "randomhorizontalflip": 374, "randomrot": 375, "randomverticalflip": 376, "ravel": 357, "reciproc": 337, "refer": [5, 6, 7, 8, 203, 275], "register_model": 291, "regular": 162, "relu": [149, 205, 219], "relu6": 220, "repeat": 358, "reshap": 359, "resiz": 377, "resnest": 83, "resnest_101": 84, "resnest_14": 85, "resnest_200": 86, "resnest_26": 87, "resnest_269": 88, "resnest_50": 89, "resnest_50_1s4x24d": 90, "resnest_50_4s2x40d": 91, "resnet": 92, "resnet_1001": 93, "resnet_101": 94, "resnet_152": 95, "resnet_18": 96, "resnet_200": 97, "resnet_269": 98, "resnet_34": 99, "resnet_50": 100, "resnext": 103, "resnext_101_32x16d": 104, "resnext_101_32x32d": 105, "resnext_101_32x4d": 106, "resnext_101_32x8d": 107, "resnext_101_64x4d": 108, "resnext_50_32x4d": 109, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 204, 206, 208, 209, 210, 211, 212, 213, 220, 288, 290, 293, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "rmsprop": 284, "rotat": 196, "rprop": 285, "rule": [306, 350], "scaled_dot_product_attent": 155, "scaleddotproductattent": 227, "se_resnet_101": 111, "se_resnet_152": 112, "se_resnet_18": 113, "se_resnet_34": 114, "se_resnet_50": 115, "se_resnext_101_32x4d": 116, "se_resnext_101_32x8d": 117, "se_resnext_101_64x4d": 118, "se_resnext_50_32x4d": 119, "see": 275, "seed": 298, "select": 205, "selectivekernel": 204, "selu": [150, 221], "semodul": 203, "senet": 110, "separ": 205, "sequenti": 143, "sgd": 286, "sigmoid": [151, 222], "sign": 338, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "sin": 339, "sinh": 340, "sk_resnet_18": 121, "sk_resnet_34": 122, "sk_resnet_50": 123, "sk_resnext_50_32x4d": 124, "sknet": 120, "slice": 301, "softmax": [152, 223], "solv": 21, "split": 360, "sqrt": 341, "squar": 342, "squeez": [205, 361], "stack": 362, "start": 275, "state": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "sub": 312, "sum": 343, "summar": 135, "summari": 135, "svd": 22, "swish": 224, "tabl": 135, "tan": 344, "tanh": [153, 225, 345], "tensor": [289, 301, 323, 349, 354], "through": 301, "tile": 363, "totensor": 369, "trace": 346, "track": 301, "transform": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "transpos": 347, "tril": 364, "triu": 365, "type": 292, "unari": 323, "unfold": 160, "uniform": [211, 299], "unsqueez": 366, "upsampl": 271, "us": [1, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 349], "usag": [4, 10, 55, 56, 57, 58, 60, 61, 62, 69, 70, 72, 73, 74, 75, 116, 117, 118, 119, 124, 136, 196, 288, 289, 290, 292, 355, 368, 369, 379], "util": [169, 194], "utilit": 354, "valu": 360, "var": 348, "vggnet": 125, "vggnet_11": 126, "vggnet_13": 127, "vggnet_16": 128, "vggnet_19": 129, "vision": [241, 272], "vstack": 367, "weight": 207, "why": 292, "wide_resnet_101": 101, "wide_resnet_50": 102, "work": [4, 288, 290], "xavier_norm": 212, "xavier_uniform": 213, "xception": [130, 131], "zero": 321, "zeros_lik": 322, "zfnet": [132, 133]}})