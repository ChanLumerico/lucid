Search.setIndex({"alltitles": {"1-D ascending": [[500, null]], "@ Operator": [[446, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Activation Functions": [[244, null], [269, null]], "Activation Layers": [[334, null], [356, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[335, "additional-options"]], "Advanced Example with Dilation": [[260, "advanced-example-with-dilation"]], "Advanced Features": [[542, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [354, "advantages"]], "AlexNet": [[29, null], [104, "alexnet"]], "Algorithm": [[412, "algorithm"], [413, "algorithm"], [414, "algorithm"], [415, "algorithm"], [416, "algorithm"], [417, "algorithm"], [418, "algorithm"], [419, "algorithm"], [420, "algorithm"], [421, "algorithm"], [422, "algorithm"]], "Along axis, keeping dims": [[499, null]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [88, "architecture"], [106, "architecture"], [107, "architecture"], [108, "architecture"], [109, "architecture"], [209, "architecture"], [213, "architecture"], [217, "architecture"], [218, "architecture"]], "Architecture Details": [[160, "architecture-details"], [161, "architecture-details"]], "Attention Functions": [[251, null], [269, null]], "Attention Layers": [[337, null], [356, null]], "Attention Mechanism": [[252, "attention-mechanism"], [312, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [101, "attributes"], [105, "attributes"], [151, "attributes"], [162, "attributes"], [169, "attributes"], [179, "attributes"], [196, "attributes"], [207, "attributes"], [209, "attributes"], [233, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [305, "attributes"], [306, "attributes"], [307, "attributes"], [308, "attributes"], [309, "attributes"], [310, "attributes"], [311, "attributes"], [322, "attributes"], [323, "attributes"], [326, "attributes"], [327, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [333, "attributes"], [338, "attributes"], [339, "attributes"], [340, "attributes"], [341, "attributes"], [342, "attributes"], [343, "attributes"], [346, "attributes"], [348, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [352, "attributes"], [357, "attributes"], [358, "attributes"], [359, "attributes"], [361, "attributes"], [362, "attributes"], [363, "attributes"], [364, "attributes"], [365, "attributes"], [367, "attributes"], [368, "attributes"], [369, "attributes"], [371, "attributes"], [372, "attributes"], [373, "attributes"], [374, "attributes"], [376, "attributes"], [377, "attributes"], [378, "attributes"], [379, "attributes"], [380, "attributes"], [381, "attributes"], [382, "attributes"], [383, "attributes"], [384, "attributes"], [385, "attributes"], [386, "attributes"], [387, "attributes"], [424, "attributes"], [441, "attributes"], [533, "attributes"], [534, "attributes"], [535, "attributes"], [536, "attributes"], [537, "attributes"], [538, "attributes"], [539, "attributes"], [540, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[491, "axis-swapping-rules"]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [357, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [371, "backward-gradient-calculation"], [372, "backward-gradient-calculation"], [373, "backward-gradient-calculation"], [374, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [447, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [452, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [470, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [473, "backward-gradient-calculation"], [474, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [476, "backward-gradient-calculation"], [478, "backward-gradient-calculation"], [479, "backward-gradient-calculation"], [480, "backward-gradient-calculation"], [481, "backward-gradient-calculation"], [482, "backward-gradient-calculation"], [483, "backward-gradient-calculation"], [485, "backward-gradient-calculation"], [486, "backward-gradient-calculation"], [487, "backward-gradient-calculation"], [488, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [490, "backward-gradient-calculation"], [491, "backward-gradient-calculation"], [492, "backward-gradient-calculation"], [493, "backward-gradient-calculation"], [494, "backward-gradient-calculation"], [495, "backward-gradient-calculation"], [496, "backward-gradient-calculation"], [501, "backward-gradient-calculation"], [503, "backward-gradient-calculation"], [508, "backward-gradient-calculation"], [511, "backward-gradient-calculation"], [513, "backward-gradient-calculation"], [514, "backward-gradient-calculation"], [515, "backward-gradient-calculation"], [516, "backward-gradient-calculation"], [520, "backward-gradient-calculation"], [521, "backward-gradient-calculation"], [522, "backward-gradient-calculation"], [524, "backward-gradient-calculation"], [525, "backward-gradient-calculation"], [526, "backward-gradient-calculation"], [528, "backward-gradient-calculation"], [529, "backward-gradient-calculation"]], "Base Class": [[410, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[285, "behavior"], [286, "behavior"], [287, "behavior"], [288, "behavior"], [289, "behavior"], [290, "behavior"], [376, "behavior"], [377, "behavior"], [378, "behavior"], [379, "behavior"], [380, "behavior"], [381, "behavior"], [430, "behavior"], [431, "behavior"]], "Benefits": [[425, "benefits"], [428, "benefits"]], "Binary Functions": [[466, null]], "Bottleneck Configuration": [[121, "bottleneck-configuration"], [122, "bottleneck-configuration"]], "Broadcasting Rules": [[501, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [74, "class-signature"], [75, "class-signature"], [88, "class-signature"], [92, "class-signature"], [96, "class-signature"], [101, "class-signature"], [105, "class-signature"], [109, "class-signature"], [115, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [142, "class-signature"], [151, "class-signature"], [162, "class-signature"], [169, "class-signature"], [179, "class-signature"], [184, "class-signature"], [185, "class-signature"], [196, "class-signature"], [201, "class-signature"], [207, "class-signature"], [209, "class-signature"], [213, "class-signature"], [217, "class-signature"], [218, "class-signature"], [230, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [312, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [335, "class-signature"], [336, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [354, "class-signature"], [357, "class-signature"], [358, "class-signature"], [359, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [389, "class-signature"], [391, "class-signature"], [392, "class-signature"], [393, "class-signature"], [394, "class-signature"], [395, "class-signature"], [397, "class-signature"], [400, "class-signature"], [402, "class-signature"], [403, "class-signature"], [404, "class-signature"], [405, "class-signature"], [406, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [412, "class-signature"], [413, "class-signature"], [414, "class-signature"], [415, "class-signature"], [416, "class-signature"], [417, "class-signature"], [418, "class-signature"], [419, "class-signature"], [420, "class-signature"], [421, "class-signature"], [422, "class-signature"], [424, "class-signature"], [441, "class-signature"], [531, "class-signature"], [532, "class-signature"], [533, "class-signature"], [534, "class-signature"], [535, "class-signature"], [536, "class-signature"], [537, "class-signature"], [538, "class-signature"], [539, "class-signature"], [540, "class-signature"]], "Classes": [[226, null]], "CoAtNet": [[31, null], [104, "coatnet"]], "Combining multiple datasets": [[0, null]], "Computer Vision": [[212, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [354, "conclusion"], [399, "conclusion"], [401, "conclusion"], [426, "conclusion"], [427, "conclusion"], [440, "conclusion"], [532, "conclusion"], [542, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[74, "configurations"]], "Constructor": [[219, "constructor"], [220, "constructor"], [221, "constructor"], [222, "constructor"]], "Containers": [[241, null]], "Conv-BatchNorm-ReLU": [[313, null]], "ConvNeXt": [[40, null], [104, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[259, null], [269, null]], "Convolution Layers": [[345, null], [356, null]], "Convolutional Transformer (CvT)": [[104, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[497, null]], "Creating a Parameter": [[235, null]], "Creating a tensor on GPU with gradient tracking": [[441, null]], "CrossViT": [[55, null], [104, "crossvit"]], "Currently Available": [[544, "currently-available"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[542, "custom-pipelines"]], "CvT": [[65, null]], "DDPM": [[211, "ddpm"]], "Defining a Custom Optimizer": [[411, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[234, null]], "Defining a custom optimizer": [[400, null]], "DenseNet": [[69, null], [104, "densenet"]], "Depthwise Separable Convolution": [[313, null]], "Descending, heapsort kernel": [[500, null]], "Description": [[163, "description"], [164, "description"], [165, "description"], [166, "description"], [167, "description"], [168, "description"], [180, "description"], [181, "description"], [182, "description"], [429, "description"]], "Details": [[123, "details"], [124, "details"], [125, "details"], [126, "details"], [127, "details"]], "Device-based dtype inference": [[441, null]], "Differences from nn.Transformer": [[230, "differences-from-nn-transformer"]], "Dropout Functions": [[268, null], [269, null]], "Dropout Layers": [[353, null], [356, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientFormer": [[88, null], [104, "efficientformer"]], "EfficientNet": [[74, null], [104, "efficientnet"]], "EfficientNet Configurations": [[74, "id1"]], "EfficientNet_V2": [[75, null]], "Einops Functions": [[12, null]], "Einops Layers": [[355, null], [356, null]], "Embedding Process": [[301, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [97, "example"], [98, "example"], [99, "example"], [100, "example"], [110, "example"], [111, "example"], [112, "example"], [113, "example"], [114, "example"], [119, "example"], [120, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [227, "example"], [228, "example"], [260, "example"], [399, null], [399, null], [399, null], [426, "example"], [432, "example"], [434, "example"], [435, "example"], [436, "example"], [437, "example"], [438, "example"], [439, "example"], [440, null], [440, null], [440, null], [454, "example"], [455, "example"], [456, "example"], [457, "example"], [458, "example"], [462, "example"], [463, "example"], [464, "example"], [465, "example"], [467, "example"], [468, "example"], [469, "example"], [470, "example"], [472, "example"], [473, "example"], [474, "example"], [475, "example"], [478, "example"], [479, "example"], [481, "example"], [483, "example"], [485, "example"], [486, "example"], [487, "example"], [488, "example"], [489, "example"], [490, "example"], [492, "example"], [493, "example"], [494, "example"], [495, "example"], [496, "example"], [502, "example"], [503, "example"], [505, "example"], [506, "example"], [507, "example"], [508, "example"], [514, "example"], [516, "example"], [518, "example"], [520, "example"], [521, "example"], [523, "example"], [524, "example"], [525, "example"], [528, "example"], [529, "example"], [530, "example"], [543, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[427, null]], "Example 2: Adding a new axis to a 2D tensor": [[427, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[427, null]], "Example Usage": [[93, "example-usage"], [94, "example-usage"], [95, "example-usage"], [102, "example-usage"], [103, "example-usage"], [105, "example-usage"], [106, "example-usage"], [107, "example-usage"], [108, "example-usage"], [175, "example-usage"], [176, "example-usage"], [177, "example-usage"], [178, "example-usage"], [183, "example-usage"], [304, "example-usage"], [531, "example-usage"], [532, "example-usage"], [542, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [96, "examples"], [109, "examples"], [117, "examples"], [121, "examples"], [122, "examples"], [128, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [217, "examples"], [218, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [242, "examples"], [243, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [270, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [301, "examples"], [303, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [314, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [336, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [354, "examples"], [357, "examples"], [358, "examples"], [359, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [370, "examples"], [371, "examples"], [372, "examples"], [373, "examples"], [374, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [389, "examples"], [397, "examples"], [400, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [417, "examples"], [418, "examples"], [419, "examples"], [420, "examples"], [421, "examples"], [422, "examples"], [425, "examples"], [428, "examples"], [429, "examples"], [430, "examples"], [431, "examples"], [441, "examples"], [442, "examples"], [443, "examples"], [444, "examples"], [445, "examples"], [447, "examples"], [448, "examples"], [449, "examples"], [450, "examples"], [451, "examples"], [452, "examples"], [453, "examples"], [459, "examples"], [460, "examples"], [461, "examples"], [471, "examples"], [476, "examples"], [477, "examples"], [480, "examples"], [482, "examples"], [484, "examples"], [491, "examples"], [497, "examples"], [498, "examples"], [499, "examples"], [500, "examples"], [501, "examples"], [504, "examples"], [510, "examples"], [511, "examples"], [512, "examples"], [513, "examples"], [515, "examples"], [517, "examples"], [519, "examples"], [522, "examples"], [526, "examples"], [527, "examples"], [533, "examples"], [534, "examples"], [535, "examples"], [536, "examples"], [537, "examples"], [538, "examples"], [539, "examples"], [540, "examples"]], "FashionMNIST": [[7, null]], "Fast R-CNN": [[216, "fast-r-cnn"], [217, null]], "Faster R-CNN": [[213, null], [216, "faster-r-cnn"]], "Features": [[17, "features"]], "Flattened maximum index": [[498, null]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [151, "forward-calculation"], [162, "forward-calculation"], [169, "forward-calculation"], [179, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [260, "forward-calculation"], [263, "forward-calculation"], [270, "forward-calculation"], [272, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [303, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [336, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [447, "forward-calculation"], [448, "forward-calculation"], [449, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [452, "forward-calculation"], [453, "forward-calculation"], [467, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [472, "forward-calculation"], [473, "forward-calculation"], [474, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"], [478, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [481, "forward-calculation"], [482, "forward-calculation"], [483, "forward-calculation"], [485, "forward-calculation"], [486, "forward-calculation"], [487, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [490, "forward-calculation"], [492, "forward-calculation"], [493, "forward-calculation"], [494, "forward-calculation"], [495, "forward-calculation"], [496, "forward-calculation"], [503, "forward-calculation"], [508, "forward-calculation"], [511, "forward-calculation"], [513, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [516, "forward-calculation"], [520, "forward-calculation"], [521, "forward-calculation"], [522, "forward-calculation"], [524, "forward-calculation"], [525, "forward-calculation"], [528, "forward-calculation"], [529, "forward-calculation"], [533, "forward-calculation"], [534, "forward-calculation"], [535, "forward-calculation"], [536, "forward-calculation"], [537, "forward-calculation"], [538, "forward-calculation"], [539, "forward-calculation"], [540, "forward-calculation"]], "Forward Input & Output": [[219, "forward-input-output"]], "Forward Method": [[391, "forward-method"], [392, "forward-method"], [393, "forward-method"], [394, "forward-method"], [395, "forward-method"]], "Forward Pass": [[207, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [102, "function-signature"], [103, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [208, "function-signature"], [210, "function-signature"], [214, "function-signature"], [215, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [227, "function-signature"], [228, "function-signature"], [231, "function-signature"], [232, "function-signature"], [242, "function-signature"], [243, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [270, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [301, "function-signature"], [303, "function-signature"], [304, "function-signature"], [314, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [425, "function-signature"], [426, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [502, "function-signature"], [503, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [510, "function-signature"], [511, "function-signature"], [512, "function-signature"], [513, "function-signature"], [514, "function-signature"], [515, "function-signature"], [516, "function-signature"], [517, "function-signature"], [518, "function-signature"], [519, "function-signature"], [520, "function-signature"], [521, "function-signature"], [522, "function-signature"], [523, "function-signature"], [524, "function-signature"], [525, "function-signature"], [526, "function-signature"], [527, "function-signature"], [528, "function-signature"], [529, "function-signature"], [530, "function-signature"], [543, "function-signature"]], "Functions": [[226, null]], "Fused Layers": [[313, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[411, "getting-started"]], "Global minimum index": [[499, null]], "Gradient Calculation": [[530, "gradient-calculation"]], "Gradient Computation": [[502, "gradient-computation"], [510, "gradient-computation"], [517, "gradient-computation"], [518, "gradient-computation"], [523, "gradient-computation"]], "Gradient hooks": [[441, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[426, "how-it-works"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[149, "hyperparameter-configuration"], [150, "hyperparameter-configuration"]], "Image Classification": [[104, null]], "Image Datasets": [[9, null]], "Image Generation": [[211, null]], "Image Transformations": [[541, null]], "Implementation Details": [[55, "implementation-details"], [109, "implementation-details"]], "Inception": [[92, null], [104, "inception"]], "Inception-ResNet": [[104, "inception-resnet"]], "InceptionNeXt": [[96, null], [104, "inceptionnext"]], "InceptionResNet": [[101, null]], "Input & Output": [[220, "input-output"], [221, "input-output"]], "Inspecting Optimizer State": [[411, null], [412, null], [413, null], [414, null], [415, null], [416, null], [417, null], [418, null], [419, null], [420, null], [421, null], [422, null]], "Integration with lucid": [[3, "integration-with-lucid"], [399, "integration-with-lucid"], [440, "integration-with-lucid"], [542, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [399, "key-components"]], "Key Enhancements": [[129, "key-enhancements"]], "Key Features": [[4, "key-features"], [175, "key-features"], [176, "key-features"], [177, "key-features"], [178, "key-features"], [183, "key-features"], [411, "key-features"], [440, "key-features"]], "Key Transformations": [[542, "key-transformations"]], "LR Schedulers": [[410, null]], "Layer Configuration": [[143, "layer-configuration"], [144, "layer-configuration"], [145, "layer-configuration"], [146, "layer-configuration"], [147, "layer-configuration"], [148, "layer-configuration"]], "LeNet": [[104, "lenet"], [105, null]], "Learn More": [[440, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[269, null], [271, null]], "Linear Layers": [[356, null], [360, null]], "Loading a custom dataset": [[1, null]], "Loss Dictionary": [[213, "loss-dictionary"]], "Loss Functions": [[269, null], [276, null]], "Loss Layers": [[356, null], [366, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [284, "mathematical-definition"], [354, "mathematical-definition"]], "Mathematical Details": [[335, "mathematical-details"], [391, "mathematical-details"], [392, "mathematical-details"], [393, "mathematical-details"], [394, "mathematical-details"], [395, "mathematical-details"]], "Mathematical Expression": [[280, "mathematical-expression"], [471, "mathematical-expression"], [477, "mathematical-expression"], [484, "mathematical-expression"], [519, "mathematical-expression"]], "Mathematical Formula": [[402, "mathematical-formula"], [403, "mathematical-formula"], [404, "mathematical-formula"], [406, "mathematical-formula"], [407, "mathematical-formula"], [408, "mathematical-formula"], [409, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [109, "mathematical-representation"], [441, "mathematical-representation"]], "Matrix Multiplication Rules": [[446, "matrix-multiplication-rules"]], "Max index by row": [[498, null]], "MaxViT": [[104, "maxvit"], [109, null]], "Metadata Captured": [[429, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [101, "methods"], [105, "methods"], [196, "methods"], [234, "methods"], [235, "methods"], [400, "methods"], [402, "methods"], [403, "methods"], [404, "methods"], [405, "methods"], [406, "methods"], [407, "methods"], [408, "methods"], [409, "methods"], [424, "methods"], [441, "methods"]], "MobileNet": [[104, "mobilenet"], [115, null]], "MobileNet_V2": [[116, null]], "MobileNet_V3": [[117, null]], "MobileNet_V4": [[118, null]], "Model Configuration": [[110, "model-configuration"], [111, "model-configuration"], [112, "model-configuration"], [113, "model-configuration"], [114, "model-configuration"]], "Modules": [[356, null]], "Moving tensor between devices": [[441, null]], "Natural Language Processing": [[212, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[269, null], [281, null]], "Normalization Layers": [[356, null], [375, null]], "Notes": [[11, "notes"], [299, "notes"], [459, "notes"], [460, "notes"]], "Object Detection Utilities": [[226, null]], "Object detection": [[216, null]], "Optimizers": [[423, null]], "Organizing Models": [[399, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [92, "overview"], [93, "overview"], [94, "overview"], [95, "overview"], [101, "overview"], [102, "overview"], [103, "overview"], [105, "overview"], [106, "overview"], [107, "overview"], [108, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [123, "overview"], [124, "overview"], [125, "overview"], [126, "overview"], [127, "overview"], [152, "overview"], [153, "overview"], [154, "overview"], [155, "overview"], [156, "overview"], [157, "overview"], [158, "overview"], [159, "overview"], [170, "overview"], [171, "overview"], [172, "overview"], [173, "overview"], [174, "overview"], [335, "overview"], [391, "overview"], [392, "overview"], [393, "overview"], [394, "overview"], [395, "overview"], [399, "overview"], [401, "overview"], [411, "overview"], [425, "overview"], [428, "overview"], [440, "overview"], [542, "overview"]], "PVT": [[128, null]], "PVT_V2": [[129, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [105, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [242, "parameters"], [243, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [270, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [301, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [314, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [326, "parameters"], [327, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [333, "parameters"], [335, "parameters"], [336, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [354, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [389, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [397, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [424, "parameters"], [425, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [503, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [510, "parameters"], [511, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"], [534, "parameters"], [535, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [540, "parameters"], [543, "parameters"]], "Performance / FLOPs": [[500, "performance-flops"]], "Performing backpropagation": [[441, null]], "Pooling Functions": [[269, null], [294, null]], "Pooling Layers": [[356, null], [388, null]], "Potential Pitfalls": [[426, "potential-pitfalls"]], "Properties": [[235, "properties"], [441, "properties"]], "Pyramid Vision Transformer (PVT)": [[104, "pyramid-vision-transformer-pvt"]], "R-CNN": [[216, "r-cnn"], [218, null]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[433, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [311, "references"], [411, "references"]], "Regularization": [[262, "regularization"]], "Representation": [[424, "representation"]], "ResNeSt": [[104, "resnest"], [142, null]], "ResNeXt": [[104, "resnext"], [162, null]], "ResNet": [[104, "resnet"], [151, null]], "Return Values": [[519, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [102, "returns"], [103, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [208, "returns"], [210, "returns"], [214, "returns"], [215, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [227, "returns"], [228, "returns"], [231, "returns"], [232, "returns"], [242, "returns"], [243, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [270, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [301, "returns"], [303, "returns"], [304, "returns"], [312, "returns"], [314, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [328, "returns"], [354, "returns"], [389, "returns"], [425, "returns"], [426, "returns"], [428, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [502, "returns"], [503, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [510, "returns"], [511, "returns"], [512, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [516, "returns"], [517, "returns"], [518, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [523, "returns"], [524, "returns"], [525, "returns"], [526, "returns"], [527, "returns"], [528, "returns"], [529, "returns"], [530, "returns"], [543, "returns"]], "SENet": [[104, "senet"], [169, null]], "SKNet": [[104, "sknet"], [179, null]], "Schedulers": [[410, null]], "See Also": [[411, "see-also"]], "Selective Kernel": [[313, null]], "Sequence-to-Sequence": [[229, null]], "Sparse Layers": [[356, null], [390, null]], "Spatial Functions": [[269, null], [300, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"], [89, "specifications"], [90, "specifications"], [91, "specifications"]], "Squeeze-and-Excitation": [[313, null]], "Stable sort with duplicates": [[500, null]], "Swin Transformer": [[104, "swin-transformer"]], "SwinTransformer": [[184, null]], "SwinTransformer_V2": [[185, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Tensor Contraction Rules": [[453, "tensor-contraction-rules"]], "Tensor Generating Functions": [[466, null]], "Tensor Operations": [[466, null]], "Tensor Utilities": [[509, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Training Notes": [[214, "training-notes"], [215, "training-notes"]], "Transformer": [[229, "transformer"], [230, null]], "Transformer Layers": [[356, null], [396, null]], "Unary Functions": [[466, null]], "Usage": [[4, "usage"], [84, "usage"], [85, "usage"], [86, "usage"], [87, "usage"], [233, "usage"], [304, "usage"], [401, "usage"], [426, "usage"], [427, "usage"], [511, "usage"], [531, "usage"], [532, "usage"], [542, "usage"]], "Usage Example": [[123, "usage-example"], [124, "usage-example"], [125, "usage-example"], [126, "usage-example"], [127, "usage-example"], [335, "usage-example"], [391, "usage-example"], [392, "usage-example"], [393, "usage-example"], [394, "usage-example"], [395, "usage-example"], [402, "usage-example"], [403, "usage-example"], [404, "usage-example"], [405, "usage-example"], [406, "usage-example"], [407, "usage-example"], [408, "usage-example"], [409, "usage-example"]], "Usage Examples": [[424, "usage-examples"]], "Use another Tensor as input": [[497, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[441, null]], "Using the ASGD Optimizer": [[412, null]], "Using the Adadelta Optimizer": [[413, null]], "Using the Adagrad Optimizer": [[414, null]], "Using the Adam Optimizer": [[415, null]], "Using the AdamW Optimizer": [[416, null]], "Using the Adamax Optimizer": [[417, null]], "Using the NAdam Optimizer": [[418, null]], "Using the RAdam Optimizer": [[419, null]], "Using the RMSprop Optimizer": [[420, null]], "Using the Rprop Optimizer": [[421, null]], "Using the SGD Optimizer": [[422, null]], "Utility Functions": [[269, null], [302, null]], "VGGNet": [[104, "vggnet"], [196, null]], "Verification": [[16, "verification"]], "ViT": [[201, null]], "Vision Layers": [[356, null], [398, null]], "Visual Transformer (ViT)": [[104, "visual-transformer-vit"]], "Weight Initializations": [[315, null]], "Xception": [[104, "xception"], [207, null]], "ZFNet": [[104, "zfnet"], [209, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "cvt_13": [[66, null]], "cvt_21": [[67, null]], "cvt_w24": [[68, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[70, null]], "densenet_169": [[71, null]], "densenet_201": [[72, null]], "densenet_264": [[73, null]], "efficientformer_l1": [[89, null]], "efficientformer_l3": [[90, null]], "efficientformer_l7": [[91, null]], "efficientnet_b0": [[76, null]], "efficientnet_b1": [[77, null]], "efficientnet_b2": [[78, null]], "efficientnet_b3": [[79, null]], "efficientnet_b4": [[80, null]], "efficientnet_b5": [[81, null]], "efficientnet_b6": [[82, null]], "efficientnet_b7": [[83, null]], "efficientnet_v2_l": [[84, null]], "efficientnet_v2_m": [[85, null]], "efficientnet_v2_s": [[86, null]], "efficientnet_v2_xl": [[87, null]], "faster_rcnn_resnet_101_fpn": [[214, null]], "faster_rcnn_resnet_50_fpn": [[215, null]], "inception_next_atto": [[97, null]], "inception_next_base": [[98, null]], "inception_next_small": [[99, null]], "inception_next_tiny": [[100, null]], "inception_resnet_v1": [[102, null]], "inception_resnet_v2": [[103, null]], "inception_v1": [[93, null]], "inception_v3": [[94, null]], "inception_v4": [[95, null]], "lenet_1": [[106, null]], "lenet_4": [[107, null]], "lenet_5": [[108, null]], "lr_scheduler.CosineAnnealingLR": [[402, null]], "lr_scheduler.CyclicLR": [[403, null]], "lr_scheduler.ExponentialLR": [[404, null]], "lr_scheduler.LRScheduler": [[405, null]], "lr_scheduler.LambdaLR": [[406, null]], "lr_scheduler.MultiStepLR": [[407, null]], "lr_scheduler.ReduceLROnPlateau": [[408, null]], "lr_scheduler.StepLR": [[409, null]], "lucid.Numeric": [[424, null]], "lucid.Tensor": [[441, null]], "lucid.abs": [[467, null]], "lucid.add": [[442, null]], "lucid.arange": [[454, null]], "lucid.arccos": [[468, null]], "lucid.arcsin": [[469, null]], "lucid.arctan": [[470, null]], "lucid.argmax": [[498, null]], "lucid.argmin": [[499, null]], "lucid.argsort": [[500, null]], "lucid.broadcast_to": [[501, null]], "lucid.ceil": [[471, null]], "lucid.chunk": [[502, null]], "lucid.clip": [[472, null]], "lucid.concatenate": [[503, null]], "lucid.cos": [[473, null]], "lucid.cosh": [[474, null]], "lucid.count_flops": [[425, null]], "lucid.cube": [[475, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[455, null]], "lucid.div": [[443, null]], "lucid.dot": [[444, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[456, null]], "lucid.empty_like": [[457, null]], "lucid.exp": [[476, null]], "lucid.eye": [[458, null]], "lucid.flatten": [[504, null]], "lucid.floor": [[477, null]], "lucid.full": [[459, null]], "lucid.full_like": [[460, null]], "lucid.grad_enabled": [[426, null]], "lucid.histogram": [[505, null]], "lucid.histogram2d": [[506, null]], "lucid.histogramdd": [[507, null]], "lucid.hstack": [[508, null]], "lucid.inner": [[445, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[461, null]], "lucid.load": [[430, null]], "lucid.log": [[478, null]], "lucid.log2": [[479, null]], "lucid.masked_fill": [[510, null]], "lucid.matmul": [[446, null]], "lucid.max": [[480, null]], "lucid.maximum": [[447, null]], "lucid.mean": [[481, null]], "lucid.meshgrid": [[511, null]], "lucid.min": [[482, null]], "lucid.minimum": [[448, null]], "lucid.models": [[212, null]], "lucid.multiply": [[449, null]], "lucid.newaxis": [[427, null]], "lucid.nn": [[399, null]], "lucid.nn.functional": [[269, null]], "lucid.no_grad": [[428, null]], "lucid.nonzero": [[512, null]], "lucid.ones": [[462, null]], "lucid.ones_like": [[463, null]], "lucid.optim": [[411, null]], "lucid.outer": [[450, null]], "lucid.pad": [[513, null]], "lucid.power": [[451, null]], "lucid.random": [[440, null]], "lucid.random.bernoulli": [[432, null]], "lucid.random.permutation": [[434, null]], "lucid.random.rand": [[435, null]], "lucid.random.randint": [[436, null]], "lucid.random.randn": [[437, null]], "lucid.random.seed": [[438, null]], "lucid.random.uniform": [[439, null]], "lucid.ravel": [[514, null]], "lucid.reciprocal": [[483, null]], "lucid.register_model": [[429, null]], "lucid.repeat": [[515, null]], "lucid.reshape": [[516, null]], "lucid.roll": [[517, null]], "lucid.round": [[484, null]], "lucid.save": [[431, null]], "lucid.sign": [[485, null]], "lucid.sin": [[486, null]], "lucid.sinh": [[487, null]], "lucid.sort": [[518, null]], "lucid.split": [[519, null]], "lucid.sqrt": [[488, null]], "lucid.square": [[489, null]], "lucid.squeeze": [[520, null]], "lucid.stack": [[521, null]], "lucid.sub": [[452, null]], "lucid.sum": [[490, null]], "lucid.swapaxes": [[491, null]], "lucid.tan": [[492, null]], "lucid.tanh": [[493, null]], "lucid.tensor": [[497, null]], "lucid.tensordot": [[453, null]], "lucid.tile": [[522, null]], "lucid.topk": [[523, null]], "lucid.trace": [[494, null]], "lucid.transforms": [[542, null]], "lucid.transpose": [[495, null]], "lucid.tril": [[524, null]], "lucid.triu": [[525, null]], "lucid.unbind": [[526, null]], "lucid.unique": [[527, null]], "lucid.unsqueeze": [[528, null]], "lucid.var": [[496, null]], "lucid.visual": [[544, null]], "lucid.vstack": [[529, null]], "lucid.where": [[530, null]], "lucid.zeros": [[464, null]], "lucid.zeros_like": [[465, null]], "maxvit_base": [[110, null], [111, null]], "maxvit_small": [[112, null]], "maxvit_tiny": [[113, null]], "maxvit_xlarge": [[114, null]], "mobilenet": [[119, null]], "mobilenet_v2": [[120, null]], "mobilenet_v3_large": [[121, null]], "mobilenet_v3_small": [[122, null]], "mobilenet_v4_conv_large": [[123, null]], "mobilenet_v4_conv_medium": [[124, null]], "mobilenet_v4_conv_small": [[125, null]], "mobilenet_v4_hybrid_large": [[126, null]], "mobilenet_v4_hybrid_medium": [[127, null]], "nn.AdaptiveAvgPool1d": [[376, null]], "nn.AdaptiveAvgPool2d": [[377, null]], "nn.AdaptiveAvgPool3d": [[378, null]], "nn.AdaptiveMaxPool1d": [[379, null]], "nn.AdaptiveMaxPool2d": [[380, null]], "nn.AdaptiveMaxPool3d": [[381, null]], "nn.AlphaDropout": [[346, null]], "nn.AvgPool1d": [[382, null]], "nn.AvgPool2d": [[383, null]], "nn.AvgPool3d": [[384, null]], "nn.BCELoss": [[361, null]], "nn.BatchNorm1d": [[367, null]], "nn.BatchNorm2d": [[368, null]], "nn.BatchNorm3d": [[369, null]], "nn.Bilinear": [[357, null]], "nn.Buffer": [[233, null]], "nn.Conv1d": [[338, null]], "nn.Conv2d": [[339, null]], "nn.Conv3d": [[340, null]], "nn.ConvBNReLU1d": [[305, null]], "nn.ConvBNReLU2d": [[306, null]], "nn.ConvBNReLU3d": [[307, null]], "nn.ConvTranspose1d": [[341, null]], "nn.ConvTranspose2d": [[342, null]], "nn.ConvTranspose3d": [[343, null]], "nn.CrossEntropyLoss": [[362, null]], "nn.DepthSeparableConv1d": [[308, null]], "nn.DepthSeparableConv2d": [[309, null]], "nn.DepthSeparableConv3d": [[310, null]], "nn.DropBlock": [[347, null]], "nn.DropPath": [[348, null]], "nn.Dropout": [[349, null]], "nn.Dropout1d": [[350, null]], "nn.Dropout2d": [[351, null]], "nn.Dropout3d": [[352, null]], "nn.ELU": [[322, null]], "nn.Embedding": [[389, null]], "nn.GELU": [[323, null]], "nn.GlobalResponseNorm": [[370, null]], "nn.HardSigmoid": [[324, null]], "nn.HardSwish": [[325, null]], "nn.HuberLoss": [[363, null]], "nn.Identity": [[358, null]], "nn.InstanceNorm1d": [[371, null]], "nn.InstanceNorm2d": [[372, null]], "nn.InstanceNorm3d": [[373, null]], "nn.LayerNorm": [[374, null]], "nn.LeakyReLU": [[326, null]], "nn.Linear": [[359, null]], "nn.MSELoss": [[364, null]], "nn.MaxPool1d": [[385, null]], "nn.MaxPool2d": [[386, null]], "nn.MaxPool3d": [[387, null]], "nn.Module": [[234, null]], "nn.ModuleDict": [[236, null]], "nn.ModuleList": [[237, null]], "nn.MultiHeadAttention": [[335, null]], "nn.NLLLoss": [[365, null]], "nn.Parameter": [[235, null]], "nn.ParameterDict": [[238, null]], "nn.ParameterList": [[239, null]], "nn.ReLU": [[327, null]], "nn.ReLU6": [[328, null]], "nn.Rearrange": [[354, null]], "nn.SELU": [[329, null]], "nn.SEModule": [[311, null]], "nn.ScaledDotProductAttention": [[336, null]], "nn.SelectiveKernel": [[312, null]], "nn.Sequential": [[240, null]], "nn.Sigmoid": [[330, null]], "nn.Softmax": [[331, null]], "nn.Swish": [[332, null]], "nn.Tanh": [[333, null]], "nn.Transformer": [[391, null]], "nn.TransformerDecoder": [[392, null]], "nn.TransformerDecoderLayer": [[393, null]], "nn.TransformerEncoder": [[394, null]], "nn.TransformerEncoderLayer": [[395, null]], "nn.Unfold": [[344, null]], "nn.Upsample": [[397, null]], "nn.functional.adaptive_avg_pool1d": [[285, null]], "nn.functional.adaptive_avg_pool2d": [[286, null]], "nn.functional.adaptive_avg_pool3d": [[287, null]], "nn.functional.adaptive_max_pool1d": [[288, null]], "nn.functional.adaptive_max_pool2d": [[289, null]], "nn.functional.adaptive_max_pool3d": [[290, null]], "nn.functional.affine_grid": [[298, null]], "nn.functional.alpha_dropout": [[261, null]], "nn.functional.avg_pool1d": [[291, null]], "nn.functional.avg_pool2d": [[292, null]], "nn.functional.avg_pool3d": [[293, null]], "nn.functional.batch_norm": [[279, null]], "nn.functional.bilinear": [[270, null]], "nn.functional.binary_cross_entropy": [[273, null]], "nn.functional.conv1d": [[253, null]], "nn.functional.conv2d": [[254, null]], "nn.functional.conv3d": [[255, null]], "nn.functional.conv_transpose1d": [[256, null]], "nn.functional.conv_transpose2d": [[257, null]], "nn.functional.conv_transpose3d": [[258, null]], "nn.functional.cross_entropy": [[274, null]], "nn.functional.drop_block": [[262, null]], "nn.functional.drop_path": [[263, null]], "nn.functional.dropout": [[264, null]], "nn.functional.dropout1d": [[265, null]], "nn.functional.dropout2d": [[266, null]], "nn.functional.dropout3d": [[267, null]], "nn.functional.elu": [[242, null]], "nn.functional.embedding": [[301, null]], "nn.functional.gelu": [[243, null]], "nn.functional.global_response_norm": [[280, null]], "nn.functional.grid_sample": [[299, null]], "nn.functional.huber_loss": [[275, null]], "nn.functional.instance_norm": [[282, null]], "nn.functional.interpolate": [[303, null]], "nn.functional.layer_norm": [[283, null]], "nn.functional.leaky_relu": [[245, null]], "nn.functional.linear": [[272, null]], "nn.functional.max_pool1d": [[295, null]], "nn.functional.max_pool2d": [[296, null]], "nn.functional.max_pool3d": [[297, null]], "nn.functional.mse_loss": [[277, null]], "nn.functional.nll_loss": [[278, null]], "nn.functional.normalize": [[284, null]], "nn.functional.relu": [[246, null]], "nn.functional.rotate": [[304, null]], "nn.functional.scaled_dot_product_attention": [[252, null]], "nn.functional.selu": [[247, null]], "nn.functional.sigmoid": [[248, null]], "nn.functional.softmax": [[249, null]], "nn.functional.tanh": [[250, null]], "nn.functional.unfold": [[260, null]], "nn.init.constant": [[314, null]], "nn.init.kaiming_normal": [[316, null]], "nn.init.kaiming_uniform": [[317, null]], "nn.init.normal": [[318, null]], "nn.init.uniform": [[319, null]], "nn.init.xavier_normal": [[320, null]], "nn.init.xavier_uniform": [[321, null]], "optim.ASGD": [[412, null]], "optim.Adadelta": [[413, null]], "optim.Adagrad": [[414, null]], "optim.Adam": [[415, null]], "optim.AdamW": [[416, null]], "optim.Adamax": [[417, null]], "optim.NAdam": [[418, null]], "optim.Optimizer": [[400, null]], "optim.RAdam": [[419, null]], "optim.RMSprop": [[420, null]], "optim.Rprop": [[421, null]], "optim.SGD": [[422, null]], "optim.lr_scheduler": [[401, null]], "pvt_huge": [[130, null]], "pvt_large": [[131, null]], "pvt_medium": [[132, null]], "pvt_small": [[133, null]], "pvt_tiny": [[134, null]], "pvt_v2_b0": [[135, null]], "pvt_v2_b1": [[136, null]], "pvt_v2_b2": [[137, null]], "pvt_v2_b2_li": [[138, null]], "pvt_v2_b3": [[139, null]], "pvt_v2_b4": [[140, null]], "pvt_v2_b5": [[141, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[143, null]], "resnest_14": [[144, null]], "resnest_200": [[145, null]], "resnest_26": [[146, null]], "resnest_269": [[147, null]], "resnest_50": [[148, null]], "resnest_50_1s4x24d": [[149, null]], "resnest_50_4s2x40d": [[150, null]], "resnet_1001": [[152, null]], "resnet_101": [[153, null]], "resnet_152": [[154, null]], "resnet_18": [[155, null]], "resnet_200": [[156, null]], "resnet_269": [[157, null]], "resnet_34": [[158, null]], "resnet_50": [[159, null]], "resnext_101_32x16d": [[163, null]], "resnext_101_32x32d": [[164, null]], "resnext_101_32x4d": [[165, null]], "resnext_101_32x8d": [[166, null]], "resnext_101_64x4d": [[167, null]], "resnext_50_32x4d": [[168, null]], "se_resnet_101": [[170, null]], "se_resnet_152": [[171, null]], "se_resnet_18": [[172, null]], "se_resnet_34": [[173, null]], "se_resnet_50": [[174, null]], "se_resnext_101_32x4d": [[175, null]], "se_resnext_101_32x8d": [[176, null]], "se_resnext_101_64x4d": [[177, null]], "se_resnext_50_32x4d": [[178, null]], "sk_resnet_18": [[180, null]], "sk_resnet_34": [[181, null]], "sk_resnet_50": [[182, null]], "sk_resnext_50_32x4d": [[183, null]], "swin_base": [[186, null]], "swin_large": [[187, null]], "swin_small": [[188, null]], "swin_tiny": [[189, null]], "swin_v2_base": [[190, null]], "swin_v2_giant": [[191, null]], "swin_v2_huge": [[192, null]], "swin_v2_large": [[193, null]], "swin_v2_small": [[194, null]], "swin_v2_tiny": [[195, null]], "transformer_base": [[231, null]], "transformer_big": [[232, null]], "transforms.CenterCrop": [[533, null]], "transforms.Compose": [[531, null]], "transforms.Normalize": [[534, null]], "transforms.RandomCrop": [[535, null]], "transforms.RandomGrayscale": [[536, null]], "transforms.RandomHorizontalFlip": [[537, null]], "transforms.RandomRotation": [[538, null]], "transforms.RandomVerticalFlip": [[539, null]], "transforms.Resize": [[540, null]], "transforms.ToTensor": [[532, null]], "util.FPN": [[219, null]], "util.MultiScaleROIAlign": [[220, null]], "util.ROIAlign": [[221, null]], "util.SelectiveSearch": [[222, null]], "util.apply_deltas": [[223, null]], "util.bbox_to_delta": [[224, null]], "util.clip_boxes": [[225, null]], "util.iou": [[227, null]], "util.nms": [[228, null]], "vggnet_11": [[197, null]], "vggnet_13": [[198, null]], "vggnet_16": [[199, null]], "vggnet_19": [[200, null]], "visual.draw_tensor_graph": [[543, null]], "vit_base": [[202, null]], "vit_huge": [[203, null]], "vit_large": [[204, null]], "vit_small": [[205, null]], "vit_tiny": [[206, null]], "wide_resnet_101": [[160, null]], "wide_resnet_50": [[161, null]], "xception": [[208, null]], "zfnet": [[210, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/efficientformer/EfficientFormer", "models/imgclf/efficientformer/efficientformer_l1", "models/imgclf/efficientformer/efficientformer_l3", "models/imgclf/efficientformer/efficientformer_l7", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/imggen/index", "models/models", "models/objdet/faster_rcnn/FasterRCNN", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/RCNN", "models/objdet/utilities/FPN", "models/objdet/utilities/MultiScaleROIAlign", "models/objdet/utilities/ROIAlign", "models/objdet/utilities/SelectiveSearch", "models/objdet/utilities/apply_deltas", "models/objdet/utilities/bbox_to_delta", "models/objdet/utilities/clip_boxes", "models/objdet/utilities/index", "models/objdet/utilities/iou", "models/objdet/utilities/nms", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "porting/load", "porting/save", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms", "visual/draw_tensor_graph", "visual/visual"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/efficientformer/EfficientFormer.rst", "models/imgclf/efficientformer/efficientformer_l1.rst", "models/imgclf/efficientformer/efficientformer_l3.rst", "models/imgclf/efficientformer/efficientformer_l7.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/imggen/index.rst", "models/models.rst", "models/objdet/faster_rcnn/FasterRCNN.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/objdet/utilities/FPN.rst", "models/objdet/utilities/MultiScaleROIAlign.rst", "models/objdet/utilities/ROIAlign.rst", "models/objdet/utilities/SelectiveSearch.rst", "models/objdet/utilities/apply_deltas.rst", "models/objdet/utilities/bbox_to_delta.rst", "models/objdet/utilities/clip_boxes.rst", "models/objdet/utilities/index.rst", "models/objdet/utilities/iou.rst", "models/objdet/utilities/nms.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "porting/load.rst", "porting/save.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst", "visual/draw_tensor_graph.rst", "visual/visual.rst"], "indexentries": {"abs() (in module lucid)": [[467, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[413, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[414, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[415, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[417, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[416, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[285, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[287, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[288, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[289, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[290, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[376, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[377, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[378, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[379, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[380, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[381, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[442, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[298, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[346, "lucid.nn.AlphaDropout", false]], "apply_deltas() (in module lucid.models.objdet.util)": [[223, "lucid.models.objdet.util.apply_deltas", false]], "arange() (in module lucid)": [[454, "lucid.arange", false]], "arccos() (in module lucid)": [[468, "lucid.arccos", false]], "arcsin() (in module lucid)": [[469, "lucid.arcsin", false]], "arctan() (in module lucid)": [[470, "lucid.arctan", false]], "argmax() (in module lucid)": [[498, "lucid.argmax", false]], "argmin() (in module lucid)": [[499, "lucid.argmin", false]], "argsort() (in module lucid)": [[500, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[412, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[291, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[292, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[293, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[382, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[383, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[384, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[367, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[368, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[369, "lucid.nn.BatchNorm3d", false]], "bbox_to_delta() (in module lucid.models.objdet.util)": [[224, "lucid.models.objdet.util.bbox_to_delta", false]], "bceloss (class in lucid.nn)": [[361, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[432, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[357, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[501, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[233, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[471, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[533, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[502, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[472, "lucid.clip", false]], "clip_boxes() (in module lucid.models.objdet.util)": [[225, "lucid.models.objdet.util.clip_boxes", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[531, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[503, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[314, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[338, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[339, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[340, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[305, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[306, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[307, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[341, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[342, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[343, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[473, "lucid.cos", false]], "cosh() (in module lucid)": [[474, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[402, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[425, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[362, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[475, "lucid.cube", false]], "cvt (class in lucid.models)": [[65, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[66, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[67, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[68, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[403, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[69, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[70, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[71, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[72, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[73, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[308, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[309, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[310, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "diag() (in module lucid)": [[455, "lucid.diag", false]], "div() (in module lucid)": [[443, "lucid.div", false]], "dot() (in module lucid)": [[444, "lucid.dot", false]], "draw_tensor_graph() (in module lucid.visual)": [[543, "lucid.visual.draw_tensor_graph", false]], "drop_block() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[347, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[349, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[350, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[351, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[352, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[267, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[348, "lucid.nn.DropPath", false]], "efficientformer (class in lucid.models)": [[88, "lucid.models.EfficientFormer", false]], "efficientformer_l1() (in module lucid.models)": [[89, "lucid.models.efficientformer_l1", false]], "efficientformer_l3() (in module lucid.models)": [[90, "lucid.models.efficientformer_l3", false]], "efficientformer_l7() (in module lucid.models)": [[91, "lucid.models.efficientformer_l7", false]], "efficientnet (class in lucid.models)": [[74, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[76, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[77, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[78, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[79, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[80, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[81, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[82, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[83, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[75, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[84, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[85, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[86, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[87, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[322, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[389, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[301, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[456, "lucid.empty", false]], "empty_like() (in module lucid)": [[457, "lucid.empty_like", false]], "exp() (in module lucid)": [[476, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[404, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[458, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "faster_rcnn_resnet_101_fpn() (in module lucid.models)": [[214, "lucid.models.faster_rcnn_resnet_101_fpn", false]], "faster_rcnn_resnet_50_fpn() (in module lucid.models)": [[215, "lucid.models.faster_rcnn_resnet_50_fpn", false]], "fasterrcnn (class in lucid.models)": [[213, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[217, "lucid.models.FastRCNN", false]], "flatten() (in module lucid)": [[504, "lucid.flatten", false]], "floor() (in module lucid)": [[477, "lucid.floor", false]], "fpn (class in lucid.models.objdet.util)": [[219, "lucid.models.objdet.util.FPN", false]], "full() (in module lucid)": [[459, "lucid.full", false]], "full_like() (in module lucid)": [[460, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[323, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[370, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[426, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[299, "lucid.nn.functional.grid_sample", false]], "hardsigmoid (class in lucid.nn)": [[324, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[325, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[505, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[506, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[507, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[508, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[275, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[363, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[358, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[92, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[97, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[98, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[99, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[100, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[102, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[103, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[93, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[94, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[95, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[96, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[101, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[445, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[371, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[372, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[373, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[303, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "iou() (in module lucid.models.objdet.util)": [[227, "lucid.models.objdet.util.iou", false]], "kaiming_normal() (in module lucid.nn.init)": [[316, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[317, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[406, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[283, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[374, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[326, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[105, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[106, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[107, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[108, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[359, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[461, "lucid.linspace", false]], "load() (in module lucid)": [[430, "lucid.load", false]], "log() (in module lucid)": [[478, "lucid.log", false]], "log2() (in module lucid)": [[479, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[405, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[510, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[446, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[480, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[295, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[296, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[297, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[447, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[385, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[386, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[387, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[109, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[110, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[111, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[112, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[113, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[114, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[481, "lucid.mean", false]], "meshgrid() (in module lucid)": [[511, "lucid.meshgrid", false]], "min() (in module lucid)": [[482, "lucid.min", false]], "minimum() (in module lucid)": [[448, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[115, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[119, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[116, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[120, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[117, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[121, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[122, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[118, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[123, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[124, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[125, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[126, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[127, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[234, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[236, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[237, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[364, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[335, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[449, "lucid.multiply", false]], "multiscaleroialign (class in lucid.models.objdet.util)": [[220, "lucid.models.objdet.util.MultiScaleROIAlign", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[407, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[418, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[365, "lucid.nn.NLLLoss", false]], "nms() (in module lucid.models.objdet.util)": [[228, "lucid.models.objdet.util.nms", false]], "no_grad (in module lucid)": [[428, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[512, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[318, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[534, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[284, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[424, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[462, "lucid.ones", false]], "ones_like() (in module lucid)": [[463, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[400, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[450, "lucid.outer", false]], "pad() (in module lucid)": [[513, "lucid.pad", false]], "parameter (class in lucid.nn)": [[235, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[238, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[239, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[434, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[451, "lucid.power", false]], "pvt (class in lucid.models)": [[128, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[130, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[131, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[132, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[133, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[134, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[129, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[135, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[136, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[137, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[138, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[139, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[140, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[141, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[419, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[435, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[436, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[437, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[535, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[536, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[537, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[538, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[539, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[514, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[218, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[354, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[483, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[408, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[429, "lucid.register_model", false]], "relu (class in lucid.nn)": [[327, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[328, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[515, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[516, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[540, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[142, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[143, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[144, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[145, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[146, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[147, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[148, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[149, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[150, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[151, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[152, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[153, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[154, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[155, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[156, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[157, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[158, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[159, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[162, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[163, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[164, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[165, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[166, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[167, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[168, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[420, "lucid.optim.RMSprop", false]], "roialign (class in lucid.models.objdet.util)": [[221, "lucid.models.objdet.util.ROIAlign", false]], "roll() (in module lucid)": [[517, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[304, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[484, "lucid.round", false]], "rprop (class in lucid.optim)": [[421, "lucid.optim.Rprop", false]], "save() (in module lucid)": [[431, "lucid.save", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[336, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[170, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[171, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[172, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[173, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[174, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[175, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[176, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[177, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[178, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[438, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[312, "lucid.nn.SelectiveKernel", false]], "selectivesearch (class in lucid.models.objdet.util)": [[222, "lucid.models.objdet.util.SelectiveSearch", false]], "selu (class in lucid.nn)": [[329, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[311, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[169, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[240, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[422, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[330, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[485, "lucid.sign", false]], "sin() (in module lucid)": [[486, "lucid.sin", false]], "sinh() (in module lucid)": [[487, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[180, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[181, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[182, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[183, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[179, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[331, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[518, "lucid.sort", false]], "split() (in module lucid)": [[519, "lucid.split", false]], "sqrt() (in module lucid)": [[488, "lucid.sqrt", false]], "square() (in module lucid)": [[489, "lucid.square", false]], "squeeze() (in module lucid)": [[520, "lucid.squeeze", false]], "stack() (in module lucid)": [[521, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[409, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[452, "lucid.sub", false]], "sum() (in module lucid)": [[490, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[491, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[186, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[187, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[188, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[189, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[190, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[191, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[192, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[193, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[194, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[195, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[184, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[185, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[332, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[492, "lucid.tan", false]], "tanh (class in lucid.nn)": [[333, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[493, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[441, "lucid.Tensor", false]], "tensor() (in module lucid)": [[497, "lucid.tensor", false]], "tensordot() (in module lucid)": [[453, "lucid.tensordot", false]], "tile() (in module lucid)": [[522, "lucid.tile", false]], "topk() (in module lucid)": [[523, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[532, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[494, "lucid.trace", false]], "transformer (class in lucid.models)": [[230, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[391, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[231, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[232, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[392, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[393, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[394, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[395, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[495, "lucid.transpose", false]], "tril() (in module lucid)": [[524, "lucid.tril", false]], "triu() (in module lucid)": [[525, "lucid.triu", false]], "unbind() (in module lucid)": [[526, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[344, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[319, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[439, "lucid.random.uniform", false]], "unique() (in module lucid)": [[527, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[528, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[397, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[496, "lucid.var", false]], "vggnet (class in lucid.models)": [[196, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[197, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[198, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[199, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[200, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[201, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[202, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[203, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[204, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[205, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[206, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[529, "lucid.vstack", false]], "where() (in module lucid)": [[530, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[160, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[161, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[320, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[321, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[207, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[208, "lucid.models.xception", false]], "zeros() (in module lucid)": [[464, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[465, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[209, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[210, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[441, 1, 1, "", "Tensor"], [467, 2, 1, "", "abs"], [442, 2, 1, "", "add"], [454, 2, 1, "", "arange"], [468, 2, 1, "", "arccos"], [469, 2, 1, "", "arcsin"], [470, 2, 1, "", "arctan"], [498, 2, 1, "", "argmax"], [499, 2, 1, "", "argmin"], [500, 2, 1, "", "argsort"], [501, 2, 1, "", "broadcast_to"], [471, 2, 1, "", "ceil"], [502, 2, 1, "", "chunk"], [472, 2, 1, "", "clip"], [503, 2, 1, "", "concatenate"], [473, 2, 1, "", "cos"], [474, 2, 1, "", "cosh"], [425, 2, 1, "", "count_flops"], [475, 2, 1, "", "cube"], [455, 2, 1, "", "diag"], [443, 2, 1, "", "div"], [444, 2, 1, "", "dot"], [456, 2, 1, "", "empty"], [457, 2, 1, "", "empty_like"], [476, 2, 1, "", "exp"], [458, 2, 1, "", "eye"], [504, 2, 1, "", "flatten"], [477, 2, 1, "", "floor"], [459, 2, 1, "", "full"], [460, 2, 1, "", "full_like"], [426, 2, 1, "", "grad_enabled"], [505, 2, 1, "", "histogram"], [506, 2, 1, "", "histogram2d"], [507, 2, 1, "", "histogramdd"], [508, 2, 1, "", "hstack"], [445, 2, 1, "", "inner"], [461, 2, 1, "", "linspace"], [430, 2, 1, "", "load"], [478, 2, 1, "", "log"], [479, 2, 1, "", "log2"], [510, 2, 1, "", "masked_fill"], [446, 2, 1, "", "matmul"], [480, 2, 1, "", "max"], [447, 2, 1, "", "maximum"], [481, 2, 1, "", "mean"], [511, 2, 1, "", "meshgrid"], [482, 2, 1, "", "min"], [448, 2, 1, "", "minimum"], [449, 2, 1, "", "multiply"], [428, 3, 1, "", "no_grad"], [512, 2, 1, "", "nonzero"], [462, 2, 1, "", "ones"], [463, 2, 1, "", "ones_like"], [450, 2, 1, "", "outer"], [513, 2, 1, "", "pad"], [451, 2, 1, "", "power"], [514, 2, 1, "", "ravel"], [483, 2, 1, "", "reciprocal"], [429, 2, 1, "", "register_model"], [515, 2, 1, "", "repeat"], [516, 2, 1, "", "reshape"], [517, 2, 1, "", "roll"], [484, 2, 1, "", "round"], [431, 2, 1, "", "save"], [485, 2, 1, "", "sign"], [486, 2, 1, "", "sin"], [487, 2, 1, "", "sinh"], [518, 2, 1, "", "sort"], [519, 2, 1, "", "split"], [488, 2, 1, "", "sqrt"], [489, 2, 1, "", "square"], [520, 2, 1, "", "squeeze"], [521, 2, 1, "", "stack"], [452, 2, 1, "", "sub"], [490, 2, 1, "", "sum"], [491, 2, 1, "", "swapaxes"], [492, 2, 1, "", "tan"], [493, 2, 1, "", "tanh"], [497, 2, 1, "", "tensor"], [453, 2, 1, "", "tensordot"], [522, 2, 1, "", "tile"], [523, 2, 1, "", "topk"], [494, 2, 1, "", "trace"], [495, 2, 1, "", "transpose"], [524, 2, 1, "", "tril"], [525, 2, 1, "", "triu"], [526, 2, 1, "", "unbind"], [527, 2, 1, "", "unique"], [528, 2, 1, "", "unsqueeze"], [496, 2, 1, "", "var"], [529, 2, 1, "", "vstack"], [530, 2, 1, "", "where"], [464, 2, 1, "", "zeros"], [465, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [65, 1, 1, "", "CvT"], [69, 1, 1, "", "DenseNet"], [88, 1, 1, "", "EfficientFormer"], [74, 1, 1, "", "EfficientNet"], [75, 1, 1, "", "EfficientNet_V2"], [217, 1, 1, "", "FastRCNN"], [213, 1, 1, "", "FasterRCNN"], [92, 1, 1, "", "Inception"], [96, 1, 1, "", "InceptionNeXt"], [101, 1, 1, "", "InceptionResNet"], [105, 1, 1, "", "LeNet"], [109, 1, 1, "", "MaxViT"], [115, 1, 1, "", "MobileNet"], [116, 1, 1, "", "MobileNet_V2"], [117, 1, 1, "", "MobileNet_V3"], [118, 1, 1, "", "MobileNet_V4"], [128, 1, 1, "", "PVT"], [129, 1, 1, "", "PVT_V2"], [218, 1, 1, "", "RCNN"], [142, 1, 1, "", "ResNeSt"], [162, 1, 1, "", "ResNeXt"], [151, 1, 1, "", "ResNet"], [169, 1, 1, "", "SENet"], [179, 1, 1, "", "SKNet"], [184, 1, 1, "", "SwinTransformer"], [185, 1, 1, "", "SwinTransformer_V2"], [230, 1, 1, "", "Transformer"], [196, 1, 1, "", "VGGNet"], [201, 1, 1, "", "ViT"], [207, 1, 1, "", "Xception"], [209, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "cvt_13"], [67, 2, 1, "", "cvt_21"], [68, 2, 1, "", "cvt_w24"], [70, 2, 1, "", "densenet_121"], [71, 2, 1, "", "densenet_169"], [72, 2, 1, "", "densenet_201"], [73, 2, 1, "", "densenet_264"], [89, 2, 1, "", "efficientformer_l1"], [90, 2, 1, "", "efficientformer_l3"], [91, 2, 1, "", "efficientformer_l7"], [76, 2, 1, "", "efficientnet_b0"], [77, 2, 1, "", "efficientnet_b1"], [78, 2, 1, "", "efficientnet_b2"], [79, 2, 1, "", "efficientnet_b3"], [80, 2, 1, "", "efficientnet_b4"], [81, 2, 1, "", "efficientnet_b5"], [82, 2, 1, "", "efficientnet_b6"], [83, 2, 1, "", "efficientnet_b7"], [84, 2, 1, "", "efficientnet_v2_l"], [85, 2, 1, "", "efficientnet_v2_m"], [86, 2, 1, "", "efficientnet_v2_s"], [87, 2, 1, "", "efficientnet_v2_xl"], [214, 2, 1, "", "faster_rcnn_resnet_101_fpn"], [215, 2, 1, "", "faster_rcnn_resnet_50_fpn"], [97, 2, 1, "", "inception_next_atto"], [98, 2, 1, "", "inception_next_base"], [99, 2, 1, "", "inception_next_small"], [100, 2, 1, "", "inception_next_tiny"], [102, 2, 1, "", "inception_resnet_v1"], [103, 2, 1, "", "inception_resnet_v2"], [93, 2, 1, "", "inception_v1"], [94, 2, 1, "", "inception_v3"], [95, 2, 1, "", "inception_v4"], [106, 2, 1, "", "lenet_1"], [107, 2, 1, "", "lenet_4"], [108, 2, 1, "", "lenet_5"], [110, 2, 1, "", "maxvit_base"], [111, 2, 1, "", "maxvit_large"], [112, 2, 1, "", "maxvit_small"], [113, 2, 1, "", "maxvit_tiny"], [114, 2, 1, "", "maxvit_xlarge"], [119, 2, 1, "", "mobilenet"], [120, 2, 1, "", "mobilenet_v2"], [121, 2, 1, "", "mobilenet_v3_large"], [122, 2, 1, "", "mobilenet_v3_small"], [123, 2, 1, "", "mobilenet_v4_conv_large"], [124, 2, 1, "", "mobilenet_v4_conv_medium"], [125, 2, 1, "", "mobilenet_v4_conv_small"], [126, 2, 1, "", "mobilenet_v4_hybrid_large"], [127, 2, 1, "", "mobilenet_v4_hybrid_medium"], [130, 2, 1, "", "pvt_huge"], [131, 2, 1, "", "pvt_large"], [132, 2, 1, "", "pvt_medium"], [133, 2, 1, "", "pvt_small"], [134, 2, 1, "", "pvt_tiny"], [135, 2, 1, "", "pvt_v2_b0"], [136, 2, 1, "", "pvt_v2_b1"], [137, 2, 1, "", "pvt_v2_b2"], [138, 2, 1, "", "pvt_v2_b2_li"], [139, 2, 1, "", "pvt_v2_b3"], [140, 2, 1, "", "pvt_v2_b4"], [141, 2, 1, "", "pvt_v2_b5"], [143, 2, 1, "", "resnest_101"], [144, 2, 1, "", "resnest_14"], [145, 2, 1, "", "resnest_200"], [146, 2, 1, "", "resnest_26"], [147, 2, 1, "", "resnest_269"], [148, 2, 1, "", "resnest_50"], [149, 2, 1, "", "resnest_50_1s4x24d"], [150, 2, 1, "", "resnest_50_4s2x40d"], [152, 2, 1, "", "resnet_1001"], [153, 2, 1, "", "resnet_101"], [154, 2, 1, "", "resnet_152"], [155, 2, 1, "", "resnet_18"], [156, 2, 1, "", "resnet_200"], [157, 2, 1, "", "resnet_269"], [158, 2, 1, "", "resnet_34"], [159, 2, 1, "", "resnet_50"], [163, 2, 1, "", "resnext_101_32x16d"], [164, 2, 1, "", "resnext_101_32x32d"], [165, 2, 1, "", "resnext_101_32x4d"], [166, 2, 1, "", "resnext_101_32x8d"], [167, 2, 1, "", "resnext_101_64x4d"], [168, 2, 1, "", "resnext_50_32x4d"], [170, 2, 1, "", "se_resnet_101"], [171, 2, 1, "", "se_resnet_152"], [172, 2, 1, "", "se_resnet_18"], [173, 2, 1, "", "se_resnet_34"], [174, 2, 1, "", "se_resnet_50"], [175, 2, 1, "", "se_resnext_101_32x4d"], [176, 2, 1, "", "se_resnext_101_32x8d"], [177, 2, 1, "", "se_resnext_101_64x4d"], [178, 2, 1, "", "se_resnext_50_32x4d"], [180, 2, 1, "", "sk_resnet_18"], [181, 2, 1, "", "sk_resnet_34"], [182, 2, 1, "", "sk_resnet_50"], [183, 2, 1, "", "sk_resnext_50_32x4d"], [186, 2, 1, "", "swin_base"], [187, 2, 1, "", "swin_large"], [188, 2, 1, "", "swin_small"], [189, 2, 1, "", "swin_tiny"], [190, 2, 1, "", "swin_v2_base"], [191, 2, 1, "", "swin_v2_giant"], [192, 2, 1, "", "swin_v2_huge"], [193, 2, 1, "", "swin_v2_large"], [194, 2, 1, "", "swin_v2_small"], [195, 2, 1, "", "swin_v2_tiny"], [231, 2, 1, "", "transformer_base"], [232, 2, 1, "", "transformer_big"], [197, 2, 1, "", "vggnet_11"], [198, 2, 1, "", "vggnet_13"], [199, 2, 1, "", "vggnet_16"], [200, 2, 1, "", "vggnet_19"], [202, 2, 1, "", "vit_base"], [203, 2, 1, "", "vit_huge"], [204, 2, 1, "", "vit_large"], [205, 2, 1, "", "vit_small"], [206, 2, 1, "", "vit_tiny"], [160, 2, 1, "", "wide_resnet_101"], [161, 2, 1, "", "wide_resnet_50"], [208, 2, 1, "", "xception"], [210, 2, 1, "", "zfnet"]], "lucid.models.objdet.util": [[219, 1, 1, "", "FPN"], [220, 1, 1, "", "MultiScaleROIAlign"], [221, 1, 1, "", "ROIAlign"], [222, 1, 1, "", "SelectiveSearch"], [223, 2, 1, "", "apply_deltas"], [224, 2, 1, "", "bbox_to_delta"], [225, 2, 1, "", "clip_boxes"], [227, 2, 1, "", "iou"], [228, 2, 1, "", "nms"]], "lucid.nn": [[376, 1, 1, "", "AdaptiveAvgPool1d"], [377, 1, 1, "", "AdaptiveAvgPool2d"], [378, 1, 1, "", "AdaptiveAvgPool3d"], [379, 1, 1, "", "AdaptiveMaxPool1d"], [380, 1, 1, "", "AdaptiveMaxPool2d"], [381, 1, 1, "", "AdaptiveMaxPool3d"], [346, 1, 1, "", "AlphaDropout"], [382, 1, 1, "", "AvgPool1d"], [383, 1, 1, "", "AvgPool2d"], [384, 1, 1, "", "AvgPool3d"], [361, 1, 1, "", "BCELoss"], [367, 1, 1, "", "BatchNorm1d"], [368, 1, 1, "", "BatchNorm2d"], [369, 1, 1, "", "BatchNorm3d"], [357, 1, 1, "", "Bilinear"], [233, 1, 1, "", "Buffer"], [338, 1, 1, "", "Conv1d"], [339, 1, 1, "", "Conv2d"], [340, 1, 1, "", "Conv3d"], [305, 1, 1, "", "ConvBNReLU1d"], [306, 1, 1, "", "ConvBNReLU2d"], [307, 1, 1, "", "ConvBNReLU3d"], [341, 1, 1, "", "ConvTranspose1d"], [342, 1, 1, "", "ConvTranspose2d"], [343, 1, 1, "", "ConvTranspose3d"], [362, 1, 1, "", "CrossEntropyLoss"], [308, 1, 1, "", "DepthSeparableConv1d"], [309, 1, 1, "", "DepthSeparableConv2d"], [310, 1, 1, "", "DepthSeparableConv3d"], [347, 1, 1, "", "DropBlock"], [348, 1, 1, "", "DropPath"], [349, 1, 1, "", "Dropout"], [350, 1, 1, "", "Dropout1d"], [351, 1, 1, "", "Dropout2d"], [352, 1, 1, "", "Dropout3d"], [322, 1, 1, "", "ELU"], [389, 1, 1, "", "Embedding"], [323, 1, 1, "", "GELU"], [370, 1, 1, "", "GlobalResponseNorm"], [324, 1, 1, "", "HardSigmoid"], [325, 1, 1, "", "HardSwish"], [363, 1, 1, "", "HuberLoss"], [358, 1, 1, "", "Identity"], [371, 1, 1, "", "InstanceNorm1d"], [372, 1, 1, "", "InstanceNorm2d"], [373, 1, 1, "", "InstanceNorm3d"], [374, 1, 1, "", "LayerNorm"], [326, 1, 1, "", "LeakyReLU"], [359, 1, 1, "", "Linear"], [364, 1, 1, "", "MSELoss"], [385, 1, 1, "", "MaxPool1d"], [386, 1, 1, "", "MaxPool2d"], [387, 1, 1, "", "MaxPool3d"], [234, 1, 1, "", "Module"], [236, 1, 1, "", "ModuleDict"], [237, 1, 1, "", "ModuleList"], [335, 1, 1, "", "MultiHeadAttention"], [365, 1, 1, "", "NLLLoss"], [235, 1, 1, "", "Parameter"], [238, 1, 1, "", "ParameterDict"], [239, 1, 1, "", "ParameterList"], [327, 1, 1, "", "ReLU"], [328, 1, 1, "", "ReLU6"], [354, 1, 1, "", "Rearrange"], [329, 1, 1, "", "SELU"], [311, 1, 1, "", "SEModule"], [336, 1, 1, "", "ScaledDotProductAttention"], [312, 1, 1, "", "SelectiveKernel"], [240, 1, 1, "", "Sequential"], [330, 1, 1, "", "Sigmoid"], [331, 1, 1, "", "Softmax"], [332, 1, 1, "", "Swish"], [333, 1, 1, "", "Tanh"], [391, 1, 1, "", "Transformer"], [392, 1, 1, "", "TransformerDecoder"], [393, 1, 1, "", "TransformerDecoderLayer"], [394, 1, 1, "", "TransformerEncoder"], [395, 1, 1, "", "TransformerEncoderLayer"], [344, 1, 1, "", "Unfold"], [397, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[285, 2, 1, "", "adaptive_avg_pool1d"], [286, 2, 1, "", "adaptive_avg_pool2d"], [287, 2, 1, "", "adaptive_avg_pool3d"], [288, 2, 1, "", "adaptive_max_pool1d"], [289, 2, 1, "", "adaptive_max_pool2d"], [290, 2, 1, "", "adaptive_max_pool3d"], [298, 2, 1, "", "affine_grid"], [261, 2, 1, "", "alpha_dropout"], [291, 2, 1, "", "avg_pool1d"], [292, 2, 1, "", "avg_pool2d"], [293, 2, 1, "", "avg_pool3d"], [279, 2, 1, "", "batch_norm"], [270, 2, 1, "", "bilinear"], [273, 2, 1, "", "binary_cross_entropy"], [253, 2, 1, "", "conv1d"], [254, 2, 1, "", "conv2d"], [255, 2, 1, "", "conv3d"], [256, 2, 1, "", "conv_transpose1d"], [257, 2, 1, "", "conv_transpose2d"], [258, 2, 1, "", "conv_transpose3d"], [274, 2, 1, "", "cross_entropy"], [262, 2, 1, "", "drop_block"], [263, 2, 1, "", "drop_path"], [264, 2, 1, "", "dropout"], [265, 2, 1, "", "dropout1d"], [266, 2, 1, "", "dropout2d"], [267, 2, 1, "", "dropout3d"], [242, 2, 1, "", "elu"], [301, 2, 1, "", "embedding"], [243, 2, 1, "", "gelu"], [280, 2, 1, "", "global_response_norm"], [299, 2, 1, "", "grid_sample"], [275, 2, 1, "", "huber_loss"], [282, 2, 1, "", "instance_norm"], [303, 2, 1, "", "interpolate"], [283, 2, 1, "", "layer_norm"], [245, 2, 1, "", "leaky_relu"], [272, 2, 1, "", "linear"], [295, 2, 1, "", "max_pool1d"], [296, 2, 1, "", "max_pool2d"], [297, 2, 1, "", "max_pool3d"], [277, 2, 1, "", "mse_loss"], [278, 2, 1, "", "nll_loss"], [284, 2, 1, "", "normalize"], [246, 2, 1, "", "relu"], [304, 2, 1, "", "rotate"], [252, 2, 1, "", "scaled_dot_product_attention"], [247, 2, 1, "", "selu"], [248, 2, 1, "", "sigmoid"], [249, 2, 1, "", "softmax"], [250, 2, 1, "", "tanh"], [260, 2, 1, "", "unfold"]], "lucid.nn.init": [[314, 2, 1, "", "constant"], [316, 2, 1, "", "kaiming_normal"], [317, 2, 1, "", "kaiming_uniform"], [318, 2, 1, "", "normal"], [319, 2, 1, "", "uniform"], [320, 2, 1, "", "xavier_normal"], [321, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[412, 1, 1, "", "ASGD"], [413, 1, 1, "", "Adadelta"], [414, 1, 1, "", "Adagrad"], [415, 1, 1, "", "Adam"], [416, 1, 1, "", "AdamW"], [417, 1, 1, "", "Adamax"], [418, 1, 1, "", "NAdam"], [400, 1, 1, "", "Optimizer"], [419, 1, 1, "", "RAdam"], [420, 1, 1, "", "RMSprop"], [421, 1, 1, "", "Rprop"], [422, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[402, 1, 1, "", "CosineAnnealingLR"], [403, 1, 1, "", "CyclicLR"], [404, 1, 1, "", "ExponentialLR"], [405, 1, 1, "", "LRScheduler"], [406, 1, 1, "", "LambdaLR"], [407, 1, 1, "", "MultiStepLR"], [408, 1, 1, "", "ReduceLROnPlateau"], [409, 1, 1, "", "StepLR"]], "lucid.random": [[432, 2, 1, "", "bernoulli"], [434, 2, 1, "", "permutation"], [435, 2, 1, "", "rand"], [436, 2, 1, "", "randint"], [437, 2, 1, "", "randn"], [438, 2, 1, "", "seed"], [439, 2, 1, "", "uniform"]], "lucid.transforms": [[533, 1, 1, "", "CenterCrop"], [531, 1, 1, "", "Compose"], [534, 1, 1, "", "Normalize"], [535, 1, 1, "", "RandomCrop"], [536, 1, 1, "", "RandomGrayscale"], [537, 1, 1, "", "RandomHorizontalFlip"], [538, 1, 1, "", "RandomRotation"], [539, 1, 1, "", "RandomVerticalFlip"], [540, 1, 1, "", "Resize"], [532, 1, 1, "", "ToTensor"]], "lucid.types": [[424, 1, 1, "", "Numeric"]], "lucid.visual": [[543, 2, 1, "", "draw_tensor_graph"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 86, 104, 109, 121, 122, 127, 131, 143, 144, 145, 146, 147, 148, 201, 205, 213, 215, 218, 219, 220, 230, 233, 234, 235, 236, 238, 239, 240, 252, 285, 286, 287, 312, 336, 344, 362, 365, 376, 377, 378, 382, 385, 386, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 424, 427, 429, 430, 431, 441, 446, 455, 481, 490, 491, 494, 496, 497, 517, 520, 532, 534, 542], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 84, 85, 86, 87, 88, 94, 96, 101, 104, 105, 109, 119, 128, 129, 130, 131, 132, 133, 134, 169, 184, 185, 201, 213, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 542], "000": [5, 6, 7, 8, 90, 104, 136, 191, 231, 232, 456, 457], "0000": [362, 363, 365], "0001": [408, 412], "000e": [456, 457], "001": [403, 412, 415, 416, 418, 419, 422], "002": [417, 418], "003": [104, 133], "004": 418, "005": 326, "006": 403, "008": [57, 104, 119], "00808": 104, "009": [104, 136], "00b": 104, "01": [16, 245, 326, 400, 402, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422], "01051757": 437, "011": [38, 104], "01191": 104, "013": [72, 104], "014": [64, 104], "016": [104, 152], "01697": 104, "01b": 104, "0205": 362, "0217": 362, "0227": 362, "024": [104, 114, 125, 174], "025": [62, 104], "026": [104, 163], "028": [104, 168], "0299": 362, "02b": 104, "030": [214, 216], "032": [84, 104, 159], "03545": 104, "03b": 104, "044715": [243, 323], "0450": 362, "0451": 362, "046": [82, 104], "047": [104, 198], "04719755": 468, "0474259": 248, "048": [104, 133, 176], "0480": 362, "04861": 104, "04b": 104, "05": [88, 279, 282, 283, 305, 306, 307, 326, 367, 368, 369, 371, 372, 373, 374, 391, 393, 395], "050": [104, 205], "0507": [247, 329], "05m": 104, "06": [40, 96, 280, 370, 413, 421], "066": [52, 104], "069": [104, 146, 157], "06m": 104, "07": [262, 273, 274, 347, 361, 362], "070": [104, 127], "0700": 362, "0706508": 333, "071": [104, 152], "072": [104, 140], "0721": 362, "073": [104, 182], "07722396": 332, "0794": 365, "07b": 104, "08": [408, 415, 416, 417, 418, 419, 420], "0802": 365, "081": [104, 113], "083": [100, 104], "08333333": 25, "085537": 476, "088": [104, 174], "08955": 104, "08b": 104, "08m": 104, "0900": [331, 362], "096": [34, 104, 208], "0986": [249, 331], "09861229": 478, "09883": 104, "0992": 362, "09b": 104, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 169, 175, 176, 177, 178, 179, 183, 184, 185, 196, 201, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 89, 104, 105, 106, 107, 108, 109, 130, 143, 144, 145, 146, 147, 148, 149, 150, 196, 209, 210, 220, 223, 224, 225, 227, 228, 236, 237, 240, 254, 255, 270, 272, 285, 335, 338, 339, 340, 351, 352, 357, 359, 368, 369, 372, 376, 383, 384, 386, 391, 392, 393, 394, 395, 401, 404, 406, 407, 408, 414, 429, 436, 439, 440, 443, 446, 449, 450, 461, 470, 484, 490, 500, 505, 506, 523, 530, 533, 535, 536, 538], "100": [6, 16, 30, 55, 84, 85, 86, 87, 88, 104, 197, 198, 199, 200, 222, 225, 228, 402, 429, 542], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215], "1000000": 412, "1001": [104, 152, 362], "1003": 362, "1007": 104, "10096": 104, "101": [104, 142, 143, 153, 160, 163, 164, 165, 166, 167, 170, 175, 176, 177, 214, 216], "10106": 104, "1014": 247, "102": [104, 157], "1024": [16, 34, 39, 68, 217, 232, 354], "1025": [237, 240], "1026": [237, 240], "1027": [237, 240], "10499": 248, "105": [62, 104], "1050": 330, "1054": 365, "1056": [237, 240], "10590": 104, "106": [104, 194], "107": [39, 104], "108": [85, 104], "1097": 104, "11": [11, 89, 104, 127, 155, 172, 196, 197, 270, 338, 339, 340, 351, 357, 368, 369, 372, 383, 384, 386, 446, 533, 534, 535, 536, 538], "110": [104, 147, 228], "1105": 104, "1109": 104, "111": [78, 104], "1111": 361, "112": [104, 121, 148, 218], "1134": 270, "114b": 536, "119": [104, 270], "1192": [248, 249, 331], "12": [20, 25, 36, 37, 55, 62, 68, 69, 70, 71, 72, 73, 79, 90, 104, 106, 107, 130, 134, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 201, 224, 228, 231, 232, 238, 270, 284, 287, 338, 339, 340, 351, 352, 357, 368, 369, 372, 378, 383, 384, 386, 446, 450, 451, 533, 535, 536, 538], "120": [84, 104, 105, 108, 121, 122, 225], "12000": [231, 232], "121": [69, 70, 104], "12122": 104, "123": [316, 317, 318, 319, 320, 321, 438, 439], "124": [37, 104, 316, 317, 320, 321], "125": 384, "1250": 363, "1251": 104, "1258": 104, "126": [104, 160], "128": [16, 31, 34, 40, 45, 60, 61, 82, 90, 102, 104, 109, 113, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 151, 160, 161, 186, 196, 213, 219, 240, 312, 531, 542], "1280": [37, 117], "128x128": [531, 542], "12b": 104, "13": [66, 93, 104, 196, 198, 270, 338, 339, 340, 357, 369, 383, 384, 386, 446, 533, 535, 536, 538], "130": 225, "1314": 104, "132": [104, 197], "1324": 104, "133": [104, 198], "136": [86, 104, 127], "138": [104, 199], "13b": 104, "13k": 104, "14": [33, 34, 35, 71, 104, 110, 111, 114, 136, 144, 338, 339, 340, 351, 352, 357, 369, 383, 384, 386, 446, 450, 459, 484, 533, 535, 536, 538], "14030": 104, "1409": 104, "1415": 484, "14285715": 227, "143": [104, 200], "144": 122, "1440": 216, "1448": 216, "145": 270, "148": [44, 104], "14899": 104, "149": [71, 104, 152], "14b": 104, "15": [0, 11, 51, 56, 57, 104, 227, 270, 338, 339, 340, 357, 369, 383, 384, 386, 446, 450, 494, 533, 535, 536, 538, 542], "150": 222, "1513": 365, "152": [104, 126, 154, 171], "1536": [35, 36, 38, 114], "155": 446, "1556": 104, "156": [97, 104], "157": [35, 104], "1588": [243, 323], "15b": 104, "15m": 104, "16": [55, 67, 68, 69, 70, 104, 105, 108, 117, 121, 122, 128, 163, 169, 186, 190, 196, 199, 201, 202, 203, 204, 205, 206, 213, 217, 218, 219, 220, 237, 238, 240, 252, 286, 287, 305, 306, 307, 311, 312, 335, 336, 338, 339, 340, 342, 343, 351, 352, 354, 357, 368, 369, 377, 378, 383, 384, 386, 391, 392, 393, 394, 395, 399, 446, 450, 488, 533, 535, 536, 538], "160": [104, 121, 135, 153], "16227766": 26, "16425": 365, "1643": 361, "166": 446, "167": [104, 325], "169": [69, 71, 104], "16b": 104, "16x16": 104, "17": [104, 146, 338, 339, 340, 357, 369, 384, 445, 533, 535, 536, 538], "170": 270, "1704": 104, "171": [104, 111], "174": [32, 104], "17520119": 487, "177": [104, 165], "17b": 104, "18": [58, 59, 91, 104, 107, 132, 139, 155, 172, 180, 186, 187, 188, 190, 191, 192, 193, 194, 338, 339, 340, 351, 357, 369, 384, 449, 450, 533, 535, 536, 538], "1800": 362, "182": [104, 224], "184": 121, "187": [104, 111], "18877099": 332, "189": 104, "19": [11, 66, 80, 104, 196, 200, 254, 255, 270, 339, 340, 369, 444, 446, 453], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 66, 67, 68, 91, 96, 104, 106, 107, 110, 111, 112, 114, 134, 154, 187], "194": [104, 163], "196": [54, 68, 104, 187, 193], "1966": [249, 330, 331], "197": [43, 50, 104], "198": [104, 121], "199": [104, 203], "1998": [104, 362], "19b": 104, "1_53": 104, "1d": [228, 253, 256, 285, 288, 291, 295, 305, 308, 344, 367, 371, 376, 379, 435, 439, 446, 455, 494, 505, 506, 511, 513, 514, 515, 522, 527], "1e": [20, 25, 40, 88, 96, 135, 136, 137, 139, 140, 141, 262, 273, 274, 279, 280, 282, 283, 284, 305, 306, 307, 347, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 391, 393, 395, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "1e6": 412, "1s4x24d": 149, "1st": [29, 209], "1x1": 219, "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 66, 68, 74, 75, 84, 85, 86, 87, 88, 89, 90, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 172, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 213, 216, 217, 218, 220, 223, 224, 228, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 397, 399, 402, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542], "20": [0, 5, 6, 7, 8, 68, 72, 104, 222, 223, 224, 227, 228, 236, 237, 240, 339, 340, 351, 369, 392, 393, 401, 405, 407, 409, 450, 476, 530], "200": [91, 104, 121, 145, 156], "2000": 222, "2004": 104, "201": [72, 104, 145], "2011": 311, "2012": 104, "2014": [104, 216], "2015": [104, 216], "2016": 104, "2017": [104, 216, 229, 391], "2018": [104, 311], "2019": 104, "2020": 104, "2021": 104, "2022": 104, "2023": [104, 311], "2024": 104, "2039": 365, "204": 340, "2048": [37, 38, 39, 213, 230, 391, 393, 395], "209": [57, 104], "20b": 104, "21": [67, 86, 104, 158, 173, 214, 215, 238, 270, 339, 340, 369, 450], "210": [87, 104], "2102": 104, "2103": 104, "211": 446, "2111": 104, "213": [229, 232], "21841": [49, 54], "21m": 104, "22": [11, 102, 104, 138, 205, 208, 223, 228, 270, 339, 340, 351, 369, 444, 446], "2201": 104, "2204": 104, "2206": 104, "221": [87, 104], "2231": [362, 365], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 104, 109, 110, 111, 112, 113, 114, 119, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 161, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 209, 214, 215, 218, 220], "2247": [367, 368, 369, 371, 372, 373, 374], "224x224": [74, 93, 175, 176, 177, 178, 183, 215, 218], "226": 446, "22752314": 437, "2278": 104, "22b": 104, "23": [104, 133, 143, 153, 160, 163, 164, 165, 166, 167, 170, 339, 340, 369, 484], "2301": 104, "232": [62, 104, 119, 177], "2324": [104, 329], "233": [48, 104], "234": [316, 317, 318, 319, 320, 321, 439], "2345": 484, "235": [79, 104], "237": [229, 232], "238": [104, 122, 139], "23840584": 332, "23b": 104, "24": [69, 70, 117, 121, 122, 145, 149, 156, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 221, 224, 270, 286, 339, 340, 351, 369, 377, 450, 453], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 104, 121, 122, 200], "240x240": 74, "2424": [249, 331], "2447": 331, "246": [104, 106], "24d": 149, "25": [0, 104, 113, 137, 149, 159, 168, 180, 227, 248, 257, 258, 263, 330, 340, 364, 369, 383, 384, 443, 461, 483, 496], "2500": [361, 363, 365], "2512": 322, "2547": 329, "256": [31, 34, 37, 39, 40, 55, 60, 61, 109, 113, 128, 129, 130, 135, 151, 196, 213, 217, 219, 220, 221, 222], "258": [104, 188], "25m": 104, "26": [63, 104, 146, 238, 272, 340, 359, 369, 450], "260": 104, "260x260": 74, "26325684": 437, "264": [73, 104], "265": 104, "266": [59, 104], "2689": [249, 330, 331], "26894142": 332, "269": [104, 147, 157], "27": [32, 56, 104, 131, 140, 148, 178, 270, 338, 340, 369, 475], "271": [58, 104], "272": [63, 104, 167], "274": [104, 143, 183], "276": [316, 317, 320, 321], "277": [36, 68, 104], "27b": 104, "28": [36, 37, 45, 53, 57, 100, 104, 106, 107, 174, 189, 195, 224, 270, 340, 450], "280": [52, 104], "286": [104, 130], "288": [104, 122, 145, 189], "289": [49, 76, 104], "28x28": [7, 8, 106, 107], "29": [104, 183, 340], "293": 104, "296": [60, 104], "299": [104, 207], "299r": 536, "299x299": [94, 95, 102, 103], "29b": 104, "2_i": [371, 372, 373], "2c": 403, "2d": [254, 257, 266, 286, 289, 292, 296, 298, 306, 309, 342, 368, 372, 377, 380, 446, 455, 458, 491, 494, 504, 506, 507, 511, 512, 513, 515, 522, 538], "2e": 417, "2fh": 216, "2k": 218, "2nd": [29, 209], "2x": 150, "2x2": [260, 533, 535], "2x3": 298, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 97, 98, 99, 100, 104, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 194, 195, 196, 201, 207, 209, 213, 214, 215, 216, 217, 218, 222, 228, 233, 234, 235, 237, 238, 239, 240, 243, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 275, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 397, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "30": [81, 90, 94, 104, 147, 150, 157, 237, 304, 340, 403, 407, 408, 530, 538], "300": [104, 214, 215, 222], "300x300": 74, "301": [36, 104], "302": [85, 104], "3026": 365, "304": [104, 112, 204], "3072": [39, 201], "308": [104, 193], "30823025": 332, "31": [67, 104, 270, 340, 446], "310": [456, 457], "316": 104, "31622777": 26, "319": 104, "31b": 104, "32": [11, 16, 31, 55, 69, 71, 72, 104, 108, 109, 123, 135, 142, 143, 144, 145, 146, 147, 148, 163, 164, 165, 166, 168, 186, 190, 217, 218, 219, 220, 221, 237, 240, 270, 272, 286, 305, 306, 307, 311, 312, 339, 340, 342, 354, 359, 377, 399, 424, 444, 445, 450], "320": [90, 104, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 146], "321": [316, 317, 320, 321], "326": [104, 170, 204], "328": [91, 104], "32b": 104, "32m": 104, "32x16d": 104, "32x32": [5, 6, 105, 108], "32x32d": 104, "32x4d": [104, 175, 178, 183], "32x8d": [104, 176], "33": [73, 104, 237, 240, 272, 340, 359], "330": [33, 104], "3333": 284, "33333333": 25, "336": [38, 43, 104, 166, 197, 224], "337": [73, 104], "33b": 104, "34": [104, 158, 173, 181, 237, 240, 270, 340, 446, 450], "342": [316, 317, 320, 321], "344": [80, 104], "345": [316, 317, 318, 319, 320, 321, 439], "349": [104, 195], "34b": 104, "35": [103, 104, 237, 240, 340], "350": [54, 104], "352": [93, 104], "354": [104, 189], "355": [83, 104], "3567": [361, 365], "357": [104, 199, 210], "359": [104, 131], "35b": 104, "36": [104, 145, 154, 156, 171, 340], "362": [104, 137], "364": 104, "367": 104, "3679": [242, 247, 322], "368": [104, 180, 182], "36b": 104, "36th": 104, "37": [104, 126, 338], "370": [78, 104], "372": 270, "375": 364, "3750": 363, "37754067": 332, "378": [104, 107], "37b": 104, "38": 104, "380": 104, "380x380": 74, "383": [104, 114], "38344152": 435, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 66, 67, 91, 96, 104, 110, 111, 112, 114, 213], "38629436": 478, "389056": 476, "38b": 104, "38th": 104, "392": [68, 94, 104], "393": [81, 93, 104], "3935": 322, "3965": 104, "3977": 104, "39b": 104, "39m": 104, "3d": [255, 258, 267, 287, 290, 293, 297, 307, 310, 340, 343, 344, 369, 373, 378, 381], "3x3": [104, 219, 344, 440], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 67, 69, 74, 88, 89, 90, 96, 97, 104, 105, 106, 107, 109, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 227, 228, 238, 240, 252, 253, 254, 255, 256, 257, 260, 262, 263, 265, 266, 267, 270, 272, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 308, 309, 310, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 397, 408, 412, 415, 419, 420, 422, 427, 434, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 463, 465, 472, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "40": [95, 104, 117, 121, 122, 141, 150, 220, 407, 530], "400": [46, 104, 108, 190, 203], "4044": 361, "406": 218, "4076": 362, "408": [58, 104], "4096": [29, 209, 213, 217], "40b": 104, "40d": 150, "41": [104, 132], "41421356": 18, "415": 104, "416": [104, 113, 157, 175, 206], "41666667": 25, "417": [104, 150], "41808962": 437, "419974": 250, "4199743": 333, "41b": 104, "42": [38, 39, 191, 270, 311, 440], "421": [316, 317, 320, 321], "423": [316, 317, 318, 319], "424": 104, "42718872": 26, "4278": 104, "4284": 104, "4286": [284, 361], "42b": 104, "43": [11, 58, 82, 104, 215, 216, 444, 446, 453], "431": [99, 104], "432": [81, 104], "4323": 322, "4375": 363, "43758721": 435, "43b": 104, "44": [59, 104, 153, 165], "440": [86, 104], "4472": 284, "4472136": 20, "448": [58, 59, 83, 89, 104], "4495": [369, 373], "44b": 104, "45": [104, 139, 181, 270, 304, 538], "4510": 104, "4520": 104, "4545": 346, "455": [104, 167], "456": [104, 218], "456x456": 74, "457": [104, 134], "45b": 104, "46": [44, 104], "460": [91, 104], "463": 104, "464": [42, 56, 104, 150], "468": [104, 164], "46b": 104, "4700": 104, "4708": 104, "47112767": 470, "472": [104, 164, 229, 232], "476": [104, 187], "47b": 104, "47m": 104, "48": [69, 72, 73, 89, 104, 122, 143, 147, 157, 175, 187, 191, 192, 193, 272, 359], "480": [66, 71, 104, 121], "481": [104, 121], "483": [104, 148], "485": 218, "48b": 104, "48m": 104, "49": [99, 104, 170, 188, 194], "492": [104, 132], "496": [53, 104], "4979": 322, "49b": 104, "49k": 104, "4s2x40d": [104, 150], "4x": 149, "4x4": 540, "5": [1, 2, 11, 13, 14, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 74, 76, 88, 90, 94, 104, 105, 106, 107, 108, 109, 112, 113, 117, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 179, 180, 181, 182, 206, 209, 213, 217, 218, 220, 221, 223, 225, 227, 228, 234, 235, 236, 237, 238, 240, 243, 248, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 275, 277, 279, 282, 283, 285, 288, 291, 292, 298, 299, 301, 303, 305, 306, 307, 312, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 379, 382, 383, 384, 386, 387, 391, 393, 395, 401, 403, 405, 407, 408, 409, 421, 427, 432, 434, 436, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 463, 465, 467, 468, 469, 480, 481, 482, 483, 485, 490, 491, 494, 495, 496, 497, 498, 505, 506, 507, 508, 511, 516, 517, 518, 519, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542], "50": [5, 6, 11, 104, 142, 148, 149, 150, 151, 159, 161, 168, 174, 178, 182, 183, 214, 215, 216, 222, 225, 272, 359, 402, 421, 444, 446, 461, 536, 537, 539, 542], "5000": [230, 361, 363, 365], "504": [104, 120], "508": [214, 216], "50_1s4x24d": 104, "50b": 104, "510": 104, "5108": 365, "512": [31, 34, 37, 39, 40, 55, 90, 103, 104, 109, 113, 124, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 151, 155, 181, 213, 217, 218, 219, 230, 231, 335, 391, 392, 393, 394, 395], "515": [215, 216], "516": [34, 104], "519": 104, "51b": 104, "520": [97, 104], "52359878": 469, "528": [56, 104], "528x528": 74, "52b": 104, "53": [33, 104, 270, 445], "530": [104, 164], "531": 104, "532": [104, 187], "536": [79, 104], "537": [104, 122], "543": [316, 317, 318, 319, 320, 321, 439], "54308063": 474, "544": [99, 104, 199, 229, 231], "545": 451, "5455": 346, "549": [104, 153], "54b": 104, "55": [85, 104, 112, 131], "553": [60, 104, 138], "556": [104, 140], "557": [104, 159], "558": [38, 104], "559": [104, 178], "55b": 104, "560": [77, 104, 144], "563": [316, 317, 320, 321], "564": [104, 191], "567": [104, 202], "5672": 104, "568": [87, 104], "5683": 104, "569": [104, 176], "57": [104, 182, 270], "57079633": [468, 469], "5714": 284, "5720": 104, "5730": 104, "57366333": 438, "576": 122, "57b": 104, "580": 216, "582": 104, "584": [104, 229, 231], "5849625": 479, "586": [95, 104], "587": 216, "587g": 536, "589": [45, 104], "590": [104, 123], "591": [42, 104], "592": [61, 104, 172], "5987": 104, "5995": 104, "5998": 229, "59b": 104, "5ch": 216, "5d": 258, "5th": [29, 209], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 66, 67, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 96, 104, 105, 108, 110, 111, 114, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 148, 151, 158, 159, 161, 168, 173, 174, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 209, 230, 238, 239, 253, 254, 255, 256, 260, 262, 267, 270, 272, 280, 284, 285, 288, 289, 298, 299, 301, 317, 321, 324, 328, 338, 339, 340, 344, 347, 349, 350, 351, 352, 357, 359, 361, 367, 368, 369, 370, 371, 372, 373, 374, 376, 379, 380, 383, 384, 386, 387, 391, 392, 394, 413, 421, 427, 434, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 463, 465, 480, 481, 482, 490, 491, 494, 495, 496, 497, 502, 508, 515, 516, 517, 518, 519, 524, 525, 526, 529, 532, 533, 534, 535, 536, 538, 540], "60": [5, 6, 104, 130, 154, 225, 453], "600": [74, 104, 218], "6008": 229, "600x600": 74, "6052": 365, "606": [104, 188], "6065": 322, "608": [37, 104, 210], "60b": 104, "61": [30, 104, 108], "6105": 104, "611": [104, 144], "6114": 104, "6124": [367, 368, 369, 371, 372, 373, 374], "617": [84, 104], "62": [104, 140, 210, 214, 216, 229, 231, 270], "622": [67, 104], "623": [51, 104], "626": [104, 110], "62686041": 487, "62b": 104, "630": 104, "632": [36, 104, 203, 204], "6321": [242, 322], "63245553": 26, "635": [53, 104], "636": [76, 104], "63b": 104, "64": [31, 40, 66, 67, 69, 73, 88, 90, 104, 109, 110, 111, 112, 113, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 156, 167, 179, 196, 213, 217, 218, 219, 220, 237, 240, 270, 311, 312, 424], "640": [49, 80, 104], "641": 104, "645": 104, "64589411": 435, "647": [104, 180], "648": [104, 132], "64b": 104, "64x4d": [104, 177], "654": [316, 317, 318, 319, 320, 321, 439], "656": [35, 104, 202], "657": [104, 192, 316, 317, 320, 321], "6590": [249, 331], "65b": 104, "66": [83, 104, 171], "660": [49, 104], "664": [104, 205], "6652": 331, "666": [104, 135], "66666667": 25, "6667": [284, 361], "667": [104, 200], "668": [104, 192], "6682": 361, "669": [104, 156], "66b": 104, "67": 446, "672": [104, 121, 158], "67326": 329, "6733": 247, "676": [104, 149], "677": 104, "678": [316, 317, 318, 319, 320, 321], "67b": 104, "67m": 104, "688": [39, 104], "68811989": 437, "689": [104, 155], "68b": 104, "69314718": 478, "696": [67, 104, 139, 160], "69b": 104, "7": [10, 11, 14, 24, 39, 58, 59, 64, 70, 77, 104, 109, 129, 135, 136, 137, 138, 139, 140, 141, 184, 185, 196, 213, 217, 220, 221, 238, 253, 254, 255, 260, 262, 267, 270, 272, 273, 274, 285, 298, 299, 301, 312, 323, 328, 329, 330, 333, 338, 339, 340, 344, 347, 351, 352, 357, 359, 361, 362, 364, 368, 369, 372, 373, 376, 379, 383, 384, 386, 387, 432, 436, 439, 442, 444, 445, 446, 450, 452, 453, 455, 459, 461, 476, 481, 490, 491, 494, 495, 496, 507, 519, 522, 524, 525, 532, 533, 534, 535, 536, 538, 540], "70": [7, 8, 104, 145], "7001": 362, "704": [73, 104, 165], "706": [104, 108, 130], "70710678": [20, 486], "708": [46, 104], "70b": 104, "7132": 104, "7141": 104, "7147": 365, "715": [104, 124], "717": [47, 104, 206], "7182": 484, "7182818": 476, "71b": 104, "72": [117, 121, 122, 484], "726791": 104, "72b": 104, "73": 104, "731": [104, 194], "7311": [249, 330, 331], "734": [104, 114], "739": [102, 104], "73b": 104, "74": 446, "745": [104, 193], "748": [98, 104], "74b": 104, "75": [228, 257, 272, 359, 364, 412, 461], "755": [104, 126], "757": [104, 112], "7581": 247, "75b": 104, "760": [104, 135, 143, 183], "76159416": [332, 493], "7616": [250, 333], "76219569": 474, "7635": 329, "767": [43, 104], "768": [32, 33, 35, 36, 38, 40, 41, 62, 68, 91, 96, 104, 110, 111, 112, 114, 130, 186, 201], "770": [37, 104], "772": 451, "774": [104, 125], "776": [61, 104, 110], "778": [104, 172], "77b": 104, "78": [104, 161], "78357324": 437, "784": 16, "78539816": 470, "789": 104, "78b": 104, "790": [35, 104], "791": [104, 166], "79172504": 435, "792": [104, 163], "795": [77, 104], "796": [104, 192], "797": [104, 158], "79b": 104, "7x7": 209, "8": [11, 23, 27, 38, 39, 55, 60, 61, 69, 74, 91, 104, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 151, 154, 157, 163, 164, 165, 166, 167, 168, 171, 180, 181, 182, 186, 190, 219, 220, 222, 228, 230, 237, 238, 240, 252, 253, 254, 255, 257, 260, 262, 267, 270, 272, 273, 284, 285, 286, 287, 290, 298, 299, 301, 305, 306, 307, 311, 323, 324, 329, 330, 333, 335, 336, 338, 339, 340, 342, 343, 344, 347, 349, 350, 351, 352, 357, 359, 361, 364, 368, 369, 372, 373, 376, 377, 378, 379, 381, 383, 384, 386, 387, 391, 392, 393, 394, 395, 408, 415, 416, 417, 418, 419, 420, 432, 436, 443, 444, 445, 446, 450, 451, 453, 454, 455, 471, 475, 481, 490, 491, 494, 495, 496, 507, 519, 523, 524, 525, 532, 533, 534, 535, 536, 538, 540, 543], "80": [5, 6, 7, 8, 121], "800": [47, 51, 64, 104, 218], "8005": 362, "808": [104, 154], "80b": 104, "81": [91, 104], "817": [94, 104], "818": 104, "8182": 346, "81b": 104, "82": [34, 104, 141, 270], "821": [104, 171], "82b": 104, "83": [104, 167], "832": [100, 104], "833": 104, "83b": 104, "84": [105, 107, 108], "840": [30, 50, 89, 98, 104], "8413": [243, 323], "842": [104, 195], "847": [103, 104], "848": [104, 131, 171, 198], "849": 104, "84b": 104, "856": [63, 70, 104, 137], "85772238": 332, "8584": 329, "85b": 104, "86": [98, 104, 202], "862": [104, 208], "863": [104, 197], "864": [104, 123, 156], "868": [104, 173], "869": [104, 191], "87": [104, 186, 190], "872": [104, 120, 149, 170], "876": [316, 317, 320, 321, 439], "87m": 104, "88": [42, 47, 104, 122, 166, 177], "880": [104, 111], "8808": [249, 330, 331], "882": [104, 141], "884": [44, 104], "886": [104, 160], "887": 451, "88m": 104, "891773": 435, "893": [90, 104], "8944": 284, "89442719": 20, "895": [104, 181], "896": [104, 178], "89b": 104, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 78, 88, 96, 104, 124, 223, 228, 254, 260, 262, 270, 272, 285, 298, 301, 338, 339, 340, 344, 347, 351, 357, 359, 361, 368, 369, 372, 376, 383, 384, 386, 401, 404, 412, 413, 415, 416, 417, 418, 419, 420, 422, 432, 436, 439, 442, 446, 450, 451, 452, 455, 460, 477, 488, 489, 500, 523, 524, 525, 532, 533, 534, 535, 536, 538], "902": [215, 216], "904": [104, 168], "90709145": 438, "9091": 346, "9120": 365, "9163": 365, "91m": 104, "920": [104, 130], "922": [104, 190], "928": [72, 89, 104], "929": [104, 147], "92b": 104, "93": [104, 176], "93b": 104, "93k": 104, "94": 152, "944": [32, 104], "9486833": 26, "949e": [456, 457], "94b": 104, "95": 406, "9526": 248, "9545": 323, "955": [104, 175], "956": [50, 104], "958": [104, 173], "95b": 104, "96": [32, 33, 40, 41, 64, 89, 91, 96, 104, 109, 110, 111, 112, 122, 184, 185], "960": 121, "96366276": 435, "9640": 333, "96402758": 493, "968": [54, 104], "973": [104, 161], "976": [59, 104], "978": [39, 70, 104], "97b": 104, "984": [95, 104, 141, 177], "98b": 104, "99": [225, 420], "9957": 365, "997": [66, 104], "99734545": 438, "999": [0, 415, 416, 417, 418, 419], "99b": 104, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 66, 67, 68, 75, 101, 104, 105, 115, 118, 128, 130, 131, 132, 133, 134, 142, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 212, 214, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 234, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 270, 272, 273, 274, 278, 279, 280, 282, 283, 284, 298, 299, 303, 312, 336, 346, 347, 349, 350, 351, 352, 354, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 389, 391, 392, 393, 394, 395, 399, 400, 401, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 432, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 538], "As": [342, 438], "At": [16, 397, 408], "Be": [0, 10], "By": [0, 2, 3, 16, 104, 118, 125, 152, 153, 154, 155, 156, 157, 158, 159, 235, 304, 399, 419, 427, 432, 435, 436, 437, 439, 532, 542], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 123, 124, 125, 127, 213, 218, 240, 242, 243, 245, 246, 247, 248, 250, 256, 270, 272, 284, 303, 316, 317, 320, 321, 329, 338, 339, 340, 341, 344, 357, 359, 367, 368, 369, 371, 372, 373, 399, 411, 431, 434, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 476, 478, 479, 480, 481, 482, 486, 488, 490, 491, 494, 495, 496, 500, 513, 515, 520, 522, 526, 528, 542], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 88, 151, 217, 218, 234, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 263, 267, 270, 272, 279, 282, 286, 287, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 335, 336, 338, 339, 340, 341, 342, 343, 348, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 377, 378, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 420, 421, 424, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 529, 532, 536, 537, 539, 540, 543], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 70, 71, 72, 73, 88, 91, 92, 93, 94, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 119, 127, 132, 139, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 172, 185, 192, 194, 196, 208, 212, 216, 217, 218, 219, 220, 222, 223, 228, 229, 234, 236, 237, 238, 239, 240, 256, 257, 258, 263, 267, 270, 299, 301, 303, 304, 305, 306, 307, 311, 323, 324, 327, 328, 333, 335, 336, 341, 343, 348, 354, 357, 358, 361, 362, 363, 364, 365, 376, 377, 378, 389, 391, 392, 394, 397, 399, 400, 411, 412, 418, 420, 421, 422, 424, 427, 428, 430, 431, 434, 438, 441, 442, 443, 444, 447, 448, 449, 451, 452, 461, 480, 482, 500, 503, 508, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 526, 527, 529, 531, 532], "Its": [11, 27, 440], "Near": 25, "No": [260, 263, 425], "Not": [299, 358], "One": [11, 106, 217, 542], "Such": 441, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "Then": [214, 453], "There": 516, "These": [4, 10, 17, 20, 23, 26, 28, 31, 84, 85, 86, 87, 109, 114, 123, 124, 125, 126, 127, 130, 160, 161, 180, 181, 182, 208, 212, 218, 346, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 421, 440, 542, 544], "To": [3, 16, 104, 215, 216, 229, 401, 411, 432, 434, 437, 440, 456, 457, 511, 527, 542], "With": [3, 104, 136, 140, 260, 263, 459, 460, 532, 542], "_": [13, 14, 15, 23, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 250, 272, 298, 301, 303, 341, 342, 354, 368, 369, 371, 372, 373, 382, 383, 384, 385, 386, 387, 389, 412, 413, 415, 416, 417, 418, 420, 422, 444, 445, 446, 450, 494, 495, 524, 525, 526, 533, 534, 535, 537, 538, 539], "_1": [20, 236, 237, 238, 239, 240, 270, 357, 450, 503, 508, 529], "_2": [20, 236, 237, 238, 239, 240, 270, 357, 450, 503, 508, 529], "__call__": [1, 234, 428], "__enter__": 428, "__exit__": 428, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 74, 75, 88, 92, 96, 101, 105, 109, 115, 116, 117, 118, 128, 129, 142, 196, 209, 213, 217, 218, 219, 220, 221, 222, 233, 234, 235, 236, 237, 238, 239, 263, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 399, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 429, 441, 531, 532], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 400, "__setattr__": 234, "_a": 453, "_activ": 249, "_arraylik": [455, 457, 460, 463, 465], "_arraylikeint": 513, "_arrayorscalar": [233, 235, 432, 441, 497], "_b": 453, "_backward_op": 16, "_base_activ": 105, "_base_dtyp": [456, 461], "_block": 347, "_builtinnumer": [441, 459, 460], "_c": 534, "_channel": 219, "_d": 258, "_decai": 418, "_devicetyp": [432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "_dtype_bit": 424, "_einopspattern": [13, 14, 15, 354], "_fanmod": [316, 317], "_fasterrcnnloss": 213, "_grad_en": 426, "_h": [257, 258], "_i": [20, 24, 249, 263, 270, 331, 348, 364, 367, 374, 382, 385, 441, 444, 445, 447, 448, 450, 451, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 503, 508, 515, 520, 523, 526, 528, 529], "_in": [316, 317, 320, 321], "_interpolatetyp": [299, 397], "_j": [249, 331, 382, 385, 450, 481, 490, 495, 496], "_k": 521, "_layer": [392, 394], "_left": 303, "_make_lay": 196, "_mlphead": 96, "_mlx_dtype": 424, "_mlxarrai": 441, "_modul": 234, "_n": [20, 236, 237, 238, 239, 240, 298, 503, 508, 529], "_nograd": 428, "_np_dtype": 424, "_out": [316, 317, 320, 321, 515, 522], "_p": [24, 284, 301, 389], "_pad": 513, "_paddingstr": [305, 306, 307, 308, 309, 310, 338, 339, 340, 341, 342, 343], "_paddingtyp": 299, "_paramet": 234, "_reducestr": 14, "_reductiontyp": [273, 274, 275, 277, 278, 361, 362, 363, 364, 365], "_resnestbottleneck": 142, "_right": 303, "_scalar": [252, 314, 318, 319, 320, 321, 336, 454, 459, 460, 461, 472, 510], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [170, 171, 174], "_seresnetmodul": [172, 173], "_shapelik": [283, 374, 435, 436, 459, 462, 464, 501, 516, 520, 528], "_size": [285, 286, 287, 288, 347], "_skresnetmodul": [180, 181, 182], "_slope": 326, "_sortkind": 500, "_statedict": 400, "_t": [419, 420], "_tensor": [335, 391, 393, 395], "_tensorop": 441, "_u": 25, "_util": 526, "_v": 25, "_valu": [472, 513], "_w": [257, 258], "_weight": 389, "_width": 513, "a_": [11, 31, 393], "a_1": [335, 519], "a_2": 519, "a_h": 335, "a_i": [335, 447, 448, 451, 519], "a_k": 519, "aaai": 104, "ab": [408, 466], "abc": [2, 400], "abil": [104, 542], "about": 10, "abov": [426, 438, 455, 458, 524], "abs_pos_emb": [184, 185], "absolut": [23, 24, 31, 184, 185, 227, 275, 408, 417, 431, 467], "abstract": [2, 3, 130, 132, 399, 400, 411, 412, 420, 422, 424, 544], "abstractmethod": 400, "abund": [49, 126], "acceler": [104, 217, 329, 367, 368, 369, 403, 412, 418, 420, 422, 441], "accept": [222, 341, 358, 500], "access": [0, 2, 3, 4, 5, 6, 7, 8, 163, 164, 165, 166, 167, 168, 214, 233, 235, 236, 237, 238, 239, 240, 425, 516, 544], "accord": [11, 13, 15, 263, 299, 303, 338, 339, 340, 354, 357, 359, 362, 365, 413, 414, 415, 416, 417, 418, 419, 495, 501, 530], "accordingli": [19, 491, 530], "account": [23, 25, 26, 332, 425], "accumul": [299, 412, 413, 414, 425, 441, 442, 443, 447, 448, 449, 452, 501], "accur": [171, 216], "accuraci": [47, 49, 50, 51, 52, 84, 85, 86, 87, 88, 89, 90, 91, 98, 100, 104, 115, 116, 117, 123, 124, 125, 126, 127, 174, 202, 203, 204, 214, 215], "achiev": [13, 88, 104, 136, 162, 163, 164, 165, 166, 167, 168, 253, 254, 255, 285, 354, 376, 377, 378, 381, 418, 537, 539], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 88, 104, 109, 119, 130, 135, 136, 137, 139, 140, 141, 185, 193, 218, 220, 233, 237, 240, 280, 283, 285, 286, 287, 320, 321, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 424, 431, 432, 435, 436, 437, 438, 439, 440, 456, 457, 481, 496, 544], "act": [16, 416, 517], "act_lay": [65, 88, 109], "activ": [29, 40, 57, 59, 61, 65, 88, 104, 105, 109, 112, 113, 121, 122, 152, 156, 157, 169, 196, 209, 236, 240, 242, 243, 245, 246, 247, 248, 249, 250, 261, 305, 306, 307, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 346, 347, 349, 350, 351, 352, 361, 362, 365, 367, 368, 369, 374, 391, 393, 395, 425, 480, 482, 544], "actual": [235, 361, 362, 364, 365, 535], "acycl": 16, "ad": [15, 69, 117, 151, 223, 234, 236, 237, 238, 239, 240, 253, 254, 255, 256, 257, 262, 270, 272, 273, 274, 279, 280, 282, 283, 291, 292, 293, 295, 296, 297, 305, 306, 307, 335, 338, 339, 340, 341, 342, 343, 344, 347, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 391, 393, 395, 413, 414, 415, 416, 417, 418, 419, 420, 429, 528, 542], "adadelta": 423, "adagrad": [413, 423], "adam": [104, 416, 417, 418, 419, 423], "adamax": 423, "adamw": 423, "adapt": [10, 29, 92, 104, 105, 123, 126, 142, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 209, 285, 286, 287, 288, 289, 290, 311, 312, 376, 377, 378, 379, 380, 381, 404, 408, 413, 414, 415, 418, 419, 420, 421], "adaptive_avg_pool1d": [269, 294, 376], "adaptive_avg_pool2d": [269, 294, 377], "adaptive_avg_pool3d": [269, 294, 378], "adaptive_max_pool1d": [269, 294, 379], "adaptive_max_pool2d": [269, 294, 380], "adaptive_max_pool3d": [269, 294, 381], "adaptiveavgpool1d": [356, 388], "adaptiveavgpool2d": [29, 169, 196, 209, 218, 356, 388], "adaptiveavgpool3d": [356, 388], "adaptivemaxpool1d": [356, 388], "adaptivemaxpool2d": [356, 388], "adaptivemaxpool3d": [356, 388], "add": [4, 16, 55, 218, 234, 236, 237, 240, 270, 272, 335, 338, 339, 340, 341, 342, 343, 357, 359, 374, 400, 412, 415, 420, 422, 427, 466, 513, 528], "add_bias_kv": 335, "add_modul": [234, 240], "add_on": [218, 223, 224], "add_param_group": 400, "add_zero_attn": 335, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 214, 215, 234, 237, 240, 270, 272, 279, 282, 341, 342, 343, 357, 359, 367, 368, 369, 371, 372, 373, 412, 418, 427, 440, 442, 500, 521], "addition": 418, "address": [362, 365, 415, 416, 419], "adjust": [102, 115, 117, 119, 127, 175, 176, 177, 178, 179, 183, 217, 218, 285, 286, 287, 312, 346, 347, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 381, 401, 402, 405, 406, 407, 408, 409, 411, 415, 419, 420, 421, 508, 529], "adopt": 441, "advanc": [3, 16, 25, 75, 96, 104, 116, 126, 131, 133, 156, 190, 192, 229, 237, 240, 253, 254, 255, 285, 286, 287, 376, 377, 378, 399, 412], "advantag": 103, "affect": [215, 298, 426, 514, 520, 531], "affin": [298, 299, 305, 306, 307, 367, 368, 369, 371, 372, 373, 374, 538], "affine_grid": [269, 299, 300], "after": [10, 15, 16, 23, 29, 88, 121, 122, 184, 185, 209, 213, 217, 228, 235, 236, 237, 238, 239, 240, 267, 288, 311, 312, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 339, 340, 346, 349, 350, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 380, 382, 383, 384, 385, 386, 387, 391, 393, 395, 401, 408, 416, 425, 441, 442, 443, 447, 448, 449, 451, 452, 459, 460, 461, 513, 518, 519, 532], "afterward": 425, "aggreg": [10, 55, 104, 312, 450, 515, 522], "agnost": 424, "aim": 4, "al": [55, 93, 104, 109, 216, 218, 229, 391], "alex": [5, 6, 104], "alexei": 104, "alexnet": 209, "algebra": [11, 17, 458], "algorithm": [7, 23, 25, 26, 400, 411, 440, 500], "alia": 428, "align": [10, 27, 126, 219, 220, 221, 223, 224, 298, 303, 397, 445, 446, 491], "align_corn": [298, 299, 303, 397], "all": [0, 3, 4, 11, 16, 26, 74, 104, 218, 219, 229, 234, 236, 237, 238, 239, 240, 254, 255, 258, 284, 285, 286, 287, 290, 292, 293, 296, 297, 303, 306, 307, 312, 326, 327, 335, 340, 376, 377, 378, 383, 384, 387, 391, 399, 400, 405, 411, 412, 415, 420, 421, 422, 425, 434, 441, 451, 480, 481, 482, 490, 494, 496, 503, 504, 507, 508, 515, 520, 521, 522, 524, 525, 529, 533, 534, 542], "allevi": [104, 242], "alloc": [16, 456, 457], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 103, 104, 105, 109, 118, 121, 122, 124, 127, 129, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 162, 175, 176, 177, 178, 179, 183, 184, 188, 189, 190, 191, 192, 194, 212, 235, 236, 237, 238, 239, 240, 242, 245, 246, 249, 255, 260, 304, 312, 322, 323, 326, 329, 330, 331, 333, 336, 338, 339, 340, 354, 389, 397, 399, 401, 402, 404, 406, 408, 413, 414, 427, 454, 459, 462, 464, 465, 491, 495, 497, 511, 531, 532, 542], "along": [10, 14, 15, 249, 284, 303, 312, 331, 425, 445, 446, 450, 480, 481, 482, 490, 494, 496, 498, 500, 501, 502, 503, 506, 508, 511, 515, 517, 518, 519, 521, 522, 523, 526, 527, 528, 529, 537, 539], "alongsid": 233, "alpha": [242, 245, 247, 261, 322, 329, 346, 412, 420], "alpha_dropout": [268, 269, 346], "alphadropout": [353, 356], "alphadropoutmodel": 346, "alreadi": 429, "also": [242, 243, 245, 246, 247, 248, 250, 256, 270, 272, 303, 342, 418, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 464, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 501, 503, 508, 513, 514, 515, 516, 520, 521, 522, 528, 529], "alter": [240, 516, 517], "altern": [1, 16, 109, 323, 413, 446], "alwai": [10, 235, 401, 471, 477, 484, 510, 514, 530, 536, 537, 539], "among": [94, 312], "amount": [253, 254, 255, 291, 292, 293, 295, 296, 297, 308, 309, 310, 344, 418], "ampl": 123, "amsgrad": [415, 416], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 116, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 215, 222, 231, 232, 234, 236, 237, 238, 239, 240, 243, 253, 254, 255, 260, 261, 264, 265, 266, 267, 270, 286, 287, 299, 301, 303, 304, 308, 309, 310, 312, 320, 321, 322, 328, 330, 335, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 354, 357, 359, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 391, 392, 394, 395, 400, 401, 406, 411, 412, 415, 418, 420, 424, 425, 428, 429, 430, 431, 441, 446, 455, 458, 460, 481, 490, 496, 500, 501, 503, 507, 515, 519, 522, 525, 526, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542], "analog": [515, 522], "analysi": [4, 212, 216, 311, 338, 339, 340, 373, 382, 384, 385, 387], "analyz": 212, "anchor": [213, 214, 215], "anchor_s": 213, "anchor_strid": 213, "andreetto": 104, "andrew": 104, "angl": [304, 538], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 110, 111, 112, 113, 114, 151, 179, 208, 210, 215, 233, 234, 235, 236, 238, 239, 242, 243, 245, 246, 247, 248, 250, 261, 264, 270, 272, 279, 282, 299, 330, 354, 374, 399, 400, 405, 425, 426, 428, 429, 438, 441, 454, 455, 456, 458, 459, 462, 463, 464, 465, 480, 482, 495, 497, 503, 504, 508, 513, 515, 521, 522, 528, 529, 531, 542], "anneal": 402, "anoth": [118, 212, 227, 239, 452, 463, 465, 532, 542], "api": [4, 16, 376, 377, 378, 379, 542], "appear": [400, 527], "append": [237, 239, 240, 335], "appl": [16, 114, 424, 441], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 74, 75, 88, 96, 104, 162, 179, 184, 185, 201, 207, 209, 213, 217, 218, 221, 230, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 280, 284, 288, 290, 298, 299, 305, 306, 307, 311, 312, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 343, 346, 347, 348, 349, 350, 351, 352, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 405, 406, 412, 413, 414, 416, 417, 418, 419, 446, 459, 471, 477, 513, 515, 524, 525, 527, 531, 534, 536, 537, 538, 539, 540, 542], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 69, 91, 99, 102, 103, 104, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 206, 253, 258, 282, 338, 339, 340, 341, 357, 359, 440, 454, 464, 471, 513, 519, 524, 525, 540], "apply_delta": 226, "approach": [3, 10, 13, 15, 55, 57, 59, 61, 65, 101, 217, 240, 354, 402, 416], "appropri": [25, 104, 117, 121, 122, 220, 234, 238, 240, 263, 338, 339, 340, 346, 349, 350, 362, 380, 383, 384, 424, 426, 431], "approx": 247, "approxim": [25, 243, 323, 324, 325, 383, 386, 425], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 84, 85, 86, 87, 92, 93, 94, 104, 123, 125, 126, 129, 130, 131, 132, 133, 134, 138, 212, 213, 214, 217, 218, 219, 222, 224, 225, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 249, 253, 254, 255, 257, 258, 260, 263, 270, 272, 280, 286, 287, 289, 290, 298, 299, 301, 303, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 324, 331, 335, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 357, 359, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 395, 397, 399, 403, 407, 412, 415, 416, 418, 419, 420, 421, 422, 425, 426, 428, 429, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 461, 467, 472, 476, 480, 481, 482, 483, 485, 490, 491, 494, 495, 501, 502, 503, 511, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 530, 531, 532, 533, 535, 536, 540, 542, 544], "arang": [453, 466], "arbitrari": [237, 358, 456, 457, 472, 478, 479, 481, 486, 488, 490, 495, 496], "arcco": 466, "arch": 429, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 142, 143, 144, 145, 146, 147, 148, 151, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 215, 229, 230, 236, 237, 238, 239, 240, 243, 256, 311, 324, 325, 327, 332, 335, 336, 354, 357, 358, 391, 399, 429, 544], "arcsin": 466, "arctan": 466, "area": [227, 299, 303, 397], "arg": [234, 358, 429, 456], "argmax": [428, 509], "argmin": 509, "argsort": 509, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 197, 198, 199, 200, 208, 210, 214, 215, 234, 240, 298, 358, 425, 428, 456, 495], "around": [20, 212, 304, 333], "arr": [503, 508, 521, 529], "arrai": [16, 233, 235, 427, 430, 431, 432, 441, 446, 455, 457, 460, 463, 465, 497, 514, 515, 532, 542], "art": [49, 104, 203], "artifact": 221, "artifici": [104, 212], "arxiv": 104, "ascend": [518, 523], "asgd": 423, "ashish": 229, "aspect": [213, 540], "aspect_ratio": 213, "assign": [16, 212, 234, 236, 238, 240, 303, 362, 365, 510], "assist": [92, 93, 94], "associ": [238, 239], "assum": [0, 1, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 400, 411, 426, 430], "astyp": 441, "attach": [213, 425], "attempt": [236, 240], "attend": [252, 336, 392, 394, 395], "attent": [31, 55, 65, 66, 67, 68, 88, 104, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 229, 230, 239, 270, 311, 335, 336, 391, 392, 393, 394, 395, 453], "attn": [252, 336], "attn_drop": 109, "attn_drop_r": [55, 128, 129, 184, 185], "attn_mask": [252, 336], "atto": [46, 97, 104], "attribut": [16, 234, 401], "audio": [338, 341], "augment": [3, 4, 172, 304, 440, 515, 522, 531, 535, 536, 537, 538, 539, 542], "auto": 220, "auto_pars": 424, "autodiff": [11, 441], "autoencod": [104, 256, 341, 343], "autograd": [16, 399, 431, 518], "automat": [4, 221, 235, 236, 237, 238, 239, 379, 380, 381, 399, 425, 432, 435, 436, 437, 439, 441, 456, 457, 465, 500, 511, 532], "autoregress": [252, 336], "auxiliari": [92, 93, 94, 233], "avail": [4, 5, 6, 7, 8], "avd": 142, "averag": [14, 29, 88, 106, 107, 108, 109, 142, 151, 162, 169, 179, 196, 209, 233, 285, 286, 287, 291, 292, 293, 303, 311, 312, 364, 376, 377, 378, 382, 383, 384, 412, 413, 415, 420, 481], "avg_down": 151, "avg_pool": [382, 383, 384], "avg_pool1d": [269, 294], "avg_pool2d": [269, 294], "avg_pool3d": [269, 294], "avgpool": [29, 169, 196, 209, 312], "avgpool1d": [356, 388], "avgpool1dmodel": 382, "avgpool2d": [356, 388], "avgpool2dmodel": 383, "avgpool3d": [356, 388], "avgpool3dmodel": 384, "avoid": [2, 3, 13, 14, 25, 75, 138, 221, 224, 238, 284, 354, 403, 425, 428, 461, 471, 477], "awar": 193, "ax": [10, 13, 14, 15, 17, 354, 427, 453, 480, 481, 482, 490, 491, 495, 496, 501, 515, 520, 522], "axes_a": 453, "axes_b": 453, "axi": [14, 24, 104, 109, 249, 284, 331, 445, 446, 453, 480, 481, 482, 490, 496, 498, 500, 502, 503, 504, 506, 508, 511, 513, 515, 517, 518, 519, 520, 521, 522, 523, 526, 527, 528, 529, 537, 539], "axis1": 491, "axis2": 491, "b": [11, 13, 14, 15, 17, 27, 31, 104, 202, 227, 270, 272, 319, 338, 339, 340, 341, 342, 343, 354, 357, 359, 427, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 501, 503, 506, 507, 508, 511, 521, 529, 530, 536, 543], "b0": [74, 76, 104, 135], "b1": [74, 77, 104, 136, 137], "b2": [74, 78, 104, 137, 138], "b3": [74, 79, 104, 139], "b4": [74, 80, 104, 140], "b5": [74, 81, 104, 141], "b6": [74, 82, 104], "b7": [74, 83, 104], "b_": [11, 31], "b_1": [393, 395], "b_2": [393, 395], "b_i": [447, 448, 451], "b_k": 335, "b_v": 335, "back": [11, 16, 214, 298, 303, 335, 383, 384, 429, 445, 450, 498, 499, 500, 502, 515, 518, 522, 526], "backbon": [104, 139, 180, 181, 182, 213, 214, 215, 216, 217, 218, 219], "backbone_net": 215, "backbone_num_class": [214, 215], "backend": [114, 441, 459, 500], "background": [213, 217, 218], "backprop": 343, "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 104, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 270, 272, 298, 299, 303, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 344, 346, 347, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 399, 437, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 476, 480, 482, 497, 501, 502, 510, 513, 515, 517, 522, 524, 525, 532, 543], "backward": [16, 233, 235, 299, 344, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 441, 459, 460, 461, 502, 510, 517, 518, 523, 532], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 66, 75, 84, 85, 86, 87, 90, 100, 104, 117, 118, 124, 125, 127, 130, 133, 163, 164, 165, 166, 167, 168, 202, 205, 215, 363], "bar": 412, "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 69, 88, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 110, 111, 118, 124, 125, 127, 142, 149, 150, 162, 163, 164, 165, 166, 167, 168, 179, 186, 190, 196, 202, 206, 207, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 228, 229, 230, 231, 234, 236, 237, 238, 239, 252, 260, 270, 285, 286, 287, 312, 336, 344, 346, 354, 362, 363, 376, 377, 378, 379, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 416, 420, 421, 422, 424, 431, 432, 442, 443, 447, 448, 449, 451, 452, 465, 476, 477, 478, 479, 480, 482, 495, 511, 513, 519, 530, 535, 536, 537, 538, 539], "base_dtyp": 424, "base_lr": 403, "base_width": [142, 143, 144, 145, 146, 147, 148, 160, 161, 162, 179], "baselin": 104, "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 88, 109, 151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 207, 209, 213, 214, 215, 217, 218, 252, 253, 254, 255, 256, 257, 258, 262, 263, 285, 286, 287, 301, 305, 306, 307, 308, 309, 310, 311, 316, 317, 320, 321, 336, 341, 342, 343, 347, 376, 377, 378, 389, 461, 501, 533, 534, 535, 536, 537, 538, 539, 540], "basicblock": [151, 155, 158], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 96, 102, 103, 169, 175, 176, 177, 178, 183, 221, 252, 253, 254, 255, 256, 257, 258, 260, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 335, 336, 338, 339, 340, 344, 357, 359, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 419, 428, 446, 453, 491, 533, 534, 535, 536, 538, 540], "batch_idx": [220, 221], "batch_norm": [269, 281, 367, 368, 369], "batch_norm1": 240, "batch_norm2": 240, "batch_siz": [1, 2, 3, 207, 312], "batch_tensor": 491, "batchnorm": [88, 305, 306, 307], "batchnorm1d": [305, 356, 375], "batchnorm1dmodel": 367, "batchnorm2d": [88, 109, 240, 306, 356, 375], "batchnorm2dmodel": 368, "batchnorm3d": [307, 356, 375], "batchnorm3dmodel": 369, "bbox_delta": [214, 215], "bbox_reg_mean": 217, "bbox_reg_std": 217, "bbox_to_delta": [223, 226], "bceloss": [356, 366], "becaus": [2, 425, 428, 436], "becom": [24, 234, 413, 421], "been": [332, 510], "befor": [10, 15, 23, 31, 88, 169, 214, 235, 252, 336, 391, 393, 395, 402, 408, 412, 418, 434, 438, 513, 517, 534, 542], "begin": [1, 24, 223, 224, 242, 245, 246, 247, 263, 298, 322, 324, 325, 326, 327, 329, 348, 363, 364, 365, 382, 383, 384, 385, 386, 387, 419, 421, 427, 440, 447, 448, 450, 467, 472, 480, 482, 485, 498, 499, 510, 513, 523, 524, 525], "behav": [348, 363, 494], "behavior": [10, 16, 104, 237, 240, 252, 284, 336, 344, 405, 426, 440, 446, 457, 527, 542, 544], "being": [239, 304, 346, 349, 350, 351, 352, 419, 426, 441, 502, 503, 508, 529], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 93, 94, 95, 102, 103, 105, 106, 107, 108, 218, 446, 455, 458, 525], "benchmark": [5, 6, 7, 8, 16, 110, 111, 126], "benefici": 240, "benefit": [127, 242, 399, 418], "bernoulli": [346, 349, 350, 351, 352, 433], "best": [126, 288, 316, 317, 320, 321, 544], "beta": [280, 367, 368, 369, 370, 371, 372, 373, 374, 415, 416, 417, 418, 419], "beta1": [415, 416, 417, 418, 419], "beta2": [415, 416, 417, 418, 419], "beta_1": [415, 416, 417, 418, 419], "beta_2": [415, 416, 417, 418, 419], "beta_c": [280, 370], "better": [22, 57, 59, 61, 104, 125, 137, 138, 185, 193, 209, 243, 316, 317, 320, 321, 332, 347, 371, 372, 373, 399, 408, 409, 416, 418, 420, 534], "between": [44, 47, 51, 55, 63, 84, 85, 86, 87, 90, 100, 104, 109, 118, 124, 125, 127, 133, 163, 164, 165, 166, 167, 168, 202, 205, 225, 227, 234, 253, 254, 255, 256, 257, 258, 260, 270, 275, 305, 306, 307, 308, 309, 310, 312, 328, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 357, 361, 362, 363, 364, 365, 403, 408, 409, 412, 420, 421, 422, 440, 442, 443, 446, 449, 452, 454, 461, 496, 536, 537, 539, 540], "beyond": [10, 237, 408], "bia": [31, 55, 57, 59, 61, 88, 128, 129, 135, 136, 137, 139, 140, 141, 184, 185, 253, 254, 255, 256, 257, 258, 270, 272, 279, 282, 283, 305, 306, 307, 308, 309, 310, 335, 338, 339, 340, 341, 342, 343, 357, 359, 367, 368, 369, 371, 372, 373, 374, 391, 393, 395, 415, 416, 417, 418, 419], "bias": [65, 104, 338, 339, 340, 359, 374, 399], "bias1": 238, "bias2": 238, "big": [229, 308, 309, 310], "bij": 11, "bik": 11, "bilinear": [220, 221, 269, 271, 298, 299, 303, 356, 360, 397], "bilinearmodel": 357, "bin": [505, 506, 507], "binari": [248, 273, 330, 346, 349, 350, 351, 352, 361], "binary_cross_entropi": [269, 276], "bit": 424, "bjk": 11, "black": 16, "blend": 127, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 96, 101, 104, 109, 110, 111, 113, 116, 117, 118, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 234, 256, 260, 262, 263, 305, 306, 307, 312, 338, 339, 340, 341, 342, 343, 344, 347, 425, 428], "block1": 399, "block2": 399, "block_arg": [151, 169], "block_cfg": 75, "block_config": 69, "block_siz": [262, 347], "block_typ": 31, "blue": [536, 543], "bmatrix": [298, 450], "bn": [305, 306, 307], "bn_affin": [305, 306, 307], "bookkeep": 428, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 74, 88, 92, 93, 94, 128, 129, 135, 136, 137, 139, 140, 141, 142, 151, 184, 185, 213, 218, 234, 235, 252, 261, 263, 264, 265, 266, 267, 279, 282, 298, 299, 303, 305, 306, 307, 308, 309, 310, 335, 336, 338, 339, 340, 341, 342, 343, 348, 357, 359, 367, 368, 369, 371, 372, 373, 374, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 420, 424, 426, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 490, 496, 497, 498, 499, 500, 505, 506, 507, 518, 523, 527, 532, 543], "boolean": [510, 530], "boost": 123, "border": 299, "both": [31, 55, 57, 59, 61, 65, 88, 104, 109, 114, 118, 129, 130, 184, 186, 187, 188, 189, 213, 253, 256, 257, 272, 286, 291, 295, 305, 323, 332, 338, 339, 341, 342, 343, 344, 377, 382, 383, 385, 386, 395, 397, 424, 428, 444, 445, 446, 450, 453, 455, 511, 518, 519, 540], "bottleneck": [69, 104, 116, 117, 120, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 311], "bottleneck_cfg": 117, "bottom": 303, "bound": [212, 213, 216, 217, 218, 221, 223, 224, 225, 227, 228, 299, 317, 319, 321, 403, 421, 439, 441, 471, 472], "boundari": 225, "box": [4, 16, 212, 213, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228], "boxes_a": 227, "boxes_b": 227, "branch": [55, 92, 93, 94, 104, 312], "break": [10, 399], "breakdown": 213, "brief": 542, "bright": 542, "bring": [10, 354], "broadcast": [15, 16, 351, 352, 453, 481, 490, 496, 516, 528], "broadcast_to": 509, "bucket": 471, "budget": [51, 139], "buffer": [16, 412, 418, 420, 422], "build": [16, 41, 75, 103, 104, 117, 118, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 179, 180, 181, 182, 195, 216, 217, 230, 234, 237, 240, 399, 542], "built": [3, 16, 152, 156, 157, 240, 399, 424, 428, 459, 460, 544], "burg": 8, "c": [5, 6, 8, 11, 13, 31, 104, 151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 215, 218, 219, 220, 221, 260, 262, 265, 266, 267, 274, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 311, 344, 351, 352, 354, 362, 365, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 403, 427, 508, 529, 534], "c2": 219, "c3": 219, "c4": 219, "c5": 219, "c_": [11, 216, 338, 339, 340, 341, 342, 343], "c_in": [253, 254, 255, 256, 257, 258, 305, 306, 307], "c_out": [253, 254, 255, 256, 257, 258], "calcul": [0, 1, 17, 235, 397, 413, 414, 417, 418, 419, 428, 436], "calculu": [18, 25], "call": [1, 16, 221, 234, 257, 342, 401, 426, 428, 429, 434, 442, 443, 446, 447, 448, 449, 451, 452], "callabl": [1, 135, 136, 137, 139, 140, 141, 217, 222, 391, 393, 395, 400, 403, 406, 429, 441, 531], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 74, 104, 117, 123, 124, 126, 127, 151, 160, 161, 175, 176, 177, 178, 207, 208, 214, 215, 218, 227, 233, 235, 236, 237, 238, 239, 240, 245, 253, 254, 255, 263, 298, 299, 304, 312, 323, 326, 328, 333, 338, 339, 340, 341, 344, 371, 372, 373, 383, 384, 385, 386, 387, 389, 392, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 426, 427, 428, 435, 439, 440, 441, 446, 456, 457, 458, 459, 460, 462, 464, 465, 481, 484, 490, 491, 496, 498, 499, 501, 508, 511, 513, 515, 516, 518, 522, 528, 529, 531, 532, 535, 537, 538, 539, 542], "candid": [218, 222], "cannot": [19, 20, 22, 23, 26, 27, 28, 432, 502], "canocical_scal": 220, "canon": 220, "canonical_level": 220, "cap": [227, 328], "capabl": [10, 31, 53, 91, 104, 149, 150, 454, 455, 458, 462, 463, 464, 465], "capac": [42, 43, 44, 50, 54, 104, 109, 110, 111, 112, 114, 115, 123, 131, 136, 140, 141, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 183, 192, 203, 232], "captur": [16, 31, 55, 57, 59, 61, 65, 104, 109, 130, 131, 132, 179, 184, 186, 187, 188, 189, 190, 191, 194, 229, 260, 338, 339, 340, 357], "cardin": [104, 142, 143, 144, 145, 146, 147, 148, 149, 150, 162, 163, 164, 165, 166, 167, 168, 179], "care": 55, "carefulli": [401, 425], "cartesian": 511, "case": [3, 24, 105, 117, 119, 242, 245, 246, 247, 256, 257, 263, 322, 324, 325, 326, 327, 329, 348, 363, 364, 365, 382, 383, 384, 385, 386, 387, 399, 407, 414, 419, 421, 427, 447, 448, 453, 467, 472, 480, 482, 485, 498, 499, 500, 510, 513, 523, 524, 525, 542], "cast": 459, "categor": [301, 389], "categori": [7, 110, 111, 152, 153, 154, 155, 156, 157, 158, 159, 213, 214, 217, 218, 389, 424], "caus": [3, 25, 401, 412, 420, 422], "causal": [252, 336], "cautiou": [0, 10], "cbr": 88, "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 109, 216, 220, 223, 229, 242, 243, 245, 247, 248, 252, 253, 254, 255, 256, 257, 258, 270, 272, 280, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 301, 303, 311, 320, 321, 323, 324, 325, 330, 332, 336, 344, 346, 357, 359, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 389, 402, 403, 404, 406, 407, 409, 413, 414, 415, 416, 417, 418, 419, 421, 444, 445, 446, 449, 451, 453, 484], "ceil": 466, "center": [224, 298, 299, 304, 333, 420, 533, 542], "centercrop": [541, 542], "certain": [19, 243, 252, 270, 332, 336, 357, 395, 408, 415, 416, 426, 480, 482], "cfg": [118, 121, 122], "chain": [16, 22, 23, 240, 531, 542], "challeng": [7, 104, 130], "cham": 104, "chanc": [536, 537, 539], "chang": [10, 223, 275, 298, 299, 363, 407, 421, 425, 427, 429, 441, 514, 516, 528, 536, 542], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 74, 88, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 173, 175, 176, 177, 178, 183, 184, 185, 196, 207, 213, 215, 217, 218, 219, 253, 254, 255, 256, 257, 258, 260, 265, 266, 267, 279, 280, 282, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 338, 339, 340, 341, 342, 343, 351, 352, 367, 368, 369, 370, 371, 372, 373, 376, 382, 383, 384, 385, 386, 387, 534, 536, 540], "character": [160, 161], "check": [16, 426, 441, 533, 535], "checkpoint": 411, "chen": [55, 104], "choic": [125, 127, 511], "choleski": 21, "chollet": 104, "choos": [104, 500, 530], "chosen": [346, 347, 401, 530], "christian": 104, "christoph": 8, "chu": 104, "chun": 104, "chunk": 509, "cifar": [5, 6, 215], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 212, 214, 215, 219, 220, 221, 222, 231, 232, 249, 263, 274, 278, 399, 411, 428, 429, 434, 542], "classic": [108, 218], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "classifi": [29, 88, 92, 93, 94, 105, 106, 107, 108, 109, 151, 162, 179, 196, 207, 209, 212, 213, 214, 215, 216, 217, 218], "clean": 428, "cleaner": [1, 446], "cleanli": 109, "cleanup": 425, "clear": [235, 456, 457, 461], "clf_in_featur": 105, "clf_layer": 105, "clip": [223, 225, 304, 324, 328, 421, 466], "clip_box": 226, "clockwis": 304, "close": [22, 25, 329, 361, 420], "closer": 322, "closur": [400, 411], "cloth": 7, "cls_logit": [214, 215], "cnn": [31, 57, 59, 61, 104, 214, 215, 222], "co": [104, 402, 466, 486], "coars": 104, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 104, "coatnet_1": 104, "coatnet_2": 104, "coatnet_3": 104, "coatnet_4": 104, "coatnet_5": 104, "coatnet_6": 104, "coatnet_7": 104, "code": [10, 16, 23, 236, 238, 240, 425, 426, 428, 440, 543], "coeffici": [27, 74, 303, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "col": 260, "collaps": 10, "collate_fn": 1, "collect": [4, 17, 212, 236, 237, 239, 240, 411], "color": [218, 222, 536, 542, 543], "colorjitt": 542, "column": [19, 20, 22, 26, 27, 28, 260, 344, 458, 508, 511], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 88, 95, 101, 102, 104, 109, 127, 131, 183, 212, 216, 237, 240, 242, 243, 305, 306, 307, 311, 312, 323, 344, 347, 354, 362, 399, 418, 419, 481, 490, 496, 503, 542, 544], "combined_dataset": [0, 1], "common": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 260, 304, 411, 424, 542], "commonli": [115, 116, 117, 119, 120, 121, 122, 125, 127, 224, 243, 248, 249, 250, 253, 255, 256, 257, 258, 263, 270, 277, 279, 282, 299, 301, 304, 311, 320, 321, 324, 325, 328, 331, 336, 340, 341, 342, 361, 364, 365, 382, 383, 384, 385, 386, 387, 389, 391, 427, 462, 520, 532, 533, 534, 535, 537, 538, 539, 542], "compact": [45, 46, 48, 53, 100, 112, 125, 135, 136], "compar": [31, 44, 45, 68, 104, 112, 129, 137, 160, 161, 209, 214, 440, 521], "compat": [4, 10, 11, 16, 17, 179, 354, 358, 374, 399, 427, 430, 440, 461, 501, 532, 542], "competit": [46, 52, 53, 88], "complet": [230, 391, 392, 394], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 88, 103, 110, 111, 126, 129, 130, 131, 132, 133, 137, 138, 139, 151, 154, 157, 158, 171, 173, 191, 214, 232, 233, 235, 236, 237, 240, 246, 252, 304, 314, 318, 319, 320, 321, 327, 336, 385, 387, 399, 406, 411, 415, 416, 417, 418, 419, 421, 424, 432, 434, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 472, 497, 500, 510, 532, 542], "complex64": 424, "compon": [25, 88, 92, 93, 94, 95, 101, 102, 103, 112, 113, 213, 218, 222, 230, 234, 237, 411, 441, 542], "compos": [5, 6, 7, 8, 109, 207, 338, 339, 340, 382, 383, 384, 385, 386, 387, 399, 530, 542], "compound": 75, "comprehens": [3, 62], "compris": [160, 161], "compromis": [124, 127], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 88, 90, 97, 100, 104, 109, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 138, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 183, 184, 203, 204, 213, 216, 217, 223, 224, 227, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 260, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 299, 303, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 342, 344, 346, 347, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 400, 402, 403, 404, 405, 406, 407, 409, 411, 412, 420, 425, 426, 427, 428, 431, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 511, 513, 515, 522, 532, 542, 543, 544], "computation": [3, 13, 25, 152, 324, 325, 354], "compute_grad": 502, "compute_loss": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "concat": 335, "concaten": [0, 253, 254, 255, 335, 453, 508, 509, 521, 529], "concept": [25, 104, 116, 212, 453, 544], "concis": [10, 11, 13, 15], "concurr": 425, "cond": 530, "condit": [18, 19, 22, 530], "confer": [104, 216], "confid": [213, 228], "config": 196, "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 217, 218, 232, 239, 305, 306, 307, 336, 424], "confirm": 16, "conform": 430, "conjunct": [260, 365], "connect": [29, 40, 69, 70, 71, 72, 73, 74, 75, 88, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 196, 207, 209, 213, 217, 218, 219, 222, 256, 272, 311, 312, 338, 339, 340, 341, 342, 343, 359, 393, 395], "consecut": 196, "consid": [3, 22, 25, 69, 123, 124, 125, 127, 214, 240, 316, 317, 320, 321, 344, 399, 421, 424, 426, 456, 457, 524, 525, 542], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 106, 107, 108, 151, 218, 233, 285, 286, 287, 312, 335, 376, 377, 378, 391, 393, 395, 438, 440, 513, 533, 540, 542], "consistent_tensor": 440, "constant": [273, 274, 279, 280, 282, 283, 284, 315, 329, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 391, 393, 395, 409, 413, 414, 415, 416, 417, 418, 419, 420, 459, 460, 500, 510, 513], "constant_pad": 513, "constrain": [46, 48, 51, 125, 225], "constraint": [1, 13, 31, 115, 117, 124, 138, 312, 354], "construct": [16, 70, 71, 72, 73, 91, 96, 110, 111, 112, 127, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 180, 181, 182, 197, 198, 199, 200, 214, 215, 219, 230, 237, 399, 455, 515, 522, 524, 525], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 70, 71, 72, 73, 84, 85, 86, 87, 110, 111, 112, 113, 114, 119, 120, 121, 122, 143, 144, 145, 146, 147, 148, 149, 150, 160, 161, 175, 176, 177, 178, 183, 197, 198, 199, 200], "consumpt": 127, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 101, 105, 151, 162, 163, 164, 165, 166, 167, 168, 169, 179, 196, 213, 220, 221, 224, 227, 228, 234, 236, 237, 238, 239, 240, 249, 252, 260, 270, 272, 273, 274, 278, 299, 301, 303, 361, 362, 365, 400, 430, 434, 442, 443, 444, 445, 447, 448, 449, 450, 452, 454, 457, 461, 467, 468, 469, 470, 473, 474, 475, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 502, 504, 507, 511, 519, 523, 543], "content": [212, 304], "context": [104, 109, 190, 192, 193, 298, 425, 426, 428, 441, 544], "contextmanag": 425, "contextu": [66, 67, 68, 130, 186, 187, 188, 189], "contigu": [262, 347, 514], "continu": [326, 404, 409, 437, 477], "contract": [11, 13], "contrast": [230, 371, 372, 373, 542], "contribut": [262, 303, 346, 349, 350, 351, 352, 382, 385, 386, 387, 412, 418, 494], "control": [10, 15, 31, 40, 129, 130, 162, 222, 312, 322, 363, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 440, 441, 459, 532, 542], "conv": [101, 104, 169, 213, 217, 218, 219, 305, 306, 307, 368, 369], "conv1": [106, 107, 108, 240, 338, 339, 340, 382, 383, 384, 385, 386, 387], "conv1d": [259, 269, 305, 308, 341, 345, 356, 382, 385], "conv1dmodel": 338, "conv2": [106, 107, 108, 240, 338, 339, 340], "conv2d": [213, 217, 218, 237, 240, 259, 269, 306, 309, 342, 345, 354, 356, 368, 383, 386, 399, 543], "conv2dmodel": 339, "conv3d": [259, 269, 307, 310, 345, 356, 369, 384, 387], "conv3dmodel": 340, "conv_bia": [305, 306, 307], "conv_config": 196, "conv_lay": [105, 237], "conv_transpose1d": [259, 269], "conv_transpose2d": [259, 269], "conv_transpose3d": [259, 269], "convblock": 399, "convbnrelu1d": 313, "convbnrelu2d": 313, "convbnrelu3d": 313, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 210, 500], "convent": [11, 446], "converg": [25, 333, 401, 402, 403, 405, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 534], "convers": [362, 365, 536, 542], "convert": [5, 6, 7, 8, 55, 196, 233, 235, 249, 301, 331, 431, 511, 531, 532, 536, 542], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "convnetwork": 237, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 104, "convnext_larg": 104, "convnext_smal": 104, "convnext_tini": 104, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 104, "convnext_v2_bas": 104, "convnext_v2_femto": 104, "convnext_v2_hug": 104, "convnext_v2_larg": 104, "convnext_v2_nano": 104, "convnext_v2_pico": 104, "convnext_v2_tini": 104, "convnext_xlarg": 104, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 93, 94, 96, 101, 105, 106, 107, 108, 109, 115, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 183, 196, 207, 209, 210, 213, 216, 217, 218, 237, 253, 254, 255, 256, 257, 258, 260, 305, 306, 307, 308, 309, 310, 311, 312, 338, 339, 340, 341, 342, 343, 344, 383, 384, 386, 387, 491, 513], "convolv": [253, 254, 255, 256, 257, 338, 339, 340, 341, 342, 343], "convtranspose1d": [345, 356], "convtranspose2d": [343, 345, 356], "convtranspose3d": [345, 356], "cooldown": 408, "coordin": [221, 223, 224, 225, 227, 298, 299, 506, 511, 512], "copi": [10, 501, 526], "core": [0, 1, 2, 3, 55, 88, 234, 399, 400, 424, 441, 542], "corinna": 8, "corner": [298, 299, 303, 397, 533, 535], "correct": [236, 362, 365, 415, 416, 417, 418, 419, 510, 518, 524, 525, 532], "correctli": [25, 234, 236, 237, 238, 239, 240, 362, 365, 440, 501, 502], "correl": [341, 342], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 118, 119, 121, 122, 160, 161, 180, 181, 182, 186, 187, 188, 189, 195, 220, 228, 236, 238, 240, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 260, 270, 272, 301, 303, 324, 327, 331, 357, 359, 367, 368, 369, 371, 372, 373, 383, 384, 389, 412, 420, 422, 424, 432, 444, 445, 447, 448, 451, 471, 476, 477, 478, 479, 486, 488, 500, 501, 502, 508, 512, 513, 515, 517, 522, 526, 529], "cort": 8, "cosh": [466, 487, 493], "cosin": [402, 468, 473, 474, 486], "cosineannealinglr": 410, "cost": [65, 104, 115, 117, 118, 124, 125, 127, 138, 162, 308, 309, 310, 425], "could": 234, "count": [104, 118, 135, 136, 137, 139, 140, 141, 216, 229, 402, 407, 425, 500, 503, 505, 506], "counterclockwis": [304, 538], "cover": [17, 253, 254, 255, 434], "coverag": [109, 285, 286, 287], "cpu": [11, 16, 233, 235, 424, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 500, 512], "craft": 16, "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 102, 103, 106, 107, 108, 117, 119, 120, 121, 122, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 196, 197, 198, 199, 200, 208, 209, 210, 212, 215, 231, 232, 233, 234, 237, 240, 298, 312, 328, 335, 391, 392, 393, 394, 395, 399, 427, 428, 429, 430, 440, 454, 458, 459, 460, 461, 462, 463, 464, 465, 501, 511, 521, 531, 542], "creation": [84, 85, 86, 87, 237, 240, 425, 542], "criterion": [361, 362, 363, 364, 365], "critic": [25, 125, 140, 411, 440], "crop": [217, 218, 220, 221, 533, 535, 542], "cross": [55, 104, 184, 273, 274, 341, 342, 361, 362, 391, 392, 393], "cross_entropi": [269, 276], "crossattent": 55, "crossentropyloss": [215, 356, 366], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 104, "crossvit_15_dagg": 104, "crossvit_18": 104, "crossvit_18_dagg": 104, "crossvit_9": 104, "crossvit_9_dagg": 104, "crossvit_bas": 104, "crossvit_smal": 104, "crossvit_tini": 104, "crucial": [10, 401], "cube": 466, "cumul": [243, 323], "cup": 227, "current": [234, 402, 403, 404, 405, 406, 407, 408, 409, 412, 415, 421, 426, 500], "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 97, 98, 99, 100, 102, 103, 105, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 208, 209, 210, 213, 215, 217, 218, 233, 236, 237, 238, 239, 240, 304, 305, 306, 307, 322, 326, 344, 391, 399, 403, 406, 425, 440, 458, 461, 519], "custom_config": 196, "custom_decod": 391, "custom_encod": 391, "custom_lenet": 105, "customiz": [135, 542], "custommodul": 233, "customnetwork": 236, "customparametermodel": [238, 239], "cut": 126, "cv": 212, "cvf": 104, "cvpr": 104, "cvt": [66, 67, 68], "cvt_13": 104, "cvt_21": 104, "cvt_w24": 104, "cvtspec": 65, "cycl": 403, "cycle_momentum": 403, "cyclic": [402, 403, 517], "cycliclr": 410, "d": [31, 104, 252, 255, 258, 267, 287, 290, 293, 297, 307, 336, 343, 344, 369, 373, 374, 378, 381, 384, 387, 427, 455, 484, 507, 512, 538], "d_": [229, 255, 258, 287, 290, 293, 297, 335, 340, 343, 378, 381, 384, 387, 391, 392, 393, 394, 395], "d_1": [13, 14, 15, 354, 374], "d_2": [13, 14, 15, 354, 374], "d_h": [335, 344, 393, 395], "d_k": [31, 55, 109], "d_model": [201, 230, 231, 232, 391, 392, 393, 394, 395], "d_n": [13, 14, 15, 354, 374], "d_out": [255, 258, 293, 297], "d_w": 344, "dag": 16, "dai": 104, "dampen": [412, 420, 422], "data": [4, 5, 6, 7, 8, 10, 16, 23, 104, 191, 212, 229, 233, 235, 239, 250, 253, 255, 258, 260, 266, 267, 272, 301, 304, 305, 306, 307, 312, 327, 333, 338, 339, 340, 359, 373, 382, 384, 387, 394, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 431, 434, 440, 441, 442, 443, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 484, 491, 497, 500, 501, 505, 513, 514, 515, 516, 518, 519, 520, 522, 531, 532, 535, 536, 537, 538, 539, 542, 544], "data_dtyp": 424, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 84, 85, 86, 87, 106, 107, 108, 109, 110, 111, 114, 115, 118, 123, 130, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 212, 214, 215, 304, 414, 531, 533, 542], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 450, "debug": [16, 240, 426, 438, 542, 544], "decai": [347, 401, 402, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "decim": 484, "declar": [13, 14, 15, 354], "decod": [230, 256, 257, 258, 341, 342, 343, 391, 392, 393], "decoder3d": 343, "decoder_lay": [392, 393], "decoderlay": 392, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "deconv": 343, "deconv1": [341, 342], "deconv1d": 341, "deconv2d": 342, "deconv3d": 343, "deconvolut": [256, 257, 258, 341, 342], "decor": [163, 164, 165, 166, 167, 168, 428, 429], "decoupl": [104, 413, 414, 416, 417, 418, 419], "decreas": [219, 403, 408, 415, 416, 421], "deep": [1, 3, 4, 10, 14, 16, 88, 98, 99, 101, 104, 130, 151, 152, 153, 154, 156, 157, 163, 164, 165, 166, 167, 168, 170, 171, 174, 212, 229, 279, 323, 329, 354, 399, 401, 440, 461, 519, 524, 525, 531, 532, 542], "deepen": 139, "deeper": [67, 93, 95, 103, 104, 110, 111, 129, 132, 137, 140, 151, 158, 191, 192, 214, 329], "def": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 543], "default": [1, 5, 6, 7, 8, 14, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 245, 249, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 326, 331, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 418, 426, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 472, 480, 481, 482, 484, 490, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 508, 511, 513, 515, 517, 518, 519, 521, 523, 524, 525, 526, 527, 529, 532, 536, 537, 539, 543], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 75, 92, 93, 94, 95, 101, 102, 103, 105, 117, 127, 142, 151, 169, 180, 181, 182, 196, 217, 218, 236, 237, 238, 239, 240, 263, 323, 325, 328, 332, 361, 362, 363, 364, 365, 382, 397, 399, 401, 403, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 436, 437, 451, 457, 472, 495, 531, 542], "definit": [16, 18, 305, 306, 307, 542], "degre": [304, 538, 542], "delai": 412, "deliv": [16, 125, 126, 141], "delta": [13, 223, 224, 249, 275, 331, 354, 363, 413], "delta_": [13, 249, 331, 354], "demand": [114, 126, 139, 140], "demonstr": [17, 175, 176, 177, 178, 183, 212, 399], "demystifi": 16, "denomin": [279, 280, 282, 283, 305, 306, 307, 367, 368, 369, 370, 371, 372, 373, 374, 391, 393, 395, 413, 414, 415, 416, 417, 418, 419, 420, 443], "denot": [23, 149, 150, 330, 335, 338, 339, 340, 346, 349, 350, 351, 352, 495], "dens": [69, 70, 71, 72, 73, 104, 184, 186, 187, 188, 189, 213, 217, 263, 301, 389, 414], "densenet": [70, 71, 72, 73, 311], "densenet_121": 104, "densenet_169": 104, "densenet_201": 104, "densenet_264": 104, "densiti": [243, 323, 505, 506, 507], "depend": [11, 16, 23, 24, 31, 104, 109, 117, 130, 131, 184, 186, 187, 188, 189, 190, 191, 229, 239, 273, 274, 275, 277, 278, 303, 338, 444, 453, 455, 480, 482, 515, 522, 523, 535, 536, 540, 543], "deploy": [91, 127, 135, 138], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 88, 89, 90, 91, 96, 104, 109, 110, 111, 112, 113, 114, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 237, 255, 258, 263, 267, 287, 290, 293, 297, 340, 348, 369, 373, 378, 384, 387], "depth_coef": 74, "depthseparableconv1d": 313, "depthseparableconv2d": 313, "depthseparableconv3d": 313, "depthwis": [31, 40, 65, 66, 67, 68, 88, 96, 104, 115, 207, 253, 254, 255, 256, 257, 308, 309, 310], "depthwise_separ": [308, 309, 310], "der": 104, "deriv": [16, 25, 26, 88, 249, 285, 286, 287, 323, 331, 333, 338, 339, 340, 357, 359, 429], "descend": [28, 518, 523], "descent": [412, 422], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "descript": [212, 542], "deseri": [233, 430], "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 68, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 97, 100, 104, 106, 107, 108, 109, 110, 111, 117, 118, 123, 124, 125, 126, 127, 128, 130, 133, 140, 152, 153, 154, 155, 156, 157, 158, 159, 170, 173, 184, 191, 192, 203, 207, 210, 212, 229, 235, 237, 238, 239, 240, 242, 247, 329, 346, 399, 542, 544], "desir": [10, 15, 208, 220, 233, 285, 286, 287, 288, 289, 290, 347, 376, 377, 378, 379, 397, 401, 459, 460, 495, 497], "despit": 284, "destin": 234, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 65, 130, 191, 213, 411, 440, 446], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "detector": [214, 215], "determin": [0, 17, 18, 19, 55, 105, 109, 160, 161, 285, 286, 287, 288, 316, 317, 320, 321, 338, 339, 340, 376, 377, 378, 383, 384, 386, 387, 403, 420, 426, 432, 435, 436, 437, 439, 453, 456, 457, 519, 527, 533, 535], "determinist": 304, "develop": [10, 16, 118, 399, 440, 542], "deviat": [316, 318, 320, 531, 534, 542], "devic": [11, 88, 89, 90, 91, 104, 116, 117, 123, 124, 233, 235, 424, 432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 471, 477, 484, 497, 512], "diag": [25, 466], "diagon": [25, 26, 28, 455, 458, 494, 524, 525], "diagonaliz": 20, "diagram": 544, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 208, 210, 214, 215, 234, 236, 238, 354, 358, 400, 405], "dict_kei": 430, "dictionari": [105, 118, 125, 234, 235, 236, 238, 240, 400, 405], "differ": [0, 10, 14, 23, 55, 66, 67, 68, 88, 92, 96, 104, 105, 117, 118, 124, 125, 128, 130, 131, 132, 133, 134, 175, 176, 177, 178, 183, 185, 194, 220, 237, 240, 249, 270, 303, 312, 331, 357, 364, 401, 408, 411, 424, 427, 438, 440, 452, 465, 496, 520, 542], "differenti": [18, 27, 227, 228, 298, 299, 301, 323, 399, 432, 434, 435, 436, 437, 439, 441, 454, 456, 457, 462, 464, 471, 477, 484, 512, 527, 530], "difficult": 132, "diffus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "digit": [7, 8, 104, 108], "dilat": [253, 254, 255, 256, 257, 258, 305, 306, 307, 308, 309, 310, 338, 339, 340, 341, 342, 343, 344], "dilation_height": 260, "dilation_width": 260, "dim": [40, 41, 55, 96, 252, 284, 336, 362, 365, 517], "dim_feedforward": [230, 391, 393, 395], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 66, 67, 68, 88, 104, 109, 113, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 151, 162, 179, 184, 185, 186, 187, 196, 201, 209, 215, 218, 219, 228, 230, 235, 249, 252, 257, 258, 270, 272, 279, 280, 282, 283, 284, 286, 287, 289, 290, 303, 311, 312, 331, 335, 336, 338, 339, 340, 341, 344, 347, 354, 367, 368, 369, 371, 372, 373, 374, 377, 378, 380, 381, 383, 384, 385, 386, 387, 391, 393, 394, 395, 397, 427, 435, 439, 441, 445, 453, 456, 480, 481, 482, 490, 491, 494, 495, 496, 498, 499, 501, 502, 503, 507, 508, 512, 513, 515, 517, 520, 521, 522, 526, 528, 529, 533, 535, 540], "dimension": [10, 11, 23, 25, 26, 28, 96, 218, 253, 254, 255, 256, 257, 258, 291, 292, 293, 295, 296, 297, 312, 335, 338, 339, 340, 341, 344, 350, 351, 352, 367, 368, 369, 371, 372, 373, 382, 383, 384, 385, 386, 387, 391, 393, 395, 427, 434, 445, 446, 450, 453, 455, 476, 481, 490, 491, 494, 496, 504, 507, 514, 515, 520, 522, 524, 525], "diminish": [401, 414], "direct": [16, 20, 361, 362, 363, 364, 365, 412, 420, 421, 422, 517], "directli": [84, 85, 86, 87, 104, 217, 236, 237, 238, 239, 303, 354, 397, 413, 414, 416, 417, 418, 419, 438, 440, 497, 526, 542], "directori": [3, 4, 5, 6, 7, 8], "disabl": [263, 347, 348, 426, 428], "discard": [215, 218, 431], "discontinu": 485, "discrep": [361, 362, 365], "discret": [432, 436, 440, 477], "disk": [3, 430, 431], "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 90, 91, 210], "disrupt": 471, "distinct": [109, 118, 230], "distribut": [191, 243, 249, 262, 303, 316, 317, 318, 319, 320, 321, 323, 331, 338, 339, 340, 346, 347, 349, 350, 351, 352, 357, 359, 362, 365, 382, 383, 384, 432, 435, 436, 437, 439, 440, 481, 490, 494, 496, 518, 521, 534, 536, 537, 538, 539, 544], "div": 466, "divers": [47, 104, 109, 304, 537, 539, 542], "diversifi": 542, "divid": [1, 25, 104, 109, 184, 185, 201, 202, 203, 204, 205, 206, 237, 240, 249, 253, 254, 255, 257, 331, 361, 362, 363, 364, 365, 443, 502, 519, 534], "divis": [25, 253, 254, 255, 258, 284, 335, 346, 349, 350, 351, 352, 391, 393, 395, 413, 414, 415, 416, 417, 418, 419, 420, 443, 519], "dl": 16, "do": [25, 27, 233, 236, 237, 238, 239, 261, 264, 265, 266, 399, 401, 419, 426, 428, 465, 494, 513], "doc": 212, "document": [4, 104, 411, 440], "doe": [23, 24, 25, 26, 28, 214, 215, 230, 233, 236, 237, 238, 239, 240, 284, 321, 408, 415, 416, 421, 425, 426, 428, 432, 435, 436, 437, 438, 439, 454, 455, 456, 457, 458, 462, 463, 464, 465, 500, 501, 510, 512, 516, 517, 527], "doi": 104, "domain": [4, 138], "domin": 88, "dosovitskii": 104, "dot": [11, 13, 14, 15, 20, 23, 128, 129, 236, 237, 238, 239, 240, 252, 335, 336, 354, 374, 385, 386, 387, 445, 450, 453, 466, 503, 508, 521, 529], "down": [3, 219, 399, 477, 540, 543], "download": [4, 5, 6, 7, 8], "downsampl": [88, 142], "draw": 212, "draw_tensor_graph": 544, "drawback": 242, "drawn": [435, 436, 437, 439, 440, 538, 543], "drop": [40, 41, 88, 96, 109, 262, 263, 346, 347, 348, 349, 350, 351, 352], "drop_block": [268, 269], "drop_path": [40, 41, 109, 268, 269, 348], "drop_path_r": [55, 75, 88, 96, 128, 129, 184, 185], "drop_prob": 348, "drop_rat": [55, 88, 96, 128, 129, 184, 185], "dropblock": [262, 353, 356], "dropout": [29, 55, 74, 75, 84, 85, 86, 87, 88, 94, 96, 104, 109, 112, 113, 128, 129, 184, 185, 196, 201, 209, 213, 217, 230, 243, 252, 261, 265, 266, 267, 335, 336, 346, 347, 350, 351, 352, 391, 393, 395], "dropout1d": [268, 269, 353, 356], "dropout1dmodel": 350, "dropout2d": [268, 269, 353, 356], "dropout3d": [268, 269, 353, 356], "dropout_p": [252, 336], "dropout_prob": 94, "dropout_r": 201, "dropoutmodel": 349, "droppath": [353, 356], "dtype": [228, 233, 235, 301, 389, 424, 434, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 512, 527, 532], "due": [23, 25, 69, 114, 126, 253, 254, 256, 257, 327, 477, 538], "dummi": [214, 217, 218], "duplic": [10, 15, 228, 236, 238], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 75, 92, 93, 94, 104, 129, 151, 214, 215, 218, 222, 223, 233, 234, 235, 236, 237, 238, 239, 240, 249, 261, 262, 263, 264, 265, 266, 267, 279, 282, 304, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 397, 399, 401, 405, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 428, 434, 441, 442, 471, 477, 480, 481, 482, 490, 496, 510, 517, 532, 535, 538, 542, 543], "dy": [245, 326], "dynam": [0, 2, 3, 16, 31, 104, 179, 183, 220, 234, 237, 238, 239, 240, 285, 286, 287, 288, 312, 347, 374, 376, 377, 378, 379, 381, 401, 405, 406, 408, 414, 419, 424, 426], "dynamicnetwork": 237, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 102, 103, 105, 106, 107, 108, 114, 142, 184, 185, 196, 214, 215, 218, 219, 222, 233, 249, 312, 330, 331, 332, 335, 342, 346, 362, 400, 413, 420, 421, 424, 441, 458, 459, 474, 476, 478, 487, 493, 494, 503, 536], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 69, 75, 88, 96, 104, 105, 109, 115, 117, 118, 119, 121, 122, 128, 129, 130, 131, 132, 133, 134, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 209, 212, 213, 216, 217, 218, 219, 220, 221, 225, 227, 228, 230, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 260, 270, 272, 279, 282, 285, 286, 287, 288, 289, 290, 298, 299, 301, 311, 312, 324, 327, 331, 335, 338, 339, 340, 344, 346, 349, 350, 351, 352, 357, 359, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 399, 401, 402, 403, 404, 405, 406, 407, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 432, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 500, 502, 503, 507, 508, 511, 512, 513, 515, 517, 518, 519, 521, 522, 526, 529, 531, 532, 533, 534, 535, 536, 538, 540, 542], "earli": [31, 88, 104, 419], "earlier": 118, "eas": 4, "easi": [2, 3, 4, 10, 163, 164, 165, 166, 167, 168, 235, 236, 238], "easier": [3, 236, 237, 240], "easili": [4, 118, 235, 239, 542], "eccv": 104, "economi": 28, "edg": [16, 88, 89, 91, 104, 117, 126, 135, 505, 506, 507, 513], "edu": [5, 6], "educ": [212, 544], "effect": [14, 55, 57, 59, 61, 65, 104, 113, 190, 194, 229, 236, 237, 238, 239, 240, 249, 253, 254, 255, 260, 322, 323, 327, 330, 331, 333, 367, 368, 369, 371, 372, 373, 374, 397, 401, 402, 403, 408, 426, 427, 508, 529], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 66, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 99, 100, 102, 103, 104, 109, 112, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 183, 184, 186, 187, 188, 189, 191, 202, 205, 207, 217, 260, 308, 309, 310, 324, 325, 328, 354, 362, 399, 401, 402], "efficientform": [89, 90, 91], "efficientformer_l1": 104, "efficientformer_l3": 104, "efficientformer_l7": 104, "efficientnet": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "efficientnet_b0": 104, "efficientnet_b1": 104, "efficientnet_b2": 104, "efficientnet_b3": 104, "efficientnet_b4": 104, "efficientnet_b5": 104, "efficientnet_b6": 104, "efficientnet_b7": 104, "efficientnet_v2": [84, 85, 86, 87], "efficientnet_v2_": 104, "efficientnet_v2_l": 104, "efficientnet_v2_m": 104, "efficientnet_v2_xl": 104, "efficientnetv2": 104, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 354, "einstein": [10, 11, 13, 14, 15, 354], "einsum": 12, "either": [16, 272, 397, 428, 432, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 497, 511, 530], "element": [0, 10, 13, 15, 25, 26, 94, 104, 227, 235, 239, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 301, 305, 306, 307, 308, 309, 310, 311, 324, 325, 327, 331, 332, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 354, 361, 362, 363, 364, 365, 374, 381, 382, 383, 384, 385, 386, 387, 427, 432, 434, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 458, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 500, 504, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 530], "elementwise_affin": 374, "elimin": [13, 15, 213], "elsewher": [385, 386, 387, 458], "elu": [244, 269, 334, 356], "elumodel": 322, "embed": [55, 57, 59, 61, 66, 67, 68, 88, 109, 113, 115, 116, 117, 118, 120, 121, 122, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 184, 185, 186, 187, 201, 252, 269, 302, 335, 336, 356, 390, 391, 393, 394, 395, 526], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 88, 89, 90, 91, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 184, 185, 186, 187, 335, 391, 392, 393, 394, 395], "embedding_dim": [201, 301, 389], "embedding_lay": 389, "embedding_matrix": 301, "emphas": [118, 125], "emploi": [31, 55, 57, 59, 61, 75, 88, 126], "empti": [234, 240, 466, 502], "empty_lik": 466, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 66, 67, 68, 74, 88, 102, 104, 109, 112, 128, 129, 134, 138, 142, 179, 180, 181, 182, 184, 186, 187, 195, 212, 216, 229, 234, 235, 236, 237, 238, 239, 252, 263, 327, 335, 336, 338, 339, 340, 342, 343, 357, 359, 391, 393, 395, 399, 411, 424, 425, 426, 432, 435, 436, 437, 439, 441, 459, 531], "encapsul": [16, 336, 381, 399, 424, 441], "enclos": [425, 428], "encod": [31, 55, 104, 201, 230, 362, 365, 391, 392, 393, 394, 395, 424], "encoder_lay": [394, 395], "encoderlay": 394, "encompass": 74, "encourag": [262, 347, 349, 350, 351, 352, 361, 362, 365, 415], "end": [24, 91, 141, 216, 223, 224, 242, 245, 246, 247, 263, 298, 322, 324, 325, 326, 327, 329, 348, 363, 364, 365, 382, 383, 384, 385, 386, 387, 419, 421, 447, 448, 450, 454, 461, 467, 472, 480, 482, 485, 498, 499, 500, 503, 510, 513, 523, 524, 525, 542], "enforc": [13, 234, 236, 238, 354, 392, 393, 394, 395], "engin": [16, 25, 441], "enhanc": [31, 41, 42, 57, 59, 61, 65, 66, 67, 68, 88, 94, 95, 96, 102, 103, 104, 107, 110, 111, 116, 126, 127, 133, 136, 149, 150, 160, 161, 175, 176, 177, 178, 183, 185, 194, 209, 210, 213, 219, 236, 238, 312, 328, 405, 542], "enough": [16, 91], "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 75, 84, 85, 86, 87, 109, 131, 193, 215, 217, 223, 233, 234, 235, 236, 237, 238, 239, 240, 249, 252, 258, 284, 285, 286, 287, 301, 305, 306, 307, 326, 331, 336, 346, 347, 348, 349, 350, 351, 352, 354, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 383, 384, 385, 386, 387, 389, 399, 400, 401, 412, 413, 415, 416, 418, 419, 420, 421, 422, 426, 427, 430, 432, 435, 436, 437, 438, 439, 440, 451, 461, 471, 481, 490, 496, 500, 501, 502, 510, 513, 517, 518, 523, 524, 525, 532, 533, 534, 535, 536, 540, 542], "entir": [3, 16, 214, 216, 217, 263, 265, 266, 267, 348, 351, 352, 440], "entri": [75, 105, 121, 122, 510, 517, 520], "entropi": [273, 274, 361, 362], "environ": [16, 46, 48, 121, 122, 125, 430, 431, 441, 544], "ep": [20, 135, 136, 137, 139, 140, 141, 262, 273, 274, 279, 280, 282, 283, 284, 305, 306, 307, 347, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 408, 413, 414, 415, 416, 417, 418, 419, 420], "epoch": [1, 3, 16, 401, 402, 403, 404, 405, 406, 407, 408, 409], "epsilon": [31, 220, 224, 280, 284, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 413, 414, 415, 416, 417, 418, 419, 420], "equal": [23, 303, 382, 383, 384, 461, 471, 477, 500, 502, 519, 533, 535], "equat": [20, 25, 27], "equival": [11, 446, 494, 514, 526], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 75, 234, 237, 238, 239, 240, 243, 275, 277, 323, 348, 354, 361, 362, 363, 364, 399, 400, 430, 461, 501], "escap": 403, "especi": [3, 16, 114, 236, 238, 239, 258, 330, 343, 427, 438, 531, 532, 536, 542, 544], "essenti": [1, 3, 17, 23, 25, 101, 254, 260, 399, 438, 440, 480, 531, 532, 536, 542], "estim": [364, 415, 416, 417, 418, 419, 420, 425], "et": [55, 93, 104, 109, 216, 218, 229, 391], "eta": 421, "eta_": [402, 403, 408, 421], "eta_0": [402, 404, 406, 407, 409], "eta_min": 402, "eta_t": [402, 403, 404, 406, 407, 408, 409], "etc": [10, 69, 75, 118, 142, 214, 215, 361, 397, 532], "euclidean": [24, 284], "european": 104, "eval": [16, 348, 441], "evalu": [234, 279, 282, 346, 347, 348, 349, 350, 351, 352, 367, 368, 369, 371, 372, 373, 428, 441, 484, 498, 499, 542], "evaluate_model": 408, "even": [413, 425, 428, 454, 455, 458, 462, 463, 464, 465], "evenli": [285, 286, 287, 376, 377, 378, 380, 454, 461, 502, 519], "everi": [1, 16, 404, 409, 425, 542], "everywher": 485, "exact": [234, 237, 495, 536, 538], "exactli": [240, 298], "exampl": [4, 16, 401, 446], "exc_typ": 428, "exc_valu": 428, "exce": 88, "excel": [95, 125, 130, 131], "except": [0, 11, 141, 425, 428, 485, 503, 508, 529], "exchang": 55, "excit": [74, 104, 117, 121, 122, 169, 172, 175, 176, 177, 178, 311], "exclud": [213, 217, 218, 524, 525], "exclus": [436, 439, 454], "exdb": 8, "execut": [16, 237, 425, 428, 441], "exist": [15, 27, 236, 238, 240, 429, 460, 503], "exit": 425, "exp": [223, 242, 247, 248, 250, 322, 329, 466], "exp_rang": 403, "expand": [4, 10, 15, 50, 104, 260, 501, 515, 522], "expans": [10, 13, 15, 54, 88, 96, 118, 121, 122, 128, 129, 134, 135, 136, 137, 139, 140, 141], "expansion_factor": 117, "expect": [18, 214, 227, 237, 240, 258, 263, 335, 346, 348, 349, 350, 351, 352, 374, 391, 392, 393, 394, 395, 399], "expens": 3, "experi": [16, 118, 438, 440, 542], "experiment": [16, 440], "explan": [23, 25, 29, 40, 196, 209, 217, 218, 285, 286, 287, 376, 377, 378, 412], "explicit": [13, 14, 15, 240, 354], "explicitli": [15, 16, 104, 236, 238, 441, 453, 459], "explod": [329, 367, 368, 369], "explor": [16, 124, 399, 440], "expon": [23, 284, 451], "exponenti": [242, 247, 249, 322, 329, 331, 346, 404, 406, 415, 416, 417, 418, 419, 476], "exponentiallr": [401, 410], "expos": [16, 425], "express": [10, 11, 13, 15, 43, 110, 111, 112, 130], "extend": [4, 55, 104, 142, 162, 179, 185, 192, 343, 344, 453], "extens": [104, 411, 430, 544], "extern": [4, 213, 425], "extra": [54, 87, 126, 192, 501], "extract": [31, 57, 59, 61, 66, 67, 68, 92, 98, 101, 104, 129, 130, 133, 151, 162, 179, 191, 192, 193, 195, 207, 212, 213, 215, 216, 217, 218, 221, 222, 260, 340, 344, 382, 384, 424, 429, 455, 480, 482, 523, 524, 525, 527, 533, 535], "extractor": [105, 106, 107, 108, 207, 217, 218], "extrem": [25, 104, 152, 191, 203, 299], "extrema": 298, "ey": 466, "f": [1, 4, 5, 6, 7, 8, 16, 104, 216, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 328, 331, 391, 393, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 425, 543], "f_1": 311, "f_2": 311, "facilit": [10, 14, 92, 236, 240, 249, 331, 338, 339, 340, 399, 411, 534, 542], "factor": [74, 94, 118, 128, 218, 220, 221, 242, 252, 253, 254, 255, 260, 311, 320, 321, 335, 336, 397, 401, 403, 404, 406, 407, 408, 409, 412, 419, 420, 421, 422, 500], "factori": 208, "failur": [236, 237, 238, 239, 399], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 74, 121, 122, 128, 129, 135, 136, 137, 139, 140, 141, 151, 184, 185, 213, 218, 233, 234, 235, 252, 261, 263, 264, 265, 266, 267, 279, 282, 298, 299, 303, 314, 316, 317, 318, 319, 320, 321, 335, 336, 338, 339, 340, 341, 348, 357, 359, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 420, 426, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 490, 496, 497, 498, 499, 500, 505, 506, 507, 510, 518, 527, 530, 532, 543], "famili": [54, 104, 118, 136, 140, 141, 192, 429], "fan": [104, 316, 317, 320, 321], "fan_in": [316, 317], "fan_out": [316, 317], "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": [90, 213, 419], "faster": [104, 129, 214, 215, 401, 414, 418, 428], "faster_rcnn_resnet_101_fpn": 216, "faster_rcnn_resnet_50_fpn": 216, "fasterrcnn": [213, 214, 215, 216], "fastrcnn": [216, 217], "fc": [16, 101, 151, 162, 169, 179, 237, 311, 339, 340, 382, 383, 384, 385, 386, 387], "fc1": [16, 107, 108, 236, 240, 323, 324, 325, 327, 328, 329, 330, 332, 333, 359], "fc2": [16, 107, 108, 236, 240, 323, 324, 325, 327, 329, 330, 332, 333, 359], "fc3": 108, "feat": 219, "feat_channel": [213, 217], "feat_dim": 218, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 88, 92, 95, 96, 98, 101, 104, 105, 106, 107, 108, 109, 114, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 179, 180, 181, 182, 191, 192, 193, 195, 196, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 257, 262, 270, 272, 279, 280, 305, 306, 307, 311, 312, 340, 342, 347, 349, 350, 351, 352, 357, 359, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 399, 414], "feature_extractor": 105, "fed": [3, 542], "feed": [3, 88, 542], "feedback": 544, "feedforward": [201, 230, 391, 393, 395], "femto": [48, 104], "fergu": [104, 209], "fetch": 0, "fewer": [1, 104, 138, 143, 144, 145, 146, 147, 148, 501, 526], "field": [5, 6, 8, 104, 109, 138, 179, 183, 212, 312], "fig": 543, "figur": 543, "file": [3, 429, 430, 431], "fill": [218, 314, 318, 319, 435, 436, 437, 439, 459, 460, 462, 463, 464, 465], "fill_valu": [459, 460], "filter": [75, 104, 118, 209, 218, 228, 253, 254, 255, 256, 257, 258, 260, 305, 306, 307, 339, 340], "filter_height": 260, "filter_s": 260, "filter_width": 260, "final": [40, 55, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 117, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 201, 213, 214, 215, 218, 230, 236, 237, 238, 239, 240, 252, 312, 335, 391, 392, 394, 425, 441, 531, 542], "find": [27, 480, 482, 498, 499, 512, 523], "fine": [55, 104, 109, 124, 127, 214, 215, 311, 542], "finer": 129, "finest": 130, "first": [5, 6, 7, 8, 20, 105, 184, 185, 186, 187, 209, 216, 218, 228, 237, 238, 270, 311, 357, 401, 415, 416, 417, 418, 419, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 491, 502, 506, 511, 523, 527, 529, 531, 532, 542], "fit": [15, 399], "fix": [104, 138, 184, 213, 217, 218, 221, 237, 404, 407, 409, 441, 513], "flag": [16, 425, 428, 500], "flat": [104, 184], "flatten": [13, 101, 105, 218, 240, 260, 344, 450, 499, 509, 514, 515, 517, 527], "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 88, 92, 101, 102, 103, 104, 105, 118, 119, 142, 151, 175, 176, 177, 178, 183, 196, 207, 236, 237, 238, 239, 240, 354, 397, 399, 406, 411, 441, 453, 462, 463, 532, 542], "flexibli": 14, "flip": [537, 539, 542], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 74, 75, 88, 94, 96, 109, 115, 119, 128, 129, 130, 131, 132, 133, 134, 184, 185, 201, 213, 217, 218, 220, 221, 222, 223, 224, 228, 230, 233, 235, 242, 245, 252, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 279, 280, 282, 283, 284, 301, 304, 305, 306, 307, 314, 318, 319, 320, 321, 322, 326, 335, 336, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 389, 391, 393, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 432, 434, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 472, 484, 497, 505, 506, 507, 510, 532, 534, 536, 537, 538, 539], "float32": [233, 235, 424, 441, 454, 455, 458, 459, 460, 462, 464, 497, 532], "float64": [424, 465, 497, 532], "floor": [409, 466], "flop": [104, 229, 425, 518], "flow": [31, 95, 101, 104, 169, 240, 262, 321, 323, 330, 333, 338, 339, 340, 357, 359, 426, 434, 471, 510, 543, 544], "fluctuat": 403, "fly": [2, 3], "fn": 428, "fname": 3, "focu": 31, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 88, 109, 110, 111, 112, 113, 121, 122, 175, 176, 177, 178, 183, 196, 207, 209, 215, 218, 230, 242, 243, 245, 246, 247, 248, 249, 250, 252, 270, 272, 303, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 343, 346, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 429, 431, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 480, 482, 491, 501, 511, 516, 526, 533, 534, 535, 536, 537, 538, 539, 542], "footprint": 113, "foral": [392, 394], "forc": [16, 262], "form": [16, 26, 55, 224, 312, 392, 394, 450, 505, 507, 511, 515, 522, 542], "format": [2, 3, 5, 6, 7, 8, 220, 223, 224, 225, 227, 228, 298, 362, 365, 430, 532], "formul": [243, 284], "formula": [20, 28, 249, 285, 286, 287, 331, 332, 363, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 446, 496, 536], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 117, 119, 120, 121, 122, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 196, 209, 213, 215, 217, 218, 220, 221, 233, 234, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425], "foundat": [16, 101, 118, 169, 234, 399, 411], "four": [70, 71, 72, 73, 109, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 513], "fpn": [213, 214, 215, 216, 220, 226], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 109, 220, 223, 224, 227, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 263, 270, 272, 280, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 301, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 393, 395, 402, 413, 414, 415, 416, 417, 418, 419, 420, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 508, 510, 511, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 528, 529, 530, 534], "fraction": [256, 257, 258], "frame": 267, "framework": [4, 10, 16, 212, 362, 365, 367, 368, 369, 371, 372, 373, 400, 411, 542], "free": [16, 424, 498, 499, 500], "frequent": [362, 365], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 129, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 197, 198, 199, 200, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 256, 260, 262, 270, 279, 282, 288, 289, 290, 298, 299, 301, 303, 305, 306, 307, 311, 312, 314, 316, 317, 318, 319, 320, 321, 328, 335, 338, 339, 340, 341, 344, 346, 347, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 392, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 446, 447, 448, 452, 453, 455, 480, 481, 482, 490, 496, 498, 499, 500, 503, 508, 511, 512, 515, 519, 520, 521, 522, 523, 527, 529, 530, 533, 534, 535, 536, 537, 538, 539, 542, 543], "fu": 104, "full": [16, 28, 119, 121, 122, 201, 214, 217, 230, 343, 434, 466], "full_lik": 466, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 69, 70, 71, 72, 73, 74, 75, 101, 104, 105, 106, 107, 108, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 196, 207, 209, 213, 217, 218, 272, 311, 312, 359, 440, 441, 518], "func": 429, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 88, 96, 217, 234, 236, 237, 238, 239, 240, 305, 306, 307, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 346, 347, 349, 350, 351, 352, 354, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 391, 393, 395, 399, 402, 403, 405, 406, 409, 411, 440, 531, 542], "fundament": [212, 252, 272, 359, 441, 532], "further": [14, 42, 43, 44, 45, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 117, 119, 120, 121, 122, 124, 126, 149, 150, 193, 434, 440, 481, 490, 496], "fuse": [31, 104, 179, 219, 425], "fusion": [55, 180, 181, 182], "futur": [252, 336, 358, 394, 395, 544], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 114, 142, 184, 185, 196, 214, 215, 218, 219, 222, 298, 311, 312, 342, 346, 400, 413, 420, 424, 441, 459, 503, 536], "g_": 414, "g_t": 420, "gain": [320, 321], "gamma": [280, 367, 368, 369, 370, 371, 372, 373, 374, 401, 403, 404, 405, 407, 409], "gamma_c": [280, 370], "gan": [257, 341, 342], "gap": [151, 162, 179, 311], "gaussian": [243, 323], "gelu": [65, 88, 109, 244, 269, 334, 356], "gelunetwork": 323, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "geoffrei": [5, 6], "geometr": 477, "geq": 524, "get": [5, 6, 7, 8], "get_loss": 213, "get_lr": [402, 403, 404, 405, 406, 407, 408, 409], "girshick": [216, 218], "git": 16, "github": [7, 16], "give": [412, 420], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 212, 221, 231, 260, 284, 289, 290, 298, 301, 335, 336, 344, 354, 361, 362, 365, 381, 400, 424, 426, 432, 459, 463, 465, 510, 518, 519, 523, 531, 536, 537, 539, 542, 543], "global": [0, 55, 57, 59, 61, 65, 66, 67, 68, 74, 88, 104, 109, 128, 130, 133, 134, 138, 151, 162, 169, 179, 184, 186, 187, 188, 189, 191, 192, 193, 280, 311, 370, 425, 426, 428, 438, 440], "global_pool": 88, "global_response_norm": [269, 281], "globalresponsenorm": [356, 375], "go": [10, 93, 104], "goal": [361, 362, 365, 544], "good": 89, "googlenet": [93, 104], "gpu": [11, 104, 114, 233, 235, 424, 432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 500], "grad": [11, 16, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 260, 263, 270, 272, 298, 299, 303, 308, 309, 310, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 400, 411, 430, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 508, 510, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 537, 539, 540, 543], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 95, 101, 104, 221, 227, 233, 235, 299, 344, 347, 399, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 428, 431, 432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 471, 477, 484, 497, 498, 499, 500, 512, 527, 532, 543, 544], "gradual": [401, 402, 404], "grain": [55, 104, 109, 311], "granular": 222, "graph": [16, 222, 321, 425, 428, 431, 441, 454, 455, 458, 462, 463, 464, 465, 532, 543, 544], "grayscal": [7, 8, 105, 106, 107, 108, 536, 542], "great": 133, "greater": [50, 132, 228, 471, 502], "green": 536, "grid": [104, 109, 220, 221, 298, 299, 471, 511], "grid_sampl": [269, 298, 300], "grid_window_s": 109, "gridattent": 109, "grn": 370, "ground": 213, "groundbreak": 104, "group": [104, 118, 142, 149, 150, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 183, 215, 237, 253, 254, 255, 256, 257, 258, 305, 306, 307, 312, 338, 339, 340, 341, 342, 343, 400, 401, 411], "group1": 237, "group2": 237, "groupedconvblock": 162, "grow": [16, 88], "growth_rat": [69, 70, 71, 72, 73], "guarante": [431, 438], "h": [10, 13, 14, 15, 104, 151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 203, 216, 220, 221, 223, 224, 225, 252, 254, 255, 257, 258, 260, 262, 266, 267, 280, 286, 287, 289, 290, 292, 293, 296, 297, 298, 303, 304, 306, 307, 311, 335, 336, 343, 354, 368, 369, 370, 372, 373, 377, 378, 380, 381, 384, 387, 391, 393, 395, 533, 535], "h_": [220, 221, 223, 224, 254, 255, 257, 258, 286, 287, 289, 290, 292, 293, 296, 297, 303, 339, 340, 342, 343, 344, 377, 378, 380, 381, 383, 384, 386, 387], "h_in": 299, "h_l": [219, 220], "h_out": [254, 255, 257, 258, 292, 293, 296, 297, 299], "h_stack": 508, "h_t": [223, 224], "ha": [0, 20, 42, 55, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 240, 253, 254, 255, 256, 305, 306, 307, 328, 332, 361, 362, 367, 368, 369, 371, 372, 373, 374, 397, 400, 411, 430, 441, 446, 471, 477, 484, 494, 501, 503, 508, 512, 521, 527, 529, 536], "hackabl": 16, "haip": 104, "half": [403, 488], "han": 7, "hand": 27, "handl": [0, 3, 10, 16, 25, 191, 229, 234, 236, 237, 238, 239, 240, 301, 362, 365, 399, 411, 424, 453], "handwritten": [7, 8, 108], "hang": 104, "hard": [121, 122, 325], "hard_sigmoid": 324, "hardsigmoid": [325, 334, 356], "hardswish": [334, 356], "hardwar": 114, "hashabl": 441, "hat": [31, 415, 416, 417, 418, 419], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 228, 235, 237, 239, 240, 254, 255, 262, 284, 301, 321, 389, 399, 430, 458, 462, 463, 464, 465, 480, 482, 503, 508, 510, 511, 520, 521, 526, 527, 529, 534, 540], "he": 104, "head": [31, 40, 55, 66, 67, 68, 88, 96, 109, 117, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 207, 213, 214, 215, 216, 217, 218, 230, 252, 335, 336, 391, 393, 395], "head_dim": 55, "head_fn": 96, "heapsort": 518, "heart": 16, "height": [31, 207, 223, 224, 254, 255, 257, 258, 260, 266, 267, 280, 286, 287, 289, 290, 292, 293, 296, 297, 299, 303, 304, 312, 339, 340, 344, 368, 369, 370, 372, 373, 377, 378, 380, 383, 384, 386, 387, 397, 533, 535, 540], "help": [31, 57, 59, 61, 65, 94, 245, 247, 267, 301, 322, 326, 328, 329, 333, 367, 368, 369, 382, 383, 385, 386, 389, 401, 403, 408, 409, 412, 415, 416, 418, 426, 427, 491, 544], "henc": 516, "here": [3, 18, 214, 234, 256, 270, 399, 411, 427, 440, 531, 532, 542], "heurist": 218, "hidden": [29, 55, 109, 130, 131, 132, 133, 184, 185, 201, 209, 217, 230, 237], "hidden_dim": [213, 217], "hidden_s": 237, "hierarch": [40, 41, 57, 59, 61, 88, 104, 128, 129, 130, 131, 132, 133, 134, 135, 140, 184, 185, 237, 240, 399], "hierarchi": [88, 216, 339], "hierarchicalnetwork": 237, "high": [11, 43, 49, 50, 68, 84, 85, 86, 87, 88, 89, 91, 98, 104, 109, 110, 111, 114, 117, 125, 126, 129, 131, 139, 140, 141, 159, 174, 183, 191, 192, 193, 203, 204, 213, 222, 401, 436, 439, 453], "higher": [50, 75, 115, 123, 162, 191, 362, 365, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 445, 446, 450, 453, 476, 491], "highest": [54, 114, 126, 436], "highli": [16, 31, 46, 54, 104, 120, 130, 190, 229, 406], "highlight": [311, 385, 386, 387, 543], "hinton": [5, 6], "hist": [505, 506, 507], "histogram": [506, 507, 509], "histogram2d": 509, "histogramdd": 509, "histor": 414, "histori": [432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 462, 463, 464, 465], "hold": [118, 236, 237, 238, 239], "hook": 431, "horizont": [508, 521, 537, 542, 543], "hot": [362, 365], "how": [2, 3, 13, 15, 130, 175, 176, 177, 178, 183, 237, 240, 298, 299, 354, 399, 542, 543, 544], "howard": 104, "howev": [233, 321, 477], "hstack": 509, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [104, 311], "huang": 104, "huber": [275, 363], "huber_loss": [269, 276], "huberloss": [356, 366], "huberregressionmodel": 363, "hue": 542, "huge": [49, 104, 130], "human": 212, "hybrid": [65, 88, 104, 126, 127], "hyperbol": [250, 333, 474, 487, 493], "hyperparamet": [128, 143, 144, 145, 146, 147, 148, 151, 162, 208, 231, 400, 412], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "i_": 453, "i_0": 453, "i_1": [13, 14, 15, 354, 453], "i_2": [13, 14, 15, 354], "i_k": [15, 453], "i_m": [13, 15, 354], "iccv": 104, "iclr": 104, "id": 543, "idea": 104, "ideal": [43, 47, 51, 114, 115, 118, 127, 130, 240], "ident": [22, 23, 96, 104, 298, 299, 304, 348, 356, 360, 438, 440, 458, 516], "identifi": [212, 238], "idx": [2, 3, 500], "ieee": [104, 216, 311], "ignor": [391, 392, 393, 394, 395, 500], "ii": 494, "ij": [11, 31, 249, 303, 331, 444, 445, 446, 450, 511, 524, 525], "ik": [11, 444, 445, 446], "ill": [19, 25], "ilsvrc": 104, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "image_dir": 3, "image_mean": 218, "image_path": 3, "image_s": [201, 202, 203, 204, 205, 206], "image_shap": 225, "imagedataset": 3, "imageio": 3, "imagenet": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 96, 104, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 160, 161, 175, 176, 177, 178, 183, 214, 215, 218], "imbal": [362, 365], "img": 222, "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206], "imgclf": [65, 96], "impact": [104, 418], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 74, 88, 92, 93, 94, 95, 96, 102, 103, 104, 105, 115, 116, 117, 128, 129, 151, 160, 161, 163, 164, 165, 166, 167, 168, 169, 184, 201, 207, 209, 213, 216, 217, 218, 222, 229, 230, 234, 260, 263, 299, 308, 309, 310, 312, 335, 336, 344, 348, 370, 393, 395, 400, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 508, 529, 536], "impli": [338, 339], "implicit": [344, 459], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543], "improp": [10, 237, 240, 440], "improv": [31, 40, 57, 59, 61, 65, 67, 75, 93, 94, 95, 99, 101, 103, 104, 109, 127, 129, 136, 138, 142, 151, 162, 175, 176, 177, 178, 179, 184, 185, 192, 193, 195, 209, 213, 214, 216, 217, 232, 262, 263, 279, 301, 304, 311, 323, 329, 333, 354, 389, 401, 402, 403, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 535, 538, 542], "imread": 3, "in1_featur": [270, 357], "in2_featur": [270, 357], "in_channel": [31, 55, 65, 88, 109, 110, 111, 112, 113, 114, 128, 129, 135, 136, 137, 138, 139, 140, 141, 151, 184, 185, 201, 237, 240, 305, 306, 307, 308, 309, 310, 311, 312, 338, 339, 340, 341, 342, 343, 368, 369, 382, 383, 384, 385, 386, 387, 399], "in_channels_list": 219, "in_featur": [236, 237, 240, 272, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 339, 340, 346, 349, 350, 357, 359, 361, 362, 363, 364, 365, 367, 371, 374, 382, 383, 384, 385, 386, 387], "incept": [93, 94, 95, 96, 101, 102, 103], "inception_next": 96, "inception_next_atto": 104, "inception_next_bas": 104, "inception_next_smal": 104, "inception_next_tini": 104, "inception_resnet_v1": 104, "inception_resnet_v2": 104, "inception_v1": 104, "inception_v3": 104, "inception_v4": 104, "inceptionnext": [97, 98, 99, 100], "inceptionresnet": [102, 103], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 66, 67, 68, 92, 93, 94, 102, 105, 109, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 208, 209, 221, 230, 234, 235, 237, 239, 240, 303, 305, 306, 307, 308, 309, 310, 393, 395, 397, 399, 400, 405, 411, 418, 425, 440, 446, 513, 524, 525, 544], "inclus": [235, 238, 436, 439, 461], "incom": [272, 359], "incompat": [214, 501], "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 104, 120, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 192, 194, 323], "increas": [43, 44, 88, 109, 112, 114, 115, 123, 126, 130, 131, 133, 136, 141, 162, 163, 164, 165, 166, 167, 168, 179, 232, 253, 254, 255, 256, 257, 260, 304, 403, 408, 414, 421, 427, 508, 529, 536, 537, 539, 542], "independ": [55, 218, 237, 253, 254, 255, 256, 335, 346, 349, 350, 351, 352, 374, 446, 457, 534, 536, 538, 540], "index": [0, 2, 5, 6, 7, 8, 10, 13, 218, 221, 280, 301, 354, 370, 389, 402, 403, 404, 405, 406, 407, 409, 427, 441, 454, 455, 458, 477, 500, 511, 512, 516], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 66, 67, 68, 134, 149, 150, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 218, 228, 235, 237, 239, 240, 274, 278, 301, 362, 365, 382, 389, 391, 392, 393, 394, 395, 407, 424, 426, 441, 498, 499, 500, 512, 518, 523, 530, 533, 535], "individu": [3, 237, 240, 363, 374, 411, 414, 421], "induc": [247, 329], "induct": [57, 59, 61, 65, 88, 104], "inf": 492, "infer": [90, 129, 175, 176, 177, 178, 183, 214, 216, 217, 218, 228, 237, 240, 424, 428, 431], "infin": [26, 28, 417], "inform": [31, 55, 104, 130, 186, 187, 188, 189, 194, 212, 229, 233, 311, 405, 411, 413], "infti": [24, 419], "inherit": [1, 412, 420, 422], "init": 315, "initi": [1, 16, 31, 40, 69, 88, 96, 101, 109, 113, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 190, 191, 192, 193, 197, 198, 199, 200, 208, 214, 215, 231, 233, 235, 236, 237, 238, 239, 240, 312, 314, 316, 317, 318, 319, 320, 321, 335, 338, 339, 340, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 374, 389, 393, 395, 397, 399, 400, 402, 404, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 435, 438, 439, 440, 454, 458, 461, 462, 463, 464, 465, 497], "initial_accumulator_valu": 414, "inner": [444, 453, 466], "innov": [117, 127], "input": [10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 162, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 218, 228, 229, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 428, 440, 441, 442, 444, 445, 446, 450, 453, 455, 457, 460, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542], "input1": 357, "input2": 357, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 209, 218, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 370, 376, 377, 378, 379, 380, 381, 389, 502, 518, 523, 524, 525], "input_1": 270, "input_2": 270, "input_data": [322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 346, 349, 350, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387], "input_indic": [301, 389], "input_s": [237, 239, 331, 362, 365], "input_tensor": [55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 196, 207, 233, 236, 237, 238, 239, 240, 249, 262, 263, 284, 308, 309, 310, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 346, 347, 348, 349, 350, 351, 352, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 397, 399, 533, 534, 535, 536, 537, 538, 539, 540], "insert": 500, "insid": [3, 425, 426], "insight": 104, "inspect": [16, 234, 235, 240, 400, 544], "inspir": [10, 13, 15, 16, 40, 104], "instabl": [25, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 113, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 208, 210, 215, 231, 232, 234, 235, 236, 238, 239, 240, 282, 328, 371, 372, 373, 374, 391, 392, 394, 400, 424, 428, 429, 497, 515, 522, 542], "instance_norm": [269, 281, 371, 372, 373], "instancenorm1d": [356, 375], "instancenorm1dmodel": 371, "instancenorm2d": [356, 375], "instancenorm3d": [356, 375], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 74, 84, 85, 86, 87, 90, 96, 97, 98, 99, 100, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 175, 176, 177, 178, 183, 186, 187, 188, 189, 194, 195, 202, 203, 204, 205, 206, 217, 218, 429], "instead": [57, 59, 61, 236, 237, 238, 239, 240, 316, 317, 320, 321, 389, 391, 393, 395, 415, 416, 417, 456, 457], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 230, 231, 232, 233, 235, 249, 252, 253, 254, 255, 256, 257, 258, 260, 262, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 331, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 354, 357, 359, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 421, 424, 429, 432, 434, 435, 436, 437, 438, 439, 441, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 472, 480, 481, 482, 484, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 532, 533, 535, 540, 543], "int32": [389, 500, 512], "int64": [228, 424, 434, 441, 498, 499], "integ": [1, 3, 23, 169, 196, 228, 253, 254, 255, 286, 287, 335, 338, 339, 340, 341, 344, 374, 377, 378, 383, 384, 385, 386, 387, 434, 435, 436, 437, 439, 440, 453, 456, 462, 464, 471, 477, 481, 484, 490, 495, 496, 507, 513, 515, 516, 519, 522], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 65, 66, 67, 68, 104, 109, 126, 142, 217, 218, 230, 235, 237, 239, 240, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 354, 357, 359, 382, 383, 384, 385, 386, 387, 441], "intellig": [104, 212, 216, 311], "intend": [10, 131, 233, 238, 239], "intens": [25, 69, 152, 534, 536], "interact": [109, 184, 270, 357, 399, 440, 544], "interdepend": 104, "interest": [217, 221], "interfac": [2, 16, 234, 237, 379, 411], "interfer": [426, 526], "intermedi": [25, 130, 149, 150, 311, 391, 393, 395, 441, 543], "intern": [16, 104, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 214, 215, 216, 236, 237, 238, 239, 240, 362, 365, 399, 453, 533, 534, 535, 536, 537, 538, 539, 540], "interpol": [221, 269, 299, 302, 397, 461, 540], "interpret": [10, 104, 212, 249, 331, 503], "intersect": [227, 228], "interv": [407, 409, 435, 439, 454], "introduc": [41, 57, 59, 61, 65, 75, 93, 94, 104, 109, 115, 116, 117, 128, 129, 137, 162, 195, 213, 216, 217, 218, 229, 246, 256, 311, 323, 327, 328, 330, 333, 346, 349, 350, 351, 352, 391, 535, 538, 542], "introspect": [16, 240], "intuit": [10, 13, 16, 236, 238, 399, 542, 544], "inv": 21, "inv_a": 22, "invari": [383, 386], "invers": [19, 22, 23, 25, 223, 403, 414, 468, 469, 470], "invert": [19, 22, 23, 27, 104, 116, 117, 120], "invit": 16, "invok": 429, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 179, 212, 242, 243, 245, 246, 247, 248, 250, 270, 272, 303, 338, 339, 340, 354, 357, 359, 432, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 465, 476, 478, 479, 480, 482, 486, 488, 511, 513, 515, 522], "iou": [218, 222, 226, 228], "iou_matrix": 227, "iou_thresh": [222, 228], "is_all_fre": 441, "is_bit_fre": 424, "is_caus": [252, 336, 394, 395], "is_fre": 441, "is_leaf": 441, "isn": 16, "issu": [3, 16, 329, 367, 368, 369, 415, 416], "item": [7, 16, 364], "iter": [0, 1, 2, 3, 233, 234, 237, 239, 392, 394, 400, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 454], "ith": [249, 331], "its": [4, 16, 23, 25, 29, 41, 104, 114, 118, 126, 129, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 180, 181, 182, 209, 213, 220, 233, 236, 237, 238, 239, 253, 254, 255, 256, 257, 260, 298, 304, 312, 321, 323, 327, 332, 341, 347, 385, 386, 387, 399, 400, 413, 421, 425, 426, 427, 429, 431, 454, 456, 457, 464, 471, 477, 480, 482, 484, 497, 501, 516, 518, 519, 526, 534, 537, 539, 542], "itself": [18, 23, 236, 237, 238, 239, 401, 428], "j": [8, 10, 13, 14, 15, 31, 227, 249, 301, 311, 331, 354, 367, 368, 369, 371, 372, 373, 382, 383, 385, 386, 389, 511, 521, 524, 525, 533, 535], "j_": 453, "j_1": [13, 15, 354], "j_2": [13, 15, 354], "j_k": [15, 453], "j_n": [13, 15, 354], "jie": 104, "jk": [11, 445], "join": [3, 503], "jointli": 213, "json": 429, "jupyt": 544, "k": [23, 31, 55, 104, 109, 129, 216, 220, 221, 252, 253, 256, 335, 336, 338, 341, 362, 368, 369, 372, 373, 382, 385, 386, 395, 444, 445, 453, 455, 458, 503, 519, 523], "k_2": 55, "k_d": [255, 258, 340, 384, 387], "k_h": [254, 255, 257, 258, 339, 340, 344, 383, 384, 387], "k_i": 335, "k_j": 31, "k_w": [254, 255, 257, 258, 339, 340, 344, 383, 384, 387], "kaim": [104, 316, 317, 320, 321], "kaiming_norm": 315, "kaiming_uniform": 315, "kalenichenko": 104, "karen": 104, "kashif": 7, "kd": 343, "kdim": 335, "keep": [228, 234, 263, 327, 413, 425, 484, 500, 516, 524, 525], "keep_grad": [235, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 532], "keep_var": 234, "keepdim": [24, 480, 481, 482, 490, 496, 498, 499], "kei": [16, 55, 65, 109, 118, 128, 134, 135, 136, 137, 139, 140, 141, 184, 185, 212, 234, 236, 238, 240, 252, 335, 336, 395, 400, 430], "kept": [228, 481, 490, 496], "kernel": [88, 104, 105, 106, 107, 108, 118, 121, 122, 179, 180, 181, 182, 183, 209, 253, 254, 255, 256, 257, 258, 260, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 344, 376, 377, 378, 379, 380, 381, 383, 384, 387, 425], "kernel_s": [117, 121, 122, 179, 180, 181, 182, 213, 217, 218, 237, 240, 291, 292, 293, 295, 296, 297, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 344, 354, 368, 369, 382, 383, 384, 385, 386, 387], "keyerror": 234, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 110, 111, 112, 113, 114, 121, 122, 123, 124, 125, 126, 127, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 197, 198, 199, 200, 210, 214, 215, 234, 358], "kh": [342, 343], "kind": [500, 518], "kj": [444, 446], "known": [104, 256, 258], "kriz": [5, 6], "krizhevski": [5, 6, 104], "kroneck": [13, 249, 331, 354], "kw": [342, 343], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 214, 215, 234, 358, 429], "l": [18, 25, 84, 104, 204, 220, 252, 253, 256, 265, 285, 288, 291, 295, 305, 311, 336, 344, 346, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 379, 394, 395, 491, 501], "l1": [89, 104, 284], "l2": [284, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "l3": [90, 104], "l7": [91, 104], "l_": [229, 253, 256, 285, 288, 291, 295, 338, 341, 376, 379, 382, 385, 391], "l_0": 220, "l_k": 335, "l_m": [392, 393], "l_out": [253, 256, 291, 295], "l_q": 335, "l_t": [391, 392, 393], "l_v": 335, "label": [4, 5, 6, 7, 8, 11, 94, 212, 213, 217, 218, 361, 362, 365], "lambd": 412, "lambda": [20, 247, 329, 406, 412, 416], "lambda_1": 20, "lambda_2": 20, "lambda_fn": 406, "lambda_i": 20, "lambda_n": 20, "lambdalr": 410, "languag": [4, 338, 357, 382, 385, 391], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 69, 84, 87, 104, 109, 110, 111, 114, 117, 121, 123, 126, 127, 130, 131, 141, 152, 153, 154, 157, 170, 171, 187, 191, 192, 193, 202, 203, 204, 214, 308, 309, 310, 328, 363, 399, 412, 415, 416, 417, 420, 421, 422], "larger": [42, 55, 58, 67, 68, 74, 75, 109, 110, 111, 151, 179, 192, 232, 236, 238, 253, 254, 255, 260, 262, 347, 412, 447, 502, 513, 533, 535, 540], "largest": [54, 91, 130, 141, 191, 480, 523], "last": [1, 249, 283, 331, 402, 403, 404, 405, 406, 407, 409, 445, 446, 453, 500, 502, 503, 518, 537, 539], "last_channel": 117, "last_epoch": [402, 403, 404, 405, 406, 407, 409], "last_lr": [401, 402, 403, 404, 405, 406, 407, 408, 409], "later": [31, 88, 104, 219], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 72, 73, 74, 75, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 127, 128, 129, 130, 134, 135, 136, 137, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 184, 185, 191, 192, 196, 197, 198, 199, 200, 201, 209, 212, 213, 214, 215, 217, 219, 229, 230, 234, 236, 237, 240, 249, 263, 272, 279, 282, 283, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 331, 336, 338, 339, 340, 348, 357, 358, 359, 365, 374, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 440, 513, 532, 544], "layer1": 429, "layer2": 429, "layer_group": 237, "layer_norm": [269, 281, 374], "layer_norm_ep": [391, 393, 395], "layer_scale_init": 40, "layer_scale_init_valu": 88, "layer_sequ": [237, 240], "layernorm": [55, 65, 88, 109, 128, 129, 135, 136, 137, 139, 140, 141, 184, 185, 356, 375, 391, 392, 393, 394, 395], "layernormmodel": 374, "layout": 258, "lcd": [430, 431], "lceil": 471, "lct": [430, 431], "ldot": [498, 499], "le": 104, "lead": [10, 16, 214, 237, 240, 284, 323, 371, 372, 373, 374, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 440, 501], "leaf": 441, "leaki": [245, 326], "leaky_relu": [244, 269, 326], "leakyrelu": [334, 356], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 75, 98, 99, 104, 109, 130, 134, 162, 163, 164, 165, 166, 167, 168, 209, 210, 212, 213, 214, 215, 229, 236, 237, 238, 239, 246, 249, 311, 322, 326, 327, 331, 338, 339, 340, 349, 350, 351, 352, 354, 357, 359, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 427, 438, 461, 519, 524, 525, 531, 532, 542], "learnabl": [31, 55, 184, 185, 213, 233, 234, 235, 279, 280, 282, 283, 305, 306, 307, 335, 338, 339, 340, 341, 342, 343, 357, 359, 367, 368, 369, 370, 371, 372, 373, 374, 395, 399], "least": [25, 26, 28, 397, 494, 524, 525], "lecun": [8, 104], "left": [23, 24, 25, 28, 31, 55, 109, 220, 224, 243, 249, 284, 323, 331, 335, 344, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 385, 386, 387, 393, 395, 491, 500, 533, 535, 543], "leftarrow": 418, "len": [0, 1, 2, 3, 511], "lenet": [106, 107, 108], "lenet_1": 104, "lenet_4": 104, "lenet_5": 104, "length": [55, 88, 109, 237, 252, 253, 256, 265, 285, 288, 291, 295, 338, 358, 367, 371, 376, 379, 382, 385, 394, 395, 434, 500, 513, 534], "leq": [223, 324, 325, 363, 407, 419, 451, 472, 525], "lerp": 303, "less": [0, 242, 245, 275, 322, 326, 362, 363, 365, 461, 477], "let": [20, 453, 500], "level": [101, 109, 130, 131, 132, 133, 219, 220, 344], "leverag": [13, 14, 15, 16, 27, 31, 95, 96, 103, 104, 123, 126, 135, 138, 163, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191, 207, 212, 312, 399], "lfloor": [344, 409, 477], "li": [104, 138], "librari": [3, 10, 16, 17, 234, 399, 400, 411, 429, 440, 441, 542], "lie": [225, 432], "lightblu": 543, "lightgrai": 543, "lightgreen": 543, "lightweight": [16, 52, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 104, 113, 116, 121, 122, 134, 138, 143, 144, 145, 146, 147, 148, 155, 172, 188, 189, 195, 206, 312, 325, 328], "like": [13, 14, 15, 16, 57, 59, 61, 75, 101, 104, 118, 126, 163, 164, 165, 166, 167, 168, 180, 181, 182, 193, 212, 214, 222, 230, 233, 234, 237, 240, 253, 258, 262, 320, 321, 329, 346, 347, 354, 367, 368, 369, 371, 372, 373, 426, 427, 460, 497, 532, 542, 544], "likelihood": [278, 362, 365], "limit": [45, 52, 121, 122, 123, 125, 328, 413, 472], "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 428], "linear": [11, 16, 17, 18, 25, 26, 27, 88, 96, 104, 109, 116, 120, 129, 135, 136, 137, 138, 139, 140, 141, 169, 236, 237, 238, 240, 242, 243, 245, 246, 247, 263, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 340, 344, 346, 348, 349, 350, 357, 358, 361, 362, 363, 364, 365, 367, 371, 374, 382, 383, 384, 385, 386, 387, 391, 393, 395, 401, 429, 431, 458], "linearli": 363, "linguist": 212, "linspac": 466, "linspace_tensor": 461, "list": [0, 1, 16, 31, 40, 41, 55, 66, 67, 68, 75, 88, 96, 105, 117, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 151, 162, 169, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 219, 220, 233, 235, 236, 237, 238, 239, 283, 312, 358, 374, 400, 402, 403, 404, 405, 406, 407, 408, 409, 432, 435, 436, 437, 439, 441, 453, 455, 456, 457, 459, 460, 462, 463, 464, 465, 495, 501, 506, 507, 516, 519, 520, 528, 531], "listdir": 3, "liter": [14, 151, 222, 233, 235, 273, 274, 275, 277, 278, 299, 303, 305, 306, 307, 308, 309, 310, 312, 316, 317, 338, 339, 340, 341, 342, 343, 361, 362, 363, 364, 365, 397, 403, 408, 424, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 500, 511, 518], "liu": 104, "ln": 451, "load": [3, 4, 5, 6, 7, 8, 214, 233, 234, 235, 400, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429], "load_state_dict": [214, 215, 234, 400, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 65, 66, 67, 68, 104, 109, 128, 130, 133, 184, 185, 186, 187, 188, 189, 212, 218, 260, 338, 344, 403], "locat": [104, 299, 303, 518], "log": [185, 224, 278, 361, 362, 365, 402, 403, 404, 405, 406, 407, 408, 409, 466, 479, 500], "log2": 466, "log_2": [220, 479], "log_softmax": 365, "logarithm": [451, 476, 478, 479], "logic": [3, 215, 376, 377, 378, 399, 400, 477], "logit": [29, 40, 209, 249, 331, 362, 425], "logsoftmax": [362, 365], "long": [31, 88, 109, 131, 229, 298, 418, 495], "lookup": [301, 389], "loop": [1, 13, 14, 15, 16, 237, 354, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "loss": [16, 25, 236, 237, 238, 239, 240, 249, 273, 274, 275, 277, 278, 298, 322, 323, 326, 327, 329, 330, 331, 333, 346, 349, 350, 351, 352, 358, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 518, 523], "low": [101, 116, 121, 122, 125, 436, 439], "lower": [18, 115, 214, 319, 344, 392, 393, 394, 395, 403, 412, 420, 421, 422, 439, 472, 507, 524, 525], "lower_triangular": 524, "lowest": 436, "lp": 284, "lr": [16, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "lr_lambda": 406, "lr_schedul": 410, "lrschedul": 410, "ls_init_valu": 96, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 433, 466, 509, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "m": [85, 104, 196, 227, 229, 236, 237, 240, 335, 383, 384, 386, 387, 391, 392, 395, 407, 415, 416, 417, 418, 419, 453, 458, 524, 525], "m1": 16, "m2": 16, "m3": 16, "m_": [415, 416, 417, 418, 419, 524, 525], "m_m": 393, "m_t": [393, 418, 419], "maaten": 104, "mac": 16, "machin": [3, 7, 8, 25, 104, 212, 216, 230, 311, 391, 415, 427, 438], "magnitud": [263, 301, 389, 420, 421, 542], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 125, 214, 237, 239, 284, 304, 348, 354, 363, 401, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 440, 502, 526, 536, 542, 544], "main": [26, 101, 237, 455, 458, 524, 525], "maintain": [25, 31, 41, 46, 55, 64, 66, 67, 68, 84, 85, 86, 87, 88, 89, 99, 104, 112, 115, 132, 133, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 183, 185, 219, 223, 233, 234, 236, 237, 238, 240, 247, 263, 316, 317, 320, 321, 322, 323, 329, 346, 348, 349, 350, 351, 352, 367, 368, 369, 371, 372, 373, 415, 420, 533, 536, 540], "major": [16, 431], "make": [1, 3, 10, 31, 43, 44, 47, 48, 92, 101, 104, 105, 114, 116, 118, 120, 121, 122, 124, 125, 127, 130, 139, 151, 186, 187, 188, 189, 190, 194, 195, 202, 205, 212, 237, 240, 330, 362, 363, 374, 383, 386, 399, 414, 415, 416, 417, 427, 429, 440, 446, 511, 519, 531, 542, 544], "manag": [234, 236, 237, 238, 239, 240, 399, 411, 425, 426, 428, 429, 440], "manhattan": 24, "manipul": [10, 13, 236, 238, 542], "manner": [10, 13, 14, 184, 237, 240, 424], "manual": [10, 273, 274, 278, 344, 361, 362, 365], "map": [13, 15, 96, 104, 109, 149, 150, 151, 162, 172, 179, 213, 216, 217, 219, 220, 221, 234, 248, 250, 257, 262, 280, 299, 311, 330, 333, 342, 348, 354, 370, 389, 425, 502, 518], "mark": [510, 543], "marri": 104, "mask": [104, 233, 252, 335, 336, 346, 349, 350, 351, 352, 391, 392, 393, 394, 395, 510, 524, 525, 530], "masked_fil": 509, "match": [10, 11, 15, 16, 27, 55, 88, 214, 215, 221, 228, 234, 237, 240, 252, 256, 258, 273, 275, 277, 283, 288, 290, 305, 306, 307, 347, 381, 389, 400, 453, 460, 476, 501, 515, 516, 519, 522, 528, 534, 542], "math": [335, 473, 486, 492], "mathbb": [335, 519], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 207, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 270, 272, 298, 303, 308, 309, 310, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 444, 445, 446, 450, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 508, 513, 514, 515, 516, 520, 521, 522, 524, 525, 526, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540], "mathcal": [216, 316, 318, 320, 346, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 500], "mathemat": [16, 22, 305, 306, 307, 535, 537, 538, 539], "mathrm": [25, 484], "matmul": [344, 453, 466], "matplotlib": 543, "matric": [17, 19, 20, 22, 25, 27, 28, 298, 335, 395, 444, 445, 446, 458, 511, 524, 525], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 260, 270, 298, 301, 344, 358, 359, 389, 399, 444, 453, 491, 511], "matrix_pow": 21, "matthew": 104, "max": [10, 24, 169, 196, 246, 284, 288, 289, 290, 295, 296, 297, 301, 324, 325, 327, 328, 379, 380, 381, 385, 386, 387, 389, 402, 403, 408, 417, 447, 466, 472, 505], "max_box": 222, "max_lr": 403, "max_norm": [301, 389], "max_pool": [385, 386, 387], "max_pool1d": [269, 294], "max_pool2d": [269, 294], "max_pool3d": [269, 294], "max_valu": 472, "maxim": [3, 49, 126], "maximum": [24, 114, 216, 218, 222, 228, 327, 328, 385, 386, 387, 402, 403, 415, 417, 466, 472, 480, 505, 538], "maxpool": [29, 209], "maxpool1d": [356, 388], "maxpool1dmodel": 385, "maxpool2d": [237, 240, 339, 356, 388], "maxpool2dmodel": 386, "maxpool3d": [340, 356, 388], "maxpool3dmodel": 387, "maxvit": [110, 111, 112, 113, 114], "maxvit_bas": 104, "maxvit_larg": [104, 111], "maxvit_smal": 104, "maxvit_tini": [104, 112], "maxvit_xlarg": 104, "mbconv": 109, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 149, 150, 217, 218, 221, 233, 247, 253, 254, 255, 261, 273, 274, 275, 277, 278, 279, 282, 305, 306, 307, 318, 322, 323, 324, 326, 327, 329, 330, 333, 340, 346, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 408, 415, 416, 417, 418, 419, 420, 426, 437, 466, 472, 476, 478, 479, 480, 482, 486, 488, 490, 494, 495, 496, 531, 534, 542], "meaning": [14, 240], "meant": 228, "measur": [361, 362, 364, 365], "mechan": [31, 55, 65, 66, 67, 68, 88, 104, 109, 129, 130, 131, 132, 133, 138, 149, 150, 169, 179, 183, 185, 186, 187, 188, 189, 190, 193, 194, 201, 213, 229, 230, 239, 270, 335, 502], "media": 104, "medic": [258, 343], "medium": [48, 52, 56, 85, 104, 123, 124, 127, 132], "meet": [104, 379], "mem_is_caus": [392, 393], "mem_key_padding_mask": [391, 392, 393], "mem_mask": [391, 392, 393], "membership": 361, "memori": [2, 3, 16, 69, 138, 391, 392, 393, 428, 456, 457], "merg": [13, 218, 222, 354], "mergesort": [500, 518], "meshgrid": 509, "metablock": 88, "metal": [424, 441], "method": [3, 10, 14, 16, 17, 22, 75, 169, 207, 208, 213, 236, 237, 238, 239, 240, 273, 274, 275, 277, 278, 299, 316, 317, 320, 321, 361, 362, 363, 364, 365, 397, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 440], "metric": 408, "mha": 335, "mid": [90, 99, 205], "mid_channel": [121, 122], "middl": [110, 111, 427], "might": 399, "migrat": 16, "mileston": 407, "mimic": 460, "min": [324, 325, 328, 402, 403, 408, 448, 466, 472, 505], "min_lr": 408, "min_siz": 222, "min_valu": 472, "mind": [0, 3, 237, 240, 428, 484], "mingx": 104, "mini": 1, "minibackbon": 217, "minim": [4, 97, 104, 117, 240, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 411], "minima": 403, "minimalist": 16, "minimum": [222, 223, 402, 403, 408, 466, 472, 482, 505], "minu": 330, "mirror": [463, 465], "mismatch": [10, 13, 15, 75, 109, 214, 215, 234, 354, 399, 400], "miss": [234, 399, 431], "mitig": [245, 322, 326, 329, 367, 368, 369], "mix": [96, 425, 428], "mixer": 96, "mlp": [16, 55, 88, 96, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 184, 185, 312], "mlp_dim": 201, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 96, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 184, 185], "mlx": [114, 424, 441, 459, 500], "mnist": [4, 7, 9, 106, 107], "mnist_train": [4, 8], "mobil": [88, 89, 104, 115, 116, 117, 118, 120, 121, 122, 125, 135], "mobilenet": [116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 328], "mobilenet_v2": 104, "mobilenet_v3": [121, 122], "mobilenet_v3_larg": 104, "mobilenet_v3_smal": 104, "mobilenet_v4": [123, 124, 125, 126, 127], "mobilenet_v4_conv_larg": 104, "mobilenet_v4_conv_medium": 104, "mobilenet_v4_conv_smal": 104, "mobilenet_v4_hybrid_larg": 104, "mobilenet_v4_hybrid_medium": 104, "mobilenetv2": [104, 116], "mobilenetv3": [104, 117, 121, 122], "mode": [16, 88, 267, 279, 282, 298, 299, 303, 316, 317, 346, 348, 349, 350, 351, 352, 397, 403, 408, 441, 513], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 249, 252, 256, 257, 262, 301, 304, 305, 306, 307, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 343, 344, 346, 348, 349, 350, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 428, 429, 430, 431, 440, 471, 531, 532, 542, 543, 544], "model_b0": 74, "model_b7": 74, "model_tini": 96, "moder": [44, 48, 100, 124, 139, 173], "modern": [16, 40, 41, 96, 104], "modif": [208, 240], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 123, 151, 207, 210, 236, 237, 238, 239, 314, 316, 317, 318, 319, 320, 321, 346, 401, 426, 438, 441, 500, 508, 510, 517, 526, 529], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 88, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 109, 115, 116, 117, 118, 127, 128, 129, 151, 162, 169, 179, 184, 185, 196, 207, 209, 210, 213, 217, 218, 219, 220, 221, 222, 230, 233, 235, 236, 237, 238, 239, 240, 263, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 401, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 430, 431, 440, 532, 542, 544], "modular": [3, 16, 212, 230, 234, 237, 240, 399, 542], "moduledict": [237, 238, 240, 241], "modulelist": [239, 240, 241], "moment": [415, 416, 417, 418, 419], "momentum": [279, 282, 305, 306, 307, 367, 368, 369, 371, 372, 373, 403, 412, 418, 420, 422], "momentum_decai": 418, "monitor": 408, "monoton": 332, "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 68, 110, 111, 112, 131, 132, 133, 137, 151, 158, 191, 192, 194, 195, 214, 217, 232, 236, 237, 240, 262, 308, 309, 310, 322, 349, 350, 351, 352, 391, 399, 400, 411, 412, 413, 416, 417, 420, 421, 422, 437, 446, 453, 494, 521, 524, 525, 542, 544], "most": [17, 47, 91, 104, 130, 212, 386, 532, 533, 542], "mostli": 484, "move": [16, 412, 420], "mse": [275, 277, 363, 364], "mse_loss": [16, 269, 276], "mseloss": [356, 366], "mu": [31, 318, 367, 368, 369, 371, 372, 373, 374, 496], "mu_c": 534, "mu_i": [371, 372, 373], "much": [130, 542], "mul": 449, "multi": [3, 4, 11, 55, 57, 59, 61, 66, 67, 68, 96, 102, 104, 109, 128, 129, 134, 135, 136, 137, 139, 140, 141, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 201, 219, 222, 230, 249, 252, 274, 278, 312, 331, 335, 362, 365, 391, 393, 395, 425, 441, 481, 490, 496], "multi_conv": [55, 57, 59, 61], "multidimension": [435, 439, 456], "multiheadattent": [337, 356], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 151, 169, 183, 212, 220, 238, 239, 240, 260, 303, 304, 311, 312, 335, 344, 346, 349, 350, 351, 352, 354, 362, 365, 392, 394, 399, 401, 404, 408, 427, 432, 435, 436, 437, 439, 444, 449, 453, 456, 457, 491, 502, 519, 526, 531, 536, 542], "multipli": [23, 119, 239, 272, 359, 397, 407, 408, 409, 421, 450, 466, 479], "multiscaleroialign": 226, "multisteplr": 410, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 88, 214, 215, 221, 228, 234, 236, 237, 238, 239, 240, 256, 263, 283, 335, 346, 348, 349, 350, 351, 352, 365, 389, 391, 393, 395, 397, 400, 405, 430, 431, 432, 494, 501, 502, 503, 508, 510, 513, 515, 516, 519, 521, 522, 524, 525, 529, 533, 534, 535, 536, 537, 539], "mx": [424, 441], "my_simple_model": 429, "mymodel": [234, 235, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "myoptim": [400, 411], "n": [13, 23, 24, 104, 151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 236, 237, 240, 252, 253, 254, 255, 256, 257, 258, 260, 262, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 311, 316, 318, 320, 335, 336, 338, 339, 340, 341, 342, 343, 344, 351, 352, 357, 359, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 434, 453, 458, 481, 484, 494, 496, 500, 507, 512], "n1": 24, "nabla": 526, "nabla_": [413, 414, 415, 416, 417, 418, 419, 421], "nabla_t": 419, "nadam": 423, "nair": [5, 6], "name": [10, 13, 14, 15, 104, 216, 229, 234, 236, 238, 240, 354, 429, 431], "nan": [26, 28], "nano": [51, 104], "natur": [25, 338, 357, 382, 385, 391, 451, 476, 477, 478], "ndarrai": [16, 233, 235, 432, 441, 455, 457, 460, 463, 465, 497], "ndim": [26, 28, 235, 441], "ne": 23, "nearest": [299, 303, 397, 477, 484], "nearli": 441, "necessari": [4, 5, 6, 7, 8, 16, 25, 223, 508, 529], "need": [2, 4, 14, 15, 127, 213, 229, 237, 238, 239, 249, 256, 257, 357, 391, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 456, 457, 531, 532, 542], "neg": [23, 25, 28, 242, 278, 304, 322, 326, 327, 329, 362, 365, 421, 484, 500, 503, 530], "negative_slop": [245, 326], "neglect": 239, "neighbor": [299, 303], "neq": 24, "nest": [237, 240, 399, 425, 428], "nesterov": 418, "net": [104, 209, 214, 215, 217, 218], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 95, 101, 104, 108, 115, 118, 119, 123, 126, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 171, 172, 173, 174, 179, 196, 201, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 230, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 247, 248, 249, 250, 253, 254, 255, 257, 262, 263, 270, 272, 279, 299, 304, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 342, 343, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 382, 383, 384, 385, 386, 387, 389, 391, 393, 395, 399, 400, 411, 412, 420, 422, 439, 440, 441, 454, 462, 464, 480, 482, 513, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 74, 76, 77, 78, 79, 80, 81, 82, 83, 101, 104, 108, 210, 212, 213, 217, 218, 229, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 247, 248, 249, 250, 253, 254, 255, 263, 270, 272, 279, 304, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 382, 383, 384, 385, 386, 387, 389, 399, 400, 411, 412, 420, 422, 439, 440, 441, 454, 462, 464, 480, 482, 513, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544], "neuralnetwork": [324, 325, 327, 332], "neuron": 326, "never": [500, 536], "new": [11, 15, 212, 225, 234, 235, 242, 243, 245, 246, 247, 248, 250, 270, 272, 303, 312, 316, 317, 318, 319, 320, 321, 400, 405, 408, 428, 429, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 457, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 501, 503, 508, 510, 513, 515, 516, 517, 521, 522, 524, 525, 528, 529, 530], "new_box": 223, "new_tensor": 491, "next": [240, 531], "nll": 278, "nll_loss": [269, 276], "nllloss": [356, 366], "nlp": [212, 301, 389], "nm": [215, 218, 222, 226], "nms_iou_thresh": 218, "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 96, 101, 105, 109, 115, 116, 117, 118, 128, 129, 135, 136, 137, 139, 140, 141, 151, 162, 169, 175, 176, 177, 178, 179, 183, 184, 185, 196, 209, 213, 215, 217, 218, 219, 220, 221, 222, 241, 244, 251, 259, 268, 271, 276, 281, 294, 300, 302, 313, 315, 334, 337, 345, 353, 355, 356, 360, 366, 375, 388, 390, 396, 398, 400, 401, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 431, 532, 542, 543], "no_grad": [16, 426], "node": [16, 441], "nois": [28, 440], "non": [20, 23, 25, 28, 104, 109, 216, 218, 222, 228, 239, 243, 245, 246, 298, 316, 317, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 346, 349, 350, 351, 352, 391, 392, 393, 394, 395, 415, 416, 434, 451, 453, 471, 472, 477, 484, 512, 527], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 24, 31, 55, 65, 74, 75, 88, 92, 96, 101, 105, 115, 116, 117, 118, 128, 129, 142, 151, 184, 185, 207, 217, 219, 220, 221, 222, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 263, 270, 272, 273, 274, 275, 277, 278, 279, 282, 283, 301, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 505, 506, 508, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 540, 543], "nonzero": 509, "norm": [17, 21, 55, 65, 88, 109, 112, 113, 128, 129, 184, 185, 284, 301, 389, 392, 394, 417, 544], "norm_first": [391, 393, 395], "norm_lay": [55, 65, 88, 109, 128, 129, 135, 136, 137, 139, 140, 141, 184, 185], "norm_layer_cl": 88, "norm_layer_tf": 109, "norm_typ": [301, 389], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 88, 104, 109, 128, 129, 135, 136, 137, 139, 140, 141, 169, 184, 185, 190, 191, 192, 193, 194, 195, 217, 218, 243, 247, 249, 250, 262, 279, 280, 282, 283, 298, 299, 301, 305, 306, 307, 315, 316, 320, 323, 329, 331, 346, 367, 368, 369, 370, 371, 372, 373, 374, 389, 391, 392, 393, 394, 395, 420, 437, 440, 505, 506, 507, 531, 541, 542], "normalized_shap": [283, 374], "notat": [10, 11, 13, 14, 15, 354], "note": [253, 346], "notebook": 544, "noth": [261, 264, 265, 266], "notimplementederror": [2, 234, 400], "notin": 472, "nov": 104, "novel": [7, 104, 109, 212], "now": [16, 215], "np": [151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 233, 235, 311, 362, 365, 389, 424, 434, 441, 446, 453, 454, 455, 458, 462, 464, 465, 491, 497, 532], "npy": [5, 6, 7, 8], "num": [392, 394, 461], "num_block": 31, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 331, 362, 365], "num_decoder_lay": [230, 391], "num_embed": [301, 389], "num_encoder_lay": [230, 391], "num_featur": [240, 305, 306, 307, 367, 368, 369, 371, 372, 373], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 230, 335, 391, 392, 393, 394, 395], "num_init_featur": [69, 70, 71, 72, 73], "num_lay": [201, 392, 394], "num_paramet": 239, "num_stag": 129, "num_vit": [88, 89, 90, 91], "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 230, 235, 237, 239, 240, 252, 253, 254, 255, 256, 257, 258, 260, 265, 266, 267, 270, 272, 274, 278, 279, 280, 282, 285, 286, 287, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 330, 335, 338, 339, 340, 341, 342, 343, 344, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 402, 403, 407, 408, 409, 412, 424, 434, 435, 438, 439, 441, 451, 454, 456, 458, 461, 480, 481, 482, 484, 495, 496, 498, 499, 502, 503, 505, 506, 507, 508, 512, 513, 515, 516, 517, 520, 522, 523, 529, 534, 536, 537, 539, 542], "numer": [14, 22, 25, 223, 262, 273, 274, 279, 280, 282, 283, 284, 305, 306, 307, 328, 347, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 391, 393, 395, 413, 414, 415, 416, 417, 418, 419, 420, 434, 441, 443, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 497, 532], "numpi": [16, 233, 235, 362, 365, 424, 430, 431, 434, 441, 446, 459, 491, 494, 501, 513, 515, 522, 532, 542], "o": [3, 216, 229, 335, 384, 387, 462, 463, 500], "obj": 431, "objdet": [219, 220, 221, 222, 223, 224, 225, 227, 228], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "observ": 415, "obtain": [1, 109], "occur": [15, 304, 425, 428, 429, 503], "occurr": 23, "odot": [346, 349, 350, 351, 352], "off": [44, 124, 426], "offer": [4, 10, 41, 42, 44, 54, 68, 90, 99, 110, 111, 114, 124, 132, 133, 135, 137, 202, 214, 399, 411, 440, 500, 542], "offset": [223, 224, 458], "often": [23, 160, 161, 253, 254, 255, 257, 258, 260, 299, 301, 341, 347, 362, 365, 454, 464, 532, 536, 540, 542], "old": 408, "older": 418, "onc": [213, 215, 216, 217], "one": [0, 11, 14, 175, 176, 177, 178, 183, 212, 239, 240, 249, 253, 256, 272, 291, 295, 305, 306, 307, 329, 330, 331, 338, 341, 350, 362, 365, 367, 371, 382, 385, 397, 400, 425, 427, 428, 431, 437, 452, 459, 460, 463, 480, 482, 504, 514, 521, 526, 532], "ones": [16, 270, 272, 289, 290, 338, 339, 340, 359, 367, 368, 369, 371, 372, 373, 374, 380, 381, 399, 458, 459, 463, 466, 502], "ones_lik": 466, "onli": [298, 299, 303, 324, 327, 346, 347, 349, 350, 351, 352, 361, 362, 365, 367, 368, 369, 371, 372, 373, 374, 385, 386, 387, 421, 425, 426, 431, 454, 472, 480, 482, 491, 494, 500, 513, 514, 516, 517, 520, 523, 524, 525], "onto": [26, 28, 217], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 109, 138, 149, 150, 169, 170, 171, 172, 173, 174, 217, 233, 234, 237, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 260, 263, 267, 270, 272, 285, 286, 287, 291, 292, 293, 295, 296, 297, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 336, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 354, 357, 358, 359, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 399, 425, 426, 427, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 456, 457, 462, 464, 476, 478, 479, 480, 481, 482, 484, 486, 488, 490, 491, 494, 496, 503, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 532, 534, 540, 543, 544], "operand": 441, "operatornam": [23, 25, 335, 391, 392, 393, 394, 395, 434, 498, 499, 500], "opposit": [412, 517], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 69, 75, 84, 85, 86, 87, 88, 92, 93, 94, 95, 98, 101, 102, 103, 104, 116, 117, 121, 122, 124, 125, 126, 127, 130, 190, 191, 215, 233, 235, 238, 239, 260, 338, 339, 340, 389, 399, 402, 403, 404, 405, 406, 407, 408, 409], "optimizer_st": [400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 245, 249, 252, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 326, 331, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 420, 422, 432, 434, 435, 436, 437, 439, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 472, 480, 481, 482, 484, 490, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 511, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 532, 536, 537, 539, 543], "ord": [24, 284], "order": [1, 3, 10, 16, 24, 28, 236, 237, 238, 239, 240, 434, 453, 495, 500, 518, 523, 527, 531], "ordered_dict": 240, "ordereddict": [234, 236, 237, 240, 430, 431], "organ": [55, 236, 237, 238, 240, 429], "orient": 542, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 94, 104, 108, 184, 185, 195, 217, 218, 261, 304, 311, 333, 425, 471, 477, 500, 502, 513, 514, 515, 516, 517, 518, 522, 523, 527, 528, 540], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [412, 420, 422], "other": [2, 3, 22, 57, 59, 61, 94, 103, 105, 108, 124, 128, 217, 233, 234, 237, 240, 316, 317, 346, 347, 399, 400, 426, 440, 454, 456, 462, 464, 494, 511, 523, 542], "otherwis": [152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 215, 242, 245, 246, 247, 249, 263, 322, 324, 325, 326, 327, 329, 331, 348, 349, 350, 351, 352, 363, 382, 383, 384, 385, 386, 387, 392, 394, 400, 421, 429, 447, 448, 480, 482, 498, 499, 510, 523, 524, 525, 527], "otim": [25, 270, 357], "out": [0, 3, 4, 10, 16, 218, 219, 220, 221, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 316, 317, 320, 321, 336, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 354, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393, 412, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 499, 500, 503, 504, 508, 513, 514, 515, 516, 520, 521, 522, 524, 525, 528, 529, 530, 543], "out_channel": [105, 117, 121, 122, 219, 237, 240, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 368, 369, 382, 383, 384, 385, 386, 387, 399], "out_featur": [236, 237, 240, 270, 272, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 339, 340, 346, 349, 350, 357, 359, 361, 362, 363, 364, 365, 367, 371, 374, 382, 383, 384, 385, 386, 387], "outcom": [536, 537, 539], "outer": [11, 466], "outlier": [275, 363], "outputoutput_height": 260, "output_lay": [237, 240], "output_pad": [256, 257, 258, 341, 342, 343], "output_s": [220, 221, 237, 285, 286, 287, 288, 289, 290, 376, 377, 378, 379, 380, 381], "output_width": 260, "output_with_norm": [301, 389], "output_with_pad": [301, 389], "outsid": [0, 348, 425], "over": [0, 1, 2, 3, 11, 14, 17, 116, 126, 149, 150, 179, 209, 213, 214, 217, 227, 228, 234, 237, 239, 249, 285, 286, 287, 288, 289, 290, 311, 331, 338, 339, 340, 341, 342, 343, 362, 365, 367, 368, 369, 371, 372, 373, 374, 377, 378, 381, 382, 383, 384, 385, 386, 387, 401, 403, 409, 412, 413, 414, 415, 416, 435, 439, 453, 480, 481, 482, 490, 494, 496, 536, 537, 539], "overal": [207, 263], "overdetermin": 25, "overfit": [1, 29, 209, 264, 267, 347, 349, 350, 351, 352, 412, 415, 420, 422], "overhead": [104, 117, 311], "overlap": [104, 109, 218, 222, 228], "overli": 328, "overrid": [2, 3, 55, 112, 113, 124, 125, 126, 184, 185, 500], "overridden": [234, 400], "overshoot": 401, "overwrit": [236, 238], "own": [4, 16, 215, 236, 237, 238, 239, 253, 254, 255, 256, 257, 321, 399, 534], "p": [24, 25, 74, 235, 238, 239, 261, 262, 263, 264, 265, 266, 267, 284, 301, 344, 346, 347, 349, 350, 351, 352, 382, 385, 386, 389, 536, 537, 539, 542], "p_": 216, "p_d": [384, 387], "p_h": [344, 383, 384, 387], "p_w": [344, 383, 384, 387], "packag": [2, 3, 4, 10, 17, 212, 399, 411, 429, 438, 440, 532, 542, 544], "pad": [105, 213, 217, 218, 237, 240, 253, 254, 255, 256, 257, 258, 260, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 299, 301, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 344, 368, 369, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 509, 543], "pad_after_dim1": 513, "pad_after_dim2": 513, "pad_before_dim1": 513, "pad_before_dim2": 513, "pad_width": 513, "padding_height": 260, "padding_idx": [301, 389], "padding_mod": 299, "padding_width": 260, "pair": 270, "panda": [16, 104], "pang": 104, "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 138], "paradigm": 104, "parallel": [1, 3, 55, 104, 179, 229, 335], "param": [234, 235, 238, 239, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "param1": 234, "param_dict": 238, "param_group": [400, 411], "param_groups_setup": 400, "param_list": 239, "param_s": 429, "paramet": [0, 2, 16, 104, 106, 107, 108, 216, 229, 234, 399, 400, 401, 411, 440, 542, 544], "parameter": 118, "parameterdict": 241, "parameterlist": 241, "parent": [16, 399, 441], "pars": 424, "part": [233, 234, 256, 321, 341, 342, 389, 399, 426, 440, 454, 455, 458, 462, 463, 464, 465, 502, 519, 524, 525, 532, 542], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 242, 243, 245, 246, 247, 248, 249, 250, 270, 272, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 346, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 508, 510, 511, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 528, 529, 530], "particip": [16, 235, 532], "particular": [236, 238], "particularli": [25, 55, 57, 59, 61, 109, 116, 124, 163, 164, 165, 166, 167, 168, 214, 237, 238, 239, 240, 249, 262, 272, 305, 306, 307, 308, 309, 310, 331, 359, 362, 365, 371, 372, 373, 374, 402, 416, 426, 429, 461, 477, 531], "partit": [109, 380, 471, 519], "pascal": [214, 215], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 197, 198, 199, 200, 209, 215, 217, 218, 234, 235, 236, 237, 238, 239, 240, 298, 303, 305, 306, 307, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 339, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 425, 441, 459, 460, 461, 481, 490, 494, 495, 496, 500, 503, 508, 514, 516, 520, 524, 525, 529, 532, 542], "past": [412, 413, 415, 420], "patch": [55, 57, 59, 61, 104, 109, 128, 129, 184, 185, 201, 202, 203, 204, 205, 206, 218, 260, 344, 383], "patch_norm": [184, 185], "patch_siz": [55, 128, 129, 135, 136, 137, 138, 139, 140, 141, 184, 185, 201, 202, 203, 204, 205, 206], "path": [3, 5, 6, 7, 8, 40, 41, 55, 88, 96, 109, 129, 263, 348, 430, 431], "pathlib": 431, "pathwai": 104, "patienc": 408, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 104, 212, 216, 246, 311, 327, 338, 339, 340, 354], "pedagog": 16, "penal": [412, 420, 422], "penalti": [413, 414, 415, 416, 417, 418, 419], "penros": 25, "per": [1, 13, 113, 117, 129, 135, 136, 137, 139, 140, 141, 163, 164, 165, 166, 167, 168, 180, 181, 182, 213, 216, 217, 218, 219, 222, 252, 285, 289, 335, 344, 354, 371, 372, 373, 374, 376, 381, 395, 403, 501], "perceptron": 96, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 66, 67, 68, 75, 84, 85, 86, 87, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 117, 118, 119, 120, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 159, 175, 176, 177, 178, 179, 185, 191, 192, 193, 196, 205, 209, 212, 217, 220, 221, 232, 234, 235, 239, 243, 252, 253, 254, 255, 256, 257, 258, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 338, 339, 340, 341, 342, 344, 346, 349, 350, 351, 352, 354, 357, 358, 359, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 397, 400, 401, 405, 408, 425, 426, 438, 440, 442, 443, 446, 449, 452, 453, 476, 480, 482, 484, 490, 495, 501, 519, 530, 531, 533, 535, 540, 542], "period": 402, "permut": [13, 354, 433, 453, 495], "persist": [233, 432, 435, 436, 437, 439, 456, 457], "perturb": [20, 27, 28, 542], "phase": [31, 215], "phi": [243, 323], "pi": [243, 323, 402, 473, 486, 492], "pick": [299, 500], "pickl": [430, 431], "pico": [52, 104], "piecewis": [324, 325], "pil": [532, 542], "pinv": 21, "pioneer": 104, "pip": 16, "pipelin": [5, 6, 7, 8, 215, 217, 218, 222, 227, 354, 440, 531, 532, 534], "pixel": [5, 6, 7, 8, 218, 222, 298, 299, 303, 397, 534, 536], "pixel_scal": 218, "place": [213, 314, 316, 317, 318, 319, 320, 321, 434, 441, 484, 510, 517], "placehold": [234, 358], "placement": [16, 441], "plai": 440, "platform": 424, "plot": [511, 543], "plt": 543, "point": [4, 221, 304, 407, 425, 426], "pointwis": [308, 309, 310], "pool": [10, 29, 88, 104, 105, 106, 107, 108, 109, 142, 151, 162, 169, 179, 196, 209, 213, 216, 217, 218, 220, 221, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 311, 312, 339, 340, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 480, 482], "pool1": 240, "pool2": 240, "pool_siz": [88, 213, 217], "poorli": 22, "popul": 234, "popular": [4, 104], "portabl": 431, "portion": [502, 524, 525, 542], "pose": 25, "posit": [1, 18, 23, 31, 104, 184, 185, 201, 227, 230, 234, 240, 252, 304, 322, 326, 327, 329, 336, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 421, 427, 451, 502, 510, 515, 518, 522, 523, 530, 535], "possibl": 542, "post": 228, "potenti": [25, 358, 420, 520], "power": [10, 16, 23, 51, 104, 114, 116, 121, 122, 129, 130, 132, 136, 139, 142, 190, 203, 311, 354, 401, 427, 466, 484, 531, 532, 542], "pp": [104, 229], "practic": [25, 99, 362, 365], "practition": 542, "pre": [31, 84, 85, 86, 87, 104, 152, 156, 157, 215], "preactbottleneck": [152, 156, 157], "preced": [104, 235, 397], "precis": [140, 218, 424, 459, 484], "precomput": 217, "preconfigur": [76, 77, 78, 79, 80, 81, 82, 83, 102, 103, 113], "pred": [16, 428], "predecessor": [41, 129], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 186, 187, 188, 189, 190, 192, 193, 194, 195, 202, 203, 204, 205, 206, 212, 237, 329, 389, 401, 424], "predict": [55, 104, 184, 186, 187, 188, 189, 207, 212, 213, 217, 218, 223, 228, 361, 362, 364, 365], "prefer": 409, "prefix": [234, 429], "prepar": [3, 427, 513, 515, 522, 532, 542], "prepend": [234, 501], "preprint": 104, "preprocess": [3, 4, 260, 304, 440, 484, 531, 532, 542], "present": [361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 383], "preserv": [14, 104, 130, 221, 261, 263, 299, 304, 346, 348, 434, 454, 455, 458, 462, 463, 464, 465, 481, 490, 491, 496, 498, 499, 500, 502, 517, 527], "preset": [4, 110, 111, 112, 113], "pretrain": [214, 215], "prevent": [1, 10, 16, 109, 223, 236, 237, 238, 239, 240, 252, 264, 267, 284, 328, 336, 347, 349, 350, 351, 352, 361, 362, 394, 395, 401, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 428], "previou": [104, 412, 421, 425, 428], "previous": [405, 415, 430], "primarili": 240, "principl": 104, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 424, 425, 426, 427, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 501, 502, 503, 504, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540], "print_grad": 441, "prior": [222, 425], "priorit": [121, 122, 126, 312, 324], "prob": 432, "probabilist": 440, "probabl": [74, 94, 128, 184, 185, 201, 213, 217, 230, 243, 249, 252, 261, 262, 263, 264, 265, 266, 267, 273, 323, 331, 335, 336, 346, 347, 348, 349, 350, 351, 352, 361, 362, 365, 391, 393, 395, 432, 505, 507, 536, 537, 539, 542], "problem": [25, 26, 28, 104, 245, 322, 326, 419], "proce": [214, 215], "proceed": [104, 216], "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 102, 104, 109, 128, 149, 150, 151, 179, 184, 208, 209, 213, 218, 228, 229, 239, 253, 254, 255, 282, 304, 305, 306, 307, 311, 312, 329, 333, 338, 340, 357, 367, 368, 369, 371, 372, 373, 374, 382, 384, 385, 387, 391, 392, 394, 412, 511, 532, 533, 534, 535, 540, 542], "produc": [16, 29, 209, 213, 218, 285, 286, 287, 288, 289, 311, 338, 339, 340, 376, 377, 378, 379, 380, 425, 434, 438, 440], "product": [11, 26, 28, 128, 129, 252, 325, 330, 332, 335, 336, 357, 374, 399, 444, 445, 449, 450, 453], "profil": 425, "program": [426, 440], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "proj_drop_r": 88, "project": [26, 28, 55, 57, 59, 61, 65, 88, 109, 128, 129, 134, 135, 136, 137, 139, 140, 141, 184, 185, 217, 230, 335], "projector": 25, "promin": [382, 384, 385, 386, 387], "promot": [240, 362, 365, 399], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 104, 227, 234, 240, 270, 272, 298, 303, 311, 341, 383, 384, 420, 421, 432, 444, 445, 446, 450, 453, 480, 482, 498, 499, 500, 502, 511, 512, 513, 516, 518, 523, 526, 527, 528, 543, 544], "proper": [301, 502, 523], "properli": [0, 215, 239, 249, 331, 399, 401], "properti": [17, 19, 22, 23, 243, 247, 261, 323, 329, 346, 414, 419, 425, 431], "proport": [5, 6, 7, 8, 496], "proportion": 540, "propos": [138, 213, 216, 217, 218, 222], "proposal_gener": 217, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 92, 93, 94, 101, 104, 105, 118, 124, 127, 130, 132, 133, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 184, 185, 193, 196, 201, 203, 204, 207, 208, 210, 212, 213, 214, 215, 230, 234, 236, 237, 238, 239, 243, 252, 272, 286, 287, 301, 304, 336, 354, 361, 362, 363, 365, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 397, 399, 400, 401, 405, 406, 411, 412, 413, 420, 422, 426, 431, 438, 440, 441, 446, 454, 463, 480, 482, 495, 497, 507, 515, 520, 522, 542, 543, 544], "pseudo": [22, 25], "purpos": [42, 47, 51, 435, 439, 454, 462, 464], "pvt": [129, 130, 131, 132, 133, 134], "pvt_huge": 104, "pvt_larg": 104, "pvt_medium": 104, "pvt_small": 104, "pvt_tini": 104, "pvt_v2": [135, 136, 137, 138, 139, 140, 141], "pvt_v2_b0": 104, "pvt_v2_b1": 104, "pvt_v2_b2": [104, 138], "pvt_v2_b2_li": 104, "pvt_v2_b3": 104, "pvt_v2_b4": 104, "pvt_v2_b5": 104, "pvtv2": [104, 135, 136, 137, 138, 139, 140, 141], "pypi": 16, "pyramid": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 213, 214, 215, 219, 220], "python": [16, 424, 430, 431, 441, 459], "pytorch": [16, 497], "q": [26, 55, 104, 109, 129, 252, 335, 336, 395], "q_1": 55, "q_i": [31, 335], "qk": [31, 55, 109, 393, 395], "qk_scale": [55, 128, 129, 184, 185], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 128, 129, 135, 136, 137, 139, 140, 141, 184, 185], "qr": 21, "quad": [25, 55, 223, 301, 335, 341, 361, 362, 363, 364, 365, 385, 386, 387, 392, 394, 442, 443, 447, 448, 449, 452, 524, 525, 533], "quadrat": [129, 138, 363], "qualifi": 408, "quanfu": 104, "quantiz": 221, "queri": [55, 65, 128, 129, 135, 136, 137, 139, 140, 141, 184, 185, 252, 335, 336, 395], "quick": [425, 544], "quickli": 401, "quicksort": [500, 518], "quoc": 104, "quotient": 443, "r": [14, 15, 26, 31, 104, 214, 215, 222, 298, 299, 335, 341, 342, 519, 536, 537, 538, 539], "r_t": 419, "radam": 423, "radix": [142, 143, 144, 145, 146, 147, 148, 149, 150, 500], "rais": [0, 1, 2, 11, 234, 399, 400, 430, 451, 501], "rameswar": 104, "rand": [433, 440, 543], "randint": [433, 440], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 119, 120, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 196, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 252, 308, 309, 310, 311, 312, 335, 336, 341, 342, 343, 354, 391, 392, 393, 394, 395, 399, 433, 438, 440, 543], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 119, 120, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 181, 182, 183, 207, 213, 214, 215, 217, 218, 219, 220, 221, 222, 252, 308, 309, 310, 311, 312, 335, 348, 354, 389, 391, 392, 393, 394, 395, 535, 536, 537, 538, 539, 542, 543], "random_integ": 440, "random_tensor": 440, "randomcrop": [541, 542], "randomgrayscal": [541, 542], "randomhorizontalflip": [541, 542], "randomli": [1, 261, 263, 264, 265, 266, 267, 304, 346, 349, 350, 351, 352, 434, 535, 536, 537, 538, 539, 542], "randomnoisedataset": [0, 1, 2], "randomrot": [541, 542], "randomverticalflip": 541, "rang": [0, 1, 16, 17, 31, 44, 53, 88, 90, 104, 109, 127, 131, 151, 159, 194, 215, 229, 239, 248, 250, 253, 254, 263, 274, 278, 298, 299, 321, 328, 330, 333, 348, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 420, 422, 432, 434, 436, 461, 468, 469, 472, 505, 506, 507, 534, 538, 542], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 74, 75, 88, 96, 109, 128, 129, 184, 185, 214, 215, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "rather": [7, 13, 15, 238, 239, 354, 407, 416, 516], "ratio": [55, 74, 88, 96, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 169, 184, 185, 213, 311, 312, 540], "ravel": 509, "raw": [249, 331, 362, 430, 431, 441], "rceil": 471, "rcnn": [216, 218], "rcond": 25, "re": [16, 235], "reach": [290, 380, 407], "readabl": [10, 16, 236, 237, 238, 240, 354, 399], "readi": [3, 175, 176, 177, 178, 183, 212, 230], "real": [25, 28, 116, 216, 330], "realist": 212, "rearrang": [12, 260, 355, 356], "reassembl": 104, "recalibr": [104, 170, 172, 173, 175, 176, 177, 178, 311], "receiv": [385, 386, 387, 513, 523, 524, 525], "recent": 420, "recept": [104, 109, 138, 179, 183, 312], "reciproc": [25, 466, 478, 479, 488], "recogn": 55, "recognit": [104, 108, 132, 149, 150, 184, 186, 187, 188, 189, 195, 216, 339], "recommend": [16, 114], "reconstruct": [223, 258, 518], "rectangular": 458, "rectif": 419, "rectifi": [245, 246, 326, 327, 419], "recurr": [229, 237, 374], "recurs": 234, "red": [536, 543], "reduc": [12, 29, 31, 65, 88, 104, 115, 129, 138, 151, 162, 179, 196, 209, 215, 289, 308, 309, 310, 311, 367, 368, 369, 371, 372, 373, 382, 383, 384, 385, 386, 387, 401, 404, 407, 408, 409, 418, 421, 428, 480, 481, 482, 490, 496, 498, 499, 536], "reducelronplateau": 410, "reduct": [10, 11, 14, 28, 74, 104, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 169, 273, 274, 275, 277, 278, 311, 312, 361, 362, 363, 364, 365, 402, 408, 409, 453, 480, 482], "redund": [217, 218], "reevalu": 400, "ref_box": 223, "refer": [4, 57, 59, 61, 138, 220, 223, 234, 341, 440, 455, 458, 460, 503], "refin": [104, 193, 213, 401], "reflect": [131, 298, 299, 426], "regardless": [25, 514], "region": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 124, 160, 161, 163, 164, 165, 166, 167, 168, 208, 233, 234, 235, 239, 399, 429, 441], "register_buff": 233, "register_hook": 441, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 119, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 214, 215, 231, 232], "register_paramet": 234, "registr": [16, 234, 399], "registri": [163, 164, 165, 166, 167, 168, 429], "registry_path": 429, "regress": [4, 213, 216, 217, 218, 223, 224, 277, 363, 364], "regul": [301, 389], "regular": [25, 29, 40, 74, 75, 94, 184, 185, 209, 263, 267, 336, 347, 349, 350, 351, 352, 407, 409, 412, 413, 414, 417, 418, 419, 420, 422], "reimagin": 104, "rel": [31, 104, 184, 185, 213, 223, 401, 408, 500], "relat": [431, 458, 462], "relationship": [31, 130, 132, 540], "releas": 544, "relev": [303, 412, 420, 422], "reli": [262, 430], "reliabl": [5, 6, 7, 8], "reliant": [349, 350, 351, 352], "reload": 215, "relu": [16, 29, 104, 169, 196, 209, 213, 217, 218, 236, 237, 238, 240, 242, 244, 245, 269, 305, 306, 307, 311, 312, 316, 317, 320, 321, 322, 326, 328, 332, 334, 338, 339, 340, 341, 342, 343, 356, 357, 358, 359, 391, 393, 395], "relu1": 240, "relu2": 240, "relu3": 240, "relu6": [334, 356], "remain": [5, 6, 7, 8, 16, 53, 88, 91, 225, 233, 263, 283, 346, 348, 349, 350, 351, 352, 389, 421], "rememb": 440, "remov": [217, 218, 228, 429, 520, 526], "ren": 216, "render": 544, "reorder": [10, 13, 354, 491, 517], "rep": 522, "repeat": [11, 12, 509, 511, 522], "repetit": [10, 15, 434, 515, 522], "replac": [7, 57, 59, 61, 213, 217, 229, 391, 440, 510, 536], "replic": [15, 16, 344, 392, 394, 501], "repr": 424, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 66, 67, 68, 105, 118, 128, 134, 143, 144, 145, 146, 147, 148, 223, 225, 227, 228, 234, 235, 240, 270, 272, 279, 282, 283, 298, 301, 338, 339, 340, 354, 357, 359, 362, 365, 374, 389, 392, 400, 409, 411, 412, 418, 419, 420, 421, 422, 424, 430, 432, 442, 443, 449, 452, 455, 481, 494, 495, 496, 506, 507, 511, 512, 533, 535, 537, 538, 539, 540], "represent": [31, 104, 112, 129, 130, 131, 132, 133, 136, 140, 141, 142, 149, 150, 160, 161, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 183, 201, 219, 230, 301, 311, 383, 386, 389, 400, 544], "reproduc": [432, 434, 435, 436, 437, 438, 439, 440, 542], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 100, 113, 117, 123, 124, 125, 126, 127, 143, 144, 145, 146, 147, 148, 163, 164, 165, 166, 167, 168, 179, 204, 206, 224, 232, 233, 236, 240, 242, 243, 245, 246, 247, 248, 250, 270, 272, 303, 311, 312, 321, 341, 358, 362, 365, 399, 407, 426, 428, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 501, 503, 508, 510, 511, 513, 514, 515, 516, 520, 521, 522, 528, 529, 532, 533, 540, 543], "requires_grad": [16, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 260, 270, 272, 298, 299, 301, 303, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 397, 399, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 501, 502, 503, 508, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 543], "rescal": [273, 274, 278, 361, 362, 365], "research": [16, 399], "resembl": 212, "reset": [235, 402, 438, 441], "reshap": [10, 13, 169, 272, 339, 340, 354, 397, 427, 453, 491, 509, 514], "resid": 441, "residu": [88, 95, 101, 102, 103, 104, 109, 116, 117, 120, 129, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 393, 395], "residualblock": 151, "resili": 421, "resiz": [218, 220, 303, 531, 541, 542], "resnest": [143, 144, 145, 146, 147, 148, 149, 150], "resnest_101": 104, "resnest_14": 104, "resnest_200": 104, "resnest_26": 104, "resnest_269": 104, "resnest_50": 104, "resnest_50_1s4x24d": 104, "resnest_50_4s2x40d": 104, "resnet": [57, 59, 61, 101, 102, 103, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 179, 180, 181, 182, 214, 215, 216, 311], "resnet_1001": 104, "resnet_101": 104, "resnet_152": 104, "resnet_18": 104, "resnet_200": 104, "resnet_269": 104, "resnet_34": 104, "resnet_50": [104, 215], "resnet_arg": 179, "resnext": [163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 183], "resnext_101_32x16d": 104, "resnext_101_32x32d": 104, "resnext_101_32x4d": 104, "resnext_101_32x8d": 104, "resnext_101_64x4d": 104, "resnext_50_32x4d": 104, "resolut": [31, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 96, 104, 109, 110, 111, 114, 129, 130, 138, 175, 176, 177, 178, 183, 185, 218, 219, 220, 256, 257, 441], "resolv": [13, 14, 15, 354, 424], "resourc": [16, 45, 46, 48, 49, 52, 53, 97, 104, 117, 121, 122, 123, 124, 125, 126, 127, 204], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 105, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 224, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 270, 272, 298, 303, 312, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 344, 346, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 472, 476, 478, 479, 480, 481, 482, 486, 488, 490, 494, 495, 496, 511, 513, 515, 522, 536], "respons": [104, 175, 176, 177, 178, 236, 280, 370, 411], "rest": [524, 525], "restor": [311, 405, 425, 428], "restructur": 516, "result": [10, 11, 13, 15, 18, 22, 23, 25, 104, 234, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 260, 270, 272, 285, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 312, 324, 328, 331, 335, 348, 354, 399, 400, 426, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 497, 503, 505, 507, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 527, 528, 529, 532, 535, 536, 542], "resum": [402, 403, 404, 405, 406, 407, 408, 409, 411], "retain": [88, 104, 129, 235, 262, 347, 441, 454, 459, 460, 464, 480, 481, 482, 490, 496, 498, 499, 502, 510, 524, 525, 532], "retent": 532, "rethink": 104, "retriev": [0, 2, 236, 238, 239, 301, 523], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 101, 105, 113, 114, 125, 127, 169, 213, 217, 218, 233, 234, 236, 237, 238, 239, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 392, 394, 399, 400, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 429, 531, 542], "return_invers": 527, "reus": [104, 214, 217, 532], "reusabl": [240, 348, 399, 531], "rev": [341, 342], "revers": [16, 240, 441, 495, 518, 537, 539], "revolution": 104, "rfloor": [344, 409, 477], "rgb": [5, 6, 31, 65, 93, 94, 95, 102, 103, 113, 114, 128, 184, 185, 218], "rho": 413, "rho_": 419, "rho_t": 419, "rich": [16, 140, 216, 219], "richer": 130, "right": [23, 24, 25, 27, 28, 31, 55, 109, 220, 224, 243, 249, 284, 323, 331, 335, 344, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 385, 386, 387, 393, 395, 491, 500, 533, 543], "rightarrow": [13, 335, 354, 519], "rmsprop": 423, "rob": 104, "robust": [42, 47, 98, 125, 194, 195, 262, 304, 346, 349, 350, 351, 352, 363, 399, 413, 535, 536, 538, 542], "roi": [213, 216, 217, 220, 221], "roi_align": 221, "roi_cls_loss": 213, "roi_reg_loss": 213, "roialign": [217, 226], "roipool": 217, "roland": 7, "role": [440, 542], "roll": 509, "root": [4, 5, 6, 7, 8, 414, 420, 488, 543], "ross": [216, 218], "rotat": [269, 302, 538, 542], "rotated_imag": 304, "round": [466, 471, 477], "rout": [385, 386, 387, 523], "row": [19, 20, 22, 27, 221, 227, 272, 301, 458, 511, 512, 518, 524, 525, 529], "rpn": [213, 216], "rpn_cls_loss": 213, "rpn_reg_loss": 213, "rprop": 423, "rule": [15, 16, 22, 23, 343, 354, 427, 442, 443, 447, 448, 449, 451, 452, 459], "run": [16, 233, 279, 282, 305, 306, 307, 367, 368, 369, 371, 372, 373, 413, 425, 438, 440], "running_mean": [233, 279, 282, 367, 368, 369, 371, 372, 373], "running_var": [279, 282, 367, 368, 369, 371, 372, 373], "runtim": [11, 75, 237, 240, 348, 399, 461], "s_": 421, "s_0": 220, "s_1": [453, 519], "s_2": 519, "s_d": [384, 387], "s_h": [344, 383, 384, 387], "s_i": 519, "s_k": 453, "s_n": 519, "s_w": [344, 383, 384, 387], "safe": [425, 428], "safeguard": 284, "sain": 104, "same": [19, 20, 22, 23, 27, 137, 219, 224, 249, 261, 262, 263, 264, 265, 266, 267, 279, 280, 282, 283, 284, 286, 287, 304, 305, 306, 307, 308, 309, 310, 312, 328, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 358, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 421, 424, 432, 438, 440, 446, 457, 460, 463, 465, 471, 476, 477, 480, 481, 482, 484, 491, 500, 503, 508, 510, 514, 516, 518, 520, 521, 524, 525, 527, 529, 534], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 84, 85, 86, 87, 93, 94, 95, 102, 103, 105, 106, 107, 108, 119, 120, 142, 143, 144, 145, 146, 147, 148, 149, 150, 175, 176, 177, 178, 183, 220, 221, 285, 286, 287, 298, 299, 316, 317, 318, 319, 320, 321, 346, 349, 350, 351, 352, 357, 359, 362, 365, 374, 376, 377, 378, 432, 437, 440, 461, 507, 533, 535, 537, 538, 539, 540], "sampling_ratio": [220, 221], "sandbox": 16, "sandler": 104, "satisfi": [18, 20, 27, 519], "satur": [322, 542], "save": [2, 214, 215, 233, 235, 400, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430], "scalabl": [3, 47, 74, 104, 163, 164, 165, 166, 167, 168, 185, 207, 399], "scalar": [16, 19, 24, 273, 274, 275, 277, 278, 432, 441, 459, 460, 510], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 66, 67, 68, 69, 74, 75, 88, 96, 102, 104, 106, 107, 108, 109, 110, 111, 114, 115, 119, 123, 124, 126, 127, 128, 129, 130, 134, 138, 141, 142, 149, 150, 152, 153, 154, 157, 170, 171, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 213, 214, 217, 218, 219, 220, 221, 222, 224, 242, 247, 249, 252, 263, 279, 280, 282, 283, 301, 311, 312, 320, 321, 322, 324, 326, 329, 330, 331, 333, 335, 336, 346, 348, 349, 350, 351, 352, 362, 367, 368, 369, 370, 371, 372, 373, 374, 389, 397, 403, 406, 412, 414, 415, 416, 440, 496, 540], "scale_by_keep": [263, 348], "scale_factor": 397, "scale_fn": 403, "scaled_dot_product_attent": [251, 269], "scaleddotproductattent": [337, 356], "scenario": [45, 50, 52, 124, 125, 126, 127, 138, 238, 239, 374, 402, 403, 409, 416, 417, 532, 536], "schedul": [347, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412], "scientif": 427, "score": [151, 162, 179, 213, 217, 218, 228, 249, 252, 336, 362, 453], "score_thresh": 218, "scratch": [16, 215], "script": 440, "se": [74, 104, 170, 171, 172, 173, 174, 175, 176, 177, 178], "se_resnet_101": 104, "se_resnet_152": 104, "se_resnet_18": 104, "se_resnet_34": 104, "se_resnet_50": 104, "se_resnext_101_32x4d": 104, "se_resnext_101_32x8d": 104, "se_resnext_101_64x4d": 104, "se_resnext_50_32x4d": 104, "se_scal": 74, "seamless": [0, 1, 3, 4, 14, 354, 399, 440], "seamlessli": [3, 4, 10, 13, 15, 17, 235, 237, 240, 399, 542], "search": [104, 216, 218], "second": [20, 129, 140, 237, 238, 270, 311, 357, 415, 416, 417, 418, 419, 427, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 491, 508, 511, 523, 539], "section": 446, "see": [16, 446], "seed": [432, 433, 434, 435, 436, 437, 439, 440, 542], "seek": [16, 127], "seen": 413, "segment": [104, 141, 190, 191, 192, 193, 194, 195, 216, 222, 257, 258, 342, 343], "select": [14, 15, 104, 179, 180, 181, 182, 183, 213, 216, 218, 220, 303, 311, 312, 385, 387, 403, 490, 500, 523, 530], "selectivekernel": 313, "selectivesearch": 226, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 66, 67, 68, 74, 75, 88, 92, 96, 101, 104, 105, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 169, 184, 185, 196, 201, 209, 213, 217, 218, 221, 229, 230, 233, 234, 235, 236, 237, 238, 239, 247, 263, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 395, 399, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 441, 510, 517, 531, 532], "selfattent": 395, "selu": [244, 261, 269, 334, 346, 356], "selunetwork": 329, "semant": [55, 139, 216, 219, 342], "semodul": 313, "senet": [170, 171, 172, 173, 174, 175, 176, 177, 178], "sens": 212, "sensit": [275, 363, 367, 368, 369], "sentenc": 212, "sentiment": [4, 212], "separ": [0, 55, 88, 104, 115, 149, 150, 207, 214, 253, 254, 255, 257, 308, 309, 310, 371, 372, 373], "seq_len": [252, 335, 336, 391, 392, 393, 394, 395], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "sequenti": [29, 101, 105, 169, 196, 207, 209, 213, 217, 218, 229, 236, 237, 241, 253, 305, 306, 307, 354, 358, 392, 394, 531, 542], "seri": [92, 106, 107, 109, 137, 139, 179, 253, 305, 338, 382, 385], "serial": [215, 233, 234, 411, 431], "serv": [3, 7, 16, 69, 101, 169, 196, 230, 234, 236, 237, 238, 239, 240, 399, 421, 441, 532], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 90, 91, 123, 124, 125, 130, 149, 150, 160, 161, 175, 176, 177, 178, 183, 213, 214, 217, 223, 224, 227, 235, 239, 252, 253, 254, 255, 257, 301, 326, 327, 329, 336, 338, 339, 340, 346, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 389, 400, 415, 416, 420, 432, 435, 436, 437, 438, 439, 440, 454, 456, 457, 459, 460, 464, 465, 480, 482, 497, 498, 499, 500, 510, 524, 525, 527, 532, 536, 542], "setup": [4, 112, 113, 163, 164, 165, 166, 167, 168, 215], "sever": [25, 338, 339, 340, 382, 383, 384, 385, 386, 387, 531, 542], "sgd": [16, 215, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 419, 423], "sgn": 24, "shaoq": 216, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 96, 97, 98, 99, 100, 101, 104, 105, 109, 110, 111, 112, 113, 114, 117, 121, 122, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 180, 181, 182, 183, 196, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 399, 403, 427, 432, 434, 435, 436, 437, 439, 440, 441, 444, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 471, 472, 477, 478, 479, 480, 481, 482, 484, 486, 488, 490, 491, 495, 496, 498, 499, 500, 501, 503, 504, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 525, 527, 529, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543], "shapelik": 436, "share": [55, 104, 216, 217, 218], "sharp": 403, "shen": 311, "shift": [104, 109, 184, 185, 186, 187, 188, 189, 190, 193, 194, 218, 279, 280, 282, 283, 324, 367, 368, 369, 370, 371, 372, 373, 374, 517], "shorthand": 446, "should": [13, 14, 15, 16, 88, 105, 213, 214, 215, 233, 298, 354, 391, 392, 393, 394, 395, 407, 432, 434, 435, 436, 437, 439, 441, 456, 457, 468, 469, 494, 501, 513, 531], "show": [299, 426, 429, 543, 544], "shown": [55, 332, 438], "shrink": 413, "shuffl": [1, 2, 3, 434], "side": [27, 237, 240, 253, 254, 255, 256, 257, 291, 292, 293, 295, 296, 297, 305, 306, 307, 338, 339, 340, 341, 342, 343, 344, 382, 383, 384, 385, 386, 387], "sigma": [25, 31, 311, 316, 318, 320, 330, 332, 367, 368, 369, 371, 372, 373, 374, 495], "sigma_c": 534, "sigma_i": 25, "sigmoid": [244, 269, 311, 316, 317, 320, 321, 324, 325, 332, 334, 356, 361], "sigmoidnetwork": 330, "sign": [23, 363, 421, 466], "signal": [305, 338, 339, 340, 367, 371, 382, 383, 384, 385, 386, 387], "signific": 43, "significantli": [104, 114, 116, 138, 139, 140, 141, 162, 192, 311, 531], "silicon": [16, 114, 424], "sim": [346, 349, 350, 351, 352], "similar": [10, 57, 59, 61, 212, 218, 316, 317, 446, 459, 491, 497, 501, 513, 526], "similarli": [28, 494], "simonyan": 104, "simpl": [3, 4, 16, 218, 240, 253, 254, 255, 256, 270, 272, 291, 292, 293, 295, 296, 297, 323, 324, 325, 327, 328, 329, 330, 332, 333, 338, 339, 340, 346, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 444, 445, 450, 531], "simplebackbon": 213, "simplebinaryclassificationmodel": 361, "simpleblock": 263, "simpleclassificationmodel": [362, 365], "simplegelumodel": 323, "simplehardsigmoidmodel": 324, "simplehardswishmodel": 325, "simpleleakyrelumodel": 326, "simplemodel": [328, 348, 359, 429], "simpleregressionmodel": 364, "simplerelumodel": 327, "simpleselumodel": 329, "simplesigmoidmodel": 330, "simpleswishmodel": 332, "simpletanhmodel": 333, "simpli": [16, 426, 494, 495, 516], "simplic": [104, 324, 327], "simplifi": [4, 13, 15, 84, 85, 86, 87, 88, 104, 106, 208, 240, 305, 306, 307, 354], "simul": 542, "simultan": [55, 304], "sin": [466, 473], "sinc": [23, 26, 236, 237, 238, 239, 253, 254, 255, 321, 426, 432, 437, 491, 511, 530, 542], "sine": [469, 486, 487], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 151, 216, 217, 249, 305, 306, 307, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 344, 362, 374, 383, 384, 385, 386, 387, 392, 393, 394, 395, 400, 425, 435, 439, 456, 461, 503, 520, 534, 536, 542], "singleton": [15, 374], "singular": [19, 22, 23, 25, 27, 28], "sinh": [466, 474, 493], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 96, 99, 104, 105, 106, 107, 108, 109, 118, 119, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 209, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 230, 231, 232, 235, 237, 252, 253, 254, 255, 256, 257, 258, 260, 262, 265, 266, 267, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 335, 338, 339, 340, 341, 342, 343, 344, 347, 354, 357, 359, 361, 362, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 394, 395, 397, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 436, 439, 440, 441, 480, 481, 482, 490, 496, 498, 499, 501, 502, 503, 508, 519, 520, 528, 529, 533, 535, 540, 542], "size_or_sect": 519, "sk": [104, 179, 180, 181, 182, 183, 312], "sk_resnet_18": 104, "sk_resnet_34": 104, "sk_resnet_50": 104, "sk_resnext_50_32x4d": 104, "skblock": 179, "skip": [104, 428], "sknet": [180, 181, 182, 183], "slice": [270, 441, 494, 500, 526, 527], "slide": [260, 344, 382, 384, 385, 387], "slight": 311, "slightli": 542, "slope": [245, 322, 326], "slow": [3, 419], "small": [25, 44, 46, 48, 51, 63, 84, 85, 86, 87, 98, 99, 104, 106, 107, 108, 113, 117, 121, 122, 125, 133, 188, 189, 194, 195, 205, 206, 222, 245, 262, 273, 274, 279, 280, 282, 283, 284, 326, 329, 347, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 383, 386, 391, 393, 395, 401, 413, 414, 415, 416, 417, 418, 419, 420, 421], "smallbackbon": 218, "smaller": [10, 45, 55, 57, 59, 61, 64, 68, 84, 85, 86, 87, 104, 123, 209, 218, 237, 240, 399, 414, 415, 448, 500, 502, 533, 535, 540], "smallest": [471, 482, 523], "smooth": [94, 219, 243, 322, 323, 332, 404, 412, 420, 542], "smoother": [404, 412], "so": [236, 237, 238, 239, 304, 399, 419, 425, 428, 456, 457, 471, 477, 484, 531], "softmax": [31, 55, 109, 244, 252, 269, 312, 334, 335, 336, 356, 362, 393, 395], "softmaxmodel": 331, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [242, 263, 264, 304, 346, 348, 349, 350, 367, 368, 369, 371, 372, 373, 414, 415, 416, 502], "sometim": 427, "sophist": [237, 240], "sort": [16, 509, 523, 527], "sourc": [224, 230, 231, 232, 252, 391, 440], "space": [20, 26, 28, 57, 59, 61, 109, 185, 230, 253, 254, 255, 256, 257, 258, 260, 285, 286, 287, 305, 306, 307, 308, 309, 310, 338, 339, 340, 341, 342, 343, 344, 376, 377, 378, 454, 461, 542], "span": 4, "spars": [414, 415], "spatial": [29, 31, 104, 109, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 162, 179, 190, 196, 209, 213, 215, 217, 219, 220, 221, 225, 258, 262, 280, 289, 290, 298, 299, 306, 311, 339, 340, 341, 344, 367, 368, 369, 371, 372, 373, 374, 380, 381, 383, 384, 385, 386, 387, 397, 471, 511], "spatial_dim": 311, "spatial_scal": [220, 221], "spatio": 340, "spec": 65, "special": [0, 1, 25, 233, 234, 235, 346, 440], "specif": [4, 11, 65, 70, 71, 72, 73, 84, 85, 86, 87, 101, 115, 123, 124, 125, 126, 127, 149, 150, 160, 161, 236, 237, 238, 239, 240, 312, 321, 346, 349, 350, 351, 352, 371, 372, 373, 389, 399, 400, 407, 426, 440, 456, 480, 482, 510, 515, 522], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 66, 67, 68, 69, 75, 105, 118, 119, 120, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 210, 237, 249, 260, 267, 273, 274, 275, 277, 278, 283, 284, 285, 286, 287, 288, 289, 299, 301, 303, 304, 311, 331, 335, 338, 339, 340, 341, 344, 354, 361, 362, 363, 364, 365, 374, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 389, 397, 400, 403, 407, 424, 434, 435, 436, 437, 438, 439, 441, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 472, 480, 481, 482, 484, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 510, 513, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 538, 540, 542, 543], "speech": [212, 371], "speed": [104, 121, 122, 215, 324, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 428], "split": [4, 104, 142, 149, 150, 257, 335, 502, 503, 508, 509, 526, 529], "split_tensor": 519, "springer": 104, "sqrt": [31, 55, 109, 220, 243, 252, 280, 316, 317, 320, 321, 323, 335, 336, 367, 368, 369, 370, 371, 372, 373, 374, 393, 395, 413, 414, 415, 416, 418, 419, 420, 466, 468, 469], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 262, 275, 277, 347, 363, 364, 413, 414, 415, 420, 466, 488], "squaredataset": [0, 1, 2, 3], "squeez": [74, 104, 117, 121, 122, 169, 172, 175, 176, 177, 178, 311, 509, 526], "sr_ratio": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "sra": 104, "src": [224, 229, 391, 394, 395], "src_key_pad": 394, "src_key_padding_mask": [391, 395], "src_mask": [391, 394, 395], "src_vocab_s": [230, 231, 232], "ss": 222, "stabil": [22, 25, 31, 104, 109, 215, 223, 262, 273, 274, 279, 280, 282, 283, 284, 301, 305, 306, 307, 328, 347, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 389, 391, 393, 395, 401, 412, 413, 414, 415, 416, 417, 418, 419, 420, 534], "stabl": [88, 194, 316, 317, 320, 321, 346, 362, 412, 416, 417, 420, 421, 422, 518], "stack": [15, 240, 312, 341, 391, 392, 394, 506, 508, 509, 529, 542], "stage": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 88, 96, 104, 109, 110, 111, 113, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 215], "stage1": 169, "stage2": 169, "stage3": 169, "stage4": 169, "stall": 408, "stand": 138, "standalon": 328, "standard": [16, 42, 47, 57, 59, 61, 88, 98, 123, 126, 151, 160, 161, 214, 215, 230, 231, 243, 245, 308, 309, 310, 316, 318, 320, 322, 323, 326, 341, 346, 391, 421, 425, 437, 440, 446, 531, 534, 542], "star": [341, 342, 343], "start": [1, 3, 10, 401, 412, 414, 421, 441, 454, 461, 533, 535, 543], "start_id": 543, "state": [49, 104, 203, 233, 234, 235, 237, 240, 400, 405, 425, 426, 428, 430, 438], "state_dict": [214, 215, 234, 235, 400, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431], "statement": [425, 428], "static": 240, "statist": [25, 261, 279, 282], "std": [5, 6, 7, 8, 217, 318, 531, 534, 542], "stem": [101, 104, 109, 142, 151, 162, 179], "stem_typ": 151, "stem_width": [142, 143, 144, 145, 146, 147, 148, 151], "step": [10, 16, 31, 228, 235, 260, 312, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 454, 531, 532], "step_siz": [401, 403, 405, 409, 421], "step_size_down": 403, "step_size_up": 403, "steplr": [401, 405, 410], "still": [52, 413], "stn": 299, "stochast": [40, 41, 55, 74, 75, 88, 96, 109, 128, 184, 185, 263, 348, 412, 422], "stochastic_depth": 74, "stop": [408, 454, 461], "storag": [236, 238], "store": [2, 4, 5, 6, 7, 8, 16, 151, 162, 179, 233, 234, 235, 236, 237, 238, 239, 311, 376, 377, 378, 379, 380, 381, 428, 431, 533, 534, 535, 536, 537, 538, 539, 540], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 118, 151, 196, 234, 236, 238, 240, 273, 274, 275, 277, 278, 299, 303, 354, 397, 400, 403, 405, 408, 429, 430, 431, 441, 511, 543], "straight": 500, "straightforward": [422, 426, 442], "strategi": [31, 104, 126, 193, 215, 299, 401, 405, 411], "stream": 217, "streamlin": [2, 3, 88, 104], "strength": [31, 88, 104, 347], "strict": [234, 400], "stride": [57, 59, 61, 75, 105, 106, 107, 108, 117, 118, 121, 122, 213, 217, 218, 237, 240, 253, 254, 255, 256, 257, 258, 260, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 344, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 543], "stride_height": 260, "stride_width": 260, "strike": [47, 118, 125], "string": [10, 11, 13, 14, 15, 234, 236, 238, 240, 338, 339, 340, 354, 400, 424], "strong": [31, 104, 132, 135, 138, 202], "stronger": [112, 133, 137, 193], "structur": [0, 10, 14, 26, 31, 75, 104, 117, 185, 207, 212, 213, 233, 234, 237, 262, 347, 354, 399, 400, 429, 441, 458, 532, 544], "student": 16, "studi": 16, "style": [10, 16, 101, 215, 282, 371, 372, 441, 511], "sub": [236, 237, 238, 239, 240, 399, 466, 502, 519, 526, 533, 535], "subclass": [1, 2, 3, 16, 234, 235, 236, 399, 400, 405], "sublay": [391, 393, 395], "submodul": [234, 399], "subscript": 11, "subsequ": [237, 240, 321, 440], "subset": [149, 150, 258, 349, 350], "subspac": 335, "substanti": 204, "subtract": [452, 534], "subvolum": 290, "suffer": 414, "suffix": [138, 430, 431], "suit": [52, 70, 71, 72, 73, 94, 115, 123, 124, 126, 138, 139, 141, 179, 195, 202, 316, 317, 320, 321, 401], "suitabl": [42, 44, 45, 48, 50, 76, 77, 78, 79, 80, 81, 82, 83, 90, 101, 104, 106, 107, 108, 110, 111, 113, 114, 116, 121, 122, 124, 127, 130, 135, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 174, 186, 187, 188, 189, 205, 215, 231, 363, 414, 415, 435], "sum": [10, 11, 14, 16, 24, 236, 237, 238, 239, 240, 249, 252, 273, 274, 275, 277, 278, 284, 298, 299, 312, 331, 341, 342, 344, 361, 362, 363, 364, 365, 414, 441, 442, 445, 450, 453, 466, 494, 496, 501, 503, 508, 511, 515, 518, 519, 522, 523, 529], "sum_": [13, 14, 23, 31, 249, 280, 331, 354, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 407, 444, 445, 453, 481, 490, 494, 496, 501, 511, 515], "sum_i": [24, 450], "sum_j": [11, 450], "sum_k": 446, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 74, 160, 161, 207, 212, 382, 383, 384], "summari": [160, 161, 175, 176, 177, 178, 183], "summat": [10, 11, 13, 14, 15, 23, 407], "sun": 311, "super": [16, 213, 217, 218, 233, 234, 235, 236, 237, 238, 239, 263, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 399, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429], "superior": [54, 104, 193], "superpixel": 218, "supplementari": 126, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 88, 119, 128, 151, 213, 236, 237, 238, 239, 240, 252, 299, 303, 304, 336, 344, 389, 397, 399, 411, 418, 430, 431, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 455, 458, 472, 478, 479, 481, 486, 488, 490, 494, 495, 496, 500, 503, 511, 516, 518, 519, 532, 542, 544], "suppos": 542, "suppress": [216, 218, 222, 228], "sure": [399, 542], "svd": [21, 25], "swap": [13, 223, 354], "swapax": 466, "swin": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "swin_bas": 104, "swin_larg": 104, "swin_smal": 104, "swin_tini": 104, "swin_v2": 185, "swin_v2_bas": 104, "swin_v2_giant": 104, "swin_v2_hug": 104, "swin_v2_larg": 104, "swin_v2_smal": 104, "swin_v2_tini": 104, "swintransform": [186, 187, 188, 189], "swintransformer_v2": [190, 191, 192, 193, 194, 195], "swish": [121, 122, 334, 356], "symbol": [13, 14, 15, 354], "symmetr": [18, 285, 286, 287, 288, 320, 321, 333], "syntax": [1, 10, 13, 14, 15, 354, 428, 446], "synthes": 212, "system": [16, 17, 18, 25, 26, 27, 104, 125, 229, 299, 426, 441, 511], "systemat": [104, 542], "szegedi": [93, 104], "t": [10, 16, 25, 31, 55, 104, 109, 298, 299, 341, 342, 391, 392, 393, 395, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 441, 446, 459, 460, 497, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542], "t0": 412, "t1": [441, 497], "t2": [441, 497], "t_": [392, 402], "t_0": 392, "t_cpu": 441, "t_i": 392, "t_max": 402, "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 74, 389], "tabular": 4, "tailor": [4, 117, 125, 143, 144, 145, 146, 147, 148, 399, 542], "take": [26, 221, 380, 382, 383, 384, 385, 386, 387, 397, 406, 425, 428, 531], "taken": 494, "tan": [104, 466], "tangent": [250, 333, 470, 492, 493], "tanh": [105, 237, 240, 243, 244, 269, 316, 317, 320, 321, 323, 334, 356, 466], "tanhnetwork": 333, "target": [5, 6, 7, 8, 52, 213, 215, 217, 221, 224, 230, 231, 232, 240, 273, 274, 275, 277, 278, 285, 286, 287, 290, 298, 303, 361, 362, 363, 364, 365, 376, 377, 378, 379, 380, 381, 391, 392, 393, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 460, 501, 526, 533, 535, 540], "target_tensor": [361, 362, 363, 364, 365], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 98, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 207, 212, 214, 215, 230, 231, 232, 248, 249, 254, 256, 257, 258, 270, 273, 274, 277, 278, 311, 312, 330, 331, 338, 339, 340, 341, 342, 361, 362, 363, 364, 365, 371, 372, 373, 382, 384, 385, 387, 391, 415, 427, 440, 458, 461, 542], "teach": 212, "techniqu": [18, 22, 40, 75, 96, 104, 126, 190, 192, 195, 209, 263, 279, 346, 347, 349, 350, 351, 352, 371, 372, 373, 401, 411, 540, 542], "templat": 230, "tempor": [256, 338, 340, 384, 387], "temporarili": [425, 428], "ten": 484, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 84, 85, 86, 87, 93, 94, 95, 101, 102, 103, 105, 106, 107, 108, 117, 119, 120, 121, 122, 151, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 196, 207, 209, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 425, 426, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "tensordot": 466, "term": [13, 25, 53, 135, 136, 137, 139, 140, 141, 213, 270, 305, 306, 307, 308, 309, 310, 335, 391, 393, 395, 412, 416, 418, 419, 420, 422], "test": [4, 5, 6, 7, 8, 461], "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 109, 151, 162, 179, 180, 181, 182, 207, 212, 216, 219, 220, 221, 227, 236, 242, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 263, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 301, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 364, 365, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 403, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 434, 436, 441, 442, 443, 445, 447, 448, 449, 451, 452, 453, 467, 471, 472, 477, 480, 481, 482, 484, 485, 490, 491, 496, 498, 499, 500, 501, 503, 508, 510, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 533, 534, 535, 537, 538, 539], "textur": 218, "tgt": [224, 229, 391, 392, 393], "tgt_is_caus": [392, 393], "tgt_key_padding_mask": [391, 392, 393], "tgt_mask": [391, 392, 393], "tgt_vocab_s": [230, 231, 232], "th": [270, 361, 362, 364, 365, 371, 372, 373, 447, 448, 451], "than": [0, 1, 7, 13, 15, 228, 238, 239, 242, 245, 275, 308, 309, 310, 322, 326, 332, 354, 363, 400, 407, 416, 453, 461, 471, 477, 494, 501, 502, 513, 521, 526, 533, 535, 540], "thei": [0, 28, 55, 104, 233, 237, 239, 240, 299, 335, 511, 516, 533, 535, 542], "them": [3, 10, 16, 104, 234, 239, 260, 344, 412, 427, 503, 521, 526, 531, 534, 542], "therebi": [346, 383, 384, 386, 387], "theta": [298, 299, 412, 413, 538], "theta_": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "theta_t": [419, 420], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 90, 93, 94, 95, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 135, 138, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 203, 204, 205, 206, 207, 213, 214, 215, 217, 223, 224, 227, 228, 230, 233, 235, 237, 238, 239, 240, 246, 248, 249, 250, 253, 254, 255, 256, 257, 260, 262, 263, 270, 272, 285, 288, 298, 301, 303, 304, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 376, 379, 382, 383, 384, 385, 386, 387, 389, 399, 401, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 436, 437, 438, 440, 441, 445, 446, 450, 454, 456, 459, 460, 462, 463, 464, 465, 471, 472, 476, 477, 478, 479, 480, 481, 482, 484, 486, 488, 490, 491, 494, 495, 496, 497, 500, 501, 502, 510, 512, 513, 515, 516, 517, 518, 524, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "third": [139, 140, 141, 298], "those": [106, 107, 108, 220, 239, 321, 523], "thread": 425, "three": [28, 108, 255, 258, 287, 290, 293, 297, 305, 306, 307, 340, 352, 369, 373, 378, 384, 387], "threshold": [25, 214, 215, 218, 222, 228, 275, 363, 408], "threshold_mod": 408, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 88, 92, 101, 104, 105, 118, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 180, 181, 182, 208, 209, 212, 217, 218, 221, 236, 237, 240, 262, 270, 272, 298, 299, 303, 311, 312, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 338, 339, 340, 346, 349, 350, 351, 352, 357, 358, 359, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 391, 392, 394, 395, 425, 432, 434, 437, 444, 445, 450, 498, 499, 511, 512, 514, 516, 520, 523, 524, 525, 527, 528, 542, 543, 544], "throughout": [88, 184, 185, 201, 230, 247, 532], "ti": [104, 206], "tier": 49, "tight": 138, "tile": [15, 509], "time": [0, 3, 16, 23, 106, 107, 108, 116, 216, 253, 305, 326, 329, 335, 338, 382, 383, 384, 385, 386, 387, 392, 394, 401, 408, 412, 413, 414, 415, 416, 420, 422, 515, 522], "tini": [44, 45, 53, 64, 96, 100, 104, 113, 134], "tinynet": 16, "titl": 543, "to_tensor": [5, 6, 7, 8], "togeth": [240, 531, 542], "toggl": [425, 428], "token": [55, 96, 104, 129, 136, 389], "token_mix": 96, "too": [16, 401, 421], "tool": [3, 399, 401, 425, 427, 440, 531, 542, 544], "top": [18, 19, 20, 26, 28, 49, 219, 252, 270, 272, 303, 335, 336, 338, 339, 340, 357, 359, 453, 523, 533, 535, 543], "topk": 509, "topk_indic": 523, "topolog": 16, "torch": [196, 344, 497], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 231, 232, 235, 335, 354, 425, 441, 516], "total_loss": 213, "total_op": 425, "totensor": [531, 542], "touch": 16, "toward": 216, "toybackbon": [217, 218], "trace": [17, 466], "traceback": 428, "track": [16, 305, 306, 307, 367, 368, 369, 371, 372, 373, 399, 425, 426, 428, 432, 434, 435, 436, 437, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 491, 497, 500, 501, 510, 512, 518, 527, 532], "track_running_stat": [305, 306, 307, 367, 368, 369, 371, 372, 373], "trade": [44, 124], "tradit": [7, 10, 31, 55, 65, 104, 127, 229, 413, 414, 417, 418, 419], "trail": 283, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 75, 88, 92, 93, 94, 104, 109, 175, 176, 177, 178, 183, 213, 216, 227, 229, 230, 233, 234, 237, 239, 240, 249, 261, 262, 263, 264, 265, 266, 267, 279, 282, 301, 304, 323, 326, 329, 330, 331, 333, 346, 347, 348, 349, 350, 351, 352, 367, 368, 369, 371, 372, 373, 389, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 471, 477, 531, 534, 535, 536, 537, 538, 539, 542, 544], "trainabl": [367, 368, 369, 371, 372, 373, 389, 399], "transact": [216, 311], "transfer": [282, 371, 372, 434], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 543, 544], "transform_pipelin": [531, 542], "transformed_imag": [531, 542], "transformer_bas": 229, "transformer_big": 229, "transformer_decod": 392, "transformer_encod": 394, "transformerdecod": [356, 391, 396], "transformerdecoderlay": [356, 391, 392, 396], "transformerencod": [356, 391, 396], "transformerencoderlay": [356, 391, 394, 396], "transit": [31, 69, 363], "translat": [212, 224, 230, 298, 383, 386, 391], "transpar": 16, "transpos": [13, 18, 256, 257, 258, 341, 342, 343, 466], "transposit": [11, 13, 354], "travers": 543, "treat": [0, 233, 374, 399, 431], "triangular": [18, 26, 392, 393, 394, 395, 403, 524, 525], "triangular2": 403, "tril": 509, "triu": 509, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 92, 93, 94, 121, 122, 135, 136, 137, 138, 139, 140, 141, 142, 184, 185, 213, 218, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 260, 261, 263, 264, 265, 266, 267, 270, 272, 279, 282, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 420, 424, 426, 431, 432, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 543], "truli": 16, "truth": 213, "try": 0, "tu": [104, 109], "tune": [124, 127, 214, 215, 542], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 69, 109, 151, 213, 217, 218, 220, 221, 222, 225, 234, 235, 253, 254, 255, 256, 257, 258, 260, 283, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 309, 310, 338, 339, 340, 341, 342, 343, 344, 358, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 397, 415, 416, 417, 418, 419, 421, 435, 436, 437, 439, 441, 453, 456, 459, 462, 464, 480, 481, 482, 490, 496, 501, 502, 503, 505, 506, 507, 508, 511, 513, 516, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 533, 534, 535, 540], "twice": 513, "two": [19, 20, 22, 23, 25, 26, 28, 106, 107, 108, 109, 117, 149, 150, 180, 196, 214, 215, 217, 227, 253, 254, 255, 257, 270, 292, 296, 311, 312, 339, 351, 357, 368, 372, 383, 386, 395, 415, 416, 417, 418, 419, 421, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 491, 494, 502, 511, 519, 523], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 88, 96, 105, 109, 128, 129, 142, 151, 169, 179, 184, 185, 212, 233, 234, 235, 270, 357, 391, 393, 395, 424, 431, 434, 441, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 497, 511, 532], "typeddict": 213, "typeerror": [0, 1, 2, 234, 400], "typic": [16, 17, 31, 66, 118, 124, 151, 162, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 219, 222, 228, 233, 249, 261, 262, 304, 311, 328, 329, 331, 347, 348, 365, 367, 368, 369, 371, 372, 373, 411, 412, 420, 422, 528, 532, 534, 538, 540, 542], "u": [25, 28, 317, 319, 321], "u_": 417, "ultra": [46, 157, 191], "unbind": 509, "unbound": 526, "unchang": [16, 233, 267, 322, 326, 327, 329, 346, 349, 350, 351, 352, 358, 514, 520], "uncontract": 453, "uncontrol": 16, "undefin": 451, "under": [163, 164, 165, 166, 167, 168, 399], "underbrac": 23, "underdetermin": 25, "undergo": [263, 395, 542], "underli": [0, 84, 85, 86, 87, 93, 94, 95, 102, 103, 441, 491, 497, 508, 514, 516, 529], "understand": [16, 66, 67, 68, 104, 139, 140, 192, 209, 212, 240, 542, 543, 544], "understood": [13, 341], "unexpect": [10, 234, 237, 240, 284, 440], "unfold": [259, 269, 345, 356], "unifi": [0, 16, 88, 213, 216, 424], "uniform": [315, 317, 321, 338, 339, 340, 357, 359, 433, 435, 436, 440, 460, 536, 537, 538, 539], "uniformli": [220, 435, 439], "uniniti": [456, 457], "unintend": [10, 14], "union": [196, 227, 228], "uniqu": [18, 25, 27, 236, 238, 389, 434, 509], "unit": [29, 88, 105, 209, 213, 217, 242, 243, 245, 246, 247, 316, 317, 320, 321, 322, 323, 326, 327, 329, 346], "unless": [152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 218, 425, 500], "unlik": [31, 65, 104, 184, 221, 233, 236, 237, 238, 239, 245, 322, 326, 346, 374, 413, 414, 416, 417, 418, 419, 421], "unnecessari": 10, "unpad": 513, "unseen": 542, "unspecifi": [424, 459], "unsqueez": 509, "unstabl": 22, "unsur": 10, "until": 16, "up": [104, 400, 405, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 428, 471, 538, 540], "updat": [4, 41, 233, 239, 240, 346, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 428], "upon": [41, 94, 104, 117, 118, 193, 195, 216, 217, 236, 237, 238, 239], "upper": [26, 319, 403, 421, 439, 471, 472, 507, 524, 525], "upper_triangular": 525, "upsampl": [256, 257, 258, 341, 342, 343, 356, 398], "upstream": 16, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 65, 69, 74, 75, 88, 89, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 195, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 270, 272, 277, 279, 280, 282, 284, 286, 287, 298, 299, 301, 303, 304, 305, 306, 307, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 382, 383, 384, 385, 386, 387, 389, 391, 397, 399, 400, 401, 402, 404, 406, 407, 409, 411, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 471, 472, 476, 477, 480, 481, 482, 484, 490, 491, 496, 500, 505, 507, 510, 511, 513, 515, 518, 519, 520, 522, 524, 525, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 69, 88, 109, 207, 213, 214, 215, 217, 218, 237, 240, 263, 308, 309, 310, 336, 341, 347, 400, 411, 425, 428, 461, 533, 534, 535, 536, 537, 538, 539, 540], "use_aux": [92, 93, 94], "use_fpn": 213, "use_h": [121, 122], "use_s": [121, 122], "user": [1, 2, 3, 4, 16, 127, 213, 236, 237, 238, 239, 399, 406, 414, 531, 532, 542, 544], "usual": [220, 299, 362], "util": [3, 17, 31, 118, 134, 180, 181, 182, 193, 238, 239, 262, 399, 440, 544], "v": [16, 20, 25, 28, 31, 55, 104, 109, 129, 252, 335, 336, 393, 395, 415, 416, 418, 419, 455], "v1": [92, 93, 101, 102, 103, 104, 115, 116], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 75, 84, 85, 86, 87, 101, 103, 104, 116, 117, 120, 129, 135, 136, 137, 139, 140, 141, 190, 191, 192, 193, 194, 195], "v3": [92, 94, 95, 104, 117, 121, 122], "v4": [92, 95, 104, 118, 124, 125, 126, 127], "v_": [412, 415, 416, 418, 419, 420, 422], "v_2": 55, "v_i": 335, "v_stack": 529, "v_t": [419, 420], "val": 314, "val_loss": 408, "valid": [11, 305, 306, 307, 308, 309, 310, 312, 338, 339, 340, 341, 342, 343, 408, 495], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 66, 67, 68, 88, 96, 114, 115, 118, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 160, 161, 184, 185, 218, 222, 223, 234, 236, 238, 240, 242, 245, 248, 249, 250, 252, 253, 254, 255, 260, 262, 263, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 298, 299, 303, 304, 305, 306, 307, 311, 314, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 333, 335, 336, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 397, 401, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 432, 434, 435, 436, 437, 438, 439, 440, 454, 455, 456, 457, 458, 459, 460, 461, 467, 468, 469, 471, 472, 475, 476, 477, 478, 479, 480, 482, 485, 486, 488, 489, 498, 499, 500, 503, 505, 506, 510, 513, 514, 516, 518, 523, 527, 528, 530, 534, 536, 537, 539], "valuabl": 440, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 400], "van": 104, "vanish": [104, 322, 329, 367, 368, 369], "var": 466, "varepsilon": 284, "vari": [40, 179, 237, 239, 285, 303, 376, 403, 538], "variabl": [222, 234, 240, 285, 286, 287, 358, 376, 377, 378, 399, 426, 456, 535, 538], "varianc": [247, 261, 279, 282, 305, 306, 307, 316, 317, 320, 321, 329, 346, 367, 368, 369, 371, 372, 373, 374, 415, 416, 417, 418, 419, 437, 496, 538, 542], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 90, 91, 97, 98, 99, 100, 110, 111, 112, 114, 117, 118, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 160, 161, 175, 176, 177, 178, 180, 181, 182, 183, 191, 196, 197, 198, 199, 200, 214, 232, 415, 416, 417], "variat": [308, 309, 310, 371, 372, 373, 535, 542], "varieti": [4, 101, 142, 440, 542], "variou": [7, 10, 13, 14, 31, 69, 92, 102, 103, 104, 105, 118, 119, 127, 128, 212, 327, 411, 440, 461, 480, 482, 513, 532], "vasudevan": 104, "vaswani": [229, 391], "vdim": 335, "vdot": 450, "vector": [15, 20, 25, 26, 27, 28, 270, 272, 301, 335, 357, 359, 389, 444, 445, 446, 450], "veloc": [412, 420, 422], "verbos": [13, 402, 403, 404, 405, 406, 407, 408, 409], "veri": [25, 48, 104, 130, 154, 156, 413], "verifi": 10, "versa": 421, "versatil": [31, 104, 127, 440, 511], "version": [16, 28, 40, 92, 96, 101, 105, 106, 107, 124, 129, 131, 138, 341, 344, 354, 420, 431, 450, 517, 536], "vertic": [521, 529, 539], "vgg": 196, "vggnet": [197, 198, 199, 200], "vggnet_11": 104, "vggnet_13": 104, "vggnet_16": 104, "vggnet_19": 104, "via": [3, 4, 16, 109, 127, 179, 215, 220, 441], "vice": 421, "video": [212, 255, 267, 307, 340, 343, 373, 384, 387], "view": [101, 105, 237, 383, 384, 385, 386, 387, 500, 501, 516, 526], "vinod": [5, 6], "violet": 543, "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "visual": [55, 113, 137, 209, 212], "vit": [31, 65, 184, 202, 203, 204, 205, 206], "vit_bas": 104, "vit_hug": 104, "vit_larg": 104, "vit_smal": 104, "vit_tini": 104, "voc": [214, 215], "vocabulari": [230, 231, 232, 389], "vol": 104, "vollgraf": 7, "volum": [290, 381], "volumetr": [255, 258, 267, 307, 340, 343, 373, 381, 384, 387], "vstack": 509, "w": [10, 13, 14, 15, 31, 104, 151, 163, 164, 165, 166, 167, 168, 180, 181, 182, 216, 220, 221, 223, 224, 225, 254, 255, 257, 258, 260, 262, 266, 267, 270, 272, 280, 286, 287, 289, 290, 292, 293, 296, 297, 298, 299, 303, 304, 306, 307, 311, 335, 338, 339, 340, 341, 342, 343, 354, 357, 359, 368, 369, 370, 372, 373, 377, 378, 380, 381, 384, 387, 533, 535, 543], "w24": [68, 104], "w_": [220, 221, 223, 224, 254, 255, 257, 258, 286, 287, 289, 290, 292, 293, 296, 297, 303, 339, 340, 342, 343, 344, 377, 378, 380, 381, 383, 384, 386, 387], "w_1": [393, 395], "w_2": [393, 395], "w_in": 299, "w_k": [31, 55, 109], "w_l": [219, 220], "w_out": [254, 255, 257, 258, 292, 293, 296, 297, 299], "w_q": [55, 109], "w_t": [223, 224], "w_v": [55, 109], "wa": [16, 93, 346, 349, 350, 351, 352, 425, 430], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 210, 212, 354, 426, 516], "wait": 408, "wang": 104, "want": [0, 531, 533], "warn": [236, 238, 335, 500], "warp": [216, 218], "warper_output_s": 218, "we": [3, 427, 511], "wei": 104, "weight": [55, 104, 109, 128, 129, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 184, 185, 214, 215, 252, 253, 254, 255, 256, 257, 258, 270, 272, 273, 274, 278, 279, 282, 283, 301, 303, 311, 312, 316, 317, 320, 321, 335, 336, 338, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 357, 359, 361, 362, 365, 367, 368, 369, 371, 372, 373, 374, 389, 391, 392, 393, 394, 395, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 430, 431, 435, 440, 544], "weight1": 238, "weight2": 238, "weight_decai": [412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "weihao": 104, "weinberg": 104, "well": [52, 70, 71, 72, 73, 75, 94, 124, 138, 139, 179, 195, 202, 316, 317, 344], "wenhai": 104, "were": 240, "weyand": 104, "what": [13, 15, 354], "whatev": 425, "when": [0, 1, 3, 10, 14, 16, 23, 55, 74, 104, 213, 214, 215, 221, 223, 224, 234, 237, 239, 240, 242, 245, 253, 254, 255, 256, 257, 301, 322, 348, 358, 367, 368, 369, 371, 372, 373, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 413, 421, 425, 426, 428, 429, 440, 451, 460, 500, 501, 531, 533], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 104, 121, 122, 123, 124, 125, 126, 138, 140, 207, 212, 220, 221, 224, 225, 227, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 263, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 344, 346, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 440, 441, 442, 443, 447, 448, 449, 451, 452, 456, 457, 471, 472, 476, 477, 478, 479, 480, 481, 482, 486, 488, 490, 494, 495, 496, 502, 503, 509, 510, 512, 513, 515, 519, 522, 524, 525, 526, 531, 532, 533, 534, 535, 536, 537, 538, 539], "wherev": 510, "whether": [1, 16, 19, 31, 55, 74, 88, 92, 93, 94, 121, 122, 128, 129, 135, 136, 137, 139, 140, 141, 142, 184, 185, 213, 234, 235, 316, 317, 348, 420, 426, 432, 434, 435, 436, 437, 439, 441, 456, 457, 459, 460, 480, 481, 482, 490, 496, 518, 527, 530], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 65, 75, 95, 103, 104, 109, 115, 116, 118, 119, 123, 129, 133, 143, 144, 145, 146, 147, 148, 149, 150, 175, 176, 177, 178, 179, 183, 184, 186, 187, 188, 189, 197, 198, 199, 200, 217, 218, 221, 230, 234, 236, 238, 240, 245, 249, 275, 284, 304, 308, 309, 310, 312, 322, 323, 326, 328, 331, 333, 346, 363, 365, 367, 368, 369, 371, 372, 373, 374, 389, 393, 395, 407, 409, 415, 416, 418, 420, 426, 434, 435, 436, 439, 453, 468, 469, 470, 473, 474, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 512, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 528, 530, 532, 533, 535, 536, 537, 538, 539, 540, 542, 543], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 68, 84, 85, 86, 87, 88, 89, 91, 99, 103, 104, 112, 115, 125, 132, 133, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 183, 185, 204, 212, 237, 240, 261, 262, 323, 327, 328, 348, 392, 399, 402, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 491, 510, 516, 521, 536, 542], "who": [236, 237, 238, 239], "whose": [28, 402, 403, 404, 405, 406, 407, 408, 409, 457, 460, 463, 465, 467, 472, 476, 485, 491, 500], "wide": [4, 5, 6, 8, 17, 25, 53, 104, 127, 151, 159, 160, 161, 194, 215, 246, 257, 327, 338, 339, 362], "wide_resnet_101": 104, "wide_resnet_50": 104, "wider": [44, 160, 161, 253, 254], "wideresnet": 104, "width": [31, 62, 74, 75, 104, 112, 113, 114, 115, 119, 142, 149, 150, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 207, 223, 224, 254, 255, 257, 258, 260, 266, 267, 280, 286, 287, 289, 290, 292, 293, 296, 297, 299, 303, 304, 312, 339, 340, 344, 368, 369, 370, 372, 373, 377, 378, 380, 383, 384, 386, 387, 397, 424, 533, 535, 540], "width_coef": 74, "width_multipli": [115, 119], "window": [104, 109, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 291, 292, 293, 295, 296, 297, 382, 383, 384, 385, 386, 387, 413, 480, 482], "windows_s": [184, 185], "wise": [10, 15, 88, 104, 109, 173, 175, 176, 177, 178, 213, 242, 243, 245, 246, 247, 248, 249, 250, 263, 305, 306, 307, 311, 325, 331, 332, 346, 348, 349, 350, 351, 352, 399, 427, 442, 443, 446, 447, 448, 449, 451, 452, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 483, 485, 486, 487, 488, 489, 492, 493, 494, 508, 518, 529, 530], "within": [2, 104, 184, 201, 212, 225, 230, 233, 236, 237, 238, 239, 240, 250, 303, 304, 321, 323, 324, 325, 327, 329, 330, 332, 333, 338, 339, 340, 343, 344, 346, 349, 350, 354, 358, 361, 362, 363, 364, 365, 367, 368, 369, 371, 374, 382, 383, 384, 385, 386, 387, 411, 425, 454, 472, 538, 542], "without": [10, 16, 104, 162, 236, 237, 238, 270, 272, 338, 339, 340, 357, 359, 425, 426, 429, 431, 434, 480, 514, 516, 528], "word": [104, 301, 389], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "workflow": [14, 440, 542], "world": 212, "worth": 104, "would": [500, 518], "wrap": [3, 379, 380, 399, 401, 425, 428, 430, 441, 497], "wrapper": 399, "wu": 104, "www": [5, 6], "x": [11, 16, 17, 27, 31, 101, 104, 105, 109, 169, 196, 207, 213, 214, 215, 217, 218, 223, 224, 225, 233, 234, 236, 237, 238, 239, 240, 249, 263, 270, 272, 284, 298, 299, 304, 308, 309, 310, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 393, 394, 395, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 428, 432, 435, 436, 437, 439, 456, 457, 471, 476, 477, 484, 498, 499, 500, 502, 505, 507, 510, 511, 512, 517, 518, 519, 523, 524, 525, 526, 527, 533, 534, 535, 536, 537, 538, 539, 540, 543], "x1": 357, "x2": 357, "x_": [31, 224, 280, 362, 365, 370, 394, 511], "x_0": 394, "x_1": [55, 220, 221, 223, 224, 225, 227, 228], "x_2": [55, 220, 221, 223, 224, 225, 227, 228], "x_c": [223, 362, 365], "x_i": [284, 361, 394, 441, 471, 477, 484, 523], "x_k": 362, "x_t": 224, "x_test": 16, "x_train": 16, "xavier": [316, 317, 320, 321], "xavier_norm": 315, "xavier_uniform": 315, "xiao": 7, "xie": 104, "xl": [87, 104], "xlarg": [54, 104, 114], "xmax": 506, "xmin": 506, "xy": 511, "x\u2081": 357, "x\u2082": 357, "y": [11, 16, 31, 104, 207, 223, 224, 225, 236, 237, 238, 239, 240, 284, 298, 304, 308, 309, 310, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 432, 435, 436, 437, 439, 441, 456, 457, 510, 511, 517, 526, 527, 536], "y0": 526, "y1": [502, 526], "y2": [502, 526], "y_": [31, 224, 280, 362, 365, 370, 511], "y_1": [220, 221, 223, 224, 225, 227, 228], "y_2": [220, 221, 223, 224, 225, 227, 228], "y_c": [223, 362, 365], "y_i": [284, 361], "y_t": 224, "y_train": 16, "yann": [8, 104], "yanyu": 104, "yellow": 543, "yet": [16, 51, 53, 112, 125, 299, 427], "yield": [0, 1, 234, 500], "ymax": 506, "ymin": 506, "you": [0, 13, 15, 16, 117, 214, 215, 229, 237, 239, 240, 256, 344, 354, 391, 399, 411, 425, 426, 440, 456, 457, 458, 465, 495, 497, 498, 499, 500, 531, 533, 542], "your": [10, 16, 117, 125, 215, 399, 411, 426, 440, 542], "yu": 104, "z": [11, 16, 104, 341, 343, 393, 395, 457, 464, 465, 500], "zalandoresearch": 7, "ze": 104, "zeiler": [104, 209], "zero": [23, 25, 26, 94, 223, 224, 242, 245, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 284, 291, 292, 293, 295, 296, 297, 298, 299, 301, 314, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 329, 335, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 374, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 399, 400, 413, 414, 415, 416, 417, 418, 419, 420, 456, 457, 458, 459, 465, 466, 471, 472, 477, 484, 485, 512, 513, 523, 524, 525, 530], "zero_grad": [16, 235, 400, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 441], "zeros_lik": [457, 466], "zhang": 104, "zhmoginov": 104, "zhu": 104, "zhuang": 104, "zihang": 104, "zip": 219, "zisserman": 104, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "EfficientFormer", "efficientformer_l1", "efficientformer_l3", "efficientformer_l7", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "Image Generation", "lucid.models", "Faster R-CNN", "faster_rcnn_resnet_101_fpn", "faster_rcnn_resnet_50_fpn", "Object detection", "Fast R-CNN", "R-CNN", "util.FPN", "util.MultiScaleROIAlign", "util.ROIAlign", "util.SelectiveSearch", "util.apply_deltas", "util.bbox_to_delta", "util.clip_boxes", "Object Detection Utilities", "util.iou", "util.nms", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.load", "lucid.save", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms", "visual.draw_tensor_graph", "lucid.visual"], "titleterms": {"1": [427, 500], "1d": 427, "2": 427, "2d": 427, "3": 427, "It": 426, "The": 16, "ab": 467, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "activ": [244, 269, 334, 356], "ad": 427, "adadelta": 413, "adagrad": 414, "adam": 415, "adamax": 417, "adamw": 416, "adaptive_avg_pool1d": 285, "adaptive_avg_pool2d": 286, "adaptive_avg_pool3d": 287, "adaptive_max_pool1d": 288, "adaptive_max_pool2d": 289, "adaptive_max_pool3d": 290, "adaptiveavgpool1d": 376, "adaptiveavgpool2d": 377, "adaptiveavgpool3d": 378, "adaptivemaxpool1d": 379, "adaptivemaxpool2d": 380, "adaptivemaxpool3d": 381, "add": 442, "addit": [25, 335], "advanc": [260, 542], "advantag": [10, 13, 14, 15, 354], "affine_grid": 298, "alexnet": [29, 30, 104], "algebra": 21, "algorithm": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "align": [16, 427], "along": 499, "alpha_dropout": 261, "alphadropout": 346, "also": 411, "anoth": 497, "apply_delta": 223, "arang": 454, "arcco": 468, "architectur": [29, 31, 40, 55, 88, 106, 107, 108, 109, 160, 161, 209, 213, 217, 218], "arcsin": 469, "arctan": 470, "argmax": 498, "argmin": 499, "argsort": 500, "ascend": 500, "asgd": 412, "attent": [251, 252, 269, 312, 337, 356], "attribut": [5, 6, 7, 8, 29, 101, 105, 151, 162, 169, 179, 196, 207, 209, 233, 235, 236, 237, 238, 239, 240, 305, 306, 307, 308, 309, 310, 311, 322, 323, 326, 327, 329, 330, 331, 333, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 424, 441, 533, 534, 535, 536, 537, 538, 539, 540], "autodiff": 16, "automat": 16, "avail": 544, "avg_pool1d": 291, "avg_pool2d": 292, "avg_pool3d": 293, "avgpool1d": 382, "avgpool2d": 383, "avgpool3d": 384, "axi": [427, 491, 499], "backend": 16, "backpropag": 441, "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 262, 270, 272, 298, 303, 311, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 508, 511, 513, 514, 515, 516, 520, 521, 522, 524, 525, 526, 528, 529], "base": [410, 441], "basic": 16, "batch_norm": 279, "batchnorm": 313, "batchnorm1d": 367, "batchnorm2d": 368, "batchnorm3d": 369, "bbox_to_delta": 224, "bceloss": 361, "behavior": [285, 286, 287, 288, 289, 290, 376, 377, 378, 379, 380, 381, 430, 431], "benefit": [425, 428], "bernoulli": 432, "between": [16, 441], "bilinear": [270, 357], "binari": 466, "binary_cross_entropi": 273, "bottleneck": [121, 122], "broadcast": [427, 501], "broadcast_to": 501, "buffer": 233, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 151, 162, 169, 179, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 260, 262, 263, 270, 272, 285, 286, 287, 288, 298, 299, 303, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 508, 511, 513, 514, 515, 516, 520, 521, 522, 524, 525, 526, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540], "captur": 429, "ceil": 471, "centercrop": 533, "choleski": 18, "chunk": 502, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 96, 101, 105, 109, 115, 116, 117, 118, 142, 151, 162, 169, 179, 184, 185, 196, 201, 207, 209, 213, 217, 218, 226, 230, 233, 234, 235, 236, 237, 238, 239, 240, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 441, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540], "classif": 104, "clip": 472, "clip_box": 225, "cnn": [213, 216, 217, 218], "co": 473, "coatnet": [31, 104], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "compon": [3, 399], "compos": 531, "comput": [212, 502, 510, 517, 518, 523], "concatdataset": [0, 1], "concaten": 503, "conclus": [3, 10, 13, 14, 15, 16, 354, 399, 401, 426, 427, 440, 532, 542], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 74, 110, 111, 112, 113, 114, 121, 122, 143, 144, 145, 146, 147, 148, 149, 150], "constant": 314, "constructor": [219, 220, 221, 222], "contain": 241, "contract": 453, "conv": 313, "conv1d": [253, 338], "conv2d": [254, 339], "conv3d": [255, 340], "conv_transpose1d": 256, "conv_transpose2d": 257, "conv_transpose3d": 258, "convbnrelu1d": 305, "convbnrelu2d": 306, "convbnrelu3d": 307, "convnext": [40, 104], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [104, 259, 269, 313, 345, 356], "convtranspose1d": 341, "convtranspose2d": 342, "convtranspose3d": 343, "core": 16, "cosh": 474, "cosineannealinglr": 402, "count_flop": 425, "creat": [235, 441, 497], "cross_entropi": 274, "crossentropyloss": 362, "crossvit": [55, 104], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "cube": 475, "current": 544, "custom": [1, 2, 3, 234, 400, 411, 542], "cvt": [65, 104], "cvt_13": 66, "cvt_21": 67, "cvt_w24": 68, "cycliclr": 403, "d": 500, "dagger": [57, 59, 61], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "ddpm": 211, "defin": [2, 234, 400, 411], "definit": [13, 14, 15, 284, 354], "densenet": [69, 104], "densenet_121": 70, "densenet_169": 71, "densenet_201": 72, "densenet_264": 73, "depthseparableconv1d": 308, "depthseparableconv2d": 309, "depthseparableconv3d": 310, "depthwis": 313, "descend": 500, "descript": [163, 164, 165, 166, 167, 168, 180, 181, 182, 429], "design": 16, "det": 19, "detail": [25, 55, 109, 123, 124, 125, 126, 127, 160, 161, 335, 391, 392, 393, 394, 395], "detect": [216, 226], "devic": [16, 441], "diag": 455, "dictionari": 213, "differ": 230, "differenti": 16, "dilat": 260, "dim": 499, "div": 443, "dot": 444, "draw_tensor_graph": 543, "drop_block": 262, "drop_path": 263, "dropblock": 347, "dropout": [264, 268, 269, 349, 353, 356], "dropout1d": [265, 350], "dropout2d": [266, 351], "dropout3d": [267, 352], "droppath": 348, "dtype": 441, "duplic": 500, "educ": 16, "efficientform": [88, 104], "efficientformer_l1": 89, "efficientformer_l3": 90, "efficientformer_l7": 91, "efficientnet": [74, 104], "efficientnet_b0": 76, "efficientnet_b1": 77, "efficientnet_b2": 78, "efficientnet_b3": 79, "efficientnet_b4": 80, "efficientnet_b5": 81, "efficientnet_b6": 82, "efficientnet_b7": 83, "efficientnet_v2": 75, "efficientnet_v2_": 86, "efficientnet_v2_l": 84, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 87, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 355, 356], "einsum": 11, "elu": [242, 322], "embed": [301, 389], "empti": 456, "empty_lik": 457, "enabl": 16, "enhanc": 129, "evalu": 16, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543], "excit": 313, "exp": 476, "exponentiallr": 404, "express": [280, 471, 477, 484, 519], "ey": 458, "fashionmnist": 7, "fast": [216, 217], "faster": [213, 216], "faster_rcnn_resnet_101_fpn": 214, "faster_rcnn_resnet_50_fpn": 215, "featur": [4, 17, 175, 176, 177, 178, 183, 411, 440, 542], "flatten": [498, 504], "floor": 477, "flop": 500, "formula": [402, 403, 404, 406, 407, 408, 409], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 151, 162, 169, 179, 207, 219, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 260, 263, 270, 272, 285, 286, 287, 288, 298, 299, 303, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 503, 508, 511, 513, 514, 515, 516, 520, 521, 522, 524, 525, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540], "fpn": 219, "free": 441, "from": [230, 497], "full": 459, "full_lik": 460, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 214, 215, 223, 224, 225, 226, 227, 228, 231, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 314, 316, 317, 318, 319, 320, 321, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 543], "fuse": 313, "futur": 4, "gelu": [243, 323], "gener": [211, 433, 466], "get": 411, "global": 499, "global_response_norm": 280, "globalresponsenorm": 370, "gpu": [16, 441], "grad_en": 426, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 262, 270, 272, 298, 303, 311, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 508, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530], "grid_sampl": 299, "hardsigmoid": 324, "hardswish": 325, "heapsort": 500, "histogram": 505, "histogram2d": 506, "histogramdd": 507, "hook": [16, 441], "how": [16, 426], "hstack": 508, "huber_loss": 275, "huberloss": 363, "hybrid": 31, "hyperparamet": [149, 150], "ident": 358, "imag": [9, 104, 211, 541], "implement": [55, 109], "incept": [92, 104], "inception_next_atto": 97, "inception_next_bas": 98, "inception_next_smal": 99, "inception_next_tini": 100, "inception_resnet_v1": 102, "inception_resnet_v2": 103, "inception_v1": 93, "inception_v3": 94, "inception_v4": 95, "inceptionnext": [96, 104], "inceptionresnet": 101, "index": [498, 499], "infer": 441, "init": [314, 316, 317, 318, 319, 320, 321], "initi": 315, "inner": 445, "input": [219, 220, 221, 497], "inspect": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "instal": 16, "instance_norm": 282, "instancenorm1d": 371, "instancenorm2d": 372, "instancenorm3d": 373, "integr": [3, 399, 440, 542], "interpol": 303, "inv": 22, "iou": 227, "kaiming_norm": 316, "kaiming_uniform": 317, "keep": 499, "kei": [3, 4, 129, 175, 176, 177, 178, 183, 399, 411, 440, 542], "kernel": [313, 500], "lambdalr": 406, "languag": 212, "layer": [143, 144, 145, 146, 147, 148, 313, 334, 337, 345, 353, 355, 356, 360, 366, 375, 388, 390, 396, 398], "layer_norm": 283, "layernorm": 374, "leaky_relu": 245, "leakyrelu": 326, "learn": 440, "lenet": [104, 105], "lenet_1": 106, "lenet_4": 107, "lenet_5": 108, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 269, 271, 272, 356, 359, 360], "linspac": 461, "list": 497, "load": [1, 430], "log": 478, "log2": 479, "loss": [213, 269, 276, 356, 366], "lr": 410, "lr_schedul": [401, 402, 403, 404, 405, 406, 407, 408, 409], "lrschedul": 405, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 212, 269, 399, 411, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 542, 544], "lucid\u00b2": 16, "masked_fil": 510, "mathemat": [13, 14, 15, 55, 109, 280, 284, 335, 354, 391, 392, 393, 394, 395, 402, 403, 404, 406, 407, 408, 409, 441, 471, 477, 484, 519], "matmul": 446, "matrix": 446, "matrix_pow": 23, "max": [480, 498], "max_pool1d": 295, "max_pool2d": 296, "max_pool3d": 297, "maximum": [447, 498], "maxpool1d": 385, "maxpool2d": 386, "maxpool3d": 387, "maxvit": [104, 109], "maxvit_bas": [110, 111], "maxvit_smal": 112, "maxvit_tini": 113, "maxvit_xlarg": 114, "mean": 481, "mechan": [252, 312], "meshgrid": 511, "metadata": 429, "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 101, 105, 196, 234, 235, 391, 392, 393, 394, 395, 400, 402, 403, 404, 405, 406, 407, 408, 409, 424, 441], "min": 482, "minimum": [448, 499], "mlx": 16, "mnist": 8, "mobilenet": [104, 115, 119], "mobilenet_v2": [116, 120], "mobilenet_v3": 117, "mobilenet_v3_larg": 121, "mobilenet_v3_smal": 122, "mobilenet_v4": 118, "mobilenet_v4_conv_larg": 123, "mobilenet_v4_conv_medium": 124, "mobilenet_v4_conv_smal": 125, "mobilenet_v4_hybrid_larg": 126, "mobilenet_v4_hybrid_medium": 127, "model": [110, 111, 112, 113, 114, 212, 399], "modul": [234, 356], "moduledict": 236, "modulelist": 237, "more": 440, "move": 441, "mse_loss": 277, "mseloss": 364, "multiheadattent": 335, "multipl": [0, 446], "multipli": 449, "multiscaleroialign": 220, "multisteplr": 407, "nadam": 418, "natur": 212, "network": 16, "neural": 16, "new": 427, "newaxi": 427, "nll_loss": 278, "nllloss": 365, "nm": 228, "nn": [16, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 399], "no_grad": 428, "nonzero": 512, "norm": 24, "normal": [269, 281, 284, 318, 356, 375, 534], "note": [11, 214, 215, 299, 459, 460], "number": 433, "numer": 424, "object": [216, 226], "ones": 462, "ones_lik": 463, "oper": [21, 446, 466], "optim": [400, 401, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "option": 335, "organ": 399, "other": 16, "outer": 450, "output": [219, 220, 221], "overview": [3, 4, 10, 92, 93, 94, 95, 101, 102, 103, 105, 106, 107, 108, 115, 116, 117, 118, 123, 124, 125, 126, 127, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 173, 174, 335, 391, 392, 393, 394, 395, 399, 401, 411, 425, 428, 440, 542], "pad": 513, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "parameterdict": 238, "parameterlist": 239, "pass": 207, "perform": [441, 500], "permut": 434, "pinv": 25, "pipelin": [3, 542], "pitfal": 426, "pool": [269, 294, 356, 388], "potenti": 426, "power": 451, "process": [212, 301], "properti": [235, 441], "pvt": [104, 128], "pvt_huge": 130, "pvt_larg": 131, "pvt_medium": 132, "pvt_small": 133, "pvt_tini": 134, "pvt_v2": 129, "pvt_v2_b0": 135, "pvt_v2_b1": 136, "pvt_v2_b2": 137, "pvt_v2_b2_li": 138, "pvt_v2_b3": 139, "pvt_v2_b4": 140, "pvt_v2_b5": 141, "pyramid": 104, "qr": 26, "r": [213, 216, 217, 218], "radam": 419, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 435, "randint": 436, "randn": 437, "random": [432, 433, 434, 435, 436, 437, 438, 439, 440], "randomcrop": 535, "randomgrayscal": 536, "randomhorizontalflip": 537, "randomrot": 538, "randomverticalflip": 539, "ravel": 514, "rearrang": [10, 13, 354], "reciproc": 483, "reduc": [10, 14], "reducelronplateau": 408, "refer": [5, 6, 7, 8, 311, 411], "register_model": 429, "regular": 262, "relu": [246, 313, 327], "relu6": 328, "repeat": [10, 15, 515], "represent": [55, 109, 424, 441], "reshap": 516, "resiz": 540, "resnest": [104, 142], "resnest_101": 143, "resnest_14": 144, "resnest_200": 145, "resnest_26": 146, "resnest_269": 147, "resnest_50": 148, "resnest_50_1s4x24d": 149, "resnest_50_4s2x40d": 150, "resnet": [104, 151], "resnet_1001": 152, "resnet_101": 153, "resnet_152": 154, "resnet_18": 155, "resnet_200": 156, "resnet_269": 157, "resnet_34": 158, "resnet_50": 159, "resnext": [104, 162], "resnext_101_32x16d": 163, "resnext_101_32x32d": 164, "resnext_101_32x4d": 165, "resnext_101_32x8d": 166, "resnext_101_64x4d": 167, "resnext_50_32x4d": 168, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 210, 214, 215, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 312, 314, 316, 317, 318, 319, 320, 321, 328, 354, 389, 425, 426, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 543], "rmsprop": 420, "roialign": 221, "roll": 517, "rotat": 304, "round": 484, "row": 498, "rprop": 421, "rule": [446, 453, 491, 501], "save": 431, "scaled_dot_product_attent": 252, "scaleddotproductattent": 336, "schedul": 410, "se_resnet_101": 170, "se_resnet_152": 171, "se_resnet_18": 172, "se_resnet_34": 173, "se_resnet_50": 174, "se_resnext_101_32x4d": 175, "se_resnext_101_32x8d": 176, "se_resnext_101_64x4d": 177, "se_resnext_50_32x4d": 178, "see": 411, "seed": 438, "select": 313, "selectivekernel": 312, "selectivesearch": 222, "selu": [247, 329], "semodul": 311, "senet": [104, 169], "separ": 313, "sequenc": 229, "sequenti": 240, "sgd": 422, "shape": 16, "sigmoid": [248, 330], "sign": 485, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543], "sin": 486, "sinh": 487, "sk_resnet_18": 180, "sk_resnet_34": 181, "sk_resnet_50": 182, "sk_resnext_50_32x4d": 183, "sknet": [104, 179], "softmax": [249, 331], "solv": 27, "sort": [500, 518], "spars": [356, 390], "spatial": [269, 300], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 90, 91], "split": 519, "sqrt": 488, "squar": 489, "squeez": [313, 520], "stabl": 500, "stack": 521, "start": 411, "state": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "steplr": 409, "sub": 452, "sum": 490, "svd": 28, "swap": 491, "swapax": 491, "swin": 104, "swin_bas": 186, "swin_larg": 187, "swin_smal": 188, "swin_tini": 189, "swin_v2_bas": 190, "swin_v2_giant": 191, "swin_v2_hug": 192, "swin_v2_larg": 193, "swin_v2_smal": 194, "swin_v2_tini": 195, "swintransform": 184, "swintransformer_v2": 185, "swish": 332, "switch": 16, "tan": 492, "tanh": [250, 333, 493], "tensor": [16, 427, 441, 453, 466, 497, 509], "tensordot": 453, "tile": 522, "topk": 523, "totensor": 532, "trace": 494, "track": 441, "train": [16, 214, 215], "transform": [104, 229, 230, 356, 391, 396, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542], "transformer_bas": 231, "transformer_big": 232, "transformerdecod": 392, "transformerdecoderlay": 393, "transformerencod": 394, "transformerencoderlay": 395, "transpos": 495, "tril": 524, "triu": 525, "unari": 466, "unbind": 526, "unfold": [260, 344], "uniform": [319, 439], "uniqu": 527, "unsqueez": 528, "upsampl": 397, "us": [1, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 441, 497], "usag": [4, 84, 85, 86, 87, 93, 94, 95, 102, 103, 105, 106, 107, 108, 123, 124, 125, 126, 127, 175, 176, 177, 178, 183, 233, 304, 335, 391, 392, 393, 394, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 424, 426, 427, 511, 531, 532, 542], "util": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 269, 302, 509], "valu": 519, "var": 496, "variant": [57, 59, 61], "verif": 16, "vggnet": [104, 196], "vggnet_11": 197, "vggnet_13": 198, "vggnet_16": 199, "vggnet_19": 200, "vision": [104, 212, 356, 398], "visual": [104, 543, 544], "vit": [104, 201], "vit_bas": 202, "vit_hug": 203, "vit_larg": 204, "vit_smal": 205, "vit_tini": 206, "vstack": 529, "weight": 315, "where": 530, "wide_resnet_101": 160, "wide_resnet_50": 161, "work": [4, 426], "xavier_norm": 320, "xavier_uniform": 321, "xception": [104, 207, 208], "zero": 464, "zeros_lik": 465, "zfnet": [104, 209, 210]}})