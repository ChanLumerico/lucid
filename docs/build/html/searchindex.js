Search.setIndex({"alltitles": {"@ Operator": [[240, "operator"]], "Activation Functions": [[97, null]], "Activation Layers": [[168, null], [179, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[227, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[108, "advanced-example-with-dilation"]], "Advanced Features": [[308, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[211, "algorithm"], [212, "algorithm"], [213, "algorithm"], [214, "algorithm"], [215, "algorithm"], [216, "algorithm"], [217, "algorithm"], [218, "algorithm"], [219, "algorithm"], [220, "algorithm"], [221, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [82, "architecture"]], "Architecture Details": [[51, "architecture-details"], [52, "architecture-details"]], "Attention Mechanism": [[149, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [42, "attributes"], [53, "attributes"], [60, "attributes"], [70, "attributes"], [75, "attributes"], [80, "attributes"], [82, "attributes"], [86, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [180, "attributes"], [181, "attributes"], [182, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [235, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [305, "attributes"], [306, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"]], "Behavior": [[129, "behavior"], [130, "behavior"], [131, "behavior"], [198, "behavior"], [199, "behavior"], [200, "behavior"]], "Benefits": [[225, "benefits"]], "Binary Functions": [[256, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [42, "class-signature"], [53, "class-signature"], [60, "class-signature"], [70, "class-signature"], [75, "class-signature"], [80, "class-signature"], [82, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [209, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [235, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [208, "conclusion"], [223, "conclusion"], [224, "conclusion"], [225, "conclusion"], [234, "conclusion"], [298, "conclusion"], [308, "conclusion"]], "Containers": [[94, null]], "Conv-BatchNorm-ReLU": [[150, null]], "ConvNets": [[35, null], [84, "convnets"]], "Convolution Functions": [[107, null], [115, null]], "Convolution Layers": [[172, null], [179, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[282, null]], "Creating a Parameter": [[88, null]], "Creating a tensor with gradient tracking": [[235, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[308, "custom-pipelines"]], "Defining a Custom Optimizer": [[210, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[87, null]], "Defining a custom optimizer": [[209, null]], "DenseNet": [[23, null]], "Depthwise Separable Convolution": [[150, null]], "Description": [[54, "description"], [55, "description"], [56, "description"], [57, "description"], [58, "description"], [59, "description"], [71, "description"], [72, "description"], [73, "description"], [226, "description"]], "Dropout Functions": [[114, null], [115, null]], "Dropout Layers": [[178, null], [179, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [41, "example"], [108, "example"], [208, null], [208, null], [208, null], [223, "example"], [225, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [233, "example"], [234, null], [234, null], [234, null], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [266, "example"], [268, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [283, "example"], [285, "example"], [289, "example"], [291, "example"], [292, "example"], [293, "example"], [295, "example"], [296, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[224, null]], "Example 2: Adding a new axis to a 2D tensor": [[224, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[224, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [66, "example-usage"], [67, "example-usage"], [68, "example-usage"], [69, "example-usage"], [74, "example-usage"], [141, "example-usage"], [297, "example-usage"], [298, "example-usage"], [308, "example-usage"]], "Example Use Cases": [[227, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [95, "examples"], [96, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [140, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [151, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [226, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [265, "examples"], [267, "examples"], [269, "examples"], [282, "examples"], [284, "examples"], [287, "examples"], [288, "examples"], [290, "examples"], [294, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [42, "forward-calculation"], [53, "forward-calculation"], [60, "forward-calculation"], [70, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [108, "forward-calculation"], [116, "forward-calculation"], [118, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [140, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [283, "forward-calculation"], [285, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"]], "Forward Pass": [[80, "forward-pass"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [81, "function-signature"], [83, "function-signature"], [85, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [116, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [140, "function-signature"], [141, "function-signature"], [151, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [223, "function-signature"], [225, "function-signature"], [226, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"]], "Fused Layers": [[150, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[210, "getting-started"]], "How It Works": [[223, "how-it-works"], [225, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[307, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[235, null]], "Inspecting Optimizer State": [[210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null]], "Integration with lucid": [[3, "integration-with-lucid"], [208, "integration-with-lucid"], [234, "integration-with-lucid"], [308, "integration-with-lucid"]], "Iterating through a tensor": [[235, null]], "Key Components": [[3, "key-components"], [208, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [66, "key-features"], [67, "key-features"], [68, "key-features"], [69, "key-features"], [74, "key-features"], [210, "key-features"], [234, "key-features"]], "Key Transformations": [[308, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[234, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[115, null], [117, null]], "Linear Layers": [[179, null], [183, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[115, null], [122, null]], "Loss Layers": [[179, null], [189, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[240, "matrix-multiplication-rules"]], "Metadata Captured": [[226, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [75, "methods"], [87, "methods"], [88, "methods"], [209, "methods"], [235, "methods"]], "MobileNet": [[40, null]], "Modules": [[179, null]], "Normalization Functions": [[115, null], [126, null]], "Normalization Layers": [[179, null], [197, null]], "Notes": [[8, "notes"]], "Optimizers": [[222, null]], "Organizing Models": [[208, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [64, "overview"], [65, "overview"], [208, "overview"], [210, "overview"], [234, "overview"], [308, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [95, "parameters"], [96, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [151, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [225, "parameters"], [226, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"]], "Performing backpropagation": [[235, null]], "Pooling Functions": [[115, null], [135, null]], "Pooling Layers": [[179, null], [207, null]], "Potential Pitfalls": [[223, "potential-pitfalls"], [225, "potential-pitfalls"]], "Properties": [[88, "properties"], [235, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[228, null]], "References": [[5, "references"], [6, "references"], [148, "references"], [210, "references"]], "ResNeXt": [[53, null]], "ResNet": [[42, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [83, "returns"], [85, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [116, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [140, "returns"], [141, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [163, "returns"], [223, "returns"], [225, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"]], "SENet": [[60, null]], "SKNet": [[70, null]], "See Also": [[210, "see-also"]], "Selective Kernel": [[150, null]], "Squeeze-and-Excitation": [[150, null]], "Summary Table": [[85, "summary-table"]], "Tensor Generating Functions": [[256, null]], "Tensor Operations": [[256, null]], "Tensor Utilites": [[286, null]], "Type Definitions": [[227, "type-definitions"]], "Unary Functions": [[256, null]], "Usage": [[4, "usage"], [86, "usage"], [141, "usage"], [223, "usage"], [224, "usage"], [225, "usage"], [287, "usage"], [297, "usage"], [298, "usage"], [308, "usage"]], "Use another Tensor as input": [[282, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[211, null]], "Using the Adadelta Optimizer": [[212, null]], "Using the Adagrad Optimizer": [[213, null]], "Using the Adam Optimizer": [[214, null]], "Using the AdamW Optimizer": [[215, null]], "Using the Adamax Optimizer": [[216, null]], "Using the NAdam Optimizer": [[217, null]], "Using the RAdam Optimizer": [[218, null]], "Using the RMSprop Optimizer": [[219, null]], "Using the Rprop Optimizer": [[220, null]], "Using the SGD Optimizer": [[221, null]], "Utility Functions": [[115, null], [139, null]], "VGGNet": [[75, null]], "Weight Initializations": [[152, null]], "Why Use Type Aliases?": [[227, null]], "Xception": [[80, null]], "ZFNet": [[82, null]], "activation Functions": [[115, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[235, null]], "lucid.abs": [[257, null]], "lucid.add": [[236, null]], "lucid.arange": [[247, null]], "lucid.arccos": [[258, null]], "lucid.arcsin": [[259, null]], "lucid.arctan": [[260, null]], "lucid.clip": [[261, null]], "lucid.concatenate": [[283, null]], "lucid.cos": [[262, null]], "lucid.cosh": [[263, null]], "lucid.cube": [[264, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[248, null]], "lucid.div": [[237, null]], "lucid.dot": [[238, null]], "lucid.empty": [[249, null]], "lucid.empty_like": [[250, null]], "lucid.exp": [[265, null]], "lucid.eye": [[251, null]], "lucid.flatten": [[284, null]], "lucid.grad_enabled": [[223, null]], "lucid.hstack": [[285, null]], "lucid.inner": [[239, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[266, null]], "lucid.matmul": [[240, null]], "lucid.max": [[267, null]], "lucid.maximum": [[241, null]], "lucid.mean": [[268, null]], "lucid.meshgrid": [[287, null]], "lucid.min": [[269, null]], "lucid.minimum": [[242, null]], "lucid.models": [[84, null]], "lucid.mul": [[243, null]], "lucid.newaxis": [[224, null]], "lucid.nn": [[208, null]], "lucid.nn.functional": [[115, null]], "lucid.no_grad": [[225, null]], "lucid.ones": [[252, null]], "lucid.ones_like": [[253, null]], "lucid.optim": [[210, null]], "lucid.outer": [[244, null]], "lucid.pad": [[288, null]], "lucid.power": [[245, null]], "lucid.random": [[234, null]], "lucid.random.rand": [[229, null]], "lucid.random.randint": [[230, null]], "lucid.random.randn": [[231, null]], "lucid.random.seed": [[232, null]], "lucid.random.uniform": [[233, null]], "lucid.ravel": [[289, null]], "lucid.reciprocal": [[270, null]], "lucid.register_model": [[226, null]], "lucid.repeat": [[290, null]], "lucid.reshape": [[291, null]], "lucid.sign": [[271, null]], "lucid.sin": [[272, null]], "lucid.sinh": [[273, null]], "lucid.sqrt": [[274, null]], "lucid.square": [[275, null]], "lucid.squeeze": [[292, null]], "lucid.stack": [[293, null]], "lucid.sub": [[246, null]], "lucid.sum": [[276, null]], "lucid.tan": [[277, null]], "lucid.tanh": [[278, null]], "lucid.tensor": [[282, null]], "lucid.tile": [[294, null]], "lucid.trace": [[279, null]], "lucid.transforms": [[308, null]], "lucid.transpose": [[280, null]], "lucid.types": [[227, null]], "lucid.unsqueeze": [[295, null]], "lucid.var": [[281, null]], "lucid.vstack": [[296, null]], "lucid.zeros": [[254, null]], "lucid.zeros_like": [[255, null]], "mobilenet": [[41, null]], "models.summarize": [[85, null]], "nn.AdaptiveAvgPool1d": [[198, null]], "nn.AdaptiveAvgPool2d": [[199, null]], "nn.AdaptiveAvgPool3d": [[200, null]], "nn.AlphaDropout": [[173, null]], "nn.AvgPool1d": [[201, null]], "nn.AvgPool2d": [[202, null]], "nn.AvgPool3d": [[203, null]], "nn.BCELoss": [[184, null]], "nn.BatchNorm1d": [[190, null]], "nn.BatchNorm2d": [[191, null]], "nn.BatchNorm3d": [[192, null]], "nn.Bilinear": [[180, null]], "nn.Buffer": [[86, null]], "nn.Conv1d": [[169, null]], "nn.Conv2d": [[170, null]], "nn.Conv3d": [[171, null]], "nn.ConvBNReLU1d": [[142, null]], "nn.ConvBNReLU2d": [[143, null]], "nn.ConvBNReLU3d": [[144, null]], "nn.CrossEntropyLoss": [[185, null]], "nn.DepthSeparableConv1d": [[145, null]], "nn.DepthSeparableConv2d": [[146, null]], "nn.DepthSeparableConv3d": [[147, null]], "nn.Dropout": [[174, null]], "nn.Dropout1d": [[175, null]], "nn.Dropout2d": [[176, null]], "nn.Dropout3d": [[177, null]], "nn.ELU": [[159, null]], "nn.GELU": [[160, null]], "nn.HuberLoss": [[186, null]], "nn.Identity": [[181, null]], "nn.InstanceNorm1d": [[193, null]], "nn.InstanceNorm2d": [[194, null]], "nn.InstanceNorm3d": [[195, null]], "nn.LayerNorm": [[196, null]], "nn.LeakyReLU": [[161, null]], "nn.Linear": [[182, null]], "nn.MSELoss": [[187, null]], "nn.MaxPool1d": [[204, null]], "nn.MaxPool2d": [[205, null]], "nn.MaxPool3d": [[206, null]], "nn.Module": [[87, null]], "nn.ModuleDict": [[89, null]], "nn.ModuleList": [[90, null]], "nn.NLLLoss": [[188, null]], "nn.Parameter": [[88, null]], "nn.ParameterDict": [[91, null]], "nn.ParameterList": [[92, null]], "nn.ReLU": [[162, null]], "nn.ReLU6": [[163, null]], "nn.SELU": [[164, null]], "nn.SEModule": [[148, null]], "nn.SelectiveKernel": [[149, null]], "nn.Sequential": [[93, null]], "nn.Sigmoid": [[165, null]], "nn.Softmax": [[166, null]], "nn.Tanh": [[167, null]], "nn.functional.adaptive_avg_pool1d": [[129, null]], "nn.functional.adaptive_avg_pool2d": [[130, null]], "nn.functional.adaptive_avg_pool3d": [[131, null]], "nn.functional.alpha_dropout": [[109, null]], "nn.functional.avg_pool1d": [[132, null]], "nn.functional.avg_pool2d": [[133, null]], "nn.functional.avg_pool3d": [[134, null]], "nn.functional.batch_norm": [[125, null]], "nn.functional.bilinear": [[116, null]], "nn.functional.binary_cross_entropy": [[119, null]], "nn.functional.conv1d": [[104, null]], "nn.functional.conv2d": [[105, null]], "nn.functional.conv3d": [[106, null]], "nn.functional.cross_entropy": [[120, null]], "nn.functional.dropout": [[110, null]], "nn.functional.dropout1d": [[111, null]], "nn.functional.dropout2d": [[112, null]], "nn.functional.dropout3d": [[113, null]], "nn.functional.elu": [[95, null]], "nn.functional.gelu": [[96, null]], "nn.functional.huber_loss": [[121, null]], "nn.functional.instance_norm": [[127, null]], "nn.functional.interpolate": [[140, null]], "nn.functional.layer_norm": [[128, null]], "nn.functional.leaky_relu": [[98, null]], "nn.functional.linear": [[118, null]], "nn.functional.max_pool1d": [[136, null]], "nn.functional.max_pool2d": [[137, null]], "nn.functional.max_pool3d": [[138, null]], "nn.functional.mse_loss": [[123, null]], "nn.functional.nll_loss": [[124, null]], "nn.functional.relu": [[99, null]], "nn.functional.rotate": [[141, null]], "nn.functional.selu": [[100, null]], "nn.functional.sigmoid": [[101, null]], "nn.functional.softmax": [[102, null]], "nn.functional.tanh": [[103, null]], "nn.functional.unfold": [[108, null]], "nn.init.constant": [[151, null]], "nn.init.kaiming_normal": [[153, null]], "nn.init.kaiming_uniform": [[154, null]], "nn.init.normal": [[155, null]], "nn.init.uniform": [[156, null]], "nn.init.xavier_normal": [[157, null]], "nn.init.xavier_uniform": [[158, null]], "optim.ASGD": [[211, null]], "optim.Adadelta": [[212, null]], "optim.Adagrad": [[213, null]], "optim.Adam": [[214, null]], "optim.AdamW": [[215, null]], "optim.Adamax": [[216, null]], "optim.NAdam": [[217, null]], "optim.Optimizer": [[209, null]], "optim.RAdam": [[218, null]], "optim.RMSprop": [[219, null]], "optim.Rprop": [[220, null]], "optim.SGD": [[221, null]], "resnet_1001": [[43, null]], "resnet_101": [[44, null]], "resnet_152": [[45, null]], "resnet_18": [[46, null]], "resnet_200": [[47, null]], "resnet_269": [[48, null]], "resnet_34": [[49, null]], "resnet_50": [[50, null]], "resnext_101_32x16d": [[54, null]], "resnext_101_32x32d": [[55, null]], "resnext_101_32x4d": [[56, null]], "resnext_101_32x8d": [[57, null]], "resnext_101_64x4d": [[58, null]], "resnext_50_32x4d": [[59, null]], "se_resnet_101": [[61, null]], "se_resnet_152": [[62, null]], "se_resnet_18": [[63, null]], "se_resnet_34": [[64, null]], "se_resnet_50": [[65, null]], "se_resnext_101_32x4d": [[66, null]], "se_resnext_101_32x8d": [[67, null]], "se_resnext_101_64x4d": [[68, null]], "se_resnext_50_32x4d": [[69, null]], "sk_resnet_18": [[71, null]], "sk_resnet_34": [[72, null]], "sk_resnet_50": [[73, null]], "sk_resnext_50_32x4d": [[74, null]], "transforms.CenterCrop": [[299, null]], "transforms.Compose": [[297, null]], "transforms.Normalize": [[300, null]], "transforms.RandomCrop": [[301, null]], "transforms.RandomGrayscale": [[302, null]], "transforms.RandomHorizontalFlip": [[303, null]], "transforms.RandomRotation": [[304, null]], "transforms.RandomVerticalFlip": [[305, null]], "transforms.Resize": [[306, null]], "transforms.ToTensor": [[298, null]], "vggnet_11": [[76, null]], "vggnet_13": [[77, null]], "vggnet_16": [[78, null]], "vggnet_19": [[79, null]], "wide_resnet_101": [[51, null]], "wide_resnet_50": [[52, null]], "xception": [[81, null]], "zfnet": [[83, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/mobilenet", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/mobilenet.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[257, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[212, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[213, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[214, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[216, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[215, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[198, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[199, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[200, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[236, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[173, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[247, "lucid.arange", false]], "arccos() (in module lucid)": [[258, "lucid.arccos", false]], "arcsin() (in module lucid)": [[259, "lucid.arcsin", false]], "arctan() (in module lucid)": [[260, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[211, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[133, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[201, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[202, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[203, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[190, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[191, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[192, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[184, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[180, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[86, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[299, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[261, "lucid.clip", false]], "compose (class in lucid.transforms)": [[297, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[283, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[151, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[169, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[170, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[171, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[142, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[143, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[144, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[262, "lucid.cos", false]], "cosh() (in module lucid)": [[263, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[185, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[264, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[23, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[24, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[25, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[26, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[27, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[145, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[146, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[147, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[248, "lucid.diag", false]], "div() (in module lucid)": [[237, "lucid.div", false]], "dot() (in module lucid)": [[238, "lucid.dot", false]], "dropout (class in lucid.nn)": [[174, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[175, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[176, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[177, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[159, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[249, "lucid.empty", false]], "empty_like() (in module lucid)": [[250, "lucid.empty_like", false]], "exp() (in module lucid)": [[265, "lucid.exp", false]], "eye() (in module lucid)": [[251, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[284, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[160, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[223, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[285, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[186, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[181, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[28, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[33, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[34, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[29, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[30, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[31, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[32, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[239, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[193, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[194, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[195, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[140, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[153, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[154, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[196, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[161, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[36, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[37, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[38, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[39, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[182, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[266, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[240, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[267, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[138, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[241, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[204, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[205, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[206, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[268, "lucid.mean", false]], "meshgrid() (in module lucid)": [[287, "lucid.meshgrid", false]], "min() (in module lucid)": [[269, "lucid.min", false]], "minimum() (in module lucid)": [[242, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[40, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[41, "lucid.models.mobilenet", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[87, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[89, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[90, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[187, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[243, "lucid.mul", false]], "nadam (class in lucid.optim)": [[217, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[188, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[225, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[155, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[300, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[252, "lucid.ones", false]], "ones_like() (in module lucid)": [[253, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[209, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[244, "lucid.outer", false]], "pad() (in module lucid)": [[288, "lucid.pad", false]], "parameter (class in lucid.nn)": [[88, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[91, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[92, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[245, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[218, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[229, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[230, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[231, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[301, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[302, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[303, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[304, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[305, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[289, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[270, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[226, "lucid.register_model", false]], "relu (class in lucid.nn)": [[162, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[163, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[290, "lucid.repeat", false]], "reshape() (in module lucid)": [[291, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[306, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[42, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[43, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[44, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[45, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[46, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[47, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[48, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[49, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[50, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[53, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[54, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[55, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[56, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[57, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[58, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[59, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[219, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[220, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[61, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[62, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[63, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[64, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[65, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[66, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[67, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[68, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[69, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[232, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[149, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[164, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[148, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[60, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[93, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[221, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[165, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[271, "lucid.sign", false]], "sin() (in module lucid)": [[272, "lucid.sin", false]], "sinh() (in module lucid)": [[273, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[71, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[72, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[73, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[74, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[70, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[166, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[274, "lucid.sqrt", false]], "square() (in module lucid)": [[275, "lucid.square", false]], "squeeze() (in module lucid)": [[292, "lucid.squeeze", false]], "stack() (in module lucid)": [[293, "lucid.stack", false]], "sub() (in module lucid)": [[246, "lucid.sub", false]], "sum() (in module lucid)": [[276, "lucid.sum", false]], "summarize() (in module lucid.models)": [[85, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[277, "lucid.tan", false]], "tanh (class in lucid.nn)": [[167, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[278, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[235, "lucid.Tensor", false]], "tensor() (in module lucid)": [[282, "lucid.tensor", false]], "tile() (in module lucid)": [[294, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[298, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[279, "lucid.trace", false]], "transpose() (in module lucid)": [[280, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[156, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[233, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[295, "lucid.unsqueeze", false]], "var() (in module lucid)": [[281, "lucid.var", false]], "vggnet (class in lucid.models)": [[75, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[76, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[77, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[78, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[79, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[296, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[51, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[52, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[157, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[158, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[80, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[81, "lucid.models.xception", false]], "zeros() (in module lucid)": [[254, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[255, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[82, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[83, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[235, 1, 1, "", "Tensor"], [257, 2, 1, "", "abs"], [236, 2, 1, "", "add"], [247, 2, 1, "", "arange"], [258, 2, 1, "", "arccos"], [259, 2, 1, "", "arcsin"], [260, 2, 1, "", "arctan"], [261, 2, 1, "", "clip"], [283, 2, 1, "", "concatenate"], [262, 2, 1, "", "cos"], [263, 2, 1, "", "cosh"], [264, 2, 1, "", "cube"], [248, 2, 1, "", "diag"], [237, 2, 1, "", "div"], [238, 2, 1, "", "dot"], [249, 2, 1, "", "empty"], [250, 2, 1, "", "empty_like"], [265, 2, 1, "", "exp"], [251, 2, 1, "", "eye"], [284, 2, 1, "", "flatten"], [223, 2, 1, "", "grad_enabled"], [285, 2, 1, "", "hstack"], [239, 2, 1, "", "inner"], [266, 2, 1, "", "log"], [240, 2, 1, "", "matmul"], [267, 2, 1, "", "max"], [241, 2, 1, "", "maximum"], [268, 2, 1, "", "mean"], [287, 2, 1, "", "meshgrid"], [269, 2, 1, "", "min"], [242, 2, 1, "", "minimum"], [243, 2, 1, "", "mul"], [225, 2, 1, "", "no_grad"], [252, 2, 1, "", "ones"], [253, 2, 1, "", "ones_like"], [244, 2, 1, "", "outer"], [288, 2, 1, "", "pad"], [245, 2, 1, "", "power"], [289, 2, 1, "", "ravel"], [270, 2, 1, "", "reciprocal"], [226, 2, 1, "", "register_model"], [290, 2, 1, "", "repeat"], [291, 2, 1, "", "reshape"], [271, 2, 1, "", "sign"], [272, 2, 1, "", "sin"], [273, 2, 1, "", "sinh"], [274, 2, 1, "", "sqrt"], [275, 2, 1, "", "square"], [292, 2, 1, "", "squeeze"], [293, 2, 1, "", "stack"], [246, 2, 1, "", "sub"], [276, 2, 1, "", "sum"], [277, 2, 1, "", "tan"], [278, 2, 1, "", "tanh"], [282, 2, 1, "", "tensor"], [294, 2, 1, "", "tile"], [279, 2, 1, "", "trace"], [280, 2, 1, "", "transpose"], [295, 2, 1, "", "unsqueeze"], [281, 2, 1, "", "var"], [296, 2, 1, "", "vstack"], [254, 2, 1, "", "zeros"], [255, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [40, 1, 1, "", "MobileNet"], [53, 1, 1, "", "ResNeXt"], [42, 1, 1, "", "ResNet"], [60, 1, 1, "", "SENet"], [70, 1, 1, "", "SKNet"], [75, 1, 1, "", "VGGNet"], [80, 1, 1, "", "Xception"], [82, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [41, 2, 1, "", "mobilenet"], [43, 2, 1, "", "resnet_1001"], [44, 2, 1, "", "resnet_101"], [45, 2, 1, "", "resnet_152"], [46, 2, 1, "", "resnet_18"], [47, 2, 1, "", "resnet_200"], [48, 2, 1, "", "resnet_269"], [49, 2, 1, "", "resnet_34"], [50, 2, 1, "", "resnet_50"], [54, 2, 1, "", "resnext_101_32x16d"], [55, 2, 1, "", "resnext_101_32x32d"], [56, 2, 1, "", "resnext_101_32x4d"], [57, 2, 1, "", "resnext_101_32x8d"], [58, 2, 1, "", "resnext_101_64x4d"], [59, 2, 1, "", "resnext_50_32x4d"], [61, 2, 1, "", "se_resnet_101"], [62, 2, 1, "", "se_resnet_152"], [63, 2, 1, "", "se_resnet_18"], [64, 2, 1, "", "se_resnet_34"], [65, 2, 1, "", "se_resnet_50"], [66, 2, 1, "", "se_resnext_101_32x4d"], [67, 2, 1, "", "se_resnext_101_32x8d"], [68, 2, 1, "", "se_resnext_101_64x4d"], [69, 2, 1, "", "se_resnext_50_32x4d"], [71, 2, 1, "", "sk_resnet_18"], [72, 2, 1, "", "sk_resnet_34"], [73, 2, 1, "", "sk_resnet_50"], [74, 2, 1, "", "sk_resnext_50_32x4d"], [85, 2, 1, "", "summarize"], [76, 2, 1, "", "vggnet_11"], [77, 2, 1, "", "vggnet_13"], [78, 2, 1, "", "vggnet_16"], [79, 2, 1, "", "vggnet_19"], [51, 2, 1, "", "wide_resnet_101"], [52, 2, 1, "", "wide_resnet_50"], [81, 2, 1, "", "xception"], [83, 2, 1, "", "zfnet"]], "lucid.nn": [[198, 1, 1, "", "AdaptiveAvgPool1d"], [199, 1, 1, "", "AdaptiveAvgPool2d"], [200, 1, 1, "", "AdaptiveAvgPool3d"], [173, 1, 1, "", "AlphaDropout"], [201, 1, 1, "", "AvgPool1d"], [202, 1, 1, "", "AvgPool2d"], [203, 1, 1, "", "AvgPool3d"], [184, 1, 1, "", "BCELoss"], [190, 1, 1, "", "BatchNorm1d"], [191, 1, 1, "", "BatchNorm2d"], [192, 1, 1, "", "BatchNorm3d"], [180, 1, 1, "", "Bilinear"], [86, 1, 1, "", "Buffer"], [169, 1, 1, "", "Conv1d"], [170, 1, 1, "", "Conv2d"], [171, 1, 1, "", "Conv3d"], [142, 1, 1, "", "ConvBNReLU1d"], [143, 1, 1, "", "ConvBNReLU2d"], [144, 1, 1, "", "ConvBNReLU3d"], [185, 1, 1, "", "CrossEntropyLoss"], [145, 1, 1, "", "DepthSeparableConv1d"], [146, 1, 1, "", "DepthSeparableConv2d"], [147, 1, 1, "", "DepthSeparableConv3d"], [174, 1, 1, "", "Dropout"], [175, 1, 1, "", "Dropout1d"], [176, 1, 1, "", "Dropout2d"], [177, 1, 1, "", "Dropout3d"], [159, 1, 1, "", "ELU"], [160, 1, 1, "", "GELU"], [186, 1, 1, "", "HuberLoss"], [181, 1, 1, "", "Identity"], [193, 1, 1, "", "InstanceNorm1d"], [194, 1, 1, "", "InstanceNorm2d"], [195, 1, 1, "", "InstanceNorm3d"], [196, 1, 1, "", "LayerNorm"], [161, 1, 1, "", "LeakyReLU"], [182, 1, 1, "", "Linear"], [187, 1, 1, "", "MSELoss"], [204, 1, 1, "", "MaxPool1d"], [205, 1, 1, "", "MaxPool2d"], [206, 1, 1, "", "MaxPool3d"], [87, 1, 1, "", "Module"], [89, 1, 1, "", "ModuleDict"], [90, 1, 1, "", "ModuleList"], [188, 1, 1, "", "NLLLoss"], [88, 1, 1, "", "Parameter"], [91, 1, 1, "", "ParameterDict"], [92, 1, 1, "", "ParameterList"], [162, 1, 1, "", "ReLU"], [163, 1, 1, "", "ReLU6"], [164, 1, 1, "", "SELU"], [148, 1, 1, "", "SEModule"], [149, 1, 1, "", "SelectiveKernel"], [93, 1, 1, "", "Sequential"], [165, 1, 1, "", "Sigmoid"], [166, 1, 1, "", "Softmax"], [167, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[129, 2, 1, "", "adaptive_avg_pool1d"], [130, 2, 1, "", "adaptive_avg_pool2d"], [131, 2, 1, "", "adaptive_avg_pool3d"], [109, 2, 1, "", "alpha_dropout"], [132, 2, 1, "", "avg_pool1d"], [133, 2, 1, "", "avg_pool2d"], [134, 2, 1, "", "avg_pool3d"], [125, 2, 1, "", "batch_norm"], [116, 2, 1, "", "bilinear"], [119, 2, 1, "", "binary_cross_entropy"], [104, 2, 1, "", "conv1d"], [105, 2, 1, "", "conv2d"], [106, 2, 1, "", "conv3d"], [120, 2, 1, "", "cross_entropy"], [110, 2, 1, "", "dropout"], [111, 2, 1, "", "dropout1d"], [112, 2, 1, "", "dropout2d"], [113, 2, 1, "", "dropout3d"], [95, 2, 1, "", "elu"], [96, 2, 1, "", "gelu"], [121, 2, 1, "", "huber_loss"], [127, 2, 1, "", "instance_norm"], [140, 2, 1, "", "interpolate"], [128, 2, 1, "", "layer_norm"], [98, 2, 1, "", "leaky_relu"], [118, 2, 1, "", "linear"], [136, 2, 1, "", "max_pool1d"], [137, 2, 1, "", "max_pool2d"], [138, 2, 1, "", "max_pool3d"], [123, 2, 1, "", "mse_loss"], [124, 2, 1, "", "nll_loss"], [99, 2, 1, "", "relu"], [141, 2, 1, "", "rotate"], [100, 2, 1, "", "selu"], [101, 2, 1, "", "sigmoid"], [102, 2, 1, "", "softmax"], [103, 2, 1, "", "tanh"], [108, 2, 1, "", "unfold"]], "lucid.nn.init": [[151, 2, 1, "", "constant"], [153, 2, 1, "", "kaiming_normal"], [154, 2, 1, "", "kaiming_uniform"], [155, 2, 1, "", "normal"], [156, 2, 1, "", "uniform"], [157, 2, 1, "", "xavier_normal"], [158, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[211, 1, 1, "", "ASGD"], [212, 1, 1, "", "Adadelta"], [213, 1, 1, "", "Adagrad"], [214, 1, 1, "", "Adam"], [215, 1, 1, "", "AdamW"], [216, 1, 1, "", "Adamax"], [217, 1, 1, "", "NAdam"], [209, 1, 1, "", "Optimizer"], [218, 1, 1, "", "RAdam"], [219, 1, 1, "", "RMSprop"], [220, 1, 1, "", "Rprop"], [221, 1, 1, "", "SGD"]], "lucid.random": [[229, 2, 1, "", "rand"], [230, 2, 1, "", "randint"], [231, 2, 1, "", "randn"], [232, 2, 1, "", "seed"], [233, 2, 1, "", "uniform"]], "lucid.transforms": [[299, 1, 1, "", "CenterCrop"], [297, 1, 1, "", "Compose"], [300, 1, 1, "", "Normalize"], [301, 1, 1, "", "RandomCrop"], [302, 1, 1, "", "RandomGrayscale"], [303, 1, 1, "", "RandomHorizontalFlip"], [304, 1, 1, "", "RandomRotation"], [305, 1, 1, "", "RandomVerticalFlip"], [306, 1, 1, "", "Resize"], [298, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 84, 85, 86, 87, 88, 89, 91, 92, 93, 129, 130, 131, 149, 185, 188, 198, 199, 200, 201, 204, 205, 208, 209, 210, 224, 226, 240, 248, 266, 268, 276, 279, 281, 282, 292, 298, 300, 308], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 41, 60, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 285, 288, 289, 290, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308], "000": [5, 6, 249, 250], "0000": [185, 186, 188], "0001": 211, "000e": [249, 250], "001": [211, 214, 215, 217, 218, 221], "002": [216, 217], "004": 217, "005": 161, "008": [41, 84], "01": [98, 161, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221], "01051757": 231, "013": [26, 84], "016": [43, 84], "0205": 185, "0217": 185, "0227": 185, "024": [65, 84], "026": [54, 84], "028": [59, 84], "0299": 185, "032": [50, 84], "044715": [96, 160], "0450": 185, "0451": 185, "047": [77, 84], "04719755": 258, "0474259": 101, "048": [67, 84], "0480": 185, "04861": 84, "05": [125, 127, 128, 142, 143, 144, 161, 190, 191, 192, 193, 194, 195, 196], "0507": [100, 164], "06": [212, 220], "069": [48, 84], "07": [119, 120, 184, 185], "0700": 185, "0706508": 167, "071": [43, 84], "0721": 185, "073": [73, 84], "0794": 188, "08": [214, 215, 216, 217, 218, 219], "0802": 188, "08333333": 17, "085537": 265, "088": [65, 84], "0900": [166, 185], "096": [81, 84], "0986": [102, 166], "09861229": 266, "0992": 185, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 41, 60, 66, 67, 68, 69, 70, 74, 75, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 75, 82, 83, 84, 85, 89, 90, 93, 105, 106, 116, 118, 129, 169, 170, 171, 176, 177, 180, 182, 191, 192, 194, 198, 202, 203, 205, 213, 226, 230, 233, 234, 237, 240, 243, 244, 260, 276, 299, 301, 302, 304], "100": [22, 76, 77, 78, 79, 84, 226, 308], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "1000000": 211, "1001": [43, 84, 185], "1003": 185, "1007": 84, "101": [44, 51, 54, 55, 56, 57, 58, 61, 66, 67, 68, 84], "1014": 100, "102": [48, 84], "1025": [90, 93], "1026": [90, 93], "1027": [90, 93], "10499": 101, "1050": 165, "1054": 188, "1056": [90, 93], "10590": 84, "1097": 84, "11": [46, 63, 75, 76, 84, 116, 169, 170, 171, 176, 180, 191, 192, 194, 202, 203, 205, 240, 299, 300, 301, 302, 304], "1105": 84, "1109": 84, "1111": 184, "1134": 116, "114b": 302, "119": 116, "1192": [101, 102, 166], "12": [23, 24, 25, 26, 27, 37, 38, 91, 116, 131, 169, 170, 171, 176, 177, 180, 191, 192, 194, 200, 202, 203, 205, 240, 244, 245, 299, 301, 302, 304], "120": [36, 39], "121": [23, 24, 84], "123": [153, 154, 155, 156, 157, 158, 232, 233], "124": [153, 154, 157, 158], "125": 203, "1250": 186, "1251": 84, "1258": 84, "126": [51, 84], "128": [33, 42, 51, 52, 75, 84, 93, 149, 297, 308], "128x128": [297, 308], "13": [29, 75, 77, 84, 116, 169, 170, 171, 180, 192, 202, 203, 205, 240, 299, 301, 302, 304], "1314": 84, "132": [76, 84], "1324": 84, "133": [77, 84], "138": [78, 84], "14": [25, 84, 169, 170, 171, 176, 177, 180, 192, 202, 203, 205, 227, 240, 244, 299, 301, 302, 304], "1409": 84, "143": [79, 84], "145": 116, "149": [25, 43, 84], "15": [0, 116, 169, 170, 171, 180, 192, 202, 203, 205, 240, 244, 279, 299, 301, 302, 304, 308], "1513": 188, "152": [45, 62, 84], "155": 240, "1556": 84, "1588": [96, 160], "16": [23, 24, 36, 39, 54, 60, 75, 78, 84, 90, 91, 93, 130, 131, 142, 143, 144, 148, 149, 169, 170, 171, 176, 177, 180, 191, 192, 199, 200, 202, 203, 205, 208, 240, 244, 274, 299, 301, 302, 304], "160": [44, 84], "16227766": 18, "16425": 188, "1643": 184, "166": 240, "169": [23, 25, 84], "17": [169, 170, 171, 180, 192, 203, 239, 299, 301, 302, 304], "170": 116, "1704": 84, "17520119": 273, "177": [56, 84], "18": [38, 46, 63, 71, 84, 169, 170, 171, 176, 180, 192, 203, 243, 244, 299, 301, 302, 304], "1800": 185, "19": [75, 79, 84, 105, 106, 116, 170, 171, 192, 238, 240], "192": [37, 38, 45, 84], "194": [54, 84], "1966": [102, 165, 166], "1998": [84, 185], "1_53": 84, "1d": [104, 129, 132, 136, 142, 145, 190, 193, 198, 233, 240, 248, 279, 287, 288, 289, 290, 294], "1e": [119, 120, 125, 127, 128, 142, 143, 144, 184, 185, 190, 191, 192, 193, 194, 195, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "1e6": 211, "1st": [21, 82], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 46, 63, 71, 82, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "20": [0, 5, 6, 26, 84, 89, 90, 93, 170, 171, 176, 192, 244, 265], "200": [47, 84], "201": [26, 84], "2011": 148, "2012": 84, "2014": 84, "2015": 84, "2016": 84, "2017": 84, "2018": [84, 148], "2019": 84, "2023": 148, "2039": 188, "204": 171, "21": [49, 64, 84, 91, 116, 170, 171, 192, 244], "211": 240, "22": [33, 81, 84, 116, 170, 171, 176, 192, 238, 240], "2231": [185, 188], "224": [21, 23, 24, 25, 26, 27, 41, 42, 52, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 82, 84], "2247": [190, 191, 192, 193, 194, 195, 196], "224x224": [29, 66, 67, 68, 69, 74], "226": 240, "22752314": 231, "2278": 84, "23": [44, 51, 54, 55, 56, 57, 58, 61, 170, 171, 192], "232": [41, 68, 84], "2324": [84, 164], "234": [153, 154, 155, 156, 157, 158, 233], "24": [23, 24, 47, 116, 130, 170, 171, 176, 192, 199, 244], "240": [79, 84], "2424": [102, 166], "2447": 166, "246": [37, 84], "25": [0, 50, 59, 71, 84, 101, 165, 171, 187, 192, 202, 203, 237, 270, 281], "2500": [184, 186, 188], "2512": 159, "2547": 164, "256": [42, 75], "26": [91, 118, 171, 182, 192, 244], "26325684": 231, "264": [27, 84], "2689": [102, 165, 166], "269": [48, 84], "27": [69, 84, 116, 169, 171, 192, 264], "272": [58, 84], "274": [74, 84], "276": [153, 154, 157, 158], "28": [37, 38, 65, 84, 116, 171, 244], "28x28": [5, 6, 37, 38], "29": [74, 84, 171], "299": [80, 84], "299r": 302, "299x299": [30, 31, 33, 34], "2_i": [193, 194, 195], "2d": [105, 112, 130, 133, 137, 143, 146, 191, 194, 199, 240, 248, 251, 279, 284, 287, 288, 290, 294, 304], "2e": 216, "2nd": [21, 82], "2x2": [108, 299, 301], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 86, 87, 88, 90, 91, 92, 93, 96, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306], "30": [30, 48, 84, 90, 141, 171, 304], "3026": 188, "31": [116, 171, 240], "310": [249, 250], "31622777": 18, "319": 84, "32": [23, 25, 26, 39, 54, 55, 56, 57, 59, 84, 90, 93, 116, 118, 130, 142, 143, 144, 148, 149, 170, 171, 182, 199, 208, 238, 239, 244], "321": [153, 154, 157, 158], "326": [61, 84], "32x16d": 84, "32x32": [36, 39], "32x32d": 84, "32x4d": [66, 69, 74, 84], "32x8d": [67, 84], "33": [27, 84, 90, 93, 118, 171, 182], "33333333": 17, "336": [57, 76, 84], "337": [27, 84], "34": [49, 64, 72, 84, 90, 93, 116, 171, 240, 244], "342": [153, 154, 157, 158], "345": [153, 154, 155, 156, 157, 158, 233], "35": [34, 84, 90, 93, 171], "352": [29, 84], "3567": [184, 188], "357": [78, 83, 84], "36": [45, 47, 62, 171], "3679": [95, 100, 159], "368": [71, 73, 84], "37": 169, "372": 116, "375": 187, "3750": 186, "378": [38, 84], "38344152": 229, "38629436": 266, "389056": 265, "392": [30, 84], "393": [29, 84], "3935": 159, "3d": [106, 113, 131, 134, 138, 144, 147, 171, 192, 195, 200], "3x3": [84, 234], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 41, 42, 44, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 64, 65, 72, 73, 84, 85, 91, 93, 104, 105, 106, 108, 111, 112, 113, 116, 118, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 218, 219, 221, 224, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 255, 261, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306], "40": [31, 84], "400": 39, "4044": 184, "4076": 185, "4096": [21, 82], "41421356": 10, "416": [48, 66, 84], "41666667": 17, "41808962": 231, "419974": 103, "4199743": 167, "42": [116, 148, 227, 234], "421": [153, 154, 157, 158], "423": [153, 154, 155, 156], "42718872": 18, "4278": 84, "4284": 84, "4286": 184, "43": [238, 240], "4323": 159, "4375": 186, "43758721": 229, "44": [44, 56, 84], "4472136": 12, "4495": [192, 195], "45": [72, 84, 116, 141, 304], "4510": 84, "4520": 84, "4545": 173, "455": [58, 84], "468": [55, 84], "4700": 84, "4708": 84, "47112767": 260, "472": [55, 84], "48": [23, 26, 27, 48, 66, 84, 118, 182], "480": [25, 84], "49": [61, 84], "4979": 159, "4x4": 306, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 70, 71, 72, 73, 82, 84, 85, 87, 88, 89, 90, 91, 93, 96, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 121, 123, 125, 127, 128, 129, 132, 133, 140, 142, 143, 144, 149, 151, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 220, 224, 227, 230, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 255, 257, 258, 259, 267, 268, 269, 270, 271, 276, 279, 280, 281, 282, 285, 287, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "50": [42, 50, 52, 59, 65, 69, 73, 74, 84, 118, 182, 220, 238, 240, 302, 303, 305, 308], "5000": [184, 186, 188], "510": 84, "5108": 188, "512": [34, 42, 46, 72, 84], "519": 84, "52359878": 259, "53": [116, 239], "530": [55, 84], "543": [153, 154, 155, 156, 157, 158, 233], "54308063": 263, "544": [78, 84], "545": 245, "5455": 173, "549": [44, 84], "557": [50, 84], "559": [69, 84], "563": [153, 154, 157, 158], "569": [67, 84], "57": [73, 84, 116], "57079633": [258, 259], "57366333": 232, "586": [31, 84], "587g": 302, "592": [63, 84], "5987": 84, "5995": 84, "5th": [21, 82], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 42, 49, 50, 52, 59, 64, 65, 72, 73, 82, 91, 92, 104, 105, 106, 108, 113, 116, 118, 129, 154, 158, 163, 169, 170, 171, 174, 175, 176, 177, 180, 182, 184, 190, 191, 192, 193, 194, 195, 196, 198, 202, 203, 205, 206, 212, 220, 224, 227, 233, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 267, 268, 269, 276, 279, 280, 281, 282, 285, 290, 291, 296, 298, 299, 300, 301, 302, 304, 306], "60": [45, 84], "6052": 188, "6065": 159, "608": [83, 84], "61": [22, 39, 84], "6124": [190, 191, 192, 193, 194, 195, 196], "62": [83, 84, 116], "62686041": 273, "630": 84, "6321": [95, 159], "63245553": 18, "64": [23, 27, 42, 47, 58, 70, 75, 84, 90, 93, 116, 148, 149], "645": 84, "64589411": 229, "647": [71, 84], "64x4d": [68, 84], "654": [153, 154, 155, 156, 157, 158, 233], "657": [153, 154, 157, 158], "6590": [102, 166], "66": [62, 84], "6652": 166, "66666667": 17, "6667": 184, "667": [79, 84], "6682": 184, "669": [47, 84], "67": 240, "672": [49, 84], "67326": 164, "6733": 100, "678": [153, 154, 155, 156, 157, 158], "68811989": 231, "689": [46, 84], "69314718": 266, "696": [51, 84], "7": [16, 24, 75, 84, 91, 104, 105, 106, 108, 113, 116, 118, 119, 120, 129, 149, 160, 163, 164, 165, 167, 169, 170, 171, 176, 177, 180, 182, 184, 185, 187, 191, 192, 194, 195, 198, 202, 203, 205, 206, 227, 230, 233, 236, 238, 239, 240, 244, 246, 248, 265, 268, 276, 279, 280, 281, 294, 298, 299, 300, 301, 302, 304, 306], "70": [5, 6], "7001": 185, "704": [27, 56, 84], "706": [39, 84], "70710678": [12, 272], "7132": 84, "7141": 84, "7147": 188, "7182818": 265, "726791": 84, "7311": [102, 165, 166], "739": [33, 84], "74": 240, "75": [118, 182, 187, 211], "7581": 100, "760": [74, 84], "76159416": 278, "7616": [103, 167], "76219569": 263, "7635": 164, "770": 84, "772": 245, "778": [63, 84], "78": [52, 84], "78357324": 231, "78539816": 260, "791": [57, 84], "79172504": 229, "792": [54, 84], "797": [49, 84], "7x7": 82, "8": [15, 19, 23, 42, 45, 48, 54, 55, 56, 57, 58, 59, 62, 71, 72, 73, 85, 90, 91, 93, 104, 105, 106, 108, 113, 116, 118, 119, 129, 130, 131, 142, 143, 144, 148, 160, 164, 165, 167, 169, 170, 171, 174, 175, 176, 177, 180, 182, 184, 187, 191, 192, 194, 195, 198, 199, 200, 202, 203, 205, 206, 214, 215, 216, 217, 218, 219, 227, 230, 237, 238, 239, 240, 244, 245, 247, 248, 264, 268, 276, 279, 280, 281, 298, 299, 300, 301, 302, 304, 306], "80": [5, 6], "8005": 185, "808": [45, 84], "817": [30, 84], "818": 84, "8182": 173, "82": 116, "821": [62, 84], "83": [58, 84], "833": 84, "84": [36, 38, 39], "840": [22, 84], "8413": [96, 160], "847": [34, 84], "848": [62, 77, 84], "856": [24, 84], "8584": 164, "86": 84, "862": [81, 84], "863": [76, 84], "864": [47, 84], "868": [64, 84], "872": [61, 84], "876": [153, 154, 157, 158, 233], "88": [57, 68, 84], "8808": [102, 165, 166], "886": [51, 84], "887": 245, "891773": 229, "89442719": 12, "895": [72, 84], "896": [69, 84], "9": [0, 1, 3, 6, 19, 84, 105, 108, 116, 118, 129, 169, 170, 171, 176, 180, 182, 184, 191, 192, 194, 198, 202, 203, 205, 211, 212, 214, 215, 216, 217, 218, 219, 221, 227, 230, 233, 236, 240, 244, 245, 246, 248, 274, 275, 298, 299, 300, 301, 302, 304], "904": [59, 84], "90709145": 232, "9091": 173, "9120": 188, "9163": 188, "928": [26, 84], "93": [67, 84], "94": 43, "9486833": 18, "949e": [249, 250], "9526": 101, "9545": 160, "955": [66, 84], "958": [64, 84], "96366276": 229, "9640": 167, "96402758": 278, "973": [52, 84], "978": [24, 84], "984": [31, 68, 84], "99": 219, "9957": 188, "99734545": 232, "999": [0, 214, 215, 216, 217, 218], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 75, 76, 77, 78, 79, 84, 87, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 116, 118, 119, 120, 124, 125, 127, 128, 140, 149, 173, 174, 175, 176, 177, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304], "As": 232, "Be": 0, "By": [0, 2, 3, 8, 43, 44, 45, 46, 47, 48, 49, 50, 88, 141, 208, 218, 224, 229, 230, 231, 233, 298, 308], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 93, 95, 96, 98, 99, 100, 101, 103, 116, 118, 140, 153, 154, 157, 158, 164, 169, 170, 171, 180, 182, 190, 191, 192, 193, 194, 195, 208, 210, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 265, 266, 267, 268, 269, 272, 274, 276, 279, 280, 281, 288, 290, 292, 294, 295, 308], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 42, 85, 87, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 113, 116, 118, 125, 127, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 169, 170, 171, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 209, 214, 215, 219, 220, 226, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 302, 303, 305, 306], "In": [3, 8, 17, 104, 105, 106, 185, 188, 223, 224, 225, 297, 308], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 75, 81, 84, 87, 89, 90, 91, 92, 93, 113, 116, 140, 141, 142, 143, 144, 148, 160, 162, 163, 167, 180, 181, 184, 185, 186, 187, 188, 198, 199, 200, 208, 209, 210, 211, 217, 219, 220, 221, 224, 232, 236, 237, 238, 241, 242, 243, 245, 246, 267, 269, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298], "Its": [19, 234], "Near": 17, "No": 108, "Not": 181, "One": [37, 308], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "There": 291, "These": [4, 8, 9, 12, 15, 18, 20, 51, 52, 71, 72, 73, 81, 84, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 220, 227, 234, 308], "To": [3, 84, 210, 231, 234, 249, 250, 287, 308], "With": [3, 108, 298, 308], "_": [15, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 118, 140, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 211, 212, 214, 215, 216, 217, 219, 221, 238, 239, 240, 244, 279, 280, 299, 300, 301, 303, 304, 305], "_1": [12, 89, 90, 91, 92, 93, 116, 180, 244, 283, 285, 296], "_2": [12, 89, 90, 91, 92, 93, 116, 180, 244, 283, 285, 296], "__call__": [1, 87], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 235, 297, 298], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 209, "__setattr__": 87, "_activ": 102, "_arraylik": [227, 248, 250, 253, 255], "_arraylikeint": 288, "_arrayorscalar": [86, 88, 227, 235, 282], "_base_activ": 36, "_base_dtyp": [247, 249, 252, 254], "_c": 300, "_decai": 217, "_fanmod": [153, 154], "_grad_en": [223, 225], "_i": [12, 16, 102, 116, 166, 187, 190, 196, 201, 204, 238, 239, 241, 242, 244, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 290, 292, 295, 296], "_in": [153, 154, 157, 158], "_j": [102, 166, 201, 204, 244, 268, 276, 280, 281], "_k": 293, "_left": 140, "_make_lay": 75, "_modul": 87, "_n": [12, 89, 90, 91, 92, 93, 283, 285, 296], "_numpyarrai": 227, "_out": [153, 154, 157, 158, 290, 294], "_p": 16, "_pad": 288, "_paddingstr": [142, 143, 144, 145, 146, 147, 169, 170, 171], "_paramet": 87, "_reductiontyp": [119, 120, 121, 123, 124, 184, 185, 186, 187, 188], "_right": 140, "_scalar": [151, 155, 156, 157, 158, 227, 247, 261], "_seresnetbottleneck": [61, 62, 65], "_seresnetmodul": [63, 64], "_shapelik": [85, 128, 196, 227, 230, 252, 254, 291, 292, 295], "_size": [129, 130, 131], "_skresnetmodul": [71, 72, 73], "_slope": 161, "_statedict": 209, "_t": [218, 219], "_tensor": [86, 88, 248, 282], "_tensorop": 235, "_u": 17, "_v": 17, "_valu": [261, 288], "_width": 288, "a_i": [241, 242, 245], "aaai": 84, "ab": 256, "abc": [2, 209], "abil": [8, 84, 308], "about": [8, 85], "abov": [8, 223, 225, 232, 248, 251], "absolut": [15, 16, 121, 216, 257], "abstract": [2, 3, 208, 209, 210, 211, 219, 221], "abstractmethod": 209, "acceler": [84, 164, 190, 191, 192, 211, 217, 219, 221], "accept": [181, 229, 235], "access": [0, 2, 3, 4, 5, 6, 54, 55, 56, 57, 58, 59, 86, 88, 89, 90, 91, 92, 93, 291], "accord": [140, 169, 170, 171, 180, 182, 185, 188, 212, 213, 214, 215, 216, 217, 218, 280], "accordingli": 11, "account": [15, 17, 18], "accumul": [211, 212, 213, 236, 237, 241, 242, 243, 246], "accur": 62, "accuraci": [40, 65, 84], "achiev": [53, 54, 55, 56, 57, 58, 59, 84, 104, 105, 106, 129, 198, 199, 200, 217, 303, 305], "across": [0, 41, 86, 90, 93, 128, 129, 130, 131, 157, 158, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 227, 229, 230, 231, 232, 233, 234, 249, 250, 268, 281], "act": 215, "activ": [8, 21, 36, 43, 47, 48, 60, 75, 82, 84, 89, 93, 95, 96, 98, 99, 100, 101, 102, 103, 109, 142, 143, 144, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 184, 185, 188, 190, 191, 192, 196, 267, 269], "actual": [88, 184, 185, 187, 188, 235, 301], "ad": [23, 42, 87, 89, 90, 91, 92, 93, 104, 105, 106, 116, 118, 119, 120, 125, 127, 128, 132, 133, 134, 136, 137, 138, 142, 143, 144, 169, 170, 171, 184, 185, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 217, 218, 219, 226, 295, 308], "adadelta": 222, "adagrad": [212, 222], "adam": [84, 215, 216, 217, 218, 222], "adamax": 222, "adamw": 222, "adapt": [21, 28, 36, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 84, 129, 130, 131, 148, 149, 198, 199, 200, 212, 213, 214, 217, 218, 219, 220], "adaptive_avg_pool1d": [115, 135, 198], "adaptive_avg_pool2d": [115, 135, 199], "adaptive_avg_pool3d": [115, 135, 200], "adaptiveavgpool1d": [179, 207], "adaptiveavgpool2d": [21, 60, 75, 82, 179, 207], "adaptiveavgpool3d": [179, 207], "add": [4, 87, 89, 90, 93, 116, 118, 169, 170, 171, 180, 182, 196, 209, 211, 214, 219, 221, 224, 256, 288, 295], "add_modul": [87, 93], "add_param_group": 209, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 87, 90, 93, 116, 118, 125, 127, 180, 182, 190, 191, 192, 193, 194, 195, 211, 217, 224, 234, 236, 293], "addition": 217, "address": [185, 188, 214, 215, 218], "adjust": [33, 40, 41, 66, 67, 68, 69, 70, 74, 129, 130, 131, 149, 173, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 210, 214, 218, 219, 220, 285, 296], "advanc": [3, 17, 47, 84, 90, 93, 104, 105, 106, 129, 130, 131, 198, 199, 200, 208, 211], "advantag": [34, 225], "affect": [223, 289, 292, 297], "affin": [142, 143, 144, 190, 191, 192, 193, 194, 195, 196, 304], "after": [15, 21, 82, 88, 89, 90, 91, 92, 93, 113, 148, 149, 159, 160, 161, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 215, 225, 235, 236, 237, 241, 242, 243, 245, 246, 288, 298], "afterward": 225, "aggreg": [84, 149, 244, 290, 294], "aim": [4, 8], "al": [29, 84], "alex": 84, "alexnet": [35, 82, 84], "algebra": [8, 9, 251], "algorithm": [5, 8, 15, 17, 18, 209, 210, 234], "align": [19, 140, 239, 240], "align_corn": 140, "all": [0, 3, 4, 8, 18, 84, 87, 89, 90, 91, 92, 93, 105, 106, 129, 130, 131, 133, 134, 137, 138, 140, 143, 144, 149, 161, 162, 171, 198, 199, 200, 202, 203, 206, 208, 209, 210, 211, 214, 219, 220, 221, 245, 267, 268, 269, 276, 279, 281, 283, 284, 285, 290, 292, 293, 294, 296, 299, 300, 308], "allevi": [84, 95], "alloc": [249, 250], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 42, 53, 66, 67, 68, 69, 70, 74, 84, 88, 89, 90, 91, 92, 93, 95, 98, 99, 102, 106, 108, 141, 149, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 208, 212, 213, 224, 247, 252, 254, 255, 280, 282, 287, 297, 298, 308], "along": [102, 140, 149, 166, 239, 240, 244, 267, 268, 269, 276, 279, 281, 283, 285, 287, 290, 293, 294, 295, 296, 303, 305], "alongsid": 86, "alpha": [95, 98, 100, 109, 159, 164, 173, 211, 219], "alpha_dropout": [114, 115, 173], "alphadropout": [178, 179], "alphadropoutmodel": 173, "alreadi": 226, "also": [85, 95, 96, 98, 99, 100, 101, 103, 116, 118, 140, 217, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296], "alter": [93, 291], "altern": [1, 160, 212, 240], "alwai": [88, 289, 302, 303, 305], "among": [30, 149], "amount": [104, 105, 106, 132, 133, 134, 136, 137, 138, 145, 146, 147, 217], "amsgrad": [214, 215], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 96, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 130, 131, 140, 141, 145, 146, 147, 149, 157, 158, 159, 163, 165, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 217, 219, 225, 226, 227, 235, 240, 248, 251, 261, 268, 276, 281, 283, 290, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "analog": [290, 294], "analysi": [4, 148, 169, 170, 171, 195, 201, 203, 204, 206], "andreetto": 84, "andrew": 84, "angl": [141, 304], "ani": [0, 1, 2, 3, 15, 17, 22, 42, 70, 81, 83, 86, 87, 88, 89, 91, 92, 95, 96, 98, 99, 100, 101, 103, 109, 110, 116, 118, 125, 127, 165, 196, 208, 209, 223, 225, 226, 232, 235, 247, 248, 249, 251, 252, 253, 254, 255, 267, 269, 280, 282, 283, 284, 285, 288, 290, 293, 294, 295, 296, 297, 308], "anoth": [92, 246, 253, 255, 298, 308], "api": [4, 198, 199, 200, 308], "appear": 209, "append": [90, 92, 93], "appli": [2, 4, 5, 6, 8, 15, 21, 53, 70, 80, 82, 84, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 142, 143, 144, 148, 149, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 215, 216, 217, 218, 240, 288, 290, 297, 300, 302, 303, 304, 305, 306, 308], "applic": [4, 17, 23, 33, 34, 40, 84, 104, 127, 169, 170, 171, 180, 182, 234, 247, 254, 288, 306], "approach": [3, 32, 93, 215], "appropri": [17, 84, 87, 91, 93, 169, 170, 171, 173, 174, 175, 185, 202, 203, 223, 225], "approx": 100, "approxim": [17, 96, 160, 202, 205], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 84, 86, 87, 88, 89, 90, 91, 92, 93, 102, 104, 105, 106, 108, 116, 118, 130, 131, 140, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 166, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 214, 215, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 257, 261, 265, 267, 268, 269, 270, 271, 276, 279, 280, 283, 287, 290, 291, 294, 297, 298, 299, 301, 302, 306, 308], "arang": 256, "arbitrari": [90, 181, 249, 250, 261, 266, 268, 272, 274, 276, 280, 281], "arcco": 256, "arch": 226, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 42, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 91, 92, 93, 96, 148, 162, 180, 181, 208, 226], "arcsin": 256, "arctan": 256, "area": 140, "arg": [87, 181, 226, 249], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 87, 93, 181, 229, 249, 280], "around": [12, 141, 167], "arr": [227, 283, 285, 293, 296], "arrai": [8, 86, 88, 224, 227, 235, 240, 248, 253, 255, 282, 289, 290, 298, 308], "art": 84, "artifici": 84, "arxiv": 84, "asarrai": 227, "asgd": 222, "aspect": 306, "assign": [87, 89, 91, 93, 140, 185, 188], "assist": [28, 29, 30], "associ": [91, 92], "assum": [0, 1, 209, 210, 223], "attempt": [89, 93], "attent": [70, 92, 116, 148], "attribut": 87, "audio": 169, "augment": [3, 4, 63, 141, 234, 290, 294, 297, 301, 302, 303, 304, 305, 308], "autodiff": 8, "autograd": 208, "automat": [4, 8, 88, 89, 90, 91, 92, 208, 229, 230, 231, 233, 235, 249, 250, 255, 287, 298], "auxiliari": [28, 29, 30, 86], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 42, 53, 60, 70, 75, 82, 86, 129, 130, 131, 132, 133, 134, 140, 148, 149, 187, 198, 199, 200, 201, 202, 203, 211, 212, 214, 219, 268], "avg_down": 42, "avg_pool": [201, 202, 203], "avg_pool1d": [115, 135], "avg_pool2d": [115, 135], "avg_pool3d": [115, 135], "avgpool": [21, 60, 75, 82, 149], "avgpool1d": [179, 207], "avgpool1dmodel": 201, "avgpool2d": [179, 207], "avgpool2dmodel": 202, "avgpool3d": [179, 207], "avgpool3dmodel": 203, "avoid": [2, 3, 17, 91, 225], "ax": [9, 224, 267, 268, 269, 276, 280, 281, 290, 292, 294], "axi": [102, 166, 239, 240, 267, 268, 269, 276, 281, 283, 285, 287, 288, 290, 292, 293, 294, 295, 296, 303, 305], "b": [9, 19, 84, 116, 118, 156, 169, 170, 171, 180, 182, 224, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 283, 285, 293, 296, 302], "b_i": [241, 242, 245], "back": [140, 202, 203, 226, 239, 244, 290, 294], "backbon": [71, 72, 73], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 225, 231, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 265, 267, 269, 282, 288, 290, 294, 298], "backward": [8, 86, 88, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 235, 298], "balanc": [54, 55, 56, 57, 58, 59, 186], "bar": 211, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 53, 54, 55, 56, 57, 58, 59, 70, 75, 80, 84, 87, 89, 90, 91, 92, 108, 116, 129, 130, 131, 149, 173, 185, 186, 198, 199, 200, 208, 209, 210, 211, 215, 219, 220, 221, 236, 237, 241, 242, 243, 245, 246, 255, 265, 266, 267, 269, 280, 287, 288, 301, 302, 303, 304, 305], "base_width": [51, 52, 53, 70], "basic": [8, 21, 42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 80, 82, 85, 104, 105, 106, 129, 130, 131, 142, 143, 144, 145, 146, 147, 148, 153, 154, 157, 158, 198, 199, 200, 299, 300, 301, 302, 303, 304, 305, 306], "basicblock": [42, 46, 49], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 60, 66, 67, 68, 69, 74, 104, 105, 106, 108, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 169, 170, 171, 180, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 218, 240, 299, 300, 301, 302, 304, 306], "batch_norm": [115, 126, 190, 191, 192], "batch_norm1": 93, "batch_norm2": 93, "batch_siz": [1, 2, 3, 80, 149], "batchnorm": [142, 143, 144], "batchnorm1d": [142, 179, 197], "batchnorm1dmodel": 190, "batchnorm2d": [93, 143, 179, 197], "batchnorm2dmodel": 191, "batchnorm3d": [144, 179, 197], "batchnorm3dmodel": 192, "bceloss": [179, 189], "becaus": [2, 230], "becom": [16, 87, 212, 220], "befor": [15, 60, 85, 88, 211, 217, 225, 232, 288, 300, 308], "begin": [1, 16, 95, 98, 99, 100, 159, 161, 162, 164, 186, 187, 188, 201, 202, 203, 204, 205, 206, 218, 220, 224, 234, 241, 242, 244, 257, 261, 267, 269, 271, 288], "behav": [186, 279], "behavior": [84, 90, 93, 223, 234, 240, 250, 308], "being": [92, 141, 173, 174, 175, 176, 177, 218, 223, 225, 283, 285, 296], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 240, 248, 251], "benchmark": [5, 6], "benefici": 93, "benefit": [95, 208, 217, 227], "bernoulli": [173, 174, 175, 176, 177], "best": [153, 154, 157, 158], "beta": [190, 191, 192, 193, 194, 195, 196, 214, 215, 216, 217, 218], "beta1": [214, 215, 216, 217, 218], "beta2": [214, 215, 216, 217, 218], "beta_1": [214, 215, 216, 217, 218], "beta_2": [214, 215, 216, 217, 218], "better": [14, 82, 84, 96, 153, 154, 157, 158, 193, 194, 195, 208, 215, 217, 219, 300], "between": [54, 55, 56, 57, 58, 59, 84, 87, 104, 105, 106, 108, 116, 121, 142, 143, 144, 145, 146, 147, 149, 163, 169, 170, 171, 173, 174, 175, 176, 177, 180, 184, 185, 186, 187, 188, 211, 219, 220, 221, 234, 236, 237, 240, 243, 246, 247, 281, 302, 303, 305, 306], "beyond": [8, 90], "bia": [104, 105, 106, 116, 118, 125, 127, 128, 142, 143, 144, 145, 146, 147, 169, 170, 171, 180, 182, 190, 191, 192, 193, 194, 195, 196, 214, 215, 216, 217, 218], "bias": [169, 170, 171, 182, 196, 208], "bias1": 91, "bias2": 91, "big": [145, 146, 147], "bilinear": [115, 117, 140, 179, 183], "bilinearmodel": 180, "binari": [101, 119, 165, 173, 174, 175, 176, 177, 184], "binary_cross_entropi": [115, 122], "block": [23, 24, 25, 26, 27, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 87, 108, 142, 143, 144, 149, 169, 170, 171, 225], "block1": [85, 208], "block2": [85, 208], "block_arg": [42, 60], "block_config": 23, "blue": 302, "bmatrix": 244, "bn": [142, 143, 144], "bn_affin": [142, 143, 144], "bool": [1, 5, 6, 20, 28, 29, 30, 42, 85, 87, 88, 109, 110, 111, 112, 113, 125, 127, 140, 142, 143, 144, 145, 146, 147, 169, 170, 171, 180, 182, 190, 191, 192, 193, 194, 195, 196, 214, 215, 219, 223, 229, 230, 231, 233, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 269, 276, 281, 282, 298], "both": [104, 118, 130, 132, 136, 142, 160, 169, 170, 199, 201, 202, 204, 205, 238, 239, 240, 244, 248, 287, 306], "bottleneck": [23, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 84, 148], "bottom": 140, "bound": [154, 156, 158, 220, 233], "box": 4, "branch": [28, 29, 30, 84, 149], "break": 208, "brief": 308, "bright": 308, "broadcast": [176, 177, 268, 276, 281, 291, 295], "buffer": [211, 217, 219, 221], "build": [8, 34, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 70, 71, 72, 73, 84, 87, 90, 93, 208, 308], "built": [3, 8, 43, 47, 48, 93, 208], "burg": 6, "c": [6, 42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 84, 108, 111, 112, 113, 120, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 148, 176, 177, 185, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 224, 285, 296, 300], "c_": [169, 170, 171], "c_in": [104, 105, 106, 142, 143, 144], "c_out": [104, 105, 106], "calcul": [0, 1, 8, 9, 88, 212, 213, 216, 217, 218, 225, 230, 235], "calculu": [10, 17], "call": [1, 87, 223, 226, 236, 237, 240, 241, 242, 243, 245, 246], "callabl": [209, 226, 297], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 42, 51, 52, 66, 67, 68, 69, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 104, 105, 106, 141, 149, 160, 161, 163, 167, 169, 170, 171, 193, 194, 195, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 233, 234, 235, 240, 249, 250, 251, 252, 254, 255, 268, 276, 281, 285, 287, 288, 290, 291, 294, 295, 296, 297, 298, 301, 303, 304, 305, 308], "cannot": [11, 12, 14, 15, 18, 19, 20], "cap": 163, "capabl": [8, 247, 248, 251, 252, 253, 254, 255], "capac": [40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 74, 84], "captur": [70, 84, 108, 169, 170, 171, 180], "cardin": [53, 54, 55, 56, 57, 58, 59, 70, 84], "care": 225, "cartesian": 287, "case": [3, 16, 36, 41, 95, 98, 99, 100, 159, 161, 162, 164, 186, 187, 188, 201, 202, 203, 204, 205, 206, 208, 213, 218, 220, 224, 241, 242, 257, 261, 267, 269, 271, 288, 308], "categori": [5, 43, 44, 45, 46, 47, 48, 49, 50], "caus": [3, 17, 211, 219, 221], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 95, 96, 98, 100, 101, 104, 105, 106, 116, 118, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 148, 157, 158, 160, 165, 173, 180, 182, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 220, 238, 239, 240, 243, 245], "center": [141, 167, 219, 299, 308], "centercrop": [307, 308], "central": 227, "certain": [11, 96, 116, 180, 214, 215, 223, 267, 269], "chain": [14, 15, 93, 297, 308], "challeng": [5, 84], "cham": 84, "chanc": [302, 303, 305], "chang": [121, 186, 220, 224, 225, 226, 289, 291, 295, 302, 308], "channel": [23, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 59, 64, 66, 67, 68, 69, 74, 75, 80, 84, 104, 105, 106, 108, 111, 112, 113, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 170, 171, 176, 177, 190, 191, 192, 193, 194, 195, 198, 201, 202, 203, 204, 205, 206, 300, 302, 306], "character": [51, 52], "check": [223, 299, 301], "checkpoint": 210, "chen": 84, "choic": 287, "choleski": 13, "chollet": 84, "choos": 84, "chosen": 173, "christian": 84, "christoph": 6, "chu": 84, "clariti": 227, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 85, 102, 120, 124, 208, 210, 226, 248, 251, 282, 308], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 101, 102, 119, 120, 124, 165, 166, 184, 185, 188], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 42, 53, 70, 75, 80, 82], "cleaner": [1, 225, 240], "clear": [88, 235, 249, 250], "clearli": 227, "clf_in_featur": 36, "clf_layer": 36, "clip": [141, 163, 220, 256], "clockwis": 141, "close": [14, 17, 164, 184, 219], "closer": 159, "closur": [209, 210], "cloth": 5, "cnn": 84, "co": [256, 272], "code": [15, 89, 91, 93, 223, 225, 227, 234], "coeffici": [19, 140, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "col": 108, "collect": [4, 9, 84, 89, 90, 92, 93, 210], "color": [302, 308], "colorjitt": 308, "column": [11, 12, 14, 18, 19, 20, 85, 108, 251, 285, 287], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 74, 84, 90, 93, 95, 96, 142, 143, 144, 148, 149, 160, 185, 208, 217, 218, 268, 276, 281, 283, 308], "combined_dataset": [0, 1], "common": [108, 141, 210, 308], "commonli": [8, 40, 41, 96, 101, 102, 103, 104, 106, 116, 123, 125, 127, 141, 148, 157, 158, 163, 166, 171, 184, 187, 188, 201, 202, 203, 204, 205, 206, 224, 227, 252, 292, 298, 299, 300, 301, 303, 304, 305, 308], "compar": [51, 52, 82, 234, 293], "compat": [4, 9, 70, 181, 196, 208, 224, 234, 298, 308], "complex": [2, 3, 8, 12, 34, 42, 45, 48, 49, 62, 64, 85, 89, 90, 93, 99, 162, 204, 206, 208, 210, 308], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 87, 90, 210, 235, 308], "compos": [5, 6, 80, 169, 170, 171, 201, 202, 203, 204, 205, 206, 208, 308], "comprehens": 3, "compris": [51, 52], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 42, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 74, 84, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 116, 118, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 219, 223, 224, 225, 227, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 290, 294, 298, 308], "computation": [3, 17, 43], "compute_loss": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "concaten": [0, 104, 105, 106, 285, 286, 293, 296], "concept": [8, 17, 84], "condit": [10, 11, 14], "confer": 84, "config": 75, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 83, 92, 142, 143, 144], "conjunct": [108, 188], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 75, 80, 82, 84, 118, 148, 149, 169, 170, 171, 182], "consecut": 75, "consid": [3, 14, 17, 23, 93, 153, 154, 157, 158, 208, 220, 223, 249, 250, 308], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 42, 86, 129, 130, 131, 149, 198, 199, 200, 227, 232, 234, 288, 299, 306, 308], "consistent_tensor": 234, "consol": 85, "constant": [119, 120, 125, 127, 128, 152, 164, 184, 185, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 219, 227, 288], "constant_pad": 288, "constraint": [1, 40, 149], "construct": [8, 24, 25, 26, 27, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 71, 72, 73, 76, 77, 78, 79, 90, 208, 248, 290, 294], "constructor": [24, 25, 26, 27, 41, 51, 52, 66, 67, 68, 69, 74, 76, 77, 78, 79], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 42, 53, 54, 55, 56, 57, 58, 59, 60, 70, 75, 85, 87, 89, 90, 91, 92, 93, 102, 108, 116, 118, 119, 120, 124, 140, 184, 185, 188, 209, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 250, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287], "content": 141, "context": [223, 225], "contextmanag": 225, "contigu": 289, "continu": [161, 231], "contrast": [193, 194, 195, 308], "contribut": [140, 173, 174, 175, 176, 177, 201, 204, 205, 206, 211, 217, 279], "control": [53, 149, 159, 186, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 234, 298, 308], "conv": [32, 60, 142, 143, 144, 191, 192], "conv1": [37, 38, 39, 93, 169, 170, 171, 201, 202, 203, 204, 205, 206], "conv1d": [107, 115, 142, 145, 172, 179, 201, 204], "conv1dmodel": 169, "conv2": [37, 38, 39, 93, 169, 170, 171], "conv2d": [90, 93, 107, 115, 143, 146, 172, 179, 191, 202, 205, 208], "conv2dmodel": 170, "conv3d": [107, 115, 144, 147, 172, 179, 192, 203, 206], "conv3dmodel": 171, "conv_bia": [142, 143, 144], "conv_config": 75, "conv_lay": [36, 90], "convblock": 208, "convbnrelu1d": 150, "convbnrelu2d": 150, "convbnrelu3d": 150, "conveni": [4, 22, 83], "convent": 240, "converg": [17, 167, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 300], "convers": [185, 188, 302, 308], "convert": [5, 6, 75, 86, 88, 102, 166, 235, 287, 297, 298, 302, 308], "convnetwork": 90, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 42, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 74, 75, 80, 82, 83, 84, 90, 104, 105, 106, 108, 142, 143, 144, 145, 146, 147, 148, 149, 169, 170, 171, 202, 203, 205, 206, 288], "convolv": [104, 105, 106, 169, 170, 171], "coordin": 287, "core": [0, 1, 2, 3, 87, 208, 209, 235, 308], "corinna": 6, "corner": [140, 299, 301], "correct": [89, 185, 188, 214, 215, 216, 217, 218, 298], "correctli": [17, 87, 89, 90, 91, 92, 93, 185, 188, 234], "correspond": [0, 1, 2, 5, 6, 12, 41, 51, 52, 71, 72, 73, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 116, 118, 140, 162, 166, 180, 182, 190, 191, 192, 193, 194, 195, 202, 203, 211, 219, 221, 238, 239, 241, 242, 245, 265, 266, 272, 274, 285, 288, 290, 294, 296], "cort": 6, "cosh": [256, 273, 278], "cosin": [258, 262, 263, 272], "cost": [40, 53, 84, 145, 146, 147], "could": 87, "count": [84, 85, 283], "counterclockwis": [141, 304], "cover": [9, 104, 105, 106], "coverag": [129, 130, 131], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 90, 93, 149, 163, 208, 224, 226, 234, 247, 251, 252, 253, 254, 255, 287, 293, 297, 308], "creation": [90, 93, 308], "criterion": [184, 185, 186, 187, 188], "critic": [17, 210, 234], "crop": [299, 301, 308], "cross": [119, 120, 184, 185], "cross_entropi": [115, 122], "crossentropyloss": [179, 189], "cube": 256, "cumul": [96, 160], "current": [87, 211, 214, 220, 223], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 81, 82, 83, 86, 89, 90, 91, 92, 93, 141, 142, 143, 144, 159, 161, 208, 234, 251], "custom_config": 75, "custom_lenet": 36, "customiz": 308, "custommodul": 86, "customnetwork": 89, "customparametermodel": [91, 92], "cvpr": 84, "d": [84, 106, 113, 131, 134, 138, 144, 192, 195, 196, 200, 203, 206, 224, 248, 304], "d_": [106, 131, 134, 138, 171, 200, 203, 206], "d_1": 196, "d_2": 196, "d_n": 196, "d_out": [106, 134, 138], "dampen": [211, 219, 221], "data": [4, 5, 6, 8, 15, 86, 88, 92, 103, 104, 106, 108, 112, 113, 118, 141, 142, 143, 144, 149, 162, 167, 169, 170, 171, 182, 195, 201, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 227, 234, 235, 236, 237, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 288, 289, 290, 291, 292, 294, 297, 298, 301, 302, 303, 304, 305, 308], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 141, 213, 225, 297, 299, 308], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 244, "debug": [85, 93, 223, 232, 308], "decai": [211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [54, 55, 56, 57, 58, 59, 226], "decoupl": [84, 212, 213, 215, 216, 217, 218], "decreas": [214, 215, 220], "deep": [1, 3, 4, 8, 32, 42, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 65, 84, 125, 160, 164, 208, 234, 297, 298, 308], "deeper": [8, 29, 31, 34, 42, 49, 84, 164], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 102, 104, 105, 106, 109, 110, 111, 112, 113, 119, 120, 121, 123, 124, 125, 127, 128, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 161, 166, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 209, 210, 217, 223, 229, 230, 231, 233, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 269, 276, 280, 281, 282, 283, 285, 287, 288, 290, 293, 296, 298, 302, 303, 305], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 42, 60, 71, 72, 73, 75, 89, 90, 91, 92, 93, 160, 163, 184, 185, 186, 187, 188, 201, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 230, 231, 245, 250, 261, 280, 297, 308], "definit": [8, 10, 142, 143, 144, 308], "degre": [141, 304, 308], "delai": 211, "delta": [102, 121, 166, 186, 212], "delta_": [102, 166], "demonstr": [8, 9, 66, 67, 68, 69, 74, 84, 208, 227], "denomin": [125, 127, 128, 142, 143, 144, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 219, 237], "denot": [15, 165, 169, 170, 171, 173, 174, 175, 176, 177, 280], "dens": [8, 23, 24, 25, 26, 27, 84, 213], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 84, 148], "densenet_121": 84, "densenet_169": 84, "densenet_201": 84, "densenet_264": 84, "densiti": [96, 160], "depend": [8, 15, 16, 92, 119, 120, 121, 123, 124, 140, 169, 238, 248, 267, 269, 290, 294, 301, 302, 306], "depth": [90, 106, 113, 131, 134, 138, 171, 192, 195, 200, 203, 206], "depthseparableconv1d": 150, "depthseparableconv2d": 150, "depthseparableconv3d": 150, "depthwis": [40, 80, 84, 104, 105, 106, 145, 146, 147], "depthwise_separ": [145, 146, 147], "der": 84, "deriv": [17, 18, 102, 129, 130, 131, 160, 166, 167, 169, 170, 171, 180, 182, 226], "descend": 20, "descent": [8, 211, 221], "describ": [11, 12], "descript": 308, "deseri": 86, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 61, 64, 80, 83, 84, 88, 90, 91, 92, 93, 95, 100, 164, 173, 208, 227, 308], "desir": [81, 86, 129, 130, 131, 198, 199, 200, 280, 282], "destin": 87, "det": [9, 13], "det_a": 11, "detail": [8, 85, 210, 234, 240], "detect": 84, "determin": [0, 8, 9, 10, 11, 36, 51, 52, 129, 130, 131, 153, 154, 157, 158, 169, 170, 171, 198, 199, 200, 202, 203, 205, 206, 219, 223, 229, 230, 231, 233, 249, 250, 299, 301], "determinist": 141, "develop": [8, 208, 234, 308], "deviat": [153, 155, 157, 297, 300, 308], "diag": [17, 256], "diagon": [17, 18, 20, 248, 251, 279], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 87, 89, 91, 181, 209], "dictionari": [36, 87, 88, 89, 91, 93, 209], "differ": [0, 15, 28, 36, 66, 67, 68, 69, 74, 90, 93, 102, 116, 140, 149, 166, 180, 187, 210, 224, 232, 234, 246, 255, 281, 292, 308], "differenti": [8, 10, 19, 160, 208, 229, 230, 231, 233, 235, 247, 249, 250, 252, 254], "digit": [5, 6, 39, 84], "dilat": [104, 105, 106, 142, 143, 144, 145, 146, 147, 169, 170, 171], "dilation_height": 108, "dilation_width": 108, "dim": [185, 188], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 42, 53, 70, 75, 82, 84, 88, 102, 116, 118, 125, 127, 128, 130, 131, 140, 148, 149, 166, 169, 170, 171, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 224, 227, 229, 233, 235, 239, 249, 267, 268, 269, 276, 279, 280, 281, 283, 285, 288, 290, 292, 293, 294, 295, 296, 299, 301, 306], "dimension": [15, 17, 18, 20, 104, 105, 106, 132, 133, 134, 136, 137, 138, 149, 169, 170, 171, 175, 176, 177, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 224, 239, 240, 244, 248, 265, 268, 276, 279, 281, 284, 289, 290, 292, 294], "diminish": 213, "direct": [12, 184, 185, 186, 187, 188, 211, 219, 220, 221], "directli": [84, 89, 90, 91, 92, 140, 212, 213, 215, 216, 217, 218, 232, 234, 282, 308], "directori": [3, 4, 5, 6], "disabl": [223, 225], "discontinu": 271, "discrep": [184, 185, 188], "discret": [230, 234], "disk": 3, "displai": [22, 83, 85], "distribut": [96, 102, 140, 153, 154, 155, 156, 157, 158, 160, 166, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 185, 188, 201, 202, 203, 229, 230, 231, 233, 234, 268, 276, 279, 281, 293, 300, 302, 303, 304, 305], "div": 256, "divers": [141, 303, 305, 308], "diversifi": 308, "divid": [1, 17, 90, 93, 102, 104, 105, 106, 166, 184, 185, 186, 187, 188, 237, 300], "divis": [8, 17, 104, 105, 106, 173, 174, 175, 176, 177, 212, 213, 214, 215, 216, 217, 218, 219, 237], "do": [17, 19, 86, 89, 90, 91, 92, 109, 110, 111, 112, 208, 218, 223, 255, 279, 288], "document": [4, 8, 84, 210, 227, 234], "doe": [8, 15, 16, 17, 18, 20, 85, 86, 89, 90, 91, 92, 93, 158, 214, 215, 220, 223, 225, 229, 230, 231, 232, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255, 291], "doesn": 225, "doi": 84, "domain": 4, "don": 225, "dot": [12, 15, 89, 90, 91, 92, 93, 196, 204, 205, 206, 239, 244, 256, 283, 285, 293, 296], "down": [3, 208, 306], "download": [4, 5, 6], "drawback": 95, "drawn": [229, 230, 231, 233, 234, 304], "drop": [173, 174, 175, 176, 177], "dropout": [21, 30, 75, 82, 84, 96, 109, 111, 112, 113, 173, 175, 176, 177], "dropout1d": [114, 115, 178, 179], "dropout1dmodel": 175, "dropout2d": [114, 115, 178, 179], "dropout3d": [114, 115, 178, 179], "dropout_prob": 30, "dropoutmodel": 174, "dtype": [86, 88, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 298], "due": [15, 17, 23, 104, 105, 162, 304], "dummi": 85, "duplic": [89, 91], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 42, 84, 86, 87, 88, 89, 90, 91, 92, 93, 102, 109, 110, 111, 112, 113, 125, 127, 141, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 235, 236, 267, 268, 269, 276, 281, 298, 301, 304, 308], "dy": [98, 161], "dynam": [0, 2, 3, 70, 74, 84, 87, 90, 91, 92, 93, 129, 130, 131, 149, 196, 198, 199, 200, 213, 218, 223], "dynamicnetwork": 90, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 75, 86, 102, 149, 165, 166, 173, 185, 209, 212, 219, 220, 251, 263, 265, 266, 273, 278, 279, 283, 302], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 75, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 116, 118, 125, 127, 129, 130, 131, 148, 149, 162, 166, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 285, 287, 288, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308], "earli": 218, "eas": [4, 8], "easi": [2, 3, 4, 8, 54, 55, 56, 57, 58, 59, 88, 89, 91], "easier": [3, 89, 90, 93], "easili": [4, 88, 92, 308], "eccv": 84, "economi": 20, "edg": 288, "educ": [8, 84], "effect": [84, 89, 90, 91, 92, 93, 102, 104, 105, 106, 108, 159, 160, 162, 165, 166, 167, 190, 191, 192, 193, 194, 195, 196, 223, 224, 225, 285, 296], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 74, 80, 84, 108, 145, 146, 147, 163, 185, 208, 225], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [118, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 282, 287], "element": [0, 17, 18, 30, 88, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 142, 143, 144, 145, 146, 147, 148, 162, 166, 169, 170, 171, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 196, 201, 202, 203, 204, 205, 206, 224, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 288, 290, 291, 292, 294], "elementwise_affin": 196, "elsewher": [204, 205, 206, 251], "elu": [97, 115, 168, 179], "elumodel": 159, "embed": 40, "empti": [87, 93, 256], "empty_lik": 256, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 70, 71, 72, 73, 84, 87, 88, 89, 90, 91, 92, 162, 169, 170, 171, 180, 182, 208, 210, 223, 225, 229, 230, 231, 233, 235, 297], "encapsul": [208, 235], "encod": [185, 188], "encourag": [174, 175, 176, 177, 184, 185, 188, 214], "end": [16, 95, 98, 99, 100, 159, 161, 162, 164, 186, 187, 188, 201, 202, 203, 204, 205, 206, 218, 220, 241, 242, 244, 247, 257, 261, 267, 269, 271, 283, 288, 308], "enforc": [87, 89, 91], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 51, 52, 66, 67, 68, 69, 74, 82, 83, 84, 89, 91, 149, 163, 308], "ensur": [3, 5, 6, 17, 18, 19, 86, 87, 88, 89, 90, 91, 92, 93, 102, 129, 130, 131, 142, 143, 144, 161, 166, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 245, 268, 276, 281, 288, 298, 299, 300, 301, 302, 306, 308], "enter": 225, "entir": [3, 111, 112, 113, 176, 177, 234], "entri": [36, 292], "entropi": [119, 120, 184, 185], "environ": 8, "ep": [119, 120, 125, 127, 128, 142, 143, 144, 184, 185, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 219], "epoch": [1, 3], "epsilon": [184, 185, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 219], "equal": [15, 140, 201, 202, 203, 299, 301], "equat": [12, 17, 19], "equival": [240, 279, 289], "error": [0, 3, 12, 14, 87, 90, 91, 92, 93, 96, 121, 123, 160, 184, 185, 186, 187, 208, 209, 225, 227], "especi": [3, 89, 91, 92, 165, 224, 225, 227, 232, 297, 298, 302, 308], "essenti": [1, 3, 8, 9, 15, 17, 32, 105, 108, 208, 232, 234, 267, 297, 298, 302, 308], "estim": [187, 214, 215, 216, 217, 218, 219], "et": [29, 84], "eta": 220, "eta_": 220, "etc": [23, 184, 298], "euclidean": 16, "european": 84, "evalu": [87, 125, 127, 173, 174, 175, 176, 177, 190, 191, 192, 193, 194, 195, 308], "even": [212, 225, 247, 248, 251, 252, 253, 254, 255], "evenli": [129, 130, 131, 198, 199, 200, 247], "everi": [1, 308], "everywher": 271, "exact": [87, 90, 280, 302, 304], "exactli": 93, "exampl": [4, 240], "excel": 31, "except": [0, 271, 283, 285, 296], "excit": [60, 63, 66, 67, 68, 69, 84, 148], "exclus": [230, 233, 247], "exdb": 6, "execut": [90, 225], "exist": [19, 89, 91, 93, 226, 283], "exit": 225, "exp": [95, 100, 101, 103, 159, 164, 256], "expand": [4, 108, 290, 294], "expect": [10, 90, 93, 173, 174, 175, 176, 177, 196, 208, 227], "expens": 3, "experi": [8, 232, 234, 308], "experiment": 234, "explan": [15, 17, 21, 75, 82, 129, 130, 131, 198, 199, 200, 211], "explicit": 93, "explicitli": [84, 89, 91], "explod": [164, 190, 191, 192], "explor": [208, 234], "expon": [15, 245], "exponenti": [95, 100, 102, 159, 164, 166, 173, 214, 215, 216, 217, 218, 265], "extend": [4, 53, 70], "extens": [84, 210], "extern": [4, 8], "extract": [28, 32, 42, 53, 70, 80, 84, 108, 171, 201, 203, 226, 248, 267, 269, 299, 301], "extractor": [36, 37, 38, 39, 80], "extrem": [17, 43, 84], "ey": 256, "f": [1, 4, 5, 6, 8, 84, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 163, 166], "f_1": 148, "f_2": 148, "facilit": [28, 89, 93, 102, 166, 169, 170, 171, 208, 210, 300, 308], "factor": [30, 95, 104, 105, 106, 108, 148, 157, 158, 211, 218, 219, 220, 221, 227], "factori": 81, "failur": [89, 90, 91, 92, 208], "fals": [1, 5, 6, 20, 42, 85, 86, 87, 88, 109, 110, 111, 112, 113, 125, 127, 140, 151, 153, 154, 155, 156, 157, 158, 169, 170, 171, 180, 182, 214, 215, 219, 223, 229, 230, 231, 233, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 269, 276, 281, 282, 298], "famili": 226, "fan": [153, 154, 157, 158], "fan_in": [153, 154], "fan_out": [153, 154], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 218, "faster": [213, 217, 225], "fc": [32, 42, 53, 60, 70, 90, 148, 170, 171, 201, 202, 203, 204, 205, 206], "fc1": [38, 39, 85, 89, 93, 160, 162, 163, 164, 165, 167, 182], "fc2": [38, 39, 85, 89, 93, 160, 162, 164, 165, 167, 182], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 42, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 70, 71, 72, 73, 75, 80, 82, 83, 84, 116, 118, 125, 142, 143, 144, 148, 149, 171, 174, 175, 176, 177, 180, 182, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 213], "feature_extractor": 36, "fed": [3, 308], "feed": [3, 235, 308], "feedforward": 85, "fergu": [82, 84], "fetch": 0, "few": 85, "fewer": 1, "field": [6, 70, 74, 84, 149], "file": [3, 226], "fill": [151, 155, 156, 229, 230, 231, 233, 252, 253, 254, 255], "filter": [82, 84, 104, 105, 106, 108, 142, 143, 144, 170, 171], "filter_height": 108, "filter_s": 108, "filter_width": 108, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 89, 90, 91, 92, 93, 149, 297, 308], "find": [19, 267, 269], "fine": [148, 308], "finish": 225, "first": [5, 6, 12, 36, 82, 85, 90, 91, 116, 148, 180, 214, 215, 216, 217, 218, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 287, 296, 297, 298, 308], "fit": 208, "fix": [90, 288], "flatten": [32, 36, 93, 108, 244, 286, 289, 290], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 41, 42, 66, 67, 68, 69, 74, 75, 80, 84, 89, 90, 91, 92, 93, 208, 210, 227, 252, 253, 298, 308], "flip": [303, 305, 308], "float": [2, 5, 6, 30, 40, 41, 86, 88, 95, 98, 109, 110, 111, 112, 113, 119, 120, 121, 125, 127, 128, 141, 142, 143, 144, 151, 155, 156, 157, 158, 159, 161, 173, 174, 175, 176, 177, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 233, 235, 247, 250, 261, 282, 300, 302, 303, 304, 305], "float32": [86, 88, 235, 247, 248, 251, 252, 254, 282, 298], "float64": [255, 282, 298], "flow": [31, 32, 60, 84, 93, 158, 160, 165, 167, 169, 170, 171, 180, 182, 223], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 66, 67, 68, 69, 74, 75, 80, 82, 85, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 142, 143, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 267, 269, 287, 291, 299, 300, 301, 302, 303, 304, 305, 308], "form": [18, 149, 244, 287, 290, 294, 308], "format": [2, 3, 5, 6, 85, 185, 188, 298], "formul": 96, "formula": [12, 20, 102, 129, 130, 131, 166, 186, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 281, 302], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 82, 85, 86, 87, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "found": 8, "foundat": [32, 60, 87, 208, 210, 235], "four": [24, 25, 26, 27, 288], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 116, 118, 129, 130, 131, 132, 133, 134, 136, 137, 138, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 217, 218, 219, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300], "frame": 113, "framework": [4, 8, 84, 185, 188, 190, 191, 192, 193, 194, 195, 209, 210, 308], "frequent": [185, 188], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 41, 42, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 108, 116, 125, 127, 140, 142, 143, 144, 148, 149, 151, 153, 154, 155, 156, 157, 158, 163, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 240, 241, 242, 246, 248, 267, 268, 269, 276, 281, 283, 285, 287, 290, 292, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305, 308], "full": [20, 41], "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 75, 80, 82, 84, 118, 148, 149, 182, 234], "func": 226, "function": [3, 4, 5, 6, 8, 9, 87, 89, 90, 91, 92, 93, 142, 143, 144, 148, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 208, 210, 227, 234, 297, 308], "fundament": [8, 118, 182, 298], "further": [8, 41, 234, 268, 276, 281], "fuse": 70, "fusion": [71, 72, 73], "futur": 181, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 75, 84, 148, 149, 173, 209, 212, 219, 283, 302], "g_": 213, "g_t": 219, "gain": [157, 158], "gamma": [190, 191, 192, 193, 194, 195, 196], "gap": [42, 53, 70, 148], "gaussian": [96, 160], "gelu": [97, 115, 168, 179], "gelunetwork": 160, "gener": [17, 85, 141, 173, 174, 175, 176, 177, 194, 215, 217, 218, 225, 229, 230, 231, 232, 233, 234, 239, 247, 249, 250, 287, 301, 302, 303, 305, 308], "get": [5, 6], "github": 5, "give": [8, 211, 219], "given": [11, 12, 15, 17, 18, 20, 108, 184, 185, 188, 209, 223, 253, 255, 297, 302, 303, 305, 308], "global": [0, 42, 53, 60, 70, 148, 223, 225, 232, 234], "go": [29, 84], "goal": [184, 185, 188], "googlenet": [29, 84], "gpu": 84, "grad": [86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 116, 118, 140, 145, 146, 147, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 209, 210, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 303, 305, 306], "grad_output": 15, "gradient": [8, 9, 31, 32, 84, 86, 88, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 229, 230, 231, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 298], "grain": 148, "graph": [8, 158, 235, 247, 248, 251, 252, 253, 254, 255, 298], "grayscal": [5, 6, 36, 37, 38, 39, 302, 308], "greater": 261, "green": 302, "grid": 287, "groundbreak": 84, "group": [53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 74, 84, 90, 104, 105, 106, 142, 143, 144, 149, 169, 170, 171, 209, 210], "group1": 90, "group2": 90, "groupedconvblock": 53, "growth_rat": [23, 24, 25, 26, 27], "guarante": 232, "h": [42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 84, 105, 106, 108, 112, 113, 130, 131, 133, 134, 137, 138, 140, 141, 143, 144, 148, 191, 192, 194, 195, 199, 200, 203, 206, 299, 301], "h_": [105, 106, 130, 131, 133, 134, 137, 138, 140, 170, 171, 199, 200, 202, 203, 205, 206], "h_out": [105, 106, 133, 134, 137, 138], "h_stack": 285, "ha": [0, 12, 85, 93, 104, 105, 106, 142, 143, 144, 163, 184, 185, 190, 191, 192, 193, 194, 195, 196, 209, 210, 240, 279, 283, 285, 293, 296, 302], "half": 274, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 87, 89, 90, 91, 92, 93, 185, 188, 208, 210, 225], "handwritten": [5, 6, 39], "hardwar": 8, "hat": [214, 215, 216, 217, 218], "have": [0, 1, 11, 12, 14, 17, 18, 20, 88, 90, 92, 93, 105, 106, 158, 208, 251, 252, 253, 254, 255, 267, 269, 283, 285, 287, 292, 293, 296, 300, 306], "he": 84, "head": 80, "height": [80, 105, 106, 108, 112, 113, 130, 131, 133, 134, 137, 138, 140, 141, 149, 170, 171, 191, 192, 194, 195, 199, 200, 202, 203, 205, 206, 299, 301, 306], "help": [8, 30, 98, 100, 113, 159, 161, 163, 164, 167, 190, 191, 192, 201, 202, 204, 205, 211, 214, 215, 217, 223, 224, 225, 227], "henc": 291, "here": [3, 10, 87, 116, 208, 210, 224, 225, 227, 234, 297, 298, 308], "hidden": [21, 82, 90], "hidden_s": 90, "hierarch": [90, 93, 208], "hierarchi": 170, "hierarchicalnetwork": 90, "high": [8, 50, 65, 74, 230, 233], "higher": [40, 53, 185, 188, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 239, 240, 244, 265], "highest": 230, "highli": 84, "highlight": [148, 204, 205, 206], "hint": 227, "histor": 213, "histori": [229, 230, 231, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255], "hold": [89, 90, 91, 92], "horizont": [285, 293, 303, 308], "hot": [185, 188], "how": [2, 3, 8, 66, 67, 68, 69, 74, 90, 93, 208, 227, 308], "howard": 84, "howev": [86, 158], "hstack": 286, "http": [5, 6], "hu": [84, 148], "huang": 84, "huber": [121, 186], "huber_loss": [115, 122], "huberloss": [179, 189], "huberregressionmodel": 186, "hue": 308, "hyperbol": [103, 167, 263, 273, 278], "hyperparamet": [42, 53, 81, 209, 211], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "iccv": 84, "idea": 84, "ideal": [8, 40, 93], "ident": [14, 15, 84, 141, 179, 183, 232, 234, 251, 291], "identifi": 91, "idx": [2, 3], "ieee": [84, 148], "ii": 279, "ij": [102, 140, 166, 238, 239, 240, 244, 287], "ik": [238, 239, 240], "ill": [11, 17], "ilsvrc": 84, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 83, 84, 105, 127, 141, 143, 148, 170, 194, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 40, 41, 51, 52, 66, 67, 68, 69, 74, 84], "imbal": [185, 188], "impact": [84, 217], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 80, 82, 84, 87, 108, 145, 146, 147, 149, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 285, 296, 302], "impli": [169, 170], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "improp": [90, 93, 234], "improv": [29, 30, 31, 32, 34, 42, 53, 66, 67, 68, 69, 70, 82, 84, 125, 141, 148, 160, 164, 167, 211, 212, 213, 214, 215, 216, 217, 218, 219, 227, 301, 304, 308], "imread": 3, "in1_featur": [116, 180], "in2_featur": [116, 180], "in_channel": [42, 90, 93, 142, 143, 144, 145, 146, 147, 148, 149, 169, 170, 171, 191, 192, 201, 202, 203, 204, 205, 206, 208], "in_featur": [89, 90, 93, 118, 159, 160, 161, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 193, 196, 201, 202, 203, 204, 205, 206], "incept": [29, 30, 31, 32, 33, 34, 35, 84], "inception_resnet_v1": 84, "inception_resnet_v2": 84, "inception_v1": 84, "inception_v3": 84, "inception_v4": 84, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 75, 81, 82, 85, 87, 88, 90, 92, 93, 140, 142, 143, 144, 145, 146, 147, 208, 209, 210, 217, 227, 234, 240, 288], "inclus": [88, 91, 230, 233], "incom": [118, 182], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 84, 160], "increas": [40, 53, 54, 55, 56, 57, 58, 59, 70, 104, 105, 106, 108, 141, 213, 220, 224, 285, 296, 302, 303, 305, 308], "independ": [90, 104, 105, 106, 173, 174, 175, 176, 177, 196, 240, 250, 300, 302, 304, 306], "index": [0, 2, 5, 6, 224, 247, 248, 251, 287, 291], "indexerror": 0, "indic": [0, 1, 75, 85, 88, 90, 92, 93, 120, 124, 185, 188, 201, 223, 235, 299, 301], "individu": [3, 90, 93, 186, 196, 210, 213, 220], "induc": [100, 164], "inf": 277, "infer": [66, 67, 68, 69, 74, 90, 93, 225], "infin": [18, 20, 216], "inform": [8, 84, 85, 86, 148, 210, 212, 225], "infti": [16, 218], "inherit": [1, 211, 219, 221], "init": 152, "initi": [1, 23, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 81, 86, 88, 89, 90, 91, 92, 93, 149, 151, 153, 154, 155, 156, 157, 158, 169, 170, 171, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 232, 233, 234, 247, 251, 252, 253, 254, 255, 282], "initial_accumulator_valu": 213, "inner": [8, 238, 256], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 53, 66, 67, 68, 69, 70, 74, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 234, 235, 236, 238, 239, 240, 244, 248, 250, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "input1": 180, "input2": 180, "input_": [21, 82, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 198, 199, 200], "input_1": 116, "input_2": 116, "input_data": [159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206], "input_s": [90, 92, 166, 185, 188], "input_shap": 85, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 80, 86, 89, 90, 91, 92, 93, 102, 145, 146, 147, 148, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 299, 300, 301, 302, 303, 304, 305, 306], "insid": [3, 223, 225], "insight": [8, 84], "inspect": [87, 88, 93, 209], "instabl": [17, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 85, 87, 88, 89, 91, 92, 93, 127, 163, 193, 194, 195, 196, 209, 226, 282, 290, 294, 308], "instance_norm": [115, 126, 193, 194, 195], "instancenorm1d": [179, 197], "instancenorm1dmodel": 193, "instancenorm2d": [179, 197], "instancenorm3d": [179, 197], "instanti": [2, 66, 67, 68, 69, 74, 226], "instead": [8, 85, 89, 90, 91, 92, 93, 153, 154, 157, 158, 214, 215, 216, 225, 227, 249, 250], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 102, 104, 105, 106, 108, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 158, 166, 169, 170, 171, 180, 182, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 220, 226, 229, 230, 231, 232, 233, 235, 247, 248, 249, 251, 252, 254, 261, 267, 268, 269, 276, 280, 281, 282, 283, 288, 290, 291, 292, 293, 294, 295, 299, 301, 306], "integ": [1, 3, 15, 60, 75, 104, 105, 106, 130, 131, 169, 170, 171, 196, 199, 200, 202, 203, 204, 205, 206, 227, 230, 231, 233, 234, 249, 252, 254, 268, 276, 280, 281, 288, 290, 291, 294], "integr": [1, 2, 4, 5, 6, 9, 84, 88, 90, 92, 93, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 180, 182, 201, 202, 203, 204, 205, 206], "intellig": [84, 148], "intend": [86, 91, 92], "intens": [17, 23, 43, 300, 302], "intent": 227, "interact": [116, 180, 208, 234], "interdepend": 84, "interfac": [2, 87, 90, 210], "interfer": [223, 225], "intermedi": [17, 148], "intern": [43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 84, 89, 90, 91, 92, 93, 185, 188, 208, 299, 300, 301, 302, 303, 304, 305, 306], "interpol": [115, 139, 306], "interpret": [84, 102, 166, 227, 283], "interv": [229, 233, 247], "introduc": [29, 30, 40, 53, 84, 99, 148, 160, 162, 163, 165, 167, 173, 174, 175, 176, 177, 301, 304, 308], "introspect": 93, "intuit": [8, 89, 91, 208, 308], "inv": 13, "inv_a": 14, "invari": [202, 205], "invers": [8, 11, 14, 15, 17, 213, 258, 259, 260], "invert": [11, 14, 15, 19, 84], "invok": 226, "involv": [10, 11, 12, 14, 17, 18, 20, 70, 95, 96, 98, 99, 100, 101, 103, 116, 118, 140, 169, 170, 171, 180, 182, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 255, 265, 266, 267, 269, 272, 274, 287, 288, 290, 294], "is_leaf": 235, "issu": [3, 164, 190, 191, 192, 214, 215], "item": [5, 187], "iter": [0, 1, 2, 3, 86, 87, 90, 92, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 247], "ith": [102, 166], "its": [4, 15, 17, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 71, 72, 73, 82, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 108, 141, 149, 158, 160, 162, 204, 205, 206, 208, 209, 212, 220, 223, 224, 225, 226, 247, 249, 250, 254, 267, 269, 282, 291, 300, 303, 305, 308], "itself": [10, 15, 89, 90, 91, 92], "j": [6, 102, 148, 166, 190, 191, 192, 193, 194, 195, 201, 202, 204, 205, 287, 293, 299, 301], "jie": 84, "jk": 239, "join": [3, 283], "json": 226, "k": [15, 84, 104, 169, 185, 191, 192, 194, 195, 201, 204, 205, 238, 239, 248, 251, 283], "k_d": [106, 171, 203, 206], "k_h": [105, 106, 170, 171, 202, 203, 206], "k_w": [105, 106, 170, 171, 202, 203, 206], "kaim": [84, 153, 154, 157, 158], "kaiming_norm": 152, "kaiming_uniform": 152, "kalenichenko": 84, "karen": 84, "kashif": 5, "keep": [87, 162, 212, 225, 291], "keep_grad": [88, 229, 230, 231, 233, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 298], "keep_var": 87, "keepdim": [267, 268, 269, 276, 281], "kei": [84, 87, 89, 91, 93, 209], "kept": [268, 276, 281], "kernel": [36, 37, 38, 39, 70, 71, 72, 73, 74, 82, 84, 104, 105, 106, 108, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 198, 199, 200, 202, 203, 206], "kernel_s": [70, 71, 72, 73, 90, 93, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 191, 192, 201, 202, 203, 204, 205, 206], "keyerror": 87, "keyword": [22, 24, 25, 26, 27, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 83, 87, 181], "kj": [238, 240], "known": 84, "krizhevski": 84, "kroneck": [102, 166], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 87, 181, 226], "l": [10, 17, 84, 104, 111, 129, 132, 136, 142, 148, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198], "l2": [211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "l_": [104, 129, 132, 136, 169, 198, 201, 204], "l_out": [104, 132, 136], "label": [4, 5, 6, 30, 184, 185, 188], "lambd": 211, "lambda": [12, 100, 164, 211, 215], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 169, 180, 201, 204], "larg": [0, 3, 17, 23, 43, 44, 45, 48, 61, 62, 84, 145, 146, 147, 163, 186, 208, 211, 214, 215, 216, 219, 220, 221, 225], "larger": [42, 70, 89, 91, 104, 105, 106, 108, 211, 241, 288, 299, 301, 306], "largest": 267, "last": [1, 102, 128, 166, 239, 240, 283, 303, 305], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 89, 90, 93, 102, 118, 125, 127, 128, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 166, 169, 170, 171, 180, 181, 182, 188, 196, 201, 202, 203, 204, 205, 206, 208, 234, 288, 298], "layer1": 226, "layer2": 226, "layer_group": 90, "layer_norm": [115, 126, 196], "layer_sequ": [90, 93], "layernorm": [179, 197], "layernormmodel": 196, "le": 84, "lead": [90, 93, 160, 193, 194, 195, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 234], "leaf": 235, "leaki": [98, 161], "leaky_relu": [97, 115, 161], "leakyrelu": [168, 179], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 53, 54, 55, 56, 57, 58, 59, 82, 83, 84, 89, 90, 91, 92, 99, 102, 148, 159, 161, 162, 166, 169, 170, 171, 174, 175, 176, 177, 180, 182, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 232, 297, 298, 308], "learnabl": [86, 87, 88, 125, 127, 128, 142, 143, 144, 169, 170, 171, 180, 182, 190, 191, 192, 193, 194, 195, 196, 208], "least": [17, 18, 20, 279], "lecun": [6, 84], "left": [15, 16, 17, 20, 96, 102, 160, 166, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 299, 301], "leftarrow": 217, "len": [0, 1, 2, 3, 287], "lenet": [35, 37, 38, 39, 84], "lenet_1": 84, "lenet_4": 84, "lenet_5": 84, "length": [90, 104, 111, 129, 132, 136, 169, 181, 190, 193, 198, 201, 204, 288, 300], "leq": [186, 218, 245, 261], "lerp": 140, "less": [0, 95, 98, 121, 159, 161, 185, 186, 188, 261], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 54, 55, 56, 57, 58, 59, 80, 84, 149, 208], "li": 84, "librari": [3, 8, 9, 87, 208, 209, 210, 226, 227, 234, 235, 308], "lightweight": [8, 46, 63, 149, 163], "like": [8, 32, 54, 55, 56, 57, 58, 59, 71, 72, 73, 84, 86, 87, 90, 93, 104, 157, 158, 164, 173, 190, 191, 192, 193, 194, 195, 223, 224, 227, 282, 298, 308], "likelihood": [124, 185, 188], "limit": [85, 163, 212, 261], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 60, 84, 85, 89, 90, 91, 93, 95, 96, 98, 99, 100, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 180, 181, 184, 185, 186, 187, 188, 190, 193, 196, 201, 202, 203, 204, 205, 206, 226, 251], "linearli": 186, "list": [0, 1, 36, 42, 53, 60, 70, 75, 85, 86, 88, 89, 90, 91, 92, 128, 149, 181, 196, 209, 227, 229, 230, 231, 233, 235, 248, 249, 250, 252, 253, 254, 255, 280, 291, 292, 295, 297], "listdir": 3, "liter": [42, 119, 120, 121, 123, 124, 140, 142, 143, 144, 145, 146, 147, 149, 153, 154, 169, 170, 171, 184, 185, 186, 187, 188, 287], "liu": 84, "ln": 245, "load": [3, 4, 5, 6, 86, 87, 88, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226], "load_state_dict": [87, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "loader": [1, 2, 3], "local": [84, 108, 169], "locat": [84, 140], "log": [124, 184, 185, 188, 256], "log_softmax": 188, "logarithm": [245, 265, 266], "logic": [3, 198, 199, 200, 208, 209], "logit": [21, 82, 102, 166, 185], "logsoftmax": [185, 188], "long": [217, 280], "loop": [1, 90, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "loss": [8, 17, 89, 90, 91, 92, 93, 102, 119, 120, 121, 123, 124, 159, 160, 161, 162, 164, 165, 166, 167, 173, 174, 175, 176, 177, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "low": [8, 32, 230, 233], "lower": [10, 40, 156, 211, 219, 220, 221, 233], "lowest": 230, "lr": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 256, 286, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "m": [75, 84, 89, 90, 93, 202, 203, 205, 206, 214, 215, 216, 217, 218, 251], "m_": [214, 215, 216, 217, 218], "m_t": [217, 218], "maaten": 84, "machin": [3, 5, 6, 8, 17, 148, 214, 224, 232], "magnitud": [219, 220, 308], "mai": [3, 8, 12, 14, 17, 90, 92, 141, 186, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 234, 302, 308], "main": [8, 18, 32, 90, 248, 251], "maintain": [17, 40, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 74, 84, 86, 87, 89, 90, 91, 93, 100, 153, 154, 157, 158, 159, 160, 164, 173, 174, 175, 176, 177, 190, 191, 192, 193, 194, 195, 214, 219, 299, 302, 306], "make": [1, 3, 8, 28, 32, 36, 42, 84, 90, 93, 165, 185, 186, 196, 202, 205, 208, 213, 214, 215, 216, 224, 226, 234, 235, 240, 287, 297, 308], "manag": [8, 87, 89, 90, 91, 92, 93, 208, 210, 223, 225, 226, 234], "manhattan": 16, "mani": 85, "manipul": [8, 89, 91, 308], "manner": [90, 93], "manual": [119, 120, 124, 184, 185, 188, 225], "map": [42, 53, 63, 70, 84, 87, 101, 103, 148, 165, 167], "mask": [86, 173, 174, 175, 176, 177], "match": [19, 87, 90, 93, 119, 121, 123, 128, 142, 143, 144, 209, 265, 290, 291, 294, 295, 300, 308], "math": [262, 272, 277], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 145, 146, 147, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 238, 239, 240, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306], "mathcal": [153, 155, 157, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "mathemat": [14, 142, 143, 144, 301, 303, 304, 305], "mathrm": 17, "matmul": 256, "matric": [9, 11, 12, 14, 17, 19, 20, 238, 239, 240, 251, 287], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 108, 116, 181, 182, 208, 238, 287], "matrix_pow": 13, "matthew": 84, "max": [16, 60, 75, 99, 136, 137, 138, 162, 163, 204, 205, 206, 216, 241, 256, 261], "max_pool": [204, 205, 206], "max_pool1d": [115, 135], "max_pool2d": [115, 135], "max_pool3d": [115, 135], "max_valu": 261, "maxim": 3, "maximum": [16, 162, 163, 204, 205, 206, 214, 216, 256, 261, 267, 304], "maxpool": [21, 82], "maxpool1d": [179, 207], "maxpool1dmodel": 204, "maxpool2d": [90, 93, 170, 179, 207], "maxpool2dmodel": 205, "maxpool3d": [171, 179, 207], "maxpool3dmodel": 206, "mean": [5, 6, 18, 85, 86, 100, 104, 105, 106, 109, 119, 120, 121, 123, 124, 125, 127, 142, 143, 144, 155, 159, 160, 161, 162, 164, 165, 167, 171, 173, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 214, 215, 216, 217, 218, 219, 223, 231, 256, 261, 265, 266, 267, 269, 272, 274, 276, 279, 280, 281, 297, 300, 308], "meaning": [93, 227], "measur": [184, 185, 187, 188], "mechan": [8, 60, 70, 74, 92, 116], "membership": 184, "memori": [2, 3, 23, 225, 249, 250], "meshgrid": 286, "method": [3, 8, 9, 14, 60, 80, 81, 89, 90, 91, 92, 93, 119, 120, 121, 123, 124, 153, 154, 157, 158, 184, 185, 186, 187, 188, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 234], "middl": 224, "might": 208, "min": [163, 242, 256, 261], "min_valu": 261, "mind": [0, 3, 8, 90, 93, 225], "mini": 1, "minim": [4, 8, 93, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 210], "minimalist": 8, "minimum": [256, 261, 269], "minu": 165, "mirror": [253, 255], "mismatch": [87, 208, 209], "miss": [87, 208], "mitig": [98, 159, 161, 164, 190, 191, 192], "mlp": 149, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mobil": [40, 84], "mobilenet": [35, 84, 163], "mobilenetv2": 84, "mobilenetv3": 84, "mode": [8, 113, 125, 127, 140, 153, 154, 173, 174, 175, 176, 177, 288], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 102, 141, 142, 143, 144, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 234, 297, 298, 308], "moder": 64, "modern": 84, "modif": [81, 93, 225], "modifi": [22, 42, 80, 83, 89, 90, 91, 92, 151, 153, 154, 155, 156, 157, 158, 173, 223, 225, 232, 285, 296], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 42, 53, 60, 70, 75, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 142, 143, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 234, 298, 308], "modular": [3, 8, 84, 87, 90, 93, 208, 308], "moduledict": [90, 91, 93, 94], "modulelist": [92, 93, 94], "moment": [214, 215, 216, 217, 218], "momentum": [125, 127, 142, 143, 144, 190, 191, 192, 193, 194, 195, 211, 217, 219, 221], "momentum_decai": 217, "moor": 17, "more": [3, 4, 5, 8, 12, 42, 49, 89, 90, 93, 145, 146, 147, 159, 174, 175, 176, 177, 208, 209, 210, 211, 212, 215, 216, 219, 220, 221, 231, 240, 279, 293, 308], "most": [9, 84, 205, 298, 299, 308], "move": [211, 219], "mse": [121, 123, 186, 187], "mse_loss": [115, 122], "mseloss": [179, 189], "mu": [155, 190, 191, 192, 193, 194, 195, 196, 281], "mu_c": 300, "mu_i": [193, 194, 195], "much": 308, "mul": 256, "multi": [3, 4, 33, 70, 71, 72, 73, 84, 102, 120, 124, 149, 166, 185, 188, 268, 276, 281], "multidimension": [229, 233, 249], "multipl": [1, 3, 8, 9, 15, 19, 21, 42, 60, 74, 91, 92, 93, 108, 140, 141, 148, 149, 173, 174, 175, 176, 177, 185, 188, 208, 224, 229, 230, 231, 233, 238, 243, 249, 250, 297, 302, 308], "multipli": [15, 41, 92, 118, 182, 220, 243, 244], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 85, 87, 89, 90, 91, 92, 93, 128, 173, 174, 175, 176, 177, 188, 209, 225, 279, 283, 285, 288, 290, 291, 293, 294, 296, 299, 300, 301, 302, 303, 305], "my_simple_model": 226, "mymodel": [87, 88, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "myoptim": [209, 210], "n": [15, 16, 42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 84, 89, 90, 93, 104, 105, 106, 108, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 148, 153, 155, 157, 169, 170, 171, 176, 177, 180, 182, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 251, 268, 279, 281], "n1": 16, "nabla_": [212, 213, 214, 215, 216, 217, 218, 220], "nabla_t": 218, "nadam": 222, "name": [84, 85, 87, 89, 91, 93, 226, 227], "nan": [18, 20], "natur": [17, 84, 169, 180, 201, 204, 245, 265, 266], "ndarrai": [86, 88, 227, 235, 248, 250, 253, 255, 282], "ndim": [18, 20, 88, 235], "ne": 15, "nearest": 140, "necessari": [4, 5, 6, 17, 225, 285, 296], "need": [2, 4, 90, 91, 92, 102, 180, 208, 225, 249, 250, 297, 298, 308], "neg": [15, 17, 20, 95, 124, 141, 159, 161, 162, 164, 185, 188, 220, 283], "negative_slop": [98, 161], "neglect": 92, "neighbor": 140, "neq": 16, "nest": [85, 90, 93, 208], "nestedmodel": 85, "nesterov": 217, "net": [82, 84], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 70, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 116, 118, 125, 141, 148, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 219, 221, 233, 234, 235, 247, 252, 254, 267, 269, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "neural": [3, 4, 8, 21, 22, 32, 39, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 116, 118, 125, 141, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 219, 221, 233, 234, 235, 247, 252, 254, 267, 269, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "neuralnetwork": 162, "neuron": 161, "never": 302, "new": [87, 88, 95, 96, 98, 99, 100, 101, 103, 116, 118, 140, 149, 153, 154, 155, 156, 157, 158, 209, 226, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 288, 290, 291, 293, 294, 295, 296], "next": [93, 297], "nll": 124, "nll_loss": [115, 122], "nllloss": [179, 189], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 42, 53, 60, 66, 67, 68, 69, 70, 74, 75, 82, 85, 94, 97, 107, 114, 117, 122, 126, 135, 139, 150, 152, 168, 172, 178, 179, 183, 189, 197, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 298, 308], "no_grad": 223, "node": 235, "nois": [20, 234], "non": [12, 15, 17, 20, 92, 96, 98, 99, 153, 154, 159, 160, 161, 162, 163, 164, 165, 167, 173, 174, 175, 176, 177, 214, 215, 225, 245, 261], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 42, 80, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306], "norm": [9, 13, 216], "normal": [5, 6, 60, 96, 100, 102, 103, 125, 127, 128, 142, 143, 144, 152, 153, 157, 160, 164, 166, 173, 190, 191, 192, 193, 194, 195, 196, 219, 231, 234, 297, 307, 308], "normalized_shap": [128, 196], "note": [104, 173], "noth": [109, 110, 111, 112], "notimplementederror": [2, 87, 209], "notin": 261, "nov": 84, "novel": [5, 84], "np": [42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 86, 88, 148, 185, 188, 227, 235, 240, 247, 248, 251, 252, 254, 255, 266, 282, 298], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 166, 185, 188], "num_featur": [93, 142, 143, 144, 190, 191, 192, 193, 194, 195], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 92, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 104, 105, 106, 108, 111, 112, 113, 116, 118, 120, 124, 125, 127, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 165, 169, 170, 171, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 211, 229, 232, 233, 235, 245, 247, 249, 251, 267, 268, 269, 280, 281, 283, 285, 288, 290, 291, 292, 294, 296, 300, 302, 303, 305, 308], "numer": [14, 17, 119, 120, 125, 127, 128, 142, 143, 144, 163, 184, 185, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 216, 217, 218, 219, 227, 237, 247, 252, 254], "numpi": [8, 86, 88, 185, 188, 227, 235, 240, 248, 251, 266, 279, 282, 288, 290, 294, 298, 308], "o": [3, 203, 206, 252, 253], "object": [1, 3, 9, 70, 84, 87, 91, 92, 187, 208, 225, 236, 237, 241, 242, 243, 246, 282], "observ": 214, "obtain": 1, "occur": [141, 225, 226, 283], "occurr": 15, "odot": [173, 174, 175, 176, 177], "off": 223, "offer": [4, 8, 208, 210, 234, 308], "offset": 251, "often": [15, 51, 52, 104, 105, 106, 108, 185, 188, 247, 254, 298, 302, 306, 308], "older": 217, "onc": 225, "one": [0, 66, 67, 68, 69, 74, 92, 93, 102, 104, 118, 132, 136, 142, 143, 144, 164, 165, 166, 169, 175, 185, 188, 190, 193, 201, 204, 209, 224, 227, 231, 246, 253, 267, 269, 284, 289, 293, 298], "ones": [116, 118, 169, 170, 171, 182, 190, 191, 192, 193, 194, 195, 196, 208, 251, 253, 256], "ones_lik": 256, "onli": [8, 85, 140, 162, 173, 174, 175, 176, 177, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 220, 223, 247, 261, 267, 269, 279, 288, 289, 291, 292], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 60, 61, 62, 63, 64, 65, 86, 87, 90, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 113, 116, 118, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 254, 265, 266, 267, 268, 269, 272, 274, 276, 279, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 306], "operatornam": [15, 17], "opposit": 211, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 86, 88, 91, 92, 108, 169, 170, 171, 208, 225], "optimizer_st": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 102, 105, 106, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 161, 166, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 209, 211, 219, 221, 229, 230, 231, 233, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 269, 276, 280, 281, 282, 283, 287, 290, 292, 293, 298, 302, 303, 305], "ord": 16, "order": [1, 3, 16, 20, 89, 90, 91, 92, 93, 280, 297], "ordered_dict": 93, "ordereddict": [87, 89, 90, 93], "organ": [89, 90, 91, 93, 226], "orient": 308, "origin": [30, 39, 109, 141, 148, 167, 288, 289, 290, 291, 294, 295, 306], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [211, 219, 221], "other": [2, 3, 8, 14, 30, 34, 36, 39, 86, 87, 90, 93, 153, 154, 173, 208, 209, 223, 225, 234, 235, 247, 249, 252, 254, 279, 287, 308], "otherwis": [43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 95, 98, 99, 100, 102, 159, 161, 162, 164, 166, 174, 175, 176, 177, 186, 201, 202, 203, 204, 205, 206, 209, 220, 226, 241, 242, 267, 269], "otim": [17, 116, 180], "out": [0, 3, 4, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 153, 154, 157, 158, 169, 170, 171, 173, 174, 175, 176, 177, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296], "out_channel": [36, 90, 93, 142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 191, 192, 201, 202, 203, 204, 205, 206, 208], "out_featur": [89, 90, 93, 116, 118, 159, 160, 161, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 193, 196, 201, 202, 203, 204, 205, 206], "outcom": [302, 303, 305], "outer": 256, "outlier": [121, 186], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 118, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 265, 266, 267, 268, 269, 272, 274, 276, 279, 280, 281, 287, 288, 290, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "output_height": 108, "output_lay": [90, 93], "output_s": [90, 129, 130, 131, 198, 199, 200], "output_width": 108, "outsid": 0, "over": [0, 1, 2, 3, 9, 70, 82, 87, 90, 92, 102, 129, 130, 131, 148, 166, 169, 170, 171, 185, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 229, 233, 267, 268, 269, 276, 279, 281, 302, 303, 305], "overal": 80, "overdetermin": 17, "overfit": [1, 21, 82, 110, 113, 174, 175, 176, 177, 211, 214, 219, 221], "overhead": 148, "overli": 163, "overrid": [2, 3], "overridden": [87, 209], "overwrit": [89, 91], "own": [4, 89, 90, 91, 92, 104, 105, 106, 158, 208, 300], "p": [16, 17, 88, 91, 92, 109, 110, 111, 112, 113, 173, 174, 175, 176, 177, 201, 204, 205, 302, 303, 305, 308], "p_d": [203, 206], "p_h": [202, 203, 206], "p_w": [202, 203, 206], "packag": [2, 3, 4, 9, 84, 208, 210, 226, 232, 234, 298, 308], "pad": [36, 90, 93, 104, 105, 106, 108, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 286], "pad_after_dim1": 288, "pad_after_dim2": 288, "pad_before_dim1": 288, "pad_before_dim2": 288, "pad_width": 288, "padding_height": 108, "padding_width": 108, "pair": 116, "pang": 84, "paper": 29, "parallel": [1, 3, 70, 84], "param": [87, 88, 91, 92, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "param1": 87, "param_dict": 91, "param_group": [209, 210], "param_groups_setup": 209, "param_list": 92, "param_s": 226, "paramet": [0, 2, 8, 37, 38, 39, 84, 87, 208, 209, 210, 227, 234, 308], "parameterdict": 94, "parameterlist": 94, "parent": 208, "part": [86, 87, 158, 208, 223, 225, 234, 247, 248, 251, 252, 253, 254, 255, 298, 308], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "particip": [88, 298], "particular": [89, 91], "particularli": [8, 17, 54, 55, 56, 57, 58, 59, 90, 91, 92, 93, 102, 118, 142, 143, 144, 145, 146, 147, 166, 182, 185, 188, 193, 194, 195, 196, 215, 223, 226, 297], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 87, 88, 89, 90, 91, 92, 93, 140, 142, 143, 144, 148, 149, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 227, 235, 268, 276, 279, 280, 281, 283, 285, 289, 291, 292, 296, 298, 308], "past": [211, 212, 214, 219], "patch": [108, 202], "path": [3, 5, 6], "pathwai": 84, "pattern": [84, 99, 148, 162, 169, 170, 171], "penal": [211, 219, 221], "penalti": [212, 213, 214, 215, 216, 217, 218], "penros": 17, "per": [1, 54, 55, 56, 57, 58, 59, 71, 72, 73, 129, 193, 194, 195, 196, 198], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 41, 50, 66, 67, 68, 69, 70, 75, 82, 84, 87, 88, 92, 96, 104, 105, 106, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 223, 225, 232, 234, 236, 237, 240, 243, 246, 265, 267, 269, 276, 280, 297, 299, 301, 306, 308], "permut": 280, "persist": [86, 229, 230, 231, 233, 249, 250], "perturb": [12, 19, 20, 308], "phi": [96, 160], "pi": [96, 160, 262, 272, 277], "pil": [298, 308], "pinv": 13, "pioneer": 84, "pipelin": [5, 6, 234, 297, 298, 300], "pixel": [5, 6, 140, 300, 302], "place": [151, 153, 154, 155, 156, 157, 158], "placehold": [87, 181], "plai": [227, 234], "plot": 287, "point": [4, 141, 223], "pointwis": [145, 146, 147], "pool": [21, 36, 37, 38, 39, 42, 53, 60, 70, 75, 82, 84, 129, 130, 131, 132, 133, 134, 136, 137, 138, 148, 149, 170, 171, 198, 199, 200, 201, 202, 203, 204, 205, 206, 267, 269], "pool1": 93, "pool2": 93, "poorli": 14, "popul": 87, "popular": [4, 84], "portion": 308, "pose": 17, "posit": [1, 10, 15, 87, 93, 141, 159, 161, 162, 164, 201, 202, 203, 204, 205, 206, 220, 224, 245, 290, 294, 301], "possibl": [8, 308], "potenti": [17, 181, 219, 292], "power": [8, 15, 84, 148, 224, 225, 256, 297, 298, 308], "pp": 84, "practic": [17, 185, 188], "practition": 308, "pre": [43, 47, 48], "preactbottleneck": [43, 47, 48], "preced": [84, 88, 235], "preconfigur": [33, 34], "predefin": [4, 84, 90, 164], "predict": [80, 184, 185, 187, 188], "prefix": [87, 226], "prepar": [3, 224, 288, 290, 294, 298, 308], "prepend": 87, "preprint": 84, "preprocess": [3, 4, 108, 141, 234, 297, 298, 308], "present": [184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 202], "preserv": [109, 141, 173, 247, 248, 251, 252, 253, 254, 255, 268, 276, 281], "preset": 4, "prevent": [1, 89, 90, 91, 92, 93, 110, 113, 163, 174, 175, 176, 177, 184, 185, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225], "previou": [211, 220, 225], "previous": 214, "primari": [8, 227], "primarili": 93, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306], "priorit": 149, "probabilist": 234, "probabl": [30, 96, 102, 109, 110, 111, 112, 113, 119, 160, 166, 173, 174, 175, 176, 177, 184, 185, 188, 302, 303, 305, 308], "problem": [17, 18, 20, 84, 98, 159, 161, 218], "proceed": 84, "process": [2, 3, 4, 15, 18, 20, 21, 33, 42, 70, 81, 82, 84, 92, 104, 105, 106, 127, 141, 142, 143, 144, 148, 149, 164, 167, 169, 171, 180, 190, 191, 192, 193, 194, 195, 196, 201, 203, 204, 206, 211, 227, 287, 298, 299, 300, 301, 306, 308], "produc": [21, 82, 85, 129, 130, 131, 148, 169, 170, 171, 198, 199, 200, 232, 234], "product": [8, 18, 20, 165, 180, 196, 208, 238, 239, 243, 244], "program": [223, 234], "progress": 213, "project": [18, 20], "projector": 17, "promin": [201, 203, 204, 205, 206], "promot": [93, 185, 188, 208], "propag": [11, 12, 14, 17, 18, 19, 20, 84, 87, 93, 116, 118, 140, 148, 202, 203, 219, 220, 238, 239, 240, 244, 267, 269, 287, 288, 291, 295], "properli": [0, 92, 102, 166, 208], "properti": [9, 11, 14, 15, 96, 100, 109, 160, 164, 173, 213, 218], "proport": [5, 6, 281], "proportion": 306, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 42, 75, 80, 81, 83, 84, 87, 89, 90, 91, 92, 96, 118, 130, 131, 141, 184, 185, 186, 188, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 219, 221, 223, 225, 227, 232, 234, 235, 240, 247, 253, 267, 269, 280, 282, 290, 292, 294, 308], "pseudo": [14, 17], "purpos": [229, 233, 247, 252, 254], "python": 227, "pytorch": 282, "q": [18, 84], "qr": 13, "quad": [17, 184, 185, 186, 187, 188, 204, 205, 206, 236, 237, 241, 242, 243, 246, 299], "quadrat": 186, "quotient": 237, "r": [18, 84, 302, 303, 304, 305], "r_t": 218, "radam": 222, "rais": [0, 1, 2, 87, 208, 209, 245], "rand": [228, 234], "randint": [228, 234], "randn": [21, 23, 24, 25, 26, 27, 41, 42, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 80, 82, 145, 146, 147, 148, 149, 208, 228, 232, 234], "random": [1, 2, 3, 23, 24, 25, 26, 27, 41, 42, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 80, 145, 146, 147, 148, 149, 301, 302, 303, 304, 305, 308], "random_integ": 234, "random_tensor": 234, "randomcrop": [307, 308], "randomgrayscal": [307, 308], "randomhorizontalflip": [307, 308], "randomli": [1, 109, 110, 111, 112, 113, 141, 173, 174, 175, 176, 177, 301, 302, 303, 304, 305, 308], "randomnoisedataset": [0, 1, 2], "randomrot": [307, 308], "randomverticalflip": 307, "rang": [0, 1, 9, 42, 50, 84, 92, 101, 103, 104, 105, 120, 124, 158, 163, 165, 167, 211, 219, 221, 230, 258, 259, 261, 300, 304, 308], "rank": 17, "rasul": 5, "rate": [209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "rather": [5, 91, 92, 215, 291], "ratio": [60, 148, 149, 306], "ravel": 286, "raw": [102, 166, 185, 227], "re": [88, 225], "readabl": [89, 90, 91, 93, 208, 227], "readi": [3, 8, 66, 67, 68, 69, 74, 84], "real": [17, 20, 165], "rearrang": 108, "recalibr": [61, 63, 64, 66, 67, 68, 69, 84, 148], "receiv": [204, 205, 206, 288], "recent": 219, "recept": [70, 74, 84, 149], "reciproc": [17, 256, 266, 274], "recognit": [39, 84, 170], "rectangular": 251, "rectif": 218, "rectifi": [98, 99, 161, 162, 218], "recurr": [90, 196], "recurs": [85, 87], "red": 302, "reduc": [21, 40, 42, 53, 70, 75, 82, 84, 145, 146, 147, 148, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 217, 220, 225, 227, 267, 268, 269, 276, 281, 302], "reduct": [20, 60, 119, 120, 121, 123, 124, 148, 149, 184, 185, 186, 187, 188, 267, 269], "reevalu": 209, "refer": [4, 8, 87, 234, 248, 251, 283], "reflect": 223, "regardless": [17, 289], "region": [106, 129, 130, 131, 140, 199, 200, 288, 299, 308], "regist": [51, 52, 54, 55, 56, 57, 58, 59, 81, 86, 87, 88, 92, 208, 226], "register_buff": 86, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 71, 72, 73, 76, 77, 78, 79, 81, 83], "register_paramet": 87, "registr": [87, 208], "registri": [54, 55, 56, 57, 58, 59, 226], "registry_path": 226, "regress": [4, 123, 186, 187], "regular": [17, 21, 30, 82, 113, 174, 175, 176, 177, 211, 212, 213, 216, 217, 218, 219, 221], "relat": [225, 251, 252], "relationship": 306, "relev": [140, 211, 219, 221], "reli": 225, "reliabl": [5, 6], "reliant": [174, 175, 176, 177], "relu": [8, 21, 60, 75, 82, 84, 85, 89, 90, 91, 93, 95, 97, 98, 115, 142, 143, 144, 148, 149, 153, 154, 157, 158, 159, 161, 163, 168, 169, 170, 171, 179, 180, 181, 182], "relu1": 93, "relu2": 93, "relu3": 93, "relu6": [168, 179], "remain": [5, 6, 86, 128, 173, 174, 175, 176, 177, 220], "rememb": 234, "remov": [226, 292], "rep": 294, "repeat": [286, 287, 294], "repetit": [290, 294], "replac": [5, 234, 302], "repres": [5, 14, 16, 20, 36, 87, 88, 93, 116, 118, 125, 127, 128, 169, 170, 171, 180, 182, 185, 188, 196, 209, 210, 211, 217, 218, 219, 220, 221, 227, 236, 237, 243, 246, 248, 268, 279, 280, 281, 287, 299, 301, 303, 304, 305, 306], "represent": [51, 52, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 74, 84, 148, 202, 205, 209], "reproduc": [229, 230, 231, 232, 233, 234, 308], "requir": [2, 3, 4, 8, 54, 55, 56, 57, 58, 59, 70, 86, 89, 93, 95, 96, 98, 99, 100, 101, 103, 116, 118, 140, 148, 149, 158, 181, 185, 188, 208, 223, 225, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 306], "requires_grad": [86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 116, 118, 140, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298], "rescal": [119, 120, 124, 184, 185, 188], "research": 208, "reset": [88, 232, 235], "reshap": [8, 60, 118, 170, 171, 224, 227, 286, 289], "residu": [31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 84], "residualblock": 42, "resili": 220, "resiz": [140, 297, 307, 308], "resnet": [32, 33, 34, 35, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 70, 71, 72, 73, 84, 148], "resnet_1001": 84, "resnet_101": 84, "resnet_152": 84, "resnet_18": 84, "resnet_200": 84, "resnet_269": 84, "resnet_34": 84, "resnet_50": 84, "resnet_arg": 70, "resnext": [35, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 74, 84], "resnext_101_32x16d": 84, "resnext_101_32x32d": 84, "resnext_101_32x4d": 84, "resnext_101_32x8d": 84, "resnext_101_64x4d": 84, "resnext_50_32x4d": 84, "resolut": [66, 67, 68, 69, 74], "resourc": 225, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 75, 86, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 149, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 261, 265, 266, 267, 268, 269, 272, 274, 276, 279, 280, 281, 287, 288, 290, 294, 302], "respons": [66, 67, 68, 69, 84, 89, 210], "restor": [148, 225], "restructur": 291, "result": [10, 14, 15, 17, 84, 87, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 116, 118, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 149, 163, 166, 208, 209, 223, 225, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 308], "resum": 210, "retain": [88, 235, 247, 254, 267, 268, 269, 276, 281, 298], "retent": 298, "retriev": [0, 2, 89, 91, 92], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 60, 86, 87, 89, 90, 91, 92, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 297, 308], "reus": [84, 298], "reusabl": [93, 208, 297], "revers": [8, 93, 280, 303, 305], "revert": 225, "revolution": 84, "rgb": [29, 30, 31, 33, 34], "rho": 212, "rho_": 218, "rho_t": 218, "right": [15, 16, 17, 19, 20, 96, 102, 160, 166, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 299], "risk": 227, "rmsprop": 222, "rob": 84, "robust": [141, 173, 174, 175, 176, 177, 186, 208, 212, 301, 302, 304, 308], "roland": 5, "role": [227, 234, 308], "root": [4, 5, 6, 213, 219, 274], "rotat": [115, 139, 304, 308], "rotated_imag": 141, "rout": [204, 205, 206], "routin": 8, "row": [11, 12, 14, 19, 118, 251, 287, 296], "rprop": 222, "rule": [14, 15, 224, 236, 237, 241, 242, 243, 245, 246], "run": [8, 86, 125, 127, 142, 143, 144, 190, 191, 192, 193, 194, 195, 212, 225, 232, 234], "running_mean": [86, 125, 127, 190, 191, 192, 193, 194, 195], "running_var": [125, 127, 190, 191, 192, 193, 194, 195], "runtim": [90, 93, 208], "s_": 220, "s_d": [203, 206], "s_h": [202, 203, 206], "s_w": [202, 203, 206], "sain": 84, "same": [11, 12, 14, 15, 19, 102, 109, 110, 111, 112, 113, 125, 127, 128, 130, 131, 141, 142, 143, 144, 145, 146, 147, 149, 163, 169, 170, 171, 173, 174, 175, 176, 177, 181, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 220, 232, 234, 240, 250, 253, 255, 265, 267, 268, 269, 283, 285, 289, 291, 292, 293, 296, 300], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 66, 67, 68, 69, 74, 129, 130, 131, 153, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 180, 182, 185, 188, 196, 198, 199, 200, 231, 234, 299, 301, 303, 304, 305, 306], "sandler": 84, "satisfi": [10, 12, 19], "satur": [159, 308], "save": [2, 86, 88, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226], "scalabl": [3, 54, 55, 56, 57, 58, 59, 80, 84, 208], "scalar": [11, 16, 119, 120, 121, 123, 124, 227], "scale": [12, 17, 23, 33, 37, 38, 39, 40, 41, 43, 44, 45, 48, 61, 62, 70, 71, 72, 73, 84, 95, 100, 102, 125, 127, 128, 148, 149, 157, 158, 159, 161, 164, 165, 166, 167, 173, 174, 175, 176, 177, 185, 190, 191, 192, 193, 194, 195, 196, 211, 213, 214, 215, 227, 234, 281, 306], "scenario": [91, 92, 196, 215, 216, 298, 302], "schedul": 211, "scientif": 224, "score": [42, 53, 70, 102, 185], "scratch": 8, "script": 234, "se": [61, 62, 63, 64, 65, 66, 67, 68, 69, 84], "se_resnet_101": 84, "se_resnet_152": 84, "se_resnet_18": 84, "se_resnet_34": 84, "se_resnet_50": 84, "se_resnext_101_32x4d": 84, "se_resnext_101_32x8d": 84, "se_resnext_101_64x4d": 84, "se_resnext_50_32x4d": 84, "seamless": [0, 1, 3, 4, 208, 234], "seamlessli": [3, 4, 9, 88, 90, 93, 208, 227, 308], "search": 84, "second": [12, 90, 91, 116, 148, 180, 214, 215, 216, 217, 218, 224, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 285, 287, 305], "section": 240, "see": [8, 240], "seed": [228, 229, 230, 231, 233, 234, 308], "seen": 212, "select": [70, 71, 72, 73, 74, 84, 140, 148, 149, 204, 206, 276], "selectivekernel": 150, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 60, 75, 82, 85, 86, 87, 88, 89, 90, 91, 92, 100, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 287, 297, 298], "selu": [97, 109, 115, 168, 173, 179], "selunetwork": 164, "semodul": 150, "senet": [35, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84], "sensit": [121, 186, 190, 191, 192], "sentiment": 4, "separ": [0, 40, 80, 84, 104, 105, 106, 145, 146, 147, 193, 194, 195], "sequenc": [15, 42, 53, 70, 89, 91, 104, 247, 283, 285, 288, 290, 293, 294, 296, 297], "sequenti": [21, 32, 36, 60, 75, 80, 82, 85, 89, 90, 94, 104, 142, 143, 144, 181, 297, 308], "seri": [28, 37, 38, 70, 104, 142, 169, 201, 204], "serial": [86, 87, 210], "serv": [3, 5, 23, 32, 60, 75, 87, 89, 90, 91, 92, 93, 208, 220, 298], "set": [3, 4, 5, 6, 51, 52, 66, 67, 68, 69, 74, 85, 88, 92, 104, 105, 106, 161, 162, 164, 169, 170, 171, 173, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 209, 214, 215, 219, 229, 230, 231, 232, 233, 234, 235, 247, 249, 250, 254, 255, 261, 267, 269, 282, 298, 302, 308], "setup": [4, 8, 54, 55, 56, 57, 58, 59], "sever": [17, 169, 170, 171, 201, 202, 203, 204, 205, 206, 225, 297, 308], "sgd": [8, 211, 218, 222], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 42, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 71, 72, 73, 74, 75, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 224, 227, 229, 230, 231, 233, 234, 235, 238, 249, 250, 251, 252, 253, 254, 255, 261, 266, 267, 268, 269, 272, 274, 276, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305, 306, 308], "shapelik": 230, "share": 84, "shen": 148, "shift": [125, 127, 128, 190, 191, 192, 193, 194, 195, 196], "shorthand": 240, "should": [36, 86, 225, 229, 230, 231, 233, 249, 250, 258, 259, 279, 288, 297], "show": [223, 226], "showcas": 8, "shown": 232, "shrink": 212, "shuffl": [1, 2, 3], "side": [19, 90, 93, 104, 105, 106, 132, 133, 134, 136, 137, 138, 142, 143, 144, 169, 170, 171, 201, 202, 203, 204, 205, 206, 225], "sigma": [17, 148, 153, 155, 157, 165, 190, 191, 192, 193, 194, 195, 196, 280], "sigma_c": 300, "sigma_i": 17, "sigmoid": [97, 115, 148, 153, 154, 157, 158, 168, 179, 184], "sigmoidnetwork": 165, "sign": [15, 186, 220, 256], "signal": [142, 169, 170, 171, 190, 193, 201, 202, 203, 204, 205, 206], "signific": 225, "significantli": [53, 84, 148, 297], "sim": [173, 174, 175, 176, 177], "similar": [8, 153, 154, 240, 266, 282, 288], "similarli": [20, 279], "simonyan": 84, "simpl": [3, 4, 8, 85, 93, 104, 105, 106, 116, 118, 132, 133, 134, 136, 137, 138, 160, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 238, 239, 244, 297], "simplebinaryclassificationmodel": 184, "simpleclassificationmodel": [185, 188], "simplegelumodel": 160, "simpleleakyrelumodel": 161, "simplemodel": [8, 85, 163, 182, 226], "simpleregressionmodel": 187, "simplerelumodel": 162, "simpleselumodel": 164, "simplesigmoidmodel": 165, "simpletanhmodel": 167, "simpli": [223, 279, 280, 291], "simplic": [84, 162], "simplifi": [4, 37, 81, 93, 142, 143, 144], "simul": [85, 308], "simultan": 141, "sin": [256, 262], "sinc": [15, 18, 89, 90, 91, 92, 104, 105, 106, 158, 223, 225, 231, 287, 308], "sine": [259, 272, 273], "singl": [0, 4, 15, 18, 20, 42, 102, 142, 143, 144, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 185, 196, 202, 203, 204, 205, 206, 209, 227, 233, 249, 283, 292, 300, 302, 308], "singleton": 196, "singular": [11, 14, 15, 17, 19, 20], "sinh": [256, 263, 278], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 41, 42, 70, 82, 84, 85, 88, 90, 104, 105, 106, 108, 111, 112, 113, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 169, 170, 171, 180, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 230, 233, 234, 235, 267, 268, 269, 276, 281, 283, 285, 292, 295, 296, 299, 301, 306, 308], "sk": [70, 71, 72, 73, 74, 84, 149], "sk_resnet_18": 84, "sk_resnet_34": 84, "sk_resnet_50": 84, "sk_resnext_50_32x4d": 84, "skblock": 70, "skip": [84, 225], "sknet": [35, 71, 72, 73, 74, 84], "slice": [116, 279], "slide": [108, 201, 203, 204, 206], "slight": 148, "slightli": 308, "slope": [98, 159, 161], "slow": [3, 218], "small": [17, 37, 38, 39, 84, 98, 119, 120, 125, 127, 128, 161, 164, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 202, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220], "smaller": [82, 84, 90, 93, 208, 213, 214, 242, 299, 301, 306], "smallest": 269, "smooth": [30, 96, 159, 160, 211, 219, 308], "smoother": 211, "so": [89, 90, 91, 92, 141, 208, 218, 249, 250, 297], "softmax": [97, 115, 149, 168, 179, 185], "softmaxmodel": 166, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [95, 110, 141, 173, 174, 175, 190, 191, 192, 193, 194, 195, 213, 214, 215, 225, 227], "sometim": 224, "sophist": [90, 93], "sourc": 234, "space": [12, 18, 20, 104, 105, 106, 108, 129, 130, 131, 142, 143, 144, 145, 146, 147, 169, 170, 171, 198, 199, 200, 247, 308], "span": 4, "spars": [213, 214], "spatial": [21, 42, 53, 70, 75, 82, 84, 143, 148, 170, 171, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 287], "spatial_dim": 148, "spatio": 171, "special": [0, 1, 8, 17, 86, 87, 88, 173, 234], "specif": [4, 8, 24, 25, 26, 27, 32, 40, 51, 52, 89, 90, 91, 92, 93, 149, 158, 173, 174, 175, 176, 177, 193, 194, 195, 208, 209, 223, 234, 249, 267, 269, 290, 294], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 72, 73, 75, 76, 77, 78, 79, 81, 83, 85, 90, 102, 108, 113, 119, 120, 121, 123, 124, 128, 129, 130, 131, 140, 141, 148, 166, 169, 170, 171, 184, 185, 186, 187, 188, 196, 198, 199, 200, 202, 203, 204, 205, 206, 209, 227, 229, 230, 231, 232, 233, 245, 247, 248, 249, 250, 251, 252, 254, 255, 261, 267, 268, 269, 276, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 308], "speech": 193, "speed": [211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "split": [4, 283, 285, 296], "springer": 84, "sqrt": [96, 153, 154, 157, 158, 160, 190, 191, 192, 193, 194, 195, 196, 212, 213, 214, 215, 217, 218, 219, 256, 258, 259], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 121, 123, 186, 187, 212, 213, 214, 219, 256, 274], "squaredataset": [0, 1, 2, 3], "squeez": [60, 63, 66, 67, 68, 69, 84, 148, 286], "stabil": [14, 17, 84, 119, 120, 125, 127, 128, 142, 143, 144, 163, 184, 185, 190, 191, 192, 193, 194, 195, 196, 211, 212, 213, 214, 215, 216, 217, 218, 219, 300], "stabl": [153, 154, 157, 158, 173, 185, 211, 215, 216, 219, 220, 221], "stack": [93, 149, 285, 286, 296, 308], "stage": [42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73], "stage1": 60, "stage2": 60, "stage3": 60, "stage4": 60, "standalon": 163, "standard": [42, 51, 52, 96, 98, 145, 146, 147, 153, 155, 157, 159, 160, 161, 173, 220, 231, 234, 240, 297, 300, 308], "start": [1, 3, 211, 213, 220, 247, 299, 301], "state": [84, 86, 87, 88, 90, 93, 209, 223, 225, 232], "state_dict": [87, 88, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "static": 93, "statist": [17, 109, 125, 127], "std": [5, 6, 155, 297, 300, 308], "stem": [32, 42, 53, 70], "stem_typ": 42, "stem_width": 42, "step": [88, 108, 149, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 247, 297, 298], "step_siz": 220, "still": 212, "stochast": [8, 211, 221], "stop": 247, "storag": [89, 91, 235], "store": [2, 4, 5, 6, 42, 53, 70, 86, 87, 88, 89, 90, 91, 92, 148, 198, 199, 200, 225, 235, 299, 300, 301, 302, 303, 304, 305, 306], "str": [5, 6, 42, 75, 87, 89, 91, 93, 119, 120, 121, 123, 124, 140, 209, 226, 287], "straightforward": [221, 223, 236], "strategi": 210, "streamlin": [2, 3], "strict": [87, 209], "stride": [36, 37, 38, 39, 90, 93, 104, 105, 106, 108, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 198, 199, 200, 201, 202, 203, 204, 205, 206], "stride_height": 108, "stride_width": 108, "string": [87, 89, 91, 93, 169, 170, 171, 209], "structur": [0, 8, 18, 80, 86, 87, 90, 208, 209, 226, 227, 251, 298], "style": [32, 127, 193, 194, 287], "sub": [89, 90, 91, 92, 93, 208, 256, 299, 301], "sub_tensor": 235, "subclass": [1, 2, 3, 8, 87, 88, 89, 208, 209], "sublay": 85, "submodul": [85, 87, 208], "subsequ": [90, 93, 158, 234], "subset": [174, 175], "subtract": [8, 246, 300], "suffer": 213, "suit": [24, 25, 26, 27, 30, 40, 70, 153, 154, 157, 158], "suitabl": [32, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 65, 84, 186, 213, 214, 229], "sum": [16, 89, 90, 91, 92, 93, 102, 119, 120, 121, 123, 124, 149, 166, 184, 185, 186, 187, 188, 213, 236, 239, 244, 256, 279, 281, 283, 285, 287, 290, 294, 296], "sum_": [15, 102, 166, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 238, 239, 268, 276, 279, 281, 287, 290], "sum_i": [16, 244], "sum_j": 244, "sum_k": 240, "summar": [51, 52, 80, 201, 202, 203], "summari": [51, 52, 66, 67, 68, 69, 74], "summat": 15, "sun": 148, "super": [8, 85, 86, 87, 88, 89, 90, 91, 92, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 41, 42, 89, 90, 91, 92, 93, 140, 141, 208, 210, 217, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 248, 251, 261, 266, 268, 272, 274, 276, 279, 280, 281, 283, 287, 291, 298, 308], "suppos": 308, "sure": [208, 308], "svd": [13, 17], "symmetr": [10, 129, 130, 131, 157, 158, 167], "syntax": [1, 240], "system": [9, 10, 17, 18, 19, 84, 223, 287], "systemat": 308, "szegedi": [29, 84], "t": [17, 84, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 235, 240, 282, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "t0": 211, "t1": 282, "t2": 282, "tabular": 4, "tailor": [4, 208, 308], "take": [18, 201, 202, 203, 204, 205, 206, 225, 297], "taken": 279, "tan": [84, 256], "tangent": [103, 167, 260, 277, 278], "tanh": [36, 90, 93, 96, 97, 115, 153, 154, 157, 158, 160, 168, 179, 256], "tanhnetwork": 167, "target": [5, 6, 93, 119, 120, 121, 123, 124, 129, 130, 131, 140, 184, 185, 186, 187, 188, 198, 199, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 299, 301, 306], "target_tensor": [184, 185, 186, 187, 188], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 80, 84, 101, 102, 105, 116, 119, 120, 123, 124, 148, 149, 165, 166, 169, 170, 171, 184, 185, 186, 187, 188, 193, 194, 195, 201, 203, 204, 206, 214, 224, 234, 251, 308], "techniqu": [10, 14, 82, 125, 173, 174, 175, 176, 177, 193, 194, 195, 210, 306, 308], "tempor": [169, 171, 203, 206], "temporarili": 225, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 54, 55, 56, 57, 58, 59, 60, 71, 72, 73, 75, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 223, 225, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "term": [17, 116, 142, 143, 144, 145, 146, 147, 211, 215, 217, 218, 219, 221], "test": [4, 5, 6], "test_backward": 85, "test_siz": [5, 6], "text": [4, 11, 15, 16, 42, 53, 70, 71, 72, 73, 80, 89, 95, 98, 99, 100, 102, 104, 105, 106, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 236, 237, 239, 241, 242, 243, 245, 246, 257, 261, 267, 268, 269, 271, 276, 281, 283, 285, 288, 289, 290, 291, 292, 294, 295, 296, 299, 300, 301, 303, 304, 305], "th": [116, 184, 185, 187, 188, 193, 194, 195, 241, 242, 245], "than": [0, 1, 5, 91, 92, 95, 98, 121, 145, 146, 147, 159, 161, 186, 209, 215, 261, 279, 288, 293, 299, 301, 306], "thei": [0, 8, 20, 84, 86, 90, 92, 93, 227, 287, 291, 299, 301, 308], "them": [3, 87, 92, 108, 211, 224, 283, 293, 297, 300, 308], "therebi": [173, 202, 203, 205, 206], "theta": [211, 212, 304], "theta_": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "theta_t": [218, 219], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 84, 85, 86, 88, 90, 91, 92, 93, 99, 101, 102, 103, 104, 105, 106, 108, 116, 118, 129, 140, 141, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 239, 240, 244, 247, 249, 252, 253, 254, 255, 261, 265, 266, 267, 268, 269, 272, 274, 276, 279, 280, 281, 282, 288, 290, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "thing": 225, "those": [8, 37, 38, 39, 92, 158], "three": [20, 39, 106, 131, 134, 138, 142, 143, 144, 171, 177, 192, 195, 200, 203, 206], "threshold": [17, 121, 186], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 71, 72, 73, 81, 82, 89, 90, 93, 116, 118, 140, 148, 149, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 231, 238, 239, 244, 287, 289, 291, 292, 295, 308], "throughout": [100, 298], "tile": 286, "time": [0, 3, 15, 37, 38, 39, 104, 142, 161, 164, 169, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 219, 221, 225, 290, 294], "to_tensor": [5, 6], "togeth": [93, 297, 308], "too": 220, "tool": [3, 8, 208, 224, 234, 297, 308], "top": [10, 11, 12, 18, 20, 116, 118, 140, 169, 170, 171, 180, 182, 299, 301], "torch": [75, 282], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 85, 88, 235, 291], "totensor": [297, 308], "trace": [9, 256], "track": [8, 142, 143, 144, 190, 191, 192, 193, 194, 195, 208, 223, 225, 229, 230, 231, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 298], "track_running_stat": [142, 143, 144, 190, 191, 192, 193, 194, 195], "tradit": [5, 212, 213, 216, 217, 218], "trail": 128, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 66, 67, 68, 69, 74, 84, 85, 86, 87, 90, 92, 93, 102, 109, 110, 111, 112, 113, 125, 127, 141, 160, 161, 164, 165, 166, 167, 173, 174, 175, 176, 177, 190, 191, 192, 193, 194, 195, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 297, 300, 301, 302, 303, 304, 305, 308], "trainabl": [85, 190, 191, 192, 193, 194, 195, 208], "transact": 148, "transfer": [127, 193, 194], "transform": [2, 4, 5, 6, 8, 12, 84, 91, 116, 118, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 224, 287], "transform_pipelin": [297, 308], "transformed_imag": [297, 308], "transit": [23, 186], "translat": [202, 205], "transpos": [8, 10, 256], "treat": [0, 86, 196, 208], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 116, 118, 125, 127, 140, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 219, 223, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298], "truncat": 85, "truncate_from": 85, "try": 0, "tune": 308, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 42, 85, 87, 88, 104, 105, 106, 108, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 169, 170, 171, 181, 196, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 220, 227, 229, 230, 231, 233, 235, 249, 252, 254, 267, 268, 269, 276, 281, 283, 285, 287, 288, 291, 292, 293, 295, 296, 299, 300, 301, 306], "twice": 288, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 71, 75, 104, 105, 106, 116, 133, 137, 148, 149, 170, 176, 180, 191, 194, 202, 205, 214, 215, 216, 217, 218, 220, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 279, 287], "type": [36, 42, 60, 70, 86, 87, 88, 116, 180, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 282, 287, 298], "typeerror": [0, 1, 2, 87, 209], "typic": [9, 42, 53, 70, 86, 102, 109, 141, 148, 163, 164, 166, 188, 190, 191, 192, 193, 194, 195, 210, 211, 219, 221, 225, 227, 295, 298, 300, 304, 306, 308], "u": [17, 20, 154, 156, 158], "u_": 216, "ultra": 48, "unchang": [86, 113, 159, 161, 162, 164, 173, 174, 175, 176, 177, 181, 289, 292], "undefin": 245, "under": [54, 55, 56, 57, 58, 59, 208], "underbrac": 15, "underdetermin": 17, "undergo": 308, "underli": [0, 8, 29, 30, 31, 33, 34, 282, 285, 289, 291, 296], "understand": [8, 82, 84, 85, 93, 308], "unexpect": [87, 90, 93, 234], "unfold": [107, 115], "unifi": 0, "uniform": [152, 154, 158, 169, 170, 171, 180, 182, 228, 229, 230, 234, 302, 303, 304, 305], "uniformli": [229, 233], "uniniti": [249, 250], "unintend": 225, "union": 75, "uniqu": [10, 17, 19, 89, 91], "unit": [21, 36, 82, 95, 96, 98, 99, 100, 153, 154, 157, 158, 159, 160, 161, 162, 164, 173], "unless": [43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 235], "unlik": [86, 89, 90, 91, 92, 98, 159, 161, 173, 196, 212, 213, 215, 216, 217, 218, 220], "unnecessari": 225, "unpad": 288, "unseen": 308, "unsqueez": 286, "unstabl": 14, "up": [209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 304, 306], "updat": [4, 86, 92, 93, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225], "upon": [30, 84, 89, 90, 91, 92], "upper": [18, 156, 220, 233], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 116, 118, 123, 125, 127, 130, 131, 140, 141, 142, 143, 144, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 223, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 267, 268, 269, 276, 281, 287, 288, 290, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "usag": [3, 9, 23, 80, 90, 93, 145, 146, 147, 209, 210, 299, 300, 301, 302, 303, 304, 305, 306], "use_aux": [28, 29, 30], "user": [1, 2, 3, 4, 8, 89, 90, 91, 92, 208, 213, 297, 298, 308], "usual": 185, "util": [3, 8, 9, 71, 72, 73, 91, 92, 208, 234], "v": [12, 17, 20, 84, 214, 215, 217, 218, 248], "v1": [28, 29, 32, 33, 34, 40, 84], "v2": [32, 34, 84], "v3": [28, 30, 31, 84], "v4": [28, 31, 84], "v_": [211, 214, 215, 217, 218, 219, 221], "v_stack": 296, "v_t": [218, 219], "val": 151, "valid": [142, 143, 144, 145, 146, 147, 149, 169, 170, 171, 280], "valu": [8, 11, 15, 16, 17, 20, 40, 51, 52, 85, 87, 89, 91, 93, 95, 98, 101, 102, 103, 104, 105, 106, 108, 119, 120, 121, 123, 124, 125, 127, 128, 129, 140, 141, 142, 143, 144, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 229, 230, 231, 232, 233, 234, 247, 248, 249, 250, 251, 257, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 283, 288, 289, 291, 295, 300, 302, 303, 305], "valuabl": 234, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 209], "van": 84, "vanish": [84, 159, 164, 190, 191, 192], "var": 256, "vari": [70, 90, 92, 129, 140, 198, 304], "variabl": [87, 93, 129, 130, 131, 181, 198, 199, 200, 208, 223, 225, 229, 249, 301, 304], "varianc": [100, 109, 125, 127, 142, 143, 144, 153, 154, 157, 158, 164, 173, 190, 191, 192, 193, 194, 195, 196, 214, 215, 216, 217, 218, 231, 281, 304, 308], "variant": [23, 24, 25, 26, 27, 51, 52, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 214, 215, 216], "variat": [145, 146, 147, 193, 194, 195, 301, 308], "varieti": [4, 32, 234, 308], "variou": [5, 23, 28, 33, 34, 36, 41, 84, 162, 210, 234, 267, 269, 288, 298], "vasudevan": 84, "vdot": 244, "vector": [12, 17, 18, 19, 20, 116, 118, 180, 182, 238, 239, 240, 244], "veloc": [211, 219, 221], "veri": [17, 45, 47, 84, 212], "versa": 220, "versatil": [234, 287], "version": [20, 28, 32, 36, 37, 38, 219, 244, 302], "vertic": [293, 296, 305], "vgg": 75, "vggnet": [35, 76, 77, 78, 79, 84], "vggnet_11": 84, "vggnet_13": 84, "vggnet_16": 84, "vggnet_19": 84, "via": [3, 4, 70], "vice": 220, "video": [106, 113, 144, 171, 195, 203, 206], "view": [32, 36, 90, 202, 203, 204, 205, 206, 291], "vision": [40, 42, 84, 105, 170, 180, 308], "visual": [82, 84], "vol": 84, "vollgraf": 5, "volumetr": [106, 113, 144, 171, 195, 203, 206], "vstack": 286, "w": [42, 54, 55, 56, 57, 58, 59, 71, 72, 73, 84, 105, 106, 108, 112, 113, 116, 118, 130, 131, 133, 134, 137, 138, 140, 141, 143, 144, 148, 169, 170, 171, 180, 182, 191, 192, 194, 195, 199, 200, 203, 206, 299, 301], "w_": [105, 106, 130, 131, 133, 134, 137, 138, 140, 170, 171, 199, 200, 202, 203, 205, 206], "w_out": [105, 106, 133, 134, 137, 138], "wa": [29, 173, 174, 175, 176, 177, 225], "wai": [1, 22, 83, 223, 225, 291], "wang": 84, "want": [0, 8, 297, 299], "warn": [89, 91], "we": [3, 8, 224, 287], "weight": [43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 84, 104, 105, 106, 116, 118, 119, 120, 124, 125, 127, 128, 140, 148, 149, 153, 154, 157, 158, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 229, 234], "weight1": 91, "weight2": 91, "weight_decai": [211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "weinberg": 84, "well": [24, 25, 26, 27, 30, 70, 153, 154], "were": 93, "weyand": 84, "what": 225, "when": [0, 1, 3, 8, 15, 87, 90, 92, 93, 95, 98, 104, 105, 106, 159, 181, 190, 191, 192, 193, 194, 195, 209, 212, 220, 223, 225, 226, 227, 234, 245, 297, 299], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 80, 84, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 227, 234, 236, 237, 241, 242, 243, 245, 246, 249, 250, 261, 265, 266, 267, 268, 269, 272, 274, 276, 279, 280, 281, 283, 288, 290, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305], "whether": [1, 11, 28, 29, 30, 87, 88, 153, 154, 219, 223, 229, 230, 231, 233, 235, 249, 250, 267, 268, 269, 276, 281], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 40, 41, 66, 67, 68, 69, 70, 74, 76, 77, 78, 79, 84, 87, 89, 91, 93, 98, 102, 121, 141, 145, 146, 147, 149, 159, 160, 161, 163, 166, 167, 173, 186, 188, 190, 191, 192, 193, 194, 195, 196, 214, 215, 217, 219, 223, 225, 227, 229, 230, 233, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 283, 290, 291, 293, 295, 298, 299, 301, 302, 303, 304, 305, 306, 308], "while": [8, 34, 40, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 74, 84, 90, 93, 109, 160, 162, 163, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 225, 291, 293, 302, 308], "who": [8, 89, 90, 91, 92], "whose": [20, 250, 253, 255, 257, 261, 265, 271], "wide": [4, 6, 9, 17, 42, 50, 51, 52, 84, 99, 162, 169, 170, 185], "wide_resnet_101": 84, "wide_resnet_50": 84, "wider": [51, 52, 104, 105], "wideresnet": 84, "width": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 80, 105, 106, 108, 112, 113, 130, 131, 133, 134, 137, 138, 140, 141, 149, 170, 171, 191, 192, 194, 195, 199, 200, 202, 203, 205, 206, 299, 301, 306], "width_multipli": [40, 41], "window": [132, 133, 134, 136, 137, 138, 201, 202, 203, 204, 205, 206, 212, 267, 269], "wise": [64, 66, 67, 68, 69, 84, 95, 96, 98, 99, 100, 101, 102, 103, 142, 143, 144, 148, 166, 173, 174, 175, 176, 177, 208, 224, 236, 237, 240, 241, 242, 243, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 277, 278, 279, 285, 296], "within": [2, 84, 85, 86, 89, 90, 91, 92, 93, 103, 140, 141, 158, 160, 162, 164, 165, 167, 169, 170, 171, 173, 174, 175, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 210, 225, 247, 261, 304, 308], "without": [8, 53, 89, 90, 91, 116, 118, 169, 170, 171, 180, 182, 223, 226, 267, 289, 291, 295], "won": 225, "work": [1, 2, 3, 8, 10, 224, 227], "workflow": [234, 308], "workload": 8, "wrap": [3, 208, 225, 282], "wrapper": 208, "x": [8, 9, 19, 32, 36, 60, 75, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93, 102, 116, 118, 141, 145, 146, 147, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 230, 231, 233, 249, 250, 265, 287, 299, 300, 301, 302, 303, 304, 305, 306], "x1": 180, "x2": 180, "x_": [185, 188, 287], "x_c": [185, 188], "x_i": 184, "x_k": 185, "xavier": [153, 154, 157, 158], "xavier_norm": 152, "xavier_uniform": 152, "xception": [35, 84], "xiao": 5, "xie": 84, "xy": 287, "x\u2081": 180, "x\u2082": 180, "y": [80, 84, 89, 90, 91, 92, 93, 141, 145, 146, 147, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 229, 230, 231, 233, 249, 250, 287, 302], "y_": [185, 188, 287], "y_c": [185, 188], "y_i": 184, "yann": [6, 84], "yet": [8, 224], "yield": [0, 1, 87, 225], "you": [0, 85, 90, 92, 93, 208, 210, 223, 225, 234, 249, 250, 251, 255, 280, 282, 297, 299, 308], "your": [208, 210, 223, 225, 234, 308], "z": [84, 250, 254, 255], "zalandoresearch": 5, "zeiler": [82, 84], "zero": [15, 17, 18, 30, 85, 95, 98, 104, 105, 106, 109, 110, 111, 112, 113, 132, 133, 134, 136, 137, 138, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 169, 170, 171, 173, 174, 175, 176, 177, 196, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 249, 250, 251, 255, 256, 261, 271, 288], "zero_grad": [88, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 235], "zeros_lik": [250, 256], "zfnet": [35, 84], "zhang": 84, "zhmoginov": 84, "zhu": 84, "zisserman": 84, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "mobilenet", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 224, "1d": 224, "2": 224, "2d": 224, "3": 224, "It": [223, 225], "ab": 257, "activ": [97, 115, 168, 179], "ad": 224, "adadelta": 212, "adagrad": 213, "adam": 214, "adamax": 216, "adamw": 215, "adaptive_avg_pool1d": 129, "adaptive_avg_pool2d": 130, "adaptive_avg_pool3d": 131, "adaptiveavgpool1d": 198, "adaptiveavgpool2d": 199, "adaptiveavgpool3d": 200, "add": 236, "addit": 17, "admonit": 227, "advanc": [108, 308], "alexnet": [21, 22], "algebra": 13, "algorithm": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "alias": 227, "align": 224, "alpha_dropout": 109, "alphadropout": 173, "also": 210, "anoth": 282, "arang": 247, "arcco": 258, "architectur": [21, 37, 38, 39, 51, 52, 82], "arcsin": 259, "arctan": 260, "asgd": 211, "attent": 149, "attribut": [5, 6, 21, 32, 36, 42, 53, 60, 70, 75, 80, 82, 86, 88, 89, 90, 91, 92, 93, 142, 143, 144, 145, 146, 147, 148, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 235, 299, 300, 301, 302, 303, 304, 305, 306], "avg_pool1d": 132, "avg_pool2d": 133, "avg_pool3d": 134, "avgpool1d": 201, "avgpool2d": 202, "avgpool3d": 203, "axi": 224, "backpropag": 235, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 148, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "batch_norm": 125, "batchnorm": 150, "batchnorm1d": 190, "batchnorm2d": 191, "batchnorm3d": 192, "bceloss": 184, "behavior": [129, 130, 131, 198, 199, 200], "benefit": 225, "bilinear": [116, 180], "binari": 256, "binary_cross_entropi": 119, "broadcast": 224, "buffer": 86, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 42, 53, 60, 70, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 116, 118, 129, 130, 131, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306], "captur": 226, "case": 227, "centercrop": 299, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 42, 53, 60, 70, 75, 80, 82, 86, 87, 88, 89, 90, 91, 92, 93, 142, 143, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 235, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "clip": 261, "co": 262, "combin": 0, "compon": [3, 8, 208], "compos": 297, "concatdataset": [0, 1], "concaten": 283, "conclus": [3, 8, 208, 223, 224, 225, 234, 298, 308], "constant": 151, "contain": 94, "conv": 150, "conv1d": [104, 169], "conv2d": [105, 170], "conv3d": [106, 171], "convbnrelu1d": 142, "convbnrelu2d": 143, "convbnrelu3d": 144, "convnet": [35, 84], "convolut": [107, 115, 150, 172, 179], "core": 8, "cosh": 263, "creat": [88, 235, 282], "cross_entropi": 120, "crossentropyloss": 185, "cube": 264, "custom": [1, 2, 3, 87, 209, 210, 308], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 87, 209, 210], "definit": 227, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "depthseparableconv1d": 145, "depthseparableconv2d": 146, "depthseparableconv3d": 147, "depthwis": 150, "descript": [54, 55, 56, 57, 58, 59, 71, 72, 73, 226], "det": 11, "detail": [17, 51, 52], "diag": 248, "dilat": 108, "div": 237, "dot": 238, "dropout": [110, 114, 115, 174, 178, 179], "dropout1d": [111, 175], "dropout2d": [112, 176], "dropout3d": [113, 177], "eig": 12, "elu": [95, 159], "empti": 249, "empty_lik": 250, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "excit": 150, "exp": 265, "ey": 251, "fashionmnist": 5, "featur": [4, 8, 9, 66, 67, 68, 69, 74, 210, 234, 308], "flatten": 284, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 42, 53, 60, 70, 80, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 108, 116, 118, 129, 130, 131, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306], "from": 282, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 153, 154, 155, 156, 157, 158, 223, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "fuse": 150, "futur": 4, "gelu": [96, 160], "gener": [228, 256], "get": 210, "grad_en": 223, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 116, 118, 140, 148, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "guidelin": 227, "how": [223, 225], "hstack": 285, "huber_loss": 121, "huberloss": 186, "ident": 181, "imag": [7, 307], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 235, "init": [151, 153, 154, 155, 156, 157, 158], "initi": 152, "inner": 239, "input": 282, "inspect": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "instance_norm": 127, "instancenorm1d": 193, "instancenorm2d": 194, "instancenorm3d": 195, "integr": [3, 208, 234, 308], "interpol": 140, "inv": 14, "iter": 235, "kaiming_norm": 153, "kaiming_uniform": 154, "kei": [3, 4, 8, 66, 67, 68, 69, 74, 208, 210, 234, 308], "kernel": 150, "layer": [150, 168, 172, 178, 179, 183, 189, 197, 207], "layer_norm": 128, "layernorm": 196, "leaky_relu": 98, "leakyrelu": 161, "learn": 234, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 115, 117, 118, 179, 182, 183], "list": 282, "load": 1, "log": 266, "loss": [115, 122, 179, 189], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 84, 115, 208, 210, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 308], "matmul": 240, "matrix": 240, "matrix_pow": 15, "max": 267, "max_pool1d": 136, "max_pool2d": 137, "max_pool3d": 138, "maximum": 241, "maxpool1d": 204, "maxpool2d": 205, "maxpool3d": 206, "mean": 268, "mechan": 149, "meshgrid": 287, "metadata": 226, "method": [0, 1, 2, 5, 6, 32, 36, 75, 87, 88, 209, 235], "min": 269, "minimum": 242, "mnist": 6, "mobilenet": [40, 41], "model": [84, 85, 208], "modul": [87, 179], "moduledict": 89, "modulelist": 90, "more": 234, "mse_loss": 123, "mseloss": 187, "mul": 243, "multipl": [0, 240], "nadam": 217, "new": 224, "newaxi": 224, "nll_loss": 124, "nllloss": 188, "nn": [86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "no_grad": 225, "norm": 16, "normal": [115, 126, 155, 179, 197, 300], "note": 8, "number": 228, "ones": 252, "ones_lik": 253, "oper": [13, 240, 256], "optim": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "organ": 208, "outer": 244, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 208, 210, 234, 308], "pad": 288, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "parameterdict": 91, "parameterlist": 92, "pass": 80, "perform": 235, "pinv": 17, "pipelin": [3, 308], "pitfal": [223, 225], "pool": [115, 135, 179, 207], "potenti": [223, 225], "power": 245, "properti": [88, 235], "qr": 18, "radam": 218, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 229, "randint": 230, "randn": 231, "random": [228, 229, 230, 231, 232, 233, 234], "randomcrop": 301, "randomgrayscal": 302, "randomhorizontalflip": 303, "randomrot": 304, "randomverticalflip": 305, "ravel": 289, "reciproc": 270, "refer": [5, 6, 148, 210], "register_model": 226, "relu": [99, 150, 162], "relu6": 163, "repeat": 290, "reshap": 291, "resiz": 306, "resnet": 42, "resnet_1001": 43, "resnet_101": 44, "resnet_152": 45, "resnet_18": 46, "resnet_200": 47, "resnet_269": 48, "resnet_34": 49, "resnet_50": 50, "resnext": 53, "resnext_101_32x16d": 54, "resnext_101_32x32d": 55, "resnext_101_32x4d": 56, "resnext_101_32x8d": 57, "resnext_101_64x4d": 58, "resnext_50_32x4d": 59, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 85, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 149, 151, 153, 154, 155, 156, 157, 158, 163, 223, 225, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "rmsprop": 219, "rotat": 141, "rprop": 220, "rule": 240, "se_resnet_101": 61, "se_resnet_152": 62, "se_resnet_18": 63, "se_resnet_34": 64, "se_resnet_50": 65, "se_resnext_101_32x4d": 66, "se_resnext_101_32x8d": 67, "se_resnext_101_64x4d": 68, "se_resnext_50_32x4d": 69, "see": 210, "seed": 232, "select": 150, "selectivekernel": 149, "selu": [100, 164], "semodul": 148, "senet": 60, "separ": 150, "sequenti": 93, "sgd": 221, "sigmoid": [101, 165], "sign": 271, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "sin": 272, "sinh": 273, "sk_resnet_18": 71, "sk_resnet_34": 72, "sk_resnet_50": 73, "sk_resnext_50_32x4d": 74, "sknet": 70, "slice": 235, "softmax": [102, 166], "solv": 19, "sqrt": 274, "squar": 275, "squeez": [150, 292], "stack": 293, "start": 210, "state": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "sub": 246, "sum": 276, "summar": 85, "summari": 85, "svd": 20, "tabl": 85, "tan": 277, "tanh": [103, 167, 278], "tensor": [224, 235, 256, 282, 286], "through": 235, "tile": 294, "totensor": 298, "trace": 279, "track": 235, "transform": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "transpos": 280, "type": 227, "unari": 256, "unfold": 108, "uniform": [156, 233], "unsqueez": 295, "us": [1, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 282], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 66, 67, 68, 69, 74, 86, 141, 223, 224, 225, 227, 287, 297, 298, 308], "util": [115, 139], "utilit": 286, "var": 281, "vggnet": 75, "vggnet_11": 76, "vggnet_13": 77, "vggnet_16": 78, "vggnet_19": 79, "vstack": 296, "weight": 152, "why": 227, "wide_resnet_101": 51, "wide_resnet_50": 52, "work": [4, 223, 225], "xavier_norm": 157, "xavier_uniform": 158, "xception": [80, 81], "zero": 254, "zeros_lik": 255, "zfnet": [82, 83]}})