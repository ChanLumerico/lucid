Search.setIndex({"alltitles": {"@ Operator": [[227, "operator"]], "Activation Functions": [[88, null]], "Activation Layers": [[155, null], [166, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[214, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[99, "advanced-example-with-dilation"]], "Advanced Features": [[295, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[198, "algorithm"], [199, "algorithm"], [200, "algorithm"], [201, "algorithm"], [202, "algorithm"], [203, "algorithm"], [204, "algorithm"], [205, "algorithm"], [206, "algorithm"], [207, "algorithm"], [208, "algorithm"]], "Architecture": [[21, "architecture"], [32, "architecture"], [33, "architecture"], [34, "architecture"], [73, "architecture"]], "Architecture Details": [[44, "architecture-details"], [45, "architecture-details"]], "Attention Mechanism": [[137, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [27, "attributes"], [31, "attributes"], [35, "attributes"], [46, "attributes"], [53, "attributes"], [63, "attributes"], [68, "attributes"], [73, "attributes"], [77, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [82, "attributes"], [83, "attributes"], [84, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [180, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [222, "attributes"], [286, "attributes"], [287, "attributes"], [288, "attributes"], [289, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"]], "Behavior": [[120, "behavior"], [121, "behavior"], [122, "behavior"], [185, "behavior"], [186, "behavior"], [187, "behavior"]], "Benefits": [[212, "benefits"]], "Binary Functions": [[243, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [27, "class-signature"], [31, "class-signature"], [35, "class-signature"], [46, "class-signature"], [53, "class-signature"], [63, "class-signature"], [68, "class-signature"], [73, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [196, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [222, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [288, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [195, "conclusion"], [210, "conclusion"], [211, "conclusion"], [212, "conclusion"], [221, "conclusion"], [285, "conclusion"], [295, "conclusion"]], "Containers": [[85, null]], "Conv-BatchNorm-ReLU": [[138, null]], "ConvNets": [[30, null], [75, "convnets"]], "Convolution Functions": [[98, null], [106, null]], "Convolution Layers": [[159, null], [166, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[269, null]], "Creating a Parameter": [[79, null]], "Creating a tensor with gradient tracking": [[222, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[295, "custom-pipelines"]], "Defining a Custom Optimizer": [[197, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[78, null]], "Defining a custom optimizer": [[196, null]], "Description": [[47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [64, "description"], [65, "description"], [66, "description"], [213, "description"]], "Dropout Functions": [[105, null], [106, null]], "Dropout Layers": [[165, null], [166, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [99, "example"], [195, null], [195, null], [195, null], [210, "example"], [212, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, null], [221, null], [221, null], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [253, "example"], [255, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [266, "example"], [267, "example"], [268, "example"], [270, "example"], [272, "example"], [276, "example"], [278, "example"], [279, "example"], [280, "example"], [282, "example"], [283, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[211, null]], "Example 2: Adding a new axis to a 2D tensor": [[211, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[211, null]], "Example Usage": [[8, "example-usage"], [24, "example-usage"], [25, "example-usage"], [26, "example-usage"], [28, "example-usage"], [29, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [34, "example-usage"], [59, "example-usage"], [60, "example-usage"], [61, "example-usage"], [62, "example-usage"], [67, "example-usage"], [132, "example-usage"], [284, "example-usage"], [285, "example-usage"], [295, "example-usage"]], "Example Use Cases": [[214, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [107, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [213, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [252, "examples"], [254, "examples"], [256, "examples"], [269, "examples"], [271, "examples"], [274, "examples"], [275, "examples"], [277, "examples"], [281, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [35, "forward-calculation"], [46, "forward-calculation"], [53, "forward-calculation"], [63, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [99, "forward-calculation"], [107, "forward-calculation"], [109, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [131, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [270, "forward-calculation"], [272, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [28, "function-signature"], [29, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [76, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [107, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [210, "function-signature"], [212, "function-signature"], [213, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"]], "Fused Layers": [[138, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[197, "getting-started"]], "How It Works": [[210, "how-it-works"], [212, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[294, null]], "Inception": [[23, null]], "InceptionResNet": [[27, null]], "Indexing and slicing": [[222, null]], "Inspecting Optimizer State": [[197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null]], "Integration with lucid": [[3, "integration-with-lucid"], [195, "integration-with-lucid"], [221, "integration-with-lucid"], [295, "integration-with-lucid"]], "Iterating through a tensor": [[222, null]], "Key Components": [[3, "key-components"], [195, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [59, "key-features"], [60, "key-features"], [61, "key-features"], [62, "key-features"], [67, "key-features"], [197, "key-features"], [221, "key-features"]], "Key Transformations": [[295, "key-transformations"]], "LeNet": [[31, null]], "Learn More": [[221, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[106, null], [108, null]], "Linear Layers": [[166, null], [170, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[106, null], [113, null]], "Loss Layers": [[166, null], [176, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[227, "matrix-multiplication-rules"]], "Metadata Captured": [[213, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [27, "methods"], [31, "methods"], [68, "methods"], [78, "methods"], [79, "methods"], [196, "methods"], [222, "methods"]], "Modules": [[166, null]], "Normalization Functions": [[106, null], [117, null]], "Normalization Layers": [[166, null], [184, null]], "Notes": [[8, "notes"]], "Optimizers": [[209, null]], "Organizing Models": [[195, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [29, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [57, "overview"], [58, "overview"], [195, "overview"], [197, "overview"], [221, "overview"], [295, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [31, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [107, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [212, "parameters"], [213, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"]], "Performing backpropagation": [[222, null]], "Pooling Functions": [[106, null], [126, null]], "Pooling Layers": [[166, null], [194, null]], "Potential Pitfalls": [[210, "potential-pitfalls"], [212, "potential-pitfalls"]], "Properties": [[79, "properties"], [222, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[215, null]], "References": [[5, "references"], [6, "references"], [136, "references"], [197, "references"]], "ResNeXt": [[46, null]], "ResNet": [[35, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [28, "returns"], [29, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [76, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [107, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [137, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [210, "returns"], [212, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"]], "SENet": [[53, null]], "SKNet": [[63, null]], "See Also": [[197, "see-also"]], "Selective Kernel": [[138, null]], "Squeeze-and-Excitation": [[138, null]], "Summary Table": [[76, "summary-table"]], "Tensor Generating Functions": [[243, null]], "Tensor Operations": [[243, null]], "Tensor Utilites": [[273, null]], "Type Definitions": [[214, "type-definitions"]], "Unary Functions": [[243, null]], "Usage": [[4, "usage"], [77, "usage"], [132, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [274, "usage"], [284, "usage"], [285, "usage"], [295, "usage"]], "Use another Tensor as input": [[269, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[198, null]], "Using the Adadelta Optimizer": [[199, null]], "Using the Adagrad Optimizer": [[200, null]], "Using the Adam Optimizer": [[201, null]], "Using the AdamW Optimizer": [[202, null]], "Using the Adamax Optimizer": [[203, null]], "Using the NAdam Optimizer": [[204, null]], "Using the RAdam Optimizer": [[205, null]], "Using the RMSprop Optimizer": [[206, null]], "Using the Rprop Optimizer": [[207, null]], "Using the SGD Optimizer": [[208, null]], "Utility Functions": [[106, null], [130, null]], "VGGNet": [[68, null]], "Weight Initializations": [[140, null]], "Why Use Type Aliases?": [[214, null]], "ZFNet": [[73, null]], "activation Functions": [[106, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[28, null]], "inception_resnet_v2": [[29, null]], "inception_v1": [[24, null]], "inception_v3": [[25, null]], "inception_v4": [[26, null]], "lenet_1": [[32, null]], "lenet_4": [[33, null]], "lenet_5": [[34, null]], "lucid.Tensor": [[222, null]], "lucid.abs": [[244, null]], "lucid.add": [[223, null]], "lucid.arange": [[234, null]], "lucid.arccos": [[245, null]], "lucid.arcsin": [[246, null]], "lucid.arctan": [[247, null]], "lucid.clip": [[248, null]], "lucid.concatenate": [[270, null]], "lucid.cos": [[249, null]], "lucid.cosh": [[250, null]], "lucid.cube": [[251, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[235, null]], "lucid.div": [[224, null]], "lucid.dot": [[225, null]], "lucid.empty": [[236, null]], "lucid.empty_like": [[237, null]], "lucid.exp": [[252, null]], "lucid.eye": [[238, null]], "lucid.flatten": [[271, null]], "lucid.grad_enabled": [[210, null]], "lucid.hstack": [[272, null]], "lucid.inner": [[226, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[253, null]], "lucid.matmul": [[227, null]], "lucid.max": [[254, null]], "lucid.maximum": [[228, null]], "lucid.mean": [[255, null]], "lucid.meshgrid": [[274, null]], "lucid.min": [[256, null]], "lucid.minimum": [[229, null]], "lucid.models": [[75, null]], "lucid.mul": [[230, null]], "lucid.newaxis": [[211, null]], "lucid.nn": [[195, null]], "lucid.nn.functional": [[106, null]], "lucid.no_grad": [[212, null]], "lucid.ones": [[239, null]], "lucid.ones_like": [[240, null]], "lucid.optim": [[197, null]], "lucid.outer": [[231, null]], "lucid.pad": [[275, null]], "lucid.power": [[232, null]], "lucid.random": [[221, null]], "lucid.random.rand": [[216, null]], "lucid.random.randint": [[217, null]], "lucid.random.randn": [[218, null]], "lucid.random.seed": [[219, null]], "lucid.random.uniform": [[220, null]], "lucid.ravel": [[276, null]], "lucid.reciprocal": [[257, null]], "lucid.register_model": [[213, null]], "lucid.repeat": [[277, null]], "lucid.reshape": [[278, null]], "lucid.sign": [[258, null]], "lucid.sin": [[259, null]], "lucid.sinh": [[260, null]], "lucid.sqrt": [[261, null]], "lucid.square": [[262, null]], "lucid.squeeze": [[279, null]], "lucid.stack": [[280, null]], "lucid.sub": [[233, null]], "lucid.sum": [[263, null]], "lucid.tan": [[264, null]], "lucid.tanh": [[265, null]], "lucid.tensor": [[269, null]], "lucid.tile": [[281, null]], "lucid.trace": [[266, null]], "lucid.transforms": [[295, null]], "lucid.transpose": [[267, null]], "lucid.types": [[214, null]], "lucid.unsqueeze": [[282, null]], "lucid.var": [[268, null]], "lucid.vstack": [[283, null]], "lucid.zeros": [[241, null]], "lucid.zeros_like": [[242, null]], "models.summarize": [[76, null]], "nn.AdaptiveAvgPool1d": [[185, null]], "nn.AdaptiveAvgPool2d": [[186, null]], "nn.AdaptiveAvgPool3d": [[187, null]], "nn.AlphaDropout": [[160, null]], "nn.AvgPool1d": [[188, null]], "nn.AvgPool2d": [[189, null]], "nn.AvgPool3d": [[190, null]], "nn.BCELoss": [[171, null]], "nn.BatchNorm1d": [[177, null]], "nn.BatchNorm2d": [[178, null]], "nn.BatchNorm3d": [[179, null]], "nn.Bilinear": [[167, null]], "nn.Buffer": [[77, null]], "nn.Conv1d": [[156, null]], "nn.Conv2d": [[157, null]], "nn.Conv3d": [[158, null]], "nn.ConvBNReLU1d": [[133, null]], "nn.ConvBNReLU2d": [[134, null]], "nn.ConvBNReLU3d": [[135, null]], "nn.CrossEntropyLoss": [[172, null]], "nn.Dropout": [[161, null]], "nn.Dropout1d": [[162, null]], "nn.Dropout2d": [[163, null]], "nn.Dropout3d": [[164, null]], "nn.ELU": [[147, null]], "nn.GELU": [[148, null]], "nn.HuberLoss": [[173, null]], "nn.Identity": [[168, null]], "nn.InstanceNorm1d": [[180, null]], "nn.InstanceNorm2d": [[181, null]], "nn.InstanceNorm3d": [[182, null]], "nn.LayerNorm": [[183, null]], "nn.LeakyReLU": [[149, null]], "nn.Linear": [[169, null]], "nn.MSELoss": [[174, null]], "nn.MaxPool1d": [[191, null]], "nn.MaxPool2d": [[192, null]], "nn.MaxPool3d": [[193, null]], "nn.Module": [[78, null]], "nn.ModuleDict": [[80, null]], "nn.ModuleList": [[81, null]], "nn.NLLLoss": [[175, null]], "nn.Parameter": [[79, null]], "nn.ParameterDict": [[82, null]], "nn.ParameterList": [[83, null]], "nn.ReLU": [[150, null]], "nn.SELU": [[151, null]], "nn.SEModule": [[136, null]], "nn.SelectiveKernel": [[137, null]], "nn.Sequential": [[84, null]], "nn.Sigmoid": [[152, null]], "nn.Softmax": [[153, null]], "nn.Tanh": [[154, null]], "nn.functional.adaptive_avg_pool1d": [[120, null]], "nn.functional.adaptive_avg_pool2d": [[121, null]], "nn.functional.adaptive_avg_pool3d": [[122, null]], "nn.functional.alpha_dropout": [[100, null]], "nn.functional.avg_pool1d": [[123, null]], "nn.functional.avg_pool2d": [[124, null]], "nn.functional.avg_pool3d": [[125, null]], "nn.functional.batch_norm": [[116, null]], "nn.functional.bilinear": [[107, null]], "nn.functional.binary_cross_entropy": [[110, null]], "nn.functional.conv1d": [[95, null]], "nn.functional.conv2d": [[96, null]], "nn.functional.conv3d": [[97, null]], "nn.functional.cross_entropy": [[111, null]], "nn.functional.dropout": [[101, null]], "nn.functional.dropout1d": [[102, null]], "nn.functional.dropout2d": [[103, null]], "nn.functional.dropout3d": [[104, null]], "nn.functional.elu": [[86, null]], "nn.functional.gelu": [[87, null]], "nn.functional.huber_loss": [[112, null]], "nn.functional.instance_norm": [[118, null]], "nn.functional.interpolate": [[131, null]], "nn.functional.layer_norm": [[119, null]], "nn.functional.leaky_relu": [[89, null]], "nn.functional.linear": [[109, null]], "nn.functional.max_pool1d": [[127, null]], "nn.functional.max_pool2d": [[128, null]], "nn.functional.max_pool3d": [[129, null]], "nn.functional.mse_loss": [[114, null]], "nn.functional.nll_loss": [[115, null]], "nn.functional.relu": [[90, null]], "nn.functional.rotate": [[132, null]], "nn.functional.selu": [[91, null]], "nn.functional.sigmoid": [[92, null]], "nn.functional.softmax": [[93, null]], "nn.functional.tanh": [[94, null]], "nn.functional.unfold": [[99, null]], "nn.init.constant": [[139, null]], "nn.init.kaiming_normal": [[141, null]], "nn.init.kaiming_uniform": [[142, null]], "nn.init.normal": [[143, null]], "nn.init.uniform": [[144, null]], "nn.init.xavier_normal": [[145, null]], "nn.init.xavier_uniform": [[146, null]], "optim.ASGD": [[198, null]], "optim.Adadelta": [[199, null]], "optim.Adagrad": [[200, null]], "optim.Adam": [[201, null]], "optim.AdamW": [[202, null]], "optim.Adamax": [[203, null]], "optim.NAdam": [[204, null]], "optim.Optimizer": [[196, null]], "optim.RAdam": [[205, null]], "optim.RMSprop": [[206, null]], "optim.Rprop": [[207, null]], "optim.SGD": [[208, null]], "resnet_1001": [[36, null]], "resnet_101": [[37, null]], "resnet_152": [[38, null]], "resnet_18": [[39, null]], "resnet_200": [[40, null]], "resnet_269": [[41, null]], "resnet_34": [[42, null]], "resnet_50": [[43, null]], "resnext_101_32x16d": [[47, null]], "resnext_101_32x32d": [[48, null]], "resnext_101_32x4d": [[49, null]], "resnext_101_32x8d": [[50, null]], "resnext_101_64x4d": [[51, null]], "resnext_50_32x4d": [[52, null]], "se_resnet_101": [[54, null]], "se_resnet_152": [[55, null]], "se_resnet_18": [[56, null]], "se_resnet_34": [[57, null]], "se_resnet_50": [[58, null]], "se_resnext_101_32x4d": [[59, null]], "se_resnext_101_32x8d": [[60, null]], "se_resnext_101_64x4d": [[61, null]], "se_resnext_50_32x4d": [[62, null]], "sk_resnet_18": [[64, null]], "sk_resnet_34": [[65, null]], "sk_resnet_50": [[66, null]], "sk_resnext_50_32x4d": [[67, null]], "transforms.CenterCrop": [[286, null]], "transforms.Compose": [[284, null]], "transforms.Normalize": [[287, null]], "transforms.RandomCrop": [[288, null]], "transforms.RandomGrayscale": [[289, null]], "transforms.RandomHorizontalFlip": [[290, null]], "transforms.RandomRotation": [[291, null]], "transforms.RandomVerticalFlip": [[292, null]], "transforms.Resize": [[293, null]], "transforms.ToTensor": [[285, null]], "vggnet_11": [[69, null]], "vggnet_13": [[70, null]], "vggnet_16": [[71, null]], "vggnet_19": [[72, null]], "wide_resnet_101": [[44, null]], "wide_resnet_50": [[45, null]], "zfnet": [[74, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[244, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[199, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[200, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[201, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[203, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[202, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[122, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[185, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[186, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[187, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[223, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[160, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[234, "lucid.arange", false]], "arccos() (in module lucid)": [[245, "lucid.arccos", false]], "arcsin() (in module lucid)": [[246, "lucid.arcsin", false]], "arctan() (in module lucid)": [[247, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[198, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[188, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[189, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[190, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[177, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[178, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[179, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[171, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[167, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[77, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[286, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[248, "lucid.clip", false]], "compose (class in lucid.transforms)": [[284, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[270, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[139, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[156, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[157, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[158, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[133, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[134, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[135, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[249, "lucid.cos", false]], "cosh() (in module lucid)": [[250, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[172, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[251, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[235, "lucid.diag", false]], "div() (in module lucid)": [[224, "lucid.div", false]], "dot() (in module lucid)": [[225, "lucid.dot", false]], "dropout (class in lucid.nn)": [[161, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[162, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[163, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[164, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[147, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[236, "lucid.empty", false]], "empty_like() (in module lucid)": [[237, "lucid.empty_like", false]], "exp() (in module lucid)": [[252, "lucid.exp", false]], "eye() (in module lucid)": [[238, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[271, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[148, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[210, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[272, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[173, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[168, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[23, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[29, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[24, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[25, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[26, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[27, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[226, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[180, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[181, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[182, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[141, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[142, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[183, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[149, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[31, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[32, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[33, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[34, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[169, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[253, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[227, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[254, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[228, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[191, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[192, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[193, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[255, "lucid.mean", false]], "meshgrid() (in module lucid)": [[274, "lucid.meshgrid", false]], "min() (in module lucid)": [[256, "lucid.min", false]], "minimum() (in module lucid)": [[229, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[78, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[80, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[81, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[174, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[230, "lucid.mul", false]], "nadam (class in lucid.optim)": [[204, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[175, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[212, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[143, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[287, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[239, "lucid.ones", false]], "ones_like() (in module lucid)": [[240, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[196, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[231, "lucid.outer", false]], "pad() (in module lucid)": [[275, "lucid.pad", false]], "parameter (class in lucid.nn)": [[79, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[82, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[83, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[232, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[205, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[216, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[217, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[218, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[288, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[289, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[290, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[291, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[292, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[276, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[257, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[213, "lucid.register_model", false]], "relu (class in lucid.nn)": [[150, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[277, "lucid.repeat", false]], "reshape() (in module lucid)": [[278, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[293, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[35, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[36, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[37, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[38, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[39, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[40, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[41, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[42, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[43, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[46, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[47, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[48, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[49, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[50, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[51, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[52, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[206, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[207, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[54, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[55, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[56, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[57, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[58, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[59, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[60, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[61, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[62, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[219, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[137, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[151, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[136, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[53, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[84, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[208, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[152, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[258, "lucid.sign", false]], "sin() (in module lucid)": [[259, "lucid.sin", false]], "sinh() (in module lucid)": [[260, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[64, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[65, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[66, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[67, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[63, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[153, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[261, "lucid.sqrt", false]], "square() (in module lucid)": [[262, "lucid.square", false]], "squeeze() (in module lucid)": [[279, "lucid.squeeze", false]], "stack() (in module lucid)": [[280, "lucid.stack", false]], "sub() (in module lucid)": [[233, "lucid.sub", false]], "sum() (in module lucid)": [[263, "lucid.sum", false]], "summarize() (in module lucid.models)": [[76, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[264, "lucid.tan", false]], "tanh (class in lucid.nn)": [[154, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[265, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[222, "lucid.Tensor", false]], "tensor() (in module lucid)": [[269, "lucid.tensor", false]], "tile() (in module lucid)": [[281, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[285, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[266, "lucid.trace", false]], "transpose() (in module lucid)": [[267, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[144, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[220, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[282, "lucid.unsqueeze", false]], "var() (in module lucid)": [[268, "lucid.var", false]], "vggnet (class in lucid.models)": [[68, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[69, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[70, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[71, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[72, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[283, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[44, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[45, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[145, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[146, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[241, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[242, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[73, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[74, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[222, 1, 1, "", "Tensor"], [244, 2, 1, "", "abs"], [223, 2, 1, "", "add"], [234, 2, 1, "", "arange"], [245, 2, 1, "", "arccos"], [246, 2, 1, "", "arcsin"], [247, 2, 1, "", "arctan"], [248, 2, 1, "", "clip"], [270, 2, 1, "", "concatenate"], [249, 2, 1, "", "cos"], [250, 2, 1, "", "cosh"], [251, 2, 1, "", "cube"], [235, 2, 1, "", "diag"], [224, 2, 1, "", "div"], [225, 2, 1, "", "dot"], [236, 2, 1, "", "empty"], [237, 2, 1, "", "empty_like"], [252, 2, 1, "", "exp"], [238, 2, 1, "", "eye"], [271, 2, 1, "", "flatten"], [210, 2, 1, "", "grad_enabled"], [272, 2, 1, "", "hstack"], [226, 2, 1, "", "inner"], [253, 2, 1, "", "log"], [227, 2, 1, "", "matmul"], [254, 2, 1, "", "max"], [228, 2, 1, "", "maximum"], [255, 2, 1, "", "mean"], [274, 2, 1, "", "meshgrid"], [256, 2, 1, "", "min"], [229, 2, 1, "", "minimum"], [230, 2, 1, "", "mul"], [212, 2, 1, "", "no_grad"], [239, 2, 1, "", "ones"], [240, 2, 1, "", "ones_like"], [231, 2, 1, "", "outer"], [275, 2, 1, "", "pad"], [232, 2, 1, "", "power"], [276, 2, 1, "", "ravel"], [257, 2, 1, "", "reciprocal"], [213, 2, 1, "", "register_model"], [277, 2, 1, "", "repeat"], [278, 2, 1, "", "reshape"], [258, 2, 1, "", "sign"], [259, 2, 1, "", "sin"], [260, 2, 1, "", "sinh"], [261, 2, 1, "", "sqrt"], [262, 2, 1, "", "square"], [279, 2, 1, "", "squeeze"], [280, 2, 1, "", "stack"], [233, 2, 1, "", "sub"], [263, 2, 1, "", "sum"], [264, 2, 1, "", "tan"], [265, 2, 1, "", "tanh"], [269, 2, 1, "", "tensor"], [281, 2, 1, "", "tile"], [266, 2, 1, "", "trace"], [267, 2, 1, "", "transpose"], [282, 2, 1, "", "unsqueeze"], [268, 2, 1, "", "var"], [283, 2, 1, "", "vstack"], [241, 2, 1, "", "zeros"], [242, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "Inception"], [27, 1, 1, "", "InceptionResNet"], [31, 1, 1, "", "LeNet"], [46, 1, 1, "", "ResNeXt"], [35, 1, 1, "", "ResNet"], [53, 1, 1, "", "SENet"], [63, 1, 1, "", "SKNet"], [68, 1, 1, "", "VGGNet"], [73, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [28, 2, 1, "", "inception_resnet_v1"], [29, 2, 1, "", "inception_resnet_v2"], [24, 2, 1, "", "inception_v1"], [25, 2, 1, "", "inception_v3"], [26, 2, 1, "", "inception_v4"], [32, 2, 1, "", "lenet_1"], [33, 2, 1, "", "lenet_4"], [34, 2, 1, "", "lenet_5"], [36, 2, 1, "", "resnet_1001"], [37, 2, 1, "", "resnet_101"], [38, 2, 1, "", "resnet_152"], [39, 2, 1, "", "resnet_18"], [40, 2, 1, "", "resnet_200"], [41, 2, 1, "", "resnet_269"], [42, 2, 1, "", "resnet_34"], [43, 2, 1, "", "resnet_50"], [47, 2, 1, "", "resnext_101_32x16d"], [48, 2, 1, "", "resnext_101_32x32d"], [49, 2, 1, "", "resnext_101_32x4d"], [50, 2, 1, "", "resnext_101_32x8d"], [51, 2, 1, "", "resnext_101_64x4d"], [52, 2, 1, "", "resnext_50_32x4d"], [54, 2, 1, "", "se_resnet_101"], [55, 2, 1, "", "se_resnet_152"], [56, 2, 1, "", "se_resnet_18"], [57, 2, 1, "", "se_resnet_34"], [58, 2, 1, "", "se_resnet_50"], [59, 2, 1, "", "se_resnext_101_32x4d"], [60, 2, 1, "", "se_resnext_101_32x8d"], [61, 2, 1, "", "se_resnext_101_64x4d"], [62, 2, 1, "", "se_resnext_50_32x4d"], [64, 2, 1, "", "sk_resnet_18"], [65, 2, 1, "", "sk_resnet_34"], [66, 2, 1, "", "sk_resnet_50"], [67, 2, 1, "", "sk_resnext_50_32x4d"], [76, 2, 1, "", "summarize"], [69, 2, 1, "", "vggnet_11"], [70, 2, 1, "", "vggnet_13"], [71, 2, 1, "", "vggnet_16"], [72, 2, 1, "", "vggnet_19"], [44, 2, 1, "", "wide_resnet_101"], [45, 2, 1, "", "wide_resnet_50"], [74, 2, 1, "", "zfnet"]], "lucid.nn": [[185, 1, 1, "", "AdaptiveAvgPool1d"], [186, 1, 1, "", "AdaptiveAvgPool2d"], [187, 1, 1, "", "AdaptiveAvgPool3d"], [160, 1, 1, "", "AlphaDropout"], [188, 1, 1, "", "AvgPool1d"], [189, 1, 1, "", "AvgPool2d"], [190, 1, 1, "", "AvgPool3d"], [171, 1, 1, "", "BCELoss"], [177, 1, 1, "", "BatchNorm1d"], [178, 1, 1, "", "BatchNorm2d"], [179, 1, 1, "", "BatchNorm3d"], [167, 1, 1, "", "Bilinear"], [77, 1, 1, "", "Buffer"], [156, 1, 1, "", "Conv1d"], [157, 1, 1, "", "Conv2d"], [158, 1, 1, "", "Conv3d"], [133, 1, 1, "", "ConvBNReLU1d"], [134, 1, 1, "", "ConvBNReLU2d"], [135, 1, 1, "", "ConvBNReLU3d"], [172, 1, 1, "", "CrossEntropyLoss"], [161, 1, 1, "", "Dropout"], [162, 1, 1, "", "Dropout1d"], [163, 1, 1, "", "Dropout2d"], [164, 1, 1, "", "Dropout3d"], [147, 1, 1, "", "ELU"], [148, 1, 1, "", "GELU"], [173, 1, 1, "", "HuberLoss"], [168, 1, 1, "", "Identity"], [180, 1, 1, "", "InstanceNorm1d"], [181, 1, 1, "", "InstanceNorm2d"], [182, 1, 1, "", "InstanceNorm3d"], [183, 1, 1, "", "LayerNorm"], [149, 1, 1, "", "LeakyReLU"], [169, 1, 1, "", "Linear"], [174, 1, 1, "", "MSELoss"], [191, 1, 1, "", "MaxPool1d"], [192, 1, 1, "", "MaxPool2d"], [193, 1, 1, "", "MaxPool3d"], [78, 1, 1, "", "Module"], [80, 1, 1, "", "ModuleDict"], [81, 1, 1, "", "ModuleList"], [175, 1, 1, "", "NLLLoss"], [79, 1, 1, "", "Parameter"], [82, 1, 1, "", "ParameterDict"], [83, 1, 1, "", "ParameterList"], [150, 1, 1, "", "ReLU"], [151, 1, 1, "", "SELU"], [136, 1, 1, "", "SEModule"], [137, 1, 1, "", "SelectiveKernel"], [84, 1, 1, "", "Sequential"], [152, 1, 1, "", "Sigmoid"], [153, 1, 1, "", "Softmax"], [154, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[120, 2, 1, "", "adaptive_avg_pool1d"], [121, 2, 1, "", "adaptive_avg_pool2d"], [122, 2, 1, "", "adaptive_avg_pool3d"], [100, 2, 1, "", "alpha_dropout"], [123, 2, 1, "", "avg_pool1d"], [124, 2, 1, "", "avg_pool2d"], [125, 2, 1, "", "avg_pool3d"], [116, 2, 1, "", "batch_norm"], [107, 2, 1, "", "bilinear"], [110, 2, 1, "", "binary_cross_entropy"], [95, 2, 1, "", "conv1d"], [96, 2, 1, "", "conv2d"], [97, 2, 1, "", "conv3d"], [111, 2, 1, "", "cross_entropy"], [101, 2, 1, "", "dropout"], [102, 2, 1, "", "dropout1d"], [103, 2, 1, "", "dropout2d"], [104, 2, 1, "", "dropout3d"], [86, 2, 1, "", "elu"], [87, 2, 1, "", "gelu"], [112, 2, 1, "", "huber_loss"], [118, 2, 1, "", "instance_norm"], [131, 2, 1, "", "interpolate"], [119, 2, 1, "", "layer_norm"], [89, 2, 1, "", "leaky_relu"], [109, 2, 1, "", "linear"], [127, 2, 1, "", "max_pool1d"], [128, 2, 1, "", "max_pool2d"], [129, 2, 1, "", "max_pool3d"], [114, 2, 1, "", "mse_loss"], [115, 2, 1, "", "nll_loss"], [90, 2, 1, "", "relu"], [132, 2, 1, "", "rotate"], [91, 2, 1, "", "selu"], [92, 2, 1, "", "sigmoid"], [93, 2, 1, "", "softmax"], [94, 2, 1, "", "tanh"], [99, 2, 1, "", "unfold"]], "lucid.nn.init": [[139, 2, 1, "", "constant"], [141, 2, 1, "", "kaiming_normal"], [142, 2, 1, "", "kaiming_uniform"], [143, 2, 1, "", "normal"], [144, 2, 1, "", "uniform"], [145, 2, 1, "", "xavier_normal"], [146, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[198, 1, 1, "", "ASGD"], [199, 1, 1, "", "Adadelta"], [200, 1, 1, "", "Adagrad"], [201, 1, 1, "", "Adam"], [202, 1, 1, "", "AdamW"], [203, 1, 1, "", "Adamax"], [204, 1, 1, "", "NAdam"], [196, 1, 1, "", "Optimizer"], [205, 1, 1, "", "RAdam"], [206, 1, 1, "", "RMSprop"], [207, 1, 1, "", "Rprop"], [208, 1, 1, "", "SGD"]], "lucid.random": [[216, 2, 1, "", "rand"], [217, 2, 1, "", "randint"], [218, 2, 1, "", "randn"], [219, 2, 1, "", "seed"], [220, 2, 1, "", "uniform"]], "lucid.transforms": [[286, 1, 1, "", "CenterCrop"], [284, 1, 1, "", "Compose"], [287, 1, 1, "", "Normalize"], [288, 1, 1, "", "RandomCrop"], [289, 1, 1, "", "RandomGrayscale"], [290, 1, 1, "", "RandomHorizontalFlip"], [291, 1, 1, "", "RandomRotation"], [292, 1, 1, "", "RandomVerticalFlip"], [293, 1, 1, "", "Resize"], [285, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 75, 76, 77, 78, 79, 80, 82, 83, 84, 120, 121, 122, 137, 172, 175, 185, 186, 187, 188, 191, 192, 195, 196, 197, 211, 213, 227, 235, 253, 255, 263, 266, 268, 269, 279, 285, 287, 295], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 53, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 277, 279, 280, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295], "000": [5, 6, 236, 237], "0000": [172, 173, 175], "0001": 198, "000e": [236, 237], "001": [198, 201, 202, 204, 205, 208], "002": [203, 204], "004": 204, "005": 149, "01": [89, 149, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208], "01051757": 218, "016": [36, 75], "0205": 172, "0217": 172, "0227": 172, "024": [58, 75], "026": [47, 75], "028": [52, 75], "0299": 172, "032": [43, 75], "044715": [87, 148], "0450": 172, "0451": 172, "047": [70, 75], "04719755": 245, "0474259": 92, "048": [60, 75], "0480": 172, "05": [116, 118, 119, 133, 134, 135, 149, 177, 178, 179, 180, 181, 182, 183], "0507": [91, 151], "06": [199, 207], "069": [41, 75], "07": [110, 111, 171, 172], "0700": 172, "0706508": 154, "071": [36, 75], "0721": 172, "073": [66, 75], "0794": 175, "08": [201, 202, 203, 204, 205, 206], "0802": 175, "08333333": 17, "085537": 252, "088": [58, 75], "0900": [153, 172], "0986": [93, 153], "09861229": 253, "0992": 172, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 33, 34, 53, 59, 60, 61, 62, 63, 67, 68, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "10": [0, 1, 2, 3, 5, 21, 22, 31, 32, 33, 34, 68, 73, 74, 75, 76, 80, 81, 84, 96, 97, 107, 109, 120, 156, 157, 158, 163, 164, 167, 169, 178, 179, 181, 185, 189, 190, 192, 200, 213, 217, 220, 221, 224, 227, 230, 231, 247, 263, 286, 288, 289, 291], "100": [22, 69, 70, 71, 72, 75, 213, 295], "1000": [21, 22, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "1000000": 198, "1001": [36, 75, 172], "1003": 172, "1007": 75, "101": [37, 44, 47, 48, 49, 50, 51, 54, 59, 60, 61, 75], "1014": 91, "102": [41, 75], "1025": [81, 84], "1026": [81, 84], "1027": [81, 84], "10499": 92, "1050": 152, "1054": 175, "1056": [81, 84], "10590": 75, "1097": 75, "11": [39, 56, 68, 69, 75, 107, 156, 157, 158, 163, 167, 178, 179, 181, 189, 190, 192, 227, 286, 287, 288, 289, 291], "1105": 75, "1109": 75, "1111": 171, "1134": 107, "114b": 289, "119": 107, "1192": [92, 93, 153], "12": [32, 33, 82, 107, 122, 156, 157, 158, 163, 164, 167, 178, 179, 181, 187, 189, 190, 192, 227, 231, 232, 286, 288, 289, 291], "120": [31, 34], "123": [141, 142, 143, 144, 145, 146, 219, 220], "124": [141, 142, 145, 146], "125": 190, "1250": 173, "126": [44, 75], "128": [28, 35, 44, 45, 68, 75, 84, 137, 284, 295], "128x128": [284, 295], "13": [24, 68, 70, 75, 107, 156, 157, 158, 167, 179, 189, 190, 192, 227, 286, 288, 289, 291], "132": [69, 75], "133": [70, 75], "138": [71, 75], "14": [156, 157, 158, 163, 164, 167, 179, 189, 190, 192, 214, 227, 231, 286, 288, 289, 291], "1409": 75, "143": [72, 75], "145": 107, "149": [36, 75], "15": [0, 107, 156, 157, 158, 167, 179, 189, 190, 192, 227, 231, 266, 286, 288, 289, 291, 295], "1513": 175, "152": [38, 55, 75], "155": 227, "1556": 75, "1588": [87, 148], "16": [31, 34, 47, 53, 68, 71, 75, 81, 82, 84, 121, 122, 133, 134, 135, 136, 137, 156, 157, 158, 163, 164, 167, 178, 179, 186, 187, 189, 190, 192, 195, 227, 231, 261, 286, 288, 289, 291], "160": [37, 75], "16227766": 18, "16425": 175, "1643": 171, "166": 227, "17": [156, 157, 158, 167, 179, 190, 226, 286, 288, 289, 291], "170": 107, "17520119": 260, "177": [49, 75], "18": [33, 39, 56, 64, 75, 156, 157, 158, 163, 167, 179, 190, 230, 231, 286, 288, 289, 291], "1800": 172, "19": [68, 72, 75, 96, 97, 107, 157, 158, 179, 225, 227], "192": [32, 33, 38, 75], "194": [47, 75], "1966": [93, 152, 153], "1998": [75, 172], "1_53": 75, "1d": [95, 120, 123, 127, 133, 177, 180, 185, 220, 227, 235, 266, 274, 275, 276, 277, 281], "1e": [110, 111, 116, 118, 119, 133, 134, 135, 171, 172, 177, 178, 179, 180, 181, 182, 183, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "1e6": 198, "1st": [21, 73], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 34, 39, 56, 64, 73, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "20": [0, 5, 6, 80, 81, 84, 157, 158, 163, 179, 231, 252], "200": [40, 75], "2011": 136, "2012": 75, "2014": 75, "2015": 75, "2016": 75, "2017": 75, "2018": [75, 136], "2019": 75, "2023": 136, "2039": 175, "204": 158, "21": [42, 57, 75, 82, 107, 157, 158, 179, 231], "211": 227, "22": [28, 75, 107, 157, 158, 163, 179, 225, 227], "2231": [172, 175], "224": [21, 35, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 75], "2247": [177, 178, 179, 180, 181, 182, 183], "224x224": [24, 59, 60, 61, 62, 67], "226": 227, "22752314": 218, "2278": 75, "23": [37, 44, 47, 48, 49, 50, 51, 54, 157, 158, 179], "232": [61, 75], "2324": [75, 151], "234": [141, 142, 143, 144, 145, 146, 220], "24": [40, 107, 121, 157, 158, 163, 179, 186, 231], "240": [72, 75], "2424": [93, 153], "2447": 153, "246": [32, 75], "25": [0, 43, 52, 64, 75, 92, 152, 158, 174, 179, 189, 190, 224, 257, 268], "2500": [171, 173, 175], "2512": 147, "2547": 151, "256": [35, 68], "26": [82, 109, 158, 169, 179, 231], "26325684": 218, "2689": [93, 152, 153], "269": [41, 75], "27": [62, 75, 107, 156, 158, 179, 251], "272": [51, 75], "274": [67, 75], "276": [141, 142, 145, 146], "28": [32, 33, 58, 75, 107, 158, 231], "28x28": [5, 6, 32, 33], "29": [67, 75, 158], "299": 75, "299r": 289, "299x299": [25, 26, 28, 29], "2_i": [180, 181, 182], "2d": [96, 103, 121, 124, 128, 134, 178, 181, 186, 227, 235, 238, 266, 271, 274, 275, 277, 281, 291], "2e": 203, "2nd": [21, 73], "2x2": [99, 286, 288], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 78, 79, 81, 82, 83, 84, 87, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293], "30": [25, 41, 75, 81, 132, 158, 291], "3026": 175, "31": [107, 158, 227], "310": [236, 237], "31622777": 18, "319": 75, "32": [34, 47, 48, 49, 50, 52, 75, 81, 84, 107, 109, 121, 133, 134, 135, 136, 137, 157, 158, 169, 186, 195, 225, 226, 231], "321": [141, 142, 145, 146], "326": [54, 75], "32x16d": 75, "32x32": [31, 34], "32x32d": 75, "32x4d": [59, 62, 67, 75], "32x8d": [60, 75], "33": [81, 84, 109, 158, 169], "33333333": 17, "336": [50, 69, 75], "34": [42, 57, 65, 75, 81, 84, 107, 158, 227, 231], "342": [141, 142, 145, 146], "345": [141, 142, 143, 144, 145, 146, 220], "35": [29, 75, 81, 84, 158], "352": [24, 75], "3567": [171, 175], "357": [71, 74, 75], "36": [38, 40, 55, 158], "3679": [86, 91, 147], "368": [64, 66, 75], "37": 156, "372": 107, "375": 174, "3750": 173, "378": [33, 75], "38344152": 216, "38629436": 253, "389056": 252, "392": [25, 75], "393": [24, 75], "3935": 147, "3d": [97, 104, 122, 125, 129, 135, 158, 179, 182, 187], "3x3": [75, 221], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 57, 58, 65, 66, 75, 76, 82, 84, 95, 96, 97, 99, 102, 103, 104, 107, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 201, 205, 206, 208, 211, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242, 248, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293], "40": [26, 75], "400": 34, "4044": 171, "4076": 172, "4096": [21, 73], "41421356": 10, "416": [41, 59, 75], "41666667": 17, "41808962": 218, "419974": 94, "4199743": 154, "42": [107, 136, 214, 221], "421": [141, 142, 145, 146], "423": [141, 142, 143, 144], "42718872": 18, "4278": 75, "4284": 75, "4286": 171, "43": [225, 227], "4323": 147, "4375": 173, "43758721": 216, "44": [37, 49, 75], "4472136": 12, "4495": [179, 182], "45": [65, 75, 107, 132, 291], "4545": 160, "455": [51, 75], "468": [48, 75], "47112767": 247, "472": [48, 75], "48": [41, 59, 75, 109, 169], "49": [54, 75], "4979": 147, "4x4": 293, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 25, 31, 32, 33, 34, 63, 64, 65, 66, 73, 75, 76, 78, 79, 80, 81, 82, 84, 87, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 112, 114, 116, 118, 119, 120, 123, 124, 131, 133, 134, 135, 137, 139, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 192, 193, 207, 211, 214, 217, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246, 254, 255, 256, 257, 258, 263, 266, 267, 268, 269, 272, 274, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "50": [35, 43, 45, 52, 58, 62, 66, 67, 75, 109, 169, 207, 225, 227, 289, 290, 292, 295], "5000": [171, 173, 175], "510": 75, "5108": 175, "512": [29, 35, 39, 65, 75], "519": 75, "52359878": 246, "53": [107, 226], "530": [48, 75], "543": [141, 142, 143, 144, 145, 146, 220], "54308063": 250, "544": [71, 75], "545": 232, "5455": 160, "549": [37, 75], "557": [43, 75], "559": [62, 75], "563": [141, 142, 145, 146], "569": [60, 75], "57": [66, 75, 107], "57079633": [245, 246], "57366333": 219, "586": [26, 75], "587g": 289, "592": [56, 75], "5987": 75, "5995": 75, "5th": [21, 73], "6": [9, 17, 21, 31, 34, 35, 42, 43, 45, 52, 57, 58, 65, 66, 73, 82, 83, 95, 96, 97, 99, 104, 107, 109, 120, 142, 146, 156, 157, 158, 161, 162, 163, 164, 167, 169, 171, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 192, 193, 199, 207, 211, 214, 220, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 254, 255, 256, 263, 266, 267, 268, 269, 272, 277, 278, 283, 285, 286, 287, 288, 289, 291, 293], "60": [38, 75], "6052": 175, "6065": 147, "608": [74, 75], "61": [22, 34, 75], "6124": [177, 178, 179, 180, 181, 182, 183], "62": [74, 75, 107], "62686041": 260, "630": 75, "6321": [86, 147], "63245553": 18, "64": [35, 40, 51, 63, 68, 75, 81, 84, 107, 136, 137], "645": 75, "64589411": 216, "647": [64, 75], "64x4d": [61, 75], "654": [141, 142, 143, 144, 145, 146, 220], "657": [141, 142, 145, 146], "6590": [93, 153], "66": [55, 75], "6652": 153, "66666667": 17, "6667": 171, "667": [72, 75], "6682": 171, "669": [40, 75], "67": 227, "672": [42, 75], "67326": 151, "6733": 91, "678": [141, 142, 143, 144, 145, 146], "68811989": 218, "689": [39, 75], "69314718": 253, "696": [44, 75], "7": [16, 68, 82, 95, 96, 97, 99, 104, 107, 109, 110, 111, 120, 137, 148, 151, 152, 154, 156, 157, 158, 163, 164, 167, 169, 171, 172, 174, 178, 179, 181, 182, 185, 189, 190, 192, 193, 214, 217, 220, 223, 225, 226, 227, 231, 233, 235, 252, 255, 263, 266, 267, 268, 281, 285, 286, 287, 288, 289, 291, 293], "70": [5, 6], "7001": 172, "704": [49, 75], "706": [34, 75], "70710678": [12, 259], "7132": 75, "7141": 75, "7147": 175, "7182818": 252, "726791": 75, "7311": [93, 152, 153], "739": [28, 75], "74": 227, "75": [109, 169, 174, 198], "7581": 91, "760": [67, 75], "76159416": 265, "7616": [94, 154], "76219569": 250, "7635": 151, "770": 75, "772": 232, "778": [56, 75], "78": [45, 75], "78357324": 218, "78539816": 247, "791": [50, 75], "79172504": 216, "792": [47, 75], "797": [42, 75], "7x7": 73, "8": [15, 19, 35, 38, 41, 47, 48, 49, 50, 51, 52, 55, 64, 65, 66, 76, 81, 82, 84, 95, 96, 97, 99, 104, 107, 109, 110, 120, 121, 122, 133, 134, 135, 136, 148, 151, 152, 154, 156, 157, 158, 161, 162, 163, 164, 167, 169, 171, 174, 178, 179, 181, 182, 185, 186, 187, 189, 190, 192, 193, 201, 202, 203, 204, 205, 206, 214, 217, 224, 225, 226, 227, 231, 232, 234, 235, 251, 255, 263, 266, 267, 268, 285, 286, 287, 288, 289, 291, 293], "80": [5, 6], "8005": 172, "808": [38, 75], "817": [25, 75], "818": 75, "8182": 160, "82": 107, "821": [55, 75], "83": [51, 75], "833": 75, "84": [31, 33, 34], "840": [22, 75], "8413": [87, 148], "847": [29, 75], "848": [55, 70, 75], "8584": 151, "86": 75, "863": [69, 75], "864": [40, 75], "868": [57, 75], "872": [54, 75], "876": [141, 142, 145, 146, 220], "88": [50, 61, 75], "8808": [93, 152, 153], "886": [44, 75], "887": 232, "891773": 216, "89442719": 12, "895": [65, 75], "896": [62, 75], "9": [0, 1, 3, 6, 19, 75, 96, 99, 107, 109, 120, 156, 157, 158, 163, 167, 169, 171, 178, 179, 181, 185, 189, 190, 192, 198, 199, 201, 202, 203, 204, 205, 206, 208, 214, 217, 220, 223, 227, 231, 232, 233, 235, 261, 262, 285, 286, 287, 288, 289, 291], "904": [52, 75], "90709145": 219, "9091": 160, "9120": 175, "9163": 175, "93": [60, 75], "94": 36, "9486833": 18, "949e": [236, 237], "9526": 92, "9545": 148, "955": [59, 75], "958": [57, 75], "96366276": 216, "9640": 154, "96402758": 265, "973": [45, 75], "978": 75, "984": [26, 61, 75], "99": 206, "9957": 175, "99734545": 219, "999": [0, 201, 202, 203, 204, 205], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 107, 109, 110, 111, 115, 116, 118, 119, 131, 137, 160, 161, 162, 163, 164, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291], "As": 219, "Be": 0, "By": [0, 2, 3, 8, 36, 37, 38, 39, 40, 41, 42, 43, 79, 132, 195, 205, 211, 216, 217, 218, 220, 285, 295], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 84, 86, 87, 89, 90, 91, 92, 94, 107, 109, 131, 141, 142, 145, 146, 151, 156, 157, 158, 167, 169, 177, 178, 179, 180, 181, 182, 195, 197, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 252, 253, 254, 255, 256, 259, 261, 263, 266, 267, 268, 275, 277, 279, 281, 282, 295], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 76, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 104, 107, 109, 116, 118, 121, 122, 131, 132, 133, 134, 135, 137, 141, 142, 156, 157, 158, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 196, 201, 202, 206, 207, 213, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 292, 293], "In": [3, 8, 17, 95, 96, 97, 172, 175, 210, 211, 212, 284, 295], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 68, 75, 78, 80, 81, 82, 83, 84, 104, 107, 131, 132, 133, 134, 135, 136, 148, 150, 154, 167, 168, 171, 172, 173, 174, 175, 185, 186, 187, 195, 196, 197, 198, 204, 206, 207, 208, 211, 219, 223, 224, 225, 228, 229, 230, 232, 233, 254, 256, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285], "Its": [19, 221], "Near": 17, "No": 99, "Not": 168, "One": [32, 295], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "There": 278, "These": [4, 8, 9, 12, 15, 18, 20, 44, 45, 64, 65, 66, 75, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 207, 214, 221, 295], "To": [3, 75, 197, 218, 221, 236, 237, 274, 295], "With": [3, 99, 285, 295], "_": [15, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 94, 109, 131, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 206, 208, 225, 226, 227, 231, 266, 267, 286, 287, 288, 290, 291, 292], "_1": [12, 80, 81, 82, 83, 84, 107, 167, 231, 270, 272, 283], "_2": [12, 80, 81, 82, 83, 84, 107, 167, 231, 270, 272, 283], "__call__": [1, 78], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 23, 27, 31, 68, 73, 76, 77, 78, 79, 80, 81, 82, 83, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 222, 284, 285], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 196, "__setattr__": 78, "_activ": 93, "_arraylik": [214, 235, 237, 240, 242], "_arraylikeint": 275, "_arrayorscalar": [77, 79, 214, 222, 269], "_base_activ": 31, "_base_dtyp": [234, 236, 239, 241], "_c": 287, "_decai": 204, "_fanmod": [141, 142], "_grad_en": [210, 212], "_i": [12, 16, 93, 107, 153, 174, 177, 183, 188, 191, 225, 226, 228, 229, 231, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 277, 279, 282, 283], "_in": [141, 142, 145, 146], "_j": [93, 153, 188, 191, 231, 255, 263, 267, 268], "_k": 280, "_left": 131, "_make_lay": 68, "_modul": 78, "_n": [12, 80, 81, 82, 83, 84, 270, 272, 283], "_numpyarrai": 214, "_out": [141, 142, 145, 146, 277, 281], "_p": 16, "_pad": 275, "_paddingstr": [133, 134, 135, 156, 157, 158], "_paramet": 78, "_reductiontyp": [110, 111, 112, 114, 115, 171, 172, 173, 174, 175], "_right": 131, "_scalar": [139, 143, 144, 145, 146, 214, 234, 248], "_seresnetbottleneck": [54, 55, 58], "_seresnetmodul": [56, 57], "_shapelik": [76, 119, 183, 214, 217, 239, 241, 278, 279, 282], "_size": [120, 121, 122], "_skresnetmodul": [64, 65, 66], "_slope": 149, "_statedict": 196, "_t": [205, 206], "_tensor": [77, 79, 235, 269], "_tensorop": 222, "_u": 17, "_v": 17, "_valu": [248, 275], "_width": 275, "a_i": [228, 229, 232], "aaai": 75, "ab": 243, "abc": [2, 196], "abil": [8, 75, 295], "about": [8, 76], "abov": [8, 210, 212, 219, 235, 238], "absolut": [15, 16, 112, 203, 244], "abstract": [2, 3, 195, 196, 197, 198, 206, 208], "abstractmethod": 196, "acceler": [75, 151, 177, 178, 179, 198, 204, 206, 208], "accept": [168, 216, 222], "access": [0, 2, 3, 4, 5, 6, 47, 48, 49, 50, 51, 52, 77, 79, 80, 81, 82, 83, 84, 278], "accord": [131, 156, 157, 158, 167, 169, 172, 175, 199, 200, 201, 202, 203, 204, 205, 267], "accordingli": 11, "account": [15, 17, 18], "accumul": [198, 199, 200, 223, 224, 228, 229, 230, 233], "accur": 55, "accuraci": [58, 75], "achiev": [46, 47, 48, 49, 50, 51, 52, 75, 95, 96, 97, 120, 185, 186, 187, 204, 290, 292], "across": [0, 77, 81, 84, 119, 120, 121, 122, 145, 146, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 214, 216, 217, 218, 219, 220, 221, 236, 237, 255, 268], "act": 202, "activ": [8, 21, 31, 36, 40, 41, 53, 68, 73, 75, 80, 84, 86, 87, 89, 90, 91, 92, 93, 94, 100, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 171, 172, 175, 177, 178, 179, 183, 254, 256], "actual": [79, 171, 172, 174, 175, 222, 288], "ad": [35, 78, 80, 81, 82, 83, 84, 95, 96, 97, 107, 109, 110, 111, 116, 118, 119, 123, 124, 125, 127, 128, 129, 133, 134, 135, 156, 157, 158, 171, 172, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 205, 206, 213, 282, 295], "adadelta": 209, "adagrad": [199, 209], "adam": [202, 203, 204, 205, 209], "adamax": 209, "adamw": 209, "adapt": [21, 23, 31, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 120, 121, 122, 136, 137, 185, 186, 187, 199, 200, 201, 204, 205, 206, 207], "adaptive_avg_pool1d": [106, 126, 185], "adaptive_avg_pool2d": [106, 126, 186], "adaptive_avg_pool3d": [106, 126, 187], "adaptiveavgpool1d": [166, 194], "adaptiveavgpool2d": [21, 53, 68, 73, 166, 194], "adaptiveavgpool3d": [166, 194], "add": [4, 78, 80, 81, 84, 107, 109, 156, 157, 158, 167, 169, 183, 196, 198, 201, 206, 208, 211, 243, 275, 282], "add_modul": [78, 84], "add_param_group": 196, "addit": [4, 8, 15, 22, 23, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 78, 81, 84, 107, 109, 116, 118, 167, 169, 177, 178, 179, 180, 181, 182, 198, 204, 211, 221, 223, 280], "addition": 204, "address": [172, 175, 201, 202, 205], "adjust": [28, 59, 60, 61, 62, 63, 67, 120, 121, 122, 137, 160, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 197, 201, 205, 206, 207, 272, 283], "advanc": [3, 17, 40, 75, 81, 84, 95, 96, 97, 120, 121, 122, 185, 186, 187, 195, 198], "advantag": [29, 212], "affect": [210, 276, 279, 284], "affin": [133, 134, 135, 177, 178, 179, 180, 181, 182, 183, 291], "after": [15, 21, 73, 79, 80, 81, 82, 83, 84, 104, 136, 137, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 202, 212, 222, 223, 224, 228, 229, 230, 232, 233, 275, 285], "afterward": 212, "aggreg": [75, 137, 231, 277, 281], "aim": [4, 8], "al": [24, 75], "alex": 75, "alexnet": [30, 73, 75], "algebra": [8, 9, 238], "algorithm": [5, 8, 15, 17, 18, 196, 197, 221], "align": [19, 131, 226, 227], "align_corn": 131, "all": [0, 3, 4, 8, 18, 78, 80, 81, 82, 83, 84, 96, 97, 120, 121, 122, 124, 125, 128, 129, 131, 134, 135, 137, 149, 150, 158, 185, 186, 187, 189, 190, 193, 195, 196, 197, 198, 201, 206, 207, 208, 232, 254, 255, 256, 263, 266, 268, 270, 271, 272, 277, 279, 280, 281, 283, 286, 287, 295], "allevi": [75, 86], "alloc": [236, 237], "allow": [0, 1, 3, 4, 8, 17, 18, 29, 31, 35, 46, 59, 60, 61, 62, 63, 67, 75, 79, 80, 81, 82, 83, 84, 86, 89, 90, 93, 97, 99, 132, 137, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 195, 199, 200, 211, 234, 239, 241, 242, 267, 269, 274, 284, 285, 295], "along": [93, 131, 137, 153, 226, 227, 231, 254, 255, 256, 263, 266, 268, 270, 272, 274, 277, 280, 281, 282, 283, 290, 292], "alongsid": 77, "alpha": [86, 89, 91, 100, 147, 151, 160, 198, 206], "alpha_dropout": [105, 106, 160], "alphadropout": [165, 166], "alphadropoutmodel": 160, "alreadi": 213, "also": [76, 86, 87, 89, 90, 91, 92, 94, 107, 109, 131, 204, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283], "alter": [84, 278], "altern": [1, 148, 199, 227], "alwai": [79, 276, 289, 290, 292], "among": [25, 137], "amount": [95, 96, 97, 123, 124, 125, 127, 128, 129, 204], "amsgrad": [201, 202], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 121, 122, 131, 132, 137, 145, 146, 147, 152, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 201, 204, 206, 212, 213, 214, 222, 227, 235, 238, 248, 255, 263, 268, 270, 277, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "analog": [277, 281], "analysi": [4, 136, 156, 157, 158, 182, 188, 190, 191, 193], "andrew": 75, "angl": [132, 291], "ani": [0, 1, 2, 3, 15, 17, 22, 35, 63, 74, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 94, 100, 101, 107, 109, 116, 118, 152, 183, 195, 196, 210, 212, 213, 219, 222, 234, 235, 236, 238, 239, 240, 241, 242, 254, 256, 267, 269, 270, 271, 272, 275, 277, 280, 281, 282, 283, 284, 295], "anoth": [83, 233, 240, 242, 285, 295], "api": [4, 185, 186, 187, 295], "appear": 196, "append": [81, 83, 84], "appli": [2, 4, 5, 6, 8, 15, 21, 46, 63, 73, 75, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 133, 134, 135, 136, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 202, 203, 204, 205, 227, 275, 277, 284, 287, 289, 290, 291, 292, 293, 295], "applic": [4, 17, 28, 29, 95, 118, 156, 157, 158, 167, 169, 221, 234, 241, 275, 293], "approach": [3, 27, 84, 202], "appropri": [17, 75, 78, 82, 84, 156, 157, 158, 160, 161, 162, 172, 189, 190, 210, 212], "approx": 91, "approxim": [17, 87, 148, 189, 192], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 75, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 96, 97, 99, 107, 109, 121, 122, 131, 136, 137, 141, 142, 144, 145, 146, 153, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 244, 248, 252, 254, 255, 256, 257, 258, 263, 266, 267, 270, 274, 277, 278, 281, 284, 285, 286, 288, 289, 293, 295], "arang": 243, "arbitrari": [81, 168, 236, 237, 248, 253, 255, 259, 261, 263, 267, 268], "arcco": 243, "arch": 213, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 87, 136, 150, 167, 168, 195, 213], "arcsin": 243, "arctan": 243, "area": 131, "arg": [78, 168, 213, 236], "argument": [3, 4, 22, 23, 24, 25, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 78, 84, 168, 216, 236, 267], "around": [12, 132, 154], "arr": [214, 270, 272, 280, 283], "arrai": [8, 77, 79, 211, 214, 222, 227, 235, 240, 242, 269, 276, 277, 285, 295], "art": 75, "artifici": 75, "arxiv": 75, "asarrai": 214, "asgd": 209, "aspect": 293, "assign": [78, 80, 82, 84, 131, 172, 175], "assist": [23, 24, 25], "associ": [82, 83], "assum": [0, 1, 196, 197, 210], "attempt": [80, 84], "attent": [63, 83, 107, 136], "attribut": 78, "audio": 156, "augment": [3, 4, 56, 132, 221, 277, 281, 284, 288, 289, 290, 291, 292, 295], "autodiff": 8, "autograd": 195, "automat": [4, 8, 79, 80, 81, 82, 83, 195, 216, 217, 218, 220, 222, 236, 237, 242, 274, 285], "auxiliari": [23, 24, 25, 77], "avail": [4, 5, 6, 8], "averag": [21, 32, 33, 34, 35, 46, 53, 63, 68, 73, 77, 120, 121, 122, 123, 124, 125, 131, 136, 137, 174, 185, 186, 187, 188, 189, 190, 198, 199, 201, 206, 255], "avg_down": 35, "avg_pool": [188, 189, 190], "avg_pool1d": [106, 126], "avg_pool2d": [106, 126], "avg_pool3d": [106, 126], "avgpool": [21, 53, 68, 73, 137], "avgpool1d": [166, 194], "avgpool1dmodel": 188, "avgpool2d": [166, 194], "avgpool2dmodel": 189, "avgpool3d": [166, 194], "avgpool3dmodel": 190, "avoid": [2, 3, 17, 82, 212], "ax": [9, 211, 254, 255, 256, 263, 267, 268, 277, 279, 281], "axi": [93, 153, 226, 227, 254, 255, 256, 263, 268, 270, 272, 274, 275, 277, 279, 280, 281, 282, 283, 290, 292], "b": [9, 19, 107, 109, 144, 156, 157, 158, 167, 169, 211, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 270, 272, 280, 283, 289], "b_i": [228, 229, 232], "back": [131, 189, 190, 213, 226, 231, 277, 281], "backbon": [64, 65, 66], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 212, 218, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 252, 254, 256, 269, 275, 277, 281, 285], "backward": [8, 77, 79, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 222, 285], "balanc": [47, 48, 49, 50, 51, 52, 173], "bar": 198, "base": [3, 9, 14, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 46, 47, 48, 49, 50, 51, 52, 63, 68, 75, 78, 80, 81, 82, 83, 99, 107, 120, 121, 122, 137, 160, 172, 173, 185, 186, 187, 195, 196, 197, 198, 202, 206, 207, 208, 223, 224, 228, 229, 230, 232, 233, 242, 252, 253, 254, 256, 267, 274, 275, 288, 289, 290, 291, 292], "base_width": [44, 45, 46, 63], "basic": [8, 21, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 73, 76, 95, 96, 97, 120, 121, 122, 133, 134, 135, 136, 141, 142, 145, 146, 185, 186, 187, 286, 287, 288, 289, 290, 291, 292, 293], "basicblock": [35, 39, 42], "batch": [1, 2, 3, 9, 15, 18, 20, 24, 25, 26, 28, 29, 53, 59, 60, 61, 62, 67, 95, 96, 97, 99, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 156, 157, 158, 167, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 205, 227, 286, 287, 288, 289, 291, 293], "batch_norm": [106, 117, 177, 178, 179], "batch_norm1": 84, "batch_norm2": 84, "batch_siz": [1, 2, 3, 137], "batchnorm": [133, 134, 135], "batchnorm1d": [133, 166, 184], "batchnorm1dmodel": 177, "batchnorm2d": [84, 134, 166, 184], "batchnorm2dmodel": 178, "batchnorm3d": [135, 166, 184], "batchnorm3dmodel": 179, "bceloss": [166, 176], "becaus": [2, 217], "becom": [16, 78, 199, 207], "befor": [15, 53, 76, 79, 198, 204, 212, 219, 275, 287, 295], "begin": [1, 16, 86, 89, 90, 91, 147, 149, 150, 151, 173, 174, 175, 188, 189, 190, 191, 192, 193, 205, 207, 211, 221, 228, 229, 231, 244, 248, 254, 256, 258, 275], "behav": [173, 266], "behavior": [75, 81, 84, 210, 221, 227, 237, 295], "being": [83, 132, 160, 161, 162, 163, 164, 205, 210, 212, 270, 272, 283], "belong": 0, "below": [18, 24, 25, 26, 28, 29, 31, 32, 33, 34, 227, 235, 238], "benchmark": [5, 6], "benefici": 84, "benefit": [86, 195, 204, 214], "bernoulli": [160, 161, 162, 163, 164], "best": [141, 142, 145, 146], "beta": [177, 178, 179, 180, 181, 182, 183, 201, 202, 203, 204, 205], "beta1": [201, 202, 203, 204, 205], "beta2": [201, 202, 203, 204, 205], "beta_1": [201, 202, 203, 204, 205], "beta_2": [201, 202, 203, 204, 205], "better": [14, 73, 75, 87, 141, 142, 145, 146, 180, 181, 182, 195, 202, 204, 206, 287], "between": [47, 48, 49, 50, 51, 52, 78, 95, 96, 97, 99, 107, 112, 133, 134, 135, 137, 156, 157, 158, 160, 161, 162, 163, 164, 167, 171, 172, 173, 174, 175, 198, 206, 207, 208, 221, 223, 224, 227, 230, 233, 234, 268, 289, 290, 292, 293], "beyond": [8, 81], "bia": [95, 96, 97, 107, 109, 116, 118, 119, 133, 134, 135, 156, 157, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 201, 202, 203, 204, 205], "bias": [156, 157, 158, 169, 183, 195], "bias1": 82, "bias2": 82, "bilinear": [106, 108, 131, 166, 170], "bilinearmodel": 167, "binari": [92, 110, 152, 160, 161, 162, 163, 164, 171], "binary_cross_entropi": [106, 113], "block": [27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 78, 99, 133, 134, 135, 137, 156, 157, 158, 212], "block1": [76, 195], "block2": [76, 195], "block_arg": [35, 53], "blue": 289, "bmatrix": 231, "bn": [133, 134, 135], "bn_affin": [133, 134, 135], "bool": [1, 5, 6, 20, 23, 24, 25, 35, 76, 78, 79, 100, 101, 102, 103, 104, 116, 118, 131, 133, 134, 135, 156, 157, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 201, 202, 206, 210, 216, 217, 218, 220, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 255, 256, 263, 268, 269, 285], "both": [95, 109, 121, 123, 127, 133, 148, 156, 157, 186, 188, 189, 191, 192, 225, 226, 227, 231, 235, 274, 293], "bottleneck": [35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 136], "bottom": 131, "bound": [142, 144, 146, 207, 220], "box": 4, "branch": [23, 24, 25, 75, 137], "break": 195, "brief": 295, "bright": 295, "broadcast": [163, 164, 255, 263, 268, 278, 282], "buffer": [198, 204, 206, 208], "build": [8, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 63, 64, 65, 66, 75, 78, 81, 84, 195, 295], "built": [3, 8, 36, 40, 41, 84, 195], "burg": 6, "c": [6, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 99, 102, 103, 104, 111, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 136, 163, 164, 172, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 211, 272, 283, 287], "c_": [156, 157, 158], "c_in": [95, 96, 97, 133, 134, 135], "c_out": [95, 96, 97], "calcul": [0, 1, 8, 9, 79, 199, 200, 203, 204, 205, 212, 217, 222], "calculu": [10, 17], "call": [1, 78, 210, 213, 223, 224, 227, 228, 229, 230, 232, 233], "callabl": [196, 213, 284], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 35, 44, 45, 59, 60, 61, 62, 76, 77, 79, 80, 81, 82, 83, 84, 89, 95, 96, 97, 132, 137, 148, 149, 154, 156, 157, 158, 180, 181, 182, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 220, 221, 222, 227, 236, 237, 238, 239, 241, 242, 255, 263, 268, 272, 274, 275, 277, 278, 281, 282, 283, 284, 285, 288, 290, 291, 292, 295], "cannot": [11, 12, 14, 15, 18, 19, 20], "capabl": [8, 234, 235, 238, 239, 240, 241, 242], "capac": [44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 75], "captur": [63, 75, 99, 156, 157, 158, 167], "cardin": [46, 47, 48, 49, 50, 51, 52, 63, 75], "care": 212, "cartesian": 274, "case": [3, 16, 31, 86, 89, 90, 91, 147, 149, 150, 151, 173, 174, 175, 188, 189, 190, 191, 192, 193, 195, 200, 205, 207, 211, 228, 229, 244, 248, 254, 256, 258, 275, 295], "categori": [5, 36, 37, 38, 39, 40, 41, 42, 43], "caus": [3, 17, 198, 206, 208], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 86, 87, 89, 91, 92, 95, 96, 97, 107, 109, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 136, 145, 146, 148, 152, 160, 167, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 207, 225, 226, 227, 230, 232], "center": [132, 154, 206, 286, 295], "centercrop": [294, 295], "central": 214, "certain": [11, 87, 107, 167, 201, 202, 210, 254, 256], "chain": [14, 15, 84, 284, 295], "challeng": [5, 75], "cham": 75, "chanc": [289, 290, 292], "chang": [112, 173, 207, 211, 212, 213, 276, 278, 282, 289, 295], "channel": [31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 57, 59, 60, 61, 62, 67, 68, 75, 95, 96, 97, 99, 102, 103, 104, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 156, 157, 158, 163, 164, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 192, 193, 287, 289, 293], "character": [44, 45], "check": [210, 286, 288], "checkpoint": 197, "choic": 274, "choleski": 13, "choos": 75, "chosen": 160, "christian": 75, "christoph": 6, "clariti": 214, "class": [3, 4, 8, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 93, 111, 115, 195, 197, 213, 235, 238, 269, 295], "classic": 34, "classif": [4, 5, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 110, 111, 115, 152, 153, 171, 172, 175], "classifi": [21, 23, 24, 25, 31, 32, 33, 34, 35, 46, 63, 68, 73], "cleaner": [1, 212, 227], "clear": [79, 222, 236, 237], "clearli": 214, "clf_in_featur": 31, "clf_layer": 31, "clip": [132, 207, 243], "clockwis": 132, "close": [14, 17, 151, 171, 206], "closer": 147, "closur": [196, 197], "cloth": 5, "cnn": 75, "co": [243, 259], "code": [15, 80, 82, 84, 210, 212, 214, 221], "coeffici": [19, 131, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "col": 99, "collect": [4, 9, 75, 80, 81, 83, 84, 197], "color": [289, 295], "colorjitt": 295, "column": [11, 12, 14, 18, 19, 20, 76, 99, 238, 272, 274], "com": [5, 6], "combin": [1, 3, 26, 27, 28, 67, 75, 81, 84, 86, 87, 133, 134, 135, 136, 137, 148, 172, 195, 204, 205, 255, 263, 268, 270, 295], "combined_dataset": [0, 1], "common": [99, 132, 197, 295], "commonli": [8, 87, 92, 93, 94, 95, 97, 107, 114, 116, 118, 132, 136, 145, 146, 153, 158, 171, 174, 175, 188, 189, 190, 191, 192, 193, 211, 214, 239, 279, 285, 286, 287, 288, 290, 291, 292, 295], "compar": [44, 45, 73, 221, 280], "compat": [4, 9, 63, 168, 183, 195, 211, 221, 285, 295], "complex": [2, 3, 8, 12, 29, 35, 38, 41, 42, 55, 57, 76, 80, 81, 84, 90, 150, 191, 193, 195, 197, 295], "compon": [17, 23, 24, 25, 26, 27, 28, 29, 78, 81, 197, 222, 295], "compos": [5, 6, 156, 157, 158, 188, 189, 190, 191, 192, 193, 195, 295], "comprehens": 3, "compris": [44, 45], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 67, 75, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 107, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 131, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 206, 210, 211, 212, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 281, 285, 295], "computation": [3, 17, 36], "compute_loss": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "concaten": [0, 95, 96, 97, 272, 273, 280, 283], "concept": [8, 17, 75], "condit": [10, 11, 14], "confer": 75, "config": 68, "configur": [22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 83, 133, 134, 135], "conjunct": [99, 175], "connect": [21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 68, 73, 75, 109, 136, 137, 156, 157, 158, 169], "consecut": 68, "consid": [3, 14, 17, 84, 141, 142, 145, 146, 195, 207, 210, 236, 237, 295], "consider": 17, "consist": [2, 4, 5, 21, 32, 33, 34, 35, 77, 120, 121, 122, 137, 185, 186, 187, 214, 219, 221, 275, 286, 293, 295], "consistent_tensor": 221, "consol": 76, "constant": [110, 111, 116, 118, 119, 140, 151, 171, 172, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 206, 214, 275], "constant_pad": 275, "constraint": [1, 137], "construct": [8, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 69, 70, 71, 72, 81, 195, 235, 277, 281], "constructor": [44, 45, 59, 60, 61, 62, 67, 69, 70, 71, 72], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 27, 31, 35, 46, 47, 48, 49, 50, 51, 52, 53, 63, 68, 76, 78, 80, 81, 82, 83, 84, 93, 99, 107, 109, 110, 111, 115, 131, 171, 172, 175, 196, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 237, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 274], "content": 132, "context": [210, 212], "contextmanag": 212, "contigu": 276, "continu": [149, 218], "contrast": [180, 181, 182, 295], "contribut": [131, 160, 161, 162, 163, 164, 188, 191, 192, 193, 198, 204, 266], "control": [46, 137, 147, 173, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 221, 285, 295], "conv": [27, 53, 133, 134, 135, 178, 179], "conv1": [32, 33, 34, 84, 156, 157, 158, 188, 189, 190, 191, 192, 193], "conv1d": [98, 106, 133, 159, 166, 188, 191], "conv1dmodel": 156, "conv2": [32, 33, 34, 84, 156, 157, 158], "conv2d": [81, 84, 98, 106, 134, 159, 166, 178, 189, 192, 195], "conv2dmodel": 157, "conv3d": [98, 106, 135, 159, 166, 179, 190, 193], "conv3dmodel": 158, "conv_bia": [133, 134, 135], "conv_config": 68, "conv_lay": [31, 81], "convblock": 195, "convbnrelu1d": 138, "convbnrelu2d": 138, "convbnrelu3d": 138, "conveni": [4, 22, 74], "convent": 227, "converg": [17, 154, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 287], "convers": [172, 175, 289, 295], "convert": [5, 6, 68, 77, 79, 93, 153, 222, 274, 284, 285, 289, 295], "convnetwork": 81, "convolut": [21, 22, 24, 25, 27, 31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 67, 68, 73, 74, 75, 81, 95, 96, 97, 99, 133, 134, 135, 136, 137, 156, 157, 158, 189, 190, 192, 193, 275], "convolv": [95, 96, 97, 156, 157, 158], "coordin": 274, "core": [0, 1, 2, 3, 78, 195, 196, 222, 295], "corinna": 6, "corner": [131, 286, 288], "correct": [80, 172, 175, 201, 202, 203, 204, 205, 285], "correctli": [17, 78, 80, 81, 82, 83, 84, 172, 175, 221], "correspond": [0, 1, 2, 5, 6, 12, 44, 45, 64, 65, 66, 80, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 107, 109, 131, 150, 153, 167, 169, 177, 178, 179, 180, 181, 182, 189, 190, 198, 206, 208, 225, 226, 228, 229, 232, 252, 253, 259, 261, 272, 275, 277, 281, 283], "cort": 6, "cosh": [243, 260, 265], "cosin": [245, 249, 250, 259], "cost": [46, 75], "could": 78, "count": [75, 76, 270], "counterclockwis": [132, 291], "cover": [9, 95, 96, 97], "coverag": [120, 121, 122], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 81, 84, 137, 195, 211, 213, 221, 234, 238, 239, 240, 241, 242, 274, 280, 284, 295], "creation": [81, 84, 295], "criterion": [171, 172, 173, 174, 175], "critic": [17, 197, 221], "crop": [286, 288, 295], "cross": [110, 111, 171, 172], "cross_entropi": [106, 113], "crossentropyloss": [166, 176], "cube": 243, "cumul": [87, 148], "current": [78, 198, 201, 207, 210], "custom": [4, 8, 21, 22, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 73, 74, 77, 80, 81, 82, 83, 84, 132, 133, 134, 135, 147, 149, 195, 221, 238], "custom_config": 68, "custom_lenet": 31, "customiz": 295, "custommodul": 77, "customnetwork": 80, "customparametermodel": [82, 83], "cvpr": 75, "d": [75, 97, 104, 122, 125, 129, 135, 179, 182, 183, 187, 190, 193, 211, 235, 291], "d_": [97, 122, 125, 129, 158, 187, 190, 193], "d_1": 183, "d_2": 183, "d_n": 183, "d_out": [97, 125, 129], "dampen": [198, 206, 208], "data": [4, 5, 6, 8, 15, 77, 79, 83, 94, 95, 97, 99, 103, 104, 109, 132, 133, 134, 135, 137, 150, 154, 156, 157, 158, 169, 182, 188, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 221, 222, 223, 224, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 275, 276, 277, 278, 279, 281, 284, 285, 288, 289, 290, 291, 292, 295], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 132, 200, 212, 284, 286, 295], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 231, "debug": [76, 84, 210, 219, 295], "decai": [198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [47, 48, 49, 50, 51, 52, 213], "decoupl": [199, 200, 202, 203, 204, 205], "decreas": [201, 202, 207], "deep": [1, 3, 4, 8, 27, 35, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 54, 55, 58, 75, 116, 148, 151, 195, 221, 284, 285, 295], "deeper": [8, 24, 26, 29, 35, 42, 75, 151], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 93, 95, 96, 97, 100, 101, 102, 103, 104, 110, 111, 112, 114, 115, 116, 118, 119, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 153, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 196, 197, 204, 210, 216, 217, 218, 220, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 255, 256, 263, 267, 268, 269, 270, 272, 274, 275, 277, 280, 283, 285, 289, 290, 292], "defin": [1, 3, 4, 8, 23, 24, 25, 26, 27, 28, 29, 31, 35, 53, 64, 65, 66, 68, 80, 81, 82, 83, 84, 148, 171, 172, 173, 174, 175, 188, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 217, 218, 232, 237, 248, 267, 284, 295], "definit": [8, 10, 133, 134, 135, 295], "degre": [132, 291, 295], "delai": 198, "delta": [93, 112, 153, 173, 199], "delta_": [93, 153], "demonstr": [8, 9, 59, 60, 61, 62, 67, 75, 195, 214], "denomin": [116, 118, 119, 133, 134, 135, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 206, 224], "denot": [15, 152, 156, 157, 158, 160, 161, 162, 163, 164, 267], "dens": [8, 200], "dense1": 8, "dense2": 8, "densenet": [75, 136], "densiti": [87, 148], "depend": [8, 15, 16, 83, 110, 111, 112, 114, 115, 131, 156, 225, 235, 254, 256, 277, 281, 288, 289, 293], "depth": [81, 97, 104, 122, 125, 129, 158, 179, 182, 187, 190, 193], "depthwis": [95, 96, 97], "deriv": [17, 18, 93, 120, 121, 122, 148, 153, 154, 156, 157, 158, 167, 169, 213], "descend": 20, "descent": [8, 198, 208], "describ": [11, 12], "descript": 295, "deseri": 77, "design": [3, 4, 8, 9, 21, 22, 24, 25, 26, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 54, 57, 74, 75, 79, 81, 82, 83, 84, 86, 91, 151, 160, 195, 214, 295], "desir": [77, 120, 121, 122, 185, 186, 187, 267, 269], "destin": 78, "det": [9, 13], "det_a": 11, "detail": [8, 76, 197, 221, 227], "detect": 75, "determin": [0, 8, 9, 10, 11, 31, 44, 45, 120, 121, 122, 141, 142, 145, 146, 156, 157, 158, 185, 186, 187, 189, 190, 192, 193, 206, 210, 216, 217, 218, 220, 236, 237, 286, 288], "determinist": 132, "develop": [8, 195, 221, 295], "deviat": [141, 143, 145, 284, 287, 295], "diag": [17, 243], "diagon": [17, 18, 20, 235, 238, 266], "diagonaliz": 12, "dict": [22, 24, 25, 26, 28, 29, 31, 35, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 64, 65, 66, 67, 74, 78, 80, 82, 168, 196], "dictionari": [31, 78, 79, 80, 82, 84, 196], "differ": [0, 15, 23, 31, 59, 60, 61, 62, 67, 81, 84, 93, 107, 131, 137, 153, 167, 174, 197, 211, 219, 221, 233, 242, 268, 279, 295], "differenti": [8, 10, 19, 148, 195, 216, 217, 218, 220, 222, 234, 236, 237, 239, 241], "digit": [5, 6, 34, 75], "dilat": [95, 96, 97, 133, 134, 135, 156, 157, 158], "dilation_height": 99, "dilation_width": 99, "dim": [172, 175], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 35, 46, 63, 68, 73, 75, 79, 93, 107, 109, 116, 118, 119, 121, 122, 131, 136, 137, 153, 156, 157, 158, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 211, 214, 216, 220, 222, 226, 236, 254, 255, 256, 263, 266, 267, 268, 270, 272, 275, 277, 279, 280, 281, 282, 283, 286, 288, 293], "dimension": [15, 17, 18, 20, 95, 96, 97, 123, 124, 125, 127, 128, 129, 137, 156, 157, 158, 162, 163, 164, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 211, 226, 227, 231, 235, 252, 255, 263, 266, 268, 271, 276, 277, 279, 281], "diminish": 200, "direct": [12, 171, 172, 173, 174, 175, 198, 206, 207, 208], "directli": [80, 81, 82, 83, 131, 199, 200, 202, 203, 204, 205, 219, 221, 269, 295], "directori": [3, 4, 5, 6], "disabl": [210, 212], "discontinu": 258, "discrep": [171, 172, 175], "discret": [217, 221], "disk": 3, "displai": [22, 74, 76], "distribut": [87, 93, 131, 141, 142, 143, 144, 145, 146, 148, 153, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 172, 175, 188, 189, 190, 216, 217, 218, 220, 221, 255, 263, 266, 268, 280, 287, 289, 290, 291, 292], "div": 243, "divers": [132, 290, 292, 295], "diversifi": 295, "divid": [1, 17, 81, 84, 93, 95, 96, 97, 153, 171, 172, 173, 174, 175, 224, 287], "divis": [8, 17, 95, 96, 97, 160, 161, 162, 163, 164, 199, 200, 201, 202, 203, 204, 205, 206, 224], "do": [17, 19, 77, 80, 81, 82, 83, 100, 101, 102, 103, 195, 205, 210, 242, 266, 275], "document": [4, 8, 75, 197, 214, 221], "doe": [8, 15, 16, 17, 18, 20, 76, 77, 80, 81, 82, 83, 84, 146, 201, 202, 207, 210, 212, 216, 217, 218, 219, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242, 278], "doesn": 212, "doi": 75, "domain": 4, "don": 212, "dot": [12, 15, 80, 81, 82, 83, 84, 183, 191, 192, 193, 226, 231, 243, 270, 272, 280, 283], "down": [3, 195, 293], "download": [4, 5, 6], "drawback": 86, "drawn": [216, 217, 218, 220, 221, 291], "drop": [160, 161, 162, 163, 164], "dropout": [21, 25, 68, 73, 75, 87, 100, 102, 103, 104, 160, 162, 163, 164], "dropout1d": [105, 106, 165, 166], "dropout1dmodel": 162, "dropout2d": [105, 106, 165, 166], "dropout3d": [105, 106, 165, 166], "dropout_prob": 25, "dropoutmodel": 161, "dtype": [77, 79, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 285], "due": [15, 17, 95, 96, 150, 291], "dummi": 76, "duplic": [80, 82], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 23, 24, 25, 35, 77, 78, 79, 80, 81, 82, 83, 84, 93, 100, 101, 102, 103, 104, 116, 118, 132, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 222, 223, 254, 255, 256, 263, 268, 285, 288, 291, 295], "dy": [89, 149], "dynam": [0, 2, 3, 63, 67, 75, 78, 81, 82, 83, 84, 120, 121, 122, 137, 183, 185, 186, 187, 200, 205, 210], "dynamicnetwork": 81, "e": [0, 11, 12, 14, 15, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 68, 77, 93, 137, 152, 153, 160, 172, 196, 199, 206, 207, 238, 250, 252, 253, 260, 265, 266, 270, 289], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 68, 73, 75, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 107, 109, 116, 118, 120, 121, 122, 136, 137, 150, 153, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 274, 275, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295], "earli": 205, "eas": [4, 8], "easi": [2, 3, 4, 8, 47, 48, 49, 50, 51, 52, 79, 80, 82], "easier": [3, 80, 81, 84], "easili": [4, 79, 83, 295], "eccv": 75, "economi": 20, "edg": 275, "educ": [8, 75], "effect": [75, 80, 81, 82, 83, 84, 93, 95, 96, 97, 99, 147, 148, 150, 152, 153, 154, 177, 178, 179, 180, 181, 182, 183, 210, 211, 212, 272, 283], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 28, 29, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 75, 99, 172, 195, 212], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [109, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 269, 274], "element": [0, 17, 18, 25, 79, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 133, 134, 135, 136, 150, 153, 156, 157, 158, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 183, 188, 189, 190, 191, 192, 193, 211, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 274, 275, 277, 278, 279, 281], "elementwise_affin": 183, "elsewher": [191, 192, 193, 238], "elu": [88, 106, 155, 166], "elumodel": 147, "empti": [78, 84, 243], "empty_lik": 243, "enabl": [0, 1, 2, 3, 8, 15, 20, 28, 63, 64, 65, 66, 75, 78, 79, 80, 81, 82, 83, 150, 156, 157, 158, 167, 169, 195, 197, 210, 212, 216, 217, 218, 220, 222, 284], "encapsul": [195, 222], "encod": [172, 175], "encourag": [161, 162, 163, 164, 171, 172, 175, 201], "end": [16, 86, 89, 90, 91, 147, 149, 150, 151, 173, 174, 175, 188, 189, 190, 191, 192, 193, 205, 207, 228, 229, 231, 234, 244, 248, 254, 256, 258, 270, 275, 295], "enforc": [78, 80, 82], "engin": 17, "enhanc": [25, 26, 28, 29, 33, 44, 45, 59, 60, 61, 62, 67, 73, 74, 75, 80, 82, 137, 295], "ensur": [3, 5, 6, 17, 18, 19, 77, 78, 79, 80, 81, 82, 83, 84, 93, 120, 121, 122, 133, 134, 135, 149, 153, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 232, 255, 263, 268, 275, 285, 286, 287, 288, 289, 293, 295], "enter": 212, "entir": [3, 102, 103, 104, 163, 164, 221], "entri": [31, 279], "entropi": [110, 111, 171, 172], "environ": 8, "ep": [110, 111, 116, 118, 119, 133, 134, 135, 171, 172, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 206], "epoch": [1, 3], "epsilon": [171, 172, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 206], "equal": [15, 131, 188, 189, 190, 286, 288], "equat": [12, 17, 19], "equival": [227, 266, 276], "error": [0, 3, 12, 14, 78, 81, 82, 83, 84, 87, 112, 114, 148, 171, 172, 173, 174, 195, 196, 212, 214], "especi": [3, 80, 82, 83, 152, 211, 212, 214, 219, 284, 285, 289, 295], "essenti": [1, 3, 8, 9, 15, 17, 27, 96, 99, 195, 219, 221, 254, 284, 285, 289, 295], "estim": [174, 201, 202, 203, 204, 205, 206], "et": [24, 75], "eta": 207, "eta_": 207, "etc": [171, 285], "euclidean": 16, "european": 75, "evalu": [78, 116, 118, 160, 161, 162, 163, 164, 177, 178, 179, 180, 181, 182, 295], "even": [199, 212, 234, 235, 238, 239, 240, 241, 242], "evenli": [120, 121, 122, 185, 186, 187, 234], "everi": [1, 295], "everywher": 258, "exact": [78, 81, 267, 289, 291], "exactli": 84, "exampl": [4, 227], "excel": 26, "except": [0, 258, 270, 272, 283], "excit": [53, 56, 59, 60, 61, 62, 75, 136], "exclus": [217, 220, 234], "exdb": 6, "execut": [81, 212], "exist": [19, 80, 82, 84, 213, 270], "exit": 212, "exp": [86, 91, 92, 94, 147, 151, 243], "expand": [4, 99, 277, 281], "expect": [10, 81, 84, 160, 161, 162, 163, 164, 183, 195, 214], "expens": 3, "experi": [8, 219, 221, 295], "experiment": 221, "explan": [15, 17, 21, 68, 73, 120, 121, 122, 185, 186, 187, 198], "explicit": 84, "explicitli": [75, 80, 82], "explod": [151, 177, 178, 179], "explor": [195, 221], "expon": [15, 232], "exponenti": [86, 91, 93, 147, 151, 153, 160, 201, 202, 203, 204, 205, 252], "extend": [4, 46, 63], "extens": [75, 197], "extern": [4, 8], "extract": [23, 27, 35, 46, 63, 75, 99, 158, 188, 190, 213, 235, 254, 256, 286, 288], "extractor": [31, 32, 33, 34], "extrem": [17, 36, 75], "ey": 243, "f": [1, 4, 5, 6, 8, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 153], "f_1": 136, "f_2": 136, "facilit": [23, 80, 84, 93, 153, 156, 157, 158, 195, 197, 287, 295], "factor": [25, 86, 95, 96, 97, 99, 136, 145, 146, 198, 205, 206, 207, 208, 214], "failur": [80, 81, 82, 83, 195], "fals": [1, 5, 6, 20, 35, 76, 77, 78, 79, 100, 101, 102, 103, 104, 116, 118, 131, 139, 141, 142, 143, 144, 145, 146, 156, 157, 158, 167, 169, 201, 202, 206, 210, 216, 217, 218, 220, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 255, 256, 263, 268, 269, 285], "famili": 213, "fan": [141, 142, 145, 146], "fan_in": [141, 142], "fan_out": [141, 142], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 205, "faster": [200, 204, 212], "fc": [27, 35, 46, 53, 63, 81, 136, 157, 158, 188, 189, 190, 191, 192, 193], "fc1": [33, 34, 76, 80, 84, 148, 150, 151, 152, 154, 169], "fc2": [33, 34, 76, 80, 84, 148, 150, 151, 152, 154, 169], "fc3": 34, "featur": [3, 21, 23, 26, 27, 31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 68, 73, 74, 75, 107, 109, 116, 133, 134, 135, 136, 137, 158, 161, 162, 163, 164, 167, 169, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 200], "feature_extractor": 31, "fed": [3, 295], "feed": [3, 222, 295], "feedforward": 76, "fergu": [73, 75], "fetch": 0, "few": 76, "fewer": 1, "field": [6, 63, 67, 75, 137], "file": [3, 213], "fill": [139, 143, 144, 216, 217, 218, 220, 239, 240, 241, 242], "filter": [73, 75, 95, 96, 97, 99, 133, 134, 135, 157, 158], "filter_height": 99, "filter_s": 99, "filter_width": 99, "final": [23, 24, 25, 26, 27, 28, 29, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 80, 81, 82, 83, 84, 137, 284, 295], "find": [19, 254, 256], "fine": [136, 295], "finish": 212, "first": [5, 6, 12, 31, 73, 76, 81, 82, 107, 136, 167, 201, 202, 203, 204, 205, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 274, 283, 284, 285, 295], "fit": 195, "fix": [81, 275], "flatten": [27, 31, 84, 99, 231, 273, 276, 277], "flexibl": [1, 3, 4, 8, 23, 27, 28, 29, 31, 35, 59, 60, 61, 62, 67, 68, 75, 80, 81, 82, 83, 84, 195, 197, 214, 239, 240, 285, 295], "flip": [290, 292, 295], "float": [2, 5, 6, 25, 77, 79, 86, 89, 100, 101, 102, 103, 104, 110, 111, 112, 116, 118, 119, 132, 133, 134, 135, 139, 143, 144, 145, 146, 147, 149, 160, 161, 162, 163, 164, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 222, 234, 237, 248, 269, 287, 289, 290, 291, 292], "float32": [77, 79, 222, 234, 235, 238, 239, 241, 269, 285], "float64": [242, 269, 285], "flow": [26, 27, 53, 75, 84, 146, 148, 152, 154, 156, 157, 158, 167, 169, 210], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 59, 60, 61, 62, 67, 68, 73, 76, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 133, 134, 135, 136, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 254, 256, 274, 278, 286, 287, 288, 289, 290, 291, 292, 295], "form": [18, 137, 231, 274, 277, 281, 295], "format": [2, 3, 5, 6, 76, 172, 175, 285], "formul": 87, "formula": [12, 20, 93, 120, 121, 122, 153, 173, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 227, 268, 289], "forward": [8, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 76, 77, 78, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "found": 8, "foundat": [27, 53, 78, 195, 197, 222], "four": 275, "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 120, 121, 122, 123, 124, 125, 127, 128, 129, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 205, 206, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287], "frame": 104, "framework": [4, 8, 75, 172, 175, 177, 178, 179, 180, 181, 182, 196, 197, 295], "frequent": [172, 175], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 27, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 99, 107, 116, 118, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 227, 228, 229, 233, 235, 254, 255, 256, 263, 268, 270, 272, 274, 277, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 295], "full": 20, "full_matric": 20, "fulli": [4, 9, 21, 27, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 68, 73, 75, 109, 136, 137, 169, 221], "func": 213, "function": [3, 4, 5, 6, 8, 9, 78, 80, 81, 82, 83, 84, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 195, 197, 214, 221, 284, 295], "fundament": [8, 109, 169, 285], "further": [8, 221, 255, 263, 268], "fuse": 63, "fusion": [64, 65, 66], "futur": 168, "g": [0, 11, 12, 15, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 68, 136, 137, 160, 196, 199, 206, 270, 289], "g_": 200, "g_t": 206, "gain": [145, 146], "gamma": [177, 178, 179, 180, 181, 182, 183], "gap": [35, 46, 63, 136], "gaussian": [87, 148], "gelu": [88, 106, 155, 166], "gelunetwork": 148, "gener": [17, 76, 132, 160, 161, 162, 163, 164, 181, 202, 204, 205, 212, 216, 217, 218, 219, 220, 221, 226, 234, 236, 237, 274, 288, 289, 290, 292, 295], "get": [5, 6], "github": 5, "give": [8, 198, 206], "given": [11, 12, 15, 17, 18, 20, 99, 171, 172, 175, 196, 210, 240, 242, 284, 289, 290, 292, 295], "global": [0, 35, 46, 53, 63, 136, 210, 212, 219, 221], "go": [24, 75], "goal": [171, 172, 175], "googlenet": [24, 75], "gpu": 75, "grad": [77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 99, 107, 109, 131, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 196, 197, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 290, 292, 293], "grad_output": 15, "gradient": [8, 9, 26, 27, 75, 77, 79, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 285], "grain": 136, "graph": [8, 146, 222, 234, 235, 238, 239, 240, 241, 242, 285], "grayscal": [5, 6, 31, 32, 33, 34, 289, 295], "greater": 248, "green": 289, "grid": 274, "groundbreak": 75, "group": [46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 67, 75, 81, 95, 96, 97, 133, 134, 135, 137, 156, 157, 158, 196, 197], "group1": 81, "group2": 81, "groupedconvblock": 46, "guarante": 219, "h": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 96, 97, 99, 103, 104, 121, 122, 124, 125, 128, 129, 131, 132, 134, 135, 136, 178, 179, 181, 182, 186, 187, 190, 193, 286, 288], "h_": [96, 97, 121, 122, 124, 125, 128, 129, 131, 157, 158, 186, 187, 189, 190, 192, 193], "h_out": [96, 97, 124, 125, 128, 129], "h_stack": 272, "ha": [0, 12, 76, 84, 95, 96, 97, 133, 134, 135, 171, 172, 177, 178, 179, 180, 181, 182, 183, 196, 197, 227, 266, 270, 272, 280, 283, 289], "half": 261, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 78, 80, 81, 82, 83, 84, 172, 175, 195, 197, 212], "handwritten": [5, 6, 34], "hardwar": 8, "hat": [201, 202, 203, 204, 205], "have": [0, 1, 11, 12, 14, 17, 18, 20, 79, 81, 83, 84, 96, 97, 146, 195, 238, 239, 240, 241, 242, 254, 256, 270, 272, 274, 279, 280, 283, 287, 293], "he": 75, "height": [96, 97, 99, 103, 104, 121, 122, 124, 125, 128, 129, 131, 132, 137, 157, 158, 178, 179, 181, 182, 186, 187, 189, 190, 192, 193, 286, 288, 293], "help": [8, 25, 89, 91, 104, 147, 149, 151, 154, 177, 178, 179, 188, 189, 191, 192, 198, 201, 202, 204, 210, 211, 212, 214], "henc": 278, "here": [3, 10, 78, 107, 195, 197, 211, 212, 214, 221, 284, 285, 295], "hidden": [21, 73, 81], "hidden_s": 81, "hierarch": [81, 84, 195], "hierarchi": 157, "hierarchicalnetwork": 81, "high": [8, 43, 58, 67, 217, 220], "higher": [46, 172, 175, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 226, 227, 231, 252], "highest": 217, "highli": 75, "highlight": [136, 191, 192, 193], "hint": 214, "histor": 200, "histori": [216, 217, 218, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242], "hold": [80, 81, 82, 83], "horizont": [272, 280, 290, 295], "hot": [172, 175], "how": [2, 3, 8, 59, 60, 61, 62, 67, 81, 84, 195, 214, 295], "howev": [77, 146], "hstack": 273, "http": [5, 6], "hu": [75, 136], "huber": [112, 173], "huber_loss": [106, 113], "huberloss": [166, 176], "huberregressionmodel": 173, "hue": 295, "hyperbol": [94, 154, 250, 260, 265], "hyperparamet": [35, 46, 196, 198], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "iccv": 75, "ideal": [8, 84], "ident": [14, 15, 75, 132, 166, 170, 219, 221, 238, 278], "identifi": 82, "idx": [2, 3], "ieee": [75, 136], "ii": 266, "ij": [93, 131, 153, 225, 226, 227, 231, 274], "ik": [225, 226, 227], "ill": [11, 17], "ilsvrc": 75, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 74, 75, 96, 118, 132, 134, 136, 157, 181, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [44, 45, 59, 60, 61, 62, 67, 75], "imbal": [172, 175], "impact": [75, 204], "implement": [2, 3, 8, 17, 21, 23, 24, 25, 26, 28, 29, 31, 35, 44, 45, 47, 48, 49, 50, 51, 52, 53, 73, 75, 78, 99, 137, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 272, 283, 289], "impli": [156, 157], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 44, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "improp": [81, 84, 221], "improv": [24, 25, 26, 27, 29, 35, 46, 59, 60, 61, 62, 63, 73, 75, 116, 132, 136, 148, 151, 154, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 288, 291, 295], "imread": 3, "in1_featur": [107, 167], "in2_featur": [107, 167], "in_channel": [35, 81, 84, 133, 134, 135, 136, 137, 156, 157, 158, 178, 179, 188, 189, 190, 191, 192, 193, 195], "in_featur": [80, 81, 84, 109, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 180, 183, 188, 189, 190, 191, 192, 193], "incept": [24, 25, 26, 27, 28, 29, 30, 75], "inception_resnet_v1": 75, "inception_resnet_v2": 75, "inception_v1": 75, "inception_v3": 75, "inception_v4": 75, "inceptionresnet": [28, 29], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 23, 24, 25, 28, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 68, 73, 76, 78, 79, 81, 83, 84, 131, 133, 134, 135, 195, 196, 197, 204, 214, 221, 227, 275], "inclus": [79, 82, 217, 220], "incom": [109, 169], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 75, 148], "increas": [46, 47, 48, 49, 50, 51, 52, 63, 95, 96, 97, 99, 132, 200, 207, 211, 272, 283, 289, 290, 292, 295], "independ": [81, 95, 96, 97, 160, 161, 162, 163, 164, 183, 227, 237, 287, 289, 291, 293], "index": [0, 2, 5, 6, 211, 234, 235, 238, 274, 278], "indexerror": 0, "indic": [0, 1, 68, 76, 79, 81, 83, 84, 111, 115, 172, 175, 188, 210, 222, 286, 288], "individu": [3, 81, 84, 173, 183, 197, 200, 207], "induc": [91, 151], "inf": 264, "infer": [59, 60, 61, 62, 67, 81, 84, 212], "infin": [18, 20, 203], "inform": [8, 75, 76, 77, 136, 197, 199, 212], "infti": [16, 205], "inherit": [1, 198, 206, 208], "init": 140, "initi": [1, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 77, 79, 80, 81, 82, 83, 84, 137, 139, 141, 142, 143, 144, 145, 146, 156, 157, 158, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 219, 220, 221, 234, 238, 239, 240, 241, 242, 269], "initial_accumulator_valu": 200, "inner": [8, 225, 243], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 46, 59, 60, 61, 62, 63, 67, 73, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 221, 222, 223, 225, 226, 227, 231, 235, 237, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "input1": 167, "input2": 167, "input_": [21, 73, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 185, 186, 187], "input_1": 107, "input_2": 107, "input_data": [147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193], "input_s": [81, 83, 153, 172, 175], "input_shap": 76, "input_tensor": [8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 77, 80, 81, 82, 83, 84, 93, 136, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 286, 287, 288, 289, 290, 291, 292, 293], "insid": [3, 210, 212], "insight": [8, 75], "inspect": [78, 79, 84, 196], "instabl": [17, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 74, 76, 78, 79, 80, 82, 83, 84, 118, 180, 181, 182, 183, 196, 213, 269, 277, 281, 295], "instance_norm": [106, 117, 180, 181, 182], "instancenorm1d": [166, 184], "instancenorm1dmodel": 180, "instancenorm2d": [166, 184], "instancenorm3d": [166, 184], "instanti": [2, 59, 60, 61, 62, 67, 213], "instead": [8, 76, 80, 81, 82, 83, 84, 141, 142, 145, 146, 201, 202, 203, 212, 214, 236, 237], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 93, 95, 96, 97, 99, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 143, 144, 145, 146, 153, 156, 157, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 204, 205, 207, 213, 216, 217, 218, 219, 220, 222, 234, 235, 236, 238, 239, 241, 248, 254, 255, 256, 263, 267, 268, 269, 270, 275, 277, 278, 279, 280, 281, 282, 286, 288, 293], "integ": [1, 3, 15, 53, 68, 95, 96, 97, 121, 122, 156, 157, 158, 183, 186, 187, 189, 190, 191, 192, 193, 214, 217, 218, 220, 221, 236, 239, 241, 255, 263, 267, 268, 275, 277, 278, 281], "integr": [1, 2, 4, 5, 6, 9, 75, 79, 81, 83, 84, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 167, 169, 188, 189, 190, 191, 192, 193], "intellig": [75, 136], "intend": [77, 82, 83], "intens": [17, 36, 287, 289], "intent": 214, "interact": [107, 167, 195, 221], "interdepend": 75, "interfac": [2, 78, 81, 197], "interfer": [210, 212], "intermedi": [17, 136], "intern": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 75, 80, 81, 82, 83, 84, 172, 175, 195, 286, 287, 288, 289, 290, 291, 292, 293], "interpol": [106, 130, 293], "interpret": [75, 93, 153, 214, 270], "interv": [216, 220, 234], "introduc": [24, 25, 46, 75, 90, 136, 148, 150, 152, 154, 160, 161, 162, 163, 164, 288, 291, 295], "introspect": 84, "intuit": [8, 80, 82, 195, 295], "inv": 13, "inv_a": 14, "invari": [189, 192], "invers": [8, 11, 14, 15, 17, 200, 245, 246, 247], "invert": [11, 14, 15, 19], "invok": 213, "involv": [10, 11, 12, 14, 17, 18, 20, 63, 86, 87, 89, 90, 91, 92, 94, 107, 109, 131, 156, 157, 158, 167, 169, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 252, 253, 254, 256, 259, 261, 274, 275, 277, 281], "is_leaf": 222, "issu": [3, 151, 177, 178, 179, 201, 202], "item": [5, 174], "iter": [0, 1, 2, 3, 77, 78, 81, 83, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 234], "ith": [93, 153], "its": [4, 15, 17, 21, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 64, 65, 66, 73, 75, 76, 77, 80, 81, 82, 83, 95, 96, 97, 99, 132, 137, 146, 148, 150, 191, 192, 193, 195, 196, 199, 207, 210, 211, 212, 213, 234, 236, 237, 241, 254, 256, 269, 278, 287, 290, 292, 295], "itself": [10, 15, 80, 81, 82, 83], "j": [6, 93, 136, 153, 177, 178, 179, 180, 181, 182, 188, 189, 191, 192, 274, 280, 286, 288], "jie": 75, "jk": 226, "join": [3, 270], "json": 213, "k": [15, 95, 156, 172, 178, 179, 181, 182, 188, 191, 192, 225, 226, 235, 238, 270], "k_d": [97, 158, 190, 193], "k_h": [96, 97, 157, 158, 189, 190, 193], "k_w": [96, 97, 157, 158, 189, 190, 193], "kaim": [75, 141, 142, 145, 146], "kaiming_norm": 140, "kaiming_uniform": 140, "karen": 75, "kashif": 5, "keep": [78, 150, 199, 212, 278], "keep_grad": [79, 216, 217, 218, 220, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 285], "keep_var": 78, "keepdim": [254, 255, 256, 263, 268], "kei": [75, 78, 80, 82, 84, 196], "kept": [255, 263, 268], "kernel": [31, 32, 33, 34, 63, 64, 65, 66, 67, 73, 75, 95, 96, 97, 99, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 137, 156, 157, 158, 185, 186, 187, 189, 190, 193], "kernel_s": [63, 64, 65, 66, 81, 84, 123, 124, 125, 127, 128, 129, 133, 134, 135, 137, 156, 157, 158, 178, 179, 188, 189, 190, 191, 192, 193], "keyerror": 78, "keyword": [22, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 78, 168], "kj": [225, 227], "known": 75, "krizhevski": 75, "kroneck": [93, 153], "kwarg": [22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 78, 168, 213], "l": [10, 17, 95, 102, 120, 123, 127, 133, 136, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185], "l2": [198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "l_": [95, 120, 123, 127, 156, 185, 188, 191], "l_out": [95, 123, 127], "label": [4, 5, 6, 25, 171, 172, 175], "lambd": 198, "lambda": [12, 91, 151, 198, 202], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 156, 167, 188, 191], "larg": [0, 3, 17, 36, 37, 38, 41, 54, 55, 75, 173, 195, 198, 201, 202, 203, 206, 207, 208, 212], "larger": [35, 63, 80, 82, 95, 96, 97, 99, 198, 228, 275, 286, 288, 293], "largest": 254, "last": [1, 93, 119, 153, 226, 227, 270, 290, 292], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 84, 93, 109, 116, 118, 119, 133, 134, 135, 136, 137, 141, 142, 145, 146, 153, 156, 157, 158, 167, 168, 169, 175, 183, 188, 189, 190, 191, 192, 193, 195, 221, 275, 285], "layer1": 213, "layer2": 213, "layer_group": 81, "layer_norm": [106, 117, 183], "layer_sequ": [81, 84], "layernorm": [166, 184], "layernormmodel": 183, "lead": [81, 84, 148, 180, 181, 182, 183, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221], "leaf": 222, "leaki": [89, 149], "leaky_relu": [88, 106, 149], "leakyrelu": [155, 166], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 46, 47, 48, 49, 50, 51, 52, 73, 74, 75, 80, 81, 82, 83, 90, 93, 136, 147, 149, 150, 153, 156, 157, 158, 161, 162, 163, 164, 167, 169, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 219, 284, 285, 295], "learnabl": [77, 78, 79, 116, 118, 119, 133, 134, 135, 156, 157, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 195], "least": [17, 18, 20, 266], "lecun": [6, 75], "left": [15, 16, 17, 20, 87, 93, 148, 153, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 191, 192, 193, 286, 288], "leftarrow": 204, "len": [0, 1, 2, 3, 274], "lenet": [30, 32, 33, 34, 75], "lenet_1": 75, "lenet_4": 75, "lenet_5": 75, "length": [81, 95, 102, 120, 123, 127, 156, 168, 177, 180, 185, 188, 191, 275, 287], "leq": [173, 205, 232, 248], "lerp": 131, "less": [0, 86, 89, 112, 147, 149, 172, 173, 175, 248], "let": 12, "level": [8, 27], "leverag": [19, 26, 29, 47, 48, 49, 50, 51, 52, 75, 137, 195], "li": 75, "librari": [3, 8, 9, 78, 195, 196, 197, 213, 214, 221, 222, 295], "lightweight": [8, 39, 56, 137], "like": [8, 27, 47, 48, 49, 50, 51, 52, 64, 65, 66, 75, 77, 78, 81, 84, 95, 145, 146, 151, 160, 177, 178, 179, 180, 181, 182, 210, 211, 214, 269, 285, 295], "likelihood": [115, 172, 175], "limit": [76, 199, 248], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 53, 76, 80, 81, 82, 84, 86, 87, 89, 90, 91, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 167, 168, 171, 172, 173, 174, 175, 177, 180, 183, 188, 189, 190, 191, 192, 193, 213, 238], "linearli": 173, "list": [0, 1, 31, 35, 46, 53, 63, 68, 76, 77, 79, 80, 81, 82, 83, 119, 137, 168, 183, 196, 214, 216, 217, 218, 220, 222, 235, 236, 237, 239, 240, 241, 242, 267, 278, 279, 282, 284], "listdir": 3, "liter": [35, 110, 111, 112, 114, 115, 131, 133, 134, 135, 137, 141, 142, 156, 157, 158, 171, 172, 173, 174, 175, 274], "ln": 232, "load": [3, 4, 5, 6, 77, 78, 79, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213], "load_state_dict": [78, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "loader": [1, 2, 3], "local": [75, 99, 156], "locat": [75, 131], "log": [115, 171, 172, 175, 243], "log_softmax": 175, "logarithm": [232, 252, 253], "logic": [3, 185, 186, 187, 195, 196], "logit": [21, 73, 93, 153, 172], "logsoftmax": [172, 175], "long": [204, 267], "loop": [1, 81, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "loss": [8, 17, 80, 81, 82, 83, 84, 93, 110, 111, 112, 114, 115, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "low": [8, 27, 217, 220], "lower": [10, 144, 198, 206, 207, 208, 220], "lowest": 217, "lr": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 215, 243, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "m": [68, 80, 81, 84, 189, 190, 192, 193, 201, 202, 203, 204, 205, 238], "m_": [201, 202, 203, 204, 205], "m_t": [204, 205], "machin": [3, 5, 6, 8, 17, 136, 201, 211, 219], "magnitud": [206, 207, 295], "mai": [3, 8, 12, 14, 17, 81, 83, 132, 173, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 221, 289, 295], "main": [8, 18, 27, 81, 235, 238], "maintain": [17, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 77, 78, 80, 81, 82, 84, 91, 141, 142, 145, 146, 147, 148, 151, 160, 161, 162, 163, 164, 177, 178, 179, 180, 181, 182, 201, 206, 286, 289, 293], "make": [1, 3, 8, 23, 27, 31, 35, 75, 81, 84, 152, 172, 173, 183, 189, 192, 195, 200, 201, 202, 203, 211, 213, 221, 222, 227, 274, 284, 295], "manag": [8, 78, 80, 81, 82, 83, 84, 195, 197, 210, 212, 213, 221], "manhattan": 16, "mani": 76, "manipul": [8, 80, 82, 295], "manner": [81, 84], "manual": [110, 111, 115, 171, 172, 175, 212], "map": [35, 46, 56, 63, 75, 78, 92, 94, 136, 152, 154], "mask": [77, 160, 161, 162, 163, 164], "match": [19, 78, 81, 84, 110, 112, 114, 119, 133, 134, 135, 196, 252, 277, 278, 281, 282, 287, 295], "math": [249, 259, 264], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 225, 226, 227, 231, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293], "mathcal": [141, 143, 145, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183], "mathemat": [14, 133, 134, 135, 288, 290, 291, 292], "mathrm": 17, "matmul": 243, "matric": [9, 11, 12, 14, 17, 19, 20, 225, 226, 227, 238, 274], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 99, 107, 168, 169, 195, 225, 274], "matrix_pow": 13, "matthew": 75, "max": [16, 53, 68, 90, 127, 128, 129, 150, 191, 192, 193, 203, 228, 243, 248], "max_pool": [191, 192, 193], "max_pool1d": [106, 126], "max_pool2d": [106, 126], "max_pool3d": [106, 126], "max_valu": 248, "maxim": 3, "maximum": [16, 150, 191, 192, 193, 201, 203, 243, 248, 254, 291], "maxpool": [21, 73], "maxpool1d": [166, 194], "maxpool1dmodel": 191, "maxpool2d": [81, 84, 157, 166, 194], "maxpool2dmodel": 192, "maxpool3d": [158, 166, 194], "maxpool3dmodel": 193, "mean": [5, 6, 18, 76, 77, 91, 95, 96, 97, 100, 110, 111, 112, 114, 115, 116, 118, 133, 134, 135, 143, 147, 148, 149, 150, 151, 152, 154, 158, 160, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 201, 202, 203, 204, 205, 206, 210, 218, 243, 248, 252, 253, 254, 256, 259, 261, 263, 266, 267, 268, 284, 287, 295], "meaning": [84, 214], "measur": [171, 172, 174, 175], "mechan": [8, 53, 63, 67, 83, 107], "membership": 171, "memori": [2, 3, 212, 236, 237], "meshgrid": 273, "method": [3, 8, 9, 14, 53, 80, 81, 82, 83, 84, 110, 111, 112, 114, 115, 141, 142, 145, 146, 171, 172, 173, 174, 175, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 221], "middl": 211, "might": 195, "min": [229, 243, 248], "min_valu": 248, "mind": [0, 3, 8, 81, 84, 212], "mini": 1, "minim": [4, 8, 84, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 197], "minimalist": 8, "minimum": [243, 248, 256], "minu": 152, "mirror": [240, 242], "mismatch": [78, 195, 196], "miss": [78, 195], "mitig": [89, 147, 149, 151, 177, 178, 179], "mlp": 137, "mnist": [4, 5, 7, 32, 33], "mnist_train": [4, 6], "mode": [8, 104, 116, 118, 131, 141, 142, 160, 161, 162, 163, 164, 275], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 132, 133, 134, 135, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 221, 284, 285, 295], "moder": 57, "modern": 75, "modif": [84, 212], "modifi": [22, 35, 74, 80, 81, 82, 83, 139, 141, 142, 143, 144, 145, 146, 160, 210, 212, 219, 272, 283], "modul": [5, 6, 8, 21, 22, 23, 26, 27, 28, 29, 31, 35, 46, 53, 63, 68, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 133, 134, 135, 136, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 221, 285, 295], "modular": [3, 8, 75, 78, 81, 84, 195, 295], "moduledict": [81, 82, 84, 85], "modulelist": [83, 84, 85], "moment": [201, 202, 203, 204, 205], "momentum": [116, 118, 133, 134, 135, 177, 178, 179, 180, 181, 182, 198, 204, 206, 208], "momentum_decai": 204, "moor": 17, "more": [3, 4, 5, 8, 12, 35, 42, 80, 81, 84, 147, 161, 162, 163, 164, 195, 196, 197, 198, 199, 202, 203, 206, 207, 208, 218, 227, 266, 280, 295], "most": [9, 75, 192, 285, 286, 295], "move": [198, 206], "mse": [112, 114, 173, 174], "mse_loss": [106, 113], "mseloss": [166, 176], "mu": [143, 177, 178, 179, 180, 181, 182, 183, 268], "mu_c": 287, "mu_i": [180, 181, 182], "much": 295, "mul": 243, "multi": [3, 4, 28, 63, 64, 65, 66, 75, 93, 111, 115, 137, 153, 172, 175, 255, 263, 268], "multidimension": [216, 220, 236], "multipl": [1, 3, 8, 9, 15, 19, 21, 35, 53, 67, 82, 83, 84, 99, 131, 132, 136, 137, 160, 161, 162, 163, 164, 172, 175, 195, 211, 216, 217, 218, 220, 225, 230, 236, 237, 284, 289, 295], "multipli": [15, 83, 109, 169, 207, 230, 231], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 76, 78, 80, 81, 82, 83, 84, 119, 160, 161, 162, 163, 164, 175, 196, 212, 266, 270, 272, 275, 277, 278, 280, 281, 283, 286, 287, 288, 289, 290, 292], "my_simple_model": 213, "mymodel": [78, 79, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "myoptim": [196, 197], "n": [15, 16, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 75, 80, 81, 84, 95, 96, 97, 99, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 141, 143, 145, 156, 157, 158, 163, 164, 167, 169, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 238, 255, 266, 268], "n1": 16, "nabla_": [199, 200, 201, 202, 203, 204, 205, 207], "nabla_t": 205, "nadam": 209, "name": [75, 76, 78, 80, 82, 84, 213, 214], "nan": [18, 20], "natur": [17, 75, 156, 167, 188, 191, 232, 252, 253], "ndarrai": [77, 79, 214, 222, 235, 237, 240, 242, 269], "ndim": [18, 20, 79, 222], "ne": 15, "nearest": 131, "necessari": [4, 5, 6, 17, 212, 272, 283], "need": [2, 4, 81, 82, 83, 93, 167, 195, 212, 236, 237, 284, 285, 295], "neg": [15, 17, 20, 86, 115, 132, 147, 149, 150, 151, 172, 175, 207, 270], "negative_slop": [89, 149], "neglect": 83, "neighbor": 131, "neq": 16, "nest": [76, 81, 84, 195], "nestedmodel": 76, "nesterov": 204, "net": [73, 75], "network": [3, 4, 8, 21, 22, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 63, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 116, 132, 136, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 206, 208, 220, 221, 222, 234, 239, 241, 254, 256, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "neural": [3, 4, 8, 21, 22, 27, 34, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 116, 132, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 206, 208, 220, 221, 222, 234, 239, 241, 254, 256, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "neuralnetwork": 150, "neuron": 149, "never": 289, "new": [78, 79, 86, 87, 89, 90, 91, 92, 94, 107, 109, 131, 137, 141, 142, 143, 144, 145, 146, 196, 213, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 275, 277, 278, 280, 281, 282, 283], "next": [84, 284], "nll": 115, "nll_loss": [106, 113], "nllloss": [166, 176], "nn": [5, 6, 8, 21, 23, 27, 31, 35, 46, 53, 59, 60, 61, 62, 63, 67, 68, 73, 76, 85, 88, 98, 105, 108, 113, 117, 126, 130, 138, 140, 155, 159, 165, 166, 170, 176, 184, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 285, 295], "no_grad": 210, "node": 222, "nois": [20, 221], "non": [12, 15, 17, 20, 83, 87, 89, 90, 141, 142, 147, 148, 149, 150, 151, 152, 154, 160, 161, 162, 163, 164, 201, 202, 212, 232, 248], "none": [0, 1, 2, 5, 6, 23, 27, 31, 35, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293], "norm": [9, 13, 203], "normal": [5, 6, 53, 87, 91, 93, 94, 116, 118, 119, 133, 134, 135, 140, 141, 145, 148, 151, 153, 160, 177, 178, 179, 180, 181, 182, 183, 206, 218, 221, 284, 294, 295], "normalized_shap": [119, 183], "note": [95, 160], "noth": [100, 101, 102, 103], "notimplementederror": [2, 78, 196], "notin": 248, "nov": 75, "novel": [5, 75], "np": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 77, 79, 136, 172, 175, 214, 222, 227, 234, 235, 238, 239, 241, 242, 253, 269, 285], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 153, 172, 175], "num_featur": [84, 133, 134, 135, 177, 178, 179, 180, 181, 182], "num_paramet": 83, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 81, 83, 84, 95, 96, 97, 99, 102, 103, 104, 107, 109, 111, 115, 116, 118, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 152, 156, 157, 158, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 198, 216, 219, 220, 222, 232, 234, 236, 238, 254, 255, 256, 267, 268, 270, 272, 275, 277, 278, 279, 281, 283, 287, 289, 290, 292, 295], "numer": [14, 17, 110, 111, 116, 118, 119, 133, 134, 135, 171, 172, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 203, 204, 205, 206, 214, 224, 234, 239, 241], "numpi": [8, 77, 79, 172, 175, 214, 222, 227, 235, 238, 253, 266, 269, 275, 277, 281, 285, 295], "o": [3, 190, 193, 239, 240], "object": [1, 3, 9, 63, 75, 78, 82, 83, 174, 195, 212, 223, 224, 228, 229, 230, 233, 269], "observ": 201, "obtain": 1, "occur": [132, 212, 213, 270], "occurr": 15, "odot": [160, 161, 162, 163, 164], "off": 210, "offer": [4, 8, 195, 197, 221, 295], "offset": 238, "often": [15, 44, 45, 95, 96, 97, 99, 172, 175, 234, 241, 285, 289, 293, 295], "older": 204, "onc": 212, "one": [0, 59, 60, 61, 62, 67, 83, 84, 93, 95, 109, 123, 127, 133, 134, 135, 151, 152, 153, 156, 162, 172, 175, 177, 180, 188, 191, 196, 211, 214, 218, 233, 240, 254, 256, 271, 276, 280, 285], "ones": [107, 109, 156, 157, 158, 169, 177, 178, 179, 180, 181, 182, 183, 195, 238, 240, 243], "ones_lik": 243, "onli": [8, 76, 131, 150, 160, 161, 162, 163, 164, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 191, 192, 193, 207, 210, 234, 248, 254, 256, 266, 275, 276, 278, 279], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 53, 54, 55, 56, 57, 58, 77, 78, 81, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 104, 107, 109, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 252, 253, 254, 255, 256, 259, 261, 263, 266, 268, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 293], "operatornam": [15, 17], "opposit": 198, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 77, 79, 82, 83, 99, 156, 157, 158, 195, 212], "optimizer_st": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 93, 96, 97, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 153, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 196, 198, 206, 208, 216, 217, 218, 220, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 255, 256, 263, 267, 268, 269, 270, 274, 277, 279, 280, 285, 289, 290, 292], "ord": 16, "order": [1, 3, 16, 20, 80, 81, 82, 83, 84, 267, 284], "ordered_dict": 84, "ordereddict": [78, 80, 81, 84], "organ": [80, 81, 82, 84, 213], "orient": 295, "origin": [25, 34, 100, 132, 136, 154, 275, 276, 277, 278, 281, 282, 293], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [198, 206, 208], "other": [2, 3, 8, 14, 25, 29, 31, 34, 77, 78, 81, 84, 141, 142, 160, 195, 196, 210, 212, 221, 222, 234, 236, 239, 241, 266, 274, 295], "otherwis": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 86, 89, 90, 91, 93, 147, 149, 150, 151, 153, 161, 162, 163, 164, 173, 188, 189, 190, 191, 192, 193, 196, 207, 213, 228, 229, 254, 256], "otim": [17, 107, 167], "out": [0, 3, 4, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 141, 142, 145, 146, 156, 157, 158, 160, 161, 162, 163, 164, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283], "out_channel": [31, 81, 84, 133, 134, 135, 137, 156, 157, 158, 178, 179, 188, 189, 190, 191, 192, 193, 195], "out_featur": [80, 81, 84, 107, 109, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 180, 183, 188, 189, 190, 191, 192, 193], "outcom": [289, 290, 292], "outer": 243, "outlier": [112, 173], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 109, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 242, 252, 253, 254, 255, 256, 259, 261, 263, 266, 267, 268, 274, 275, 277, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "output_height": 99, "output_lay": [81, 84], "output_s": [81, 120, 121, 122, 185, 186, 187], "output_width": 99, "outsid": 0, "over": [0, 1, 2, 3, 9, 63, 73, 78, 81, 83, 93, 120, 121, 122, 136, 153, 156, 157, 158, 172, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 216, 220, 254, 255, 256, 263, 266, 268, 289, 290, 292], "overdetermin": 17, "overfit": [1, 21, 73, 101, 104, 161, 162, 163, 164, 198, 201, 206, 208], "overhead": 136, "overrid": [2, 3], "overridden": [78, 196], "overwrit": [80, 82], "own": [4, 80, 81, 82, 83, 95, 96, 97, 146, 195, 287], "p": [16, 17, 79, 82, 83, 100, 101, 102, 103, 104, 160, 161, 162, 163, 164, 188, 191, 192, 289, 290, 292, 295], "p_d": [190, 193], "p_h": [189, 190, 193], "p_w": [189, 190, 193], "packag": [2, 3, 4, 9, 75, 195, 197, 213, 219, 221, 285, 295], "pad": [31, 81, 84, 95, 96, 97, 99, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 137, 156, 157, 158, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 273], "pad_after_dim1": 275, "pad_after_dim2": 275, "pad_before_dim1": 275, "pad_before_dim2": 275, "pad_width": 275, "padding_height": 99, "padding_width": 99, "pair": 107, "paper": 24, "parallel": [1, 3, 63, 75], "param": [78, 79, 82, 83, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "param1": 78, "param_dict": 82, "param_group": [196, 197], "param_groups_setup": 196, "param_list": 83, "param_s": 213, "paramet": [0, 2, 8, 32, 33, 34, 75, 78, 195, 196, 197, 214, 221, 295], "parameterdict": 85, "parameterlist": 85, "parent": 195, "part": [77, 78, 146, 195, 210, 212, 221, 234, 235, 238, 239, 240, 241, 242, 285, 295], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "particip": [79, 285], "particular": [80, 82], "particularli": [8, 17, 47, 48, 49, 50, 51, 52, 81, 82, 83, 84, 93, 109, 133, 134, 135, 153, 169, 172, 175, 180, 181, 182, 183, 202, 210, 213, 284], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 131, 133, 134, 135, 136, 137, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 195, 214, 222, 255, 263, 266, 267, 268, 270, 272, 276, 278, 279, 283, 285, 295], "past": [198, 199, 201, 206], "patch": [99, 189], "path": [3, 5, 6], "pathwai": 75, "pattern": [75, 90, 136, 150, 156, 157, 158], "penal": [198, 206, 208], "penalti": [199, 200, 201, 202, 203, 204, 205], "penros": 17, "per": [1, 47, 48, 49, 50, 51, 52, 64, 65, 66, 120, 180, 181, 182, 183, 185], "perform": [3, 8, 9, 10, 17, 21, 27, 28, 29, 31, 32, 33, 34, 43, 59, 60, 61, 62, 63, 68, 73, 75, 78, 79, 83, 87, 95, 96, 97, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 210, 212, 219, 221, 223, 224, 227, 230, 233, 252, 254, 256, 263, 267, 284, 286, 288, 293, 295], "permut": 267, "persist": [77, 216, 217, 218, 220, 236, 237], "perturb": [12, 19, 20, 295], "phi": [87, 148], "pi": [87, 148, 249, 259, 264], "pil": [285, 295], "pinv": 13, "pioneer": 75, "pipelin": [5, 6, 221, 284, 285, 287], "pixel": [5, 6, 131, 287, 289], "place": [139, 141, 142, 143, 144, 145, 146], "placehold": [78, 168], "plai": [214, 221], "plot": 274, "point": [4, 132, 210], "pool": [21, 31, 32, 33, 34, 35, 46, 53, 63, 68, 73, 75, 120, 121, 122, 123, 124, 125, 127, 128, 129, 136, 137, 157, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193, 254, 256], "pool1": 84, "pool2": 84, "poorli": 14, "popul": 78, "popular": [4, 75], "portion": 295, "pose": 17, "posit": [1, 10, 15, 78, 84, 132, 147, 149, 150, 151, 188, 189, 190, 191, 192, 193, 207, 211, 232, 277, 281, 288], "possibl": [8, 295], "potenti": [17, 168, 206, 279], "power": [8, 15, 75, 136, 211, 212, 243, 284, 285, 295], "pp": 75, "practic": [17, 172, 175], "practition": 295, "pre": [36, 40, 41], "preactbottleneck": [36, 40, 41], "preced": [79, 222], "preconfigur": [28, 29], "predefin": [4, 75, 81, 151], "predict": [171, 172, 174, 175], "prefix": [78, 213], "prepar": [3, 211, 275, 277, 281, 285, 295], "prepend": 78, "preprint": 75, "preprocess": [3, 4, 99, 132, 221, 284, 285, 295], "present": [171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 189], "preserv": [100, 132, 160, 234, 235, 238, 239, 240, 241, 242, 255, 263, 268], "preset": 4, "prevent": [1, 80, 81, 82, 83, 84, 101, 104, 161, 162, 163, 164, 171, 172, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212], "previou": [198, 207, 212], "previous": 201, "primari": [8, 214], "primarili": 84, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293], "priorit": 137, "probabilist": 221, "probabl": [25, 87, 93, 100, 101, 102, 103, 104, 110, 148, 153, 160, 161, 162, 163, 164, 171, 172, 175, 289, 290, 292, 295], "problem": [17, 18, 20, 75, 89, 147, 149, 205], "proceed": 75, "process": [2, 3, 4, 15, 18, 20, 21, 28, 35, 63, 73, 75, 83, 95, 96, 97, 118, 132, 133, 134, 135, 136, 137, 151, 154, 156, 158, 167, 177, 178, 179, 180, 181, 182, 183, 188, 190, 191, 193, 198, 214, 274, 285, 286, 287, 288, 293, 295], "produc": [21, 73, 76, 120, 121, 122, 136, 156, 157, 158, 185, 186, 187, 219, 221], "product": [8, 18, 20, 152, 167, 183, 195, 225, 226, 230, 231], "program": [210, 221], "progress": 200, "project": [18, 20], "projector": 17, "promin": [188, 190, 191, 192, 193], "promot": [84, 172, 175, 195], "propag": [11, 12, 14, 17, 18, 19, 20, 78, 84, 107, 109, 131, 136, 189, 190, 206, 207, 225, 226, 227, 231, 254, 256, 274, 275, 278, 282], "properli": [0, 83, 93, 153, 195], "properti": [9, 11, 14, 15, 87, 91, 100, 148, 151, 160, 200, 205], "proport": [5, 6, 268], "proportion": 293, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 23, 24, 25, 27, 31, 35, 68, 74, 75, 78, 80, 81, 82, 83, 87, 109, 121, 122, 132, 171, 172, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 206, 208, 210, 212, 214, 219, 221, 222, 227, 234, 240, 254, 256, 267, 269, 277, 279, 281, 295], "pseudo": [14, 17], "purpos": [216, 220, 234, 239, 241], "python": 214, "pytorch": 269, "q": 18, "qr": 13, "quad": [17, 171, 172, 173, 174, 175, 191, 192, 193, 223, 224, 228, 229, 230, 233, 286], "quadrat": 173, "quotient": 224, "r": [18, 289, 290, 291, 292], "r_t": 205, "radam": 209, "rais": [0, 1, 2, 78, 195, 196, 232], "rand": [215, 221], "randint": [215, 221], "randn": [21, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 136, 137, 195, 215, 219, 221], "random": [1, 2, 3, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 136, 137, 288, 289, 290, 291, 292, 295], "random_integ": 221, "random_tensor": 221, "randomcrop": [294, 295], "randomgrayscal": [294, 295], "randomhorizontalflip": [294, 295], "randomli": [1, 100, 101, 102, 103, 104, 132, 160, 161, 162, 163, 164, 288, 289, 290, 291, 292, 295], "randomnoisedataset": [0, 1, 2], "randomrot": [294, 295], "randomverticalflip": 294, "rang": [0, 1, 9, 35, 43, 75, 83, 92, 94, 95, 96, 111, 115, 146, 152, 154, 198, 206, 208, 217, 245, 246, 248, 287, 291, 295], "rank": 17, "rasul": 5, "rate": [196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "rather": [5, 82, 83, 202, 278], "ratio": [53, 136, 137, 293], "ravel": 273, "raw": [93, 153, 172, 214], "re": [79, 212], "readabl": [80, 81, 82, 84, 195, 214], "readi": [3, 8, 59, 60, 61, 62, 67, 75], "real": [17, 20, 152], "rearrang": 99, "recalibr": [54, 56, 57, 59, 60, 61, 62, 75, 136], "receiv": [191, 192, 193, 275], "recent": 206, "recept": [63, 67, 75, 137], "reciproc": [17, 243, 253, 261], "recognit": [34, 75, 157], "rectangular": 238, "rectif": 205, "rectifi": [89, 90, 149, 150, 205], "recurr": [81, 183], "recurs": [76, 78], "red": 289, "reduc": [21, 35, 46, 63, 68, 73, 75, 136, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 204, 207, 212, 214, 254, 255, 256, 263, 268, 289], "reduct": [20, 53, 110, 111, 112, 114, 115, 136, 137, 171, 172, 173, 174, 175, 254, 256], "reevalu": 196, "refer": [4, 8, 78, 221, 235, 238, 270], "reflect": 210, "regardless": [17, 276], "region": [97, 120, 121, 122, 131, 186, 187, 275, 286, 295], "regist": [44, 45, 47, 48, 49, 50, 51, 52, 77, 78, 79, 83, 195, 213], "register_buff": 77, "register_model": [22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 69, 70, 71, 72, 74], "register_paramet": 78, "registr": [78, 195], "registri": [47, 48, 49, 50, 51, 52, 213], "registry_path": 213, "regress": [4, 114, 173, 174], "regular": [17, 21, 25, 73, 104, 161, 162, 163, 164, 198, 199, 200, 203, 204, 205, 206, 208], "relat": [212, 238, 239], "relationship": 293, "relev": [131, 198, 206, 208], "reli": 212, "reliabl": [5, 6], "reliant": [161, 162, 163, 164], "relu": [8, 21, 53, 68, 73, 75, 76, 80, 81, 82, 84, 86, 88, 89, 106, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 149, 155, 156, 157, 158, 166, 167, 168, 169], "relu1": 84, "relu2": 84, "relu3": 84, "remain": [5, 6, 77, 119, 160, 161, 162, 163, 164, 207], "rememb": 221, "remov": [213, 279], "rep": 281, "repeat": [273, 274, 281], "repetit": [277, 281], "replac": [5, 221, 289], "repres": [5, 14, 16, 20, 31, 78, 79, 84, 107, 109, 116, 118, 119, 156, 157, 158, 167, 169, 172, 175, 183, 196, 197, 198, 204, 205, 206, 207, 208, 214, 223, 224, 230, 233, 235, 255, 266, 267, 268, 274, 286, 288, 290, 291, 292, 293], "represent": [44, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 67, 75, 136, 189, 192, 196], "reproduc": [216, 217, 218, 219, 220, 221, 295], "requir": [2, 3, 4, 8, 47, 48, 49, 50, 51, 52, 63, 77, 80, 84, 86, 87, 89, 90, 91, 92, 94, 107, 109, 131, 136, 137, 146, 168, 172, 175, 195, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 293], "requires_grad": [77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 99, 107, 109, 131, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285], "rescal": [110, 111, 115, 171, 172, 175], "research": 195, "reset": [79, 219, 222], "reshap": [8, 53, 109, 157, 158, 211, 214, 273, 276], "residu": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 75], "residualblock": 35, "resili": 207, "resiz": [131, 284, 294, 295], "resnet": [27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 63, 64, 65, 66, 75, 136], "resnet_1001": 75, "resnet_101": 75, "resnet_152": 75, "resnet_18": 75, "resnet_200": 75, "resnet_269": 75, "resnet_34": 75, "resnet_50": 75, "resnet_arg": 63, "resnext": [30, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 75], "resnext_101_32x16d": 75, "resnext_101_32x32d": 75, "resnext_101_32x4d": 75, "resnext_101_32x8d": 75, "resnext_101_64x4d": 75, "resnext_50_32x4d": 75, "resolut": [59, 60, 61, 62, 67], "resourc": 212, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 31, 68, 77, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 248, 252, 253, 254, 255, 256, 259, 261, 263, 266, 267, 268, 274, 275, 277, 281, 289], "respons": [59, 60, 61, 62, 75, 80, 197], "restor": [136, 212], "restructur": 278, "result": [10, 14, 15, 17, 75, 78, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 107, 109, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 137, 153, 195, 196, 210, 212, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 295], "resum": 197, "retain": [79, 222, 234, 241, 254, 255, 256, 263, 268, 285], "retent": 285, "retriev": [0, 2, 80, 82, 83], "return": [0, 1, 2, 3, 5, 6, 8, 27, 31, 53, 77, 78, 80, 81, 82, 83, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 284, 295], "reus": 285, "reusabl": [84, 195, 284], "revers": [8, 84, 267, 290, 292], "revert": 212, "revolution": 75, "rgb": [24, 25, 26, 28, 29], "rho": 199, "rho_": 205, "rho_t": 205, "right": [15, 16, 17, 19, 20, 87, 93, 148, 153, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 191, 192, 193, 286], "risk": 214, "rmsprop": 209, "rob": 75, "robust": [132, 160, 161, 162, 163, 164, 173, 195, 199, 288, 289, 291, 295], "roland": 5, "role": [214, 221, 295], "root": [4, 5, 6, 200, 206, 261], "rotat": [106, 130, 291, 295], "rotated_imag": 132, "rout": [191, 192, 193], "routin": 8, "row": [11, 12, 14, 19, 109, 238, 274, 283], "rprop": 209, "rule": [14, 15, 211, 223, 224, 228, 229, 230, 232, 233], "run": [8, 77, 116, 118, 133, 134, 135, 177, 178, 179, 180, 181, 182, 199, 212, 219, 221], "running_mean": [77, 116, 118, 177, 178, 179, 180, 181, 182], "running_var": [116, 118, 177, 178, 179, 180, 181, 182], "runtim": [81, 84, 195], "s_": 207, "s_d": [190, 193], "s_h": [189, 190, 193], "s_w": [189, 190, 193], "sain": 75, "same": [11, 12, 14, 15, 19, 93, 100, 101, 102, 103, 104, 116, 118, 119, 121, 122, 132, 133, 134, 135, 137, 156, 157, 158, 160, 161, 162, 163, 164, 168, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 207, 219, 221, 227, 237, 240, 242, 252, 254, 255, 256, 270, 272, 276, 278, 279, 280, 283, 287], "sampl": [0, 1, 2, 3, 5, 6, 8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 59, 60, 61, 62, 67, 120, 121, 122, 141, 142, 143, 144, 145, 146, 160, 161, 162, 163, 164, 167, 169, 172, 175, 183, 185, 186, 187, 218, 221, 286, 288, 290, 291, 292, 293], "satisfi": [10, 12, 19], "satur": [147, 295], "save": [2, 77, 79, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213], "scalabl": [3, 47, 48, 49, 50, 51, 52, 75, 195], "scalar": [11, 16, 110, 111, 112, 114, 115, 214], "scale": [12, 17, 28, 32, 33, 34, 36, 37, 38, 41, 54, 55, 63, 64, 65, 66, 75, 86, 91, 93, 116, 118, 119, 136, 137, 145, 146, 147, 149, 151, 152, 153, 154, 160, 161, 162, 163, 164, 172, 177, 178, 179, 180, 181, 182, 183, 198, 200, 201, 202, 214, 221, 268, 293], "scenario": [82, 83, 183, 202, 203, 285, 289], "schedul": 198, "scientif": 211, "score": [35, 46, 63, 93, 172], "scratch": 8, "script": 221, "se": [54, 55, 56, 57, 58, 59, 60, 61, 62, 75], "se_resnet_101": 75, "se_resnet_152": 75, "se_resnet_18": 75, "se_resnet_34": 75, "se_resnet_50": 75, "se_resnext_101_32x4d": 75, "se_resnext_101_32x8d": 75, "se_resnext_101_64x4d": 75, "se_resnext_50_32x4d": 75, "seamless": [0, 1, 3, 4, 195, 221], "seamlessli": [3, 4, 9, 79, 81, 84, 195, 214, 295], "second": [12, 81, 82, 107, 136, 167, 201, 202, 203, 204, 205, 211, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 272, 274, 292], "section": 227, "see": [8, 227], "seed": [215, 216, 217, 218, 220, 221, 295], "seen": 199, "select": [63, 64, 65, 66, 67, 75, 131, 136, 137, 191, 193, 263], "selectivekernel": 138, "self": [0, 1, 2, 3, 8, 21, 23, 27, 31, 53, 68, 73, 76, 77, 78, 79, 80, 81, 82, 83, 91, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 274, 284, 285], "selu": [88, 100, 106, 155, 160, 166], "selunetwork": 151, "semodul": 138, "senet": [30, 54, 55, 56, 57, 58, 59, 60, 61, 62, 75], "sensit": [112, 173, 177, 178, 179], "sentiment": 4, "separ": [0, 95, 96, 97, 180, 181, 182], "sequenc": [15, 35, 46, 63, 80, 82, 95, 234, 270, 272, 275, 277, 280, 281, 283, 284], "sequenti": [21, 27, 31, 53, 68, 73, 76, 80, 81, 85, 95, 133, 134, 135, 168, 284, 295], "seri": [23, 32, 33, 63, 95, 133, 156, 188, 191], "serial": [77, 78, 197], "serv": [3, 5, 27, 53, 68, 78, 80, 81, 82, 83, 84, 195, 207, 285], "set": [3, 4, 5, 6, 44, 45, 59, 60, 61, 62, 67, 76, 79, 83, 95, 96, 97, 149, 150, 151, 156, 157, 158, 160, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 196, 201, 202, 206, 216, 217, 218, 219, 220, 221, 222, 234, 236, 237, 241, 242, 248, 254, 256, 269, 285, 289, 295], "setup": [4, 8, 47, 48, 49, 50, 51, 52], "sever": [17, 156, 157, 158, 188, 189, 190, 191, 192, 193, 212, 284, 295], "sgd": [8, 198, 205, 209], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 27, 31, 35, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 211, 214, 216, 217, 218, 220, 221, 222, 225, 236, 237, 238, 239, 240, 241, 242, 248, 253, 254, 255, 256, 259, 261, 263, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295], "shapelik": 217, "share": 75, "shen": 136, "shift": [116, 118, 119, 177, 178, 179, 180, 181, 182, 183], "shorthand": 227, "should": [31, 77, 212, 216, 217, 218, 220, 236, 237, 245, 246, 266, 275, 284], "show": [210, 213], "showcas": 8, "shown": 219, "shrink": 199, "shuffl": [1, 2, 3], "side": [19, 81, 84, 95, 96, 97, 123, 124, 125, 127, 128, 129, 133, 134, 135, 156, 157, 158, 188, 189, 190, 191, 192, 193, 212], "sigma": [17, 136, 141, 143, 145, 152, 177, 178, 179, 180, 181, 182, 183, 267], "sigma_c": 287, "sigma_i": 17, "sigmoid": [88, 106, 136, 141, 142, 145, 146, 155, 166, 171], "sigmoidnetwork": 152, "sign": [15, 173, 207, 243], "signal": [133, 156, 157, 158, 177, 180, 188, 189, 190, 191, 192, 193], "signific": 212, "significantli": [46, 75, 136, 284], "sim": [160, 161, 162, 163, 164], "similar": [8, 141, 142, 227, 253, 269, 275], "similarli": [20, 266], "simonyan": 75, "simpl": [3, 4, 8, 76, 84, 95, 96, 97, 107, 109, 123, 124, 125, 127, 128, 129, 148, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 225, 226, 231, 284], "simplebinaryclassificationmodel": 171, "simpleclassificationmodel": [172, 175], "simplegelumodel": 148, "simpleleakyrelumodel": 149, "simplemodel": [8, 76, 169, 213], "simpleregressionmodel": 174, "simplerelumodel": 150, "simpleselumodel": 151, "simplesigmoidmodel": 152, "simpletanhmodel": 154, "simpli": [210, 266, 267, 278], "simplic": [75, 150], "simplifi": [4, 32, 84, 133, 134, 135], "simul": [76, 295], "simultan": 132, "sin": [243, 249], "sinc": [15, 18, 80, 81, 82, 83, 95, 96, 97, 146, 210, 212, 218, 274, 295], "sine": [246, 259, 260], "singl": [0, 4, 15, 18, 20, 35, 93, 133, 134, 135, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 172, 183, 189, 190, 191, 192, 193, 196, 214, 220, 236, 270, 279, 287, 289, 295], "singleton": 183, "singular": [11, 14, 15, 17, 19, 20], "sinh": [243, 250, 265], "size": [0, 1, 2, 3, 20, 31, 32, 33, 34, 35, 63, 73, 75, 76, 79, 81, 95, 96, 97, 99, 102, 103, 104, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 156, 157, 158, 167, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 217, 220, 221, 222, 254, 255, 256, 263, 268, 270, 272, 279, 282, 283, 286, 288, 293, 295], "sk": [63, 64, 65, 66, 67, 75, 137], "sk_resnet_18": 75, "sk_resnet_34": 75, "sk_resnet_50": 75, "sk_resnext_50_32x4d": 75, "skblock": 63, "skip": [75, 212], "sknet": [30, 64, 65, 66, 67, 75], "slice": [107, 266], "slide": [99, 188, 190, 191, 193], "slight": 136, "slightli": 295, "slope": [89, 147, 149], "slow": [3, 205], "small": [17, 32, 33, 34, 75, 89, 110, 111, 116, 118, 119, 149, 151, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 189, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207], "smaller": [73, 75, 81, 84, 195, 200, 201, 229, 286, 288, 293], "smallest": 256, "smooth": [25, 87, 147, 148, 198, 206, 295], "smoother": 198, "so": [80, 81, 82, 83, 132, 195, 205, 236, 237, 284], "softmax": [88, 106, 137, 155, 166, 172], "softmaxmodel": 153, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [86, 101, 132, 160, 161, 162, 177, 178, 179, 180, 181, 182, 200, 201, 202, 212, 214], "sometim": 211, "sophist": [81, 84], "sourc": 221, "space": [12, 18, 20, 95, 96, 97, 99, 120, 121, 122, 133, 134, 135, 156, 157, 158, 185, 186, 187, 234, 295], "span": 4, "spars": [200, 201], "spatial": [21, 35, 46, 63, 68, 73, 75, 134, 136, 157, 158, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 274], "spatial_dim": 136, "spatio": 158, "special": [0, 1, 8, 17, 77, 78, 79, 160, 221], "specif": [4, 8, 27, 44, 45, 80, 81, 82, 83, 84, 137, 146, 160, 161, 162, 163, 164, 180, 181, 182, 195, 196, 210, 221, 236, 254, 256, 277, 281], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 65, 66, 68, 69, 70, 71, 72, 74, 76, 81, 93, 99, 104, 110, 111, 112, 114, 115, 119, 120, 121, 122, 131, 132, 136, 153, 156, 157, 158, 171, 172, 173, 174, 175, 183, 185, 186, 187, 189, 190, 191, 192, 193, 196, 214, 216, 217, 218, 219, 220, 232, 234, 235, 236, 237, 238, 239, 241, 242, 248, 254, 255, 256, 263, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 293, 295], "speech": 180, "speed": [198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "split": [4, 270, 272, 283], "springer": 75, "sqrt": [87, 141, 142, 145, 146, 148, 177, 178, 179, 180, 181, 182, 183, 199, 200, 201, 202, 204, 205, 206, 243, 245, 246], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 112, 114, 173, 174, 199, 200, 201, 206, 243, 261], "squaredataset": [0, 1, 2, 3], "squeez": [53, 56, 59, 60, 61, 62, 75, 136, 273], "stabil": [14, 17, 75, 110, 111, 116, 118, 119, 133, 134, 135, 171, 172, 177, 178, 179, 180, 181, 182, 183, 198, 199, 200, 201, 202, 203, 204, 205, 206, 287], "stabl": [141, 142, 145, 146, 160, 172, 198, 202, 203, 206, 207, 208], "stack": [84, 137, 272, 273, 283, 295], "stage": [35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66], "stage1": 53, "stage2": 53, "stage3": 53, "stage4": 53, "standard": [35, 44, 45, 87, 89, 141, 143, 145, 147, 148, 149, 160, 207, 218, 221, 227, 284, 287, 295], "start": [1, 3, 198, 200, 207, 234, 286, 288], "state": [75, 77, 78, 79, 81, 84, 196, 210, 212, 219], "state_dict": [78, 79, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "static": 84, "statist": [17, 100, 116, 118], "std": [5, 6, 143, 284, 287, 295], "stem": [27, 35, 46, 63], "stem_typ": 35, "stem_width": 35, "step": [79, 99, 137, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 234, 284, 285], "step_siz": 207, "still": 199, "stochast": [8, 198, 208], "stop": 234, "storag": [80, 82, 222], "store": [2, 4, 5, 6, 35, 46, 63, 77, 78, 79, 80, 81, 82, 83, 136, 185, 186, 187, 212, 222, 286, 287, 288, 289, 290, 291, 292, 293], "str": [5, 6, 35, 68, 78, 80, 82, 84, 110, 111, 112, 114, 115, 131, 196, 213, 274], "straightforward": [208, 210, 223], "strategi": 197, "streamlin": [2, 3], "strict": [78, 196], "stride": [31, 32, 33, 34, 81, 84, 95, 96, 97, 99, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 137, 156, 157, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193], "stride_height": 99, "stride_width": 99, "string": [78, 80, 82, 84, 156, 157, 158, 196], "structur": [0, 8, 18, 77, 78, 81, 195, 196, 213, 214, 238, 285], "style": [27, 118, 180, 181, 274], "sub": [80, 81, 82, 83, 84, 195, 243, 286, 288], "sub_tensor": 222, "subclass": [1, 2, 3, 8, 78, 79, 80, 195, 196], "sublay": 76, "submodul": [76, 78, 195], "subsequ": [81, 84, 146, 221], "subset": [161, 162], "subtract": [8, 233, 287], "suffer": 200, "suit": [25, 63, 141, 142, 145, 146], "suitabl": [27, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 56, 58, 75, 173, 200, 201, 216], "sum": [16, 80, 81, 82, 83, 84, 93, 110, 111, 112, 114, 115, 137, 153, 171, 172, 173, 174, 175, 200, 223, 226, 231, 243, 266, 268, 270, 272, 274, 277, 281, 283], "sum_": [15, 93, 153, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 225, 226, 255, 263, 266, 268, 274, 277], "sum_i": [16, 231], "sum_j": 231, "sum_k": 227, "summar": [44, 45, 188, 189, 190], "summari": [44, 45, 59, 60, 61, 62, 67], "summat": 15, "sun": 136, "super": [8, 76, 77, 78, 79, 80, 81, 82, 83, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 167, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 35, 80, 81, 82, 83, 84, 131, 132, 195, 197, 204, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 238, 248, 253, 255, 259, 261, 263, 266, 267, 268, 270, 274, 278, 285, 295], "suppos": 295, "sure": [195, 295], "svd": [13, 17], "symmetr": [10, 120, 121, 122, 145, 146, 154], "syntax": [1, 227], "system": [9, 10, 17, 18, 19, 75, 210, 274], "systemat": 295, "szegedi": [24, 75], "t": [17, 75, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 222, 227, 269, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "t0": 198, "t1": 269, "t2": 269, "tabular": 4, "tailor": [4, 195, 295], "take": [18, 188, 189, 190, 191, 192, 193, 212, 284], "taken": 266, "tan": 243, "tangent": [94, 154, 247, 264, 265], "tanh": [31, 81, 84, 87, 88, 106, 141, 142, 145, 146, 148, 155, 166, 243], "tanhnetwork": 154, "target": [5, 6, 84, 110, 111, 112, 114, 115, 120, 121, 122, 131, 171, 172, 173, 174, 175, 185, 186, 187, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 286, 288, 293], "target_tensor": [171, 172, 173, 174, 175], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 75, 92, 93, 96, 107, 110, 111, 114, 115, 136, 137, 152, 153, 156, 157, 158, 171, 172, 173, 174, 175, 180, 181, 182, 188, 190, 191, 193, 201, 211, 221, 238, 295], "techniqu": [10, 14, 73, 116, 160, 161, 162, 163, 164, 180, 181, 182, 197, 293, 295], "tempor": [156, 158, 190, 193], "temporarili": 212, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 68, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 210, 212, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "term": [17, 107, 133, 134, 135, 198, 202, 204, 205, 206, 208], "test": [4, 5, 6], "test_backward": 76, "test_siz": [5, 6], "text": [4, 11, 15, 16, 35, 46, 63, 64, 65, 66, 80, 86, 89, 90, 91, 93, 95, 96, 97, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 188, 189, 190, 191, 192, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 223, 224, 226, 228, 229, 230, 232, 233, 244, 248, 254, 255, 256, 258, 263, 268, 270, 272, 275, 276, 277, 278, 279, 281, 282, 283, 286, 287, 288, 290, 291, 292], "th": [107, 171, 172, 174, 175, 180, 181, 182, 228, 229, 232], "than": [0, 1, 5, 82, 83, 86, 89, 112, 147, 149, 173, 196, 202, 248, 266, 275, 280, 286, 288, 293], "thei": [0, 8, 20, 75, 77, 81, 83, 84, 214, 274, 278, 286, 288, 295], "them": [3, 78, 83, 99, 198, 211, 270, 280, 284, 287, 295], "therebi": [160, 189, 190, 192, 193], "theta": [198, 199, 291], "theta_": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "theta_t": [205, 206], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 79, 81, 82, 83, 84, 90, 92, 93, 94, 95, 96, 97, 99, 107, 109, 120, 131, 132, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 226, 227, 231, 234, 236, 239, 240, 241, 242, 248, 252, 253, 254, 255, 256, 259, 261, 263, 266, 267, 268, 269, 275, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "thing": 212, "those": [8, 32, 33, 34, 83, 146], "three": [20, 34, 97, 122, 125, 129, 133, 134, 135, 158, 164, 179, 182, 187, 190, 193], "threshold": [17, 112, 173], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 23, 27, 31, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 73, 80, 81, 84, 107, 109, 131, 136, 137, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 218, 225, 226, 231, 274, 276, 278, 279, 282, 295], "throughout": [91, 285], "tile": 273, "time": [0, 3, 15, 32, 33, 34, 95, 133, 149, 151, 156, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 206, 208, 212, 277, 281], "to_tensor": [5, 6], "togeth": [84, 284, 295], "too": 207, "tool": [3, 8, 195, 211, 221, 284, 295], "top": [10, 11, 12, 18, 20, 107, 109, 131, 156, 157, 158, 167, 169, 286, 288], "torch": [68, 269], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 79, 222, 278], "totensor": [284, 295], "trace": [9, 243], "track": [8, 133, 134, 135, 177, 178, 179, 180, 181, 182, 195, 210, 212, 216, 217, 218, 220, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 285], "track_running_stat": [133, 134, 135, 177, 178, 179, 180, 181, 182], "tradit": [5, 199, 200, 203, 204, 205], "trail": 119, "train": [1, 2, 3, 4, 5, 6, 8, 23, 24, 25, 59, 60, 61, 62, 67, 75, 76, 77, 78, 81, 83, 84, 93, 100, 101, 102, 103, 104, 116, 118, 132, 148, 149, 151, 152, 153, 154, 160, 161, 162, 163, 164, 177, 178, 179, 180, 181, 182, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 284, 287, 288, 289, 290, 291, 292, 295], "trainabl": [76, 177, 178, 179, 180, 181, 182, 195], "transact": 136, "transfer": [118, 180, 181], "transform": [2, 4, 5, 6, 8, 12, 75, 82, 107, 109, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 211, 274], "transform_pipelin": [284, 295], "transformed_imag": [284, 295], "transit": 173, "translat": [189, 192], "transpos": [8, 10, 243], "treat": [0, 77, 183, 195], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 23, 24, 25, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 107, 109, 116, 118, 131, 133, 134, 135, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 201, 202, 206, 210, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285], "truncat": 76, "truncate_from": 76, "try": 0, "tune": 295, "tupl": [2, 3, 5, 6, 12, 18, 20, 35, 76, 78, 79, 95, 96, 97, 99, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 156, 157, 158, 168, 183, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 204, 205, 207, 214, 216, 217, 218, 220, 222, 236, 239, 241, 254, 255, 256, 263, 268, 270, 272, 274, 275, 278, 279, 280, 282, 283, 286, 287, 288, 293], "twice": 275, "two": [8, 11, 12, 14, 15, 17, 18, 20, 32, 33, 34, 64, 68, 95, 96, 97, 107, 124, 128, 136, 137, 157, 163, 167, 178, 181, 189, 192, 201, 202, 203, 204, 205, 207, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 266, 274], "type": [31, 35, 53, 63, 77, 78, 79, 107, 167, 222, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269, 274, 285], "typeerror": [0, 1, 2, 78, 196], "typic": [9, 35, 46, 63, 77, 93, 100, 132, 136, 151, 153, 175, 177, 178, 179, 180, 181, 182, 197, 198, 206, 208, 212, 214, 282, 285, 287, 291, 293, 295], "u": [17, 20, 142, 144, 146], "u_": 203, "ultra": 41, "unchang": [77, 104, 147, 149, 150, 151, 160, 161, 162, 163, 164, 168, 276, 279], "undefin": 232, "under": [47, 48, 49, 50, 51, 52, 195], "underbrac": 15, "underdetermin": 17, "undergo": 295, "underli": [0, 8, 24, 25, 26, 28, 29, 269, 272, 276, 278, 283], "understand": [8, 73, 75, 76, 84, 295], "unexpect": [78, 81, 84, 221], "unfold": [98, 106], "unifi": 0, "uniform": [140, 142, 146, 156, 157, 158, 167, 169, 215, 216, 217, 221, 289, 290, 291, 292], "uniformli": [216, 220], "uniniti": [236, 237], "unintend": 212, "union": 68, "uniqu": [10, 17, 19, 80, 82], "unit": [21, 31, 73, 86, 87, 89, 90, 91, 141, 142, 145, 146, 147, 148, 149, 150, 151, 160], "unless": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 222], "unlik": [77, 80, 81, 82, 83, 89, 147, 149, 160, 183, 199, 200, 202, 203, 204, 205, 207], "unnecessari": 212, "unpad": 275, "unseen": 295, "unsqueez": 273, "unstabl": 14, "up": [196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 291, 293], "updat": [4, 77, 83, 84, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212], "upon": [25, 75, 80, 81, 82, 83], "upper": [18, 144, 207, 220], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 107, 109, 114, 116, 118, 121, 122, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 210, 211, 212, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 252, 254, 255, 256, 263, 268, 274, 275, 277, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "usag": [3, 9, 81, 84, 196, 197, 286, 287, 288, 289, 290, 291, 292, 293], "use_aux": [23, 24, 25], "user": [1, 2, 3, 4, 8, 80, 81, 82, 83, 195, 200, 284, 285, 295], "usual": 172, "util": [3, 8, 9, 64, 65, 66, 82, 83, 195, 221], "v": [12, 17, 20, 201, 202, 204, 205, 235], "v1": [23, 24, 27, 28, 29, 75], "v2": [27, 29, 75], "v3": [23, 25, 26, 75], "v4": [23, 26, 75], "v_": [198, 201, 202, 204, 205, 206, 208], "v_stack": 283, "v_t": [205, 206], "val": 139, "valid": [133, 134, 135, 137, 156, 157, 158, 267], "valu": [8, 11, 15, 16, 17, 20, 44, 45, 76, 78, 80, 82, 84, 86, 89, 92, 93, 94, 95, 96, 97, 99, 110, 111, 112, 114, 115, 116, 118, 119, 120, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 216, 217, 218, 219, 220, 221, 234, 235, 236, 237, 238, 244, 245, 246, 248, 251, 252, 253, 254, 256, 258, 259, 261, 262, 270, 275, 276, 278, 282, 287, 289, 290, 292], "valuabl": 221, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 196], "vanish": [75, 147, 151, 177, 178, 179], "var": 243, "vari": [63, 81, 83, 120, 131, 185, 291], "variabl": [78, 84, 120, 121, 122, 168, 185, 186, 187, 195, 210, 212, 216, 236, 288, 291], "varianc": [91, 100, 116, 118, 133, 134, 135, 141, 142, 145, 146, 151, 160, 177, 178, 179, 180, 181, 182, 183, 201, 202, 203, 204, 205, 218, 268, 291, 295], "variant": [44, 45, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 201, 202, 203], "variat": [180, 181, 182, 288, 295], "varieti": [4, 27, 221, 295], "variou": [5, 23, 28, 29, 31, 75, 150, 197, 221, 254, 256, 275, 285], "vdot": 231, "vector": [12, 17, 18, 19, 20, 107, 109, 167, 169, 225, 226, 227, 231], "veloc": [198, 206, 208], "veri": [17, 38, 40, 75, 199], "versa": 207, "versatil": [221, 274], "version": [20, 23, 27, 31, 32, 33, 206, 231, 289], "vertic": [280, 283, 292], "vgg": 68, "vggnet": [30, 69, 70, 71, 72, 75], "vggnet_11": 75, "vggnet_13": 75, "vggnet_16": 75, "vggnet_19": 75, "via": [3, 4, 63], "vice": 207, "video": [97, 104, 135, 158, 182, 190, 193], "view": [27, 31, 81, 189, 190, 191, 192, 193, 278], "vision": [35, 75, 96, 157, 167, 295], "visual": [73, 75], "vol": 75, "vollgraf": 5, "volumetr": [97, 104, 135, 158, 182, 190, 193], "vstack": 273, "w": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 96, 97, 99, 103, 104, 107, 109, 121, 122, 124, 125, 128, 129, 131, 132, 134, 135, 136, 156, 157, 158, 167, 169, 178, 179, 181, 182, 186, 187, 190, 193, 286, 288], "w_": [96, 97, 121, 122, 124, 125, 128, 129, 131, 157, 158, 186, 187, 189, 190, 192, 193], "w_out": [96, 97, 124, 125, 128, 129], "wa": [24, 160, 161, 162, 163, 164, 212], "wai": [1, 22, 74, 210, 212, 278], "wang": 75, "want": [0, 8, 284, 286], "warn": [80, 82], "we": [3, 8, 211, 274], "weight": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 75, 95, 96, 97, 107, 109, 110, 111, 115, 116, 118, 119, 131, 136, 137, 141, 142, 145, 146, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 216, 221], "weight1": 82, "weight2": 82, "weight_decai": [198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "well": [25, 63, 141, 142], "were": 84, "what": 212, "when": [0, 1, 3, 8, 15, 78, 81, 83, 84, 86, 89, 95, 96, 97, 147, 168, 177, 178, 179, 180, 181, 182, 196, 199, 207, 210, 212, 213, 214, 221, 232, 284, 286], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 221, 223, 224, 228, 229, 230, 232, 233, 236, 237, 248, 252, 253, 254, 255, 256, 259, 261, 263, 266, 267, 268, 270, 275, 277, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292], "whether": [1, 11, 23, 24, 25, 78, 79, 141, 142, 206, 210, 216, 217, 218, 220, 222, 236, 237, 254, 255, 256, 263, 268], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 26, 29, 59, 60, 61, 62, 63, 67, 69, 70, 71, 72, 75, 78, 80, 82, 84, 89, 93, 112, 132, 137, 147, 148, 149, 153, 154, 160, 173, 175, 177, 178, 179, 180, 181, 182, 183, 201, 202, 204, 206, 210, 212, 214, 216, 217, 220, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 268, 270, 277, 278, 280, 282, 285, 286, 288, 289, 290, 291, 292, 293, 295], "while": [8, 29, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 75, 81, 84, 100, 148, 150, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 278, 280, 289, 295], "who": [8, 80, 81, 82, 83], "whose": [20, 237, 240, 242, 244, 248, 252, 258], "wide": [4, 6, 9, 17, 35, 43, 44, 45, 75, 90, 150, 156, 157, 172], "wide_resnet_101": 75, "wide_resnet_50": 75, "wider": [44, 45, 95, 96], "wideresnet": 75, "width": [44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 96, 97, 99, 103, 104, 121, 122, 124, 125, 128, 129, 131, 132, 137, 157, 158, 178, 179, 181, 182, 186, 187, 189, 190, 192, 193, 286, 288, 293], "window": [123, 124, 125, 127, 128, 129, 188, 189, 190, 191, 192, 193, 199, 254, 256], "wise": [57, 59, 60, 61, 62, 75, 86, 87, 89, 90, 91, 92, 93, 94, 133, 134, 135, 136, 153, 160, 161, 162, 163, 164, 195, 211, 223, 224, 227, 228, 229, 230, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 272, 283], "within": [2, 75, 76, 77, 80, 81, 82, 83, 84, 94, 131, 132, 146, 148, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 188, 189, 190, 191, 192, 193, 197, 212, 234, 248, 291, 295], "without": [8, 46, 80, 81, 82, 107, 109, 156, 157, 158, 167, 169, 210, 213, 254, 276, 278, 282], "won": 212, "work": [1, 2, 3, 8, 10, 211, 214], "workflow": [221, 295], "workload": 8, "wrap": [3, 195, 212, 269], "wrapper": 195, "x": [8, 9, 19, 27, 31, 53, 68, 75, 76, 77, 78, 80, 81, 82, 83, 84, 93, 107, 109, 132, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 218, 220, 236, 237, 252, 274, 286, 287, 288, 289, 290, 291, 292, 293], "x1": 167, "x2": 167, "x_": [172, 175, 274], "x_c": [172, 175], "x_i": 171, "x_k": 172, "xavier": [141, 142, 145, 146], "xavier_norm": 140, "xavier_uniform": 140, "xiao": 5, "xie": 75, "xy": 274, "x\u2081": 167, "x\u2082": 167, "y": [80, 81, 82, 83, 84, 132, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 216, 217, 218, 220, 236, 237, 274, 289], "y_": [172, 175, 274], "y_c": [172, 175], "y_i": 171, "yann": [6, 75], "yet": [8, 211], "yield": [0, 1, 78, 212], "you": [0, 76, 81, 83, 84, 195, 197, 210, 212, 221, 236, 237, 238, 242, 267, 269, 284, 286, 295], "your": [195, 197, 210, 212, 221, 295], "z": [237, 241, 242], "zalandoresearch": 5, "zeiler": [73, 75], "zero": [15, 17, 18, 25, 76, 86, 89, 95, 96, 97, 100, 101, 102, 103, 104, 123, 124, 125, 127, 128, 129, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 156, 157, 158, 160, 161, 162, 163, 164, 183, 188, 189, 190, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 236, 237, 238, 242, 243, 248, 258, 275], "zero_grad": [79, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 222], "zeros_lik": [237, 243], "zfnet": [30, 75], "zhang": 75, "zisserman": 75, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 211, "1d": 211, "2": 211, "2d": 211, "3": 211, "It": [210, 212], "ab": 244, "activ": [88, 106, 155, 166], "ad": 211, "adadelta": 199, "adagrad": 200, "adam": 201, "adamax": 203, "adamw": 202, "adaptive_avg_pool1d": 120, "adaptive_avg_pool2d": 121, "adaptive_avg_pool3d": 122, "adaptiveavgpool1d": 185, "adaptiveavgpool2d": 186, "adaptiveavgpool3d": 187, "add": 223, "addit": 17, "admonit": 214, "advanc": [99, 295], "alexnet": [21, 22], "algebra": 13, "algorithm": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "alias": 214, "align": 211, "alpha_dropout": 100, "alphadropout": 160, "also": 197, "anoth": 269, "arang": 234, "arcco": 245, "architectur": [21, 32, 33, 34, 44, 45, 73], "arcsin": 246, "arctan": 247, "asgd": 198, "attent": 137, "attribut": [5, 6, 21, 27, 31, 35, 46, 53, 63, 68, 73, 77, 79, 80, 81, 82, 83, 84, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 222, 286, 287, 288, 289, 290, 291, 292, 293], "avg_pool1d": 123, "avg_pool2d": 124, "avg_pool3d": 125, "avgpool1d": 188, "avgpool2d": 189, "avgpool3d": 190, "axi": 211, "backpropag": 222, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 136, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "batch_norm": 116, "batchnorm": 138, "batchnorm1d": 177, "batchnorm2d": 178, "batchnorm3d": 179, "bceloss": 171, "behavior": [120, 121, 122, 185, 186, 187], "benefit": 212, "bilinear": [107, 167], "binari": 243, "binary_cross_entropi": 110, "broadcast": 211, "buffer": 77, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 53, 63, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 99, 107, 109, 120, 121, 122, 131, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293], "captur": 213, "case": 214, "centercrop": 286, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 27, 31, 35, 46, 53, 63, 68, 73, 77, 78, 79, 80, 81, 82, 83, 84, 133, 134, 135, 136, 137, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 222, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "clip": 248, "co": 249, "combin": 0, "compon": [3, 8, 195], "compos": 284, "concatdataset": [0, 1], "concaten": 270, "conclus": [3, 8, 195, 210, 211, 212, 221, 285, 295], "constant": 139, "contain": 85, "conv": 138, "conv1d": [95, 156], "conv2d": [96, 157], "conv3d": [97, 158], "convbnrelu1d": 133, "convbnrelu2d": 134, "convbnrelu3d": 135, "convnet": [30, 75], "convolut": [98, 106, 159, 166], "core": 8, "cosh": 250, "creat": [79, 222, 269], "cross_entropi": 111, "crossentropyloss": 172, "cube": 251, "custom": [1, 2, 3, 78, 196, 197, 295], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 78, 196, 197], "definit": 214, "descript": [47, 48, 49, 50, 51, 52, 64, 65, 66, 213], "det": 11, "detail": [17, 44, 45], "diag": 235, "dilat": 99, "div": 224, "dot": 225, "dropout": [101, 105, 106, 161, 165, 166], "dropout1d": [102, 162], "dropout2d": [103, 163], "dropout3d": [104, 164], "eig": 12, "elu": [86, 147], "empti": 236, "empty_lik": 237, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "excit": 138, "exp": 252, "ey": 238, "fashionmnist": 5, "featur": [4, 8, 9, 59, 60, 61, 62, 67, 197, 221, 295], "flatten": 271, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 53, 63, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 99, 107, 109, 120, 121, 122, 131, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293], "from": 269, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 139, 141, 142, 143, 144, 145, 146, 210, 212, 213, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "fuse": 138, "futur": 4, "gelu": [87, 148], "gener": [215, 243], "get": 197, "grad_en": 210, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 107, 109, 131, 136, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "guidelin": 214, "how": [210, 212], "hstack": 272, "huber_loss": 112, "huberloss": 173, "ident": 168, "imag": [7, 294], "incept": 23, "inception_resnet_v1": 28, "inception_resnet_v2": 29, "inception_v1": 24, "inception_v3": 25, "inception_v4": 26, "inceptionresnet": 27, "index": 222, "init": [139, 141, 142, 143, 144, 145, 146], "initi": 140, "inner": 226, "input": 269, "inspect": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "instance_norm": 118, "instancenorm1d": 180, "instancenorm2d": 181, "instancenorm3d": 182, "integr": [3, 195, 221, 295], "interpol": 131, "inv": 14, "iter": 222, "kaiming_norm": 141, "kaiming_uniform": 142, "kei": [3, 4, 8, 59, 60, 61, 62, 67, 195, 197, 221, 295], "kernel": 138, "layer": [138, 155, 159, 165, 166, 170, 176, 184, 194], "layer_norm": 119, "layernorm": 183, "leaky_relu": 89, "leakyrelu": 149, "learn": 221, "lenet": 31, "lenet_1": 32, "lenet_4": 33, "lenet_5": 34, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 106, 108, 109, 166, 169, 170], "list": 269, "load": 1, "log": 253, "loss": [106, 113, 166, 176], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 75, 106, 195, 197, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 295], "matmul": 227, "matrix": 227, "matrix_pow": 15, "max": 254, "max_pool1d": 127, "max_pool2d": 128, "max_pool3d": 129, "maximum": 228, "maxpool1d": 191, "maxpool2d": 192, "maxpool3d": 193, "mean": 255, "mechan": 137, "meshgrid": 274, "metadata": 213, "method": [0, 1, 2, 5, 6, 27, 31, 68, 78, 79, 196, 222], "min": 256, "minimum": 229, "mnist": 6, "model": [75, 76, 195], "modul": [78, 166], "moduledict": 80, "modulelist": 81, "more": 221, "mse_loss": 114, "mseloss": 174, "mul": 230, "multipl": [0, 227], "nadam": 204, "new": 211, "newaxi": 211, "nll_loss": 115, "nllloss": 175, "nn": [77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "no_grad": 212, "norm": 16, "normal": [106, 117, 143, 166, 184, 287], "note": 8, "number": 215, "ones": 239, "ones_lik": 240, "oper": [13, 227, 243], "optim": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "organ": 195, "outer": 231, "overview": [3, 4, 8, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 195, 197, 221, 295], "pad": 275, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "parameterdict": 82, "parameterlist": 83, "perform": 222, "pinv": 17, "pipelin": [3, 295], "pitfal": [210, 212], "pool": [106, 126, 166, 194], "potenti": [210, 212], "power": 232, "properti": [79, 222], "qr": 18, "radam": 205, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 216, "randint": 217, "randn": 218, "random": [215, 216, 217, 218, 219, 220, 221], "randomcrop": 288, "randomgrayscal": 289, "randomhorizontalflip": 290, "randomrot": 291, "randomverticalflip": 292, "ravel": 276, "reciproc": 257, "refer": [5, 6, 136, 197], "register_model": 213, "relu": [90, 138, 150], "repeat": 277, "reshap": 278, "resiz": 293, "resnet": 35, "resnet_1001": 36, "resnet_101": 37, "resnet_152": 38, "resnet_18": 39, "resnet_200": 40, "resnet_269": 41, "resnet_34": 42, "resnet_50": 43, "resnext": 46, "resnext_101_32x16d": 47, "resnext_101_32x32d": 48, "resnext_101_32x4d": 49, "resnext_101_32x8d": 50, "resnext_101_64x4d": 51, "resnext_50_32x4d": 52, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 137, 139, 141, 142, 143, 144, 145, 146, 210, 212, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "rmsprop": 206, "rotat": 132, "rprop": 207, "rule": 227, "se_resnet_101": 54, "se_resnet_152": 55, "se_resnet_18": 56, "se_resnet_34": 57, "se_resnet_50": 58, "se_resnext_101_32x4d": 59, "se_resnext_101_32x8d": 60, "se_resnext_101_64x4d": 61, "se_resnext_50_32x4d": 62, "see": 197, "seed": 219, "select": 138, "selectivekernel": 137, "selu": [91, 151], "semodul": 136, "senet": 53, "sequenti": 84, "sgd": 208, "sigmoid": [92, 152], "sign": 258, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "sin": 259, "sinh": 260, "sk_resnet_18": 64, "sk_resnet_34": 65, "sk_resnet_50": 66, "sk_resnext_50_32x4d": 67, "sknet": 63, "slice": 222, "softmax": [93, 153], "solv": 19, "sqrt": 261, "squar": 262, "squeez": [138, 279], "stack": 280, "start": 197, "state": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "sub": 233, "sum": 263, "summar": 76, "summari": 76, "svd": 20, "tabl": 76, "tan": 264, "tanh": [94, 154, 265], "tensor": [211, 222, 243, 269, 273], "through": 222, "tile": 281, "totensor": 285, "trace": 266, "track": 222, "transform": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "transpos": 267, "type": 214, "unari": 243, "unfold": 99, "uniform": [144, 220], "unsqueez": 282, "us": [1, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 269], "usag": [4, 8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 59, 60, 61, 62, 67, 77, 132, 210, 211, 212, 214, 274, 284, 285, 295], "util": [106, 130], "utilit": 273, "var": 268, "vggnet": 68, "vggnet_11": 69, "vggnet_13": 70, "vggnet_16": 71, "vggnet_19": 72, "vstack": 283, "weight": 140, "why": 214, "wide_resnet_101": 44, "wide_resnet_50": 45, "work": [4, 210, 212], "xavier_norm": 145, "xavier_uniform": 146, "zero": 241, "zeros_lik": 242, "zfnet": [73, 74]}})