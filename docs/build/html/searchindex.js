Search.setIndex({"alltitles": {"@ Operator": [[154, "operator"]], "Activation Functions": [[28, null]], "Activation Layers": [[86, null], [97, null]], "Additional Details": [[13, "additional-details"]], "Admonitions and Usage Guidelines": [[141, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[39, "advanced-example-with-dilation"]], "Advanced Features": [[218, "advanced-features"]], "Algorithm": [[126, "algorithm"], [127, "algorithm"], [128, "algorithm"], [129, "algorithm"], [130, "algorithm"], [131, "algorithm"], [132, "algorithm"], [133, "algorithm"], [134, "algorithm"], [135, "algorithm"], [136, "algorithm"]], "Attributes": [[17, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [82, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [98, "attributes"], [99, "attributes"], [100, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [149, "attributes"], [213, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"]], "Backward Gradient Calculation": [[6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [34, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"]], "Benefits": [[140, "benefits"]], "Binary Functions": [[170, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [17, "class-signature"], [18, "class-signature"], [19, "class-signature"], [20, "class-signature"], [21, "class-signature"], [22, "class-signature"], [23, "class-signature"], [24, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [98, "class-signature"], [99, "class-signature"], [100, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [124, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [149, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [4, "conclusion"], [123, "conclusion"], [138, "conclusion"], [139, "conclusion"], [140, "conclusion"], [148, "conclusion"], [212, "conclusion"], [218, "conclusion"]], "Containers": [[25, null]], "Convolution Functions": [[38, null], [46, null]], "Convolution Layers": [[90, null], [97, null]], "Core Components": [[4, "core-components"]], "Create a Tensor from a list": [[196, null]], "Creating a Parameter": [[19, null]], "Creating a tensor with gradient tracking": [[149, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[218, "custom-pipelines"]], "Defining a Custom Optimizer": [[125, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[18, null]], "Defining a custom optimizer": [[124, null]], "Dropout Functions": [[45, null], [46, null]], "Dropout Layers": [[96, null], [97, null]], "Example": [[3, null], [3, null], [3, null], [6, "example"], [7, "example"], [8, "example"], [10, "example"], [11, "example"], [12, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [39, "example"], [123, null], [123, null], [123, null], [138, "example"], [140, "example"], [143, "example"], [144, "example"], [145, "example"], [146, "example"], [147, "example"], [148, null], [148, null], [148, null], [161, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [167, "example"], [168, "example"], [169, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [180, "example"], [182, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, "example"], [195, "example"], [197, "example"], [199, "example"], [203, "example"], [205, "example"], [206, "example"], [207, "example"], [209, "example"], [210, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[139, null]], "Example 2: Adding a new axis to a 2D tensor": [[139, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[139, null]], "Example Usage": [[4, "example-usage"], [69, "example-usage"], [211, "example-usage"], [212, "example-usage"], [218, "example-usage"]], "Example Use Cases": [[141, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [26, "examples"], [27, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [47, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [68, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [179, "examples"], [181, "examples"], [183, "examples"], [196, "examples"], [198, "examples"], [201, "examples"], [202, "examples"], [204, "examples"], [208, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"]], "Features": [[5, "features"]], "Forward Calculation": [[6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [33, "forward-calculation"], [34, "forward-calculation"], [39, "forward-calculation"], [47, "forward-calculation"], [49, "forward-calculation"], [68, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [197, "forward-calculation"], [199, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"]], "Function Signature": [[6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [47, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [138, "function-signature"], [140, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"]], "Getting Started": [[125, "getting-started"]], "How It Works": [[138, "how-it-works"], [140, "how-it-works"]], "Image Transformations": [[217, null]], "Indexing and slicing": [[149, null]], "Inspecting Optimizer State": [[125, null], [126, null], [127, null], [128, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null]], "Integration with lucid": [[3, "integration-with-lucid"], [123, "integration-with-lucid"], [148, "integration-with-lucid"], [218, "integration-with-lucid"]], "Iterating through a tensor": [[149, null]], "Key Components": [[3, "key-components"], [123, "key-components"]], "Key Features": [[4, "key-features"], [125, "key-features"], [148, "key-features"]], "Key Transformations": [[218, "key-transformations"]], "Learn More": [[148, null]], "Limitations": [[4, "limitations"]], "Linear Algebra Operations": [[9, null]], "Linear Functions": [[46, null], [48, null]], "Linear Layers": [[97, null], [101, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[46, null], [53, null]], "Loss Layers": [[97, null], [107, null]], "Lucid": [[4, null]], "Matrix Multiplication Rules": [[154, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [18, "methods"], [19, "methods"], [124, "methods"], [149, "methods"]], "Modules": [[97, null]], "Normalization Functions": [[46, null], [57, null]], "Normalization Layers": [[97, null], [115, null]], "Notes": [[4, "notes"]], "Optimizers": [[137, null]], "Organizing Models": [[123, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [123, "overview"], [125, "overview"], [148, "overview"], [218, "overview"]], "Parameters": [[1, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [26, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [47, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [140, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"]], "Performing backpropagation": [[149, null]], "Pooling Functions": [[46, null], [63, null]], "Pooling Layers": [[97, null], [122, null]], "Potential Pitfalls": [[138, "potential-pitfalls"], [140, "potential-pitfalls"]], "Properties": [[19, "properties"], [149, "properties"]], "Raises": [[6, "raises"], [7, "raises"], [8, "raises"], [10, "raises"], [11, "raises"], [12, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"]], "Random Number Generations": [[142, null]], "References": [[125, "references"]], "Returns": [[6, "returns"], [7, "returns"], [8, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [47, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [138, "returns"], [140, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"]], "See Also": [[125, "see-also"]], "Tensor Generating Functions": [[170, null]], "Tensor Operations": [[170, null]], "Tensor Utilites": [[200, null]], "Type Definitions": [[141, "type-definitions"]], "Unary Functions": [[170, null]], "Usage": [[17, "usage"], [69, "usage"], [138, "usage"], [139, "usage"], [140, "usage"], [201, "usage"], [211, "usage"], [212, "usage"], [218, "usage"]], "Use another Tensor as input": [[196, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[126, null]], "Using the Adadelta Optimizer": [[127, null]], "Using the Adagrad Optimizer": [[128, null]], "Using the Adam Optimizer": [[129, null]], "Using the AdamW Optimizer": [[130, null]], "Using the Adamax Optimizer": [[131, null]], "Using the NAdam Optimizer": [[132, null]], "Using the RAdam Optimizer": [[133, null]], "Using the RMSprop Optimizer": [[134, null]], "Using the Rprop Optimizer": [[135, null]], "Using the SGD Optimizer": [[136, null]], "Utility Functions": [[46, null], [67, null]], "Weight Initializations": [[71, null]], "Why Use Type Aliases?": [[141, null]], "activation Functions": [[46, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "lucid.Tensor": [[149, null]], "lucid.abs": [[171, null]], "lucid.add": [[150, null]], "lucid.arange": [[161, null]], "lucid.arccos": [[172, null]], "lucid.arcsin": [[173, null]], "lucid.arctan": [[174, null]], "lucid.clip": [[175, null]], "lucid.concatenate": [[197, null]], "lucid.cos": [[176, null]], "lucid.cosh": [[177, null]], "lucid.cube": [[178, null]], "lucid.data": [[3, null]], "lucid.diag": [[162, null]], "lucid.div": [[151, null]], "lucid.dot": [[152, null]], "lucid.empty": [[163, null]], "lucid.empty_like": [[164, null]], "lucid.exp": [[179, null]], "lucid.eye": [[165, null]], "lucid.flatten": [[198, null]], "lucid.grad_enabled": [[138, null]], "lucid.hstack": [[199, null]], "lucid.inner": [[153, null]], "lucid.linalg": [[5, null]], "lucid.linalg.cholesky": [[6, null]], "lucid.linalg.det": [[7, null]], "lucid.linalg.eig": [[8, null]], "lucid.linalg.inv": [[10, null]], "lucid.linalg.matrix_power": [[11, null]], "lucid.linalg.norm": [[12, null]], "lucid.linalg.pinv": [[13, null]], "lucid.linalg.qr": [[14, null]], "lucid.linalg.solve": [[15, null]], "lucid.linalg.svd": [[16, null]], "lucid.log": [[180, null]], "lucid.matmul": [[154, null]], "lucid.max": [[181, null]], "lucid.maximum": [[155, null]], "lucid.mean": [[182, null]], "lucid.meshgrid": [[201, null]], "lucid.min": [[183, null]], "lucid.minimum": [[156, null]], "lucid.mul": [[157, null]], "lucid.newaxis": [[139, null]], "lucid.nn": [[123, null]], "lucid.nn.functional": [[46, null]], "lucid.no_grad": [[140, null]], "lucid.ones": [[166, null]], "lucid.ones_like": [[167, null]], "lucid.optim": [[125, null]], "lucid.outer": [[158, null]], "lucid.pad": [[202, null]], "lucid.power": [[159, null]], "lucid.random": [[148, null]], "lucid.random.rand": [[143, null]], "lucid.random.randint": [[144, null]], "lucid.random.randn": [[145, null]], "lucid.random.seed": [[146, null]], "lucid.random.uniform": [[147, null]], "lucid.ravel": [[203, null]], "lucid.reciprocal": [[184, null]], "lucid.repeat": [[204, null]], "lucid.reshape": [[205, null]], "lucid.sign": [[185, null]], "lucid.sin": [[186, null]], "lucid.sinh": [[187, null]], "lucid.sqrt": [[188, null]], "lucid.square": [[189, null]], "lucid.squeeze": [[206, null]], "lucid.stack": [[207, null]], "lucid.sub": [[160, null]], "lucid.sum": [[190, null]], "lucid.tan": [[191, null]], "lucid.tanh": [[192, null]], "lucid.tensor": [[196, null]], "lucid.tile": [[208, null]], "lucid.trace": [[193, null]], "lucid.transforms": [[218, null]], "lucid.transpose": [[194, null]], "lucid.types": [[141, null]], "lucid.unsqueeze": [[209, null]], "lucid.var": [[195, null]], "lucid.vstack": [[210, null]], "lucid.zeros": [[168, null]], "lucid.zeros_like": [[169, null]], "nn.AlphaDropout": [[91, null]], "nn.AvgPool1d": [[116, null]], "nn.AvgPool2d": [[117, null]], "nn.AvgPool3d": [[118, null]], "nn.BCELoss": [[102, null]], "nn.BatchNorm1d": [[108, null]], "nn.BatchNorm2d": [[109, null]], "nn.BatchNorm3d": [[110, null]], "nn.Bilinear": [[98, null]], "nn.Buffer": [[17, null]], "nn.Conv1d": [[87, null]], "nn.Conv2d": [[88, null]], "nn.Conv3d": [[89, null]], "nn.CrossEntropyLoss": [[103, null]], "nn.Dropout": [[92, null]], "nn.Dropout1d": [[93, null]], "nn.Dropout2d": [[94, null]], "nn.Dropout3d": [[95, null]], "nn.ELU": [[78, null]], "nn.GELU": [[79, null]], "nn.HuberLoss": [[104, null]], "nn.Identity": [[99, null]], "nn.InstanceNorm1d": [[111, null]], "nn.InstanceNorm2d": [[112, null]], "nn.InstanceNorm3d": [[113, null]], "nn.LayerNorm": [[114, null]], "nn.LeakyReLU": [[80, null]], "nn.Linear": [[100, null]], "nn.MSELoss": [[105, null]], "nn.MaxPool1d": [[119, null]], "nn.MaxPool2d": [[120, null]], "nn.MaxPool3d": [[121, null]], "nn.Module": [[18, null]], "nn.ModuleDict": [[20, null]], "nn.ModuleList": [[21, null]], "nn.NLLLoss": [[106, null]], "nn.Parameter": [[19, null]], "nn.ParameterDict": [[22, null]], "nn.ParameterList": [[23, null]], "nn.ReLU": [[81, null]], "nn.SELU": [[82, null]], "nn.Sequential": [[24, null]], "nn.Sigmoid": [[83, null]], "nn.Softmax": [[84, null]], "nn.Tanh": [[85, null]], "nn.functional.alpha_dropout": [[40, null]], "nn.functional.avg_pool1d": [[60, null]], "nn.functional.avg_pool2d": [[61, null]], "nn.functional.avg_pool3d": [[62, null]], "nn.functional.batch_norm": [[56, null]], "nn.functional.bilinear": [[47, null]], "nn.functional.binary_cross_entropy": [[50, null]], "nn.functional.conv1d": [[35, null]], "nn.functional.conv2d": [[36, null]], "nn.functional.conv3d": [[37, null]], "nn.functional.cross_entropy": [[51, null]], "nn.functional.dropout": [[41, null]], "nn.functional.dropout1d": [[42, null]], "nn.functional.dropout2d": [[43, null]], "nn.functional.dropout3d": [[44, null]], "nn.functional.elu": [[26, null]], "nn.functional.gelu": [[27, null]], "nn.functional.huber_loss": [[52, null]], "nn.functional.instance_norm": [[58, null]], "nn.functional.interpolate": [[68, null]], "nn.functional.layer_norm": [[59, null]], "nn.functional.leaky_relu": [[29, null]], "nn.functional.linear": [[49, null]], "nn.functional.max_pool1d": [[64, null]], "nn.functional.max_pool2d": [[65, null]], "nn.functional.max_pool3d": [[66, null]], "nn.functional.mse_loss": [[54, null]], "nn.functional.nll_loss": [[55, null]], "nn.functional.relu": [[30, null]], "nn.functional.rotate": [[69, null]], "nn.functional.selu": [[31, null]], "nn.functional.sigmoid": [[32, null]], "nn.functional.softmax": [[33, null]], "nn.functional.tanh": [[34, null]], "nn.functional.unfold": [[39, null]], "nn.init.constant": [[70, null]], "nn.init.kaiming_normal": [[72, null]], "nn.init.kaiming_uniform": [[73, null]], "nn.init.normal": [[74, null]], "nn.init.uniform": [[75, null]], "nn.init.xavier_normal": [[76, null]], "nn.init.xavier_uniform": [[77, null]], "optim.ASGD": [[126, null]], "optim.Adadelta": [[127, null]], "optim.Adagrad": [[128, null]], "optim.Adam": [[129, null]], "optim.AdamW": [[130, null]], "optim.Adamax": [[131, null]], "optim.NAdam": [[132, null]], "optim.Optimizer": [[124, null]], "optim.RAdam": [[133, null]], "optim.RMSprop": [[134, null]], "optim.Rprop": [[135, null]], "optim.SGD": [[136, null]], "transforms.Compose": [[211, null]], "transforms.Normalize": [[213, null]], "transforms.RandomHorizontalFlip": [[214, null]], "transforms.RandomVerticalFlip": [[215, null]], "transforms.Resize": [[216, null]], "transforms.ToTensor": [[212, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/Normalize", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/Normalize.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[171, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[127, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[128, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[129, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[131, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[130, "lucid.optim.AdamW", false]], "add() (in module lucid)": [[150, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[91, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[161, "lucid.arange", false]], "arccos() (in module lucid)": [[172, "lucid.arccos", false]], "arcsin() (in module lucid)": [[173, "lucid.arcsin", false]], "arctan() (in module lucid)": [[174, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[126, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[116, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[117, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[118, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[108, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[109, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[110, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[102, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[98, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[17, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[6, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[175, "lucid.clip", false]], "compose (class in lucid.transforms)": [[211, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[197, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[70, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[87, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[88, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[89, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[176, "lucid.cos", false]], "cosh() (in module lucid)": [[177, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[103, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[178, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[7, "lucid.linalg.det", false]], "diag() (in module lucid)": [[162, "lucid.diag", false]], "div() (in module lucid)": [[151, "lucid.div", false]], "dot() (in module lucid)": [[152, "lucid.dot", false]], "dropout (class in lucid.nn)": [[92, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[93, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[94, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[95, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[8, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[78, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[163, "lucid.empty", false]], "empty_like() (in module lucid)": [[164, "lucid.empty_like", false]], "exp() (in module lucid)": [[179, "lucid.exp", false]], "eye() (in module lucid)": [[165, "lucid.eye", false]], "flatten() (in module lucid)": [[198, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[79, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[138, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[199, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[104, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[99, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[153, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[111, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[112, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[113, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[10, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[72, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[73, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[114, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[80, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[100, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[180, "lucid.log", false]], "lucid": [[4, "module-lucid", false]], "matmul() (in module lucid)": [[154, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[11, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[181, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[155, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[119, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[120, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[121, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[182, "lucid.mean", false]], "meshgrid() (in module lucid)": [[201, "lucid.meshgrid", false]], "min() (in module lucid)": [[183, "lucid.min", false]], "minimum() (in module lucid)": [[156, "lucid.minimum", false]], "module": [[4, "module-lucid", false]], "module (class in lucid.nn)": [[18, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[20, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[21, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[105, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[157, "lucid.mul", false]], "nadam (class in lucid.optim)": [[132, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[106, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[140, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[12, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[74, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[213, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[166, "lucid.ones", false]], "ones_like() (in module lucid)": [[167, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[124, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[158, "lucid.outer", false]], "pad() (in module lucid)": [[202, "lucid.pad", false]], "parameter (class in lucid.nn)": [[19, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[22, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[23, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[13, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[159, "lucid.power", false]], "qr() (in module lucid.linalg)": [[14, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[133, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[143, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[144, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[145, "lucid.random.randn", false]], "randomhorizontalflip (class in lucid.transforms)": [[214, "lucid.transforms.RandomHorizontalFlip", false]], "randomverticalflip (class in lucid.transforms)": [[215, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[203, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[184, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[81, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[204, "lucid.repeat", false]], "reshape() (in module lucid)": [[205, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[216, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[134, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[135, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[146, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[82, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[24, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[136, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[83, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[185, "lucid.sign", false]], "sin() (in module lucid)": [[186, "lucid.sin", false]], "sinh() (in module lucid)": [[187, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[84, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[15, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[188, "lucid.sqrt", false]], "square() (in module lucid)": [[189, "lucid.square", false]], "squeeze() (in module lucid)": [[206, "lucid.squeeze", false]], "stack() (in module lucid)": [[207, "lucid.stack", false]], "sub() (in module lucid)": [[160, "lucid.sub", false]], "sum() (in module lucid)": [[190, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[16, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[191, "lucid.tan", false]], "tanh (class in lucid.nn)": [[85, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[192, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[149, "lucid.Tensor", false]], "tensor() (in module lucid)": [[196, "lucid.tensor", false]], "tile() (in module lucid)": [[208, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[212, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[193, "lucid.trace", false]], "transpose() (in module lucid)": [[194, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[75, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[147, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[209, "lucid.unsqueeze", false]], "var() (in module lucid)": [[195, "lucid.var", false]], "vstack() (in module lucid)": [[210, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[76, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[77, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[168, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[169, "lucid.zeros_like", false]]}, "objects": {"": [[4, 0, 0, "-", "lucid"]], "lucid": [[149, 1, 1, "", "Tensor"], [171, 2, 1, "", "abs"], [150, 2, 1, "", "add"], [161, 2, 1, "", "arange"], [172, 2, 1, "", "arccos"], [173, 2, 1, "", "arcsin"], [174, 2, 1, "", "arctan"], [175, 2, 1, "", "clip"], [197, 2, 1, "", "concatenate"], [176, 2, 1, "", "cos"], [177, 2, 1, "", "cosh"], [178, 2, 1, "", "cube"], [162, 2, 1, "", "diag"], [151, 2, 1, "", "div"], [152, 2, 1, "", "dot"], [163, 2, 1, "", "empty"], [164, 2, 1, "", "empty_like"], [179, 2, 1, "", "exp"], [165, 2, 1, "", "eye"], [198, 2, 1, "", "flatten"], [138, 2, 1, "", "grad_enabled"], [199, 2, 1, "", "hstack"], [153, 2, 1, "", "inner"], [180, 2, 1, "", "log"], [154, 2, 1, "", "matmul"], [181, 2, 1, "", "max"], [155, 2, 1, "", "maximum"], [182, 2, 1, "", "mean"], [201, 2, 1, "", "meshgrid"], [183, 2, 1, "", "min"], [156, 2, 1, "", "minimum"], [157, 2, 1, "", "mul"], [140, 2, 1, "", "no_grad"], [166, 2, 1, "", "ones"], [167, 2, 1, "", "ones_like"], [158, 2, 1, "", "outer"], [202, 2, 1, "", "pad"], [159, 2, 1, "", "power"], [203, 2, 1, "", "ravel"], [184, 2, 1, "", "reciprocal"], [204, 2, 1, "", "repeat"], [205, 2, 1, "", "reshape"], [185, 2, 1, "", "sign"], [186, 2, 1, "", "sin"], [187, 2, 1, "", "sinh"], [188, 2, 1, "", "sqrt"], [189, 2, 1, "", "square"], [206, 2, 1, "", "squeeze"], [207, 2, 1, "", "stack"], [160, 2, 1, "", "sub"], [190, 2, 1, "", "sum"], [191, 2, 1, "", "tan"], [192, 2, 1, "", "tanh"], [196, 2, 1, "", "tensor"], [208, 2, 1, "", "tile"], [193, 2, 1, "", "trace"], [194, 2, 1, "", "transpose"], [209, 2, 1, "", "unsqueeze"], [195, 2, 1, "", "var"], [210, 2, 1, "", "vstack"], [168, 2, 1, "", "zeros"], [169, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.linalg": [[6, 2, 1, "", "cholesky"], [7, 2, 1, "", "det"], [8, 2, 1, "", "eig"], [10, 2, 1, "", "inv"], [11, 2, 1, "", "matrix_power"], [12, 2, 1, "", "norm"], [13, 2, 1, "", "pinv"], [14, 2, 1, "", "qr"], [15, 2, 1, "", "solve"], [16, 2, 1, "", "svd"]], "lucid.nn": [[91, 1, 1, "", "AlphaDropout"], [116, 1, 1, "", "AvgPool1d"], [117, 1, 1, "", "AvgPool2d"], [118, 1, 1, "", "AvgPool3d"], [102, 1, 1, "", "BCELoss"], [108, 1, 1, "", "BatchNorm1d"], [109, 1, 1, "", "BatchNorm2d"], [110, 1, 1, "", "BatchNorm3d"], [98, 1, 1, "", "Bilinear"], [17, 1, 1, "", "Buffer"], [87, 1, 1, "", "Conv1d"], [88, 1, 1, "", "Conv2d"], [89, 1, 1, "", "Conv3d"], [103, 1, 1, "", "CrossEntropyLoss"], [92, 1, 1, "", "Dropout"], [93, 1, 1, "", "Dropout1d"], [94, 1, 1, "", "Dropout2d"], [95, 1, 1, "", "Dropout3d"], [78, 1, 1, "", "ELU"], [79, 1, 1, "", "GELU"], [104, 1, 1, "", "HuberLoss"], [99, 1, 1, "", "Identity"], [111, 1, 1, "", "InstanceNorm1d"], [112, 1, 1, "", "InstanceNorm2d"], [113, 1, 1, "", "InstanceNorm3d"], [114, 1, 1, "", "LayerNorm"], [80, 1, 1, "", "LeakyReLU"], [100, 1, 1, "", "Linear"], [105, 1, 1, "", "MSELoss"], [119, 1, 1, "", "MaxPool1d"], [120, 1, 1, "", "MaxPool2d"], [121, 1, 1, "", "MaxPool3d"], [18, 1, 1, "", "Module"], [20, 1, 1, "", "ModuleDict"], [21, 1, 1, "", "ModuleList"], [106, 1, 1, "", "NLLLoss"], [19, 1, 1, "", "Parameter"], [22, 1, 1, "", "ParameterDict"], [23, 1, 1, "", "ParameterList"], [81, 1, 1, "", "ReLU"], [82, 1, 1, "", "SELU"], [24, 1, 1, "", "Sequential"], [83, 1, 1, "", "Sigmoid"], [84, 1, 1, "", "Softmax"], [85, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[40, 2, 1, "", "alpha_dropout"], [60, 2, 1, "", "avg_pool1d"], [61, 2, 1, "", "avg_pool2d"], [62, 2, 1, "", "avg_pool3d"], [56, 2, 1, "", "batch_norm"], [47, 2, 1, "", "bilinear"], [50, 2, 1, "", "binary_cross_entropy"], [35, 2, 1, "", "conv1d"], [36, 2, 1, "", "conv2d"], [37, 2, 1, "", "conv3d"], [51, 2, 1, "", "cross_entropy"], [41, 2, 1, "", "dropout"], [42, 2, 1, "", "dropout1d"], [43, 2, 1, "", "dropout2d"], [44, 2, 1, "", "dropout3d"], [26, 2, 1, "", "elu"], [27, 2, 1, "", "gelu"], [52, 2, 1, "", "huber_loss"], [58, 2, 1, "", "instance_norm"], [68, 2, 1, "", "interpolate"], [59, 2, 1, "", "layer_norm"], [29, 2, 1, "", "leaky_relu"], [49, 2, 1, "", "linear"], [64, 2, 1, "", "max_pool1d"], [65, 2, 1, "", "max_pool2d"], [66, 2, 1, "", "max_pool3d"], [54, 2, 1, "", "mse_loss"], [55, 2, 1, "", "nll_loss"], [30, 2, 1, "", "relu"], [69, 2, 1, "", "rotate"], [31, 2, 1, "", "selu"], [32, 2, 1, "", "sigmoid"], [33, 2, 1, "", "softmax"], [34, 2, 1, "", "tanh"], [39, 2, 1, "", "unfold"]], "lucid.nn.init": [[70, 2, 1, "", "constant"], [72, 2, 1, "", "kaiming_normal"], [73, 2, 1, "", "kaiming_uniform"], [74, 2, 1, "", "normal"], [75, 2, 1, "", "uniform"], [76, 2, 1, "", "xavier_normal"], [77, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[126, 1, 1, "", "ASGD"], [127, 1, 1, "", "Adadelta"], [128, 1, 1, "", "Adagrad"], [129, 1, 1, "", "Adam"], [130, 1, 1, "", "AdamW"], [131, 1, 1, "", "Adamax"], [132, 1, 1, "", "NAdam"], [124, 1, 1, "", "Optimizer"], [133, 1, 1, "", "RAdam"], [134, 1, 1, "", "RMSprop"], [135, 1, 1, "", "Rprop"], [136, 1, 1, "", "SGD"]], "lucid.random": [[143, 2, 1, "", "rand"], [144, 2, 1, "", "randint"], [145, 2, 1, "", "randn"], [146, 2, 1, "", "seed"], [147, 2, 1, "", "uniform"]], "lucid.transforms": [[211, 1, 1, "", "Compose"], [213, 1, 1, "", "Normalize"], [214, 1, 1, "", "RandomHorizontalFlip"], [215, 1, 1, "", "RandomVerticalFlip"], [216, 1, 1, "", "Resize"], [212, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 4, 5, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 103, 106, 116, 119, 120, 123, 124, 125, 139, 154, 162, 180, 182, 190, 193, 195, 196, 206, 212, 213, 218], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 199, 202, 203, 204, 206, 207, 209, 210, 211, 213, 214, 215, 216, 218], "000": [163, 164], "0000": [103, 104, 106], "0001": 126, "000e": [163, 164], "001": [126, 129, 130, 132, 133, 136], "002": [131, 132], "004": 132, "005": 80, "01": [29, 80, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136], "01051757": 145, "0205": 103, "0217": 103, "0227": 103, "0299": 103, "044715": [27, 79], "0450": 103, "0451": 103, "04719755": 172, "0474259": 32, "0480": 103, "05": [56, 58, 59, 80, 108, 109, 110, 111, 112, 113, 114], "0507": [31, 82], "06": [127, 135], "07": [50, 51, 102, 103], "0700": 103, "0706508": 85, "0721": 103, "0794": 106, "08": [129, 130, 131, 132, 133, 134], "0802": 106, "08333333": 13, "085537": 179, "0900": [84, 103], "0986": [33, 84], "09861229": 180, "0992": 103, "1": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218], "10": [0, 1, 2, 3, 20, 21, 24, 36, 37, 47, 49, 87, 88, 89, 94, 95, 98, 100, 109, 110, 112, 117, 118, 120, 128, 144, 147, 148, 151, 154, 157, 158, 174, 190], "100": 218, "1000000": 126, "1001": 103, "1003": 103, "1014": 31, "1025": [21, 24], "1026": [21, 24], "1027": [21, 24], "10499": 32, "1050": 83, "1054": 106, "1056": [21, 24], "11": [47, 87, 88, 89, 94, 98, 109, 110, 112, 117, 118, 120, 154, 213], "1111": 102, "1134": 47, "119": 47, "1192": [32, 33, 84], "12": [22, 47, 87, 88, 89, 94, 95, 98, 109, 110, 112, 117, 118, 120, 154, 158, 159], "123": [72, 73, 74, 75, 76, 77, 146, 147], "124": [72, 73, 76, 77], "125": 118, "1250": 104, "128": [24, 211, 218], "128x128": [211, 218], "13": [47, 87, 88, 89, 98, 110, 117, 118, 120, 154], "14": [87, 88, 89, 94, 95, 98, 110, 117, 118, 120, 141, 154, 158], "145": 47, "15": [0, 47, 87, 88, 89, 98, 110, 117, 118, 120, 154, 158, 193, 218], "1513": 106, "155": 154, "1588": [27, 79], "16": [21, 22, 24, 87, 88, 89, 94, 95, 98, 109, 110, 117, 118, 120, 123, 154, 158, 188], "16227766": 14, "16425": 106, "1643": 102, "166": 154, "17": [87, 88, 89, 98, 110, 118, 153], "170": 47, "17520119": 187, "18": [87, 88, 89, 94, 98, 110, 118, 157, 158], "1800": 103, "19": [36, 37, 47, 88, 89, 110, 152, 154], "1966": [33, 83, 84], "1998": 103, "1d": [35, 60, 64, 108, 111, 147, 154, 162, 193, 201, 202, 203, 204, 208], "1e": [50, 51, 56, 58, 59, 102, 103, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "1e6": 126, "2": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218], "20": [0, 20, 21, 24, 88, 89, 94, 110, 158, 179], "2039": 106, "204": 89, "21": [22, 47, 88, 89, 110, 158], "211": 154, "22": [47, 88, 89, 94, 110, 152, 154], "2231": [103, 106], "2247": [108, 109, 110, 111, 112, 113, 114], "226": 154, "22752314": 145, "23": [88, 89, 110], "2324": 82, "234": [72, 73, 74, 75, 76, 77, 147], "24": [47, 88, 89, 94, 110, 158], "2424": [33, 84], "2447": 84, "25": [0, 32, 83, 89, 105, 110, 117, 118, 151, 184, 195], "2500": [102, 104, 106], "2512": 78, "2547": 82, "26": [22, 49, 89, 100, 110, 158], "26325684": 145, "2689": [33, 83, 84], "27": [47, 87, 89, 110, 178], "276": [72, 73, 76, 77], "28": [47, 89, 158], "29": 89, "2_i": [111, 112, 113], "2d": [36, 43, 61, 65, 109, 112, 154, 162, 165, 193, 198, 201, 202, 204, 208], "2e": 131, "2x2": 39, "3": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 52, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216], "30": [21, 69, 89], "3026": 106, "31": [47, 89, 154], "310": [163, 164], "31622777": 14, "32": [21, 24, 47, 49, 88, 89, 100, 123, 152, 153, 158], "321": [72, 73, 76, 77], "33": [21, 24, 49, 89, 100], "33333333": 13, "34": [21, 24, 47, 89, 154, 158], "342": [72, 73, 76, 77], "345": [72, 73, 74, 75, 76, 77, 147], "35": [21, 24, 89], "3567": [102, 106], "36": 89, "3679": [26, 31, 78], "37": 87, "372": 47, "375": 105, "3750": 104, "38344152": 143, "38629436": 180, "389056": 179, "3935": 78, "3d": [37, 44, 62, 66, 89, 110, 113], "3x3": 148, "4": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 22, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 129, 133, 134, 136, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 169, 175, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216], "4044": 102, "4076": 103, "41421356": 6, "41666667": 13, "41808962": 145, "419974": 34, "4199743": 85, "42": [47, 141, 148], "421": [72, 73, 76, 77], "423": [72, 73, 74, 75], "42718872": 14, "4286": 102, "43": [152, 154], "4323": 78, "4375": 104, "43758721": 143, "4472136": 8, "4495": [110, 113], "45": [47, 69], "4545": 91, "47112767": 174, "48": [49, 100], "4979": 78, "4x4": 216, "5": [1, 2, 4, 5, 10, 11, 12, 13, 18, 19, 20, 21, 22, 24, 27, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 52, 54, 56, 58, 59, 60, 61, 68, 70, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 135, 139, 141, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 171, 172, 173, 181, 182, 183, 184, 185, 190, 193, 194, 195, 196, 199, 201, 205, 210, 211, 212, 213, 214, 215, 216, 218], "50": [49, 100, 135, 152, 154, 214, 215, 218], "5000": [102, 104, 106], "5108": 106, "52359878": 173, "53": [47, 153], "543": [72, 73, 74, 75, 76, 77, 147], "54308063": 177, "545": 159, "5455": 91, "563": [72, 73, 76, 77], "57": 47, "57079633": [172, 173], "57366333": 146, "6": [5, 13, 22, 23, 35, 36, 37, 39, 44, 47, 49, 73, 77, 87, 88, 89, 92, 93, 94, 95, 98, 100, 102, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 127, 135, 139, 141, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 181, 182, 183, 190, 193, 194, 195, 196, 199, 204, 205, 210, 212, 213, 216], "6052": 106, "6065": 78, "6124": [108, 109, 110, 111, 112, 113, 114], "62": 47, "62686041": 187, "6321": [26, 78], "63245553": 14, "64": [21, 24, 47], "64589411": 143, "654": [72, 73, 74, 75, 76, 77, 147], "657": [72, 73, 76, 77], "6590": [33, 84], "6652": 84, "66666667": 13, "6667": 102, "6682": 102, "67": 154, "67326": 82, "6733": 31, "678": [72, 73, 74, 75, 76, 77], "68811989": 145, "69314718": 180, "7": [12, 22, 35, 36, 37, 39, 44, 47, 49, 50, 51, 79, 82, 83, 85, 87, 88, 89, 94, 95, 98, 100, 102, 103, 105, 109, 110, 112, 113, 117, 118, 120, 121, 141, 144, 147, 150, 152, 153, 154, 158, 160, 162, 179, 182, 190, 193, 194, 195, 208, 212, 213, 216], "7001": 103, "70710678": [8, 186], "7147": 106, "7182818": 179, "7311": [33, 83, 84], "74": 154, "75": [49, 100, 105, 126], "7581": 31, "76159416": 192, "7616": [34, 85], "76219569": 177, "7635": 82, "772": 159, "78357324": 145, "78539816": 174, "79172504": 143, "8": [11, 15, 21, 22, 24, 35, 36, 37, 39, 44, 47, 49, 50, 79, 82, 83, 85, 87, 88, 89, 92, 93, 94, 95, 98, 100, 102, 105, 109, 110, 112, 113, 117, 118, 120, 121, 129, 130, 131, 132, 133, 134, 141, 144, 151, 152, 153, 154, 158, 159, 161, 162, 178, 182, 190, 193, 194, 195, 212, 213, 216], "8005": 103, "8182": 91, "82": 47, "8413": [27, 79], "8584": 82, "876": [72, 73, 76, 77, 147], "8808": [33, 83, 84], "887": 159, "891773": 143, "89442719": 8, "9": [0, 1, 3, 15, 36, 39, 47, 49, 87, 88, 89, 94, 98, 100, 102, 109, 110, 112, 117, 118, 120, 126, 127, 129, 130, 131, 132, 133, 134, 136, 141, 144, 147, 150, 154, 158, 159, 160, 162, 188, 189, 212, 213], "90709145": 146, "9091": 91, "9120": 106, "9163": 106, "9486833": 14, "949e": [163, 164], "9526": 32, "9545": 79, "96366276": 143, "9640": 85, "96402758": 192, "99": 134, "9957": 106, "99734545": 146, "999": [0, 129, 130, 131, 132, 133], "A": [1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 55, 56, 58, 59, 68, 91, 92, 93, 94, 95, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "As": 146, "Be": 0, "By": [0, 2, 3, 4, 19, 69, 123, 133, 139, 143, 144, 145, 147, 212, 218], "For": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 24, 26, 27, 29, 30, 31, 32, 34, 47, 49, 68, 72, 73, 76, 77, 82, 87, 88, 89, 98, 100, 108, 109, 110, 111, 112, 113, 123, 125, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 179, 180, 181, 182, 183, 186, 188, 190, 193, 194, 195, 202, 204, 206, 208, 209, 218], "If": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 44, 47, 49, 56, 58, 68, 69, 72, 73, 87, 88, 89, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 129, 130, 134, 135, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216], "In": [3, 4, 13, 35, 36, 37, 103, 106, 138, 139, 140, 211, 218], "It": [1, 2, 3, 4, 13, 14, 15, 18, 20, 21, 22, 23, 24, 44, 47, 68, 69, 79, 81, 85, 98, 99, 102, 103, 104, 105, 106, 123, 124, 125, 126, 132, 134, 135, 136, 139, 146, 150, 151, 152, 155, 156, 157, 159, 160, 181, 183, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212], "Its": [15, 148], "Near": 13, "No": 39, "Not": 99, "One": 218, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "There": 205, "These": [4, 5, 8, 11, 14, 16, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 135, 141, 148, 218], "To": [3, 125, 145, 148, 163, 164, 201, 218], "With": [3, 39, 212, 218], "_": [11, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 34, 49, 68, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 126, 127, 129, 130, 131, 132, 134, 136, 152, 153, 154, 158, 193, 194, 213, 214, 215], "_1": [8, 20, 21, 22, 23, 24, 47, 98, 158, 197, 199, 210], "_2": [8, 20, 21, 22, 23, 24, 47, 98, 158, 197, 199, 210], "__call__": [1, 18], "__getitem__": [0, 2, 3], "__init__": [0, 1, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149, 211, 212], "__iter__": [0, 1], "__len__": [0, 1, 2, 3], "__repr__": 124, "__setattr__": 18, "_activ": 33, "_arraylik": [141, 162, 164, 167, 169], "_arraylikeint": 202, "_arrayorscalar": [17, 19, 141, 149, 196], "_base_dtyp": [161, 163, 166, 168], "_c": 213, "_decai": 132, "_fanmod": [72, 73], "_grad_en": [138, 140], "_i": [8, 12, 33, 47, 84, 105, 108, 114, 116, 119, 152, 153, 155, 156, 158, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 204, 206, 209, 210], "_in": [72, 73, 76, 77], "_j": [33, 84, 116, 119, 158, 182, 190, 194, 195], "_k": 207, "_left": 68, "_modul": 18, "_n": [8, 20, 21, 22, 23, 24, 197, 199, 210], "_numpyarrai": 141, "_out": [72, 73, 76, 77, 204, 208], "_p": 12, "_pad": 202, "_paddingstr": [87, 88, 89], "_paramet": 18, "_reductiontyp": [50, 51, 52, 54, 55, 102, 103, 104, 105, 106], "_right": 68, "_scalar": [70, 74, 75, 76, 77, 141, 161, 175], "_shapelik": [59, 114, 141, 144, 166, 168, 205, 206, 209], "_slope": 80, "_statedict": 124, "_t": [133, 134], "_tensor": [17, 19, 162, 196], "_tensorop": 149, "_u": 13, "_v": 13, "_valu": [175, 202], "_width": 202, "a_i": [155, 156, 159], "ab": 170, "abc": [2, 124], "abil": [4, 218], "about": 4, "abov": [4, 138, 140, 146, 162, 165], "absolut": [11, 12, 52, 131, 171], "abstract": [2, 3, 123, 124, 125, 126, 134, 136], "abstractmethod": 124, "acceler": [82, 108, 109, 110, 126, 132, 134, 136], "accept": [99, 143, 149], "access": [0, 2, 3, 17, 19, 20, 21, 22, 23, 24, 205], "accord": [68, 87, 88, 89, 98, 100, 103, 106, 127, 128, 129, 130, 131, 132, 133, 194], "accordingli": 7, "account": [11, 13, 14], "accumul": [126, 127, 128, 150, 151, 155, 156, 157, 160], "achiev": [35, 36, 37, 132, 214, 215], "across": [0, 17, 21, 24, 59, 76, 77, 108, 109, 110, 111, 112, 113, 114, 141, 143, 144, 145, 146, 147, 148, 163, 164, 182, 195], "act": 130, "activ": [4, 20, 24, 26, 27, 29, 30, 31, 32, 33, 34, 40, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 102, 103, 106, 108, 109, 110, 114, 181, 183], "actual": [19, 102, 103, 105, 106, 149], "ad": [18, 20, 21, 22, 23, 24, 35, 36, 37, 47, 49, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 66, 87, 88, 89, 102, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 209, 218], "adadelta": 137, "adagrad": [127, 137], "adam": [130, 131, 132, 133, 137], "adamax": 137, "adamw": 137, "adapt": [127, 128, 129, 132, 133, 134, 135], "add": [18, 20, 21, 24, 47, 49, 87, 88, 89, 98, 100, 114, 124, 126, 129, 134, 136, 139, 170, 202, 209], "add_modul": [18, 24], "add_param_group": 124, "addit": [4, 11, 18, 21, 24, 47, 49, 56, 58, 98, 100, 108, 109, 110, 111, 112, 113, 126, 132, 139, 148, 150, 207], "addition": 132, "address": [103, 106, 129, 130, 133], "adjust": [91, 108, 109, 110, 111, 112, 113, 114, 125, 129, 133, 134, 135, 199, 210], "advanc": [3, 13, 21, 24, 35, 36, 37, 123, 126], "advantag": 140, "affect": [138, 203, 206, 211], "affin": [108, 109, 110, 111, 112, 113, 114], "after": [11, 19, 20, 21, 22, 23, 24, 44, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 130, 140, 149, 150, 151, 155, 156, 157, 159, 160, 202, 212], "afterward": 140, "aggreg": [158, 204, 208], "aim": 4, "algebra": [4, 5, 165], "algorithm": [4, 11, 13, 14, 124, 125, 148], "align": [15, 68, 153, 154], "align_corn": 68, "all": [0, 3, 4, 14, 18, 20, 21, 22, 23, 24, 36, 37, 61, 62, 65, 66, 68, 80, 81, 89, 117, 118, 121, 123, 124, 125, 126, 129, 134, 135, 136, 159, 181, 182, 183, 190, 193, 195, 197, 198, 199, 204, 206, 207, 208, 210, 213, 218], "allevi": 26, "alloc": [163, 164], "allow": [0, 1, 3, 4, 13, 14, 19, 20, 21, 22, 23, 24, 26, 29, 30, 33, 37, 39, 69, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 123, 127, 128, 139, 161, 166, 168, 169, 194, 196, 201, 211, 212, 218], "along": [33, 68, 84, 153, 154, 158, 181, 182, 183, 190, 193, 195, 197, 199, 201, 204, 207, 208, 209, 210, 214, 215], "alongsid": 17, "alpha": [26, 29, 31, 40, 78, 82, 91, 126, 134], "alpha_dropout": [45, 46, 91], "alphadropout": [96, 97], "alphadropoutmodel": 91, "also": [26, 27, 29, 30, 31, 32, 34, 47, 49, 68, 132, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210], "alter": [24, 205], "altern": [1, 79, 127, 154], "alwai": [19, 203, 214, 215], "amount": [35, 36, 37, 60, 61, 62, 64, 65, 66, 132], "amsgrad": [129, 130], "an": [0, 1, 3, 4, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 23, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 68, 69, 76, 77, 78, 83, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 129, 132, 134, 140, 141, 149, 154, 162, 165, 175, 182, 190, 195, 197, 204, 208, 209, 211, 212, 213, 214, 215, 216, 218], "analog": [204, 208], "analysi": [87, 88, 89, 113, 116, 118, 119, 121], "angl": 69, "ani": [0, 1, 2, 3, 11, 13, 17, 18, 19, 20, 22, 23, 26, 27, 29, 30, 31, 32, 34, 40, 41, 47, 49, 56, 58, 83, 114, 123, 124, 138, 140, 146, 149, 161, 162, 163, 165, 166, 167, 168, 169, 181, 183, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 211, 218], "anoth": [23, 160, 167, 169, 212, 218], "api": 218, "appear": 124, "append": [21, 23, 24], "appli": [2, 4, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 130, 131, 132, 133, 154, 202, 204, 211, 213, 214, 215, 216, 218], "applic": [13, 35, 58, 87, 88, 89, 98, 100, 148, 161, 168, 202, 216], "approach": [3, 24, 130], "appropri": [13, 18, 22, 24, 87, 88, 89, 91, 92, 93, 103, 117, 118, 138, 140], "approx": 31, "approxim": [13, 27, 79, 117, 120], "ar": [1, 2, 3, 4, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 35, 36, 37, 39, 47, 49, 68, 72, 73, 75, 76, 77, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 171, 175, 179, 181, 182, 183, 184, 185, 190, 193, 194, 197, 201, 204, 205, 208, 211, 212, 216, 218], "arang": 170, "arbitrari": [21, 99, 163, 164, 175, 180, 182, 186, 188, 190, 194, 195], "arcco": 170, "architectur": [20, 21, 22, 23, 24, 27, 81, 98, 99, 123], "arcsin": 170, "arctan": 170, "area": 68, "arg": [18, 99, 163], "argument": [3, 18, 24, 99, 143, 163, 194], "around": [8, 69, 85], "arr": [141, 197, 199, 207, 210], "arrai": [4, 17, 19, 139, 141, 149, 154, 162, 167, 169, 196, 203, 204, 212, 218], "asarrai": 141, "asgd": 137, "aspect": 216, "assign": [18, 20, 22, 24, 68, 103, 106], "associ": [22, 23], "assum": [0, 1, 124, 125, 138], "attempt": [20, 24], "attent": [23, 47], "attribut": 18, "audio": 87, "augment": [3, 69, 148, 204, 208, 211, 214, 215, 218], "autodiff": 4, "autograd": 123, "automat": [4, 19, 20, 21, 22, 23, 123, 143, 144, 145, 147, 149, 163, 164, 169, 201, 212], "auxiliari": 17, "avail": 4, "averag": [17, 60, 61, 62, 68, 105, 116, 117, 118, 126, 127, 129, 134, 182], "avg_pool": [116, 117, 118], "avg_pool1d": [46, 63], "avg_pool2d": [46, 63], "avg_pool3d": [46, 63], "avgpool1d": [97, 122], "avgpool1dmodel": 116, "avgpool2d": [97, 122], "avgpool2dmodel": 117, "avgpool3d": [97, 122], "avgpool3dmodel": 118, "avoid": [2, 3, 13, 22, 140], "ax": [5, 139, 181, 182, 183, 190, 194, 195, 204, 206, 208], "axi": [33, 84, 153, 154, 181, 182, 183, 190, 195, 197, 199, 201, 202, 204, 206, 207, 208, 209, 210, 214, 215], "b": [5, 15, 47, 49, 75, 87, 88, 89, 98, 100, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 197, 199, 207, 210], "b_i": [155, 156, 159], "back": [68, 117, 118, 153, 158, 204, 208], "backpropag": [4, 7, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 140, 145, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 179, 181, 183, 196, 202, 204, 208, 212], "backward": [4, 17, 19, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149, 212], "balanc": 104, "bar": 126, "base": [3, 5, 10, 11, 14, 15, 18, 20, 21, 22, 23, 39, 47, 91, 103, 104, 123, 124, 125, 126, 130, 134, 135, 136, 150, 151, 155, 156, 157, 159, 160, 169, 179, 180, 181, 183, 194, 201, 202, 214, 215], "basic": [4, 35, 36, 37, 72, 73, 76, 77, 213, 214, 215, 216], "batch": [1, 2, 3, 5, 11, 14, 16, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 87, 88, 89, 98, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 133, 154, 213, 216], "batch_norm": [46, 57, 108, 109, 110], "batch_norm1": 24, "batch_norm2": 24, "batch_siz": [1, 2, 3], "batchnorm1d": [97, 115], "batchnorm1dmodel": 108, "batchnorm2d": [24, 97, 115], "batchnorm2dmodel": 109, "batchnorm3d": [97, 115], "batchnorm3dmodel": 110, "bceloss": [97, 107], "becaus": [2, 144], "becom": [12, 18, 127, 135], "befor": [11, 19, 126, 132, 140, 146, 202, 213, 218], "begin": [1, 12, 26, 29, 30, 31, 78, 80, 81, 82, 104, 105, 106, 116, 117, 118, 119, 120, 121, 133, 135, 139, 148, 155, 156, 158, 171, 175, 181, 183, 185, 202], "behav": [104, 193], "behavior": [21, 24, 138, 148, 154, 164, 218], "being": [23, 69, 91, 92, 93, 94, 95, 133, 138, 140, 197, 199, 210], "belong": 0, "below": [14, 154, 162, 165], "benefici": 24, "benefit": [26, 123, 132, 141], "bernoulli": [91, 92, 93, 94, 95], "best": [72, 73, 76, 77], "beta": [108, 109, 110, 111, 112, 113, 114, 129, 130, 131, 132, 133], "beta1": [129, 130, 131, 132, 133], "beta2": [129, 130, 131, 132, 133], "beta_1": [129, 130, 131, 132, 133], "beta_2": [129, 130, 131, 132, 133], "better": [10, 27, 72, 73, 76, 77, 111, 112, 113, 123, 130, 132, 134, 213], "between": [18, 35, 36, 37, 39, 47, 52, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 126, 134, 135, 136, 148, 150, 151, 154, 157, 160, 161, 195, 214, 215, 216], "beyond": [4, 21], "bia": [35, 36, 37, 47, 49, 56, 58, 59, 87, 88, 89, 98, 100, 108, 109, 110, 111, 112, 113, 114, 129, 130, 131, 132, 133], "bias": [87, 88, 89, 100, 114, 123], "bias1": 22, "bias2": 22, "bilinear": [46, 48, 68, 97, 101], "bilinearmodel": 98, "binari": [32, 50, 83, 91, 92, 93, 94, 95, 102], "binary_cross_entropi": [46, 53], "block": [18, 39, 87, 88, 89, 140], "block1": 123, "block2": 123, "bmatrix": 158, "bool": [1, 16, 18, 19, 40, 41, 42, 43, 44, 56, 58, 68, 87, 88, 89, 98, 100, 108, 109, 110, 111, 112, 113, 114, 129, 130, 134, 138, 143, 144, 145, 147, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 190, 195, 196, 212], "both": [35, 49, 60, 64, 79, 87, 88, 116, 117, 119, 120, 152, 153, 154, 158, 162, 201, 216], "bottom": 68, "bound": [73, 75, 77, 135, 147], "break": 123, "brief": 218, "bright": 218, "broadcast": [94, 95, 182, 190, 195, 205, 209], "buffer": [126, 132, 134, 136], "build": [4, 18, 21, 24, 123, 218], "built": [3, 4, 24, 123], "c": [39, 42, 43, 44, 51, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 94, 95, 103, 106, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 139, 199, 210, 213], "c_": [87, 88, 89], "c_in": [35, 36, 37], "c_out": [35, 36, 37], "calcul": [0, 1, 4, 5, 19, 127, 128, 131, 132, 133, 140, 144, 149], "calculu": [6, 13], "call": [1, 18, 138, 150, 151, 154, 155, 156, 157, 159, 160], "callabl": [124, 211], "can": [0, 2, 3, 4, 6, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 29, 35, 36, 37, 69, 79, 80, 85, 87, 88, 89, 111, 112, 113, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 147, 148, 149, 154, 163, 164, 165, 166, 168, 169, 182, 190, 195, 199, 201, 202, 204, 205, 208, 209, 210, 211, 212, 214, 215, 218], "cannot": [7, 8, 10, 11, 14, 15, 16], "capabl": [4, 161, 162, 165, 166, 167, 168, 169], "captur": [39, 87, 88, 89, 98], "care": 140, "cartesian": 201, "case": [3, 12, 26, 29, 30, 31, 78, 80, 81, 82, 104, 105, 106, 116, 117, 118, 119, 120, 121, 123, 128, 133, 135, 139, 155, 156, 171, 175, 181, 183, 185, 202, 218], "caus": [3, 13, 126, 134, 136], "cautiou": 0, "cdot": [6, 7, 10, 11, 12, 15, 26, 27, 29, 31, 32, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 68, 76, 77, 79, 83, 91, 98, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 135, 152, 153, 154, 157, 159], "center": [69, 85, 134, 218], "centercrop": 218, "central": 141, "certain": [7, 27, 47, 98, 129, 130, 138, 181, 183], "chain": [10, 11, 24, 211, 218], "chanc": [214, 215], "chang": [52, 104, 135, 139, 140, 203, 205, 209, 218], "channel": [35, 36, 37, 39, 42, 43, 44, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 87, 88, 89, 94, 95, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 213, 216], "check": 138, "checkpoint": 125, "choic": 201, "choleski": 9, "chosen": 91, "clariti": 141, "class": [3, 4, 33, 51, 55, 123, 125, 162, 165, 196, 218], "classif": [32, 33, 50, 51, 55, 83, 84, 102, 103, 106], "cleaner": [1, 140, 154], "clear": [19, 149, 163, 164], "clearli": 141, "clip": [69, 135, 170], "clockwis": 69, "close": [10, 13, 82, 102, 134], "closer": 78, "closur": [124, 125], "co": [170, 186], "code": [11, 20, 22, 24, 138, 140, 141, 148], "coeffici": [15, 68, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "col": 39, "collect": [5, 20, 21, 23, 24, 125], "color": 218, "colorjitt": 218, "column": [7, 8, 10, 14, 15, 16, 39, 165, 199, 201], "combin": [1, 3, 21, 24, 26, 27, 79, 103, 123, 132, 133, 182, 190, 195, 197, 218], "combined_dataset": [0, 1], "common": [39, 69, 125, 218], "commonli": [4, 27, 32, 33, 34, 35, 37, 47, 54, 56, 58, 69, 76, 77, 84, 89, 102, 105, 106, 116, 117, 118, 119, 120, 121, 139, 141, 166, 206, 212, 213, 214, 215, 218], "compar": [148, 207], "compat": [5, 99, 114, 123, 139, 148, 212, 218], "complex": [2, 3, 4, 8, 20, 21, 24, 30, 81, 119, 121, 123, 125, 218], "compon": [13, 18, 21, 125, 149, 218], "compos": [87, 88, 89, 116, 117, 118, 119, 120, 121, 123, 218], "comprehens": 3, "comput": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 47, 49, 50, 51, 52, 54, 55, 56, 58, 68, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 134, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 204, 208, 212, 218], "computation": [3, 13], "compute_loss": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "concaten": [0, 35, 36, 37, 199, 200, 207, 210], "concept": [4, 13], "condit": [6, 7, 10], "configur": 23, "conjunct": [39, 106], "connect": [49, 87, 88, 89, 100], "consid": [3, 10, 13, 24, 72, 73, 76, 77, 123, 135, 138, 163, 164, 218], "consider": 13, "consist": [2, 17, 141, 146, 148, 202, 216, 218], "consistent_tensor": 148, "constant": [50, 51, 56, 58, 59, 71, 82, 102, 103, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 141, 202], "constant_pad": 202, "constraint": 1, "construct": [4, 21, 123, 162, 204, 208], "contain": [1, 7, 8, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 33, 39, 47, 49, 50, 51, 55, 68, 102, 103, 106, 124, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 164, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 201], "content": 69, "context": [138, 140], "contextmanag": 140, "contigu": 203, "continu": [80, 145], "contrast": [111, 112, 113, 218], "contribut": [68, 91, 92, 93, 94, 95, 116, 119, 120, 121, 126, 132, 193], "control": [78, 104, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 148, 212, 218], "conv": [109, 110], "conv1": [24, 87, 88, 89, 116, 117, 118, 119, 120, 121], "conv1d": [38, 46, 90, 97, 116, 119], "conv1dmodel": 87, "conv2": [24, 87, 88, 89], "conv2d": [21, 24, 38, 46, 90, 97, 109, 117, 120, 123], "conv2dmodel": 88, "conv3d": [38, 46, 90, 97, 110, 118, 121], "conv3dmodel": 89, "conv_lay": 21, "convblock": 123, "convent": 154, "converg": [13, 85, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 213], "convers": [103, 106, 218], "convert": [17, 19, 33, 84, 149, 201, 211, 212, 218], "convnetwork": 21, "convolut": [21, 35, 36, 37, 39, 87, 88, 89, 117, 118, 120, 121, 202], "convolv": [35, 36, 37, 87, 88, 89], "coordin": 201, "core": [0, 1, 2, 3, 18, 123, 124, 149, 218], "corner": 68, "correct": [20, 103, 106, 129, 130, 131, 132, 133, 212], "correctli": [13, 18, 20, 21, 22, 23, 24, 103, 106, 148], "correspond": [0, 1, 2, 8, 20, 22, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 68, 81, 84, 98, 100, 108, 109, 110, 111, 112, 113, 117, 118, 126, 134, 136, 152, 153, 155, 156, 159, 179, 180, 186, 188, 199, 202, 204, 208, 210], "cosh": [170, 187, 192], "cosin": [172, 176, 177, 186], "could": 18, "count": 197, "counterclockwis": 69, "cover": [5, 35, 36, 37], "creat": [2, 3, 4, 17, 18, 21, 24, 123, 139, 148, 161, 165, 166, 167, 168, 169, 201, 207, 211, 218], "creation": [21, 24, 218], "criterion": [102, 103, 104, 105, 106], "critic": [13, 125, 148], "crop": 218, "cross": [50, 51, 102, 103], "cross_entropi": [46, 53], "crossentropyloss": [97, 107], "cube": 170, "cumul": [27, 79], "current": [18, 126, 129, 135, 138], "custom": [4, 17, 20, 21, 22, 23, 24, 69, 78, 80, 123, 148, 165], "customiz": 218, "custommodul": 17, "customnetwork": 20, "customparametermodel": [22, 23], "d": [37, 44, 62, 66, 110, 113, 114, 118, 121, 139, 162], "d_": [37, 62, 66, 89, 118, 121], "d_1": 114, "d_2": 114, "d_n": 114, "d_out": [37, 62, 66], "dampen": [126, 134, 136], "data": [4, 11, 17, 19, 23, 34, 35, 37, 39, 43, 44, 49, 69, 81, 85, 87, 88, 89, 100, 113, 116, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 148, 149, 150, 151, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 202, 203, 204, 205, 206, 208, 211, 212, 214, 215, 218], "dataload": [2, 3], "dataset": [3, 69, 128, 140, 211, 218], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 158, "debug": [24, 138, 146, 218], "decai": [126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "decompos": [6, 14, 16], "decomposit": [5, 6, 10, 13, 14, 16], "decoupl": [127, 128, 130, 131, 132, 133], "decreas": [129, 130, 135], "deep": [1, 3, 4, 56, 79, 82, 123, 148, 211, 212, 218], "deeper": [4, 82], "def": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "default": [1, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 33, 35, 36, 37, 40, 41, 42, 43, 44, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 132, 138, 143, 144, 145, 147, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 190, 194, 195, 196, 197, 199, 201, 202, 204, 207, 210, 212, 214, 215], "defin": [1, 3, 4, 20, 21, 22, 23, 24, 79, 102, 103, 104, 105, 106, 116, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 144, 145, 159, 164, 175, 194, 211, 218], "definit": [4, 6, 218], "degre": [69, 218], "delai": 126, "delta": [33, 52, 84, 104, 127], "delta_": [33, 84], "demonstr": [4, 5, 123, 141], "denomin": [56, 58, 59, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 151], "denot": [11, 83, 87, 88, 89, 91, 92, 93, 94, 95, 194], "dens": [4, 128], "dense1": 4, "dense2": 4, "densiti": [27, 79], "depend": [4, 11, 12, 23, 50, 51, 52, 54, 55, 68, 87, 152, 162, 181, 183, 204, 208, 216], "depth": [21, 37, 44, 62, 66, 89, 110, 113, 118, 121], "depthwis": [35, 36, 37], "deriv": [13, 14, 33, 79, 84, 85, 87, 88, 89, 98, 100], "descend": 16, "descent": [4, 126, 136], "describ": [7, 8], "descript": 218, "deseri": 17, "design": [3, 4, 5, 19, 21, 22, 23, 24, 26, 31, 82, 91, 123, 141, 218], "desir": [17, 194, 196], "destin": 18, "det": [5, 9], "det_a": 7, "detail": [4, 125, 148, 154], "determin": [0, 4, 5, 6, 7, 72, 73, 76, 77, 87, 88, 89, 117, 118, 120, 121, 134, 138, 143, 144, 145, 147, 163, 164], "determinist": 69, "develop": [4, 123, 148, 218], "deviat": [72, 74, 76, 211, 213, 218], "diag": [13, 170], "diagon": [13, 14, 16, 162, 165, 193], "diagonaliz": 8, "dict": [18, 20, 22, 99, 124], "dictionari": [18, 19, 20, 22, 24, 124], "differ": [0, 11, 21, 24, 33, 47, 68, 84, 98, 105, 125, 139, 146, 148, 160, 169, 195, 206, 218], "differenti": [4, 6, 15, 79, 123, 143, 144, 145, 147, 149, 161, 163, 164, 166, 168], "dilat": [35, 36, 37, 87, 88, 89], "dilation_height": 39, "dilation_width": 39, "dim": [103, 106], "dimens": [7, 8, 10, 11, 14, 15, 16, 19, 33, 47, 49, 56, 58, 59, 68, 84, 87, 88, 89, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 139, 141, 143, 147, 149, 153, 163, 181, 182, 183, 190, 193, 194, 195, 197, 199, 202, 204, 206, 207, 208, 209, 210, 216], "dimension": [11, 13, 14, 16, 35, 36, 37, 60, 61, 62, 64, 65, 66, 87, 88, 89, 93, 94, 95, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 139, 153, 154, 158, 162, 179, 182, 190, 193, 195, 198, 203, 204, 206, 208], "diminish": 128, "direct": [8, 102, 103, 104, 105, 106, 126, 134, 135, 136], "directli": [20, 21, 22, 23, 68, 127, 128, 130, 131, 132, 133, 146, 148, 196, 218], "directori": 3, "disabl": [138, 140], "discontinu": 185, "discrep": [102, 103, 106], "discret": [144, 148], "disk": 3, "distribut": [27, 33, 68, 72, 73, 74, 75, 76, 77, 79, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 103, 106, 116, 117, 118, 143, 144, 145, 147, 148, 182, 190, 193, 195, 207, 213, 214, 215], "div": 170, "divers": [69, 214, 215, 218], "diversifi": 218, "divid": [1, 13, 21, 24, 33, 35, 36, 37, 84, 102, 103, 104, 105, 106, 151, 213], "divis": [4, 13, 35, 36, 37, 91, 92, 93, 94, 95, 127, 128, 129, 130, 131, 132, 133, 134, 151], "do": [13, 15, 17, 20, 21, 22, 23, 40, 41, 42, 43, 123, 133, 138, 169, 193, 202], "document": [4, 125, 141, 148], "doe": [4, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 77, 129, 130, 135, 138, 140, 143, 144, 145, 146, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 205], "doesn": 140, "don": 140, "dot": [8, 11, 20, 21, 22, 23, 24, 114, 119, 120, 121, 153, 158, 170, 197, 199, 207, 210], "down": [3, 123, 216], "drawback": 26, "drawn": [143, 144, 145, 147, 148], "drop": [91, 92, 93, 94, 95], "dropout": [27, 40, 42, 43, 44, 91, 93, 94, 95], "dropout1d": [45, 46, 96, 97], "dropout1dmodel": 93, "dropout2d": [45, 46, 96, 97], "dropout3d": [45, 46, 96, 97], "dropoutmodel": 92, "dtype": [17, 19, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 212], "due": [11, 13, 35, 36, 81], "duplic": [20, 22], "dure": [3, 4, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 40, 41, 42, 43, 44, 56, 58, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 149, 150, 181, 182, 183, 190, 195, 212, 218], "dy": [29, 80], "dynam": [0, 2, 3, 18, 21, 22, 23, 24, 114, 128, 133, 138], "dynamicnetwork": 21, "e": [0, 7, 8, 10, 11, 14, 16, 17, 33, 83, 84, 91, 103, 124, 127, 134, 135, 165, 177, 179, 180, 187, 192, 193, 197], "each": [1, 2, 3, 8, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 56, 58, 81, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199, 201, 202, 204, 207, 208, 210, 211, 212, 213, 216, 218], "earli": 133, "eas": 4, "easi": [2, 3, 4, 19, 20, 22], "easier": [3, 20, 21, 24], "easili": [19, 23, 218], "economi": 16, "edg": 202, "educ": 4, "effect": [20, 21, 22, 23, 24, 33, 35, 36, 37, 39, 78, 79, 81, 83, 84, 85, 108, 109, 110, 111, 112, 113, 114, 138, 139, 140, 199, 210], "effici": [1, 2, 3, 4, 5, 10, 15, 39, 103, 123, 140], "eig": 9, "eigenvalu": [8, 14], "eigenvector": 8, "eigval": 8, "eigvec": 8, "either": [49, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 196, 201], "element": [0, 13, 14, 19, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 81, 84, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 114, 116, 117, 118, 119, 120, 121, 139, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 201, 202, 204, 205, 206, 208], "elementwise_affin": 114, "elsewher": [119, 120, 121, 165], "elu": [28, 46, 86, 97], "elumodel": 78, "empti": [18, 24, 170], "empty_lik": 170, "enabl": [0, 1, 2, 3, 4, 11, 16, 18, 19, 20, 21, 22, 23, 81, 87, 88, 89, 98, 100, 123, 125, 138, 140, 143, 144, 145, 147, 149, 211], "encapsul": [123, 149], "encod": [103, 106], "encourag": [92, 93, 94, 95, 102, 103, 106, 129], "end": [12, 26, 29, 30, 31, 78, 80, 81, 82, 104, 105, 106, 116, 117, 118, 119, 120, 121, 133, 135, 155, 156, 158, 161, 171, 175, 181, 183, 185, 197, 202, 218], "enforc": [18, 20, 22], "engin": 13, "enhanc": [20, 22, 218], "ensur": [3, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 33, 80, 84, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 159, 182, 190, 195, 202, 212, 213, 216, 218], "enter": 140, "entir": [3, 42, 43, 44, 94, 95, 148], "entri": 206, "entropi": [50, 51, 102, 103], "environ": 4, "ep": [50, 51, 56, 58, 59, 102, 103, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134], "epoch": [1, 3], "epsilon": [102, 103, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134], "equal": [11, 68, 116, 117, 118], "equat": [8, 13, 15], "equival": [154, 193, 203], "error": [0, 3, 8, 10, 18, 21, 22, 23, 24, 27, 52, 54, 79, 102, 103, 104, 105, 123, 124, 140, 141], "especi": [3, 20, 22, 23, 83, 139, 140, 141, 146, 211, 212, 218], "essenti": [1, 3, 4, 5, 11, 13, 36, 39, 123, 146, 148, 181, 211, 212, 218], "estim": [105, 129, 130, 131, 132, 133, 134], "eta": 135, "eta_": 135, "etc": [102, 212], "euclidean": 12, "evalu": [18, 56, 58, 91, 92, 93, 94, 95, 108, 109, 110, 111, 112, 113, 218], "even": [127, 140, 161, 162, 165, 166, 167, 168, 169], "evenli": 161, "everi": [1, 218], "everywher": 185, "exact": [18, 21, 194], "exactli": 24, "exampl": 154, "except": [0, 185, 197, 199, 210], "exclus": [144, 147, 161], "execut": [21, 140], "exist": [15, 20, 22, 24, 197], "exit": 140, "exp": [26, 31, 32, 34, 78, 82, 170], "expand": [39, 204, 208], "expect": [6, 21, 24, 91, 92, 93, 94, 95, 114, 123, 141], "expens": 3, "experi": [4, 146, 148, 218], "experiment": 148, "explan": [11, 13, 126], "explicit": 24, "explicitli": [20, 22], "explod": [82, 108, 109, 110], "explor": [123, 148], "expon": [11, 159], "exponenti": [26, 31, 33, 78, 82, 84, 91, 129, 130, 131, 132, 133, 179], "extens": 125, "extern": 4, "extract": [39, 89, 116, 118, 162, 181, 183], "extrem": 13, "ey": 170, "f": [1, 4, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 84], "facilit": [20, 24, 33, 84, 87, 88, 89, 123, 125, 213, 218], "factor": [26, 35, 36, 37, 39, 76, 77, 126, 133, 134, 135, 136, 141], "failur": [20, 21, 22, 23, 123], "fals": [1, 16, 17, 18, 19, 40, 41, 42, 43, 44, 56, 58, 68, 70, 72, 73, 74, 75, 76, 77, 87, 88, 89, 98, 100, 129, 130, 134, 138, 143, 144, 145, 147, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 190, 195, 196, 212], "fan": [72, 73, 76, 77], "fan_in": [72, 73], "fan_out": [72, 73], "fast": 133, "faster": [128, 132, 140], "fc": [21, 88, 89, 116, 117, 118, 119, 120, 121], "fc1": [20, 24, 79, 81, 82, 83, 85, 100], "fc2": [20, 24, 79, 81, 82, 83, 85, 100], "featur": [3, 47, 49, 56, 89, 92, 93, 94, 95, 98, 100, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 128], "fed": [3, 218], "feed": [3, 149, 218], "fetch": 0, "fewer": 1, "file": 3, "fill": [70, 74, 75, 143, 144, 145, 147, 166, 167, 168, 169], "filter": [35, 36, 37, 39, 88, 89], "filter_height": 39, "filter_s": 39, "filter_width": 39, "final": [20, 21, 22, 23, 24, 211, 218], "find": [15, 181, 183], "fine": 218, "finish": 140, "first": [8, 21, 22, 47, 98, 129, 130, 131, 132, 133, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 201, 210, 211, 212, 218], "fit": 123, "fix": [21, 202], "flatten": [24, 39, 158, 200, 203, 204], "flexibl": [1, 3, 4, 20, 21, 22, 23, 24, 123, 125, 141, 166, 167, 212, 218], "flip": [214, 215, 218], "float": [2, 17, 19, 26, 29, 40, 41, 42, 43, 44, 50, 51, 52, 56, 58, 59, 69, 70, 74, 75, 76, 77, 78, 80, 91, 92, 93, 94, 95, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 147, 149, 161, 164, 175, 196, 213, 214, 215], "float32": [17, 19, 149, 161, 162, 165, 166, 168, 196, 212], "float64": [169, 196, 212], "flow": [24, 77, 79, 83, 85, 87, 88, 89, 98, 100, 138], "fly": [2, 3], "fname": 3, "focu": 4, "focus": 4, "follow": [0, 4, 5, 8, 14, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 183, 201, 205, 213, 214, 215, 218], "form": [14, 158, 201, 204, 208, 218], "format": [2, 3, 103, 106, 212], "formul": 27, "formula": [8, 16, 33, 84, 104, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 154, 195], "forward": [4, 17, 18, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "found": 4, "foundat": [18, 123, 125, 149], "four": 202, "frac": [6, 7, 8, 10, 11, 12, 13, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213], "frame": 44, "framework": [4, 103, 106, 108, 109, 110, 111, 112, 113, 124, 125, 218], "frequent": [103, 106], "from": [0, 1, 2, 3, 4, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 39, 47, 56, 58, 68, 70, 72, 73, 74, 75, 76, 77, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 155, 156, 160, 162, 181, 182, 183, 190, 195, 197, 199, 201, 204, 206, 207, 208, 210, 213, 214, 215, 218], "full": 16, "full_matric": 16, "fulli": [5, 49, 100, 148], "function": [3, 4, 5, 18, 20, 21, 22, 23, 24, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 123, 125, 141, 148, 211, 218], "fundament": [4, 49, 100, 212], "further": [4, 148, 182, 190, 195], "futur": 99, "g": [0, 7, 8, 11, 14, 16, 91, 124, 127, 134, 197], "g_": 128, "g_t": 134, "gain": [76, 77], "gamma": [108, 109, 110, 111, 112, 113, 114], "gaussian": [27, 79], "gelu": [28, 46, 86, 97], "gelunetwork": 79, "gener": [13, 69, 91, 92, 93, 94, 95, 112, 130, 132, 133, 140, 143, 144, 145, 146, 147, 148, 153, 161, 163, 164, 201, 214, 215, 218], "give": [4, 126, 134], "given": [7, 8, 11, 13, 14, 16, 39, 102, 103, 106, 124, 138, 167, 169, 211, 214, 215, 218], "global": [0, 138, 140, 146, 148], "goal": [102, 103, 106], "grad": [17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216], "grad_output": 11, "gradient": [4, 5, 17, 19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 212], "graph": [4, 77, 149, 161, 162, 165, 166, 167, 168, 169, 212], "grayscal": 218, "greater": 175, "grid": 201, "group": [21, 35, 36, 37, 87, 88, 89, 124, 125], "group1": 21, "group2": 21, "guarante": 146, "h": [36, 37, 39, 43, 44, 61, 62, 65, 66, 68, 69, 109, 110, 112, 113, 118, 121], "h_": [36, 37, 61, 62, 65, 66, 68, 88, 89, 117, 118, 120, 121], "h_out": [36, 37, 61, 62, 65, 66], "h_stack": 199, "ha": [0, 8, 24, 35, 36, 37, 102, 103, 108, 109, 110, 111, 112, 113, 114, 124, 125, 154, 193, 197, 199, 207, 210], "half": 188, "hand": 15, "handl": [0, 3, 4, 13, 18, 20, 21, 22, 23, 24, 103, 106, 123, 125, 140], "hardwar": 4, "hat": [129, 130, 131, 132, 133], "have": [0, 1, 7, 8, 10, 13, 14, 16, 19, 21, 23, 24, 36, 37, 77, 123, 165, 166, 167, 168, 169, 181, 183, 197, 199, 201, 206, 207, 210, 213, 216], "height": [36, 37, 39, 43, 44, 61, 62, 65, 66, 68, 69, 88, 89, 109, 110, 112, 113, 117, 118, 120, 121, 216], "help": [4, 29, 31, 44, 78, 80, 82, 85, 108, 109, 110, 116, 117, 119, 120, 126, 129, 130, 132, 138, 139, 140, 141], "henc": 205, "here": [3, 6, 18, 47, 123, 125, 139, 140, 141, 148, 211, 212, 218], "hidden": 21, "hidden_s": 21, "hierarch": [21, 24, 123], "hierarchi": 88, "hierarchicalnetwork": 21, "high": [4, 144, 147], "higher": [103, 106, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 153, 154, 158, 179], "highest": 144, "highlight": [119, 120, 121], "hint": 141, "histor": 128, "histori": [143, 144, 145, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169], "hold": [20, 21, 22, 23], "horizont": [199, 207, 214, 218], "hot": [103, 106], "how": [2, 3, 4, 21, 24, 123, 141, 218], "howev": [17, 77], "hstack": 200, "huber": [52, 104], "huber_loss": [46, 53], "huberloss": [97, 107], "huberregressionmodel": 104, "hue": 218, "hyperbol": [34, 85, 177, 187, 192], "hyperparamet": [124, 126], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "ideal": [4, 24], "ident": [10, 11, 69, 97, 101, 146, 148, 165, 205], "identifi": 22, "idx": [2, 3], "ii": 193, "ij": [33, 68, 84, 152, 153, 154, 158, 201], "ik": [152, 153, 154], "ill": [7, 13], "imag": [3, 36, 58, 69, 88, 112, 201, 211, 212, 213, 214, 215, 216, 218], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imbal": [103, 106], "impact": 132, "implement": [2, 3, 4, 13, 18, 39, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 199, 210], "impli": [87, 88], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "improp": [21, 24, 148], "improv": [56, 69, 79, 82, 85, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 218], "imread": 3, "in1_featur": [47, 98], "in2_featur": [47, 98], "in_channel": [21, 24, 87, 88, 89, 109, 110, 116, 117, 118, 119, 120, 121, 123], "in_featur": [20, 21, 24, 49, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 111, 114, 116, 117, 118, 119, 120, 121], "includ": [3, 4, 5, 11, 12, 18, 19, 21, 23, 24, 68, 123, 124, 125, 132, 141, 148, 154, 202], "inclus": [19, 22, 144, 147], "incom": [49, 100], "incomplet": 2, "incompletedataset": 2, "incorpor": [16, 79], "increas": [35, 36, 37, 39, 69, 128, 135, 139, 199, 210, 214, 215, 218], "independ": [21, 35, 36, 37, 91, 92, 93, 94, 95, 114, 154, 164, 213, 216], "index": [0, 2, 139, 161, 162, 165, 201, 205], "indexerror": 0, "indic": [0, 1, 19, 21, 23, 24, 51, 55, 103, 106, 116, 138, 149], "individu": [3, 21, 24, 104, 114, 125, 128, 135], "induc": [31, 82], "inf": 191, "infer": [21, 24, 140], "infin": [14, 16, 131], "inform": [4, 17, 125, 127, 140], "infti": [12, 133], "inherit": [1, 126, 134, 136], "init": 71, "initi": [1, 17, 19, 20, 21, 22, 23, 24, 70, 72, 73, 74, 75, 76, 77, 87, 88, 89, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 146, 147, 148, 161, 165, 166, 167, 168, 169, 196], "initial_accumulator_valu": 128, "inner": [4, 152, 170], "input": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 148, 149, 150, 152, 153, 154, 158, 162, 164, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "input1": 98, "input2": 98, "input_": [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69], "input_1": 47, "input_2": 47, "input_data": [78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121], "input_s": [21, 23, 84, 103, 106], "input_tensor": [4, 17, 20, 21, 22, 23, 24, 33, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 213, 214, 215, 216], "insid": [3, 138, 140], "insight": 4, "inspect": [18, 19, 24, 124], "instabl": [13, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "instal": 4, "instanc": [0, 1, 4, 18, 19, 20, 22, 23, 24, 58, 111, 112, 113, 114, 124, 196, 204, 208, 218], "instance_norm": [46, 57, 111, 112, 113], "instancenorm1d": [97, 115], "instancenorm1dmodel": 111, "instancenorm2d": [97, 115], "instancenorm3d": [97, 115], "instanti": 2, "instead": [4, 20, 21, 22, 23, 24, 72, 73, 76, 77, 129, 130, 131, 140, 141, 163, 164], "int": [0, 1, 2, 11, 12, 17, 19, 33, 35, 36, 37, 39, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 84, 87, 88, 89, 98, 100, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 129, 130, 131, 132, 133, 135, 143, 144, 145, 146, 147, 149, 161, 162, 163, 165, 166, 168, 175, 181, 182, 183, 190, 194, 195, 196, 197, 202, 204, 205, 206, 207, 208, 209, 216], "integ": [1, 3, 11, 35, 36, 37, 87, 88, 89, 114, 117, 118, 119, 120, 121, 141, 144, 145, 147, 148, 163, 166, 168, 182, 190, 194, 195, 202, 204, 205, 208], "integr": [1, 2, 5, 19, 21, 23, 24, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 98, 100, 116, 117, 118, 119, 120, 121], "intend": [17, 22, 23], "intens": [13, 213], "intent": 141, "interact": [47, 98, 123, 148], "interfac": [2, 18, 21, 125], "interfer": [138, 140], "intermedi": 13, "intern": [20, 21, 22, 23, 24, 103, 106, 123, 213, 214, 215, 216], "interpol": [46, 67, 216], "interpret": [33, 84, 141, 197], "interv": [143, 147, 161], "introduc": [30, 79, 81, 83, 85, 91, 92, 93, 94, 95, 218], "introspect": 24, "intuit": [4, 20, 22, 123, 218], "inv": 9, "inv_a": 10, "invari": [117, 120], "invers": [4, 7, 10, 11, 13, 128, 172, 173, 174], "invert": [7, 10, 11, 15], "involv": [6, 7, 8, 10, 13, 14, 16, 26, 27, 29, 30, 31, 32, 34, 47, 49, 68, 87, 88, 89, 98, 100, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 179, 180, 181, 183, 186, 188, 201, 202, 204, 208], "is_leaf": 149, "issu": [3, 82, 108, 109, 110, 129, 130], "item": 105, "iter": [0, 1, 2, 3, 17, 18, 21, 23, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 161], "ith": [33, 84], "its": [11, 13, 17, 20, 21, 22, 23, 35, 36, 37, 39, 69, 77, 79, 81, 119, 120, 121, 123, 124, 127, 135, 138, 139, 140, 161, 163, 164, 168, 181, 183, 196, 205, 213, 214, 215, 218], "itself": [6, 11, 20, 21, 22, 23], "j": [33, 84, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 201, 207], "jk": 153, "join": [3, 197], "k": [11, 35, 87, 103, 109, 110, 112, 113, 116, 119, 120, 152, 153, 162, 165, 197], "k_d": [37, 89, 118, 121], "k_h": [36, 37, 88, 89, 117, 118, 121], "k_w": [36, 37, 88, 89, 117, 118, 121], "kaim": [72, 73, 76, 77], "kaiming_norm": 71, "kaiming_uniform": 71, "keep": [18, 81, 127, 140, 205], "keep_grad": [19, 143, 144, 145, 147, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 212], "keep_var": 18, "keepdim": [181, 182, 183, 190, 195], "kei": [18, 20, 22, 24, 124], "kept": [182, 190, 195], "kernel": [35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 87, 88, 89, 117, 118, 121], "kernel_s": [21, 24, 60, 61, 62, 64, 65, 66, 87, 88, 89, 109, 110, 116, 117, 118, 119, 120, 121], "keyerror": 18, "keyword": [18, 99], "kj": [152, 154], "kroneck": [33, 84], "kwarg": [18, 99], "l": [6, 13, 35, 42, 60, 64, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "l2": [126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "l_": [35, 60, 64, 87, 116, 119], "l_out": [35, 60, 64], "label": [102, 103, 106], "lambd": 126, "lambda": [8, 31, 82, 126, 130], "lambda_1": 8, "lambda_2": 8, "lambda_i": 8, "lambda_n": 8, "languag": [87, 98, 116, 119], "larg": [0, 3, 13, 104, 123, 126, 129, 130, 131, 134, 135, 136, 140], "larger": [20, 22, 35, 36, 37, 39, 126, 155, 202, 216], "largest": 181, "last": [1, 33, 59, 84, 153, 154, 197, 214, 215], "layer": [4, 18, 20, 21, 24, 33, 49, 56, 58, 59, 72, 73, 76, 77, 84, 87, 88, 89, 98, 99, 100, 106, 114, 116, 117, 118, 119, 120, 121, 123, 148, 202, 212], "layer_group": 21, "layer_norm": [46, 57, 114], "layer_sequ": [21, 24], "layernorm": [97, 115], "layernormmodel": 114, "lead": [21, 24, 79, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 148], "leaf": 149, "leaki": [29, 80], "leaky_relu": [28, 46, 80], "leakyrelu": [86, 97], "learn": [1, 3, 4, 11, 13, 20, 21, 22, 23, 30, 33, 78, 80, 81, 84, 87, 88, 89, 92, 93, 94, 95, 98, 100, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 146, 211, 212, 218], "learnabl": [17, 18, 19, 56, 58, 59, 87, 88, 89, 98, 100, 108, 109, 110, 111, 112, 113, 114, 123], "least": [13, 14, 16, 193], "left": [11, 12, 13, 16, 27, 33, 79, 84, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121], "leftarrow": 132, "len": [0, 1, 2, 3, 201], "length": [21, 35, 42, 60, 64, 87, 99, 108, 111, 116, 119, 202, 213], "leq": [104, 133, 159, 175], "lerp": 68, "less": [0, 26, 29, 52, 78, 80, 103, 104, 106, 175], "let": 8, "level": 4, "leverag": [15, 123], "librari": [3, 4, 5, 18, 123, 124, 125, 141, 148, 149, 218], "lightweight": 4, "like": [4, 17, 18, 21, 24, 35, 76, 77, 82, 91, 108, 109, 110, 111, 112, 113, 138, 139, 141, 196, 212, 218], "likelihood": [55, 103, 106], "limit": [127, 175], "linalg": [4, 9], "linalgerror": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "linear": [4, 5, 6, 13, 14, 15, 20, 21, 22, 24, 26, 27, 29, 30, 31, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 98, 99, 102, 103, 104, 105, 106, 108, 111, 114, 116, 117, 118, 119, 120, 121, 165], "linearli": 104, "list": [0, 1, 17, 19, 20, 21, 22, 23, 59, 99, 114, 124, 141, 143, 144, 145, 147, 149, 162, 163, 164, 166, 167, 168, 169, 194, 205, 206, 209, 211], "listdir": 3, "liter": [50, 51, 52, 54, 55, 68, 72, 73, 87, 88, 89, 102, 103, 104, 105, 106, 201], "ln": 159, "load": [3, 17, 18, 19, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "load_state_dict": [18, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "loader": [1, 2, 3], "local": [39, 87], "locat": 68, "log": [55, 102, 103, 106, 170], "log_softmax": 106, "logarithm": [159, 179, 180], "logic": [3, 123, 124], "logit": [33, 84, 103], "logsoftmax": [103, 106], "long": [132, 194], "loop": [1, 21, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "loss": [4, 13, 20, 21, 22, 23, 24, 33, 50, 51, 52, 54, 55, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "low": [4, 144, 147], "lower": [6, 75, 126, 134, 135, 136, 147], "lowest": 144, "lr": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "lu": 10, "lucid": [0, 1, 2, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 170, 200, 211, 212, 213, 214, 215, 216], "m": [20, 21, 24, 117, 118, 120, 121, 129, 130, 131, 132, 133, 165], "m_": [129, 130, 131, 132, 133], "m_t": [132, 133], "machin": [3, 4, 13, 129, 139, 146], "magnitud": [134, 135, 218], "mai": [3, 4, 8, 10, 13, 21, 23, 69, 104, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 148, 218], "main": [4, 14, 21, 162, 165], "maintain": [13, 17, 18, 20, 21, 22, 24, 31, 72, 73, 76, 77, 78, 79, 82, 91, 92, 93, 94, 95, 108, 109, 110, 111, 112, 113, 129, 134, 216], "make": [1, 3, 4, 21, 24, 83, 103, 104, 114, 117, 120, 123, 128, 129, 130, 131, 139, 148, 149, 154, 201, 211, 218], "manag": [4, 18, 20, 21, 22, 23, 24, 123, 125, 138, 140, 148], "manhattan": 12, "manipul": [4, 20, 22, 218], "manner": [21, 24], "manual": [50, 51, 55, 102, 103, 106, 140], "map": [18, 32, 34, 83, 85], "mask": [17, 91, 92, 93, 94, 95], "match": [15, 18, 21, 24, 50, 52, 54, 59, 124, 179, 204, 205, 208, 209, 213, 218], "math": [176, 186, 191], "mathbf": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 152, 153, 154, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216], "mathcal": [72, 74, 76, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "mathemat": [10, 214, 215], "mathrm": 13, "matmul": 170, "matric": [5, 7, 8, 10, 13, 15, 16, 152, 153, 154, 165, 201], "matrix": [4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 39, 47, 99, 100, 123, 152, 201], "matrix_pow": 9, "max": [12, 30, 64, 65, 66, 81, 119, 120, 121, 131, 155, 170, 175], "max_pool": [119, 120, 121], "max_pool1d": [46, 63], "max_pool2d": [46, 63], "max_pool3d": [46, 63], "max_valu": 175, "maxim": 3, "maximum": [12, 81, 119, 120, 121, 129, 131, 170, 175, 181], "maxpool1d": [97, 122], "maxpool1dmodel": 119, "maxpool2d": [21, 24, 88, 97, 122], "maxpool2dmodel": 120, "maxpool3d": [89, 97, 122], "maxpool3dmodel": 121, "mean": [14, 17, 31, 35, 36, 37, 40, 50, 51, 52, 54, 55, 56, 58, 74, 78, 79, 80, 81, 82, 83, 85, 89, 91, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 129, 130, 131, 132, 133, 134, 138, 145, 170, 175, 179, 180, 181, 183, 186, 188, 190, 193, 194, 195, 211, 213, 218], "meaning": [24, 141], "measur": [102, 103, 105, 106], "mechan": [4, 23, 47], "membership": 102, "memori": [2, 3, 140, 163, 164], "meshgrid": 200, "method": [3, 4, 5, 10, 20, 21, 22, 23, 24, 50, 51, 52, 54, 55, 72, 73, 76, 77, 102, 103, 104, 105, 106, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148], "middl": 139, "might": 123, "min": [156, 170, 175], "min_valu": 175, "mind": [0, 3, 4, 21, 24, 140], "mini": 1, "minim": [4, 24, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 125], "minimalist": 4, "minimum": [170, 175, 183], "minu": 83, "mirror": [167, 169], "mismatch": [18, 123, 124], "miss": [18, 123], "mitig": [29, 78, 80, 82, 108, 109, 110], "mode": [4, 44, 56, 58, 68, 72, 73, 91, 92, 93, 94, 95, 202], "model": [1, 3, 4, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 148, 211, 212, 218], "modif": [24, 140], "modifi": [20, 21, 22, 23, 70, 72, 73, 74, 75, 76, 77, 91, 138, 140, 146, 199, 210], "modul": [4, 17, 19, 20, 21, 22, 23, 24, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 148, 212, 218], "modular": [3, 4, 18, 21, 24, 123, 218], "moduledict": [21, 22, 24, 25], "modulelist": [23, 24, 25], "moment": [129, 130, 131, 132, 133], "momentum": [56, 58, 108, 109, 110, 111, 112, 113, 126, 132, 134, 136], "momentum_decai": 132, "moor": 13, "more": [3, 4, 8, 20, 21, 24, 78, 92, 93, 94, 95, 123, 124, 125, 126, 127, 130, 131, 134, 135, 136, 145, 154, 193, 207, 218], "most": [5, 120, 212, 218], "move": [126, 134], "mse": [52, 54, 104, 105], "mse_loss": [46, 53], "mseloss": [97, 107], "mu": [74, 108, 109, 110, 111, 112, 113, 114, 195], "mu_c": 213, "mu_i": [111, 112, 113], "much": 218, "mul": 170, "multi": [3, 33, 51, 55, 84, 103, 106, 182, 190, 195], "multidimension": [143, 147, 163], "multipl": [1, 3, 4, 5, 11, 15, 22, 23, 24, 39, 68, 69, 91, 92, 93, 94, 95, 103, 106, 123, 139, 143, 144, 145, 147, 152, 157, 163, 164, 211, 218], "multipli": [11, 23, 49, 100, 135, 157, 158], "must": [0, 1, 3, 6, 7, 8, 10, 11, 14, 15, 16, 18, 20, 21, 22, 23, 24, 59, 91, 92, 93, 94, 95, 106, 124, 140, 193, 197, 199, 202, 204, 205, 207, 208, 210, 213, 214, 215], "mymodel": [18, 19, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "myoptim": [124, 125], "n": [11, 12, 20, 21, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 74, 76, 87, 88, 89, 94, 95, 98, 100, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 165, 182, 193, 195], "n1": 12, "nabla_": [127, 128, 129, 130, 131, 132, 133, 135], "nabla_t": 133, "nadam": 137, "name": [18, 20, 22, 24, 141], "nan": [14, 16], "natur": [13, 87, 98, 116, 119, 159, 179, 180], "ndarrai": [17, 19, 141, 149, 162, 164, 167, 169, 196], "ndim": [14, 16, 19, 149], "ne": 11, "nearest": 68, "necessari": [13, 140, 199, 210], "need": [2, 21, 22, 23, 33, 98, 123, 140, 163, 164, 211, 212, 218], "neg": [11, 13, 16, 26, 55, 69, 78, 80, 81, 82, 103, 106, 135, 197], "negative_slop": [29, 80], "neglect": 23, "neighbor": 68, "neq": 12, "nest": [21, 24, 123], "nesterov": 132, "network": [3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 56, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 134, 136, 147, 148, 149, 161, 166, 168, 181, 183, 202, 211, 212, 213, 214, 215, 216, 218], "neural": [3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 56, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 134, 136, 147, 148, 149, 161, 166, 168, 181, 183, 202, 211, 212, 213, 214, 215, 216, 218], "neuralnetwork": 81, "neuron": 80, "new": [18, 19, 26, 27, 29, 30, 31, 32, 34, 47, 49, 68, 72, 73, 74, 75, 76, 77, 124, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 202, 204, 205, 207, 208, 209, 210], "next": [24, 211], "nll": 55, "nll_loss": [46, 53], "nllloss": [97, 107], "nn": [4, 25, 28, 38, 45, 48, 53, 57, 63, 67, 71, 86, 90, 96, 97, 101, 107, 115, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 212, 218], "no_grad": 138, "node": 149, "nois": [16, 148], "non": [8, 11, 13, 16, 23, 27, 29, 30, 72, 73, 78, 79, 80, 81, 82, 83, 85, 91, 92, 93, 94, 95, 129, 130, 140, 159, 175], "none": [0, 1, 2, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "norm": [5, 9, 131], "normal": [27, 31, 33, 34, 56, 58, 59, 71, 72, 76, 79, 82, 84, 91, 108, 109, 110, 111, 112, 113, 114, 134, 145, 148, 211, 217, 218], "normalized_shap": [59, 114], "note": [35, 91], "noth": [40, 41, 42, 43], "notimplementederror": [2, 18, 124], "notin": 175, "np": [17, 19, 103, 106, 141, 149, 154, 161, 162, 165, 166, 168, 169, 180, 196, 212], "num_class": [84, 103, 106], "num_featur": [24, 108, 109, 110, 111, 112, 113], "num_paramet": 23, "number": [0, 1, 2, 7, 8, 10, 13, 15, 16, 19, 21, 23, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 51, 55, 56, 58, 68, 69, 72, 73, 76, 77, 83, 87, 88, 89, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 126, 143, 146, 147, 149, 159, 161, 163, 165, 181, 182, 183, 194, 195, 197, 199, 202, 204, 205, 206, 208, 210, 213, 214, 215, 218], "numer": [10, 13, 50, 51, 56, 58, 59, 102, 103, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 141, 151, 161, 166, 168], "numpi": [4, 17, 19, 103, 106, 141, 149, 154, 162, 165, 180, 193, 196, 202, 204, 208, 212, 218], "o": [3, 118, 121, 166, 167], "object": [1, 3, 5, 18, 22, 23, 105, 123, 140, 150, 151, 155, 156, 157, 160, 196], "observ": 129, "obtain": 1, "occur": [69, 140, 197], "occurr": 11, "odot": [91, 92, 93, 94, 95], "off": 138, "offer": [4, 123, 125, 148, 218], "offset": 165, "often": [11, 35, 36, 37, 39, 103, 106, 161, 168, 212, 216, 218], "older": 132, "onc": 140, "one": [0, 23, 24, 33, 35, 49, 60, 64, 82, 83, 84, 87, 93, 103, 106, 108, 111, 116, 119, 124, 139, 141, 145, 160, 167, 181, 183, 198, 203, 207, 212], "ones": [47, 49, 87, 88, 89, 100, 108, 109, 110, 111, 112, 113, 114, 123, 165, 167, 170], "ones_lik": 170, "onli": [4, 68, 81, 91, 92, 93, 94, 95, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 135, 138, 161, 175, 181, 183, 193, 202, 203, 205, 206], "onto": [14, 16], "oper": [3, 4, 5, 10, 13, 17, 18, 21, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 44, 47, 49, 60, 61, 62, 64, 65, 66, 68, 69, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 116, 117, 118, 119, 120, 121, 123, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 179, 180, 181, 182, 183, 186, 188, 190, 193, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216], "operatornam": [11, 13], "opposit": 126, "optim": [3, 4, 5, 11, 13, 14, 16, 17, 19, 22, 23, 39, 87, 88, 89, 123, 140], "optimizer_st": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "option": [1, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 33, 36, 37, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 134, 136, 143, 144, 145, 147, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 183, 190, 194, 195, 196, 197, 201, 204, 206, 207, 212, 214, 215], "ord": 12, "order": [1, 3, 12, 16, 20, 21, 22, 23, 24, 194, 211], "ordered_dict": 24, "ordereddict": [18, 20, 21, 24], "organ": [20, 21, 22, 24], "orient": 218, "origin": [40, 69, 85, 202, 203, 204, 205, 208, 209, 216], "orthogon": [13, 14, 16], "orthonorm": 14, "oscil": [126, 134, 136], "other": [2, 3, 4, 10, 17, 18, 21, 24, 72, 73, 91, 123, 124, 138, 140, 148, 149, 161, 163, 166, 168, 193, 201, 218], "otherwis": [26, 29, 30, 31, 33, 78, 80, 81, 82, 84, 92, 93, 94, 95, 104, 116, 117, 118, 119, 120, 121, 124, 135, 155, 156, 181, 183], "otim": [13, 47, 98], "out": [0, 3, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 72, 73, 76, 77, 87, 88, 89, 91, 92, 93, 94, 95, 116, 117, 118, 119, 120, 121, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210], "out_channel": [21, 24, 87, 88, 89, 109, 110, 116, 117, 118, 119, 120, 121, 123], "out_featur": [20, 21, 24, 47, 49, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 111, 114, 116, 117, 118, 119, 120, 121], "outcom": [214, 215], "outer": 170, "outlier": [52, 104], "output": [0, 1, 2, 4, 11, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 47, 49, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 179, 180, 181, 182, 183, 186, 188, 190, 193, 194, 195, 201, 202, 204, 208, 211, 212, 213, 214, 215, 216], "output_height": 39, "output_lay": [21, 24], "output_s": 21, "output_width": 39, "outsid": 0, "over": [0, 1, 2, 3, 5, 18, 21, 23, 33, 84, 87, 88, 89, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 143, 147, 181, 182, 183, 190, 193, 195, 214, 215], "overdetermin": 13, "overfit": [1, 41, 44, 92, 93, 94, 95, 126, 129, 134, 136], "overrid": [2, 3], "overridden": [18, 124], "overwrit": [20, 22], "own": [20, 21, 22, 23, 35, 36, 37, 77, 123, 213], "p": [12, 13, 19, 22, 23, 40, 41, 42, 43, 44, 91, 92, 93, 94, 95, 116, 119, 120, 214, 215, 218], "p_d": [118, 121], "p_h": [117, 118, 121], "p_w": [117, 118, 121], "packag": [2, 3, 5, 123, 125, 146, 148, 212, 218], "pad": [21, 24, 35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 87, 88, 89, 109, 110, 116, 117, 118, 119, 120, 121, 200], "pad_after_dim1": 202, "pad_after_dim2": 202, "pad_before_dim1": 202, "pad_before_dim2": 202, "pad_width": 202, "padding_height": 39, "padding_width": 39, "pair": 47, "parallel": [1, 3], "param": [18, 19, 22, 23, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "param1": 18, "param_dict": 22, "param_group": [124, 125], "param_groups_setup": 124, "param_list": 23, "paramet": [0, 2, 4, 18, 123, 124, 125, 141, 148, 218], "parameterdict": 25, "parameterlist": 25, "parent": 123, "part": [17, 18, 77, 123, 138, 140, 148, 161, 162, 165, 166, 167, 168, 169, 212, 218], "partial": [6, 7, 8, 10, 11, 12, 13, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "particip": [19, 212], "particular": [20, 22], "particularli": [4, 13, 21, 22, 23, 24, 33, 49, 84, 100, 103, 106, 111, 112, 113, 114, 130, 138, 211], "pass": [2, 4, 13, 18, 19, 20, 21, 22, 23, 24, 68, 78, 79, 80, 81, 82, 83, 85, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 141, 149, 182, 190, 193, 194, 195, 197, 199, 203, 205, 206, 210, 212, 218], "past": [126, 127, 129, 134], "patch": [39, 117], "path": 3, "pattern": [30, 81, 87, 88, 89], "penal": [126, 134, 136], "penalti": [127, 128, 129, 130, 131, 132, 133], "penros": 13, "per": [1, 111, 112, 113, 114], "perform": [3, 4, 5, 6, 13, 18, 19, 23, 27, 35, 36, 37, 56, 58, 59, 60, 61, 62, 64, 65, 66, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 138, 140, 146, 148, 150, 151, 154, 157, 160, 179, 181, 183, 190, 194, 211, 216, 218], "permut": 194, "persist": [17, 143, 144, 145, 147, 163, 164], "perturb": [8, 15, 16, 218], "phi": [27, 79], "pi": [27, 79, 176, 186, 191], "pil": [212, 218], "pinv": 9, "pipelin": [148, 211, 212, 213], "pixel": [68, 213], "place": [70, 72, 73, 74, 75, 76, 77], "placehold": [18, 99], "plai": [141, 148], "plot": 201, "point": [69, 138], "pool": [60, 61, 62, 64, 65, 66, 88, 89, 116, 117, 118, 119, 120, 121, 181, 183], "pool1": 24, "pool2": 24, "poorli": 10, "popul": 18, "portion": 218, "pose": 13, "posit": [1, 6, 11, 18, 24, 69, 78, 80, 81, 82, 116, 117, 118, 119, 120, 121, 135, 139, 159, 204, 208], "possibl": [4, 218], "potenti": [13, 99, 134, 206], "power": [4, 11, 139, 140, 170, 211, 212, 218], "practic": [13, 103, 106], "practition": 218, "preced": [19, 149], "predefin": [21, 82], "predict": [102, 103, 105, 106], "prefix": 18, "prepar": [3, 139, 202, 204, 208, 212, 218], "prepend": 18, "preprocess": [3, 39, 69, 148, 211, 212, 218], "present": [102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117], "preserv": [40, 69, 91, 161, 162, 165, 166, 167, 168, 169, 182, 190, 195], "prevent": [1, 20, 21, 22, 23, 24, 41, 44, 92, 93, 94, 95, 102, 103, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140], "previou": [126, 135, 140], "previous": 129, "primari": [4, 141], "primarili": 24, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216], "probabilist": 148, "probabl": [27, 33, 40, 41, 42, 43, 44, 50, 79, 84, 91, 92, 93, 94, 95, 102, 103, 106, 214, 215, 218], "problem": [13, 14, 16, 29, 78, 80, 133], "process": [2, 3, 11, 14, 16, 23, 35, 36, 37, 58, 69, 82, 85, 87, 89, 98, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 126, 141, 201, 212, 213, 216, 218], "produc": [87, 88, 89, 146, 148], "product": [4, 14, 16, 83, 98, 114, 123, 152, 153, 157, 158], "program": [138, 148], "progress": 128, "project": [14, 16], "projector": 13, "promin": [116, 118, 119, 120, 121], "promot": [24, 103, 106, 123], "propag": [7, 8, 10, 13, 14, 15, 16, 18, 24, 47, 49, 68, 117, 118, 134, 135, 152, 153, 154, 158, 181, 183, 201, 202, 205, 209], "properli": [0, 23, 33, 84, 123], "properti": [5, 7, 10, 11, 27, 31, 40, 79, 82, 91, 128, 133], "proport": 195, "proportion": 216, "provid": [0, 1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 27, 49, 69, 102, 103, 104, 106, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 134, 136, 138, 140, 141, 146, 148, 149, 154, 161, 167, 181, 183, 194, 196, 204, 206, 208, 218], "pseudo": [10, 13], "purpos": [143, 147, 161, 166, 168], "python": 141, "pytorch": 196, "q": 14, "qr": 9, "quad": [13, 102, 103, 104, 105, 106, 119, 120, 121, 150, 151, 155, 156, 157, 160], "quadrat": 104, "quotient": 151, "r": [14, 214, 215], "r_t": 133, "radam": 137, "rais": [0, 1, 2, 18, 123, 124, 159], "rand": [142, 148], "randint": [142, 148], "randn": [123, 142, 146, 148], "random": [1, 2, 3, 214, 215, 218], "random_integ": 148, "random_tensor": 148, "randomcrop": 218, "randomgrayscal": 218, "randomhorizontalflip": [217, 218], "randomli": [1, 40, 41, 42, 43, 44, 69, 91, 92, 93, 94, 95, 214, 215, 218], "randomnoisedataset": [0, 1, 2], "randomrot": 218, "randomverticalflip": 217, "rang": [0, 1, 5, 23, 32, 34, 35, 36, 51, 55, 77, 83, 85, 126, 134, 136, 144, 172, 173, 175, 213, 218], "rank": 13, "rate": [124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "rather": [22, 23, 130, 205], "ratio": 216, "ravel": 200, "raw": [33, 84, 103, 141], "re": [19, 140], "readabl": [20, 21, 22, 24, 123, 141], "readi": [3, 4], "real": [13, 16, 83], "rearrang": 39, "receiv": [119, 120, 121, 202], "recent": 134, "reciproc": [13, 170, 180, 188], "recognit": 88, "rectangular": 165, "rectif": 133, "rectifi": [29, 30, 80, 81, 133], "recurr": [21, 114], "recurs": 18, "reduc": [108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 132, 135, 140, 141, 181, 182, 183, 190, 195], "reduct": [16, 50, 51, 52, 54, 55, 102, 103, 104, 105, 106, 181, 183], "reevalu": 124, "refer": [4, 18, 148, 162, 165, 197], "reflect": 138, "regardless": [13, 203], "region": [37, 68, 202, 218], "regist": [17, 18, 19, 23, 123], "register_buff": 17, "register_paramet": 18, "registr": [18, 123], "regress": [54, 104, 105], "regular": [13, 44, 92, 93, 94, 95, 126, 127, 128, 131, 132, 133, 134, 136], "relat": [140, 165, 166], "relationship": 216, "relev": [68, 126, 134, 136], "reli": 140, "reliant": [92, 93, 94, 95], "relu": [4, 20, 21, 22, 24, 26, 28, 29, 46, 72, 73, 76, 77, 78, 80, 86, 87, 88, 89, 97, 98, 99, 100], "relu1": 24, "relu2": 24, "relu3": 24, "remain": [17, 59, 91, 92, 93, 94, 95, 135], "rememb": 148, "remov": 206, "rep": 208, "repeat": [200, 201, 208], "repetit": [204, 208], "replac": 148, "repres": [10, 12, 16, 18, 19, 24, 47, 49, 56, 58, 59, 87, 88, 89, 98, 100, 103, 106, 114, 124, 125, 126, 132, 133, 134, 135, 136, 141, 150, 151, 157, 160, 162, 182, 193, 194, 195, 201, 214, 215, 216], "represent": [117, 120, 124], "reproduc": [143, 144, 145, 146, 147, 148, 218], "requir": [2, 3, 4, 17, 20, 24, 26, 27, 29, 30, 31, 32, 34, 47, 49, 68, 77, 99, 103, 106, 123, 138, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216], "requires_grad": [17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212], "rescal": [50, 51, 55, 102, 103, 106], "research": 123, "reset": [19, 146, 149], "reshap": [4, 49, 88, 89, 139, 141, 200, 203], "resili": 135, "resiz": [68, 211, 217, 218], "resourc": 140, "respect": [6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 175, 179, 180, 181, 182, 183, 186, 188, 190, 193, 194, 195, 201, 202, 204, 208], "respons": [20, 125], "restor": 140, "restructur": 205, "result": [6, 10, 11, 13, 18, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 60, 61, 62, 64, 65, 66, 68, 69, 84, 123, 124, 138, 140, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 218], "resum": 125, "retain": [19, 149, 161, 168, 181, 182, 183, 190, 195, 212], "retent": 212, "retriev": [0, 2, 20, 22, 23], "return": [0, 1, 2, 3, 4, 17, 18, 20, 21, 22, 23, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 211, 218], "reus": 212, "reusabl": [24, 123, 211], "revers": [4, 24, 194, 214, 215], "revert": 140, "rho": 127, "rho_": 133, "rho_t": 133, "right": [11, 12, 13, 15, 16, 27, 33, 79, 84, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121], "risk": 141, "rmsprop": 137, "robust": [69, 91, 92, 93, 94, 95, 104, 123, 127, 218], "role": [141, 148, 218], "root": [128, 134, 188], "rotat": [46, 67, 218], "rotated_imag": 69, "rout": [119, 120, 121], "routin": 4, "row": [7, 8, 10, 15, 49, 165, 201, 210], "rprop": 137, "rule": [10, 11, 139, 150, 151, 155, 156, 157, 159, 160], "run": [4, 17, 56, 58, 108, 109, 110, 111, 112, 113, 127, 140, 146, 148], "running_mean": [17, 56, 58, 108, 109, 110, 111, 112, 113], "running_var": [56, 58, 108, 109, 110, 111, 112, 113], "runtim": [21, 24, 123], "s_": 135, "s_d": [118, 121], "s_h": [117, 118, 121], "s_w": [117, 118, 121], "same": [7, 8, 10, 11, 15, 33, 40, 41, 42, 43, 44, 56, 58, 59, 69, 87, 88, 89, 91, 92, 93, 94, 95, 99, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 135, 146, 148, 154, 164, 167, 169, 179, 181, 182, 183, 197, 199, 203, 205, 206, 207, 210, 213], "sampl": [0, 1, 2, 3, 4, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 95, 98, 100, 103, 106, 114, 145, 148, 214, 215, 216], "satisfi": [6, 8, 15], "satur": [78, 218], "save": [2, 17, 19, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140], "scalabl": [3, 123], "scalar": [7, 12, 50, 51, 52, 54, 55, 141], "scale": [8, 13, 26, 31, 33, 56, 58, 59, 76, 77, 78, 80, 82, 83, 84, 85, 91, 92, 93, 94, 95, 103, 108, 109, 110, 111, 112, 113, 114, 126, 128, 129, 130, 141, 148, 195, 216], "scenario": [22, 23, 114, 130, 131, 212], "schedul": 126, "scientif": 139, "score": [33, 103], "scratch": 4, "script": 148, "seamless": [0, 1, 3, 123, 148], "seamlessli": [3, 5, 19, 21, 24, 123, 141, 218], "second": [8, 21, 22, 47, 98, 129, 130, 131, 132, 133, 139, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 199, 201, 215], "section": 154, "see": [4, 154], "seed": [142, 143, 144, 145, 147, 148, 218], "seen": 127, "select": [68, 119, 121, 190], "self": [0, 1, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23, 31, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 201, 211, 212], "selu": [28, 40, 46, 86, 91, 97], "selunetwork": 82, "sensit": [52, 104, 108, 109, 110], "separ": [0, 35, 36, 37, 111, 112, 113], "sequenc": [11, 20, 22, 35, 161, 197, 199, 202, 204, 207, 208, 210, 211], "sequenti": [20, 21, 25, 35, 99, 211, 218], "seri": [35, 87, 116, 119], "serial": [17, 18, 125], "serv": [3, 18, 20, 21, 22, 23, 24, 123, 135, 212], "set": [3, 19, 23, 35, 36, 37, 80, 81, 82, 87, 88, 89, 91, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 124, 129, 130, 134, 143, 144, 145, 146, 147, 148, 149, 161, 163, 164, 168, 169, 175, 181, 183, 196, 212, 218], "setup": 4, "sever": [13, 87, 88, 89, 116, 117, 118, 119, 120, 121, 140, 211, 218], "sgd": [4, 126, 133, 137], "sgn": 12, "shape": [3, 4, 7, 8, 10, 11, 13, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 139, 141, 143, 144, 145, 147, 148, 149, 152, 163, 164, 165, 166, 167, 168, 169, 175, 180, 181, 182, 183, 186, 188, 190, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 218], "shapelik": 144, "shift": [56, 58, 59, 108, 109, 110, 111, 112, 113, 114], "shorthand": 154, "should": [17, 140, 143, 144, 145, 147, 163, 164, 172, 173, 193, 202, 211], "show": 138, "showcas": 4, "shown": 146, "shrink": 127, "shuffl": [1, 2, 3], "side": [15, 21, 24, 35, 36, 37, 60, 61, 62, 64, 65, 66, 87, 88, 89, 116, 117, 118, 119, 120, 121, 140], "sigma": [13, 72, 74, 76, 83, 108, 109, 110, 111, 112, 113, 114, 194], "sigma_c": 213, "sigma_i": 13, "sigmoid": [28, 46, 72, 73, 76, 77, 86, 97, 102], "sigmoidnetwork": 83, "sign": [11, 104, 135, 170], "signal": [87, 88, 89, 108, 111, 116, 117, 118, 119, 120, 121], "signific": 140, "significantli": 211, "sim": [91, 92, 93, 94, 95], "similar": [4, 72, 73, 154, 180, 196, 202], "similarli": [16, 193], "simpl": [3, 4, 24, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 79, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 152, 153, 158, 211], "simplebinaryclassificationmodel": 102, "simpleclassificationmodel": [103, 106], "simplegelumodel": 79, "simpleleakyrelumodel": 80, "simplemodel": [4, 100], "simpleregressionmodel": 105, "simplerelumodel": 81, "simpleselumodel": 82, "simplesigmoidmodel": 83, "simpletanhmodel": 85, "simpli": [138, 193, 194, 205], "simplic": 81, "simplifi": 24, "simul": 218, "simultan": 69, "sin": [170, 176], "sinc": [11, 14, 20, 21, 22, 23, 35, 36, 37, 77, 138, 140, 145, 201, 218], "sine": [173, 186, 187], "singl": [0, 11, 14, 16, 33, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 103, 114, 117, 118, 119, 120, 121, 124, 141, 147, 163, 197, 206, 213, 218], "singleton": 114, "singular": [7, 10, 11, 13, 15, 16], "sinh": [170, 177, 192], "size": [0, 1, 2, 3, 16, 19, 21, 35, 36, 37, 39, 42, 43, 44, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 87, 88, 89, 98, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 147, 148, 149, 181, 182, 183, 190, 195, 197, 199, 206, 209, 210, 216, 218], "skip": 140, "slice": [47, 193], "slide": [39, 116, 118, 119, 121], "slightli": 218, "slope": [29, 78, 80], "slow": [3, 133], "small": [13, 29, 50, 51, 56, 58, 59, 80, 82, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 117, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135], "smaller": [21, 24, 123, 128, 129, 156, 216], "smallest": 183, "smooth": [27, 78, 79, 126, 134, 218], "smoother": 126, "so": [20, 21, 22, 23, 69, 123, 133, 163, 164, 211], "softmax": [28, 46, 86, 97, 103], "softmaxmodel": 84, "solut": [13, 15], "solv": [5, 6, 9, 13, 14, 16], "solver": 5, "some": [26, 41, 69, 91, 92, 93, 108, 109, 110, 111, 112, 113, 128, 129, 130, 140, 141], "sometim": 139, "sophist": [21, 24], "sourc": 148, "space": [8, 14, 16, 35, 36, 37, 39, 87, 88, 89, 161, 218], "spars": [128, 129], "spatial": [88, 89, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 201], "spatio": 89, "special": [0, 1, 4, 13, 17, 18, 19, 91, 148], "specif": [4, 20, 21, 22, 23, 24, 77, 91, 92, 93, 94, 95, 111, 112, 113, 123, 124, 138, 148, 163, 181, 183, 204, 208], "specifi": [0, 1, 2, 3, 4, 12, 21, 33, 39, 44, 50, 51, 52, 54, 55, 59, 68, 69, 84, 87, 88, 89, 102, 103, 104, 105, 106, 114, 117, 118, 119, 120, 121, 124, 141, 143, 144, 145, 146, 147, 159, 161, 162, 163, 164, 165, 166, 168, 169, 175, 181, 182, 183, 190, 194, 195, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218], "speech": 111, "speed": [126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "split": [197, 199, 210], "sqrt": [27, 72, 73, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 132, 133, 134, 170, 172, 173], "squar": [1, 3, 6, 7, 8, 10, 11, 13, 14, 15, 16, 52, 54, 104, 105, 127, 128, 129, 134, 170, 188], "squaredataset": [0, 1, 2, 3], "squeez": 200, "stabil": [10, 13, 50, 51, 56, 58, 59, 102, 103, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 213], "stabl": [72, 73, 76, 77, 91, 103, 126, 130, 131, 134, 135, 136], "stack": [24, 199, 200, 210, 218], "standard": [27, 29, 72, 74, 76, 78, 79, 80, 91, 135, 145, 148, 154, 211, 213, 218], "start": [1, 3, 126, 128, 135, 161], "state": [17, 18, 19, 21, 24, 124, 138, 140, 146], "state_dict": [18, 19, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "static": 24, "statist": [13, 40, 56, 58], "std": [74, 211, 213, 218], "step": [19, 39, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 161, 211, 212], "step_siz": 135, "still": 127, "stochast": [4, 126, 136], "stop": 161, "storag": [20, 22, 149], "store": [2, 17, 18, 19, 20, 21, 22, 23, 140, 149, 213, 214, 215, 216], "str": [18, 20, 22, 24, 50, 51, 52, 54, 55, 68, 124, 201], "straightforward": [136, 138, 150], "strategi": 125, "streamlin": [2, 3], "strict": [18, 124], "stride": [21, 24, 35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 87, 88, 89, 116, 117, 118, 119, 120, 121], "stride_height": 39, "stride_width": 39, "string": [18, 20, 22, 24, 87, 88, 89, 124], "structur": [0, 4, 14, 17, 18, 21, 123, 124, 141, 165, 212], "style": [58, 111, 112, 201], "sub": [20, 21, 22, 23, 24, 123, 170], "sub_tensor": 149, "subclass": [1, 2, 3, 4, 18, 19, 20, 123, 124], "submodul": [18, 123], "subsequ": [21, 24, 77, 148], "subset": [92, 93], "subtract": [4, 160, 213], "suffer": 128, "suit": [72, 73, 76, 77], "suitabl": [104, 128, 129, 143], "sum": [12, 20, 21, 22, 23, 24, 33, 50, 51, 52, 54, 55, 84, 102, 103, 104, 105, 106, 128, 150, 153, 158, 170, 193, 195, 197, 199, 201, 204, 208, 210], "sum_": [11, 33, 84, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 152, 153, 182, 190, 193, 195, 201, 204], "sum_i": [12, 158], "sum_j": 158, "sum_k": 154, "summar": [116, 117, 118], "summat": 11, "super": [4, 17, 18, 19, 20, 21, 22, 23, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "support": [1, 3, 4, 5, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 68, 69, 123, 125, 132, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 162, 165, 175, 180, 182, 186, 188, 190, 193, 194, 195, 197, 201, 205, 212, 218], "suppos": 218, "sure": [123, 218], "svd": [9, 13], "symmetr": [6, 76, 77, 85], "syntax": [1, 154], "system": [5, 6, 13, 14, 15, 138, 201], "systemat": 218, "t": [13, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 149, 154, 196, 211, 212, 213, 214, 215, 216, 218], "t0": 126, "t1": 196, "t2": 196, "tailor": [123, 218], "take": [14, 116, 117, 118, 119, 120, 121, 140, 211], "taken": 193, "tan": 170, "tangent": [34, 85, 174, 191, 192], "tanh": [21, 24, 27, 28, 46, 72, 73, 76, 77, 79, 86, 97, 170], "tanhnetwork": 85, "target": [24, 50, 51, 52, 54, 55, 68, 102, 103, 104, 105, 106, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 216], "target_tensor": [102, 103, 104, 105, 106], "task": [4, 5, 32, 33, 36, 47, 50, 51, 54, 55, 83, 84, 87, 88, 89, 102, 103, 104, 105, 106, 111, 112, 113, 116, 118, 119, 121, 129, 139, 148, 165, 218], "techniqu": [6, 10, 56, 91, 92, 93, 94, 95, 111, 112, 113, 125, 216, 218], "tempor": [87, 89, 118, 121], "temporarili": 140, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 138, 140, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "term": [13, 47, 126, 130, 132, 133, 134, 136], "text": [7, 11, 12, 20, 26, 29, 30, 31, 33, 35, 36, 37, 60, 61, 62, 64, 65, 66, 72, 73, 76, 77, 78, 80, 81, 82, 84, 87, 88, 89, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 116, 117, 118, 119, 120, 121, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 150, 151, 153, 155, 156, 157, 159, 160, 171, 175, 181, 182, 183, 185, 190, 195, 197, 199, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215], "th": [47, 102, 103, 105, 106, 111, 112, 113, 155, 156, 159], "than": [0, 1, 22, 23, 26, 29, 52, 78, 80, 104, 124, 130, 175, 193, 202, 207, 216], "thei": [0, 4, 16, 17, 21, 23, 24, 141, 201, 205, 218], "them": [3, 18, 23, 39, 126, 139, 197, 207, 211, 213, 218], "therebi": [91, 117, 118, 120, 121], "theta": [126, 127], "theta_": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "theta_t": [133, 134], "thi": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 30, 32, 33, 34, 35, 36, 37, 39, 47, 49, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 148, 149, 153, 154, 158, 161, 163, 166, 167, 168, 169, 175, 179, 180, 181, 182, 183, 186, 188, 190, 193, 194, 195, 196, 202, 204, 205, 211, 212, 213, 214, 215, 216, 218], "thing": 140, "those": [4, 23, 77], "three": [16, 37, 62, 66, 89, 95, 110, 113, 118, 121], "threshold": [13, 52, 104], "through": [0, 3, 4, 8, 13, 14, 16, 20, 21, 24, 47, 49, 68, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 145, 152, 153, 158, 201, 203, 205, 206, 209, 218], "throughout": [31, 212], "tile": 200, "time": [0, 3, 11, 35, 80, 82, 87, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 134, 136, 140, 204, 208], "togeth": [24, 211, 218], "too": 135, "tool": [3, 4, 123, 139, 148, 211, 218], "top": [6, 7, 8, 14, 16, 47, 49, 68, 87, 88, 89, 98, 100], "torch": 196, "total": [0, 1, 2, 19, 149, 205], "totensor": [211, 218], "trace": [5, 170], "track": [4, 108, 109, 110, 111, 112, 113, 123, 138, 140, 143, 144, 145, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 212], "track_running_stat": [108, 109, 110, 111, 112, 113], "tradit": [127, 128, 131, 132, 133], "trail": 59, "train": [1, 2, 3, 4, 17, 18, 21, 23, 24, 33, 40, 41, 42, 43, 44, 56, 58, 69, 79, 80, 82, 83, 84, 85, 91, 92, 93, 94, 95, 108, 109, 110, 111, 112, 113, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 211, 213, 214, 215, 218], "trainabl": [108, 109, 110, 111, 112, 113, 123], "transfer": [58, 111, 112], "transform": [2, 4, 8, 22, 47, 49, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 139, 201], "transform_pipelin": [211, 218], "transformed_imag": [211, 218], "transit": 104, "translat": [117, 120], "transpos": [4, 6, 170], "treat": [0, 17, 114, 123], "triangular": [6, 14], "true": [1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 49, 56, 58, 68, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 129, 130, 134, 138, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212], "try": 0, "tune": 218, "tupl": [2, 3, 8, 14, 16, 18, 19, 35, 36, 37, 39, 59, 60, 61, 62, 64, 65, 66, 68, 69, 87, 88, 89, 99, 114, 116, 117, 118, 119, 120, 121, 129, 130, 131, 132, 133, 135, 141, 143, 144, 145, 147, 149, 163, 166, 168, 181, 182, 183, 190, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 213, 216], "twice": 202, "two": [4, 7, 8, 10, 11, 13, 14, 16, 35, 36, 37, 47, 61, 65, 88, 94, 98, 109, 112, 117, 120, 129, 130, 131, 132, 133, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 193, 201], "type": [17, 18, 19, 47, 98, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 196, 201, 212], "typeerror": [0, 1, 2, 18, 124], "typic": [5, 17, 33, 40, 69, 82, 84, 106, 108, 109, 110, 111, 112, 113, 125, 126, 134, 136, 140, 141, 209, 212, 213, 216, 218], "u": [13, 16, 73, 75, 77], "u_": 131, "unchang": [17, 44, 78, 80, 81, 82, 91, 92, 93, 94, 95, 99, 203, 206], "undefin": 159, "under": 123, "underbrac": 11, "underdetermin": 13, "undergo": 218, "underli": [0, 4, 196, 199, 203, 205, 210], "understand": [4, 24, 218], "unexpect": [18, 21, 24, 148], "unfold": [38, 46], "unifi": 0, "uniform": [71, 73, 77, 87, 88, 89, 98, 100, 142, 143, 144, 148, 214, 215], "uniformli": [143, 147], "uniniti": [163, 164], "unintend": 140, "uniqu": [6, 13, 15, 20, 22], "unit": [26, 27, 29, 30, 31, 72, 73, 76, 77, 78, 79, 80, 81, 82, 91], "unless": 149, "unlik": [17, 20, 21, 22, 23, 29, 78, 80, 91, 114, 127, 128, 130, 131, 132, 133, 135], "unnecessari": 140, "unpad": 202, "unseen": 218, "unsqueez": 200, "unstabl": 10, "up": [124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 216], "updat": [17, 23, 24, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140], "upon": [20, 21, 22, 23], "upper": [14, 75, 135, 147], "us": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 47, 49, 54, 56, 58, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 138, 139, 140, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 181, 182, 183, 190, 195, 201, 202, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218], "usag": [3, 5, 21, 24, 124, 125, 213, 214, 215, 216], "user": [1, 2, 3, 4, 20, 21, 22, 23, 123, 128, 211, 212, 218], "usual": 103, "util": [3, 4, 5, 22, 23, 123, 148], "v": [8, 13, 16, 129, 130, 132, 133, 162], "v_": [126, 129, 130, 132, 133, 134, 136], "v_stack": 210, "v_t": [133, 134], "val": 70, "valid": [87, 88, 89, 194], "valu": [4, 7, 11, 12, 13, 16, 18, 20, 22, 24, 26, 29, 32, 33, 34, 35, 36, 37, 39, 50, 51, 52, 54, 55, 56, 58, 59, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 145, 146, 147, 148, 161, 162, 163, 164, 165, 171, 172, 173, 175, 178, 179, 180, 181, 183, 185, 186, 188, 189, 197, 202, 203, 205, 209, 213, 214, 215], "valuabl": 148, "valueerror": [1, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 124], "vanish": [78, 82, 108, 109, 110], "var": 170, "vari": [21, 23, 68], "variabl": [18, 24, 99, 123, 138, 140, 143, 163], "varianc": [31, 40, 56, 58, 72, 73, 76, 77, 82, 91, 108, 109, 110, 111, 112, 113, 114, 129, 130, 131, 132, 133, 145, 195, 218], "variant": [129, 130, 131], "variat": [111, 112, 113, 218], "varieti": [148, 218], "variou": [81, 125, 148, 181, 183, 202, 212], "vdot": 158, "vector": [8, 13, 14, 15, 16, 47, 49, 98, 100, 152, 153, 154, 158], "veloc": [126, 134, 136], "veri": [13, 127], "versa": 135, "versatil": [148, 201], "version": [16, 134, 158], "vertic": [207, 210, 215], "via": 3, "vice": 135, "video": [37, 44, 89, 113, 118, 121], "view": [21, 117, 118, 119, 120, 121, 205], "vision": [36, 88, 98, 218], "volumetr": [37, 44, 89, 113, 118, 121], "vstack": 200, "w": [36, 37, 39, 43, 44, 47, 49, 61, 62, 65, 66, 68, 69, 87, 88, 89, 98, 100, 109, 110, 112, 113, 118, 121], "w_": [36, 37, 61, 62, 65, 66, 68, 88, 89, 117, 118, 120, 121], "w_out": [36, 37, 61, 62, 65, 66], "wa": [91, 92, 93, 94, 95, 140], "wai": [1, 138, 140, 205], "want": [0, 4, 211], "warn": [20, 22], "we": [3, 4, 139, 201], "weight": [35, 36, 37, 47, 49, 50, 51, 55, 56, 58, 59, 68, 72, 73, 76, 77, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 143, 148], "weight1": 22, "weight2": 22, "weight_decai": [126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "well": [72, 73], "were": 24, "what": 140, "when": [0, 1, 3, 4, 11, 18, 21, 23, 24, 26, 29, 35, 36, 37, 78, 99, 108, 109, 110, 111, 112, 113, 124, 127, 135, 138, 140, 141, 148, 159, 211], "where": [3, 7, 8, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 148, 150, 151, 155, 156, 157, 159, 160, 163, 164, 175, 179, 180, 181, 182, 183, 186, 188, 190, 193, 194, 195, 197, 202, 204, 208, 211, 212, 213, 214, 215], "whether": [1, 7, 18, 19, 72, 73, 134, 138, 143, 144, 145, 147, 149, 163, 164, 181, 182, 183, 190, 195], "which": [0, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 20, 22, 24, 29, 33, 52, 69, 78, 79, 80, 84, 85, 91, 104, 106, 108, 109, 110, 111, 112, 113, 114, 129, 130, 132, 134, 138, 140, 141, 143, 144, 147, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 197, 204, 205, 207, 209, 212, 214, 215, 216, 218], "while": [4, 21, 24, 40, 79, 81, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 205, 207, 218], "who": [4, 20, 21, 22, 23], "whose": [16, 164, 167, 169, 171, 175, 179, 185], "wide": [5, 13, 30, 81, 87, 88, 103], "wider": [35, 36], "width": [36, 37, 39, 43, 44, 61, 62, 65, 66, 68, 69, 88, 89, 109, 110, 112, 113, 117, 118, 120, 121, 216], "window": [60, 61, 62, 64, 65, 66, 116, 117, 118, 119, 120, 121, 127, 181, 183], "wise": [26, 27, 29, 30, 31, 32, 33, 34, 84, 91, 92, 93, 94, 95, 123, 139, 150, 151, 154, 155, 156, 157, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 199, 210], "within": [2, 17, 20, 21, 22, 23, 24, 34, 68, 69, 77, 79, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 125, 140, 161, 175, 218], "without": [4, 20, 21, 22, 47, 49, 87, 88, 89, 98, 100, 138, 181, 203, 205, 209], "won": 140, "work": [1, 2, 3, 4, 6, 139, 141], "workflow": [148, 218], "workload": 4, "wrap": [3, 123, 140, 196], "wrapper": 123, "x": [4, 5, 15, 17, 18, 20, 21, 22, 23, 24, 33, 47, 49, 69, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 145, 147, 163, 164, 179, 201, 213, 214, 215, 216], "x1": 98, "x2": 98, "x_": [103, 106, 201], "x_c": [103, 106], "x_i": 102, "x_k": 103, "xavier": [72, 73, 76, 77], "xavier_norm": 71, "xavier_uniform": 71, "xy": 201, "x\u2081": 98, "x\u2082": 98, "y": [20, 21, 22, 23, 24, 69, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 143, 144, 145, 147, 163, 164, 201], "y_": [103, 106, 201], "y_c": [103, 106], "y_i": 102, "yet": [4, 139], "yield": [0, 1, 18, 140], "you": [0, 21, 23, 24, 123, 125, 138, 140, 148, 163, 164, 165, 169, 194, 196, 211, 218], "your": [123, 125, 138, 140, 148, 218], "z": [164, 168, 169], "zero": [11, 13, 14, 26, 29, 35, 36, 37, 40, 41, 42, 43, 44, 60, 61, 62, 64, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 87, 88, 89, 91, 92, 93, 94, 95, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 163, 164, 165, 169, 170, 175, 185, 202], "zero_grad": [19, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149], "zeros_lik": [164, 170], "\u03c3\u1d62": 13}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.Normalize", "transforms.RandomHorizontalFlip", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 139, "1d": 139, "2": 139, "2d": 139, "3": 139, "It": [138, 140], "ab": 171, "activ": [28, 46, 86, 97], "ad": 139, "adadelta": 127, "adagrad": 128, "adam": 129, "adamax": 131, "adamw": 130, "add": 150, "addit": 13, "admonit": 141, "advanc": [39, 218], "algebra": 9, "algorithm": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "alias": 141, "align": 139, "alpha_dropout": 40, "alphadropout": 91, "also": 125, "anoth": 196, "arang": 161, "arcco": 172, "arcsin": 173, "arctan": 174, "asgd": 126, "attribut": [17, 19, 20, 21, 22, 23, 24, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 149, 213, 214, 215, 216], "avg_pool1d": 60, "avg_pool2d": 61, "avg_pool3d": 62, "avgpool1d": 116, "avgpool2d": 117, "avgpool3d": 118, "axi": 139, "backpropag": 149, "backward": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "batch_norm": 56, "batchnorm1d": 108, "batchnorm2d": 109, "batchnorm3d": 110, "bceloss": 102, "benefit": 140, "bilinear": [47, 98], "binari": 170, "binary_cross_entropi": 50, "broadcast": 139, "buffer": 17, "calcul": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 68, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216], "case": 141, "choleski": 6, "class": [0, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149, 211, 212, 213, 214, 215, 216], "clip": 175, "co": 176, "combin": 0, "compon": [3, 4, 123], "compos": 211, "concatdataset": [0, 1], "concaten": 197, "conclus": [3, 4, 123, 138, 139, 140, 148, 212, 218], "constant": 70, "contain": 25, "conv1d": [35, 87], "conv2d": [36, 88], "conv3d": [37, 89], "convolut": [38, 46, 90, 97], "core": 4, "cosh": 177, "creat": [19, 149, 196], "cross_entropi": 51, "crossentropyloss": 103, "cube": 178, "custom": [1, 2, 3, 18, 124, 125, 218], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2], "defin": [2, 18, 124, 125], "definit": 141, "det": 7, "detail": 13, "diag": 162, "dilat": 39, "div": 151, "dot": 152, "dropout": [41, 45, 46, 92, 96, 97], "dropout1d": [42, 93], "dropout2d": [43, 94], "dropout3d": [44, 95], "eig": 8, "elu": [26, 78], "empti": 163, "empty_lik": 164, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "exp": 179, "ey": 165, "featur": [4, 5, 125, 148, 218], "flatten": 198, "forward": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 68, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216], "from": 196, "function": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 138, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "gelu": [27, 79], "gener": [142, 170], "get": 125, "grad_en": 138, "gradient": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "guidelin": 141, "how": [138, 140], "hstack": 199, "huber_loss": 52, "huberloss": 104, "ident": 99, "imag": 217, "index": 149, "init": [70, 72, 73, 74, 75, 76, 77], "initi": 71, "inner": 153, "input": 196, "inspect": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "instance_norm": 58, "instancenorm1d": 111, "instancenorm2d": 112, "instancenorm3d": 113, "integr": [3, 123, 148, 218], "interpol": 68, "inv": 10, "iter": 149, "kaiming_norm": 72, "kaiming_uniform": 73, "kei": [3, 4, 123, 125, 148, 218], "layer": [86, 90, 96, 97, 101, 107, 115, 122], "layer_norm": 59, "layernorm": 114, "leaky_relu": 29, "leakyrelu": 80, "learn": 148, "limit": 4, "linalg": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "linear": [9, 46, 48, 49, 97, 100, 101], "list": 196, "load": 1, "log": 180, "loss": [46, 53, 97, 107], "lucid": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 46, 123, 125, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218], "matmul": 154, "matrix": 154, "matrix_pow": 11, "max": 181, "max_pool1d": 64, "max_pool2d": 65, "max_pool3d": 66, "maximum": 155, "maxpool1d": 119, "maxpool2d": 120, "maxpool3d": 121, "mean": 182, "meshgrid": 201, "method": [0, 1, 2, 18, 19, 124, 149], "min": 183, "minimum": 156, "model": 123, "modul": [18, 97], "moduledict": 20, "modulelist": 21, "more": 148, "mse_loss": 54, "mseloss": 105, "mul": 157, "multipl": [0, 154], "nadam": 132, "new": 139, "newaxi": 139, "nll_loss": 55, "nllloss": 106, "nn": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123], "no_grad": 140, "norm": 12, "normal": [46, 57, 74, 97, 115, 213], "note": 4, "number": 142, "ones": 166, "ones_lik": 167, "oper": [9, 154, 170], "optim": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "organ": 123, "outer": 158, "overview": [3, 4, 123, 125, 148, 218], "pad": 202, "paramet": [1, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "parameterdict": 22, "parameterlist": 23, "perform": 149, "pinv": 13, "pipelin": [3, 218], "pitfal": [138, 140], "pool": [46, 63, 97, 122], "potenti": [138, 140], "power": 159, "properti": [19, 149], "qr": 14, "radam": 133, "rais": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "rand": 143, "randint": 144, "randn": 145, "random": [142, 143, 144, 145, 146, 147, 148], "randomhorizontalflip": 214, "randomverticalflip": 215, "ravel": 203, "reciproc": 184, "refer": 125, "relu": [30, 81], "repeat": 204, "reshap": 205, "resiz": 216, "return": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 138, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "rmsprop": 134, "rotat": 69, "rprop": 135, "rule": 154, "see": 125, "seed": 146, "selu": [31, 82], "sequenti": 24, "sgd": 136, "sigmoid": [32, 83], "sign": 185, "signatur": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "sin": 186, "sinh": 187, "slice": 149, "softmax": [33, 84], "solv": 15, "sqrt": 188, "squar": 189, "squeez": 206, "stack": 207, "start": 125, "state": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "sub": 160, "sum": 190, "svd": 16, "tan": 191, "tanh": [34, 85, 192], "tensor": [139, 149, 170, 196, 200], "through": 149, "tile": 208, "totensor": 212, "trace": 193, "track": 149, "transform": [211, 212, 213, 214, 215, 216, 217, 218], "transpos": 194, "type": 141, "unari": 170, "unfold": 39, "uniform": [75, 147], "unsqueez": 209, "us": [1, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 196], "usag": [4, 17, 69, 138, 139, 140, 141, 201, 211, 212, 218], "util": [46, 67], "utilit": 200, "var": 195, "vstack": 210, "weight": 71, "why": 141, "work": [138, 140], "xavier_norm": 76, "xavier_uniform": 77, "zero": 168, "zeros_lik": 169}})