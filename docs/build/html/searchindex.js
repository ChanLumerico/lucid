Search.setIndex({"alltitles": {"@ Operator": [[235, "operator"]], "Activation Functions": [[93, null]], "Activation Layers": [[163, null], [174, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[222, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[104, "advanced-example-with-dilation"]], "Advanced Features": [[303, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[206, "algorithm"], [207, "algorithm"], [208, "algorithm"], [209, "algorithm"], [210, "algorithm"], [211, "algorithm"], [212, "algorithm"], [213, "algorithm"], [214, "algorithm"], [215, "algorithm"], [216, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [78, "architecture"]], "Architecture Details": [[49, "architecture-details"], [50, "architecture-details"]], "Attention Mechanism": [[145, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [40, "attributes"], [51, "attributes"], [58, "attributes"], [68, "attributes"], [73, "attributes"], [78, "attributes"], [82, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [179, "attributes"], [180, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [230, "attributes"], [294, "attributes"], [295, "attributes"], [296, "attributes"], [297, "attributes"], [298, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"]], "Behavior": [[125, "behavior"], [126, "behavior"], [127, "behavior"], [193, "behavior"], [194, "behavior"], [195, "behavior"]], "Benefits": [[220, "benefits"]], "Binary Functions": [[251, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [51, "class-signature"], [58, "class-signature"], [68, "class-signature"], [73, "class-signature"], [78, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [204, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [230, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [203, "conclusion"], [218, "conclusion"], [219, "conclusion"], [220, "conclusion"], [229, "conclusion"], [293, "conclusion"], [303, "conclusion"]], "Containers": [[90, null]], "Conv-BatchNorm-ReLU": [[146, null]], "ConvNets": [[35, null], [80, "convnets"]], "Convolution Functions": [[103, null], [111, null]], "Convolution Layers": [[167, null], [174, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[277, null]], "Creating a Parameter": [[84, null]], "Creating a tensor with gradient tracking": [[230, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[303, "custom-pipelines"]], "Defining a Custom Optimizer": [[205, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[83, null]], "Defining a custom optimizer": [[204, null]], "DenseNet": [[23, null]], "Depthwise Separable Convolution": [[146, null]], "Description": [[52, "description"], [53, "description"], [54, "description"], [55, "description"], [56, "description"], [57, "description"], [69, "description"], [70, "description"], [71, "description"], [221, "description"]], "Dropout Functions": [[110, null], [111, null]], "Dropout Layers": [[173, null], [174, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [104, "example"], [203, null], [203, null], [203, null], [218, "example"], [220, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, null], [229, null], [229, null], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [261, "example"], [263, "example"], [265, "example"], [266, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [278, "example"], [280, "example"], [284, "example"], [286, "example"], [287, "example"], [288, "example"], [290, "example"], [291, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[219, null]], "Example 2: Adding a new axis to a 2D tensor": [[219, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[219, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [64, "example-usage"], [65, "example-usage"], [66, "example-usage"], [67, "example-usage"], [72, "example-usage"], [137, "example-usage"], [292, "example-usage"], [293, "example-usage"], [303, "example-usage"]], "Example Use Cases": [[222, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [147, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [221, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [260, "examples"], [262, "examples"], [264, "examples"], [277, "examples"], [279, "examples"], [282, "examples"], [283, "examples"], [285, "examples"], [289, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [40, "forward-calculation"], [51, "forward-calculation"], [58, "forward-calculation"], [68, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [104, "forward-calculation"], [112, "forward-calculation"], [114, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [136, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [278, "forward-calculation"], [280, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [79, "function-signature"], [81, "function-signature"], [91, "function-signature"], [92, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [136, "function-signature"], [137, "function-signature"], [147, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [218, "function-signature"], [220, "function-signature"], [221, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"]], "Fused Layers": [[146, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[205, "getting-started"]], "How It Works": [[218, "how-it-works"], [220, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[302, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[230, null]], "Inspecting Optimizer State": [[205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null]], "Integration with lucid": [[3, "integration-with-lucid"], [203, "integration-with-lucid"], [229, "integration-with-lucid"], [303, "integration-with-lucid"]], "Iterating through a tensor": [[230, null]], "Key Components": [[3, "key-components"], [203, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [64, "key-features"], [65, "key-features"], [66, "key-features"], [67, "key-features"], [72, "key-features"], [205, "key-features"], [229, "key-features"]], "Key Transformations": [[303, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[229, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[111, null], [113, null]], "Linear Layers": [[174, null], [178, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[111, null], [118, null]], "Loss Layers": [[174, null], [184, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[235, "matrix-multiplication-rules"]], "Metadata Captured": [[221, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [73, "methods"], [83, "methods"], [84, "methods"], [204, "methods"], [230, "methods"]], "Modules": [[174, null]], "Normalization Functions": [[111, null], [122, null]], "Normalization Layers": [[174, null], [192, null]], "Notes": [[8, "notes"]], "Optimizers": [[217, null]], "Organizing Models": [[203, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [203, "overview"], [205, "overview"], [229, "overview"], [303, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [147, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [220, "parameters"], [221, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"]], "Performing backpropagation": [[230, null]], "Pooling Functions": [[111, null], [131, null]], "Pooling Layers": [[174, null], [202, null]], "Potential Pitfalls": [[218, "potential-pitfalls"], [220, "potential-pitfalls"]], "Properties": [[84, "properties"], [230, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[223, null]], "References": [[5, "references"], [6, "references"], [144, "references"], [205, "references"]], "ResNeXt": [[51, null]], "ResNet": [[40, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [81, "returns"], [91, "returns"], [92, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [112, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [136, "returns"], [137, "returns"], [145, "returns"], [147, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [218, "returns"], [220, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"]], "SENet": [[58, null]], "SKNet": [[68, null]], "See Also": [[205, "see-also"]], "Selective Kernel": [[146, null]], "Squeeze-and-Excitation": [[146, null]], "Summary Table": [[81, "summary-table"]], "Tensor Generating Functions": [[251, null]], "Tensor Operations": [[251, null]], "Tensor Utilites": [[281, null]], "Type Definitions": [[222, "type-definitions"]], "Unary Functions": [[251, null]], "Usage": [[4, "usage"], [82, "usage"], [137, "usage"], [218, "usage"], [219, "usage"], [220, "usage"], [282, "usage"], [292, "usage"], [293, "usage"], [303, "usage"]], "Use another Tensor as input": [[277, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[206, null]], "Using the Adadelta Optimizer": [[207, null]], "Using the Adagrad Optimizer": [[208, null]], "Using the Adam Optimizer": [[209, null]], "Using the AdamW Optimizer": [[210, null]], "Using the Adamax Optimizer": [[211, null]], "Using the NAdam Optimizer": [[212, null]], "Using the RAdam Optimizer": [[213, null]], "Using the RMSprop Optimizer": [[214, null]], "Using the Rprop Optimizer": [[215, null]], "Using the SGD Optimizer": [[216, null]], "Utility Functions": [[111, null], [135, null]], "VGGNet": [[73, null]], "Weight Initializations": [[148, null]], "Why Use Type Aliases?": [[222, null]], "ZFNet": [[78, null]], "activation Functions": [[111, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[230, null]], "lucid.abs": [[252, null]], "lucid.add": [[231, null]], "lucid.arange": [[242, null]], "lucid.arccos": [[253, null]], "lucid.arcsin": [[254, null]], "lucid.arctan": [[255, null]], "lucid.clip": [[256, null]], "lucid.concatenate": [[278, null]], "lucid.cos": [[257, null]], "lucid.cosh": [[258, null]], "lucid.cube": [[259, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[243, null]], "lucid.div": [[232, null]], "lucid.dot": [[233, null]], "lucid.empty": [[244, null]], "lucid.empty_like": [[245, null]], "lucid.exp": [[260, null]], "lucid.eye": [[246, null]], "lucid.flatten": [[279, null]], "lucid.grad_enabled": [[218, null]], "lucid.hstack": [[280, null]], "lucid.inner": [[234, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[261, null]], "lucid.matmul": [[235, null]], "lucid.max": [[262, null]], "lucid.maximum": [[236, null]], "lucid.mean": [[263, null]], "lucid.meshgrid": [[282, null]], "lucid.min": [[264, null]], "lucid.minimum": [[237, null]], "lucid.models": [[80, null]], "lucid.mul": [[238, null]], "lucid.newaxis": [[219, null]], "lucid.nn": [[203, null]], "lucid.nn.functional": [[111, null]], "lucid.no_grad": [[220, null]], "lucid.ones": [[247, null]], "lucid.ones_like": [[248, null]], "lucid.optim": [[205, null]], "lucid.outer": [[239, null]], "lucid.pad": [[283, null]], "lucid.power": [[240, null]], "lucid.random": [[229, null]], "lucid.random.rand": [[224, null]], "lucid.random.randint": [[225, null]], "lucid.random.randn": [[226, null]], "lucid.random.seed": [[227, null]], "lucid.random.uniform": [[228, null]], "lucid.ravel": [[284, null]], "lucid.reciprocal": [[265, null]], "lucid.register_model": [[221, null]], "lucid.repeat": [[285, null]], "lucid.reshape": [[286, null]], "lucid.sign": [[266, null]], "lucid.sin": [[267, null]], "lucid.sinh": [[268, null]], "lucid.sqrt": [[269, null]], "lucid.square": [[270, null]], "lucid.squeeze": [[287, null]], "lucid.stack": [[288, null]], "lucid.sub": [[241, null]], "lucid.sum": [[271, null]], "lucid.tan": [[272, null]], "lucid.tanh": [[273, null]], "lucid.tensor": [[277, null]], "lucid.tile": [[289, null]], "lucid.trace": [[274, null]], "lucid.transforms": [[303, null]], "lucid.transpose": [[275, null]], "lucid.types": [[222, null]], "lucid.unsqueeze": [[290, null]], "lucid.var": [[276, null]], "lucid.vstack": [[291, null]], "lucid.zeros": [[249, null]], "lucid.zeros_like": [[250, null]], "models.summarize": [[81, null]], "nn.AdaptiveAvgPool1d": [[193, null]], "nn.AdaptiveAvgPool2d": [[194, null]], "nn.AdaptiveAvgPool3d": [[195, null]], "nn.AlphaDropout": [[168, null]], "nn.AvgPool1d": [[196, null]], "nn.AvgPool2d": [[197, null]], "nn.AvgPool3d": [[198, null]], "nn.BCELoss": [[179, null]], "nn.BatchNorm1d": [[185, null]], "nn.BatchNorm2d": [[186, null]], "nn.BatchNorm3d": [[187, null]], "nn.Bilinear": [[175, null]], "nn.Buffer": [[82, null]], "nn.Conv1d": [[164, null]], "nn.Conv2d": [[165, null]], "nn.Conv3d": [[166, null]], "nn.ConvBNReLU1d": [[138, null]], "nn.ConvBNReLU2d": [[139, null]], "nn.ConvBNReLU3d": [[140, null]], "nn.CrossEntropyLoss": [[180, null]], "nn.DepthwiseSeparableConv1d": [[141, null]], "nn.DepthwiseSeparableConv2d": [[142, null]], "nn.DepthwiseSeparableConv3d": [[143, null]], "nn.Dropout": [[169, null]], "nn.Dropout1d": [[170, null]], "nn.Dropout2d": [[171, null]], "nn.Dropout3d": [[172, null]], "nn.ELU": [[155, null]], "nn.GELU": [[156, null]], "nn.HuberLoss": [[181, null]], "nn.Identity": [[176, null]], "nn.InstanceNorm1d": [[188, null]], "nn.InstanceNorm2d": [[189, null]], "nn.InstanceNorm3d": [[190, null]], "nn.LayerNorm": [[191, null]], "nn.LeakyReLU": [[157, null]], "nn.Linear": [[177, null]], "nn.MSELoss": [[182, null]], "nn.MaxPool1d": [[199, null]], "nn.MaxPool2d": [[200, null]], "nn.MaxPool3d": [[201, null]], "nn.Module": [[83, null]], "nn.ModuleDict": [[85, null]], "nn.ModuleList": [[86, null]], "nn.NLLLoss": [[183, null]], "nn.Parameter": [[84, null]], "nn.ParameterDict": [[87, null]], "nn.ParameterList": [[88, null]], "nn.ReLU": [[158, null]], "nn.SELU": [[159, null]], "nn.SEModule": [[144, null]], "nn.SelectiveKernel": [[145, null]], "nn.Sequential": [[89, null]], "nn.Sigmoid": [[160, null]], "nn.Softmax": [[161, null]], "nn.Tanh": [[162, null]], "nn.functional.adaptive_avg_pool1d": [[125, null]], "nn.functional.adaptive_avg_pool2d": [[126, null]], "nn.functional.adaptive_avg_pool3d": [[127, null]], "nn.functional.alpha_dropout": [[105, null]], "nn.functional.avg_pool1d": [[128, null]], "nn.functional.avg_pool2d": [[129, null]], "nn.functional.avg_pool3d": [[130, null]], "nn.functional.batch_norm": [[121, null]], "nn.functional.bilinear": [[112, null]], "nn.functional.binary_cross_entropy": [[115, null]], "nn.functional.conv1d": [[100, null]], "nn.functional.conv2d": [[101, null]], "nn.functional.conv3d": [[102, null]], "nn.functional.cross_entropy": [[116, null]], "nn.functional.dropout": [[106, null]], "nn.functional.dropout1d": [[107, null]], "nn.functional.dropout2d": [[108, null]], "nn.functional.dropout3d": [[109, null]], "nn.functional.elu": [[91, null]], "nn.functional.gelu": [[92, null]], "nn.functional.huber_loss": [[117, null]], "nn.functional.instance_norm": [[123, null]], "nn.functional.interpolate": [[136, null]], "nn.functional.layer_norm": [[124, null]], "nn.functional.leaky_relu": [[94, null]], "nn.functional.linear": [[114, null]], "nn.functional.max_pool1d": [[132, null]], "nn.functional.max_pool2d": [[133, null]], "nn.functional.max_pool3d": [[134, null]], "nn.functional.mse_loss": [[119, null]], "nn.functional.nll_loss": [[120, null]], "nn.functional.relu": [[95, null]], "nn.functional.rotate": [[137, null]], "nn.functional.selu": [[96, null]], "nn.functional.sigmoid": [[97, null]], "nn.functional.softmax": [[98, null]], "nn.functional.tanh": [[99, null]], "nn.functional.unfold": [[104, null]], "nn.init.constant": [[147, null]], "nn.init.kaiming_normal": [[149, null]], "nn.init.kaiming_uniform": [[150, null]], "nn.init.normal": [[151, null]], "nn.init.uniform": [[152, null]], "nn.init.xavier_normal": [[153, null]], "nn.init.xavier_uniform": [[154, null]], "optim.ASGD": [[206, null]], "optim.Adadelta": [[207, null]], "optim.Adagrad": [[208, null]], "optim.Adam": [[209, null]], "optim.AdamW": [[210, null]], "optim.Adamax": [[211, null]], "optim.NAdam": [[212, null]], "optim.Optimizer": [[204, null]], "optim.RAdam": [[213, null]], "optim.RMSprop": [[214, null]], "optim.Rprop": [[215, null]], "optim.SGD": [[216, null]], "resnet_1001": [[41, null]], "resnet_101": [[42, null]], "resnet_152": [[43, null]], "resnet_18": [[44, null]], "resnet_200": [[45, null]], "resnet_269": [[46, null]], "resnet_34": [[47, null]], "resnet_50": [[48, null]], "resnext_101_32x16d": [[52, null]], "resnext_101_32x32d": [[53, null]], "resnext_101_32x4d": [[54, null]], "resnext_101_32x8d": [[55, null]], "resnext_101_64x4d": [[56, null]], "resnext_50_32x4d": [[57, null]], "se_resnet_101": [[59, null]], "se_resnet_152": [[60, null]], "se_resnet_18": [[61, null]], "se_resnet_34": [[62, null]], "se_resnet_50": [[63, null]], "se_resnext_101_32x4d": [[64, null]], "se_resnext_101_32x8d": [[65, null]], "se_resnext_101_64x4d": [[66, null]], "se_resnext_50_32x4d": [[67, null]], "sk_resnet_18": [[69, null]], "sk_resnet_34": [[70, null]], "sk_resnet_50": [[71, null]], "sk_resnext_50_32x4d": [[72, null]], "transforms.CenterCrop": [[294, null]], "transforms.Compose": [[292, null]], "transforms.Normalize": [[295, null]], "transforms.RandomCrop": [[296, null]], "transforms.RandomGrayscale": [[297, null]], "transforms.RandomHorizontalFlip": [[298, null]], "transforms.RandomRotation": [[299, null]], "transforms.RandomVerticalFlip": [[300, null]], "transforms.Resize": [[301, null]], "transforms.ToTensor": [[293, null]], "vggnet_11": [[74, null]], "vggnet_13": [[75, null]], "vggnet_16": [[76, null]], "vggnet_19": [[77, null]], "wide_resnet_101": [[49, null]], "wide_resnet_50": [[50, null]], "zfnet": [[79, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthwiseSeparableConv1d", "nn/fused/DepthwiseSeparableConv2d", "nn/fused/DepthwiseSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthwiseSeparableConv1d.rst", "nn/fused/DepthwiseSeparableConv2d.rst", "nn/fused/DepthwiseSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"convbnrelu1d (class in lucid.nn)": [[138, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[139, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[140, "lucid.nn.ConvBNReLU3d", false]], "depthwiseseparableconv1d (class in lucid.nn)": [[141, "lucid.nn.DepthwiseSeparableConv1d", false]], "depthwiseseparableconv2d (class in lucid.nn)": [[142, "lucid.nn.DepthwiseSeparableConv2d", false]], "depthwiseseparableconv3d (class in lucid.nn)": [[143, "lucid.nn.DepthwiseSeparableConv3d", false]], "lucid": [[8, "module-lucid", false]], "module": [[8, "module-lucid", false]], "selectivekernel (class in lucid.nn)": [[145, "lucid.nn.SelectiveKernel", false]], "semodule (class in lucid.nn)": [[144, "lucid.nn.SEModule", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[230, 1, 1, "", "Tensor"], [252, 2, 1, "", "abs"], [231, 2, 1, "", "add"], [242, 2, 1, "", "arange"], [253, 2, 1, "", "arccos"], [254, 2, 1, "", "arcsin"], [255, 2, 1, "", "arctan"], [256, 2, 1, "", "clip"], [278, 2, 1, "", "concatenate"], [257, 2, 1, "", "cos"], [258, 2, 1, "", "cosh"], [259, 2, 1, "", "cube"], [243, 2, 1, "", "diag"], [232, 2, 1, "", "div"], [233, 2, 1, "", "dot"], [244, 2, 1, "", "empty"], [245, 2, 1, "", "empty_like"], [260, 2, 1, "", "exp"], [246, 2, 1, "", "eye"], [279, 2, 1, "", "flatten"], [218, 2, 1, "", "grad_enabled"], [280, 2, 1, "", "hstack"], [234, 2, 1, "", "inner"], [261, 2, 1, "", "log"], [235, 2, 1, "", "matmul"], [262, 2, 1, "", "max"], [236, 2, 1, "", "maximum"], [263, 2, 1, "", "mean"], [282, 2, 1, "", "meshgrid"], [264, 2, 1, "", "min"], [237, 2, 1, "", "minimum"], [238, 2, 1, "", "mul"], [220, 2, 1, "", "no_grad"], [247, 2, 1, "", "ones"], [248, 2, 1, "", "ones_like"], [239, 2, 1, "", "outer"], [283, 2, 1, "", "pad"], [240, 2, 1, "", "power"], [284, 2, 1, "", "ravel"], [265, 2, 1, "", "reciprocal"], [221, 2, 1, "", "register_model"], [285, 2, 1, "", "repeat"], [286, 2, 1, "", "reshape"], [266, 2, 1, "", "sign"], [267, 2, 1, "", "sin"], [268, 2, 1, "", "sinh"], [269, 2, 1, "", "sqrt"], [270, 2, 1, "", "square"], [287, 2, 1, "", "squeeze"], [288, 2, 1, "", "stack"], [241, 2, 1, "", "sub"], [271, 2, 1, "", "sum"], [272, 2, 1, "", "tan"], [273, 2, 1, "", "tanh"], [277, 2, 1, "", "tensor"], [289, 2, 1, "", "tile"], [274, 2, 1, "", "trace"], [275, 2, 1, "", "transpose"], [290, 2, 1, "", "unsqueeze"], [276, 2, 1, "", "var"], [291, 2, 1, "", "vstack"], [249, 2, 1, "", "zeros"], [250, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [51, 1, 1, "", "ResNeXt"], [40, 1, 1, "", "ResNet"], [58, 1, 1, "", "SENet"], [68, 1, 1, "", "SKNet"], [73, 1, 1, "", "VGGNet"], [78, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [41, 2, 1, "", "resnet_1001"], [42, 2, 1, "", "resnet_101"], [43, 2, 1, "", "resnet_152"], [44, 2, 1, "", "resnet_18"], [45, 2, 1, "", "resnet_200"], [46, 2, 1, "", "resnet_269"], [47, 2, 1, "", "resnet_34"], [48, 2, 1, "", "resnet_50"], [52, 2, 1, "", "resnext_101_32x16d"], [53, 2, 1, "", "resnext_101_32x32d"], [54, 2, 1, "", "resnext_101_32x4d"], [55, 2, 1, "", "resnext_101_32x8d"], [56, 2, 1, "", "resnext_101_64x4d"], [57, 2, 1, "", "resnext_50_32x4d"], [59, 2, 1, "", "se_resnet_101"], [60, 2, 1, "", "se_resnet_152"], [61, 2, 1, "", "se_resnet_18"], [62, 2, 1, "", "se_resnet_34"], [63, 2, 1, "", "se_resnet_50"], [64, 2, 1, "", "se_resnext_101_32x4d"], [65, 2, 1, "", "se_resnext_101_32x8d"], [66, 2, 1, "", "se_resnext_101_64x4d"], [67, 2, 1, "", "se_resnext_50_32x4d"], [69, 2, 1, "", "sk_resnet_18"], [70, 2, 1, "", "sk_resnet_34"], [71, 2, 1, "", "sk_resnet_50"], [72, 2, 1, "", "sk_resnext_50_32x4d"], [81, 2, 1, "", "summarize"], [74, 2, 1, "", "vggnet_11"], [75, 2, 1, "", "vggnet_13"], [76, 2, 1, "", "vggnet_16"], [77, 2, 1, "", "vggnet_19"], [49, 2, 1, "", "wide_resnet_101"], [50, 2, 1, "", "wide_resnet_50"], [79, 2, 1, "", "zfnet"]], "lucid.nn": [[193, 1, 1, "", "AdaptiveAvgPool1d"], [194, 1, 1, "", "AdaptiveAvgPool2d"], [195, 1, 1, "", "AdaptiveAvgPool3d"], [168, 1, 1, "", "AlphaDropout"], [196, 1, 1, "", "AvgPool1d"], [197, 1, 1, "", "AvgPool2d"], [198, 1, 1, "", "AvgPool3d"], [179, 1, 1, "", "BCELoss"], [185, 1, 1, "", "BatchNorm1d"], [186, 1, 1, "", "BatchNorm2d"], [187, 1, 1, "", "BatchNorm3d"], [175, 1, 1, "", "Bilinear"], [82, 1, 1, "", "Buffer"], [164, 1, 1, "", "Conv1d"], [165, 1, 1, "", "Conv2d"], [166, 1, 1, "", "Conv3d"], [138, 1, 1, "", "ConvBNReLU1d"], [139, 1, 1, "", "ConvBNReLU2d"], [140, 1, 1, "", "ConvBNReLU3d"], [180, 1, 1, "", "CrossEntropyLoss"], [141, 1, 1, "", "DepthwiseSeparableConv1d"], [142, 1, 1, "", "DepthwiseSeparableConv2d"], [143, 1, 1, "", "DepthwiseSeparableConv3d"], [169, 1, 1, "", "Dropout"], [170, 1, 1, "", "Dropout1d"], [171, 1, 1, "", "Dropout2d"], [172, 1, 1, "", "Dropout3d"], [155, 1, 1, "", "ELU"], [156, 1, 1, "", "GELU"], [181, 1, 1, "", "HuberLoss"], [176, 1, 1, "", "Identity"], [188, 1, 1, "", "InstanceNorm1d"], [189, 1, 1, "", "InstanceNorm2d"], [190, 1, 1, "", "InstanceNorm3d"], [191, 1, 1, "", "LayerNorm"], [157, 1, 1, "", "LeakyReLU"], [177, 1, 1, "", "Linear"], [182, 1, 1, "", "MSELoss"], [199, 1, 1, "", "MaxPool1d"], [200, 1, 1, "", "MaxPool2d"], [201, 1, 1, "", "MaxPool3d"], [83, 1, 1, "", "Module"], [85, 1, 1, "", "ModuleDict"], [86, 1, 1, "", "ModuleList"], [183, 1, 1, "", "NLLLoss"], [84, 1, 1, "", "Parameter"], [87, 1, 1, "", "ParameterDict"], [88, 1, 1, "", "ParameterList"], [158, 1, 1, "", "ReLU"], [159, 1, 1, "", "SELU"], [144, 1, 1, "", "SEModule"], [145, 1, 1, "", "SelectiveKernel"], [89, 1, 1, "", "Sequential"], [160, 1, 1, "", "Sigmoid"], [161, 1, 1, "", "Softmax"], [162, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[125, 2, 1, "", "adaptive_avg_pool1d"], [126, 2, 1, "", "adaptive_avg_pool2d"], [127, 2, 1, "", "adaptive_avg_pool3d"], [105, 2, 1, "", "alpha_dropout"], [128, 2, 1, "", "avg_pool1d"], [129, 2, 1, "", "avg_pool2d"], [130, 2, 1, "", "avg_pool3d"], [121, 2, 1, "", "batch_norm"], [112, 2, 1, "", "bilinear"], [115, 2, 1, "", "binary_cross_entropy"], [100, 2, 1, "", "conv1d"], [101, 2, 1, "", "conv2d"], [102, 2, 1, "", "conv3d"], [116, 2, 1, "", "cross_entropy"], [106, 2, 1, "", "dropout"], [107, 2, 1, "", "dropout1d"], [108, 2, 1, "", "dropout2d"], [109, 2, 1, "", "dropout3d"], [91, 2, 1, "", "elu"], [92, 2, 1, "", "gelu"], [117, 2, 1, "", "huber_loss"], [123, 2, 1, "", "instance_norm"], [136, 2, 1, "", "interpolate"], [124, 2, 1, "", "layer_norm"], [94, 2, 1, "", "leaky_relu"], [114, 2, 1, "", "linear"], [132, 2, 1, "", "max_pool1d"], [133, 2, 1, "", "max_pool2d"], [134, 2, 1, "", "max_pool3d"], [119, 2, 1, "", "mse_loss"], [120, 2, 1, "", "nll_loss"], [95, 2, 1, "", "relu"], [137, 2, 1, "", "rotate"], [96, 2, 1, "", "selu"], [97, 2, 1, "", "sigmoid"], [98, 2, 1, "", "softmax"], [99, 2, 1, "", "tanh"], [104, 2, 1, "", "unfold"]], "lucid.nn.init": [[147, 2, 1, "", "constant"], [149, 2, 1, "", "kaiming_normal"], [150, 2, 1, "", "kaiming_uniform"], [151, 2, 1, "", "normal"], [152, 2, 1, "", "uniform"], [153, 2, 1, "", "xavier_normal"], [154, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[206, 1, 1, "", "ASGD"], [207, 1, 1, "", "Adadelta"], [208, 1, 1, "", "Adagrad"], [209, 1, 1, "", "Adam"], [210, 1, 1, "", "AdamW"], [211, 1, 1, "", "Adamax"], [212, 1, 1, "", "NAdam"], [204, 1, 1, "", "Optimizer"], [213, 1, 1, "", "RAdam"], [214, 1, 1, "", "RMSprop"], [215, 1, 1, "", "Rprop"], [216, 1, 1, "", "SGD"]], "lucid.random": [[224, 2, 1, "", "rand"], [225, 2, 1, "", "randint"], [226, 2, 1, "", "randn"], [227, 2, 1, "", "seed"], [228, 2, 1, "", "uniform"]], "lucid.transforms": [[294, 1, 1, "", "CenterCrop"], [292, 1, 1, "", "Compose"], [295, 1, 1, "", "Normalize"], [296, 1, 1, "", "RandomCrop"], [297, 1, 1, "", "RandomGrayscale"], [298, 1, 1, "", "RandomHorizontalFlip"], [299, 1, 1, "", "RandomRotation"], [300, 1, 1, "", "RandomVerticalFlip"], [301, 1, 1, "", "Resize"], [293, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 80, 81, 82, 83, 84, 85, 87, 88, 89, 125, 126, 127, 145, 180, 183, 193, 194, 195, 196, 199, 200, 203, 204, 205, 219, 221, 235, 243, 261, 263, 271, 274, 276, 277, 287, 293, 295, 303], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 58, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 280, 283, 284, 285, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303], "000": [5, 6, 244, 245], "0000": [180, 181, 183], "0001": 206, "000e": [244, 245], "001": [206, 209, 210, 212, 213, 216], "002": [211, 212], "004": 212, "005": 157, "01": [94, 157, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216], "01051757": 226, "013": [26, 80], "016": [41, 80], "0205": 180, "0217": 180, "0227": 180, "024": [63, 80], "026": [52, 80], "028": [57, 80], "0299": 180, "032": [48, 80], "044715": [92, 156], "0450": 180, "0451": 180, "047": [75, 80], "04719755": 253, "0474259": 97, "048": [65, 80], "0480": 180, "05": [121, 123, 124, 138, 139, 140, 157, 185, 186, 187, 188, 189, 190, 191], "0507": [96, 159], "06": [207, 215], "069": [46, 80], "07": [115, 116, 179, 180], "0700": 180, "0706508": 162, "071": [41, 80], "0721": 180, "073": [71, 80], "0794": 183, "08": [209, 210, 211, 212, 213, 214], "0802": 183, "08333333": 17, "085537": 260, "088": [63, 80], "0900": [161, 180], "0986": [98, 161], "09861229": 261, "0992": 180, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 58, 64, 65, 66, 67, 68, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 73, 78, 79, 80, 81, 85, 86, 89, 101, 102, 112, 114, 125, 164, 165, 166, 171, 172, 175, 177, 186, 187, 189, 193, 197, 198, 200, 208, 221, 225, 228, 229, 232, 235, 238, 239, 255, 271, 294, 296, 297, 299], "100": [22, 74, 75, 76, 77, 80, 221, 303], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "1000000": 206, "1001": [41, 80, 180], "1003": 180, "1007": 80, "101": [42, 49, 52, 53, 54, 55, 56, 59, 64, 65, 66, 80], "1014": 96, "102": [46, 80], "1025": [86, 89], "1026": [86, 89], "1027": [86, 89], "10499": 97, "1050": 160, "1054": 183, "1056": [86, 89], "10590": 80, "1097": 80, "11": [44, 61, 73, 74, 80, 112, 164, 165, 166, 171, 175, 186, 187, 189, 197, 198, 200, 235, 294, 295, 296, 297, 299], "1105": 80, "1109": 80, "1111": 179, "1134": 112, "114b": 297, "119": 112, "1192": [97, 98, 161], "12": [23, 24, 25, 26, 27, 37, 38, 87, 112, 127, 164, 165, 166, 171, 172, 175, 186, 187, 189, 195, 197, 198, 200, 235, 239, 240, 294, 296, 297, 299], "120": [36, 39], "121": [23, 24, 80], "123": [149, 150, 151, 152, 153, 154, 227, 228], "124": [149, 150, 153, 154], "125": 198, "1250": 181, "126": [49, 80], "128": [33, 40, 49, 50, 73, 80, 89, 145, 292, 303], "128x128": [292, 303], "13": [29, 73, 75, 80, 112, 164, 165, 166, 175, 187, 197, 198, 200, 235, 294, 296, 297, 299], "132": [74, 80], "133": [75, 80], "138": [76, 80], "14": [25, 80, 164, 165, 166, 171, 172, 175, 187, 197, 198, 200, 222, 235, 239, 294, 296, 297, 299], "1409": 80, "143": [77, 80], "145": 112, "149": [25, 41, 80], "15": [0, 112, 164, 165, 166, 175, 187, 197, 198, 200, 235, 239, 274, 294, 296, 297, 299, 303], "1513": 183, "152": [43, 60, 80], "155": 235, "1556": 80, "1588": [92, 156], "16": [23, 24, 36, 39, 52, 58, 73, 76, 80, 86, 87, 89, 126, 127, 138, 139, 140, 144, 145, 164, 165, 166, 171, 172, 175, 186, 187, 194, 195, 197, 198, 200, 203, 235, 239, 269, 294, 296, 297, 299], "160": [42, 80], "16227766": 18, "16425": 183, "1643": 179, "166": 235, "169": [23, 25, 80], "17": [164, 165, 166, 175, 187, 198, 234, 294, 296, 297, 299], "170": 112, "17520119": 268, "177": [54, 80], "18": [38, 44, 61, 69, 80, 164, 165, 166, 171, 175, 187, 198, 238, 239, 294, 296, 297, 299], "1800": 180, "19": [73, 77, 80, 101, 102, 112, 165, 166, 187, 233, 235], "192": [37, 38, 43, 80], "194": [52, 80], "1966": [98, 160, 161], "1998": [80, 180], "1_53": 80, "1d": [100, 125, 128, 132, 138, 141, 185, 188, 193, 228, 235, 243, 274, 282, 283, 284, 285, 289], "1e": [115, 116, 121, 123, 124, 138, 139, 140, 179, 180, 185, 186, 187, 188, 189, 190, 191, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "1e6": 206, "1st": [21, 78], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 44, 61, 69, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "20": [0, 5, 6, 26, 80, 85, 86, 89, 165, 166, 171, 187, 239, 260], "200": [45, 80], "201": [26, 80], "2011": 144, "2012": 80, "2014": 80, "2015": 80, "2016": 80, "2017": 80, "2018": [80, 144], "2019": 80, "2023": 144, "2039": 183, "204": 166, "21": [47, 62, 80, 87, 112, 165, 166, 187, 239], "211": 235, "22": [33, 80, 112, 165, 166, 171, 187, 233, 235], "2231": [180, 183], "224": [21, 23, 24, 25, 26, 27, 40, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80], "2247": [185, 186, 187, 188, 189, 190, 191], "224x224": [29, 64, 65, 66, 67, 72], "226": 235, "22752314": 226, "2278": 80, "23": [42, 49, 52, 53, 54, 55, 56, 59, 165, 166, 187], "232": [66, 80], "2324": [80, 159], "234": [149, 150, 151, 152, 153, 154, 228], "24": [23, 24, 45, 112, 126, 165, 166, 171, 187, 194, 239], "240": [77, 80], "2424": [98, 161], "2447": 161, "246": [37, 80], "25": [0, 48, 57, 69, 80, 97, 160, 166, 182, 187, 197, 198, 232, 265, 276], "2500": [179, 181, 183], "2512": 155, "2547": 159, "256": [40, 73], "26": [87, 114, 166, 177, 187, 239], "26325684": 226, "264": [27, 80], "2689": [98, 160, 161], "269": [46, 80], "27": [67, 80, 112, 164, 166, 187, 259], "272": [56, 80], "274": [72, 80], "276": [149, 150, 153, 154], "28": [37, 38, 63, 80, 112, 166, 239], "28x28": [5, 6, 37, 38], "29": [72, 80, 166], "299": 80, "299r": 297, "299x299": [30, 31, 33, 34], "2_i": [188, 189, 190], "2d": [101, 108, 126, 129, 133, 139, 142, 186, 189, 194, 235, 243, 246, 274, 279, 282, 283, 285, 289, 299], "2e": 211, "2nd": [21, 78], "2x2": [104, 294, 296], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301], "30": [30, 46, 80, 86, 137, 166, 299], "3026": 183, "31": [112, 166, 235], "310": [244, 245], "31622777": 18, "319": 80, "32": [23, 25, 26, 39, 52, 53, 54, 55, 57, 80, 86, 89, 112, 114, 126, 138, 139, 140, 144, 145, 165, 166, 177, 194, 203, 233, 234, 239], "321": [149, 150, 153, 154], "326": [59, 80], "32x16d": 80, "32x32": [36, 39], "32x32d": 80, "32x4d": [64, 67, 72, 80], "32x8d": [65, 80], "33": [27, 80, 86, 89, 114, 166, 177], "33333333": 17, "336": [55, 74, 80], "337": [27, 80], "34": [47, 62, 70, 80, 86, 89, 112, 166, 235, 239], "342": [149, 150, 153, 154], "345": [149, 150, 151, 152, 153, 154, 228], "35": [34, 80, 86, 89, 166], "352": [29, 80], "3567": [179, 183], "357": [76, 79, 80], "36": [43, 45, 60, 166], "3679": [91, 96, 155], "368": [69, 71, 80], "37": 164, "372": 112, "375": 182, "3750": 181, "378": [38, 80], "38344152": 224, "38629436": 261, "389056": 260, "392": [30, 80], "393": [29, 80], "3935": 155, "3d": [102, 109, 127, 130, 134, 140, 143, 166, 187, 190, 195], "3x3": [80, 229], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 40, 42, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 70, 71, 80, 81, 87, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 209, 213, 214, 216, 219, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 250, 256, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301], "40": [31, 80], "400": 39, "4044": 179, "4076": 180, "4096": [21, 78], "41421356": 10, "416": [46, 64, 80], "41666667": 17, "41808962": 226, "419974": 99, "4199743": 162, "42": [112, 144, 222, 229], "421": [149, 150, 153, 154], "423": [149, 150, 151, 152], "42718872": 18, "4278": 80, "4284": 80, "4286": 179, "43": [233, 235], "4323": 155, "4375": 181, "43758721": 224, "44": [42, 54, 80], "4472136": 12, "4495": [187, 190], "45": [70, 80, 112, 137, 299], "4545": 168, "455": [56, 80], "468": [53, 80], "4700": 80, "4708": 80, "47112767": 255, "472": [53, 80], "48": [23, 26, 27, 46, 64, 80, 114, 177], "480": [25, 80], "49": [59, 80], "4979": 155, "4x4": 301, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 68, 69, 70, 71, 78, 80, 81, 83, 84, 85, 86, 87, 89, 92, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 117, 119, 121, 123, 124, 125, 128, 129, 136, 138, 139, 140, 145, 147, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 200, 201, 215, 219, 222, 225, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 250, 252, 253, 254, 262, 263, 264, 265, 266, 271, 274, 275, 276, 277, 280, 282, 286, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "50": [40, 48, 50, 57, 63, 67, 71, 72, 80, 114, 177, 215, 233, 235, 297, 298, 300, 303], "5000": [179, 181, 183], "510": 80, "5108": 183, "512": [34, 40, 44, 70, 80], "519": 80, "52359878": 254, "53": [112, 234], "530": [53, 80], "543": [149, 150, 151, 152, 153, 154, 228], "54308063": 258, "544": [76, 80], "545": 240, "5455": 168, "549": [42, 80], "557": [48, 80], "559": [67, 80], "563": [149, 150, 153, 154], "569": [65, 80], "57": [71, 80, 112], "57079633": [253, 254], "57366333": 227, "586": [31, 80], "587g": 297, "592": [61, 80], "5987": 80, "5995": 80, "5th": [21, 78], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 40, 47, 48, 50, 57, 62, 63, 70, 71, 78, 87, 88, 100, 101, 102, 104, 109, 112, 114, 125, 150, 154, 164, 165, 166, 169, 170, 171, 172, 175, 177, 179, 185, 186, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 207, 215, 219, 222, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 262, 263, 264, 271, 274, 275, 276, 277, 280, 285, 286, 291, 293, 294, 295, 296, 297, 299, 301], "60": [43, 80], "6052": 183, "6065": 155, "608": [79, 80], "61": [22, 39, 80], "6124": [185, 186, 187, 188, 189, 190, 191], "62": [79, 80, 112], "62686041": 268, "630": 80, "6321": [91, 155], "63245553": 18, "64": [23, 27, 40, 45, 56, 68, 73, 80, 86, 89, 112, 144, 145], "645": 80, "64589411": 224, "647": [69, 80], "64x4d": [66, 80], "654": [149, 150, 151, 152, 153, 154, 228], "657": [149, 150, 153, 154], "6590": [98, 161], "66": [60, 80], "6652": 161, "66666667": 17, "6667": 179, "667": [77, 80], "6682": 179, "669": [45, 80], "67": 235, "672": [47, 80], "67326": 159, "6733": 96, "678": [149, 150, 151, 152, 153, 154], "68811989": 226, "689": [44, 80], "69314718": 261, "696": [49, 80], "7": [16, 24, 73, 80, 87, 100, 101, 102, 104, 109, 112, 114, 115, 116, 125, 145, 156, 159, 160, 162, 164, 165, 166, 171, 172, 175, 177, 179, 180, 182, 186, 187, 189, 190, 193, 197, 198, 200, 201, 222, 225, 228, 231, 233, 234, 235, 239, 241, 243, 260, 263, 271, 274, 275, 276, 289, 293, 294, 295, 296, 297, 299, 301], "70": [5, 6], "7001": 180, "704": [27, 54, 80], "706": [39, 80], "70710678": [12, 267], "7132": 80, "7141": 80, "7147": 183, "7182818": 260, "726791": 80, "7311": [98, 160, 161], "739": [33, 80], "74": 235, "75": [114, 177, 182, 206], "7581": 96, "760": [72, 80], "76159416": 273, "7616": [99, 162], "76219569": 258, "7635": 159, "770": 80, "772": 240, "778": [61, 80], "78": [50, 80], "78357324": 226, "78539816": 255, "791": [55, 80], "79172504": 224, "792": [52, 80], "797": [47, 80], "7x7": 78, "8": [15, 19, 23, 40, 43, 46, 52, 53, 54, 55, 56, 57, 60, 69, 70, 71, 81, 86, 87, 89, 100, 101, 102, 104, 109, 112, 114, 115, 125, 126, 127, 138, 139, 140, 144, 156, 159, 160, 162, 164, 165, 166, 169, 170, 171, 172, 175, 177, 179, 182, 186, 187, 189, 190, 193, 194, 195, 197, 198, 200, 201, 209, 210, 211, 212, 213, 214, 222, 225, 232, 233, 234, 235, 239, 240, 242, 243, 259, 263, 271, 274, 275, 276, 293, 294, 295, 296, 297, 299, 301], "80": [5, 6], "8005": 180, "808": [43, 80], "817": [30, 80], "818": 80, "8182": 168, "82": 112, "821": [60, 80], "83": [56, 80], "833": 80, "84": [36, 38, 39], "840": [22, 80], "8413": [92, 156], "847": [34, 80], "848": [60, 75, 80], "856": [24, 80], "8584": 159, "86": 80, "863": [74, 80], "864": [45, 80], "868": [62, 80], "872": [59, 80], "876": [149, 150, 153, 154, 228], "88": [55, 66, 80], "8808": [98, 160, 161], "886": [49, 80], "887": 240, "891773": 224, "89442719": 12, "895": [70, 80], "896": [67, 80], "9": [0, 1, 3, 6, 19, 80, 101, 104, 112, 114, 125, 164, 165, 166, 171, 175, 177, 179, 186, 187, 189, 193, 197, 198, 200, 206, 207, 209, 210, 211, 212, 213, 214, 216, 222, 225, 228, 231, 235, 239, 240, 241, 243, 269, 270, 293, 294, 295, 296, 297, 299], "904": [57, 80], "90709145": 227, "9091": 168, "9120": 183, "9163": 183, "928": [26, 80], "93": [65, 80], "94": 41, "9486833": 18, "949e": [244, 245], "9526": 97, "9545": 156, "955": [64, 80], "958": [62, 80], "96366276": 224, "9640": 162, "96402758": 273, "973": [50, 80], "978": [24, 80], "984": [31, 66, 80], "99": 214, "9957": 183, "99734545": 227, "999": [0, 209, 210, 211, 212, 213], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 83, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 114, 115, 116, 120, 121, 123, 124, 136, 145, 168, 169, 170, 171, 172, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 299], "As": 227, "Be": 0, "By": [0, 2, 3, 8, 41, 42, 43, 44, 45, 46, 47, 48, 84, 137, 203, 213, 219, 224, 225, 226, 228, 293, 303], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 89, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 149, 150, 153, 154, 159, 164, 165, 166, 175, 177, 185, 186, 187, 188, 189, 190, 203, 205, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 260, 261, 262, 263, 264, 267, 269, 271, 274, 275, 276, 283, 285, 287, 289, 290, 303], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 81, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 109, 112, 114, 121, 123, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 150, 164, 165, 166, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 204, 209, 210, 214, 215, 221, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 297, 298, 300, 301], "In": [3, 8, 17, 100, 101, 102, 180, 183, 218, 219, 220, 292, 303], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 73, 80, 83, 85, 86, 87, 88, 89, 109, 112, 136, 137, 138, 139, 140, 144, 156, 158, 162, 175, 176, 179, 180, 181, 182, 183, 193, 194, 195, 203, 204, 205, 206, 212, 214, 215, 216, 219, 227, 231, 232, 233, 236, 237, 238, 240, 241, 262, 264, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293], "Its": [19, 229], "Near": 17, "No": 104, "Not": 176, "One": [37, 303], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "There": 286, "These": [4, 8, 9, 12, 15, 18, 20, 49, 50, 69, 70, 71, 80, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 215, 222, 229, 303], "To": [3, 80, 205, 226, 229, 244, 245, 282, 303], "With": [3, 104, 293, 303], "_": [15, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 114, 136, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 201, 206, 207, 209, 210, 211, 212, 214, 216, 233, 234, 235, 239, 274, 275, 294, 295, 296, 298, 299, 300], "_1": [12, 85, 86, 87, 88, 89, 112, 175, 239, 278, 280, 291], "_2": [12, 85, 86, 87, 88, 89, 112, 175, 239, 278, 280, 291], "__call__": [1, 83], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 230, 292, 293], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 204, "__setattr__": 83, "_activ": 98, "_arraylik": [222, 243, 245, 248, 250], "_arraylikeint": 283, "_arrayorscalar": [82, 84, 222, 230, 277], "_base_activ": 36, "_base_dtyp": [242, 244, 247, 249], "_c": 295, "_decai": 212, "_fanmod": [149, 150], "_grad_en": [218, 220], "_i": [12, 16, 98, 112, 161, 182, 185, 191, 196, 199, 233, 234, 236, 237, 239, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 285, 287, 290, 291], "_in": [149, 150, 153, 154], "_j": [98, 161, 196, 199, 239, 263, 271, 275, 276], "_k": 288, "_left": 136, "_make_lay": 73, "_modul": 83, "_n": [12, 85, 86, 87, 88, 89, 278, 280, 291], "_numpyarrai": 222, "_out": [149, 150, 153, 154, 285, 289], "_p": 16, "_pad": 283, "_paddingstr": [138, 139, 140, 141, 142, 143, 164, 165, 166], "_paramet": 83, "_reductiontyp": [115, 116, 117, 119, 120, 179, 180, 181, 182, 183], "_right": 136, "_scalar": [147, 151, 152, 153, 154, 222, 242, 256], "_seresnetbottleneck": [59, 60, 63], "_seresnetmodul": [61, 62], "_shapelik": [81, 124, 191, 222, 225, 247, 249, 286, 287, 290], "_size": [125, 126, 127], "_skresnetmodul": [69, 70, 71], "_slope": 157, "_statedict": 204, "_t": [213, 214], "_tensor": [82, 84, 243, 277], "_tensorop": 230, "_u": 17, "_v": 17, "_valu": [256, 283], "_width": 283, "a_i": [236, 237, 240], "aaai": 80, "ab": 251, "abc": [2, 204], "abil": [8, 80, 303], "about": [8, 81], "abov": [8, 218, 220, 227, 243, 246], "absolut": [15, 16, 117, 211, 252], "abstract": [2, 3, 203, 204, 205, 206, 214, 216], "abstractmethod": 204, "acceler": [80, 159, 185, 186, 187, 206, 212, 214, 216], "accept": [176, 224, 230], "access": [0, 2, 3, 4, 5, 6, 52, 53, 54, 55, 56, 57, 82, 84, 85, 86, 87, 88, 89, 286], "accord": [136, 164, 165, 166, 175, 177, 180, 183, 207, 208, 209, 210, 211, 212, 213, 275], "accordingli": 11, "account": [15, 17, 18], "accumul": [206, 207, 208, 231, 232, 236, 237, 238, 241], "accur": 60, "accuraci": [63, 80], "achiev": [51, 52, 53, 54, 55, 56, 57, 80, 100, 101, 102, 125, 193, 194, 195, 212, 298, 300], "across": [0, 82, 86, 89, 124, 125, 126, 127, 153, 154, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 222, 224, 225, 226, 227, 228, 229, 244, 245, 263, 276], "act": [141, 142, 143, 210], "activ": [8, 21, 36, 41, 45, 46, 58, 73, 78, 80, 85, 89, 91, 92, 94, 95, 96, 97, 98, 99, 105, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 179, 180, 183, 185, 186, 187, 191, 262, 264], "actual": [84, 179, 180, 182, 183, 230, 296], "ad": [23, 40, 83, 85, 86, 87, 88, 89, 100, 101, 102, 112, 114, 115, 116, 121, 123, 124, 128, 129, 130, 132, 133, 134, 138, 139, 140, 164, 165, 166, 179, 180, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 221, 290, 303], "adadelta": 217, "adagrad": [207, 217], "adam": [210, 211, 212, 213, 217], "adamax": 217, "adamw": 217, "adapt": [21, 28, 36, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 125, 126, 127, 144, 145, 193, 194, 195, 207, 208, 209, 212, 213, 214, 215], "adaptive_avg_pool1d": [111, 131, 193], "adaptive_avg_pool2d": [111, 131, 194], "adaptive_avg_pool3d": [111, 131, 195], "adaptiveavgpool1d": [174, 202], "adaptiveavgpool2d": [21, 58, 73, 78, 174, 202], "adaptiveavgpool3d": [174, 202], "add": [4, 83, 85, 86, 89, 112, 114, 164, 165, 166, 175, 177, 191, 204, 206, 209, 214, 216, 219, 251, 283, 290], "add_modul": [83, 89], "add_param_group": 204, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 86, 89, 112, 114, 121, 123, 175, 177, 185, 186, 187, 188, 189, 190, 206, 212, 219, 229, 231, 288], "addition": 212, "address": [180, 183, 209, 210, 213], "adjust": [33, 64, 65, 66, 67, 68, 72, 125, 126, 127, 145, 168, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 205, 209, 213, 214, 215, 280, 291], "advanc": [3, 17, 45, 80, 86, 89, 100, 101, 102, 125, 126, 127, 193, 194, 195, 203, 206], "advantag": [34, 220], "affect": [218, 284, 287, 292], "affin": [138, 139, 140, 185, 186, 187, 188, 189, 190, 191, 299], "after": [15, 21, 78, 84, 85, 86, 87, 88, 89, 109, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 210, 220, 230, 231, 232, 236, 237, 238, 240, 241, 283, 293], "afterward": 220, "aggreg": [80, 145, 239, 285, 289], "aim": [4, 8], "al": [29, 80], "alex": 80, "alexnet": [35, 78, 80], "algebra": [8, 9, 246], "algorithm": [5, 8, 15, 17, 18, 204, 205, 229], "align": [19, 136, 234, 235], "align_corn": 136, "all": [0, 3, 4, 8, 18, 80, 83, 85, 86, 87, 88, 89, 101, 102, 125, 126, 127, 129, 130, 133, 134, 136, 139, 140, 145, 157, 158, 166, 193, 194, 195, 197, 198, 201, 203, 204, 205, 206, 209, 214, 215, 216, 240, 262, 263, 264, 271, 274, 276, 278, 279, 280, 285, 287, 288, 289, 291, 294, 295, 303], "allevi": [80, 91], "alloc": [244, 245], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 40, 51, 64, 65, 66, 67, 68, 72, 80, 84, 85, 86, 87, 88, 89, 91, 94, 95, 98, 102, 104, 137, 145, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 203, 207, 208, 219, 242, 247, 249, 250, 275, 277, 282, 292, 293, 303], "along": [98, 136, 145, 161, 234, 235, 239, 262, 263, 264, 271, 274, 276, 278, 280, 282, 285, 288, 289, 290, 291, 298, 300], "alongsid": 82, "alpha": [91, 94, 96, 105, 155, 159, 168, 206, 214], "alpha_dropout": [110, 111, 168], "alphadropout": [173, 174], "alphadropoutmodel": 168, "alreadi": 221, "also": [81, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 212, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291], "alter": [89, 286], "altern": [1, 156, 207, 235], "alwai": [84, 284, 297, 298, 300], "among": [30, 145], "amount": [100, 101, 102, 128, 129, 130, 132, 133, 134, 141, 142, 143, 212], "amsgrad": [209, 210], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 92, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 126, 127, 136, 137, 141, 142, 143, 145, 153, 154, 155, 160, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 209, 212, 214, 220, 221, 222, 230, 235, 243, 246, 256, 263, 271, 276, 278, 285, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "analog": [285, 289], "analysi": [4, 144, 164, 165, 166, 190, 196, 198, 199, 201], "andrew": 80, "angl": [137, 299], "ani": [0, 1, 2, 3, 15, 17, 22, 40, 68, 79, 82, 83, 84, 85, 87, 88, 91, 92, 94, 95, 96, 97, 99, 105, 106, 112, 114, 121, 123, 160, 191, 203, 204, 218, 220, 221, 227, 230, 242, 243, 244, 246, 247, 248, 249, 250, 262, 264, 275, 277, 278, 279, 280, 283, 285, 288, 289, 290, 291, 292, 303], "anoth": [88, 241, 248, 250, 293, 303], "api": [4, 193, 194, 195, 303], "appear": 204, "append": [86, 88, 89], "appli": [2, 4, 5, 6, 8, 15, 21, 51, 68, 78, 80, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 213, 235, 283, 285, 292, 295, 297, 298, 299, 300, 301, 303], "applic": [4, 17, 23, 33, 34, 100, 123, 164, 165, 166, 175, 177, 229, 242, 249, 283, 301], "approach": [3, 32, 89, 210], "appropri": [17, 80, 83, 87, 89, 164, 165, 166, 168, 169, 170, 180, 197, 198, 218, 220], "approx": 96, "approxim": [17, 92, 156, 197, 200], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 80, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 101, 102, 104, 112, 114, 126, 127, 136, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 161, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 209, 210, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 252, 256, 260, 262, 263, 264, 265, 266, 271, 274, 275, 278, 282, 285, 286, 289, 292, 293, 294, 296, 297, 301, 303], "arang": 251, "arbitrari": [86, 176, 244, 245, 256, 261, 263, 267, 269, 271, 275, 276], "arcco": 251, "arch": 221, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 92, 144, 158, 175, 176, 203, 221], "arcsin": 251, "arctan": 251, "area": 136, "arg": [83, 176, 221, 244], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 89, 176, 224, 244, 275], "around": [12, 137, 162], "arr": [222, 278, 280, 288, 291], "arrai": [8, 82, 84, 219, 222, 230, 235, 243, 248, 250, 277, 284, 285, 293, 303], "art": 80, "artifici": 80, "arxiv": 80, "asarrai": 222, "asgd": 217, "aspect": 301, "assign": [83, 85, 87, 89, 136, 180, 183], "assist": [28, 29, 30], "associ": [87, 88], "assum": [0, 1, 204, 205, 218], "attempt": [85, 89], "attent": [68, 88, 112, 144], "attribut": 83, "audio": 164, "augment": [3, 4, 61, 137, 229, 285, 289, 292, 296, 297, 298, 299, 300, 303], "autodiff": 8, "autograd": 203, "automat": [4, 8, 84, 85, 86, 87, 88, 203, 224, 225, 226, 228, 230, 244, 245, 250, 282, 293], "auxiliari": [28, 29, 30, 82], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 40, 51, 58, 68, 73, 78, 82, 125, 126, 127, 128, 129, 130, 136, 144, 145, 182, 193, 194, 195, 196, 197, 198, 206, 207, 209, 214, 263], "avg_down": 40, "avg_pool": [196, 197, 198], "avg_pool1d": [111, 131], "avg_pool2d": [111, 131], "avg_pool3d": [111, 131], "avgpool": [21, 58, 73, 78, 145], "avgpool1d": [174, 202], "avgpool1dmodel": 196, "avgpool2d": [174, 202], "avgpool2dmodel": 197, "avgpool3d": [174, 202], "avgpool3dmodel": 198, "avoid": [2, 3, 17, 87, 220], "ax": [9, 219, 262, 263, 264, 271, 275, 276, 285, 287, 289], "axi": [98, 161, 234, 235, 262, 263, 264, 271, 276, 278, 280, 282, 283, 285, 287, 288, 289, 290, 291, 298, 300], "b": [9, 19, 112, 114, 152, 164, 165, 166, 175, 177, 219, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 278, 280, 288, 291, 297], "b_i": [236, 237, 240], "back": [136, 197, 198, 221, 234, 239, 285, 289], "backbon": [69, 70, 71], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 220, 226, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 260, 262, 264, 277, 283, 285, 289, 293], "backward": [8, 82, 84, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230, 293], "balanc": [52, 53, 54, 55, 56, 57, 181], "bar": 206, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 57, 68, 73, 80, 83, 85, 86, 87, 88, 104, 112, 125, 126, 127, 145, 168, 180, 181, 193, 194, 195, 203, 204, 205, 206, 210, 214, 215, 216, 231, 232, 236, 237, 238, 240, 241, 250, 260, 261, 262, 264, 275, 282, 283, 296, 297, 298, 299, 300], "base_act": [141, 142, 143], "base_width": [49, 50, 51, 68], "basic": [8, 21, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 78, 81, 100, 101, 102, 125, 126, 127, 138, 139, 140, 141, 142, 143, 144, 149, 150, 153, 154, 193, 194, 195, 294, 295, 296, 297, 298, 299, 300, 301], "basicblock": [40, 44, 47], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 58, 64, 65, 66, 67, 72, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 164, 165, 166, 175, 177, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 213, 235, 294, 295, 296, 297, 299, 301], "batch_norm": [111, 122, 185, 186, 187], "batch_norm1": 89, "batch_norm2": 89, "batch_siz": [1, 2, 3, 145], "batchnorm": [138, 139, 140], "batchnorm1d": [138, 174, 192], "batchnorm1dmodel": 185, "batchnorm2d": [89, 139, 174, 192], "batchnorm2dmodel": 186, "batchnorm3d": [140, 174, 192], "batchnorm3dmodel": 187, "bceloss": [174, 184], "becaus": [2, 225], "becom": [16, 83, 207, 215], "befor": [15, 58, 81, 84, 141, 142, 143, 206, 212, 220, 227, 283, 295, 303], "begin": [1, 16, 91, 94, 95, 96, 155, 157, 158, 159, 181, 182, 183, 196, 197, 198, 199, 200, 201, 213, 215, 219, 229, 236, 237, 239, 252, 256, 262, 264, 266, 283], "behav": [181, 274], "behavior": [80, 86, 89, 218, 229, 235, 245, 303], "being": [88, 137, 168, 169, 170, 171, 172, 213, 218, 220, 278, 280, 291], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 235, 243, 246], "benchmark": [5, 6], "benefici": 89, "benefit": [91, 203, 212, 222], "bernoulli": [168, 169, 170, 171, 172], "best": [149, 150, 153, 154], "beta": [185, 186, 187, 188, 189, 190, 191, 209, 210, 211, 212, 213], "beta1": [209, 210, 211, 212, 213], "beta2": [209, 210, 211, 212, 213], "beta_1": [209, 210, 211, 212, 213], "beta_2": [209, 210, 211, 212, 213], "better": [14, 78, 80, 92, 149, 150, 153, 154, 188, 189, 190, 203, 210, 212, 214, 295], "between": [52, 53, 54, 55, 56, 57, 80, 83, 100, 101, 102, 104, 112, 117, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 168, 169, 170, 171, 172, 175, 179, 180, 181, 182, 183, 206, 214, 215, 216, 229, 231, 232, 235, 238, 241, 242, 276, 297, 298, 300, 301], "beyond": [8, 86], "bia": [100, 101, 102, 112, 114, 121, 123, 124, 138, 139, 140, 141, 142, 143, 164, 165, 166, 175, 177, 185, 186, 187, 188, 189, 190, 191, 209, 210, 211, 212, 213], "bias": [164, 165, 166, 177, 191, 203], "bias1": 87, "bias2": 87, "big": [141, 142, 143], "bilinear": [111, 113, 136, 174, 178], "bilinearmodel": 175, "binari": [97, 115, 160, 168, 169, 170, 171, 172, 179], "binary_cross_entropi": [111, 118], "block": [23, 24, 25, 26, 27, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 83, 104, 138, 139, 140, 145, 164, 165, 166, 220], "block1": [81, 203], "block2": [81, 203], "block_arg": [40, 58], "block_config": 23, "blue": 297, "bmatrix": 239, "bn": [138, 139, 140], "bn_affin": [138, 139, 140], "bool": [1, 5, 6, 20, 28, 29, 30, 40, 81, 83, 84, 105, 106, 107, 108, 109, 121, 123, 136, 138, 139, 140, 141, 142, 143, 164, 165, 166, 175, 177, 185, 186, 187, 188, 189, 190, 191, 209, 210, 214, 218, 224, 225, 226, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 263, 264, 271, 276, 277, 293], "both": [100, 114, 126, 128, 132, 138, 156, 164, 165, 194, 196, 197, 199, 200, 233, 234, 235, 239, 243, 282, 301], "bottleneck": [23, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 144], "bottom": 136, "bound": [150, 152, 154, 215, 228], "box": 4, "branch": [28, 29, 30, 80, 145], "break": 203, "brief": 303, "bright": 303, "broadcast": [171, 172, 263, 271, 276, 286, 290], "buffer": [206, 212, 214, 216], "build": [8, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 68, 69, 70, 71, 80, 83, 86, 89, 203, 303], "built": [3, 8, 41, 45, 46, 89, 203], "burg": 6, "c": [6, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 104, 107, 108, 109, 116, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 144, 171, 172, 180, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 280, 291, 295], "c_": [164, 165, 166], "c_in": [100, 101, 102, 138, 139, 140], "c_out": [100, 101, 102], "calcul": [0, 1, 8, 9, 84, 207, 208, 211, 212, 213, 220, 225, 230], "calculu": [10, 17], "call": [1, 83, 218, 221, 231, 232, 235, 236, 237, 238, 240, 241], "callabl": [204, 221, 292], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 40, 49, 50, 64, 65, 66, 67, 81, 82, 84, 85, 86, 87, 88, 89, 94, 100, 101, 102, 137, 145, 156, 157, 162, 164, 165, 166, 188, 189, 190, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 228, 229, 230, 235, 244, 245, 246, 247, 249, 250, 263, 271, 276, 280, 282, 283, 285, 286, 289, 290, 291, 292, 293, 296, 298, 299, 300, 303], "cannot": [11, 12, 14, 15, 18, 19, 20], "capabl": [8, 242, 243, 246, 247, 248, 249, 250], "capac": [49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80], "captur": [68, 80, 104, 164, 165, 166, 175], "cardin": [51, 52, 53, 54, 55, 56, 57, 68, 80], "care": 220, "cartesian": 282, "case": [3, 16, 36, 91, 94, 95, 96, 155, 157, 158, 159, 181, 182, 183, 196, 197, 198, 199, 200, 201, 203, 208, 213, 215, 219, 236, 237, 252, 256, 262, 264, 266, 283, 303], "categori": [5, 41, 42, 43, 44, 45, 46, 47, 48], "caus": [3, 17, 206, 214, 216], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 91, 92, 94, 96, 97, 100, 101, 102, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 144, 153, 154, 156, 160, 168, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 215, 233, 234, 235, 238, 240], "center": [137, 162, 214, 294, 303], "centercrop": [302, 303], "central": 222, "certain": [11, 92, 112, 175, 209, 210, 218, 262, 264], "chain": [14, 15, 89, 292, 303], "challeng": [5, 80], "cham": 80, "chanc": [297, 298, 300], "chang": [117, 181, 215, 219, 220, 221, 284, 286, 290, 297, 303], "channel": [23, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 66, 67, 72, 73, 80, 100, 101, 102, 104, 107, 108, 109, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 164, 165, 166, 171, 172, 185, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 200, 201, 295, 297, 301], "character": [49, 50], "check": [218, 294, 296], "checkpoint": 205, "choic": 282, "choleski": 13, "choos": 80, "chosen": 168, "christian": 80, "christoph": 6, "clariti": 222, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 98, 116, 120, 203, 205, 221, 243, 246, 277, 303], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 97, 98, 115, 116, 120, 160, 161, 179, 180, 183], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 40, 51, 68, 73, 78], "cleaner": [1, 220, 235], "clear": [84, 230, 244, 245], "clearli": 222, "clf_in_featur": 36, "clf_layer": 36, "clip": [137, 215, 251], "clockwis": 137, "close": [14, 17, 159, 179, 214], "closer": 155, "closur": [204, 205], "cloth": 5, "cnn": 80, "co": [251, 267], "code": [15, 85, 87, 89, 218, 220, 222, 229], "coeffici": [19, 136, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "col": 104, "collect": [4, 9, 80, 85, 86, 88, 89, 205], "color": [297, 303], "colorjitt": 303, "column": [11, 12, 14, 18, 19, 20, 81, 104, 246, 280, 282], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 72, 80, 86, 89, 91, 92, 138, 139, 140, 144, 145, 156, 180, 203, 212, 213, 263, 271, 276, 278, 303], "combined_dataset": [0, 1], "common": [104, 137, 205, 303], "commonli": [8, 92, 97, 98, 99, 100, 102, 112, 119, 121, 123, 137, 144, 153, 154, 161, 166, 179, 182, 183, 196, 197, 198, 199, 200, 201, 219, 222, 247, 287, 293, 294, 295, 296, 298, 299, 300, 303], "compar": [49, 50, 78, 229, 288], "compat": [4, 9, 68, 141, 142, 143, 176, 191, 203, 219, 229, 293, 303], "complex": [2, 3, 8, 12, 34, 40, 43, 46, 47, 60, 62, 81, 85, 86, 89, 95, 158, 199, 201, 203, 205, 303], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 83, 86, 205, 230, 303], "compos": [5, 6, 164, 165, 166, 196, 197, 198, 199, 200, 201, 203, 303], "comprehens": 3, "compris": [49, 50], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 72, 80, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 214, 218, 219, 220, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 285, 289, 293, 303], "computation": [3, 17, 41], "compute_loss": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "concaten": [0, 100, 101, 102, 280, 281, 288, 291], "concept": [8, 17, 80], "condit": [10, 11, 14], "confer": 80, "config": 73, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 88, 138, 139, 140], "conjunct": [104, 183], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 114, 144, 145, 164, 165, 166, 177], "consecut": 73, "consid": [3, 14, 17, 23, 89, 149, 150, 153, 154, 203, 215, 218, 244, 245, 303], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 40, 82, 125, 126, 127, 145, 193, 194, 195, 222, 227, 229, 283, 294, 301, 303], "consistent_tensor": 229, "consol": 81, "constant": [115, 116, 121, 123, 124, 148, 159, 179, 180, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 214, 222, 283], "constant_pad": 283, "constraint": [1, 145], "construct": [8, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 86, 203, 243, 285, 289], "constructor": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 74, 75, 76, 77], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 81, 83, 85, 86, 87, 88, 89, 98, 104, 112, 114, 115, 116, 120, 136, 179, 180, 183, 204, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 245, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282], "content": 137, "context": [218, 220], "contextmanag": 220, "contigu": 284, "continu": [157, 226], "contrast": [188, 189, 190, 303], "contribut": [136, 168, 169, 170, 171, 172, 196, 199, 200, 201, 206, 212, 274], "control": [51, 145, 155, 181, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 229, 293, 303], "conv": [32, 58, 138, 139, 140, 186, 187], "conv1": [37, 38, 39, 89, 164, 165, 166, 196, 197, 198, 199, 200, 201], "conv1d": [103, 111, 138, 141, 167, 174, 196, 199], "conv1dmodel": 164, "conv2": [37, 38, 39, 89, 164, 165, 166], "conv2d": [86, 89, 103, 111, 139, 142, 167, 174, 186, 197, 200, 203], "conv2dmodel": 165, "conv3d": [103, 111, 140, 143, 167, 174, 187, 198, 201], "conv3dmodel": 166, "conv_bia": [138, 139, 140], "conv_config": 73, "conv_lay": [36, 86], "convblock": 203, "convbnrelu1d": 146, "convbnrelu2d": 146, "convbnrelu3d": 146, "conveni": [4, 22, 79], "convent": 235, "converg": [17, 162, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 295], "convers": [180, 183, 297, 303], "convert": [5, 6, 73, 82, 84, 98, 161, 230, 282, 292, 293, 297, 303], "convnetwork": 86, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 86, 100, 101, 102, 104, 138, 139, 140, 141, 142, 143, 144, 145, 164, 165, 166, 197, 198, 200, 201, 283], "convolv": [100, 101, 102, 164, 165, 166], "coordin": 282, "core": [0, 1, 2, 3, 83, 203, 204, 230, 303], "corinna": 6, "corner": [136, 294, 296], "correct": [85, 180, 183, 209, 210, 211, 212, 213, 293], "correctli": [17, 83, 85, 86, 87, 88, 89, 180, 183, 229], "correspond": [0, 1, 2, 5, 6, 12, 49, 50, 69, 70, 71, 85, 87, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 136, 158, 161, 175, 177, 185, 186, 187, 188, 189, 190, 197, 198, 206, 214, 216, 233, 234, 236, 237, 240, 260, 261, 267, 269, 280, 283, 285, 289, 291], "cort": 6, "cosh": [251, 268, 273], "cosin": [253, 257, 258, 267], "cost": [51, 80, 141, 142, 143], "could": 83, "count": [80, 81, 278], "counterclockwis": [137, 299], "cover": [9, 100, 101, 102], "coverag": [125, 126, 127], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 89, 145, 203, 219, 221, 229, 242, 246, 247, 248, 249, 250, 282, 288, 292, 303], "creation": [86, 89, 303], "criterion": [179, 180, 181, 182, 183], "critic": [17, 205, 229], "crop": [294, 296, 303], "cross": [115, 116, 179, 180], "cross_entropi": [111, 118], "crossentropyloss": [174, 184], "cube": 251, "cumul": [92, 156], "current": [83, 206, 209, 215, 218], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 78, 79, 82, 85, 86, 87, 88, 89, 137, 138, 139, 140, 155, 157, 203, 229, 246], "custom_config": 73, "custom_lenet": 36, "customiz": 303, "custommodul": 82, "customnetwork": 85, "customparametermodel": [87, 88], "cvpr": 80, "d": [80, 102, 109, 127, 130, 134, 140, 187, 190, 191, 195, 198, 201, 219, 243, 299], "d_": [102, 127, 130, 134, 166, 195, 198, 201], "d_1": 191, "d_2": 191, "d_n": 191, "d_out": [102, 130, 134], "dampen": [206, 214, 216], "data": [4, 5, 6, 8, 15, 82, 84, 88, 99, 100, 102, 104, 108, 109, 114, 137, 138, 139, 140, 145, 158, 162, 164, 165, 166, 177, 190, 196, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 222, 229, 230, 231, 232, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 283, 284, 285, 286, 287, 289, 292, 293, 296, 297, 298, 299, 300, 303], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 137, 208, 220, 292, 294, 303], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 239, "debug": [81, 89, 218, 227, 303], "decai": [206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [52, 53, 54, 55, 56, 57, 221], "decoupl": [207, 208, 210, 211, 212, 213], "decreas": [209, 210, 215], "deep": [1, 3, 4, 8, 32, 40, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 63, 80, 121, 156, 159, 203, 229, 292, 293, 303], "deeper": [8, 29, 31, 34, 40, 47, 80, 159], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 98, 100, 101, 102, 105, 106, 107, 108, 109, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 161, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 204, 205, 212, 218, 224, 225, 226, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 263, 264, 271, 275, 276, 277, 278, 280, 282, 283, 285, 288, 291, 293, 297, 298, 300], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 40, 58, 69, 70, 71, 73, 85, 86, 87, 88, 89, 156, 179, 180, 181, 182, 183, 196, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 225, 226, 240, 245, 256, 275, 292, 303], "definit": [8, 10, 138, 139, 140, 303], "degre": [137, 299, 303], "delai": 206, "delta": [98, 117, 161, 181, 207], "delta_": [98, 161], "demonstr": [8, 9, 64, 65, 66, 67, 72, 80, 203, 222], "denomin": [121, 123, 124, 138, 139, 140, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 214, 232], "denot": [15, 160, 164, 165, 166, 168, 169, 170, 171, 172, 275], "dens": [8, 23, 24, 25, 26, 27, 80, 208], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 80, 144], "densenet_121": 80, "densenet_169": 80, "densenet_201": 80, "densenet_264": 80, "densiti": [92, 156], "depend": [8, 15, 16, 88, 115, 116, 117, 119, 120, 136, 164, 233, 243, 262, 264, 285, 289, 296, 297, 301], "depth": [86, 102, 109, 127, 130, 134, 166, 187, 190, 195, 198, 201], "depthwis": [100, 101, 102, 141, 142, 143], "depthwise_separ": [141, 142, 143], "depthwiseseparableconv1d": 146, "depthwiseseparableconv2d": 146, "depthwiseseparableconv3d": 146, "der": 80, "deriv": [17, 18, 98, 125, 126, 127, 156, 161, 162, 164, 165, 166, 175, 177, 221], "descend": 20, "descent": [8, 206, 216], "describ": [11, 12], "descript": 303, "deseri": 82, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 79, 80, 84, 86, 87, 88, 89, 91, 96, 159, 168, 203, 222, 303], "desir": [82, 125, 126, 127, 193, 194, 195, 275, 277], "destin": 83, "det": [9, 13], "det_a": 11, "detail": [8, 81, 205, 229, 235], "detect": 80, "determin": [0, 8, 9, 10, 11, 36, 49, 50, 125, 126, 127, 149, 150, 153, 154, 164, 165, 166, 193, 194, 195, 197, 198, 200, 201, 214, 218, 224, 225, 226, 228, 244, 245, 294, 296], "determinist": 137, "develop": [8, 203, 229, 303], "deviat": [149, 151, 153, 292, 295, 303], "diag": [17, 251], "diagon": [17, 18, 20, 243, 246, 274], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 79, 83, 85, 87, 176, 204], "dictionari": [36, 83, 84, 85, 87, 89, 204], "differ": [0, 15, 28, 36, 64, 65, 66, 67, 72, 86, 89, 98, 112, 136, 145, 161, 175, 182, 205, 219, 227, 229, 241, 250, 276, 287, 303], "differenti": [8, 10, 19, 156, 203, 224, 225, 226, 228, 230, 242, 244, 245, 247, 249], "digit": [5, 6, 39, 80], "dilat": [100, 101, 102, 138, 139, 140, 141, 142, 143, 164, 165, 166], "dilation_height": 104, "dilation_width": 104, "dim": [180, 183], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 40, 51, 68, 73, 78, 80, 84, 98, 112, 114, 121, 123, 124, 126, 127, 136, 144, 145, 161, 164, 165, 166, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 219, 222, 224, 228, 230, 234, 244, 262, 263, 264, 271, 274, 275, 276, 278, 280, 283, 285, 287, 288, 289, 290, 291, 294, 296, 301], "dimension": [15, 17, 18, 20, 100, 101, 102, 128, 129, 130, 132, 133, 134, 145, 164, 165, 166, 170, 171, 172, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 201, 219, 234, 235, 239, 243, 260, 263, 271, 274, 276, 279, 284, 285, 287, 289], "diminish": 208, "direct": [12, 179, 180, 181, 182, 183, 206, 214, 215, 216], "directli": [80, 85, 86, 87, 88, 136, 207, 208, 210, 211, 212, 213, 227, 229, 277, 303], "directori": [3, 4, 5, 6], "disabl": [218, 220], "discontinu": 266, "discrep": [179, 180, 183], "discret": [225, 229], "disk": 3, "displai": [22, 79, 81], "distribut": [92, 98, 136, 149, 150, 151, 152, 153, 154, 156, 161, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 180, 183, 196, 197, 198, 224, 225, 226, 228, 229, 263, 271, 274, 276, 288, 295, 297, 298, 299, 300], "div": 251, "divers": [137, 298, 300, 303], "diversifi": 303, "divid": [1, 17, 86, 89, 98, 100, 101, 102, 161, 179, 180, 181, 182, 183, 232, 295], "divis": [8, 17, 100, 101, 102, 168, 169, 170, 171, 172, 207, 208, 209, 210, 211, 212, 213, 214, 232], "do": [17, 19, 82, 85, 86, 87, 88, 105, 106, 107, 108, 203, 213, 218, 250, 274, 283], "do_act": [141, 142, 143], "document": [4, 8, 80, 205, 222, 229], "doe": [8, 15, 16, 17, 18, 20, 81, 82, 85, 86, 87, 88, 89, 154, 209, 210, 215, 218, 220, 224, 225, 226, 227, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 286], "doesn": 220, "doi": 80, "domain": 4, "don": 220, "dot": [12, 15, 85, 86, 87, 88, 89, 191, 199, 200, 201, 234, 239, 251, 278, 280, 288, 291], "down": [3, 203, 301], "download": [4, 5, 6], "drawback": 91, "drawn": [224, 225, 226, 228, 229, 299], "drop": [168, 169, 170, 171, 172], "dropout": [21, 30, 73, 78, 80, 92, 105, 107, 108, 109, 168, 170, 171, 172], "dropout1d": [110, 111, 173, 174], "dropout1dmodel": 170, "dropout2d": [110, 111, 173, 174], "dropout3d": [110, 111, 173, 174], "dropout_prob": 30, "dropoutmodel": 169, "dtype": [82, 84, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 293], "due": [15, 17, 23, 100, 101, 158, 299], "dummi": 81, "duplic": [85, 87], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 40, 80, 82, 83, 84, 85, 86, 87, 88, 89, 98, 105, 106, 107, 108, 109, 121, 123, 137, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 230, 231, 262, 263, 264, 271, 276, 293, 296, 299, 303], "dy": [94, 157], "dynam": [0, 2, 3, 68, 72, 80, 83, 86, 87, 88, 89, 125, 126, 127, 145, 191, 193, 194, 195, 208, 213, 218], "dynamicnetwork": 86, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 82, 98, 145, 160, 161, 168, 180, 204, 207, 214, 215, 246, 258, 260, 261, 268, 273, 274, 278, 297], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 121, 123, 125, 126, 127, 144, 145, 158, 161, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 303], "earli": 213, "eas": [4, 8], "easi": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 84, 85, 87], "easier": [3, 85, 86, 89], "easili": [4, 84, 88, 303], "eccv": 80, "economi": 20, "edg": 283, "educ": [8, 80], "effect": [80, 85, 86, 87, 88, 89, 98, 100, 101, 102, 104, 155, 156, 158, 160, 161, 162, 185, 186, 187, 188, 189, 190, 191, 218, 219, 220, 280, 291], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80, 104, 141, 142, 143, 180, 203, 220], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [114, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 277, 282], "element": [0, 17, 18, 30, 84, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 138, 139, 140, 141, 142, 143, 144, 158, 161, 164, 165, 166, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 191, 196, 197, 198, 199, 200, 201, 219, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282, 283, 285, 286, 287, 289], "elementwise_affin": 191, "elsewher": [199, 200, 201, 246], "elu": [93, 111, 163, 174], "elumodel": 155, "empti": [83, 89, 251], "empty_lik": 251, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 68, 69, 70, 71, 80, 83, 84, 85, 86, 87, 88, 158, 164, 165, 166, 175, 177, 203, 205, 218, 220, 224, 225, 226, 228, 230, 292], "encapsul": [203, 230], "encod": [180, 183], "encourag": [169, 170, 171, 172, 179, 180, 183, 209], "end": [16, 91, 94, 95, 96, 155, 157, 158, 159, 181, 182, 183, 196, 197, 198, 199, 200, 201, 213, 215, 236, 237, 239, 242, 252, 256, 262, 264, 266, 278, 283, 303], "enforc": [83, 85, 87], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 49, 50, 64, 65, 66, 67, 72, 78, 79, 80, 85, 87, 145, 303], "ensur": [3, 5, 6, 17, 18, 19, 82, 83, 84, 85, 86, 87, 88, 89, 98, 125, 126, 127, 138, 139, 140, 141, 142, 143, 157, 161, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 240, 263, 271, 276, 283, 293, 294, 295, 296, 297, 301, 303], "enter": 220, "entir": [3, 107, 108, 109, 171, 172, 229], "entri": [36, 287], "entropi": [115, 116, 179, 180], "environ": 8, "ep": [115, 116, 121, 123, 124, 138, 139, 140, 179, 180, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 214], "epoch": [1, 3], "epsilon": [179, 180, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 214], "equal": [15, 136, 196, 197, 198, 294, 296], "equat": [12, 17, 19], "equival": [235, 274, 284], "error": [0, 3, 12, 14, 83, 86, 87, 88, 89, 92, 117, 119, 156, 179, 180, 181, 182, 203, 204, 220, 222], "especi": [3, 85, 87, 88, 160, 219, 220, 222, 227, 292, 293, 297, 303], "essenti": [1, 3, 8, 9, 15, 17, 32, 101, 104, 203, 227, 229, 262, 292, 293, 297, 303], "estim": [182, 209, 210, 211, 212, 213, 214], "et": [29, 80], "eta": 215, "eta_": 215, "etc": [23, 179, 293], "euclidean": 16, "european": 80, "evalu": [83, 121, 123, 168, 169, 170, 171, 172, 185, 186, 187, 188, 189, 190, 303], "even": [207, 220, 242, 243, 246, 247, 248, 249, 250], "evenli": [125, 126, 127, 193, 194, 195, 242], "everi": [1, 303], "everywher": 266, "exact": [83, 86, 275, 297, 299], "exactli": 89, "exampl": [4, 235], "excel": 31, "except": [0, 266, 278, 280, 291], "excit": [58, 61, 64, 65, 66, 67, 80, 144], "exclus": [225, 228, 242], "exdb": 6, "execut": [86, 220], "exist": [19, 85, 87, 89, 221, 278], "exit": 220, "exp": [91, 96, 97, 99, 155, 159, 251], "expand": [4, 104, 285, 289], "expect": [10, 86, 89, 168, 169, 170, 171, 172, 191, 203, 222], "expens": 3, "experi": [8, 227, 229, 303], "experiment": 229, "explan": [15, 17, 21, 73, 78, 125, 126, 127, 193, 194, 195, 206], "explicit": 89, "explicitli": [80, 85, 87], "explod": [159, 185, 186, 187], "explor": [203, 229], "expon": [15, 240], "exponenti": [91, 96, 98, 155, 159, 161, 168, 209, 210, 211, 212, 213, 260], "extend": [4, 51, 68], "extens": [80, 205], "extern": [4, 8], "extract": [28, 32, 40, 51, 68, 80, 104, 166, 196, 198, 221, 243, 262, 264, 294, 296], "extractor": [36, 37, 38, 39], "extrem": [17, 41, 80], "ey": 251, "f": [1, 4, 5, 6, 8, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 161], "f_1": 144, "f_2": 144, "facilit": [28, 85, 89, 98, 161, 164, 165, 166, 203, 205, 295, 303], "factor": [30, 91, 100, 101, 102, 104, 144, 153, 154, 206, 213, 214, 215, 216, 222], "failur": [85, 86, 87, 88, 203], "fals": [1, 5, 6, 20, 40, 81, 82, 83, 84, 105, 106, 107, 108, 109, 121, 123, 136, 141, 142, 143, 147, 149, 150, 151, 152, 153, 154, 164, 165, 166, 175, 177, 209, 210, 214, 218, 224, 225, 226, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 263, 264, 271, 276, 277, 293], "famili": 221, "fan": [149, 150, 153, 154], "fan_in": [149, 150], "fan_out": [149, 150], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 213, "faster": [208, 212, 220], "fc": [32, 40, 51, 58, 68, 86, 144, 165, 166, 196, 197, 198, 199, 200, 201], "fc1": [38, 39, 81, 85, 89, 156, 158, 159, 160, 162, 177], "fc2": [38, 39, 81, 85, 89, 156, 158, 159, 160, 162, 177], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 68, 69, 70, 71, 73, 78, 79, 80, 112, 114, 121, 138, 139, 140, 144, 145, 166, 169, 170, 171, 172, 175, 177, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 208], "feature_extractor": 36, "fed": [3, 303], "feed": [3, 230, 303], "feedforward": 81, "fergu": [78, 80], "fetch": 0, "few": 81, "fewer": 1, "field": [6, 68, 72, 80, 145], "file": [3, 221], "fill": [147, 151, 152, 224, 225, 226, 228, 247, 248, 249, 250], "filter": [78, 80, 100, 101, 102, 104, 138, 139, 140, 165, 166], "filter_height": 104, "filter_s": 104, "filter_width": 104, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 85, 86, 87, 88, 89, 145, 292, 303], "find": [19, 262, 264], "fine": [144, 303], "finish": 220, "first": [5, 6, 12, 36, 78, 81, 86, 87, 112, 141, 142, 143, 144, 175, 209, 210, 211, 212, 213, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 282, 291, 292, 293, 303], "fit": 203, "fix": [86, 283], "flatten": [32, 36, 89, 104, 239, 281, 284, 285], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 40, 64, 65, 66, 67, 72, 73, 80, 85, 86, 87, 88, 89, 203, 205, 222, 247, 248, 293, 303], "flip": [298, 300, 303], "float": [2, 5, 6, 30, 82, 84, 91, 94, 105, 106, 107, 108, 109, 115, 116, 117, 121, 123, 124, 137, 138, 139, 140, 147, 151, 152, 153, 154, 155, 157, 168, 169, 170, 171, 172, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 228, 230, 242, 245, 256, 277, 295, 297, 298, 299, 300], "float32": [82, 84, 230, 242, 243, 246, 247, 249, 277, 293], "float64": [250, 277, 293], "flow": [31, 32, 58, 80, 89, 154, 156, 160, 162, 164, 165, 166, 175, 177, 218], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 64, 65, 66, 67, 72, 73, 78, 81, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 262, 264, 282, 286, 294, 295, 296, 297, 298, 299, 300, 303], "form": [18, 145, 239, 282, 285, 289, 303], "format": [2, 3, 5, 6, 81, 180, 183, 293], "formul": 92, "formula": [12, 20, 98, 125, 126, 127, 161, 181, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 235, 276, 297], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 81, 82, 83, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "found": 8, "foundat": [32, 58, 83, 203, 205, 230], "four": [24, 25, 26, 27, 283], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295], "frame": 109, "framework": [4, 8, 80, 180, 183, 185, 186, 187, 188, 189, 190, 204, 205, 303], "frequent": [180, 183], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 104, 112, 121, 123, 136, 138, 139, 140, 144, 145, 147, 149, 150, 151, 152, 153, 154, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 235, 236, 237, 241, 243, 262, 263, 264, 271, 276, 278, 280, 282, 285, 287, 288, 289, 291, 294, 295, 296, 297, 298, 299, 300, 303], "full": 20, "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 114, 144, 145, 177, 229], "func": 221, "function": [3, 4, 5, 6, 8, 9, 83, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 203, 205, 222, 229, 292, 303], "fundament": [8, 114, 177, 293], "further": [8, 229, 263, 271, 276], "fuse": 68, "fusion": [69, 70, 71], "futur": 176, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 80, 144, 145, 168, 204, 207, 214, 278, 297], "g_": 208, "g_t": 214, "gain": [153, 154], "gamma": [185, 186, 187, 188, 189, 190, 191], "gap": [40, 51, 68, 144], "gaussian": [92, 156], "gelu": [93, 111, 163, 174], "gelunetwork": 156, "gener": [17, 81, 137, 168, 169, 170, 171, 172, 189, 210, 212, 213, 220, 224, 225, 226, 227, 228, 229, 234, 242, 244, 245, 282, 296, 297, 298, 300, 303], "get": [5, 6], "github": 5, "give": [8, 206, 214], "given": [11, 12, 15, 17, 18, 20, 104, 179, 180, 183, 204, 218, 248, 250, 292, 297, 298, 300, 303], "global": [0, 40, 51, 58, 68, 144, 218, 220, 227, 229], "go": [29, 80], "goal": [179, 180, 183], "googlenet": [29, 80], "gpu": 80, "grad": [82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 136, 141, 142, 143, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 204, 205, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 298, 300, 301], "grad_output": 15, "gradient": [8, 9, 31, 32, 80, 82, 84, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 224, 225, 226, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 293], "grain": 144, "graph": [8, 154, 230, 242, 243, 246, 247, 248, 249, 250, 293], "grayscal": [5, 6, 36, 37, 38, 39, 297, 303], "greater": 256, "green": 297, "grid": 282, "groundbreak": 80, "group": [51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 80, 86, 100, 101, 102, 138, 139, 140, 145, 164, 165, 166, 204, 205], "group1": 86, "group2": 86, "groupedconvblock": 51, "growth_rat": [23, 24, 25, 26, 27], "guarante": 227, "h": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 139, 140, 144, 186, 187, 189, 190, 194, 195, 198, 201, 294, 296], "h_": [101, 102, 126, 127, 129, 130, 133, 134, 136, 165, 166, 194, 195, 197, 198, 200, 201], "h_out": [101, 102, 129, 130, 133, 134], "h_stack": 280, "ha": [0, 12, 81, 89, 100, 101, 102, 138, 139, 140, 179, 180, 185, 186, 187, 188, 189, 190, 191, 204, 205, 235, 274, 278, 280, 288, 291, 297], "half": 269, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 83, 85, 86, 87, 88, 89, 180, 183, 203, 205, 220], "handwritten": [5, 6, 39], "hardwar": 8, "hat": [209, 210, 211, 212, 213], "have": [0, 1, 11, 12, 14, 17, 18, 20, 84, 86, 88, 89, 101, 102, 154, 203, 246, 247, 248, 249, 250, 262, 264, 278, 280, 282, 287, 288, 291, 295, 301], "he": 80, "height": [101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 145, 165, 166, 186, 187, 189, 190, 194, 195, 197, 198, 200, 201, 294, 296, 301], "help": [8, 30, 94, 96, 109, 155, 157, 159, 162, 185, 186, 187, 196, 197, 199, 200, 206, 209, 210, 212, 218, 219, 220, 222], "henc": 286, "here": [3, 10, 83, 112, 203, 205, 219, 220, 222, 229, 292, 293, 303], "hidden": [21, 78, 86], "hidden_s": 86, "hierarch": [86, 89, 203], "hierarchi": 165, "hierarchicalnetwork": 86, "high": [8, 48, 63, 72, 225, 228], "higher": [51, 180, 183, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 234, 235, 239, 260], "highest": 225, "highli": 80, "highlight": [144, 199, 200, 201], "hint": 222, "histor": 208, "histori": [224, 225, 226, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250], "hold": [85, 86, 87, 88], "horizont": [280, 288, 298, 303], "hot": [180, 183], "how": [2, 3, 8, 64, 65, 66, 67, 72, 86, 89, 203, 222, 303], "howev": [82, 154], "hstack": 281, "http": [5, 6], "hu": [80, 144], "huang": 80, "huber": [117, 181], "huber_loss": [111, 118], "huberloss": [174, 184], "huberregressionmodel": 181, "hue": 303, "hyperbol": [99, 162, 258, 268, 273], "hyperparamet": [40, 51, 204, 206], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "iccv": 80, "ideal": [8, 89], "ident": [14, 15, 80, 137, 141, 142, 143, 174, 178, 227, 229, 246, 286], "identifi": 87, "idx": [2, 3], "ieee": [80, 144], "ii": 274, "ij": [98, 136, 161, 233, 234, 235, 239, 282], "ik": [233, 234, 235], "ill": [11, 17], "ilsvrc": 80, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 79, 80, 101, 123, 137, 139, 144, 165, 189, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 80], "imbal": [180, 183], "impact": [80, 212], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 78, 80, 83, 104, 141, 142, 143, 145, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 280, 291, 297], "impli": [164, 165], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "improp": [86, 89, 229], "improv": [29, 30, 31, 32, 34, 40, 51, 64, 65, 66, 67, 68, 78, 80, 121, 137, 144, 156, 159, 162, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 296, 299, 303], "imread": 3, "in1_featur": [112, 175], "in2_featur": [112, 175], "in_channel": [40, 86, 89, 138, 139, 140, 141, 142, 143, 144, 145, 164, 165, 166, 186, 187, 196, 197, 198, 199, 200, 201, 203], "in_featur": [85, 86, 89, 114, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 188, 191, 196, 197, 198, 199, 200, 201], "incept": [29, 30, 31, 32, 33, 34, 35, 80], "inception_resnet_v1": 80, "inception_resnet_v2": 80, "inception_v1": 80, "inception_v3": 80, "inception_v4": 80, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 78, 81, 83, 84, 86, 88, 89, 136, 138, 139, 140, 141, 142, 143, 203, 204, 205, 212, 222, 229, 235, 283], "inclus": [84, 87, 225, 228], "incom": [114, 177], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 80, 156], "increas": [51, 52, 53, 54, 55, 56, 57, 68, 100, 101, 102, 104, 137, 208, 215, 219, 280, 291, 297, 298, 300, 303], "independ": [86, 100, 101, 102, 168, 169, 170, 171, 172, 191, 235, 245, 295, 297, 299, 301], "index": [0, 2, 5, 6, 219, 242, 243, 246, 282, 286], "indexerror": 0, "indic": [0, 1, 73, 81, 84, 86, 88, 89, 116, 120, 180, 183, 196, 218, 230, 294, 296], "individu": [3, 86, 89, 181, 191, 205, 208, 215], "induc": [96, 159], "inf": 272, "infer": [64, 65, 66, 67, 72, 86, 89, 220], "infin": [18, 20, 211], "inform": [8, 80, 81, 82, 144, 205, 207, 220], "infti": [16, 213], "inherit": [1, 206, 214, 216], "init": 148, "initi": [1, 23, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 76, 77, 82, 84, 85, 86, 87, 88, 89, 145, 147, 149, 150, 151, 152, 153, 154, 164, 165, 166, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 227, 228, 229, 242, 246, 247, 248, 249, 250, 277], "initial_accumulator_valu": 208, "inner": [8, 233, 251], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 51, 64, 65, 66, 67, 68, 72, 78, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 229, 230, 231, 233, 234, 235, 239, 243, 245, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "input1": 175, "input2": 175, "input_": [21, 78, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 193, 194, 195], "input_1": 112, "input_2": 112, "input_data": [155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201], "input_s": [86, 88, 161, 180, 183], "input_shap": 81, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 82, 85, 86, 87, 88, 89, 98, 141, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 294, 295, 296, 297, 298, 299, 300, 301], "insid": [3, 218, 220], "insight": [8, 80], "inspect": [83, 84, 89, 204], "instabl": [17, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 79, 81, 83, 84, 85, 87, 88, 89, 123, 188, 189, 190, 191, 204, 221, 277, 285, 289, 303], "instance_norm": [111, 122, 188, 189, 190], "instancenorm1d": [174, 192], "instancenorm1dmodel": 188, "instancenorm2d": [174, 192], "instancenorm3d": [174, 192], "instanti": [2, 64, 65, 66, 67, 72, 221], "instead": [8, 81, 85, 86, 87, 88, 89, 149, 150, 153, 154, 209, 210, 211, 220, 222, 244, 245], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 98, 100, 101, 102, 104, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 161, 164, 165, 166, 175, 177, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 211, 212, 213, 215, 221, 224, 225, 226, 227, 228, 230, 242, 243, 244, 246, 247, 249, 256, 262, 263, 264, 271, 275, 276, 277, 278, 283, 285, 286, 287, 288, 289, 290, 294, 296, 301], "integ": [1, 3, 15, 58, 73, 100, 101, 102, 126, 127, 164, 165, 166, 191, 194, 195, 197, 198, 199, 200, 201, 222, 225, 226, 228, 229, 244, 247, 249, 263, 271, 275, 276, 283, 285, 286, 289], "integr": [1, 2, 4, 5, 6, 9, 80, 84, 86, 88, 89, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 175, 177, 196, 197, 198, 199, 200, 201], "intellig": [80, 144], "intend": [82, 87, 88], "intens": [17, 23, 41, 295, 297], "intent": 222, "interact": [112, 175, 203, 229], "interdepend": 80, "interfac": [2, 83, 86, 205], "interfer": [218, 220], "intermedi": [17, 144], "intern": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 80, 85, 86, 87, 88, 89, 180, 183, 203, 294, 295, 296, 297, 298, 299, 300, 301], "interpol": [111, 135, 301], "interpret": [80, 98, 161, 222, 278], "interv": [224, 228, 242], "introduc": [29, 30, 51, 80, 95, 144, 156, 158, 160, 162, 168, 169, 170, 171, 172, 296, 299, 303], "introspect": 89, "intuit": [8, 85, 87, 203, 303], "inv": 13, "inv_a": 14, "invari": [197, 200], "invers": [8, 11, 14, 15, 17, 208, 253, 254, 255], "invert": [11, 14, 15, 19], "invok": 221, "involv": [10, 11, 12, 14, 17, 18, 20, 68, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 164, 165, 166, 175, 177, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 260, 261, 262, 264, 267, 269, 282, 283, 285, 289], "is_leaf": 230, "issu": [3, 159, 185, 186, 187, 209, 210], "item": [5, 182], "iter": [0, 1, 2, 3, 82, 83, 86, 88, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 242], "ith": [98, 161], "its": [4, 15, 17, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 69, 70, 71, 78, 80, 81, 82, 85, 86, 87, 88, 100, 101, 102, 104, 137, 145, 154, 156, 158, 199, 200, 201, 203, 204, 207, 215, 218, 219, 220, 221, 242, 244, 245, 249, 262, 264, 277, 286, 295, 298, 300, 303], "itself": [10, 15, 85, 86, 87, 88], "j": [6, 98, 144, 161, 185, 186, 187, 188, 189, 190, 196, 197, 199, 200, 282, 288, 294, 296], "jie": 80, "jk": 234, "join": [3, 278], "json": 221, "k": [15, 80, 100, 164, 180, 186, 187, 189, 190, 196, 199, 200, 233, 234, 243, 246, 278], "k_d": [102, 166, 198, 201], "k_h": [101, 102, 165, 166, 197, 198, 201], "k_w": [101, 102, 165, 166, 197, 198, 201], "kaim": [80, 149, 150, 153, 154], "kaiming_norm": 148, "kaiming_uniform": 148, "karen": 80, "kashif": 5, "keep": [83, 158, 207, 220, 286], "keep_grad": [84, 224, 225, 226, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 293], "keep_var": 83, "keepdim": [262, 263, 264, 271, 276], "kei": [80, 83, 85, 87, 89, 204], "kept": [263, 271, 276], "kernel": [36, 37, 38, 39, 68, 69, 70, 71, 72, 78, 80, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 193, 194, 195, 197, 198, 201], "kernel_s": [68, 69, 70, 71, 86, 89, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 186, 187, 196, 197, 198, 199, 200, 201], "keyerror": 83, "keyword": [22, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 176], "kj": [233, 235], "known": 80, "krizhevski": 80, "kroneck": [98, 161], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 176, 221], "l": [10, 17, 80, 100, 107, 125, 128, 132, 138, 144, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193], "l2": [206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "l_": [100, 125, 128, 132, 164, 193, 196, 199], "l_out": [100, 128, 132], "label": [4, 5, 6, 30, 179, 180, 183], "lambd": 206, "lambda": [12, 96, 159, 206, 210], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 164, 175, 196, 199], "larg": [0, 3, 17, 23, 41, 42, 43, 46, 59, 60, 80, 141, 142, 143, 181, 203, 206, 209, 210, 211, 214, 215, 216, 220], "larger": [40, 68, 85, 87, 100, 101, 102, 104, 206, 236, 283, 294, 296, 301], "largest": 262, "last": [1, 98, 124, 161, 234, 235, 278, 298, 300], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 89, 98, 114, 121, 123, 124, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 161, 164, 165, 166, 175, 176, 177, 183, 191, 196, 197, 198, 199, 200, 201, 203, 229, 283, 293], "layer1": 221, "layer2": 221, "layer_group": 86, "layer_norm": [111, 122, 191], "layer_sequ": [86, 89], "layernorm": [174, 192], "layernormmodel": 191, "lead": [86, 89, 156, 188, 189, 190, 191, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 229], "leaf": 230, "leaki": [94, 157], "leaky_relu": [93, 111, 157], "leakyrelu": [163, 174], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 51, 52, 53, 54, 55, 56, 57, 78, 79, 80, 85, 86, 87, 88, 95, 98, 144, 155, 157, 158, 161, 164, 165, 166, 169, 170, 171, 172, 175, 177, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 227, 292, 293, 303], "learnabl": [82, 83, 84, 121, 123, 124, 138, 139, 140, 164, 165, 166, 175, 177, 185, 186, 187, 188, 189, 190, 191, 203], "least": [17, 18, 20, 274], "lecun": [6, 80], "left": [15, 16, 17, 20, 92, 98, 156, 161, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 294, 296], "leftarrow": 212, "len": [0, 1, 2, 3, 282], "lenet": [35, 37, 38, 39, 80], "lenet_1": 80, "lenet_4": 80, "lenet_5": 80, "length": [86, 100, 107, 125, 128, 132, 164, 176, 185, 188, 193, 196, 199, 283, 295], "leq": [181, 213, 240, 256], "lerp": 136, "less": [0, 91, 94, 117, 155, 157, 180, 181, 183, 256], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 52, 53, 54, 55, 56, 57, 80, 145, 203], "li": 80, "librari": [3, 8, 9, 83, 203, 204, 205, 221, 222, 229, 230, 303], "lightweight": [8, 44, 61, 145], "like": [8, 32, 52, 53, 54, 55, 56, 57, 69, 70, 71, 80, 82, 83, 86, 89, 100, 153, 154, 159, 168, 185, 186, 187, 188, 189, 190, 218, 219, 222, 277, 293, 303], "likelihood": [120, 180, 183], "limit": [81, 207, 256], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 58, 81, 85, 86, 87, 89, 91, 92, 94, 95, 96, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 175, 176, 179, 180, 181, 182, 183, 185, 188, 191, 196, 197, 198, 199, 200, 201, 221, 246], "linearli": 181, "list": [0, 1, 36, 40, 51, 58, 68, 73, 81, 82, 84, 85, 86, 87, 88, 124, 145, 176, 191, 204, 222, 224, 225, 226, 228, 230, 243, 244, 245, 247, 248, 249, 250, 275, 286, 287, 290, 292], "listdir": 3, "liter": [40, 115, 116, 117, 119, 120, 136, 138, 139, 140, 141, 142, 143, 145, 149, 150, 164, 165, 166, 179, 180, 181, 182, 183, 282], "liu": 80, "ln": 240, "load": [3, 4, 5, 6, 82, 83, 84, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221], "load_state_dict": [83, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "loader": [1, 2, 3], "local": [80, 104, 164], "locat": [80, 136], "log": [120, 179, 180, 183, 251], "log_softmax": 183, "logarithm": [240, 260, 261], "logic": [3, 193, 194, 195, 203, 204], "logit": [21, 78, 98, 161, 180], "logsoftmax": [180, 183], "long": [212, 275], "loop": [1, 86, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "loss": [8, 17, 85, 86, 87, 88, 89, 98, 115, 116, 117, 119, 120, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 171, 172, 176, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "low": [8, 32, 225, 228], "lower": [10, 152, 206, 214, 215, 216, 228], "lowest": 225, "lr": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 251, 281, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "m": [73, 85, 86, 89, 197, 198, 200, 201, 209, 210, 211, 212, 213, 246], "m_": [209, 210, 211, 212, 213], "m_t": [212, 213], "maaten": 80, "machin": [3, 5, 6, 8, 17, 144, 209, 219, 227], "magnitud": [214, 215, 303], "mai": [3, 8, 12, 14, 17, 86, 88, 137, 181, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 229, 297, 303], "main": [8, 18, 32, 86, 243, 246], "maintain": [17, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82, 83, 85, 86, 87, 89, 96, 149, 150, 153, 154, 155, 156, 159, 168, 169, 170, 171, 172, 185, 186, 187, 188, 189, 190, 209, 214, 294, 297, 301], "make": [1, 3, 8, 28, 32, 36, 40, 80, 86, 89, 160, 180, 181, 191, 197, 200, 203, 208, 209, 210, 211, 219, 221, 229, 230, 235, 282, 292, 303], "manag": [8, 83, 85, 86, 87, 88, 89, 203, 205, 218, 220, 221, 229], "manhattan": 16, "mani": 81, "manipul": [8, 85, 87, 303], "manner": [86, 89], "manual": [115, 116, 120, 179, 180, 183, 220], "map": [40, 51, 61, 68, 80, 83, 97, 99, 144, 160, 162], "mask": [82, 168, 169, 170, 171, 172], "match": [19, 83, 86, 89, 115, 117, 119, 124, 138, 139, 140, 204, 260, 285, 286, 289, 290, 295, 303], "math": [257, 267, 272], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 141, 142, 143, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 233, 234, 235, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301], "mathcal": [149, 151, 153, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191], "mathemat": [14, 138, 139, 140, 296, 298, 299, 300], "mathrm": 17, "matmul": 251, "matric": [9, 11, 12, 14, 17, 19, 20, 233, 234, 235, 246, 282], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 104, 112, 176, 177, 203, 233, 282], "matrix_pow": 13, "matthew": 80, "max": [16, 58, 73, 95, 132, 133, 134, 158, 199, 200, 201, 211, 236, 251, 256], "max_pool": [199, 200, 201], "max_pool1d": [111, 131], "max_pool2d": [111, 131], "max_pool3d": [111, 131], "max_valu": 256, "maxim": 3, "maximum": [16, 158, 199, 200, 201, 209, 211, 251, 256, 262, 299], "maxpool": [21, 78], "maxpool1d": [174, 202], "maxpool1dmodel": 199, "maxpool2d": [86, 89, 165, 174, 202], "maxpool2dmodel": 200, "maxpool3d": [166, 174, 202], "maxpool3dmodel": 201, "mean": [5, 6, 18, 81, 82, 96, 100, 101, 102, 105, 115, 116, 117, 119, 120, 121, 123, 138, 139, 140, 151, 155, 156, 157, 158, 159, 160, 162, 166, 168, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 209, 210, 211, 212, 213, 214, 218, 226, 251, 256, 260, 261, 262, 264, 267, 269, 271, 274, 275, 276, 292, 295, 303], "meaning": [89, 222], "measur": [179, 180, 182, 183], "mechan": [8, 58, 68, 72, 88, 112], "membership": 179, "memori": [2, 3, 23, 220, 244, 245], "meshgrid": 281, "method": [3, 8, 9, 14, 58, 85, 86, 87, 88, 89, 115, 116, 117, 119, 120, 149, 150, 153, 154, 179, 180, 181, 182, 183, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 229], "middl": 219, "might": 203, "min": [237, 251, 256], "min_valu": 256, "mind": [0, 3, 8, 86, 89, 220], "mini": 1, "minim": [4, 8, 89, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 205], "minimalist": 8, "minimum": [251, 256, 264], "minu": 160, "mirror": [248, 250], "mismatch": [83, 203, 204], "miss": [83, 203], "mitig": [94, 155, 157, 159, 185, 186, 187], "mlp": 145, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mode": [8, 109, 121, 123, 136, 149, 150, 168, 169, 170, 171, 172, 283], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 137, 138, 139, 140, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 229, 292, 293, 303], "moder": 62, "modern": 80, "modif": [89, 220], "modifi": [22, 40, 79, 85, 86, 87, 88, 147, 149, 150, 151, 152, 153, 154, 168, 218, 220, 227, 280, 291], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 51, 58, 68, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 229, 293, 303], "modular": [3, 8, 80, 83, 86, 89, 203, 303], "moduledict": [86, 87, 89, 90], "modulelist": [88, 89, 90], "moment": [209, 210, 211, 212, 213], "momentum": [121, 123, 138, 139, 140, 185, 186, 187, 188, 189, 190, 206, 212, 214, 216], "momentum_decai": 212, "moor": 17, "more": [3, 4, 5, 8, 12, 40, 47, 85, 86, 89, 141, 142, 143, 155, 169, 170, 171, 172, 203, 204, 205, 206, 207, 210, 211, 214, 215, 216, 226, 235, 274, 288, 303], "most": [9, 80, 200, 293, 294, 303], "move": [206, 214], "mse": [117, 119, 181, 182], "mse_loss": [111, 118], "mseloss": [174, 184], "mu": [151, 185, 186, 187, 188, 189, 190, 191, 276], "mu_c": 295, "mu_i": [188, 189, 190], "much": 303, "mul": 251, "multi": [3, 4, 33, 68, 69, 70, 71, 80, 98, 116, 120, 145, 161, 180, 183, 263, 271, 276], "multidimension": [224, 228, 244], "multipl": [1, 3, 8, 9, 15, 19, 21, 40, 58, 72, 87, 88, 89, 104, 136, 137, 144, 145, 168, 169, 170, 171, 172, 180, 183, 203, 219, 224, 225, 226, 228, 233, 238, 244, 245, 292, 297, 303], "multipli": [15, 88, 114, 177, 215, 238, 239], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 81, 83, 85, 86, 87, 88, 89, 124, 168, 169, 170, 171, 172, 183, 204, 220, 274, 278, 280, 283, 285, 286, 288, 289, 291, 294, 295, 296, 297, 298, 300], "my_simple_model": 221, "mymodel": [83, 84, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "myoptim": [204, 205], "n": [15, 16, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 80, 85, 86, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 144, 149, 151, 153, 164, 165, 166, 171, 172, 175, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 246, 263, 274, 276], "n1": 16, "nabla_": [207, 208, 209, 210, 211, 212, 213, 215], "nabla_t": 213, "nadam": 217, "name": [80, 81, 83, 85, 87, 89, 221, 222], "nan": [18, 20], "natur": [17, 80, 164, 175, 196, 199, 240, 260, 261], "ndarrai": [82, 84, 222, 230, 243, 245, 248, 250, 277], "ndim": [18, 20, 84, 230], "ne": 15, "nearest": 136, "necessari": [4, 5, 6, 17, 220, 280, 291], "need": [2, 4, 86, 87, 88, 98, 175, 203, 220, 244, 245, 292, 293, 303], "neg": [15, 17, 20, 91, 120, 137, 155, 157, 158, 159, 180, 183, 215, 278], "negative_slop": [94, 157], "neglect": 88, "neighbor": 136, "neq": 16, "nest": [81, 86, 89, 203], "nestedmodel": 81, "nesterov": 212, "net": [78, 80], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 121, 137, 144, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 214, 216, 228, 229, 230, 242, 247, 249, 262, 264, 283, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "neural": [3, 4, 8, 21, 22, 32, 39, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 121, 137, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 214, 216, 228, 229, 230, 242, 247, 249, 262, 264, 283, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "neuralnetwork": 158, "neuron": 157, "never": 297, "new": [83, 84, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 145, 149, 150, 151, 152, 153, 154, 204, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 283, 285, 286, 288, 289, 290, 291], "next": [89, 292], "nll": 120, "nll_loss": [111, 118], "nllloss": [174, 184], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 51, 58, 64, 65, 66, 67, 68, 72, 73, 78, 81, 90, 93, 103, 110, 113, 118, 122, 131, 135, 146, 148, 163, 167, 173, 174, 178, 184, 192, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 293, 303], "no_grad": 218, "node": 230, "nois": [20, 229], "non": [12, 15, 17, 20, 88, 92, 94, 95, 149, 150, 155, 156, 157, 158, 159, 160, 162, 168, 169, 170, 171, 172, 209, 210, 220, 240, 256], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 137, 138, 139, 140, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301], "norm": [9, 13, 211], "normal": [5, 6, 58, 92, 96, 98, 99, 121, 123, 124, 138, 139, 140, 148, 149, 153, 156, 159, 161, 168, 185, 186, 187, 188, 189, 190, 191, 214, 226, 229, 292, 302, 303], "normalized_shap": [124, 191], "note": [100, 168], "noth": [105, 106, 107, 108], "notimplementederror": [2, 83, 204], "notin": 256, "nov": 80, "novel": [5, 80], "np": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 82, 84, 144, 180, 183, 222, 230, 235, 242, 243, 246, 247, 249, 250, 261, 277, 293], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 161, 180, 183], "num_featur": [89, 138, 139, 140, 185, 186, 187, 188, 189, 190], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 88, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 88, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 116, 120, 121, 123, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 160, 164, 165, 166, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 206, 224, 227, 228, 230, 240, 242, 244, 246, 262, 263, 264, 275, 276, 278, 280, 283, 285, 286, 287, 289, 291, 295, 297, 298, 300, 303], "numer": [14, 17, 115, 116, 121, 123, 124, 138, 139, 140, 179, 180, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 211, 212, 213, 214, 222, 232, 242, 247, 249], "numpi": [8, 82, 84, 180, 183, 222, 230, 235, 243, 246, 261, 274, 277, 283, 285, 289, 293, 303], "o": [3, 198, 201, 247, 248], "object": [1, 3, 9, 68, 80, 83, 87, 88, 182, 203, 220, 231, 232, 236, 237, 238, 241, 277], "observ": 209, "obtain": 1, "occur": [137, 220, 221, 278], "occurr": 15, "odot": [168, 169, 170, 171, 172], "off": 218, "offer": [4, 8, 203, 205, 229, 303], "offset": 246, "often": [15, 49, 50, 100, 101, 102, 104, 180, 183, 242, 249, 293, 297, 301, 303], "older": 212, "onc": 220, "one": [0, 64, 65, 66, 67, 72, 88, 89, 98, 100, 114, 128, 132, 138, 139, 140, 159, 160, 161, 164, 170, 180, 183, 185, 188, 196, 199, 204, 219, 222, 226, 241, 248, 262, 264, 279, 284, 288, 293], "ones": [112, 114, 164, 165, 166, 177, 185, 186, 187, 188, 189, 190, 191, 203, 246, 248, 251], "ones_lik": 251, "onli": [8, 81, 136, 141, 142, 143, 158, 168, 169, 170, 171, 172, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 215, 218, 242, 256, 262, 264, 274, 283, 284, 286, 287], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 58, 59, 60, 61, 62, 63, 82, 83, 86, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 109, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 249, 260, 261, 262, 263, 264, 267, 269, 271, 274, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 301], "operatornam": [15, 17], "opposit": 206, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 82, 84, 87, 88, 104, 164, 165, 166, 203, 220], "optimizer_st": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 161, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 204, 206, 214, 216, 224, 225, 226, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 263, 264, 271, 275, 276, 277, 278, 282, 285, 287, 288, 293, 297, 298, 300], "ord": 16, "order": [1, 3, 16, 20, 85, 86, 87, 88, 89, 141, 142, 143, 275, 292], "ordered_dict": 89, "ordereddict": [83, 85, 86, 89], "organ": [85, 86, 87, 89, 221], "orient": 303, "origin": [30, 39, 105, 137, 144, 162, 283, 284, 285, 286, 289, 290, 301], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [206, 214, 216], "other": [2, 3, 8, 14, 30, 34, 36, 39, 82, 83, 86, 89, 149, 150, 168, 203, 204, 218, 220, 229, 230, 242, 244, 247, 249, 274, 282, 303], "otherwis": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 91, 94, 95, 96, 98, 141, 142, 143, 155, 157, 158, 159, 161, 169, 170, 171, 172, 181, 196, 197, 198, 199, 200, 201, 204, 215, 221, 236, 237, 262, 264], "otim": [17, 112, 175], "out": [0, 3, 4, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 149, 150, 153, 154, 164, 165, 166, 168, 169, 170, 171, 172, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291], "out_channel": [36, 86, 89, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 186, 187, 196, 197, 198, 199, 200, 201, 203], "out_featur": [85, 86, 89, 112, 114, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 188, 191, 196, 197, 198, 199, 200, 201], "outcom": [297, 298, 300], "outer": 251, "outlier": [117, 181], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 114, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 260, 261, 262, 263, 264, 267, 269, 271, 274, 275, 276, 282, 283, 285, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "output_height": 104, "output_lay": [86, 89], "output_s": [86, 125, 126, 127, 193, 194, 195], "output_width": 104, "outsid": 0, "over": [0, 1, 2, 3, 9, 68, 78, 83, 86, 88, 98, 125, 126, 127, 144, 161, 164, 165, 166, 180, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 224, 228, 262, 263, 264, 271, 274, 276, 297, 298, 300], "overdetermin": 17, "overfit": [1, 21, 78, 106, 109, 169, 170, 171, 172, 206, 209, 214, 216], "overhead": 144, "overrid": [2, 3], "overridden": [83, 204], "overwrit": [85, 87], "own": [4, 85, 86, 87, 88, 100, 101, 102, 154, 203, 295], "p": [16, 17, 84, 87, 88, 105, 106, 107, 108, 109, 168, 169, 170, 171, 172, 196, 199, 200, 297, 298, 300, 303], "p_d": [198, 201], "p_h": [197, 198, 201], "p_w": [197, 198, 201], "packag": [2, 3, 4, 9, 80, 203, 205, 221, 227, 229, 293, 303], "pad": [36, 86, 89, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 281], "pad_after_dim1": 283, "pad_after_dim2": 283, "pad_before_dim1": 283, "pad_before_dim2": 283, "pad_width": 283, "padding_height": 104, "padding_width": 104, "pair": 112, "paper": 29, "parallel": [1, 3, 68, 80], "param": [83, 84, 87, 88, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "param1": 83, "param_dict": 87, "param_group": [204, 205], "param_groups_setup": 204, "param_list": 88, "param_s": 221, "paramet": [0, 2, 8, 37, 38, 39, 80, 83, 203, 204, 205, 222, 229, 303], "parameterdict": 90, "parameterlist": 90, "parent": 203, "part": [82, 83, 154, 203, 218, 220, 229, 242, 243, 246, 247, 248, 249, 250, 293, 303], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "particip": [84, 293], "particular": [85, 87], "particularli": [8, 17, 52, 53, 54, 55, 56, 57, 86, 87, 88, 89, 98, 114, 138, 139, 140, 141, 142, 143, 161, 177, 180, 183, 188, 189, 190, 191, 210, 218, 221, 292], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 136, 138, 139, 140, 144, 145, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 203, 222, 230, 263, 271, 274, 275, 276, 278, 280, 284, 286, 287, 291, 293, 303], "past": [206, 207, 209, 214], "patch": [104, 197], "path": [3, 5, 6], "pathwai": 80, "pattern": [80, 95, 144, 158, 164, 165, 166], "penal": [206, 214, 216], "penalti": [207, 208, 209, 210, 211, 212, 213], "penros": 17, "per": [1, 52, 53, 54, 55, 56, 57, 69, 70, 71, 125, 188, 189, 190, 191, 193], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 48, 64, 65, 66, 67, 68, 73, 78, 80, 83, 84, 88, 92, 100, 101, 102, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 218, 220, 227, 229, 231, 232, 235, 238, 241, 260, 262, 264, 271, 275, 292, 294, 296, 301, 303], "permut": 275, "persist": [82, 224, 225, 226, 228, 244, 245], "perturb": [12, 19, 20, 303], "phi": [92, 156], "pi": [92, 156, 257, 267, 272], "pil": [293, 303], "pinv": 13, "pioneer": 80, "pipelin": [5, 6, 229, 292, 293, 295], "pixel": [5, 6, 136, 295, 297], "place": [147, 149, 150, 151, 152, 153, 154], "placehold": [83, 176], "plai": [222, 229], "plot": 282, "point": [4, 137, 218], "pointwis": [141, 142, 143], "pool": [21, 36, 37, 38, 39, 40, 51, 58, 68, 73, 78, 80, 125, 126, 127, 128, 129, 130, 132, 133, 134, 144, 145, 165, 166, 193, 194, 195, 196, 197, 198, 199, 200, 201, 262, 264], "pool1": 89, "pool2": 89, "poorli": 14, "popul": 83, "popular": [4, 80], "portion": 303, "pose": 17, "posit": [1, 10, 15, 83, 89, 137, 155, 157, 158, 159, 196, 197, 198, 199, 200, 201, 215, 219, 240, 285, 289, 296], "possibl": [8, 303], "potenti": [17, 176, 214, 287], "power": [8, 15, 80, 144, 219, 220, 251, 292, 293, 303], "pp": 80, "practic": [17, 180, 183], "practition": 303, "pre": [41, 45, 46], "preactbottleneck": [41, 45, 46], "preced": [80, 84, 230], "preconfigur": [33, 34], "predefin": [4, 80, 86, 159], "predict": [179, 180, 182, 183], "prefix": [83, 221], "prepar": [3, 219, 283, 285, 289, 293, 303], "prepend": 83, "preprint": 80, "preprocess": [3, 4, 104, 137, 229, 292, 293, 303], "present": [179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 197], "preserv": [105, 137, 168, 242, 243, 246, 247, 248, 249, 250, 263, 271, 276], "preset": 4, "prevent": [1, 85, 86, 87, 88, 89, 106, 109, 169, 170, 171, 172, 179, 180, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220], "previou": [206, 215, 220], "previous": 209, "primari": [8, 222], "primarili": 89, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301], "priorit": 145, "probabilist": 229, "probabl": [30, 92, 98, 105, 106, 107, 108, 109, 115, 156, 161, 168, 169, 170, 171, 172, 179, 180, 183, 297, 298, 300, 303], "problem": [17, 18, 20, 80, 94, 155, 157, 213], "proceed": 80, "process": [2, 3, 4, 15, 18, 20, 21, 33, 40, 68, 78, 80, 88, 100, 101, 102, 123, 137, 138, 139, 140, 144, 145, 159, 162, 164, 166, 175, 185, 186, 187, 188, 189, 190, 191, 196, 198, 199, 201, 206, 222, 282, 293, 294, 295, 296, 301, 303], "produc": [21, 78, 81, 125, 126, 127, 144, 164, 165, 166, 193, 194, 195, 227, 229], "product": [8, 18, 20, 160, 175, 191, 203, 233, 234, 238, 239], "program": [218, 229], "progress": 208, "project": [18, 20], "projector": 17, "promin": [196, 198, 199, 200, 201], "promot": [89, 180, 183, 203], "propag": [11, 12, 14, 17, 18, 19, 20, 80, 83, 89, 112, 114, 136, 144, 197, 198, 214, 215, 233, 234, 235, 239, 262, 264, 282, 283, 286, 290], "properli": [0, 88, 98, 161, 203], "properti": [9, 11, 14, 15, 92, 96, 105, 156, 159, 168, 208, 213], "proport": [5, 6, 276], "proportion": 301, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 40, 73, 79, 80, 83, 85, 86, 87, 88, 92, 114, 126, 127, 137, 179, 180, 181, 183, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 214, 216, 218, 220, 222, 227, 229, 230, 235, 242, 248, 262, 264, 275, 277, 285, 287, 289, 303], "pseudo": [14, 17], "purpos": [224, 228, 242, 247, 249], "python": 222, "pytorch": 277, "q": [18, 80], "qr": 13, "quad": [17, 179, 180, 181, 182, 183, 199, 200, 201, 231, 232, 236, 237, 238, 241, 294], "quadrat": 181, "quotient": 232, "r": [18, 297, 298, 299, 300], "r_t": 213, "radam": 217, "rais": [0, 1, 2, 83, 203, 204, 240], "rand": [223, 229], "randint": [223, 229], "randn": [21, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 141, 142, 143, 144, 145, 203, 223, 227, 229], "random": [1, 2, 3, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 141, 142, 143, 144, 145, 296, 297, 298, 299, 300, 303], "random_integ": 229, "random_tensor": 229, "randomcrop": [302, 303], "randomgrayscal": [302, 303], "randomhorizontalflip": [302, 303], "randomli": [1, 105, 106, 107, 108, 109, 137, 168, 169, 170, 171, 172, 296, 297, 298, 299, 300, 303], "randomnoisedataset": [0, 1, 2], "randomrot": [302, 303], "randomverticalflip": 302, "rang": [0, 1, 9, 40, 48, 80, 88, 97, 99, 100, 101, 116, 120, 154, 160, 162, 206, 214, 216, 225, 253, 254, 256, 295, 299, 303], "rank": 17, "rasul": 5, "rate": [204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "rather": [5, 87, 88, 210, 286], "ratio": [58, 144, 145, 301], "ravel": 281, "raw": [98, 161, 180, 222], "re": [84, 220], "readabl": [85, 86, 87, 89, 203, 222], "readi": [3, 8, 64, 65, 66, 67, 72, 80], "real": [17, 20, 160], "rearrang": 104, "recalibr": [59, 61, 62, 64, 65, 66, 67, 80, 144], "receiv": [199, 200, 201, 283], "recent": 214, "recept": [68, 72, 80, 145], "reciproc": [17, 251, 261, 269], "recognit": [39, 80, 165], "rectangular": 246, "rectif": 213, "rectifi": [94, 95, 157, 158, 213], "recurr": [86, 191], "recurs": [81, 83], "red": 297, "reduc": [21, 40, 51, 68, 73, 78, 80, 141, 142, 143, 144, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 201, 212, 215, 220, 222, 262, 263, 264, 271, 276, 297], "reduct": [20, 58, 115, 116, 117, 119, 120, 144, 145, 179, 180, 181, 182, 183, 262, 264], "reevalu": 204, "refer": [4, 8, 83, 229, 243, 246, 278], "reflect": 218, "regardless": [17, 284], "region": [102, 125, 126, 127, 136, 194, 195, 283, 294, 303], "regist": [49, 50, 52, 53, 54, 55, 56, 57, 82, 83, 84, 88, 203, 221], "register_buff": 82, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 79], "register_paramet": 83, "registr": [83, 203], "registri": [52, 53, 54, 55, 56, 57, 221], "registry_path": 221, "regress": [4, 119, 181, 182], "regular": [17, 21, 30, 78, 109, 169, 170, 171, 172, 206, 207, 208, 211, 212, 213, 214, 216], "relat": [220, 246, 247], "relationship": 301, "relev": [136, 206, 214, 216], "reli": 220, "reliabl": [5, 6], "reliant": [169, 170, 171, 172], "relu": [8, 21, 58, 73, 78, 80, 81, 85, 86, 87, 89, 91, 93, 94, 111, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 157, 163, 164, 165, 166, 174, 175, 176, 177], "relu1": 89, "relu2": 89, "relu3": 89, "remain": [5, 6, 82, 124, 168, 169, 170, 171, 172, 215], "rememb": 229, "remov": [221, 287], "rep": 289, "repeat": [281, 282, 289], "repetit": [285, 289], "replac": [5, 229, 297], "repres": [5, 14, 16, 20, 36, 83, 84, 89, 112, 114, 121, 123, 124, 164, 165, 166, 175, 177, 180, 183, 191, 204, 205, 206, 212, 213, 214, 215, 216, 222, 231, 232, 238, 241, 243, 263, 274, 275, 276, 282, 294, 296, 298, 299, 300, 301], "represent": [49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 80, 144, 197, 200, 204], "reproduc": [224, 225, 226, 227, 228, 229, 303], "requir": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 68, 82, 85, 89, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 144, 145, 154, 176, 180, 183, 203, 218, 220, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 301], "requires_grad": [82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 136, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293], "rescal": [115, 116, 120, 179, 180, 183], "research": 203, "reset": [84, 227, 230], "reshap": [8, 58, 114, 165, 166, 219, 222, 281, 284], "residu": [31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 80], "residualblock": 40, "resili": 215, "resiz": [136, 292, 302, 303], "resnet": [32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 68, 69, 70, 71, 80, 144], "resnet_1001": 80, "resnet_101": 80, "resnet_152": 80, "resnet_18": 80, "resnet_200": 80, "resnet_269": 80, "resnet_34": 80, "resnet_50": 80, "resnet_arg": 68, "resnext": [35, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80], "resnext_101_32x16d": 80, "resnext_101_32x32d": 80, "resnext_101_32x4d": 80, "resnext_101_32x8d": 80, "resnext_101_64x4d": 80, "resnext_50_32x4d": 80, "resolut": [64, 65, 66, 67, 72], "resourc": 220, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 73, 82, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 256, 260, 261, 262, 263, 264, 267, 269, 271, 274, 275, 276, 282, 283, 285, 289, 297], "respons": [64, 65, 66, 67, 80, 85, 205], "restor": [144, 220], "restructur": 286, "result": [10, 14, 15, 17, 80, 83, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 145, 161, 203, 204, 218, 220, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 303], "resum": 205, "retain": [84, 230, 242, 249, 262, 263, 264, 271, 276, 293], "retent": 293, "retriev": [0, 2, 85, 87, 88], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 58, 82, 83, 85, 86, 87, 88, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 292, 303], "reus": [80, 293], "reusabl": [89, 203, 292], "revers": [8, 89, 141, 142, 143, 275, 298, 300], "revert": 220, "revolution": 80, "rgb": [29, 30, 31, 33, 34], "rho": 207, "rho_": 213, "rho_t": 213, "right": [15, 16, 17, 19, 20, 92, 98, 156, 161, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 294], "risk": 222, "rmsprop": 217, "rob": 80, "robust": [137, 168, 169, 170, 171, 172, 181, 203, 207, 296, 297, 299, 303], "roland": 5, "role": [222, 229, 303], "root": [4, 5, 6, 208, 214, 269], "rotat": [111, 135, 299, 303], "rotated_imag": 137, "rout": [199, 200, 201], "routin": 8, "row": [11, 12, 14, 19, 114, 246, 282, 291], "rprop": 217, "rule": [14, 15, 219, 231, 232, 236, 237, 238, 240, 241], "run": [8, 82, 121, 123, 138, 139, 140, 185, 186, 187, 188, 189, 190, 207, 220, 227, 229], "running_mean": [82, 121, 123, 185, 186, 187, 188, 189, 190], "running_var": [121, 123, 185, 186, 187, 188, 189, 190], "runtim": [86, 89, 203], "s_": 215, "s_d": [198, 201], "s_h": [197, 198, 201], "s_w": [197, 198, 201], "sain": 80, "same": [11, 12, 14, 15, 19, 98, 105, 106, 107, 108, 109, 121, 123, 124, 126, 127, 137, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 168, 169, 170, 171, 172, 176, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 227, 229, 235, 245, 248, 250, 260, 262, 263, 264, 278, 280, 284, 286, 287, 288, 291, 295], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 125, 126, 127, 149, 150, 151, 152, 153, 154, 168, 169, 170, 171, 172, 175, 177, 180, 183, 191, 193, 194, 195, 226, 229, 294, 296, 298, 299, 300, 301], "satisfi": [10, 12, 19], "satur": [155, 303], "save": [2, 82, 84, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221], "scalabl": [3, 52, 53, 54, 55, 56, 57, 80, 203], "scalar": [11, 16, 115, 116, 117, 119, 120, 222], "scale": [12, 17, 23, 33, 37, 38, 39, 41, 42, 43, 46, 59, 60, 68, 69, 70, 71, 80, 91, 96, 98, 121, 123, 124, 144, 145, 153, 154, 155, 157, 159, 160, 161, 162, 168, 169, 170, 171, 172, 180, 185, 186, 187, 188, 189, 190, 191, 206, 208, 209, 210, 222, 229, 276, 301], "scenario": [87, 88, 191, 210, 211, 293, 297], "schedul": 206, "scientif": 219, "score": [40, 51, 68, 98, 180], "scratch": 8, "script": 229, "se": [59, 60, 61, 62, 63, 64, 65, 66, 67, 80], "se_resnet_101": 80, "se_resnet_152": 80, "se_resnet_18": 80, "se_resnet_34": 80, "se_resnet_50": 80, "se_resnext_101_32x4d": 80, "se_resnext_101_32x8d": 80, "se_resnext_101_64x4d": 80, "se_resnext_50_32x4d": 80, "seamless": [0, 1, 3, 4, 203, 229], "seamlessli": [3, 4, 9, 84, 86, 89, 203, 222, 303], "second": [12, 86, 87, 112, 144, 175, 209, 210, 211, 212, 213, 219, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 280, 282, 300], "section": 235, "see": [8, 235], "seed": [223, 224, 225, 226, 228, 229, 303], "seen": 207, "select": [68, 69, 70, 71, 72, 80, 136, 144, 145, 199, 201, 271], "selectivekernel": 146, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 58, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 96, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 282, 292, 293], "selu": [93, 105, 111, 163, 168, 174], "selunetwork": 159, "semodul": 146, "senet": [35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80], "sensit": [117, 181, 185, 186, 187], "sentiment": 4, "separ": [0, 100, 101, 102, 141, 142, 143, 188, 189, 190], "sequenc": [15, 40, 51, 68, 85, 87, 100, 242, 278, 280, 283, 285, 288, 289, 291, 292], "sequenti": [21, 32, 36, 58, 73, 78, 81, 85, 86, 90, 100, 138, 139, 140, 176, 292, 303], "seri": [28, 37, 38, 68, 100, 138, 164, 196, 199], "serial": [82, 83, 205], "serv": [3, 5, 23, 32, 58, 73, 83, 85, 86, 87, 88, 89, 203, 215, 293], "set": [3, 4, 5, 6, 49, 50, 64, 65, 66, 67, 72, 81, 84, 88, 100, 101, 102, 157, 158, 159, 164, 165, 166, 168, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 204, 209, 210, 214, 224, 225, 226, 227, 228, 229, 230, 242, 244, 245, 249, 250, 256, 262, 264, 277, 293, 297, 303], "setup": [4, 8, 52, 53, 54, 55, 56, 57], "sever": [17, 164, 165, 166, 196, 197, 198, 199, 200, 201, 220, 292, 303], "sgd": [8, 206, 213, 217], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 40, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 219, 222, 224, 225, 226, 228, 229, 230, 233, 244, 245, 246, 247, 248, 249, 250, 256, 261, 262, 263, 264, 267, 269, 271, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 303], "shapelik": 225, "share": 80, "shen": 144, "shift": [121, 123, 124, 185, 186, 187, 188, 189, 190, 191], "shorthand": 235, "should": [36, 82, 220, 224, 225, 226, 228, 244, 245, 253, 254, 274, 283, 292], "show": [218, 221], "showcas": 8, "shown": 227, "shrink": 207, "shuffl": [1, 2, 3], "side": [19, 86, 89, 100, 101, 102, 128, 129, 130, 132, 133, 134, 138, 139, 140, 164, 165, 166, 196, 197, 198, 199, 200, 201, 220], "sigma": [17, 144, 149, 151, 153, 160, 185, 186, 187, 188, 189, 190, 191, 275], "sigma_c": 295, "sigma_i": 17, "sigmoid": [93, 111, 144, 149, 150, 153, 154, 163, 174, 179], "sigmoidnetwork": 160, "sign": [15, 181, 215, 251], "signal": [138, 164, 165, 166, 185, 188, 196, 197, 198, 199, 200, 201], "signific": 220, "significantli": [51, 80, 144, 292], "sim": [168, 169, 170, 171, 172], "similar": [8, 149, 150, 235, 261, 277, 283], "similarli": [20, 274], "simonyan": 80, "simpl": [3, 4, 8, 81, 89, 100, 101, 102, 112, 114, 128, 129, 130, 132, 133, 134, 156, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 233, 234, 239, 292], "simplebinaryclassificationmodel": 179, "simpleclassificationmodel": [180, 183], "simplegelumodel": 156, "simpleleakyrelumodel": 157, "simplemodel": [8, 81, 177, 221], "simpleregressionmodel": 182, "simplerelumodel": 158, "simpleselumodel": 159, "simplesigmoidmodel": 160, "simpletanhmodel": 162, "simpli": [218, 274, 275, 286], "simplic": [80, 158], "simplifi": [4, 37, 89, 138, 139, 140], "simul": [81, 303], "simultan": 137, "sin": [251, 257], "sinc": [15, 18, 85, 86, 87, 88, 100, 101, 102, 154, 218, 220, 226, 282, 303], "sine": [254, 267, 268], "singl": [0, 4, 15, 18, 20, 40, 98, 138, 139, 140, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 180, 191, 197, 198, 199, 200, 201, 204, 222, 228, 244, 278, 287, 295, 297, 303], "singleton": 191, "singular": [11, 14, 15, 17, 19, 20], "sinh": [251, 258, 273], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 40, 68, 78, 80, 81, 84, 86, 100, 101, 102, 104, 107, 108, 109, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 164, 165, 166, 175, 177, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 225, 228, 229, 230, 262, 263, 264, 271, 276, 278, 280, 287, 290, 291, 294, 296, 301, 303], "sk": [68, 69, 70, 71, 72, 80, 145], "sk_resnet_18": 80, "sk_resnet_34": 80, "sk_resnet_50": 80, "sk_resnext_50_32x4d": 80, "skblock": 68, "skip": [80, 220], "sknet": [35, 69, 70, 71, 72, 80], "slice": [112, 274], "slide": [104, 196, 198, 199, 201], "slight": 144, "slightli": 303, "slope": [94, 155, 157], "slow": [3, 213], "small": [17, 37, 38, 39, 80, 94, 115, 116, 121, 123, 124, 157, 159, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 197, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215], "smaller": [78, 80, 86, 89, 203, 208, 209, 237, 294, 296, 301], "smallest": 264, "smooth": [30, 92, 155, 156, 206, 214, 303], "smoother": 206, "so": [85, 86, 87, 88, 137, 203, 213, 244, 245, 292], "softmax": [93, 111, 145, 163, 174, 180], "softmaxmodel": 161, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [91, 106, 137, 168, 169, 170, 185, 186, 187, 188, 189, 190, 208, 209, 210, 220, 222], "sometim": 219, "sophist": [86, 89], "sourc": 229, "space": [12, 18, 20, 100, 101, 102, 104, 125, 126, 127, 138, 139, 140, 141, 142, 143, 164, 165, 166, 193, 194, 195, 242, 303], "span": 4, "spars": [208, 209], "spatial": [21, 40, 51, 68, 73, 78, 80, 139, 144, 165, 166, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 282], "spatial_dim": 144, "spatio": 166, "special": [0, 1, 8, 17, 82, 83, 84, 168, 229], "specif": [4, 8, 24, 25, 26, 27, 32, 49, 50, 85, 86, 87, 88, 89, 145, 154, 168, 169, 170, 171, 172, 188, 189, 190, 203, 204, 218, 229, 244, 262, 264, 285, 289], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 73, 74, 75, 76, 77, 79, 81, 86, 98, 104, 109, 115, 116, 117, 119, 120, 124, 125, 126, 127, 136, 137, 144, 161, 164, 165, 166, 179, 180, 181, 182, 183, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 222, 224, 225, 226, 227, 228, 240, 242, 243, 244, 245, 246, 247, 249, 250, 256, 262, 263, 264, 271, 275, 276, 277, 278, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 301, 303], "speech": 188, "speed": [206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "split": [4, 278, 280, 291], "springer": 80, "sqrt": [92, 149, 150, 153, 154, 156, 185, 186, 187, 188, 189, 190, 191, 207, 208, 209, 210, 212, 213, 214, 251, 253, 254], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 117, 119, 181, 182, 207, 208, 209, 214, 251, 269], "squaredataset": [0, 1, 2, 3], "squeez": [58, 61, 64, 65, 66, 67, 80, 144, 281], "stabil": [14, 17, 80, 115, 116, 121, 123, 124, 138, 139, 140, 179, 180, 185, 186, 187, 188, 189, 190, 191, 206, 207, 208, 209, 210, 211, 212, 213, 214, 295], "stabl": [149, 150, 153, 154, 168, 180, 206, 210, 211, 214, 215, 216], "stack": [89, 145, 280, 281, 291, 303], "stage": [40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71], "stage1": 58, "stage2": 58, "stage3": 58, "stage4": 58, "standard": [40, 49, 50, 92, 94, 141, 142, 143, 149, 151, 153, 155, 156, 157, 168, 215, 226, 229, 235, 292, 295, 303], "start": [1, 3, 206, 208, 215, 242, 294, 296], "state": [80, 82, 83, 84, 86, 89, 204, 218, 220, 227], "state_dict": [83, 84, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "static": 89, "statist": [17, 105, 121, 123], "std": [5, 6, 151, 292, 295, 303], "stem": [32, 40, 51, 68], "stem_typ": 40, "stem_width": 40, "step": [84, 104, 145, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 242, 292, 293], "step_siz": 215, "still": 207, "stochast": [8, 206, 216], "stop": 242, "storag": [85, 87, 230], "store": [2, 4, 5, 6, 40, 51, 68, 82, 83, 84, 85, 86, 87, 88, 144, 193, 194, 195, 220, 230, 294, 295, 296, 297, 298, 299, 300, 301], "str": [5, 6, 40, 73, 83, 85, 87, 89, 115, 116, 117, 119, 120, 136, 204, 221, 282], "straightforward": [216, 218, 231], "strategi": 205, "streamlin": [2, 3], "strict": [83, 204], "stride": [36, 37, 38, 39, 86, 89, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 193, 194, 195, 196, 197, 198, 199, 200, 201], "stride_height": 104, "stride_width": 104, "string": [83, 85, 87, 89, 164, 165, 166, 204], "structur": [0, 8, 18, 82, 83, 86, 203, 204, 221, 222, 246, 293], "style": [32, 123, 188, 189, 282], "sub": [85, 86, 87, 88, 89, 203, 251, 294, 296], "sub_tensor": 230, "subclass": [1, 2, 3, 8, 83, 84, 85, 203, 204], "sublay": 81, "submodul": [81, 83, 203], "subsequ": [86, 89, 154, 229], "subset": [169, 170], "subtract": [8, 241, 295], "suffer": 208, "suit": [24, 25, 26, 27, 30, 68, 149, 150, 153, 154], "suitabl": [32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 80, 181, 208, 209, 224], "sum": [16, 85, 86, 87, 88, 89, 98, 115, 116, 117, 119, 120, 145, 161, 179, 180, 181, 182, 183, 208, 231, 234, 239, 251, 274, 276, 278, 280, 282, 285, 289, 291], "sum_": [15, 98, 161, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 233, 234, 263, 271, 274, 276, 282, 285], "sum_i": [16, 239], "sum_j": 239, "sum_k": 235, "summar": [49, 50, 196, 197, 198], "summari": [49, 50, 64, 65, 66, 67, 72], "summat": 15, "sun": 144, "super": [8, 81, 82, 83, 84, 85, 86, 87, 88, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 40, 85, 86, 87, 88, 89, 136, 137, 203, 205, 212, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 243, 246, 256, 261, 263, 267, 269, 271, 274, 275, 276, 278, 282, 286, 293, 303], "suppos": 303, "sure": [203, 303], "svd": [13, 17], "symmetr": [10, 125, 126, 127, 153, 154, 162], "syntax": [1, 235], "system": [9, 10, 17, 18, 19, 80, 218, 282], "systemat": 303, "szegedi": [29, 80], "t": [17, 80, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 230, 235, 277, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "t0": 206, "t1": 277, "t2": 277, "tabular": 4, "tailor": [4, 203, 303], "take": [18, 196, 197, 198, 199, 200, 201, 220, 292], "taken": 274, "tan": 251, "tangent": [99, 162, 255, 272, 273], "tanh": [36, 86, 89, 92, 93, 111, 149, 150, 153, 154, 156, 163, 174, 251], "tanhnetwork": 162, "target": [5, 6, 89, 115, 116, 117, 119, 120, 125, 126, 127, 136, 179, 180, 181, 182, 183, 193, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 294, 296, 301], "target_tensor": [179, 180, 181, 182, 183], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 80, 97, 98, 101, 112, 115, 116, 119, 120, 144, 145, 160, 161, 164, 165, 166, 179, 180, 181, 182, 183, 188, 189, 190, 196, 198, 199, 201, 209, 219, 229, 246, 303], "techniqu": [10, 14, 78, 121, 168, 169, 170, 171, 172, 188, 189, 190, 205, 301, 303], "tempor": [164, 166, 198, 201], "temporarili": 220, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 218, 220, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "term": [17, 112, 138, 139, 140, 141, 142, 143, 206, 210, 212, 213, 214, 216], "test": [4, 5, 6], "test_backward": 81, "test_siz": [5, 6], "text": [4, 11, 15, 16, 40, 51, 68, 69, 70, 71, 85, 91, 94, 95, 96, 98, 100, 101, 102, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 196, 197, 198, 199, 200, 201, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 225, 231, 232, 234, 236, 237, 238, 240, 241, 252, 256, 262, 263, 264, 266, 271, 276, 278, 280, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 296, 298, 299, 300], "th": [112, 179, 180, 182, 183, 188, 189, 190, 236, 237, 240], "than": [0, 1, 5, 87, 88, 91, 94, 117, 141, 142, 143, 155, 157, 181, 204, 210, 256, 274, 283, 288, 294, 296, 301], "thei": [0, 8, 20, 80, 82, 86, 88, 89, 222, 282, 286, 294, 296, 303], "them": [3, 83, 88, 104, 206, 219, 278, 288, 292, 295, 303], "therebi": [168, 197, 198, 200, 201], "theta": [206, 207, 299], "theta_": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "theta_t": [213, 214], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 84, 86, 87, 88, 89, 95, 97, 98, 99, 100, 101, 102, 104, 112, 114, 125, 136, 137, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 229, 230, 234, 235, 239, 242, 244, 247, 248, 249, 250, 256, 260, 261, 262, 263, 264, 267, 269, 271, 274, 275, 276, 277, 283, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "thing": 220, "those": [8, 37, 38, 39, 88, 154], "three": [20, 39, 102, 127, 130, 134, 138, 139, 140, 166, 172, 187, 190, 195, 198, 201], "threshold": [17, 117, 181], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 78, 85, 86, 89, 112, 114, 136, 144, 145, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 226, 233, 234, 239, 282, 284, 286, 287, 290, 303], "throughout": [96, 293], "tile": 281, "time": [0, 3, 15, 37, 38, 39, 100, 138, 157, 159, 164, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 214, 216, 220, 285, 289], "to_tensor": [5, 6], "togeth": [89, 292, 303], "too": 215, "tool": [3, 8, 203, 219, 229, 292, 303], "top": [10, 11, 12, 18, 20, 112, 114, 136, 164, 165, 166, 175, 177, 294, 296], "torch": [73, 277], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 84, 230, 286], "totensor": [292, 303], "trace": [9, 251], "track": [8, 138, 139, 140, 185, 186, 187, 188, 189, 190, 203, 218, 220, 224, 225, 226, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 293], "track_running_stat": [138, 139, 140, 185, 186, 187, 188, 189, 190], "tradit": [5, 207, 208, 211, 212, 213], "trail": 124, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 64, 65, 66, 67, 72, 80, 81, 82, 83, 86, 88, 89, 98, 105, 106, 107, 108, 109, 121, 123, 137, 156, 157, 159, 160, 161, 162, 168, 169, 170, 171, 172, 185, 186, 187, 188, 189, 190, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 292, 295, 296, 297, 298, 299, 300, 303], "trainabl": [81, 185, 186, 187, 188, 189, 190, 203], "transact": 144, "transfer": [123, 188, 189], "transform": [2, 4, 5, 6, 8, 12, 80, 87, 112, 114, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 219, 282], "transform_pipelin": [292, 303], "transformed_imag": [292, 303], "transit": [23, 181], "translat": [197, 200], "transpos": [8, 10, 251], "treat": [0, 82, 191, 203], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 112, 114, 121, 123, 136, 138, 139, 140, 141, 142, 143, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 204, 209, 210, 214, 218, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293], "truncat": 81, "truncate_from": 81, "try": 0, "tune": 303, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 40, 81, 83, 84, 100, 101, 102, 104, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 164, 165, 166, 176, 191, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 211, 212, 213, 215, 222, 224, 225, 226, 228, 230, 244, 247, 249, 262, 263, 264, 271, 276, 278, 280, 282, 283, 286, 287, 288, 290, 291, 294, 295, 296, 301], "twice": 283, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 69, 73, 100, 101, 102, 112, 129, 133, 144, 145, 165, 171, 175, 186, 189, 197, 200, 209, 210, 211, 212, 213, 215, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 274, 282], "type": [36, 40, 58, 68, 82, 83, 84, 112, 141, 142, 143, 175, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 277, 282, 293], "typeerror": [0, 1, 2, 83, 204], "typic": [9, 40, 51, 68, 82, 98, 105, 137, 144, 159, 161, 183, 185, 186, 187, 188, 189, 190, 205, 206, 214, 216, 220, 222, 290, 293, 295, 299, 301, 303], "u": [17, 20, 150, 152, 154], "u_": 211, "ultra": 46, "unchang": [82, 109, 155, 157, 158, 159, 168, 169, 170, 171, 172, 176, 284, 287], "undefin": 240, "under": [52, 53, 54, 55, 56, 57, 203], "underbrac": 15, "underdetermin": 17, "undergo": 303, "underli": [0, 8, 29, 30, 31, 33, 34, 277, 280, 284, 286, 291], "understand": [8, 78, 80, 81, 89, 303], "unexpect": [83, 86, 89, 229], "unfold": [103, 111], "unifi": 0, "uniform": [148, 150, 154, 164, 165, 166, 175, 177, 223, 224, 225, 229, 297, 298, 299, 300], "uniformli": [224, 228], "uniniti": [244, 245], "unintend": 220, "union": 73, "uniqu": [10, 17, 19, 85, 87], "unit": [21, 36, 78, 91, 92, 94, 95, 96, 149, 150, 153, 154, 155, 156, 157, 158, 159, 168], "unless": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 230], "unlik": [82, 85, 86, 87, 88, 94, 155, 157, 168, 191, 207, 208, 210, 211, 212, 213, 215], "unnecessari": 220, "unpad": 283, "unseen": 303, "unsqueez": 281, "unstabl": 14, "up": [204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 299, 301], "updat": [4, 82, 88, 89, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220], "upon": [30, 80, 85, 86, 87, 88], "upper": [18, 152, 215, 228], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 112, 114, 119, 121, 123, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 218, 219, 220, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 260, 262, 263, 264, 271, 276, 282, 283, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "usag": [3, 9, 23, 86, 89, 141, 142, 143, 204, 205, 294, 295, 296, 297, 298, 299, 300, 301], "use_aux": [28, 29, 30], "user": [1, 2, 3, 4, 8, 85, 86, 87, 88, 203, 208, 292, 293, 303], "usual": 180, "util": [3, 8, 9, 69, 70, 71, 87, 88, 203, 229], "v": [12, 17, 20, 209, 210, 212, 213, 243], "v1": [28, 29, 32, 33, 34, 80], "v2": [32, 34, 80], "v3": [28, 30, 31, 80], "v4": [28, 31, 80], "v_": [206, 209, 210, 212, 213, 214, 216], "v_stack": 291, "v_t": [213, 214], "val": 147, "valid": [138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 275], "valu": [8, 11, 15, 16, 17, 20, 49, 50, 81, 83, 85, 87, 89, 91, 94, 97, 98, 99, 100, 101, 102, 104, 115, 116, 117, 119, 120, 121, 123, 124, 125, 136, 137, 138, 139, 140, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 224, 225, 226, 227, 228, 229, 242, 243, 244, 245, 246, 252, 253, 254, 256, 259, 260, 261, 262, 264, 266, 267, 269, 270, 278, 283, 284, 286, 290, 295, 297, 298, 300], "valuabl": 229, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 204], "van": 80, "vanish": [80, 155, 159, 185, 186, 187], "var": 251, "vari": [68, 86, 88, 125, 136, 193, 299], "variabl": [83, 89, 125, 126, 127, 176, 193, 194, 195, 203, 218, 220, 224, 244, 296, 299], "varianc": [96, 105, 121, 123, 138, 139, 140, 149, 150, 153, 154, 159, 168, 185, 186, 187, 188, 189, 190, 191, 209, 210, 211, 212, 213, 226, 276, 299, 303], "variant": [23, 24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 209, 210, 211], "variat": [141, 142, 143, 188, 189, 190, 296, 303], "varieti": [4, 32, 229, 303], "variou": [5, 23, 28, 33, 34, 36, 80, 158, 205, 229, 262, 264, 283, 293], "vdot": 239, "vector": [12, 17, 18, 19, 20, 112, 114, 175, 177, 233, 234, 235, 239], "veloc": [206, 214, 216], "veri": [17, 43, 45, 80, 207], "versa": 215, "versatil": [229, 282], "version": [20, 28, 32, 36, 37, 38, 214, 239, 297], "vertic": [288, 291, 300], "vgg": 73, "vggnet": [35, 74, 75, 76, 77, 80], "vggnet_11": 80, "vggnet_13": 80, "vggnet_16": 80, "vggnet_19": 80, "via": [3, 4, 68], "vice": 215, "video": [102, 109, 140, 166, 190, 198, 201], "view": [32, 36, 86, 197, 198, 199, 200, 201, 286], "vision": [40, 80, 101, 165, 175, 303], "visual": [78, 80], "vol": 80, "vollgraf": 5, "volumetr": [102, 109, 140, 166, 190, 198, 201], "vstack": 281, "w": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 101, 102, 104, 108, 109, 112, 114, 126, 127, 129, 130, 133, 134, 136, 137, 139, 140, 144, 164, 165, 166, 175, 177, 186, 187, 189, 190, 194, 195, 198, 201, 294, 296], "w_": [101, 102, 126, 127, 129, 130, 133, 134, 136, 165, 166, 194, 195, 197, 198, 200, 201], "w_out": [101, 102, 129, 130, 133, 134], "wa": [29, 168, 169, 170, 171, 172, 220], "wai": [1, 22, 79, 218, 220, 286], "wang": 80, "want": [0, 8, 292, 294], "warn": [85, 87], "we": [3, 8, 219, 282], "weight": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 80, 100, 101, 102, 112, 114, 115, 116, 120, 121, 123, 124, 136, 144, 145, 149, 150, 153, 154, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 224, 229], "weight1": 87, "weight2": 87, "weight_decai": [206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "weinberg": 80, "well": [24, 25, 26, 27, 30, 68, 149, 150], "were": 89, "what": 220, "when": [0, 1, 3, 8, 15, 83, 86, 88, 89, 91, 94, 100, 101, 102, 141, 142, 143, 155, 176, 185, 186, 187, 188, 189, 190, 204, 207, 215, 218, 220, 221, 222, 229, 240, 292, 294], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 80, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 229, 231, 232, 236, 237, 238, 240, 241, 244, 245, 256, 260, 261, 262, 263, 264, 267, 269, 271, 274, 275, 276, 278, 283, 285, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300], "whether": [1, 11, 28, 29, 30, 83, 84, 149, 150, 214, 218, 224, 225, 226, 228, 230, 244, 245, 262, 263, 264, 271, 276], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 64, 65, 66, 67, 68, 72, 74, 75, 76, 77, 80, 83, 85, 87, 89, 94, 98, 117, 137, 141, 142, 143, 145, 155, 156, 157, 161, 162, 168, 181, 183, 185, 186, 187, 188, 189, 190, 191, 209, 210, 212, 214, 218, 220, 222, 224, 225, 228, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 278, 285, 286, 288, 290, 293, 294, 296, 297, 298, 299, 300, 301, 303], "while": [8, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80, 86, 89, 105, 156, 158, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 220, 286, 288, 297, 303], "who": [8, 85, 86, 87, 88], "whose": [20, 245, 248, 250, 252, 256, 260, 266], "wide": [4, 6, 9, 17, 40, 48, 49, 50, 80, 95, 158, 164, 165, 180], "wide_resnet_101": 80, "wide_resnet_50": 80, "wider": [49, 50, 100, 101], "wideresnet": 80, "width": [49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 145, 165, 166, 186, 187, 189, 190, 194, 195, 197, 198, 200, 201, 294, 296, 301], "window": [128, 129, 130, 132, 133, 134, 196, 197, 198, 199, 200, 201, 207, 262, 264], "wise": [62, 64, 65, 66, 67, 80, 91, 92, 94, 95, 96, 97, 98, 99, 138, 139, 140, 144, 161, 168, 169, 170, 171, 172, 203, 219, 231, 232, 235, 236, 237, 238, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 280, 291], "within": [2, 80, 81, 82, 85, 86, 87, 88, 89, 99, 136, 137, 154, 156, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 176, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 205, 220, 242, 256, 299, 303], "without": [8, 51, 85, 86, 87, 112, 114, 164, 165, 166, 175, 177, 218, 221, 262, 284, 286, 290], "won": 220, "work": [1, 2, 3, 8, 10, 219, 222], "workflow": [229, 303], "workload": 8, "wrap": [3, 203, 220, 277], "wrapper": 203, "x": [8, 9, 19, 32, 36, 58, 73, 80, 81, 82, 83, 85, 86, 87, 88, 89, 98, 112, 114, 137, 141, 142, 143, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 228, 244, 245, 260, 282, 294, 295, 296, 297, 298, 299, 300, 301], "x1": 175, "x2": 175, "x_": [180, 183, 282], "x_c": [180, 183], "x_i": 179, "x_k": 180, "xavier": [149, 150, 153, 154], "xavier_norm": 148, "xavier_uniform": 148, "xiao": 5, "xie": 80, "xy": 282, "x\u2081": 175, "x\u2082": 175, "y": [85, 86, 87, 88, 89, 137, 141, 142, 143, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 224, 225, 226, 228, 244, 245, 282, 297], "y_": [180, 183, 282], "y_c": [180, 183], "y_i": 179, "yann": [6, 80], "yet": [8, 219], "yield": [0, 1, 83, 220], "you": [0, 81, 86, 88, 89, 203, 205, 218, 220, 229, 244, 245, 246, 250, 275, 277, 292, 294, 303], "your": [203, 205, 218, 220, 229, 303], "z": [80, 245, 249, 250], "zalandoresearch": 5, "zeiler": [78, 80], "zero": [15, 17, 18, 30, 81, 91, 94, 100, 101, 102, 105, 106, 107, 108, 109, 128, 129, 130, 132, 133, 134, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 164, 165, 166, 168, 169, 170, 171, 172, 191, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 244, 245, 246, 250, 251, 256, 266, 283], "zero_grad": [84, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230], "zeros_lik": [245, 251], "zfnet": [35, 80], "zhang": 80, "zisserman": 80, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthwiseSeparableConv1d", "nn.DepthwiseSeparableConv2d", "nn.DepthwiseSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 219, "1d": 219, "2": 219, "2d": 219, "3": 219, "It": [218, 220], "ab": 252, "activ": [93, 111, 163, 174], "ad": 219, "adadelta": 207, "adagrad": 208, "adam": 209, "adamax": 211, "adamw": 210, "adaptive_avg_pool1d": 125, "adaptive_avg_pool2d": 126, "adaptive_avg_pool3d": 127, "adaptiveavgpool1d": 193, "adaptiveavgpool2d": 194, "adaptiveavgpool3d": 195, "add": 231, "addit": 17, "admonit": 222, "advanc": [104, 303], "alexnet": [21, 22], "algebra": 13, "algorithm": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "alias": 222, "align": 219, "alpha_dropout": 105, "alphadropout": 168, "also": 205, "anoth": 277, "arang": 242, "arcco": 253, "architectur": [21, 37, 38, 39, 49, 50, 78], "arcsin": 254, "arctan": 255, "asgd": 206, "attent": 145, "attribut": [5, 6, 21, 32, 36, 40, 51, 58, 68, 73, 78, 82, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 230, 294, 295, 296, 297, 298, 299, 300, 301], "avg_pool1d": 128, "avg_pool2d": 129, "avg_pool3d": 130, "avgpool1d": 196, "avgpool2d": 197, "avgpool3d": 198, "axi": 219, "backpropag": 230, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "batch_norm": 121, "batchnorm": 146, "batchnorm1d": 185, "batchnorm2d": 186, "batchnorm3d": 187, "bceloss": 179, "behavior": [125, 126, 127, 193, 194, 195], "benefit": 220, "bilinear": [112, 175], "binari": 251, "binary_cross_entropi": 115, "broadcast": 219, "buffer": 82, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 125, 126, 127, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301], "captur": 221, "case": 222, "centercrop": 294, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 51, 58, 68, 73, 78, 82, 83, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "clip": 256, "co": 257, "combin": 0, "compon": [3, 8, 203], "compos": 292, "concatdataset": [0, 1], "concaten": 278, "conclus": [3, 8, 203, 218, 219, 220, 229, 293, 303], "constant": 147, "contain": 90, "conv": 146, "conv1d": [100, 164], "conv2d": [101, 165], "conv3d": [102, 166], "convbnrelu1d": 138, "convbnrelu2d": 139, "convbnrelu3d": 140, "convnet": [35, 80], "convolut": [103, 111, 146, 167, 174], "core": 8, "cosh": 258, "creat": [84, 230, 277], "cross_entropi": 116, "crossentropyloss": 180, "cube": 259, "custom": [1, 2, 3, 83, 204, 205, 303], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 83, 204, 205], "definit": 222, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "depthwis": 146, "depthwiseseparableconv1d": 141, "depthwiseseparableconv2d": 142, "depthwiseseparableconv3d": 143, "descript": [52, 53, 54, 55, 56, 57, 69, 70, 71, 221], "det": 11, "detail": [17, 49, 50], "diag": 243, "dilat": 104, "div": 232, "dot": 233, "dropout": [106, 110, 111, 169, 173, 174], "dropout1d": [107, 170], "dropout2d": [108, 171], "dropout3d": [109, 172], "eig": 12, "elu": [91, 155], "empti": 244, "empty_lik": 245, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303], "excit": 146, "exp": 260, "ey": 246, "fashionmnist": 5, "featur": [4, 8, 9, 64, 65, 66, 67, 72, 205, 229, 303], "flatten": 279, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 125, 126, 127, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301], "from": 277, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 149, 150, 151, 152, 153, 154, 218, 220, 221, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "fuse": 146, "futur": 4, "gelu": [92, 156], "gener": [223, 251], "get": 205, "grad_en": 218, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "guidelin": 222, "how": [218, 220], "hstack": 280, "huber_loss": 117, "huberloss": 181, "ident": 176, "imag": [7, 302], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 230, "init": [147, 149, 150, 151, 152, 153, 154], "initi": 148, "inner": 234, "input": 277, "inspect": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "instance_norm": 123, "instancenorm1d": 188, "instancenorm2d": 189, "instancenorm3d": 190, "integr": [3, 203, 229, 303], "interpol": 136, "inv": 14, "iter": 230, "kaiming_norm": 149, "kaiming_uniform": 150, "kei": [3, 4, 8, 64, 65, 66, 67, 72, 203, 205, 229, 303], "kernel": 146, "layer": [146, 163, 167, 173, 174, 178, 184, 192, 202], "layer_norm": 124, "layernorm": 191, "leaky_relu": 94, "leakyrelu": 157, "learn": 229, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 111, 113, 114, 174, 177, 178], "list": 277, "load": 1, "log": 261, "loss": [111, 118, 174, 184], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 111, 203, 205, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 303], "matmul": 235, "matrix": 235, "matrix_pow": 15, "max": 262, "max_pool1d": 132, "max_pool2d": 133, "max_pool3d": 134, "maximum": 236, "maxpool1d": 199, "maxpool2d": 200, "maxpool3d": 201, "mean": 263, "mechan": 145, "meshgrid": 282, "metadata": 221, "method": [0, 1, 2, 5, 6, 32, 36, 73, 83, 84, 204, 230], "min": 264, "minimum": 237, "mnist": 6, "model": [80, 81, 203], "modul": [83, 174], "moduledict": 85, "modulelist": 86, "more": 229, "mse_loss": 119, "mseloss": 182, "mul": 238, "multipl": [0, 235], "nadam": 212, "new": 219, "newaxi": 219, "nll_loss": 120, "nllloss": 183, "nn": [82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "no_grad": 220, "norm": 16, "normal": [111, 122, 151, 174, 192, 295], "note": 8, "number": 223, "ones": 247, "ones_lik": 248, "oper": [13, 235, 251], "optim": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "organ": 203, "outer": 239, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 203, 205, 229, 303], "pad": 283, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "parameterdict": 87, "parameterlist": 88, "perform": 230, "pinv": 17, "pipelin": [3, 303], "pitfal": [218, 220], "pool": [111, 131, 174, 202], "potenti": [218, 220], "power": 240, "properti": [84, 230], "qr": 18, "radam": 213, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 224, "randint": 225, "randn": 226, "random": [223, 224, 225, 226, 227, 228, 229], "randomcrop": 296, "randomgrayscal": 297, "randomhorizontalflip": 298, "randomrot": 299, "randomverticalflip": 300, "ravel": 284, "reciproc": 265, "refer": [5, 6, 144, 205], "register_model": 221, "relu": [95, 146, 158], "repeat": 285, "reshap": 286, "resiz": 301, "resnet": 40, "resnet_1001": 41, "resnet_101": 42, "resnet_152": 43, "resnet_18": 44, "resnet_200": 45, "resnet_269": 46, "resnet_34": 47, "resnet_50": 48, "resnext": 51, "resnext_101_32x16d": 52, "resnext_101_32x32d": 53, "resnext_101_32x4d": 54, "resnext_101_32x8d": 55, "resnext_101_64x4d": 56, "resnext_50_32x4d": 57, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 145, 147, 149, 150, 151, 152, 153, 154, 218, 220, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "rmsprop": 214, "rotat": 137, "rprop": 215, "rule": 235, "se_resnet_101": 59, "se_resnet_152": 60, "se_resnet_18": 61, "se_resnet_34": 62, "se_resnet_50": 63, "se_resnext_101_32x4d": 64, "se_resnext_101_32x8d": 65, "se_resnext_101_64x4d": 66, "se_resnext_50_32x4d": 67, "see": 205, "seed": 227, "select": 146, "selectivekernel": 145, "selu": [96, 159], "semodul": 144, "senet": 58, "separ": 146, "sequenti": 89, "sgd": 216, "sigmoid": [97, 160], "sign": 266, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "sin": 267, "sinh": 268, "sk_resnet_18": 69, "sk_resnet_34": 70, "sk_resnet_50": 71, "sk_resnext_50_32x4d": 72, "sknet": 68, "slice": 230, "softmax": [98, 161], "solv": 19, "sqrt": 269, "squar": 270, "squeez": [146, 287], "stack": 288, "start": 205, "state": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "sub": 241, "sum": 271, "summar": 81, "summari": 81, "svd": 20, "tabl": 81, "tan": 272, "tanh": [99, 162, 273], "tensor": [219, 230, 251, 277, 281], "through": 230, "tile": 289, "totensor": 293, "trace": 274, "track": 230, "transform": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "transpos": 275, "type": 222, "unari": 251, "unfold": 104, "uniform": [152, 228], "unsqueez": 290, "us": [1, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 277], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 82, 137, 218, 219, 220, 222, 282, 292, 293, 303], "util": [111, 135], "utilit": 281, "var": 276, "vggnet": 73, "vggnet_11": 74, "vggnet_13": 75, "vggnet_16": 76, "vggnet_19": 77, "vstack": 291, "weight": 148, "why": 222, "wide_resnet_101": 49, "wide_resnet_50": 50, "work": [4, 218, 220], "xavier_norm": 153, "xavier_uniform": 154, "zero": 249, "zeros_lik": 250, "zfnet": [78, 79]}})