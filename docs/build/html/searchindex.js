Search.setIndex({"alltitles": {"1-D ascending": [[464, null]], "@ Operator": [[412, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Activation Functions": [[225, null], [247, null]], "Activation Layers": [[309, null], [328, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[310, "additional-options"]], "Advanced Example with Dilation": [[238, "advanced-example-with-dilation"]], "Advanced Features": [[506, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [326, "advantages"]], "AlexNet": [[29, null], [100, "alexnet"]], "Algorithm": [[381, "algorithm"], [382, "algorithm"], [383, "algorithm"], [384, "algorithm"], [385, "algorithm"], [386, "algorithm"], [387, "algorithm"], [388, "algorithm"], [389, "algorithm"], [390, "algorithm"], [391, "algorithm"]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [102, "architecture"], [103, "architecture"], [104, "architecture"], [105, "architecture"], [205, "architecture"]], "Architecture Details": [[156, "architecture-details"], [157, "architecture-details"]], "Attention Functions": [[232, null], [247, null]], "Attention Layers": [[312, null], [328, null]], "Attention Mechanism": [[233, "attention-mechanism"], [287, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [97, "attributes"], [101, "attributes"], [147, "attributes"], [158, "attributes"], [165, "attributes"], [175, "attributes"], [192, "attributes"], [203, "attributes"], [205, "attributes"], [214, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [280, "attributes"], [281, "attributes"], [282, "attributes"], [283, "attributes"], [284, "attributes"], [285, "attributes"], [286, "attributes"], [297, "attributes"], [298, "attributes"], [301, "attributes"], [302, "attributes"], [304, "attributes"], [305, "attributes"], [306, "attributes"], [308, "attributes"], [313, "attributes"], [314, "attributes"], [315, "attributes"], [318, "attributes"], [320, "attributes"], [321, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [336, "attributes"], [337, "attributes"], [339, "attributes"], [340, "attributes"], [341, "attributes"], [343, "attributes"], [344, "attributes"], [345, "attributes"], [346, "attributes"], [348, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [352, "attributes"], [353, "attributes"], [354, "attributes"], [355, "attributes"], [356, "attributes"], [393, "attributes"], [407, "attributes"], [497, "attributes"], [498, "attributes"], [499, "attributes"], [500, "attributes"], [501, "attributes"], [502, "attributes"], [503, "attributes"], [504, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[457, "axis-swapping-rules"]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [355, "backward-gradient-calculation"], [356, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [414, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [416, "backward-gradient-calculation"], [417, "backward-gradient-calculation"], [418, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [434, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [440, "backward-gradient-calculation"], [441, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [447, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [452, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [456, "backward-gradient-calculation"], [457, "backward-gradient-calculation"], [458, "backward-gradient-calculation"], [459, "backward-gradient-calculation"], [460, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [462, "backward-gradient-calculation"], [465, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [477, "backward-gradient-calculation"], [478, "backward-gradient-calculation"], [479, "backward-gradient-calculation"], [480, "backward-gradient-calculation"], [484, "backward-gradient-calculation"], [485, "backward-gradient-calculation"], [486, "backward-gradient-calculation"], [488, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [490, "backward-gradient-calculation"], [492, "backward-gradient-calculation"], [493, "backward-gradient-calculation"]], "Base Class": [[379, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[263, "behavior"], [264, "behavior"], [265, "behavior"], [348, "behavior"], [349, "behavior"], [350, "behavior"]], "Benefits": [[394, "benefits"], [397, "benefits"]], "Binary Functions": [[432, null]], "Bottleneck Configuration": [[117, "bottleneck-configuration"], [118, "bottleneck-configuration"]], "Broadcasting Rules": [[465, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [74, "class-signature"], [75, "class-signature"], [88, "class-signature"], [92, "class-signature"], [97, "class-signature"], [101, "class-signature"], [105, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [138, "class-signature"], [147, "class-signature"], [158, "class-signature"], [165, "class-signature"], [175, "class-signature"], [180, "class-signature"], [181, "class-signature"], [192, "class-signature"], [197, "class-signature"], [203, "class-signature"], [205, "class-signature"], [210, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"], [310, "class-signature"], [311, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [326, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [336, "class-signature"], [337, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [355, "class-signature"], [356, "class-signature"], [358, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [366, "class-signature"], [369, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [381, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [388, "class-signature"], [389, "class-signature"], [390, "class-signature"], [391, "class-signature"], [393, "class-signature"], [407, "class-signature"], [495, "class-signature"], [496, "class-signature"], [497, "class-signature"], [498, "class-signature"], [499, "class-signature"], [500, "class-signature"], [501, "class-signature"], [502, "class-signature"], [503, "class-signature"], [504, "class-signature"]], "CoAtNet": [[31, null], [100, "coatnet"]], "Combining multiple datasets": [[0, null]], "Computer Vision": [[207, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [326, "conclusion"], [368, "conclusion"], [370, "conclusion"], [395, "conclusion"], [396, "conclusion"], [406, "conclusion"], [496, "conclusion"], [506, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[74, "configurations"]], "Containers": [[222, null]], "Conv-BatchNorm-ReLU": [[288, null]], "ConvNeXt": [[40, null], [100, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[237, null], [247, null]], "Convolution Layers": [[317, null], [328, null]], "Convolutional Transformer (CvT)": [[100, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[463, null]], "Creating a Parameter": [[216, null]], "Creating a tensor on GPU with gradient tracking": [[407, null]], "CrossViT": [[55, null], [100, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[506, "custom-pipelines"]], "CvT": [[65, null]], "Defining a Custom Optimizer": [[380, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[215, null]], "Defining a custom optimizer": [[369, null]], "DenseNet": [[69, null], [100, "densenet"]], "Depthwise Separable Convolution": [[288, null]], "Descending, heapsort kernel": [[464, null]], "Description": [[159, "description"], [160, "description"], [161, "description"], [162, "description"], [163, "description"], [164, "description"], [176, "description"], [177, "description"], [178, "description"], [398, "description"]], "Details": [[119, "details"], [120, "details"], [121, "details"], [122, "details"], [123, "details"]], "Device-based dtype inference": [[407, null]], "Differences from nn.Transformer": [[210, "differences-from-nn-transformer"]], "Dropout Functions": [[246, null], [247, null]], "Dropout Layers": [[325, null], [328, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientNet": [[74, null], [100, "efficientnet"]], "EfficientNet Configurations": [[74, "id1"]], "EfficientNet_V2": [[75, null]], "Einops Functions": [[12, null]], "Einops Layers": [[327, null], [328, null]], "Embedding Process": [[276, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [93, "example"], [94, "example"], [95, "example"], [96, "example"], [106, "example"], [107, "example"], [108, "example"], [109, "example"], [110, "example"], [115, "example"], [116, "example"], [238, "example"], [368, null], [368, null], [368, null], [395, "example"], [399, "example"], [401, "example"], [402, "example"], [403, "example"], [404, "example"], [405, "example"], [406, null], [406, null], [406, null], [420, "example"], [421, "example"], [422, "example"], [423, "example"], [424, "example"], [428, "example"], [429, "example"], [430, "example"], [431, "example"], [433, "example"], [434, "example"], [435, "example"], [436, "example"], [438, "example"], [439, "example"], [440, "example"], [441, "example"], [444, "example"], [445, "example"], [447, "example"], [449, "example"], [451, "example"], [452, "example"], [453, "example"], [454, "example"], [455, "example"], [456, "example"], [458, "example"], [459, "example"], [460, "example"], [461, "example"], [462, "example"], [466, "example"], [467, "example"], [469, "example"], [470, "example"], [471, "example"], [472, "example"], [478, "example"], [480, "example"], [482, "example"], [484, "example"], [485, "example"], [487, "example"], [488, "example"], [489, "example"], [492, "example"], [493, "example"], [494, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[396, null]], "Example 2: Adding a new axis to a 2D tensor": [[396, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[396, null]], "Example Usage": [[89, "example-usage"], [90, "example-usage"], [91, "example-usage"], [98, "example-usage"], [99, "example-usage"], [101, "example-usage"], [102, "example-usage"], [103, "example-usage"], [104, "example-usage"], [171, "example-usage"], [172, "example-usage"], [173, "example-usage"], [174, "example-usage"], [179, "example-usage"], [279, "example-usage"], [495, "example-usage"], [496, "example-usage"], [506, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [92, "examples"], [105, "examples"], [113, "examples"], [117, "examples"], [118, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [223, "examples"], [224, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [248, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [276, "examples"], [278, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [289, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [311, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [326, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [336, "examples"], [337, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [355, "examples"], [356, "examples"], [358, "examples"], [366, "examples"], [369, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [388, "examples"], [389, "examples"], [390, "examples"], [391, "examples"], [394, "examples"], [397, "examples"], [398, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [417, "examples"], [418, "examples"], [419, "examples"], [425, "examples"], [426, "examples"], [427, "examples"], [437, "examples"], [442, "examples"], [443, "examples"], [446, "examples"], [448, "examples"], [450, "examples"], [457, "examples"], [463, "examples"], [464, "examples"], [465, "examples"], [468, "examples"], [474, "examples"], [475, "examples"], [476, "examples"], [477, "examples"], [479, "examples"], [481, "examples"], [483, "examples"], [486, "examples"], [490, "examples"], [491, "examples"], [497, "examples"], [498, "examples"], [499, "examples"], [500, "examples"], [501, "examples"], [502, "examples"], [503, "examples"], [504, "examples"]], "FashionMNIST": [[7, null]], "Features": [[17, "features"]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [147, "forward-calculation"], [158, "forward-calculation"], [165, "forward-calculation"], [175, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [238, "forward-calculation"], [241, "forward-calculation"], [248, "forward-calculation"], [250, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [278, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [311, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [355, "forward-calculation"], [356, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [438, "forward-calculation"], [439, "forward-calculation"], [440, "forward-calculation"], [441, "forward-calculation"], [442, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [447, "forward-calculation"], [448, "forward-calculation"], [449, "forward-calculation"], [451, "forward-calculation"], [452, "forward-calculation"], [453, "forward-calculation"], [454, "forward-calculation"], [455, "forward-calculation"], [456, "forward-calculation"], [458, "forward-calculation"], [459, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [467, "forward-calculation"], [472, "forward-calculation"], [475, "forward-calculation"], [477, "forward-calculation"], [478, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [484, "forward-calculation"], [485, "forward-calculation"], [486, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [492, "forward-calculation"], [493, "forward-calculation"], [497, "forward-calculation"], [498, "forward-calculation"], [499, "forward-calculation"], [500, "forward-calculation"], [501, "forward-calculation"], [502, "forward-calculation"], [503, "forward-calculation"], [504, "forward-calculation"]], "Forward Method": [[360, "forward-method"], [361, "forward-method"], [362, "forward-method"], [363, "forward-method"], [364, "forward-method"]], "Forward Pass": [[203, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [204, "function-signature"], [206, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [223, "function-signature"], [224, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [248, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [276, "function-signature"], [278, "function-signature"], [279, "function-signature"], [289, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [394, "function-signature"], [395, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"]], "Fused Layers": [[288, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[380, "getting-started"]], "Gradient Calculation": [[494, "gradient-calculation"]], "Gradient Computation": [[466, "gradient-computation"], [474, "gradient-computation"], [481, "gradient-computation"], [482, "gradient-computation"], [487, "gradient-computation"]], "Gradient hooks": [[407, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[395, "how-it-works"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[145, "hyperparameter-configuration"], [146, "hyperparameter-configuration"]], "Image Classification": [[100, null]], "Image Datasets": [[9, null]], "Image Transformations": [[505, null]], "Implementation Details": [[55, "implementation-details"], [105, "implementation-details"]], "Inception": [[88, null], [100, "inception"]], "Inception-ResNet": [[100, "inception-resnet"]], "InceptionNeXt": [[92, null], [100, "inceptionnext"]], "InceptionResNet": [[97, null]], "Inspecting Optimizer State": [[380, null], [381, null], [382, null], [383, null], [384, null], [385, null], [386, null], [387, null], [388, null], [389, null], [390, null], [391, null]], "Integration with lucid": [[3, "integration-with-lucid"], [368, "integration-with-lucid"], [406, "integration-with-lucid"], [506, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [368, "key-components"]], "Key Enhancements": [[125, "key-enhancements"]], "Key Features": [[4, "key-features"], [171, "key-features"], [172, "key-features"], [173, "key-features"], [174, "key-features"], [179, "key-features"], [380, "key-features"], [406, "key-features"]], "Key Transformations": [[506, "key-transformations"]], "LR Schedulers": [[379, null]], "Layer Configuration": [[139, "layer-configuration"], [140, "layer-configuration"], [141, "layer-configuration"], [142, "layer-configuration"], [143, "layer-configuration"], [144, "layer-configuration"]], "LeNet": [[100, "lenet"], [101, null]], "Learn More": [[406, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[247, null], [249, null]], "Linear Layers": [[328, null], [332, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[247, null], [254, null]], "Loss Layers": [[328, null], [338, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [262, "mathematical-definition"], [326, "mathematical-definition"]], "Mathematical Details": [[310, "mathematical-details"], [360, "mathematical-details"], [361, "mathematical-details"], [362, "mathematical-details"], [363, "mathematical-details"], [364, "mathematical-details"]], "Mathematical Expression": [[258, "mathematical-expression"], [437, "mathematical-expression"], [443, "mathematical-expression"], [450, "mathematical-expression"], [483, "mathematical-expression"]], "Mathematical Formula": [[371, "mathematical-formula"], [372, "mathematical-formula"], [373, "mathematical-formula"], [375, "mathematical-formula"], [376, "mathematical-formula"], [377, "mathematical-formula"], [378, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [105, "mathematical-representation"], [407, "mathematical-representation"]], "Matrix Multiplication Rules": [[412, "matrix-multiplication-rules"]], "MaxViT": [[100, "maxvit"], [105, null]], "Metadata Captured": [[398, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [97, "methods"], [101, "methods"], [192, "methods"], [215, "methods"], [216, "methods"], [369, "methods"], [371, "methods"], [372, "methods"], [373, "methods"], [374, "methods"], [375, "methods"], [376, "methods"], [377, "methods"], [378, "methods"], [393, "methods"], [407, "methods"]], "MobileNet": [[100, "mobilenet"], [111, null]], "MobileNet_V2": [[112, null]], "MobileNet_V3": [[113, null]], "MobileNet_V4": [[114, null]], "Model Configuration": [[106, "model-configuration"], [107, "model-configuration"], [108, "model-configuration"], [109, "model-configuration"], [110, "model-configuration"]], "Modules": [[328, null]], "Moving tensor between devices": [[407, null]], "Natural Language Processing": [[207, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[247, null], [259, null]], "Normalization Layers": [[328, null], [347, null]], "Notes": [[11, "notes"], [274, "notes"], [425, "notes"], [426, "notes"]], "Object detection": [[208, null]], "Optimizers": [[392, null]], "Organizing Models": [[368, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [101, "overview"], [102, "overview"], [103, "overview"], [104, "overview"], [111, "overview"], [112, "overview"], [113, "overview"], [114, "overview"], [119, "overview"], [120, "overview"], [121, "overview"], [122, "overview"], [123, "overview"], [148, "overview"], [149, "overview"], [150, "overview"], [151, "overview"], [152, "overview"], [153, "overview"], [154, "overview"], [155, "overview"], [166, "overview"], [167, "overview"], [168, "overview"], [169, "overview"], [170, "overview"], [310, "overview"], [360, "overview"], [361, "overview"], [362, "overview"], [363, "overview"], [364, "overview"], [368, "overview"], [370, "overview"], [380, "overview"], [394, "overview"], [397, "overview"], [406, "overview"], [506, "overview"]], "PVT": [[124, null]], "PVT_V2": [[125, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [223, "parameters"], [224, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [248, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [276, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [289, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [301, "parameters"], [302, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [308, "parameters"], [310, "parameters"], [311, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [326, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [358, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [366, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [393, "parameters"], [394, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [503, "parameters"], [504, "parameters"]], "Performance / FLOPs": [[464, "performance-flops"]], "Performing backpropagation": [[407, null]], "Pooling Functions": [[247, null], [269, null]], "Pooling Layers": [[328, null], [357, null]], "Potential Pitfalls": [[395, "potential-pitfalls"]], "Properties": [[216, "properties"], [407, "properties"]], "Pyramid Vision Transformer (PVT)": [[100, "pyramid-vision-transformer-pvt"]], "RCNN": [[208, "rcnn"]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[400, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [286, "references"], [380, "references"]], "Regularization": [[240, "regularization"]], "Representation": [[393, "representation"]], "ResNeSt": [[100, "resnest"], [138, null]], "ResNeXt": [[100, "resnext"], [158, null]], "ResNet": [[100, "resnet"], [147, null]], "Return Values": [[483, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [204, "returns"], [206, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [223, "returns"], [224, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [248, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [276, "returns"], [278, "returns"], [279, "returns"], [287, "returns"], [289, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [303, "returns"], [326, "returns"], [358, "returns"], [394, "returns"], [395, "returns"], [397, "returns"], [399, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"]], "SENet": [[100, "senet"], [165, null]], "SKNet": [[100, "sknet"], [175, null]], "Schedulers": [[379, null]], "See Also": [[380, "see-also"]], "Selective Kernel": [[288, null]], "Sequence-to-Sequence": [[209, null]], "Sparse Layers": [[328, null], [359, null]], "Spatial Functions": [[247, null], [275, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"]], "Squeeze-and-Excitation": [[288, null]], "Stable sort with duplicates": [[464, null]], "Summary Table": [[213, "summary-table"]], "Swin Transformer": [[100, "swin-transformer"]], "SwinTransformer": [[180, null]], "SwinTransformer_V2": [[181, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Tensor Contraction Rules": [[419, "tensor-contraction-rules"]], "Tensor Generating Functions": [[432, null]], "Tensor Operations": [[432, null]], "Tensor Utilities": [[473, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Transformer": [[209, "transformer"], [210, null]], "Transformer Layers": [[328, null], [365, null]], "Unary Functions": [[432, null]], "Usage": [[4, "usage"], [84, "usage"], [85, "usage"], [86, "usage"], [87, "usage"], [214, "usage"], [279, "usage"], [370, "usage"], [395, "usage"], [396, "usage"], [475, "usage"], [495, "usage"], [496, "usage"], [506, "usage"]], "Usage Example": [[119, "usage-example"], [120, "usage-example"], [121, "usage-example"], [122, "usage-example"], [123, "usage-example"], [310, "usage-example"], [360, "usage-example"], [361, "usage-example"], [362, "usage-example"], [363, "usage-example"], [364, "usage-example"], [371, "usage-example"], [372, "usage-example"], [373, "usage-example"], [374, "usage-example"], [375, "usage-example"], [376, "usage-example"], [377, "usage-example"], [378, "usage-example"]], "Usage Examples": [[393, "usage-examples"]], "Use another Tensor as input": [[463, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[407, null]], "Using the ASGD Optimizer": [[381, null]], "Using the Adadelta Optimizer": [[382, null]], "Using the Adagrad Optimizer": [[383, null]], "Using the Adam Optimizer": [[384, null]], "Using the AdamW Optimizer": [[385, null]], "Using the Adamax Optimizer": [[386, null]], "Using the NAdam Optimizer": [[387, null]], "Using the RAdam Optimizer": [[388, null]], "Using the RMSprop Optimizer": [[389, null]], "Using the Rprop Optimizer": [[390, null]], "Using the SGD Optimizer": [[391, null]], "Utility Functions": [[247, null], [277, null]], "VGGNet": [[100, "vggnet"], [192, null]], "Verification": [[16, "verification"]], "ViT": [[197, null]], "Vision Layers": [[328, null], [367, null]], "Visual Transformer (ViT)": [[100, "visual-transformer-vit"]], "Weight Initializations": [[290, null]], "Xception": [[100, "xception"], [203, null]], "ZFNet": [[100, "zfnet"], [205, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "cvt_13": [[66, null]], "cvt_21": [[67, null]], "cvt_w24": [[68, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[70, null]], "densenet_169": [[71, null]], "densenet_201": [[72, null]], "densenet_264": [[73, null]], "efficientnet_b0": [[76, null]], "efficientnet_b1": [[77, null]], "efficientnet_b2": [[78, null]], "efficientnet_b3": [[79, null]], "efficientnet_b4": [[80, null]], "efficientnet_b5": [[81, null]], "efficientnet_b6": [[82, null]], "efficientnet_b7": [[83, null]], "efficientnet_v2_l": [[84, null]], "efficientnet_v2_m": [[85, null]], "efficientnet_v2_s": [[86, null]], "efficientnet_v2_xl": [[87, null]], "inception_next_atto": [[93, null]], "inception_next_base": [[94, null]], "inception_next_small": [[95, null]], "inception_next_tiny": [[96, null]], "inception_resnet_v1": [[98, null]], "inception_resnet_v2": [[99, null]], "inception_v1": [[89, null]], "inception_v3": [[90, null]], "inception_v4": [[91, null]], "lenet_1": [[102, null]], "lenet_4": [[103, null]], "lenet_5": [[104, null]], "lr_scheduler.CosineAnnealingLR": [[371, null]], "lr_scheduler.CyclicLR": [[372, null]], "lr_scheduler.ExponentialLR": [[373, null]], "lr_scheduler.LRScheduler": [[374, null]], "lr_scheduler.LambdaLR": [[375, null]], "lr_scheduler.MultiStepLR": [[376, null]], "lr_scheduler.ReduceLROnPlateau": [[377, null]], "lr_scheduler.StepLR": [[378, null]], "lucid.Numeric": [[393, null]], "lucid.Tensor": [[407, null]], "lucid.abs": [[433, null]], "lucid.add": [[408, null]], "lucid.arange": [[420, null]], "lucid.arccos": [[434, null]], "lucid.arcsin": [[435, null]], "lucid.arctan": [[436, null]], "lucid.argsort": [[464, null]], "lucid.broadcast_to": [[465, null]], "lucid.ceil": [[437, null]], "lucid.chunk": [[466, null]], "lucid.clip": [[438, null]], "lucid.concatenate": [[467, null]], "lucid.cos": [[439, null]], "lucid.cosh": [[440, null]], "lucid.count_flops": [[394, null]], "lucid.cube": [[441, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[421, null]], "lucid.div": [[409, null]], "lucid.dot": [[410, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[422, null]], "lucid.empty_like": [[423, null]], "lucid.exp": [[442, null]], "lucid.eye": [[424, null]], "lucid.flatten": [[468, null]], "lucid.floor": [[443, null]], "lucid.full": [[425, null]], "lucid.full_like": [[426, null]], "lucid.grad_enabled": [[395, null]], "lucid.histogram": [[469, null]], "lucid.histogram2d": [[470, null]], "lucid.histogramdd": [[471, null]], "lucid.hstack": [[472, null]], "lucid.inner": [[411, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[427, null]], "lucid.log": [[444, null]], "lucid.log2": [[445, null]], "lucid.masked_fill": [[474, null]], "lucid.matmul": [[412, null]], "lucid.max": [[446, null]], "lucid.maximum": [[413, null]], "lucid.mean": [[447, null]], "lucid.meshgrid": [[475, null]], "lucid.min": [[448, null]], "lucid.minimum": [[414, null]], "lucid.models": [[207, null]], "lucid.multiply": [[415, null]], "lucid.newaxis": [[396, null]], "lucid.nn": [[368, null]], "lucid.nn.functional": [[247, null]], "lucid.no_grad": [[397, null]], "lucid.nonzero": [[476, null]], "lucid.ones": [[428, null]], "lucid.ones_like": [[429, null]], "lucid.optim": [[380, null]], "lucid.outer": [[416, null]], "lucid.pad": [[477, null]], "lucid.power": [[417, null]], "lucid.random": [[406, null]], "lucid.random.bernoulli": [[399, null]], "lucid.random.rand": [[401, null]], "lucid.random.randint": [[402, null]], "lucid.random.randn": [[403, null]], "lucid.random.seed": [[404, null]], "lucid.random.uniform": [[405, null]], "lucid.ravel": [[478, null]], "lucid.reciprocal": [[449, null]], "lucid.register_model": [[398, null]], "lucid.repeat": [[479, null]], "lucid.reshape": [[480, null]], "lucid.roll": [[481, null]], "lucid.round": [[450, null]], "lucid.sign": [[451, null]], "lucid.sin": [[452, null]], "lucid.sinh": [[453, null]], "lucid.sort": [[482, null]], "lucid.split": [[483, null]], "lucid.sqrt": [[454, null]], "lucid.square": [[455, null]], "lucid.squeeze": [[484, null]], "lucid.stack": [[485, null]], "lucid.sub": [[418, null]], "lucid.sum": [[456, null]], "lucid.swapaxes": [[457, null]], "lucid.tan": [[458, null]], "lucid.tanh": [[459, null]], "lucid.tensor": [[463, null]], "lucid.tensordot": [[419, null]], "lucid.tile": [[486, null]], "lucid.topk": [[487, null]], "lucid.trace": [[460, null]], "lucid.transforms": [[506, null]], "lucid.transpose": [[461, null]], "lucid.tril": [[488, null]], "lucid.triu": [[489, null]], "lucid.unbind": [[490, null]], "lucid.unique": [[491, null]], "lucid.unsqueeze": [[492, null]], "lucid.var": [[462, null]], "lucid.vstack": [[493, null]], "lucid.where": [[494, null]], "lucid.zeros": [[430, null]], "lucid.zeros_like": [[431, null]], "maxvit_base": [[106, null], [107, null]], "maxvit_small": [[108, null]], "maxvit_tiny": [[109, null]], "maxvit_xlarge": [[110, null]], "mobilenet": [[115, null]], "mobilenet_v2": [[116, null]], "mobilenet_v3_large": [[117, null]], "mobilenet_v3_small": [[118, null]], "mobilenet_v4_conv_large": [[119, null]], "mobilenet_v4_conv_medium": [[120, null]], "mobilenet_v4_conv_small": [[121, null]], "mobilenet_v4_hybrid_large": [[122, null]], "mobilenet_v4_hybrid_medium": [[123, null]], "models.summarize": [[213, null]], "nn.AdaptiveAvgPool1d": [[348, null]], "nn.AdaptiveAvgPool2d": [[349, null]], "nn.AdaptiveAvgPool3d": [[350, null]], "nn.AlphaDropout": [[318, null]], "nn.AvgPool1d": [[351, null]], "nn.AvgPool2d": [[352, null]], "nn.AvgPool3d": [[353, null]], "nn.BCELoss": [[333, null]], "nn.BatchNorm1d": [[339, null]], "nn.BatchNorm2d": [[340, null]], "nn.BatchNorm3d": [[341, null]], "nn.Bilinear": [[329, null]], "nn.Buffer": [[214, null]], "nn.Conv1d": [[313, null]], "nn.Conv2d": [[314, null]], "nn.Conv3d": [[315, null]], "nn.ConvBNReLU1d": [[280, null]], "nn.ConvBNReLU2d": [[281, null]], "nn.ConvBNReLU3d": [[282, null]], "nn.CrossEntropyLoss": [[334, null]], "nn.DepthSeparableConv1d": [[283, null]], "nn.DepthSeparableConv2d": [[284, null]], "nn.DepthSeparableConv3d": [[285, null]], "nn.DropBlock": [[319, null]], "nn.DropPath": [[320, null]], "nn.Dropout": [[321, null]], "nn.Dropout1d": [[322, null]], "nn.Dropout2d": [[323, null]], "nn.Dropout3d": [[324, null]], "nn.ELU": [[297, null]], "nn.Embedding": [[358, null]], "nn.GELU": [[298, null]], "nn.GlobalResponseNorm": [[342, null]], "nn.HardSigmoid": [[299, null]], "nn.HardSwish": [[300, null]], "nn.HuberLoss": [[335, null]], "nn.Identity": [[330, null]], "nn.InstanceNorm1d": [[343, null]], "nn.InstanceNorm2d": [[344, null]], "nn.InstanceNorm3d": [[345, null]], "nn.LayerNorm": [[346, null]], "nn.LeakyReLU": [[301, null]], "nn.Linear": [[331, null]], "nn.MSELoss": [[336, null]], "nn.MaxPool1d": [[354, null]], "nn.MaxPool2d": [[355, null]], "nn.MaxPool3d": [[356, null]], "nn.Module": [[215, null]], "nn.ModuleDict": [[217, null]], "nn.ModuleList": [[218, null]], "nn.MultiHeadAttention": [[310, null]], "nn.NLLLoss": [[337, null]], "nn.Parameter": [[216, null]], "nn.ParameterDict": [[219, null]], "nn.ParameterList": [[220, null]], "nn.ReLU": [[302, null]], "nn.ReLU6": [[303, null]], "nn.Rearrange": [[326, null]], "nn.SELU": [[304, null]], "nn.SEModule": [[286, null]], "nn.ScaledDotProductAttention": [[311, null]], "nn.SelectiveKernel": [[287, null]], "nn.Sequential": [[221, null]], "nn.Sigmoid": [[305, null]], "nn.Softmax": [[306, null]], "nn.Swish": [[307, null]], "nn.Tanh": [[308, null]], "nn.Transformer": [[360, null]], "nn.TransformerDecoder": [[361, null]], "nn.TransformerDecoderLayer": [[362, null]], "nn.TransformerEncoder": [[363, null]], "nn.TransformerEncoderLayer": [[364, null]], "nn.Unfold": [[316, null]], "nn.Upsample": [[366, null]], "nn.functional.adaptive_avg_pool1d": [[263, null]], "nn.functional.adaptive_avg_pool2d": [[264, null]], "nn.functional.adaptive_avg_pool3d": [[265, null]], "nn.functional.affine_grid": [[273, null]], "nn.functional.alpha_dropout": [[239, null]], "nn.functional.avg_pool1d": [[266, null]], "nn.functional.avg_pool2d": [[267, null]], "nn.functional.avg_pool3d": [[268, null]], "nn.functional.batch_norm": [[257, null]], "nn.functional.bilinear": [[248, null]], "nn.functional.binary_cross_entropy": [[251, null]], "nn.functional.conv1d": [[234, null]], "nn.functional.conv2d": [[235, null]], "nn.functional.conv3d": [[236, null]], "nn.functional.cross_entropy": [[252, null]], "nn.functional.drop_block": [[240, null]], "nn.functional.drop_path": [[241, null]], "nn.functional.dropout": [[242, null]], "nn.functional.dropout1d": [[243, null]], "nn.functional.dropout2d": [[244, null]], "nn.functional.dropout3d": [[245, null]], "nn.functional.elu": [[223, null]], "nn.functional.embedding": [[276, null]], "nn.functional.gelu": [[224, null]], "nn.functional.global_response_norm": [[258, null]], "nn.functional.grid_sample": [[274, null]], "nn.functional.huber_loss": [[253, null]], "nn.functional.instance_norm": [[260, null]], "nn.functional.interpolate": [[278, null]], "nn.functional.layer_norm": [[261, null]], "nn.functional.leaky_relu": [[226, null]], "nn.functional.linear": [[250, null]], "nn.functional.max_pool1d": [[270, null]], "nn.functional.max_pool2d": [[271, null]], "nn.functional.max_pool3d": [[272, null]], "nn.functional.mse_loss": [[255, null]], "nn.functional.nll_loss": [[256, null]], "nn.functional.normalize": [[262, null]], "nn.functional.relu": [[227, null]], "nn.functional.rotate": [[279, null]], "nn.functional.scaled_dot_product_attention": [[233, null]], "nn.functional.selu": [[228, null]], "nn.functional.sigmoid": [[229, null]], "nn.functional.softmax": [[230, null]], "nn.functional.tanh": [[231, null]], "nn.functional.unfold": [[238, null]], "nn.init.constant": [[289, null]], "nn.init.kaiming_normal": [[291, null]], "nn.init.kaiming_uniform": [[292, null]], "nn.init.normal": [[293, null]], "nn.init.uniform": [[294, null]], "nn.init.xavier_normal": [[295, null]], "nn.init.xavier_uniform": [[296, null]], "optim.ASGD": [[381, null]], "optim.Adadelta": [[382, null]], "optim.Adagrad": [[383, null]], "optim.Adam": [[384, null]], "optim.AdamW": [[385, null]], "optim.Adamax": [[386, null]], "optim.NAdam": [[387, null]], "optim.Optimizer": [[369, null]], "optim.RAdam": [[388, null]], "optim.RMSprop": [[389, null]], "optim.Rprop": [[390, null]], "optim.SGD": [[391, null]], "optim.lr_scheduler": [[370, null]], "pvt_huge": [[126, null]], "pvt_large": [[127, null]], "pvt_medium": [[128, null]], "pvt_small": [[129, null]], "pvt_tiny": [[130, null]], "pvt_v2_b0": [[131, null]], "pvt_v2_b1": [[132, null]], "pvt_v2_b2": [[133, null]], "pvt_v2_b2_li": [[134, null]], "pvt_v2_b3": [[135, null]], "pvt_v2_b4": [[136, null]], "pvt_v2_b5": [[137, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[139, null]], "resnest_14": [[140, null]], "resnest_200": [[141, null]], "resnest_26": [[142, null]], "resnest_269": [[143, null]], "resnest_50": [[144, null]], "resnest_50_1s4x24d": [[145, null]], "resnest_50_4s2x40d": [[146, null]], "resnet_1001": [[148, null]], "resnet_101": [[149, null]], "resnet_152": [[150, null]], "resnet_18": [[151, null]], "resnet_200": [[152, null]], "resnet_269": [[153, null]], "resnet_34": [[154, null]], "resnet_50": [[155, null]], "resnext_101_32x16d": [[159, null]], "resnext_101_32x32d": [[160, null]], "resnext_101_32x4d": [[161, null]], "resnext_101_32x8d": [[162, null]], "resnext_101_64x4d": [[163, null]], "resnext_50_32x4d": [[164, null]], "se_resnet_101": [[166, null]], "se_resnet_152": [[167, null]], "se_resnet_18": [[168, null]], "se_resnet_34": [[169, null]], "se_resnet_50": [[170, null]], "se_resnext_101_32x4d": [[171, null]], "se_resnext_101_32x8d": [[172, null]], "se_resnext_101_64x4d": [[173, null]], "se_resnext_50_32x4d": [[174, null]], "sk_resnet_18": [[176, null]], "sk_resnet_34": [[177, null]], "sk_resnet_50": [[178, null]], "sk_resnext_50_32x4d": [[179, null]], "swin_base": [[182, null]], "swin_large": [[183, null]], "swin_small": [[184, null]], "swin_tiny": [[185, null]], "swin_v2_base": [[186, null]], "swin_v2_giant": [[187, null]], "swin_v2_huge": [[188, null]], "swin_v2_large": [[189, null]], "swin_v2_small": [[190, null]], "swin_v2_tiny": [[191, null]], "transformer_base": [[211, null]], "transformer_big": [[212, null]], "transforms.CenterCrop": [[497, null]], "transforms.Compose": [[495, null]], "transforms.Normalize": [[498, null]], "transforms.RandomCrop": [[499, null]], "transforms.RandomGrayscale": [[500, null]], "transforms.RandomHorizontalFlip": [[501, null]], "transforms.RandomRotation": [[502, null]], "transforms.RandomVerticalFlip": [[503, null]], "transforms.Resize": [[504, null]], "transforms.ToTensor": [[496, null]], "vggnet_11": [[193, null]], "vggnet_13": [[194, null]], "vggnet_16": [[195, null]], "vggnet_19": [[196, null]], "vit_base": [[198, null]], "vit_huge": [[199, null]], "vit_large": [[200, null]], "vit_small": [[201, null]], "vit_tiny": [[202, null]], "wide_resnet_101": [[156, null]], "wide_resnet_50": [[157, null]], "xception": [[204, null]], "zfnet": [[206, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/models", "models/objdet/index", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/models.rst", "models/objdet/index.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[433, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[382, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[383, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[384, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[386, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[385, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[264, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[348, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[349, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[350, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[408, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[318, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[420, "lucid.arange", false]], "arccos() (in module lucid)": [[434, "lucid.arccos", false]], "arcsin() (in module lucid)": [[435, "lucid.arcsin", false]], "arctan() (in module lucid)": [[436, "lucid.arctan", false]], "argsort() (in module lucid)": [[464, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[381, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[267, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[351, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[352, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[353, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[339, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[340, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[341, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[333, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[399, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[329, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[251, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[465, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[214, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[437, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[497, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[466, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[438, "lucid.clip", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[495, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[467, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[289, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[313, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[314, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[235, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[315, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[236, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[280, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[281, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[282, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[439, "lucid.cos", false]], "cosh() (in module lucid)": [[440, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[371, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[394, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[334, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[441, "lucid.cube", false]], "cvt (class in lucid.models)": [[65, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[66, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[67, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[68, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[372, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[69, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[70, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[71, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[72, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[73, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[283, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[284, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[285, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "diag() (in module lucid)": [[421, "lucid.diag", false]], "div() (in module lucid)": [[409, "lucid.div", false]], "dot() (in module lucid)": [[410, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[241, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[319, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[321, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[322, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[323, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[324, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[320, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[74, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[76, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[77, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[78, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[79, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[80, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[81, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[82, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[83, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[75, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[84, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[85, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[86, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[87, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[297, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[358, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[422, "lucid.empty", false]], "empty_like() (in module lucid)": [[423, "lucid.empty_like", false]], "exp() (in module lucid)": [[442, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[373, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[424, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[468, "lucid.flatten", false]], "floor() (in module lucid)": [[443, "lucid.floor", false]], "full() (in module lucid)": [[425, "lucid.full", false]], "full_like() (in module lucid)": [[426, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[298, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[342, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[395, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.grid_sample", false]], "hardsigmoid (class in lucid.nn)": [[299, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[300, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[469, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[470, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[471, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[472, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[335, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[330, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[88, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[93, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[94, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[95, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[96, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[98, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[99, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[89, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[90, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[91, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[92, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[97, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[411, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[343, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[344, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[345, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[291, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[292, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[375, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[346, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[301, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[101, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[102, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[103, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[104, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[331, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[427, "lucid.linspace", false]], "log() (in module lucid)": [[444, "lucid.log", false]], "log2() (in module lucid)": [[445, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[374, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[474, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[412, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[446, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[271, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[413, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[354, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[355, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[356, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[105, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[106, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[107, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[108, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[109, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[110, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[447, "lucid.mean", false]], "meshgrid() (in module lucid)": [[475, "lucid.meshgrid", false]], "min() (in module lucid)": [[448, "lucid.min", false]], "minimum() (in module lucid)": [[414, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[111, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[115, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[112, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[116, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[113, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[117, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[118, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[114, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[119, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[120, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[121, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[122, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[123, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[215, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[217, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[218, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[336, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[310, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[415, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[376, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[387, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[337, "lucid.nn.NLLLoss", false]], "no_grad (in module lucid)": [[397, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[476, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[293, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[498, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[393, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[428, "lucid.ones", false]], "ones_like() (in module lucid)": [[429, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[369, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[416, "lucid.outer", false]], "pad() (in module lucid)": [[477, "lucid.pad", false]], "parameter (class in lucid.nn)": [[216, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[219, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[220, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[417, "lucid.power", false]], "pvt (class in lucid.models)": [[124, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[126, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[127, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[128, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[129, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[130, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[125, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[131, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[132, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[133, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[134, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[135, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[136, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[137, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[388, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[401, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[402, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[403, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[499, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[500, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[501, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[502, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[503, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[478, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[326, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[449, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[377, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[398, "lucid.register_model", false]], "relu (class in lucid.nn)": [[302, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[303, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[479, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[480, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[504, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[138, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[139, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[140, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[141, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[142, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[143, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[144, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[145, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[146, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[147, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[148, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[149, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[150, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[151, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[152, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[153, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[154, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[155, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[158, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[159, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[160, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[161, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[162, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[163, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[164, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[389, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[481, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[450, "lucid.round", false]], "rprop (class in lucid.optim)": [[390, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[311, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[166, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[167, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[168, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[169, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[170, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[171, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[172, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[173, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[174, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[404, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[287, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[304, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[286, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[165, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[221, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[391, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[305, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[229, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[451, "lucid.sign", false]], "sin() (in module lucid)": [[452, "lucid.sin", false]], "sinh() (in module lucid)": [[453, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[176, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[177, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[178, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[179, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[175, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[306, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[230, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[482, "lucid.sort", false]], "split() (in module lucid)": [[483, "lucid.split", false]], "sqrt() (in module lucid)": [[454, "lucid.sqrt", false]], "square() (in module lucid)": [[455, "lucid.square", false]], "squeeze() (in module lucid)": [[484, "lucid.squeeze", false]], "stack() (in module lucid)": [[485, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[378, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[418, "lucid.sub", false]], "sum() (in module lucid)": [[456, "lucid.sum", false]], "summarize() (in module lucid.models)": [[213, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[457, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[182, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[183, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[184, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[185, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[186, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[187, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[188, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[189, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[190, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[191, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[180, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[181, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[307, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[458, "lucid.tan", false]], "tanh (class in lucid.nn)": [[308, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[459, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[407, "lucid.Tensor", false]], "tensor() (in module lucid)": [[463, "lucid.tensor", false]], "tensordot() (in module lucid)": [[419, "lucid.tensordot", false]], "tile() (in module lucid)": [[486, "lucid.tile", false]], "topk() (in module lucid)": [[487, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[496, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[460, "lucid.trace", false]], "transformer (class in lucid.models)": [[210, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[360, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[211, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[212, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[361, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[362, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[363, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[364, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[461, "lucid.transpose", false]], "tril() (in module lucid)": [[488, "lucid.tril", false]], "triu() (in module lucid)": [[489, "lucid.triu", false]], "unbind() (in module lucid)": [[490, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[316, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[294, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[405, "lucid.random.uniform", false]], "unique() (in module lucid)": [[491, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[492, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[366, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[462, "lucid.var", false]], "vggnet (class in lucid.models)": [[192, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[193, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[194, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[195, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[196, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[197, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[198, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[199, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[200, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[201, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[202, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[493, "lucid.vstack", false]], "where() (in module lucid)": [[494, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[156, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[157, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[295, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[296, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[203, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[204, "lucid.models.xception", false]], "zeros() (in module lucid)": [[430, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[431, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[205, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[206, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[407, 1, 1, "", "Tensor"], [433, 2, 1, "", "abs"], [408, 2, 1, "", "add"], [420, 2, 1, "", "arange"], [434, 2, 1, "", "arccos"], [435, 2, 1, "", "arcsin"], [436, 2, 1, "", "arctan"], [464, 2, 1, "", "argsort"], [465, 2, 1, "", "broadcast_to"], [437, 2, 1, "", "ceil"], [466, 2, 1, "", "chunk"], [438, 2, 1, "", "clip"], [467, 2, 1, "", "concatenate"], [439, 2, 1, "", "cos"], [440, 2, 1, "", "cosh"], [394, 2, 1, "", "count_flops"], [441, 2, 1, "", "cube"], [421, 2, 1, "", "diag"], [409, 2, 1, "", "div"], [410, 2, 1, "", "dot"], [422, 2, 1, "", "empty"], [423, 2, 1, "", "empty_like"], [442, 2, 1, "", "exp"], [424, 2, 1, "", "eye"], [468, 2, 1, "", "flatten"], [443, 2, 1, "", "floor"], [425, 2, 1, "", "full"], [426, 2, 1, "", "full_like"], [395, 2, 1, "", "grad_enabled"], [469, 2, 1, "", "histogram"], [470, 2, 1, "", "histogram2d"], [471, 2, 1, "", "histogramdd"], [472, 2, 1, "", "hstack"], [411, 2, 1, "", "inner"], [427, 2, 1, "", "linspace"], [444, 2, 1, "", "log"], [445, 2, 1, "", "log2"], [474, 2, 1, "", "masked_fill"], [412, 2, 1, "", "matmul"], [446, 2, 1, "", "max"], [413, 2, 1, "", "maximum"], [447, 2, 1, "", "mean"], [475, 2, 1, "", "meshgrid"], [448, 2, 1, "", "min"], [414, 2, 1, "", "minimum"], [415, 2, 1, "", "multiply"], [397, 3, 1, "", "no_grad"], [476, 2, 1, "", "nonzero"], [428, 2, 1, "", "ones"], [429, 2, 1, "", "ones_like"], [416, 2, 1, "", "outer"], [477, 2, 1, "", "pad"], [417, 2, 1, "", "power"], [478, 2, 1, "", "ravel"], [449, 2, 1, "", "reciprocal"], [398, 2, 1, "", "register_model"], [479, 2, 1, "", "repeat"], [480, 2, 1, "", "reshape"], [481, 2, 1, "", "roll"], [450, 2, 1, "", "round"], [451, 2, 1, "", "sign"], [452, 2, 1, "", "sin"], [453, 2, 1, "", "sinh"], [482, 2, 1, "", "sort"], [483, 2, 1, "", "split"], [454, 2, 1, "", "sqrt"], [455, 2, 1, "", "square"], [484, 2, 1, "", "squeeze"], [485, 2, 1, "", "stack"], [418, 2, 1, "", "sub"], [456, 2, 1, "", "sum"], [457, 2, 1, "", "swapaxes"], [458, 2, 1, "", "tan"], [459, 2, 1, "", "tanh"], [463, 2, 1, "", "tensor"], [419, 2, 1, "", "tensordot"], [486, 2, 1, "", "tile"], [487, 2, 1, "", "topk"], [460, 2, 1, "", "trace"], [461, 2, 1, "", "transpose"], [488, 2, 1, "", "tril"], [489, 2, 1, "", "triu"], [490, 2, 1, "", "unbind"], [491, 2, 1, "", "unique"], [492, 2, 1, "", "unsqueeze"], [462, 2, 1, "", "var"], [493, 2, 1, "", "vstack"], [494, 2, 1, "", "where"], [430, 2, 1, "", "zeros"], [431, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [65, 1, 1, "", "CvT"], [69, 1, 1, "", "DenseNet"], [74, 1, 1, "", "EfficientNet"], [75, 1, 1, "", "EfficientNet_V2"], [88, 1, 1, "", "Inception"], [92, 1, 1, "", "InceptionNeXt"], [97, 1, 1, "", "InceptionResNet"], [101, 1, 1, "", "LeNet"], [105, 1, 1, "", "MaxViT"], [111, 1, 1, "", "MobileNet"], [112, 1, 1, "", "MobileNet_V2"], [113, 1, 1, "", "MobileNet_V3"], [114, 1, 1, "", "MobileNet_V4"], [124, 1, 1, "", "PVT"], [125, 1, 1, "", "PVT_V2"], [138, 1, 1, "", "ResNeSt"], [158, 1, 1, "", "ResNeXt"], [147, 1, 1, "", "ResNet"], [165, 1, 1, "", "SENet"], [175, 1, 1, "", "SKNet"], [180, 1, 1, "", "SwinTransformer"], [181, 1, 1, "", "SwinTransformer_V2"], [210, 1, 1, "", "Transformer"], [192, 1, 1, "", "VGGNet"], [197, 1, 1, "", "ViT"], [203, 1, 1, "", "Xception"], [205, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "cvt_13"], [67, 2, 1, "", "cvt_21"], [68, 2, 1, "", "cvt_w24"], [70, 2, 1, "", "densenet_121"], [71, 2, 1, "", "densenet_169"], [72, 2, 1, "", "densenet_201"], [73, 2, 1, "", "densenet_264"], [76, 2, 1, "", "efficientnet_b0"], [77, 2, 1, "", "efficientnet_b1"], [78, 2, 1, "", "efficientnet_b2"], [79, 2, 1, "", "efficientnet_b3"], [80, 2, 1, "", "efficientnet_b4"], [81, 2, 1, "", "efficientnet_b5"], [82, 2, 1, "", "efficientnet_b6"], [83, 2, 1, "", "efficientnet_b7"], [84, 2, 1, "", "efficientnet_v2_l"], [85, 2, 1, "", "efficientnet_v2_m"], [86, 2, 1, "", "efficientnet_v2_s"], [87, 2, 1, "", "efficientnet_v2_xl"], [93, 2, 1, "", "inception_next_atto"], [94, 2, 1, "", "inception_next_base"], [95, 2, 1, "", "inception_next_small"], [96, 2, 1, "", "inception_next_tiny"], [98, 2, 1, "", "inception_resnet_v1"], [99, 2, 1, "", "inception_resnet_v2"], [89, 2, 1, "", "inception_v1"], [90, 2, 1, "", "inception_v3"], [91, 2, 1, "", "inception_v4"], [102, 2, 1, "", "lenet_1"], [103, 2, 1, "", "lenet_4"], [104, 2, 1, "", "lenet_5"], [106, 2, 1, "", "maxvit_base"], [107, 2, 1, "", "maxvit_large"], [108, 2, 1, "", "maxvit_small"], [109, 2, 1, "", "maxvit_tiny"], [110, 2, 1, "", "maxvit_xlarge"], [115, 2, 1, "", "mobilenet"], [116, 2, 1, "", "mobilenet_v2"], [117, 2, 1, "", "mobilenet_v3_large"], [118, 2, 1, "", "mobilenet_v3_small"], [119, 2, 1, "", "mobilenet_v4_conv_large"], [120, 2, 1, "", "mobilenet_v4_conv_medium"], [121, 2, 1, "", "mobilenet_v4_conv_small"], [122, 2, 1, "", "mobilenet_v4_hybrid_large"], [123, 2, 1, "", "mobilenet_v4_hybrid_medium"], [126, 2, 1, "", "pvt_huge"], [127, 2, 1, "", "pvt_large"], [128, 2, 1, "", "pvt_medium"], [129, 2, 1, "", "pvt_small"], [130, 2, 1, "", "pvt_tiny"], [131, 2, 1, "", "pvt_v2_b0"], [132, 2, 1, "", "pvt_v2_b1"], [133, 2, 1, "", "pvt_v2_b2"], [134, 2, 1, "", "pvt_v2_b2_li"], [135, 2, 1, "", "pvt_v2_b3"], [136, 2, 1, "", "pvt_v2_b4"], [137, 2, 1, "", "pvt_v2_b5"], [139, 2, 1, "", "resnest_101"], [140, 2, 1, "", "resnest_14"], [141, 2, 1, "", "resnest_200"], [142, 2, 1, "", "resnest_26"], [143, 2, 1, "", "resnest_269"], [144, 2, 1, "", "resnest_50"], [145, 2, 1, "", "resnest_50_1s4x24d"], [146, 2, 1, "", "resnest_50_4s2x40d"], [148, 2, 1, "", "resnet_1001"], [149, 2, 1, "", "resnet_101"], [150, 2, 1, "", "resnet_152"], [151, 2, 1, "", "resnet_18"], [152, 2, 1, "", "resnet_200"], [153, 2, 1, "", "resnet_269"], [154, 2, 1, "", "resnet_34"], [155, 2, 1, "", "resnet_50"], [159, 2, 1, "", "resnext_101_32x16d"], [160, 2, 1, "", "resnext_101_32x32d"], [161, 2, 1, "", "resnext_101_32x4d"], [162, 2, 1, "", "resnext_101_32x8d"], [163, 2, 1, "", "resnext_101_64x4d"], [164, 2, 1, "", "resnext_50_32x4d"], [166, 2, 1, "", "se_resnet_101"], [167, 2, 1, "", "se_resnet_152"], [168, 2, 1, "", "se_resnet_18"], [169, 2, 1, "", "se_resnet_34"], [170, 2, 1, "", "se_resnet_50"], [171, 2, 1, "", "se_resnext_101_32x4d"], [172, 2, 1, "", "se_resnext_101_32x8d"], [173, 2, 1, "", "se_resnext_101_64x4d"], [174, 2, 1, "", "se_resnext_50_32x4d"], [176, 2, 1, "", "sk_resnet_18"], [177, 2, 1, "", "sk_resnet_34"], [178, 2, 1, "", "sk_resnet_50"], [179, 2, 1, "", "sk_resnext_50_32x4d"], [213, 2, 1, "", "summarize"], [182, 2, 1, "", "swin_base"], [183, 2, 1, "", "swin_large"], [184, 2, 1, "", "swin_small"], [185, 2, 1, "", "swin_tiny"], [186, 2, 1, "", "swin_v2_base"], [187, 2, 1, "", "swin_v2_giant"], [188, 2, 1, "", "swin_v2_huge"], [189, 2, 1, "", "swin_v2_large"], [190, 2, 1, "", "swin_v2_small"], [191, 2, 1, "", "swin_v2_tiny"], [211, 2, 1, "", "transformer_base"], [212, 2, 1, "", "transformer_big"], [193, 2, 1, "", "vggnet_11"], [194, 2, 1, "", "vggnet_13"], [195, 2, 1, "", "vggnet_16"], [196, 2, 1, "", "vggnet_19"], [198, 2, 1, "", "vit_base"], [199, 2, 1, "", "vit_huge"], [200, 2, 1, "", "vit_large"], [201, 2, 1, "", "vit_small"], [202, 2, 1, "", "vit_tiny"], [156, 2, 1, "", "wide_resnet_101"], [157, 2, 1, "", "wide_resnet_50"], [204, 2, 1, "", "xception"], [206, 2, 1, "", "zfnet"]], "lucid.nn": [[348, 1, 1, "", "AdaptiveAvgPool1d"], [349, 1, 1, "", "AdaptiveAvgPool2d"], [350, 1, 1, "", "AdaptiveAvgPool3d"], [318, 1, 1, "", "AlphaDropout"], [351, 1, 1, "", "AvgPool1d"], [352, 1, 1, "", "AvgPool2d"], [353, 1, 1, "", "AvgPool3d"], [333, 1, 1, "", "BCELoss"], [339, 1, 1, "", "BatchNorm1d"], [340, 1, 1, "", "BatchNorm2d"], [341, 1, 1, "", "BatchNorm3d"], [329, 1, 1, "", "Bilinear"], [214, 1, 1, "", "Buffer"], [313, 1, 1, "", "Conv1d"], [314, 1, 1, "", "Conv2d"], [315, 1, 1, "", "Conv3d"], [280, 1, 1, "", "ConvBNReLU1d"], [281, 1, 1, "", "ConvBNReLU2d"], [282, 1, 1, "", "ConvBNReLU3d"], [334, 1, 1, "", "CrossEntropyLoss"], [283, 1, 1, "", "DepthSeparableConv1d"], [284, 1, 1, "", "DepthSeparableConv2d"], [285, 1, 1, "", "DepthSeparableConv3d"], [319, 1, 1, "", "DropBlock"], [320, 1, 1, "", "DropPath"], [321, 1, 1, "", "Dropout"], [322, 1, 1, "", "Dropout1d"], [323, 1, 1, "", "Dropout2d"], [324, 1, 1, "", "Dropout3d"], [297, 1, 1, "", "ELU"], [358, 1, 1, "", "Embedding"], [298, 1, 1, "", "GELU"], [342, 1, 1, "", "GlobalResponseNorm"], [299, 1, 1, "", "HardSigmoid"], [300, 1, 1, "", "HardSwish"], [335, 1, 1, "", "HuberLoss"], [330, 1, 1, "", "Identity"], [343, 1, 1, "", "InstanceNorm1d"], [344, 1, 1, "", "InstanceNorm2d"], [345, 1, 1, "", "InstanceNorm3d"], [346, 1, 1, "", "LayerNorm"], [301, 1, 1, "", "LeakyReLU"], [331, 1, 1, "", "Linear"], [336, 1, 1, "", "MSELoss"], [354, 1, 1, "", "MaxPool1d"], [355, 1, 1, "", "MaxPool2d"], [356, 1, 1, "", "MaxPool3d"], [215, 1, 1, "", "Module"], [217, 1, 1, "", "ModuleDict"], [218, 1, 1, "", "ModuleList"], [310, 1, 1, "", "MultiHeadAttention"], [337, 1, 1, "", "NLLLoss"], [216, 1, 1, "", "Parameter"], [219, 1, 1, "", "ParameterDict"], [220, 1, 1, "", "ParameterList"], [302, 1, 1, "", "ReLU"], [303, 1, 1, "", "ReLU6"], [326, 1, 1, "", "Rearrange"], [304, 1, 1, "", "SELU"], [286, 1, 1, "", "SEModule"], [311, 1, 1, "", "ScaledDotProductAttention"], [287, 1, 1, "", "SelectiveKernel"], [221, 1, 1, "", "Sequential"], [305, 1, 1, "", "Sigmoid"], [306, 1, 1, "", "Softmax"], [307, 1, 1, "", "Swish"], [308, 1, 1, "", "Tanh"], [360, 1, 1, "", "Transformer"], [361, 1, 1, "", "TransformerDecoder"], [362, 1, 1, "", "TransformerDecoderLayer"], [363, 1, 1, "", "TransformerEncoder"], [364, 1, 1, "", "TransformerEncoderLayer"], [316, 1, 1, "", "Unfold"], [366, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[263, 2, 1, "", "adaptive_avg_pool1d"], [264, 2, 1, "", "adaptive_avg_pool2d"], [265, 2, 1, "", "adaptive_avg_pool3d"], [273, 2, 1, "", "affine_grid"], [239, 2, 1, "", "alpha_dropout"], [266, 2, 1, "", "avg_pool1d"], [267, 2, 1, "", "avg_pool2d"], [268, 2, 1, "", "avg_pool3d"], [257, 2, 1, "", "batch_norm"], [248, 2, 1, "", "bilinear"], [251, 2, 1, "", "binary_cross_entropy"], [234, 2, 1, "", "conv1d"], [235, 2, 1, "", "conv2d"], [236, 2, 1, "", "conv3d"], [252, 2, 1, "", "cross_entropy"], [240, 2, 1, "", "drop_block"], [241, 2, 1, "", "drop_path"], [242, 2, 1, "", "dropout"], [243, 2, 1, "", "dropout1d"], [244, 2, 1, "", "dropout2d"], [245, 2, 1, "", "dropout3d"], [223, 2, 1, "", "elu"], [276, 2, 1, "", "embedding"], [224, 2, 1, "", "gelu"], [258, 2, 1, "", "global_response_norm"], [274, 2, 1, "", "grid_sample"], [253, 2, 1, "", "huber_loss"], [260, 2, 1, "", "instance_norm"], [278, 2, 1, "", "interpolate"], [261, 2, 1, "", "layer_norm"], [226, 2, 1, "", "leaky_relu"], [250, 2, 1, "", "linear"], [270, 2, 1, "", "max_pool1d"], [271, 2, 1, "", "max_pool2d"], [272, 2, 1, "", "max_pool3d"], [255, 2, 1, "", "mse_loss"], [256, 2, 1, "", "nll_loss"], [262, 2, 1, "", "normalize"], [227, 2, 1, "", "relu"], [279, 2, 1, "", "rotate"], [233, 2, 1, "", "scaled_dot_product_attention"], [228, 2, 1, "", "selu"], [229, 2, 1, "", "sigmoid"], [230, 2, 1, "", "softmax"], [231, 2, 1, "", "tanh"], [238, 2, 1, "", "unfold"]], "lucid.nn.init": [[289, 2, 1, "", "constant"], [291, 2, 1, "", "kaiming_normal"], [292, 2, 1, "", "kaiming_uniform"], [293, 2, 1, "", "normal"], [294, 2, 1, "", "uniform"], [295, 2, 1, "", "xavier_normal"], [296, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[381, 1, 1, "", "ASGD"], [382, 1, 1, "", "Adadelta"], [383, 1, 1, "", "Adagrad"], [384, 1, 1, "", "Adam"], [385, 1, 1, "", "AdamW"], [386, 1, 1, "", "Adamax"], [387, 1, 1, "", "NAdam"], [369, 1, 1, "", "Optimizer"], [388, 1, 1, "", "RAdam"], [389, 1, 1, "", "RMSprop"], [390, 1, 1, "", "Rprop"], [391, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[371, 1, 1, "", "CosineAnnealingLR"], [372, 1, 1, "", "CyclicLR"], [373, 1, 1, "", "ExponentialLR"], [374, 1, 1, "", "LRScheduler"], [375, 1, 1, "", "LambdaLR"], [376, 1, 1, "", "MultiStepLR"], [377, 1, 1, "", "ReduceLROnPlateau"], [378, 1, 1, "", "StepLR"]], "lucid.random": [[399, 2, 1, "", "bernoulli"], [401, 2, 1, "", "rand"], [402, 2, 1, "", "randint"], [403, 2, 1, "", "randn"], [404, 2, 1, "", "seed"], [405, 2, 1, "", "uniform"]], "lucid.transforms": [[497, 1, 1, "", "CenterCrop"], [495, 1, 1, "", "Compose"], [498, 1, 1, "", "Normalize"], [499, 1, 1, "", "RandomCrop"], [500, 1, 1, "", "RandomGrayscale"], [501, 1, 1, "", "RandomHorizontalFlip"], [502, 1, 1, "", "RandomRotation"], [503, 1, 1, "", "RandomVerticalFlip"], [504, 1, 1, "", "Resize"], [496, 1, 1, "", "ToTensor"]], "lucid.types": [[393, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 86, 100, 105, 117, 118, 123, 127, 139, 140, 141, 142, 143, 144, 197, 201, 210, 213, 214, 215, 216, 217, 219, 220, 221, 233, 263, 264, 265, 287, 311, 316, 334, 337, 348, 349, 350, 351, 354, 355, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 393, 396, 398, 407, 412, 421, 447, 456, 457, 460, 462, 463, 481, 484, 496, 498, 506], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 84, 85, 86, 87, 90, 92, 97, 100, 101, 105, 115, 124, 125, 126, 127, 128, 129, 130, 165, 180, 181, 197, 210, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506], "000": [5, 6, 7, 8, 100, 132, 187, 211, 212, 422, 423], "0000": [334, 335, 337], "0001": [377, 381], "000e": [422, 423], "001": [372, 381, 384, 385, 387, 388, 391], "002": [386, 387], "003": [100, 129], "004": 387, "005": 301, "006": 372, "008": [57, 100, 115], "00808": 100, "009": [100, 132], "00b": 100, "01": [16, 226, 301, 369, 371, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391], "01051757": 403, "011": [38, 100], "013": [72, 100], "014": [64, 100], "016": [100, 148], "01697": 100, "01b": 100, "0205": 334, "0217": 334, "0227": 334, "024": [100, 110, 121, 170], "025": [62, 100], "026": [100, 159], "028": [100, 164], "0299": 334, "02b": 100, "032": [84, 100, 155], "03545": 100, "03b": 100, "044715": [224, 298], "0450": 334, "0451": 334, "046": [82, 100], "047": [100, 194], "04719755": 434, "0474259": 229, "048": [100, 129, 172], "0480": 334, "04861": 100, "04b": 100, "05": [257, 260, 261, 280, 281, 282, 301, 339, 340, 341, 343, 344, 345, 346, 360, 362, 364], "050": [100, 201], "0507": [228, 304], "05m": 100, "06": [40, 92, 258, 342, 382, 390], "066": [52, 100], "069": [100, 142, 153], "06m": 100, "07": [240, 251, 252, 319, 333, 334], "070": [100, 123], "0700": 334, "0706508": 308, "071": [100, 148], "072": [100, 136], "0721": 334, "073": [100, 178], "07722396": 307, "0794": 337, "08": [377, 384, 385, 386, 387, 388, 389], "0802": 337, "081": [100, 109], "083": [96, 100], "08333333": 25, "085537": 442, "088": [100, 170], "08955": 100, "08b": 100, "08m": 100, "0900": [306, 334], "096": [34, 100, 204], "0986": [230, 306], "09861229": 444, "09883": 100, "0992": 334, "09b": 100, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 197, 203, 205, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 100, 101, 102, 103, 104, 105, 126, 139, 140, 141, 142, 143, 144, 145, 146, 192, 205, 206, 213, 217, 218, 221, 235, 236, 248, 250, 263, 310, 313, 314, 315, 323, 324, 329, 331, 340, 341, 344, 348, 352, 353, 355, 360, 361, 362, 363, 364, 370, 373, 375, 376, 377, 383, 398, 402, 405, 406, 409, 412, 415, 416, 427, 436, 450, 456, 464, 469, 470, 487, 494, 497, 499, 500, 502], "100": [6, 16, 30, 55, 84, 85, 86, 87, 100, 193, 194, 195, 196, 371, 398, 506], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "1000000": 381, "1001": [100, 148, 334], "1003": 334, "1007": 100, "10096": 100, "101": [100, 138, 139, 149, 156, 159, 160, 161, 162, 163, 166, 171, 172, 173], "10106": 100, "1014": 228, "102": [100, 153], "1024": [16, 34, 39, 68, 212, 326], "1025": [218, 221], "1026": [218, 221], "1027": [218, 221], "10499": 229, "105": [62, 100], "1050": 305, "1054": 337, "1056": [218, 221], "10590": 100, "106": [100, 190], "107": [39, 100], "108": [85, 100], "1097": 100, "11": [11, 100, 123, 151, 168, 192, 193, 248, 313, 314, 315, 323, 329, 340, 341, 344, 352, 353, 355, 412, 497, 498, 499, 500, 502], "110": [100, 143], "1105": 100, "1109": 100, "111": [78, 100], "1111": 333, "112": [100, 117, 144], "1134": 248, "114b": 500, "119": [100, 248], "1192": [229, 230, 306], "12": [20, 25, 36, 37, 55, 62, 68, 69, 70, 71, 72, 73, 79, 100, 102, 103, 126, 130, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 197, 211, 212, 219, 248, 262, 265, 313, 314, 315, 323, 324, 329, 340, 341, 344, 350, 352, 353, 355, 412, 416, 417, 497, 499, 500, 502], "120": [84, 100, 101, 104, 117, 118], "12000": [211, 212], "121": [69, 70, 100], "12122": 100, "123": [291, 292, 293, 294, 295, 296, 404, 405], "124": [37, 100, 291, 292, 295, 296], "125": 353, "1250": 335, "1251": 100, "1258": 100, "126": [100, 156], "128": [16, 31, 34, 40, 45, 60, 61, 82, 98, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 156, 157, 182, 192, 221, 287, 495, 506], "1280": [37, 113], "128x128": [495, 506], "12b": 100, "13": [66, 89, 100, 192, 194, 248, 313, 314, 315, 329, 341, 352, 353, 355, 412, 497, 499, 500, 502], "1314": 100, "132": [100, 193], "1324": 100, "133": [100, 194], "136": [86, 100, 123], "138": [100, 195], "13b": 100, "13k": 100, "14": [33, 34, 35, 71, 100, 106, 107, 110, 132, 140, 313, 314, 315, 323, 324, 329, 341, 352, 353, 355, 412, 416, 425, 450, 497, 499, 500, 502], "14030": 100, "1409": 100, "1415": 450, "143": [100, 196], "144": 118, "145": 248, "148": [44, 100], "14899": 100, "149": [71, 100, 148], "14b": 100, "15": [0, 11, 51, 56, 57, 100, 248, 313, 314, 315, 329, 341, 352, 353, 355, 412, 416, 460, 497, 499, 500, 502, 506], "1513": 337, "152": [100, 122, 150, 167], "1536": [35, 36, 38, 110], "155": 412, "1556": 100, "156": [93, 100], "157": [35, 100], "1588": [224, 298], "15b": 100, "15m": 100, "16": [55, 67, 68, 69, 70, 100, 101, 104, 113, 117, 118, 124, 159, 165, 182, 186, 192, 195, 197, 198, 199, 200, 201, 202, 218, 219, 221, 233, 264, 265, 280, 281, 282, 286, 287, 310, 311, 313, 314, 315, 323, 324, 326, 329, 340, 341, 349, 350, 352, 353, 355, 360, 361, 362, 363, 364, 368, 412, 416, 454, 497, 499, 500, 502], "160": [100, 117, 131, 149], "16227766": 26, "16425": 337, "1643": 333, "166": 412, "167": [100, 300], "169": [69, 71, 100], "16b": 100, "16x16": 100, "17": [100, 142, 313, 314, 315, 329, 341, 353, 411, 497, 499, 500, 502], "170": 248, "1704": 100, "171": [100, 107], "174": [32, 100], "17520119": 453, "177": [100, 161], "17b": 100, "18": [58, 59, 100, 103, 128, 135, 151, 168, 176, 182, 183, 184, 186, 187, 188, 189, 190, 313, 314, 315, 323, 329, 341, 353, 415, 416, 497, 499, 500, 502], "1800": 334, "182": 100, "184": 117, "187": [100, 107], "18877099": 307, "189": 100, "19": [11, 66, 80, 100, 192, 196, 235, 236, 248, 314, 315, 341, 410, 412, 419], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 66, 67, 68, 92, 100, 102, 103, 106, 107, 108, 110, 130, 150, 183], "194": [100, 159], "196": [54, 68, 100, 183, 189], "1966": [230, 305, 306], "197": [43, 50, 100], "198": [100, 117], "199": [100, 199], "1998": [100, 334], "19b": 100, "1_53": 100, "1d": [234, 263, 266, 270, 280, 283, 316, 339, 343, 348, 401, 405, 412, 421, 460, 469, 470, 475, 477, 478, 479, 486, 491], "1e": [20, 25, 40, 92, 131, 132, 133, 135, 136, 137, 240, 251, 252, 257, 258, 260, 261, 262, 280, 281, 282, 319, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 360, 362, 364, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "1e6": 381, "1s4x24d": 145, "1st": [29, 205], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 66, 68, 74, 75, 84, 85, 86, 87, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 151, 168, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 205, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 366, 368, 371, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "20": [0, 5, 6, 7, 8, 68, 72, 100, 217, 218, 221, 314, 315, 323, 341, 361, 362, 370, 374, 376, 378, 416, 442, 494], "200": [100, 117, 141, 152], "2004": 100, "201": [72, 100, 141], "2011": 286, "2012": 100, "2014": 100, "2015": 100, "2016": 100, "2017": [100, 209, 360], "2018": [100, 286], "2019": 100, "2020": 100, "2021": 100, "2022": 100, "2023": [100, 286], "2024": 100, "2039": 337, "204": 315, "2048": [37, 38, 39, 210, 360, 362, 364], "209": [57, 100], "20b": 100, "21": [67, 86, 100, 154, 169, 219, 248, 314, 315, 341, 416], "210": [87, 100], "2102": 100, "2103": 100, "211": 412, "2111": 100, "213": [209, 212], "21841": [49, 54], "21m": 100, "22": [11, 98, 100, 134, 201, 204, 248, 314, 315, 323, 341, 410, 412], "2201": 100, "2204": 100, "221": [87, 100], "2231": [334, 337], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 105, 106, 107, 108, 109, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 205], "2247": [339, 340, 341, 343, 344, 345, 346], "224x224": [74, 89, 171, 172, 173, 174, 179], "226": 412, "22752314": 403, "2278": 100, "22b": 100, "23": [100, 129, 139, 149, 156, 159, 160, 161, 162, 163, 166, 314, 315, 341, 450], "2301": 100, "232": [62, 100, 115, 173], "2324": [100, 304], "233": [48, 100], "234": [291, 292, 293, 294, 295, 296, 405], "2345": 450, "235": [79, 100], "237": [209, 212], "238": [100, 118, 135], "23840584": 307, "23b": 100, "24": [69, 70, 113, 117, 118, 141, 145, 152, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 248, 264, 314, 315, 323, 341, 349, 416, 419], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100, 117, 118, 196], "240x240": 74, "2424": [230, 306], "2447": 306, "246": [100, 102], "24d": 145, "25": [0, 100, 109, 133, 145, 155, 164, 176, 229, 241, 305, 315, 336, 341, 352, 353, 409, 427, 449, 462], "2500": [333, 335, 337], "2512": 297, "2547": 304, "256": [31, 34, 37, 39, 40, 55, 60, 61, 105, 109, 124, 125, 126, 131, 147, 192], "258": [100, 184], "25m": 100, "26": [63, 100, 142, 219, 250, 315, 331, 341, 416], "260": 100, "260x260": 74, "26325684": 403, "264": [73, 100], "265": 100, "266": [59, 100], "2689": [230, 305, 306], "26894142": 307, "269": [100, 143, 153], "27": [32, 56, 100, 127, 136, 144, 174, 248, 313, 315, 341, 441], "271": [58, 100], "272": [63, 100, 163], "274": [100, 139, 179], "276": [291, 292, 295, 296], "277": [36, 68, 100], "27b": 100, "28": [36, 37, 45, 53, 57, 96, 100, 102, 103, 170, 185, 191, 248, 315, 416], "280": [52, 100], "286": [100, 126], "288": [100, 118, 141, 185], "289": [49, 76, 100], "28x28": [7, 8, 102, 103], "29": [100, 179, 315], "293": 100, "296": [60, 100], "299": [100, 203], "299r": 500, "299x299": [90, 91, 98, 99], "29b": 100, "2_i": [343, 344, 345], "2c": 372, "2d": [235, 244, 264, 267, 271, 273, 281, 284, 340, 344, 349, 412, 421, 424, 457, 460, 468, 470, 471, 475, 476, 477, 479, 486, 502], "2e": 386, "2nd": [29, 205], "2x": 146, "2x2": [238, 497, 499], "2x3": 273, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 102, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 190, 191, 192, 197, 203, 205, 214, 215, 216, 218, 219, 220, 221, 224, 229, 230, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 366, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504], "30": [81, 90, 100, 143, 146, 153, 218, 279, 315, 372, 376, 377, 494, 502], "300": 100, "300x300": 74, "301": [36, 100], "302": [85, 100], "3026": 337, "304": [100, 108, 200], "3072": [39, 197], "308": [100, 189], "30823025": 307, "31": [67, 100, 248, 315, 412], "310": [422, 423], "31622777": 26, "319": 100, "31b": 100, "32": [11, 16, 31, 55, 69, 71, 72, 100, 104, 105, 119, 131, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 164, 182, 186, 218, 221, 248, 250, 264, 280, 281, 282, 286, 287, 314, 315, 326, 331, 349, 368, 393, 410, 411, 416], "320": [100, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 142], "321": [291, 292, 295, 296], "326": [100, 166, 200], "32b": 100, "32m": 100, "32x16d": 100, "32x32": [5, 6, 101, 104], "32x32d": 100, "32x4d": [100, 171, 174, 179], "32x8d": [100, 172], "33": [73, 100, 218, 221, 250, 315, 331], "330": [33, 100], "3333": 262, "33333333": 25, "336": [38, 43, 100, 162, 193], "337": [73, 100], "33b": 100, "34": [100, 154, 169, 177, 218, 221, 248, 315, 412, 416], "342": [291, 292, 295, 296], "344": [80, 100], "345": [291, 292, 293, 294, 295, 296, 405], "349": [100, 191], "34b": 100, "35": [99, 100, 218, 221, 315], "350": [54, 100], "352": [89, 100], "354": [100, 185], "355": [83, 100], "3567": [333, 337], "357": [100, 195, 206], "359": [100, 127], "35b": 100, "36": [100, 141, 150, 152, 167, 315], "362": [100, 133], "364": 100, "367": 100, "3679": [223, 228, 297], "368": [100, 176, 178], "36b": 100, "36th": 100, "37": [100, 122, 313], "370": [78, 100], "372": 248, "375": 336, "3750": 335, "37754067": 307, "378": [100, 103], "37b": 100, "38": 100, "380": 100, "380x380": 74, "383": [100, 110], "38344152": 401, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 66, 67, 92, 100, 106, 107, 108, 110], "38629436": 444, "389056": 442, "38b": 100, "38th": 100, "392": [68, 90, 100], "393": [81, 89, 100], "3935": 297, "3965": 100, "3977": 100, "39b": 100, "39m": 100, "3d": [236, 245, 265, 268, 272, 282, 285, 315, 316, 341, 345, 350], "3x3": [100, 316, 406], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 67, 69, 74, 92, 93, 100, 101, 102, 103, 105, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 169, 170, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 213, 219, 221, 233, 234, 235, 236, 238, 240, 241, 243, 244, 245, 248, 250, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 283, 284, 285, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 366, 377, 381, 384, 388, 389, 391, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 426, 429, 431, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504], "40": [91, 100, 113, 117, 118, 137, 146, 376, 494], "400": [46, 100, 104, 186, 199], "4044": 333, "4076": 334, "408": [58, 100], "4096": [29, 205], "40b": 100, "40d": 146, "41": [100, 128], "41421356": 18, "415": 100, "416": [100, 109, 153, 171, 202], "41666667": 25, "417": [100, 146], "41808962": 403, "419974": 231, "4199743": 308, "41b": 100, "42": [38, 39, 187, 248, 286, 406], "421": [291, 292, 295, 296], "423": [291, 292, 293, 294], "424": 100, "42718872": 26, "4278": 100, "4284": 100, "4286": [262, 333], "42b": 100, "43": [11, 58, 82, 100, 410, 412, 419], "431": [95, 100], "432": [81, 100], "4323": 297, "4375": 335, "43758721": 401, "43b": 100, "44": [59, 100, 149, 161], "440": [86, 100], "4472": 262, "4472136": 20, "448": [58, 59, 83, 100], "4495": [341, 345], "45": [100, 135, 177, 248, 279, 502], "4510": 100, "4520": 100, "4545": 318, "455": [100, 163], "456": 100, "456x456": 74, "457": [100, 130], "45b": 100, "46": [44, 100], "463": 100, "464": [42, 56, 100, 146], "468": [100, 160], "46b": 100, "4700": 100, "4708": 100, "47112767": 436, "472": [100, 160, 209, 212], "476": [100, 183], "47b": 100, "48": [69, 72, 73, 100, 118, 139, 143, 153, 171, 183, 187, 188, 189, 250, 331], "480": [66, 71, 100, 117], "481": [100, 117], "483": [100, 144], "48b": 100, "48m": 100, "49": [95, 100, 166, 184, 190], "492": [100, 128], "496": [53, 100], "4979": 297, "49b": 100, "49k": 100, "4s2x40d": [100, 146], "4x": 145, "4x4": 504, "5": [1, 2, 11, 13, 14, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 74, 76, 90, 100, 101, 102, 103, 104, 105, 108, 109, 113, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 175, 176, 177, 178, 202, 205, 213, 215, 216, 217, 218, 219, 221, 224, 229, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 253, 255, 257, 260, 261, 263, 266, 267, 273, 274, 276, 278, 280, 281, 282, 287, 289, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 351, 352, 353, 355, 356, 360, 362, 364, 370, 372, 374, 376, 377, 378, 390, 396, 399, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 427, 429, 431, 433, 434, 435, 446, 447, 448, 449, 451, 456, 457, 460, 461, 462, 463, 469, 470, 471, 472, 475, 480, 481, 482, 483, 487, 488, 489, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "50": [5, 6, 11, 100, 138, 144, 145, 146, 147, 155, 157, 164, 170, 174, 178, 179, 250, 331, 371, 390, 410, 412, 427, 500, 501, 503, 506], "5000": [210, 333, 335, 337], "504": [100, 116], "50_1s4x24d": 100, "50b": 100, "510": 100, "5108": 337, "512": [31, 34, 37, 39, 40, 55, 99, 100, 105, 109, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 151, 177, 210, 211, 310, 360, 361, 362, 363, 364], "516": [34, 100], "519": 100, "51b": 100, "520": [93, 100], "52359878": 435, "528": [56, 100], "528x528": 74, "52b": 100, "53": [33, 100, 248, 411], "530": [100, 160], "531": 100, "532": [100, 183], "536": [79, 100], "537": [100, 118], "543": [291, 292, 293, 294, 295, 296, 405], "54308063": 440, "544": [95, 100, 195, 209, 211], "545": 417, "5455": 318, "549": [100, 149], "54b": 100, "55": [85, 100, 108, 127], "553": [60, 100, 134], "556": [100, 136], "557": [100, 155], "558": [38, 100], "559": [100, 174], "55b": 100, "560": [77, 100, 140], "563": [291, 292, 295, 296], "564": [100, 187], "567": [100, 198], "5672": 100, "568": [87, 100], "5683": 100, "569": [100, 172], "57": [100, 178, 248], "57079633": [434, 435], "5714": 262, "5720": 100, "5730": 100, "57366333": 404, "576": 118, "57b": 100, "582": 100, "584": [100, 209, 211], "5849625": 445, "586": [91, 100], "587g": 500, "589": [45, 100], "590": [100, 119], "591": [42, 100], "592": [61, 100, 168], "5987": 100, "5995": 100, "5998": 209, "59b": 100, "5th": [29, 205], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 66, 67, 69, 70, 71, 72, 73, 74, 92, 100, 101, 104, 106, 107, 110, 124, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 147, 154, 155, 157, 164, 169, 170, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 205, 210, 219, 220, 234, 235, 236, 238, 240, 245, 248, 250, 258, 262, 263, 273, 274, 276, 292, 296, 299, 303, 313, 314, 315, 316, 319, 321, 322, 323, 324, 329, 331, 333, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 353, 355, 356, 360, 361, 363, 382, 390, 396, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 431, 446, 447, 448, 456, 457, 460, 461, 462, 463, 466, 472, 479, 480, 481, 482, 483, 488, 489, 490, 493, 496, 497, 498, 499, 500, 502, 504], "60": [5, 6, 100, 126, 150, 419], "600": [74, 100], "6008": 209, "600x600": 74, "6052": 337, "606": [100, 184], "6065": 297, "608": [37, 100, 206], "60b": 100, "61": [30, 100, 104], "6105": 100, "611": [100, 140], "6114": 100, "6124": [339, 340, 341, 343, 344, 345, 346], "617": [84, 100], "62": [100, 136, 206, 209, 211, 248], "622": [67, 100], "623": [51, 100], "626": [100, 106], "62686041": 453, "62b": 100, "630": 100, "632": [36, 100, 199, 200], "6321": [223, 297], "63245553": 26, "635": [53, 100], "636": [76, 100], "63b": 100, "64": [31, 40, 66, 67, 69, 73, 100, 105, 106, 107, 108, 109, 113, 117, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 152, 163, 175, 192, 218, 221, 248, 286, 287, 393], "640": [49, 80, 100], "641": 100, "645": 100, "64589411": 401, "647": [100, 176], "648": [100, 128], "64b": 100, "64x4d": [100, 173], "654": [291, 292, 293, 294, 295, 296, 405], "656": [35, 100, 198], "657": [100, 188, 291, 292, 295, 296], "6590": [230, 306], "65b": 100, "66": [83, 100, 167], "660": [49, 100], "664": [100, 201], "6652": 306, "666": [100, 131], "66666667": 25, "6667": [262, 333], "667": [100, 196], "668": [100, 188], "6682": 333, "669": [100, 152], "66b": 100, "67": 412, "672": [100, 117, 154], "67326": 304, "6733": 228, "676": [100, 145], "677": 100, "678": [291, 292, 293, 294, 295, 296], "67b": 100, "67m": 100, "688": [39, 100], "68811989": 403, "689": [100, 151], "68b": 100, "69314718": 444, "696": [67, 100, 135, 156], "69b": 100, "7": [10, 11, 14, 24, 39, 58, 59, 64, 70, 77, 100, 105, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 192, 219, 234, 235, 236, 238, 240, 245, 248, 250, 251, 252, 263, 273, 274, 276, 287, 298, 303, 304, 305, 308, 313, 314, 315, 316, 319, 323, 324, 329, 331, 333, 334, 336, 340, 341, 344, 345, 348, 352, 353, 355, 356, 399, 402, 405, 408, 410, 411, 412, 416, 418, 419, 421, 425, 427, 442, 447, 456, 457, 460, 461, 462, 471, 483, 486, 488, 489, 496, 497, 498, 499, 500, 502, 504], "70": [7, 8, 100, 141], "7001": 334, "704": [73, 100, 161], "706": [100, 104, 126], "70710678": [20, 452], "708": [46, 100], "70b": 100, "7132": 100, "7141": 100, "7147": 337, "715": [100, 120], "717": [47, 100, 202], "7182": 450, "7182818": 442, "71b": 100, "72": [113, 117, 118, 450], "726791": 100, "72b": 100, "73": 100, "731": [100, 190], "7311": [230, 305, 306], "734": [100, 110], "739": [98, 100], "73b": 100, "74": 412, "745": [100, 189], "748": [94, 100], "74b": 100, "75": [250, 331, 336, 381, 427], "755": [100, 122], "757": [100, 108], "7581": 228, "75b": 100, "760": [100, 131, 139, 179], "76159416": [307, 459], "7616": [231, 308], "76219569": 440, "7635": 304, "767": [43, 100], "768": [32, 33, 35, 36, 38, 40, 41, 62, 68, 92, 100, 106, 107, 108, 110, 126, 182, 197], "770": [37, 100], "772": 417, "774": [100, 121], "776": [61, 100, 106], "778": [100, 168], "77b": 100, "78": [100, 157], "78357324": 403, "784": 16, "78539816": 436, "789": 100, "78b": 100, "790": [35, 100], "791": [100, 162], "79172504": 401, "792": [100, 159], "795": [77, 100], "796": [100, 188], "797": [100, 154], "79b": 100, "7x7": 205, "8": [11, 23, 27, 38, 39, 55, 60, 61, 69, 74, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 147, 150, 153, 159, 160, 161, 162, 163, 164, 167, 176, 177, 178, 182, 186, 210, 213, 218, 219, 221, 233, 234, 235, 236, 238, 240, 245, 248, 250, 251, 262, 263, 264, 265, 273, 274, 276, 280, 281, 282, 286, 298, 299, 304, 305, 308, 310, 311, 313, 314, 315, 316, 319, 321, 322, 323, 324, 329, 331, 333, 336, 340, 341, 344, 345, 348, 349, 350, 352, 353, 355, 356, 360, 361, 362, 363, 364, 377, 384, 385, 386, 387, 388, 389, 399, 402, 409, 410, 411, 412, 416, 417, 419, 420, 421, 437, 441, 447, 456, 457, 460, 461, 462, 471, 483, 487, 488, 489, 496, 497, 498, 499, 500, 502, 504], "80": [5, 6, 7, 8, 117], "800": [47, 51, 64, 100], "8005": 334, "808": [100, 150], "80b": 100, "817": [90, 100], "818": 100, "8182": 318, "81b": 100, "82": [34, 100, 137, 248], "821": [100, 167], "82b": 100, "83": [100, 163], "832": [96, 100], "833": 100, "83b": 100, "84": [101, 103, 104], "840": [30, 50, 94, 100], "8413": [224, 298], "842": [100, 191], "847": [99, 100], "848": [100, 127, 167, 194], "849": 100, "84b": 100, "856": [63, 70, 100, 133], "85772238": 307, "8584": 304, "85b": 100, "86": [94, 100, 198], "862": [100, 204], "863": [100, 193], "864": [100, 119, 152], "868": [100, 169], "869": [100, 187], "87": [100, 182, 186], "872": [100, 116, 145, 166], "876": [291, 292, 295, 296, 405], "87m": 100, "88": [42, 47, 100, 118, 162, 173], "880": [100, 107], "8808": [230, 305, 306], "882": [100, 137], "884": [44, 100], "886": [100, 156], "887": 417, "88m": 100, "891773": 401, "893": 100, "8944": 262, "89442719": 20, "895": [100, 177], "896": [100, 174], "89b": 100, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 78, 92, 100, 120, 235, 238, 240, 248, 250, 263, 273, 276, 313, 314, 315, 316, 319, 323, 329, 331, 333, 340, 341, 344, 348, 352, 353, 355, 370, 373, 381, 382, 384, 385, 386, 387, 388, 389, 391, 399, 402, 405, 408, 412, 416, 417, 418, 421, 426, 443, 454, 455, 464, 487, 488, 489, 496, 497, 498, 499, 500, 502], "904": [100, 164], "90709145": 404, "9091": 318, "9120": 337, "9163": 337, "91m": 100, "920": [100, 126], "922": [100, 186], "928": [72, 100], "929": [100, 143], "92b": 100, "93": [100, 172], "93b": 100, "93k": 100, "94": 148, "944": [32, 100], "9486833": 26, "949e": [422, 423], "94b": 100, "95": 375, "9526": 229, "9545": 298, "955": [100, 171], "956": [50, 100], "958": [100, 169], "95b": 100, "96": [32, 33, 40, 41, 64, 92, 100, 105, 106, 107, 108, 118, 180, 181], "960": 117, "96366276": 401, "9640": 308, "96402758": 459, "968": [54, 100], "973": [100, 157], "976": [59, 100], "978": [39, 70, 100], "97b": 100, "984": [91, 100, 137, 173], "98b": 100, "99": 389, "9957": 337, "997": [66, 100], "99734545": 404, "999": [0, 384, 385, 386, 387, 388], "99b": 100, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 66, 67, 68, 75, 97, 100, 101, 111, 114, 124, 126, 127, 128, 129, 130, 138, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 215, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 248, 250, 251, 252, 256, 257, 258, 260, 261, 262, 273, 274, 278, 287, 311, 318, 319, 321, 322, 323, 324, 326, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 361, 362, 363, 364, 368, 369, 370, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 399, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502], "As": 404, "At": [16, 366, 377], "Be": [0, 10], "By": [0, 2, 3, 16, 114, 121, 148, 149, 150, 151, 152, 153, 154, 155, 216, 279, 368, 388, 396, 399, 401, 402, 403, 405, 496, 506], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 119, 120, 121, 123, 221, 223, 224, 226, 227, 228, 229, 231, 248, 250, 262, 278, 291, 292, 295, 296, 304, 313, 314, 315, 316, 329, 331, 339, 340, 341, 343, 344, 345, 368, 380, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 442, 444, 445, 446, 447, 448, 452, 454, 456, 457, 460, 461, 462, 464, 477, 479, 484, 486, 490, 492, 506], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 147, 213, 215, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 231, 233, 234, 235, 236, 241, 245, 248, 250, 257, 260, 264, 265, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 292, 310, 311, 313, 314, 315, 320, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 389, 390, 393, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 492, 493, 496, 500, 501, 503, 504], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 70, 71, 72, 73, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 115, 123, 128, 135, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 181, 188, 190, 192, 204, 207, 209, 215, 217, 218, 219, 220, 221, 241, 245, 248, 274, 276, 278, 279, 280, 281, 282, 286, 298, 299, 302, 303, 308, 310, 311, 320, 326, 329, 330, 333, 334, 335, 336, 337, 348, 349, 350, 358, 360, 361, 363, 366, 368, 369, 380, 381, 387, 389, 390, 391, 393, 396, 397, 404, 407, 408, 409, 410, 413, 414, 415, 417, 418, 427, 446, 448, 464, 467, 472, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 490, 491, 493, 495, 496], "Its": [11, 27, 406], "Near": 25, "No": [238, 241, 394], "Not": [274, 330], "One": [11, 102, 506], "Such": 407, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "Then": 419, "There": 480, "These": [4, 10, 17, 20, 23, 26, 28, 31, 84, 85, 86, 87, 105, 110, 119, 120, 121, 122, 123, 126, 156, 157, 176, 177, 178, 204, 207, 318, 321, 322, 323, 324, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 390, 406, 506], "To": [3, 16, 100, 208, 209, 370, 380, 399, 403, 406, 422, 423, 475, 491, 506], "With": [3, 100, 132, 136, 238, 241, 425, 426, 496, 506], "_": [13, 14, 15, 23, 217, 218, 220, 221, 223, 224, 226, 227, 228, 229, 231, 250, 273, 276, 278, 326, 340, 341, 343, 344, 345, 351, 352, 353, 354, 355, 356, 358, 381, 382, 384, 385, 386, 387, 389, 391, 410, 411, 412, 416, 460, 461, 488, 489, 490, 497, 498, 499, 501, 502, 503], "_1": [20, 217, 218, 219, 220, 221, 248, 329, 416, 467, 472, 493], "_2": [20, 217, 218, 219, 220, 221, 248, 329, 416, 467, 472, 493], "__call__": [1, 215, 397], "__enter__": 397, "__exit__": 397, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 138, 192, 205, 213, 214, 215, 216, 217, 218, 219, 220, 241, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 326, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 398, 407, 495, 496], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 369, "__setattr__": 215, "_a": 419, "_activ": 230, "_arraylik": [421, 423, 426, 429, 431], "_arraylikeint": 477, "_arrayorscalar": [214, 216, 399, 407, 463], "_b": 419, "_backward_op": 16, "_base_activ": 101, "_base_dtyp": [422, 427], "_block": 319, "_builtinnumer": [407, 425, 426], "_c": 498, "_decai": 387, "_devicetyp": [399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "_dtype_bit": 393, "_einopspattern": [13, 14, 15, 326], "_fanmod": [291, 292], "_grad_en": 395, "_i": [20, 24, 230, 241, 248, 306, 320, 336, 339, 346, 351, 354, 407, 410, 411, 413, 414, 416, 417, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 447, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 467, 472, 479, 484, 487, 490, 492, 493], "_in": [291, 292, 295, 296], "_interpolatetyp": [274, 366], "_j": [230, 306, 351, 354, 416, 447, 456, 461, 462], "_k": 485, "_layer": [361, 363], "_left": 278, "_make_lay": 192, "_mlphead": 92, "_mlx_dtype": 393, "_mlxarrai": 407, "_modul": 215, "_n": [20, 217, 218, 219, 220, 221, 273, 467, 472, 493], "_nograd": 397, "_np_dtype": 393, "_out": [291, 292, 295, 296, 479, 486], "_p": [24, 262, 276, 358], "_pad": 477, "_paddingstr": [280, 281, 282, 283, 284, 285, 313, 314, 315], "_paddingtyp": 274, "_paramet": 215, "_reducestr": 14, "_reductiontyp": [251, 252, 253, 255, 256, 333, 334, 335, 336, 337], "_resnestbottleneck": 138, "_right": 278, "_scalar": [233, 289, 293, 294, 295, 296, 311, 420, 425, 426, 427, 438, 474], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [166, 167, 170], "_seresnetmodul": [168, 169], "_shapelik": [213, 261, 346, 401, 402, 425, 428, 430, 465, 480, 484, 492], "_size": [263, 264, 265, 319], "_skresnetmodul": [176, 177, 178], "_slope": 301, "_sortkind": 464, "_statedict": 369, "_t": [388, 389], "_tensor": [310, 360, 362, 364], "_tensorop": 407, "_u": 25, "_util": 490, "_v": 25, "_valu": [438, 477], "_weight": 358, "_width": 477, "a_": [11, 31, 362], "a_1": [310, 483], "a_2": 483, "a_h": 310, "a_i": [310, 413, 414, 417, 483], "a_k": 483, "aaai": 100, "ab": [377, 432], "abc": [2, 369], "abil": [100, 506], "about": [10, 213], "abov": [395, 404, 421, 424, 488], "abs_pos_emb": [180, 181], "absolut": [23, 24, 31, 180, 181, 253, 377, 386, 433], "abstract": [2, 3, 126, 128, 368, 369, 380, 381, 389, 391, 393], "abstractmethod": 369, "abund": [49, 122], "acceler": [100, 304, 339, 340, 341, 372, 381, 387, 389, 391, 407], "accept": [330, 464], "access": [0, 2, 3, 4, 5, 6, 7, 8, 159, 160, 161, 162, 163, 164, 214, 216, 217, 218, 219, 220, 221, 394, 480], "accord": [11, 13, 15, 241, 274, 278, 313, 314, 315, 326, 329, 331, 334, 337, 382, 383, 384, 385, 386, 387, 388, 461, 465, 494], "accordingli": [19, 457, 494], "account": [23, 25, 26, 307, 394], "accumul": [274, 381, 382, 383, 394, 407, 408, 409, 413, 414, 415, 418, 465], "accur": 167, "accuraci": [47, 49, 50, 51, 52, 84, 85, 86, 87, 94, 96, 100, 111, 112, 113, 119, 120, 121, 122, 123, 170, 198, 199, 200], "achiev": [13, 100, 132, 158, 159, 160, 161, 162, 163, 164, 234, 235, 236, 263, 326, 348, 349, 350, 387, 501, 503], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 100, 105, 115, 126, 131, 132, 133, 135, 136, 137, 181, 189, 214, 218, 221, 258, 261, 263, 264, 265, 295, 296, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 393, 399, 401, 402, 403, 404, 405, 406, 422, 423, 447, 462], "act": [16, 385, 481], "act_lay": [65, 105], "activ": [29, 40, 57, 59, 61, 65, 100, 101, 105, 108, 109, 117, 118, 148, 152, 153, 165, 192, 205, 217, 221, 223, 224, 226, 227, 228, 229, 230, 231, 239, 280, 281, 282, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 318, 319, 321, 322, 323, 324, 333, 334, 337, 339, 340, 341, 346, 360, 362, 364, 394, 446, 448], "actual": [216, 333, 334, 336, 337, 499], "acycl": 16, "ad": [15, 69, 113, 147, 215, 217, 218, 219, 220, 221, 234, 235, 236, 240, 248, 250, 251, 252, 257, 258, 260, 261, 266, 267, 268, 270, 271, 272, 280, 281, 282, 310, 313, 314, 315, 316, 319, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 360, 362, 364, 382, 383, 384, 385, 386, 387, 388, 389, 398, 492, 506], "adadelta": 392, "adagrad": [382, 392], "adam": [100, 385, 386, 387, 388, 392], "adamax": 392, "adamw": 392, "adapt": [10, 29, 88, 100, 101, 119, 122, 138, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 205, 263, 264, 265, 286, 287, 348, 349, 350, 373, 377, 382, 383, 384, 387, 388, 389, 390], "adaptive_avg_pool1d": [247, 269, 348], "adaptive_avg_pool2d": [247, 269, 349], "adaptive_avg_pool3d": [247, 269, 350], "adaptiveavgpool1d": [328, 357], "adaptiveavgpool2d": [29, 165, 192, 205, 328, 357], "adaptiveavgpool3d": [328, 357], "add": [4, 16, 55, 215, 217, 218, 221, 248, 250, 310, 313, 314, 315, 329, 331, 346, 369, 381, 384, 389, 391, 396, 432, 477, 492], "add_bias_kv": 310, "add_modul": [215, 221], "add_param_group": 369, "add_zero_attn": 310, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 215, 218, 221, 248, 250, 257, 260, 329, 331, 339, 340, 341, 343, 344, 345, 381, 387, 396, 406, 408, 464, 485], "addition": 387, "address": [334, 337, 384, 385, 388], "adjust": [98, 111, 113, 115, 123, 171, 172, 173, 174, 175, 179, 263, 264, 265, 287, 318, 319, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 370, 371, 374, 375, 376, 377, 378, 380, 384, 388, 389, 390, 472, 493], "adopt": 407, "advanc": [3, 16, 25, 75, 92, 100, 112, 122, 127, 129, 152, 186, 188, 209, 218, 221, 234, 235, 236, 263, 264, 265, 348, 349, 350, 368, 381], "advantag": 99, "affect": [273, 395, 478, 484, 495], "affin": [273, 274, 280, 281, 282, 339, 340, 341, 343, 344, 345, 346, 502], "affine_grid": [247, 274, 275], "after": [10, 15, 16, 23, 29, 117, 118, 180, 181, 205, 216, 217, 218, 219, 220, 221, 245, 286, 287, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 314, 315, 318, 321, 322, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 360, 362, 364, 370, 377, 385, 394, 407, 408, 409, 413, 414, 415, 417, 418, 425, 426, 427, 477, 482, 483, 496], "afterward": 394, "aggreg": [10, 55, 100, 287, 416, 479, 486], "agnost": 393, "aim": 4, "al": [55, 89, 100, 105, 209, 360], "alex": [5, 6, 100], "alexei": 100, "alexnet": 205, "algebra": [11, 17, 424], "algorithm": [7, 23, 25, 26, 369, 380, 406, 464], "alia": 397, "align": [10, 27, 122, 273, 278, 366, 411, 412, 457], "align_corn": [273, 274, 278, 366], "all": [0, 3, 4, 11, 16, 26, 74, 100, 209, 215, 217, 218, 219, 220, 221, 235, 236, 262, 263, 264, 265, 267, 268, 271, 272, 278, 281, 282, 287, 301, 302, 310, 315, 348, 349, 350, 352, 353, 356, 360, 368, 369, 374, 380, 381, 384, 389, 390, 391, 394, 407, 417, 446, 447, 448, 456, 460, 462, 467, 468, 471, 472, 479, 484, 485, 486, 488, 489, 493, 497, 498, 506], "allevi": [100, 223], "alloc": [16, 422, 423], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 99, 100, 101, 105, 114, 117, 118, 120, 123, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 171, 172, 173, 174, 175, 179, 180, 184, 185, 186, 187, 188, 190, 207, 216, 217, 218, 219, 220, 221, 223, 226, 227, 230, 236, 238, 279, 287, 297, 298, 301, 304, 305, 306, 308, 311, 313, 314, 315, 326, 358, 366, 368, 370, 371, 373, 375, 377, 382, 383, 396, 420, 425, 428, 430, 431, 457, 461, 463, 475, 495, 496, 506], "along": [10, 14, 15, 230, 262, 278, 287, 306, 394, 411, 412, 416, 446, 447, 448, 456, 460, 462, 464, 465, 466, 467, 470, 472, 475, 479, 481, 482, 483, 485, 486, 487, 490, 491, 492, 493, 501, 503], "alongsid": 214, "alpha": [223, 226, 228, 239, 297, 304, 318, 381, 389], "alpha_dropout": [246, 247, 318], "alphadropout": [325, 328], "alphadropoutmodel": 318, "alreadi": 398, "also": [213, 223, 224, 226, 227, 228, 229, 231, 248, 250, 278, 387, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 423, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 465, 467, 472, 477, 478, 479, 480, 484, 485, 486, 492, 493], "alter": [221, 480, 481], "altern": [1, 16, 105, 298, 382, 412], "alwai": [10, 216, 370, 437, 443, 450, 474, 478, 494, 500, 501, 503], "among": [90, 287], "amount": [234, 235, 236, 266, 267, 268, 270, 271, 272, 283, 284, 285, 316, 387], "ampl": 119, "amsgrad": [384, 385], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 112, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 205, 206, 207, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 234, 235, 236, 238, 239, 242, 243, 244, 245, 248, 264, 265, 274, 276, 278, 279, 283, 284, 285, 287, 295, 296, 297, 303, 305, 310, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 329, 331, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 369, 370, 375, 380, 381, 384, 387, 389, 393, 394, 397, 398, 407, 412, 421, 424, 426, 447, 456, 462, 464, 465, 467, 471, 479, 483, 486, 489, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "analog": [479, 486], "analysi": [4, 207, 286, 313, 314, 315, 345, 351, 353, 354, 356], "analyz": 207, "andreetto": 100, "andrew": 100, "angl": [279, 502], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 106, 107, 108, 109, 110, 147, 175, 204, 206, 214, 215, 216, 217, 219, 220, 223, 224, 226, 227, 228, 229, 231, 239, 242, 248, 250, 257, 260, 274, 305, 326, 346, 368, 369, 374, 394, 395, 397, 398, 404, 407, 420, 421, 422, 424, 425, 428, 429, 430, 431, 446, 448, 461, 463, 467, 468, 472, 477, 479, 485, 486, 492, 493, 495, 506], "anneal": 371, "anoth": [114, 207, 220, 418, 429, 431, 496, 506], "api": [4, 16, 348, 349, 350, 506], "appear": [369, 491], "append": [218, 220, 221, 310], "appl": [16, 110, 393, 407], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 74, 75, 92, 100, 158, 175, 180, 181, 197, 203, 205, 210, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 258, 262, 273, 274, 280, 281, 282, 286, 287, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 374, 375, 381, 382, 383, 385, 386, 387, 388, 412, 425, 437, 443, 477, 479, 488, 489, 491, 495, 498, 500, 501, 502, 503, 504, 506], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 69, 95, 98, 99, 100, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 202, 234, 260, 313, 314, 315, 329, 331, 406, 420, 430, 437, 477, 483, 488, 489, 504], "approach": [3, 10, 13, 15, 55, 57, 59, 61, 65, 97, 221, 326, 371, 385], "appropri": [25, 100, 113, 117, 118, 215, 219, 221, 241, 313, 314, 315, 318, 321, 322, 334, 352, 353, 393, 395], "approx": 228, "approxim": [25, 224, 298, 299, 300, 352, 355, 394], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 84, 85, 86, 87, 88, 89, 90, 100, 119, 121, 122, 125, 126, 127, 128, 129, 130, 134, 207, 214, 215, 216, 217, 218, 219, 220, 221, 230, 234, 235, 236, 238, 241, 248, 250, 258, 264, 265, 273, 274, 276, 278, 283, 284, 285, 286, 287, 291, 292, 294, 295, 296, 299, 306, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 331, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 364, 366, 368, 372, 376, 381, 384, 385, 387, 388, 389, 390, 391, 394, 395, 397, 398, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 427, 433, 438, 442, 446, 447, 448, 449, 451, 456, 457, 460, 461, 465, 466, 467, 475, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 494, 495, 496, 497, 499, 500, 504, 506], "arang": [419, 432], "arbitrari": [218, 330, 422, 423, 438, 444, 445, 447, 452, 454, 456, 461, 462], "arcco": 432, "arch": 398, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 132, 138, 139, 140, 141, 142, 143, 144, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 213, 217, 218, 219, 220, 221, 224, 286, 299, 300, 302, 307, 310, 311, 326, 329, 330, 360, 368, 398], "arcsin": 432, "arctan": 432, "area": [274, 278, 366], "arg": [215, 330, 398, 422], "argmax": 397, "argsort": 473, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 204, 206, 215, 221, 273, 330, 394, 397, 422, 461], "around": [20, 207, 279, 308], "arr": [467, 472, 485, 493], "arrai": [16, 214, 216, 396, 399, 407, 412, 421, 423, 426, 429, 431, 463, 478, 479, 496, 506], "art": [49, 100, 199], "artifici": [100, 207], "arxiv": 100, "ascend": [482, 487], "asgd": 392, "ashish": 209, "aspect": 504, "assign": [16, 207, 215, 217, 219, 221, 278, 334, 337, 474], "assist": [88, 89, 90], "associ": [219, 220], "assum": [0, 1, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 369, 380, 395], "astyp": 407, "attach": 394, "attempt": [217, 221], "attend": [233, 311, 361, 363, 364], "attent": [31, 55, 65, 66, 67, 68, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 209, 210, 220, 248, 286, 310, 311, 360, 361, 362, 363, 364, 419], "attn": [233, 311], "attn_drop": 105, "attn_drop_r": [55, 124, 125, 180, 181], "attn_mask": [233, 311], "atto": [46, 93, 100], "attribut": [16, 215, 370], "audio": 313, "augment": [3, 4, 168, 279, 406, 479, 486, 495, 499, 500, 501, 502, 503, 506], "auto_pars": 393, "autodiff": [11, 407], "autoencod": 100, "autograd": [16, 368, 482], "automat": [4, 216, 217, 218, 219, 220, 368, 394, 399, 401, 402, 403, 405, 407, 422, 423, 431, 464, 475, 496], "autoregress": [233, 311], "auxiliari": [88, 89, 90, 214], "avail": [4, 5, 6, 7, 8], "avd": 138, "averag": [14, 29, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 214, 263, 264, 265, 266, 267, 268, 278, 286, 287, 336, 348, 349, 350, 351, 352, 353, 381, 382, 384, 389, 447], "avg_down": 147, "avg_pool": [351, 352, 353], "avg_pool1d": [247, 269], "avg_pool2d": [247, 269], "avg_pool3d": [247, 269], "avgpool": [29, 165, 192, 205, 287], "avgpool1d": [328, 357], "avgpool1dmodel": 351, "avgpool2d": [328, 357], "avgpool2dmodel": 352, "avgpool3d": [328, 357], "avgpool3dmodel": 353, "avoid": [2, 3, 13, 14, 25, 75, 134, 219, 262, 326, 372, 394, 397, 427, 437, 443], "awar": 189, "ax": [10, 13, 14, 15, 17, 326, 396, 419, 446, 447, 448, 456, 457, 461, 462, 465, 479, 484, 486], "axes_a": 419, "axes_b": 419, "axi": [14, 24, 100, 105, 230, 262, 306, 411, 412, 419, 446, 447, 448, 456, 462, 464, 466, 467, 468, 470, 472, 475, 477, 479, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 501, 503], "axis1": 457, "axis2": 457, "b": [11, 13, 14, 15, 17, 27, 31, 100, 198, 248, 250, 294, 313, 314, 315, 326, 329, 331, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 465, 467, 470, 471, 472, 475, 485, 493, 494, 500], "b0": [74, 76, 100, 131], "b1": [74, 77, 100, 132, 133], "b2": [74, 78, 100, 133, 134], "b3": [74, 79, 100, 135], "b4": [74, 80, 100, 136], "b5": [74, 81, 100, 137], "b6": [74, 82, 100], "b7": [74, 83, 100], "b_": [11, 31], "b_1": [362, 364], "b_2": [362, 364], "b_i": [413, 414, 417], "b_k": 310, "b_v": 310, "back": [11, 16, 273, 278, 310, 352, 353, 398, 411, 416, 464, 466, 479, 482, 486, 490], "backbon": [100, 135, 176, 177, 178], "backend": [110, 407, 425, 464], "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 100, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 248, 250, 273, 274, 278, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 368, 403, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 442, 446, 448, 463, 465, 466, 474, 477, 479, 481, 486, 488, 489, 496], "backward": [16, 214, 216, 274, 316, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 407, 425, 426, 427, 466, 474, 481, 482, 487, 496], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 66, 75, 84, 85, 86, 87, 96, 100, 113, 114, 120, 121, 123, 126, 129, 159, 160, 161, 162, 163, 164, 198, 201, 335], "bar": 381, "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 69, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 106, 107, 114, 120, 121, 123, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175, 182, 186, 192, 198, 202, 203, 207, 209, 210, 211, 215, 217, 218, 219, 220, 233, 238, 248, 263, 264, 265, 287, 311, 316, 318, 326, 334, 335, 348, 349, 350, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 385, 389, 390, 391, 393, 399, 408, 409, 413, 414, 415, 417, 418, 431, 442, 443, 444, 445, 446, 448, 461, 475, 477, 483, 494, 499, 500, 501, 502, 503], "base_dtyp": 393, "base_lr": 372, "base_width": [138, 139, 140, 141, 142, 143, 144, 156, 157, 158, 175], "baselin": 100, "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 203, 205, 213, 233, 234, 235, 236, 240, 241, 263, 264, 265, 276, 280, 281, 282, 283, 284, 285, 286, 291, 292, 295, 296, 311, 319, 348, 349, 350, 358, 427, 465, 497, 498, 499, 500, 501, 502, 503, 504], "basicblock": [147, 151, 154], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 98, 99, 165, 171, 172, 173, 174, 179, 233, 234, 235, 236, 238, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 310, 311, 313, 314, 315, 316, 329, 331, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 388, 397, 412, 419, 457, 497, 498, 499, 500, 502, 504], "batch_norm": [247, 259, 339, 340, 341], "batch_norm1": 221, "batch_norm2": 221, "batch_siz": [1, 2, 3, 203, 287], "batch_tensor": 457, "batchnorm": [280, 281, 282], "batchnorm1d": [280, 328, 347], "batchnorm1dmodel": 339, "batchnorm2d": [105, 221, 281, 328, 347], "batchnorm2dmodel": 340, "batchnorm3d": [282, 328, 347], "batchnorm3dmodel": 341, "bceloss": [328, 338], "becaus": [2, 394, 397, 402], "becom": [24, 215, 382, 390], "been": [307, 474], "befor": [10, 15, 23, 31, 165, 213, 216, 233, 311, 360, 362, 364, 371, 377, 381, 387, 404, 477, 481, 498, 506], "begin": [1, 24, 223, 226, 227, 228, 241, 273, 297, 299, 300, 301, 302, 304, 320, 335, 336, 337, 351, 352, 353, 354, 355, 356, 388, 390, 396, 406, 413, 414, 416, 433, 438, 446, 448, 451, 474, 477, 487, 488, 489], "behav": [320, 335, 460], "behavior": [10, 16, 100, 218, 221, 233, 262, 311, 316, 374, 395, 406, 412, 423, 491, 506], "being": [220, 279, 318, 321, 322, 323, 324, 388, 395, 407, 466, 467, 472, 493], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 89, 90, 91, 98, 99, 101, 102, 103, 104, 412, 421, 424, 489], "benchmark": [5, 6, 7, 8, 16, 106, 107, 122], "benefici": 221, "benefit": [123, 223, 368, 387], "bernoulli": [318, 321, 322, 323, 324, 400], "best": [122, 291, 292, 295, 296], "beta": [258, 339, 340, 341, 342, 343, 344, 345, 346, 384, 385, 386, 387, 388], "beta1": [384, 385, 386, 387, 388], "beta2": [384, 385, 386, 387, 388], "beta_1": [384, 385, 386, 387, 388], "beta_2": [384, 385, 386, 387, 388], "beta_c": [258, 342], "better": [22, 57, 59, 61, 100, 121, 133, 134, 181, 189, 205, 224, 291, 292, 295, 296, 307, 319, 343, 344, 345, 368, 377, 378, 385, 387, 389, 498], "between": [44, 47, 51, 55, 63, 84, 85, 86, 87, 96, 100, 105, 114, 120, 121, 123, 129, 159, 160, 161, 162, 163, 164, 198, 201, 215, 234, 235, 236, 238, 248, 253, 280, 281, 282, 283, 284, 285, 287, 303, 313, 314, 315, 316, 318, 321, 322, 323, 324, 329, 333, 334, 335, 336, 337, 372, 377, 378, 381, 389, 390, 391, 406, 408, 409, 412, 415, 418, 420, 427, 462, 500, 501, 503, 504], "beyond": [10, 218, 377], "bia": [31, 55, 57, 59, 61, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 234, 235, 236, 248, 250, 257, 260, 261, 280, 281, 282, 283, 284, 285, 310, 313, 314, 315, 329, 331, 339, 340, 341, 343, 344, 345, 346, 360, 362, 364, 384, 385, 386, 387, 388], "bias": [65, 100, 313, 314, 315, 331, 346, 368], "bias1": 219, "bias2": 219, "big": [209, 283, 284, 285], "bij": 11, "bik": 11, "bilinear": [247, 249, 273, 274, 278, 328, 332, 366], "bilinearmodel": 329, "bin": [469, 470, 471], "binari": [229, 251, 305, 318, 321, 322, 323, 324, 333], "binary_cross_entropi": [247, 254], "bit": 393, "bjk": 11, "black": 16, "blend": 123, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 97, 100, 105, 106, 107, 109, 112, 113, 114, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 215, 238, 240, 241, 280, 281, 282, 287, 313, 314, 315, 316, 319, 394, 397], "block1": [213, 368], "block2": [213, 368], "block_arg": [147, 165], "block_cfg": 75, "block_config": 69, "block_siz": [240, 319], "block_typ": 31, "blue": 500, "bmatrix": [273, 416], "bn": [280, 281, 282], "bn_affin": [280, 281, 282], "bookkeep": 397, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 74, 88, 89, 90, 124, 125, 131, 132, 133, 135, 136, 137, 138, 147, 180, 181, 213, 215, 216, 233, 239, 241, 242, 243, 244, 245, 257, 260, 273, 274, 278, 280, 281, 282, 283, 284, 285, 310, 311, 313, 314, 315, 320, 329, 331, 339, 340, 341, 343, 344, 345, 346, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 389, 393, 395, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 446, 447, 448, 456, 462, 463, 464, 469, 470, 471, 482, 487, 491, 496], "boolean": [474, 494], "boost": 119, "border": 274, "both": [31, 55, 57, 59, 61, 65, 100, 105, 110, 114, 125, 126, 180, 182, 183, 184, 185, 234, 250, 264, 266, 270, 280, 298, 307, 313, 314, 316, 349, 351, 352, 354, 355, 364, 366, 393, 397, 410, 411, 412, 416, 419, 421, 475, 482, 483, 504], "bottleneck": [69, 100, 112, 113, 116, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 286], "bottleneck_cfg": 113, "bottom": 278, "bound": [207, 274, 292, 294, 296, 372, 390, 405, 407, 437, 438], "box": [4, 16, 207], "branch": [55, 88, 89, 90, 100, 287], "break": [10, 368], "brief": 506, "bright": 506, "bring": [10, 326], "broadcast": [15, 16, 323, 324, 419, 447, 456, 462, 480, 492], "broadcast_to": 473, "bucket": 437, "budget": [51, 135], "buffer": [16, 381, 387, 389, 391], "build": [16, 41, 75, 99, 100, 113, 114, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 175, 176, 177, 178, 191, 210, 215, 218, 221, 368, 506], "built": [3, 16, 148, 152, 153, 221, 368, 393, 397, 425, 426], "burg": 8, "c": [5, 6, 8, 11, 13, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 238, 240, 243, 244, 245, 252, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 279, 286, 316, 323, 324, 326, 334, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 372, 396, 472, 493, 498], "c_": [11, 313, 314, 315], "c_in": [234, 235, 236, 280, 281, 282], "c_out": [234, 235, 236], "calcul": [0, 1, 17, 216, 366, 382, 383, 386, 387, 388, 397, 402], "calculu": [18, 25], "call": [1, 16, 215, 370, 395, 397, 398, 408, 409, 412, 413, 414, 415, 417, 418], "callabl": [131, 132, 133, 135, 136, 137, 360, 362, 364, 369, 372, 375, 398, 407, 495], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 74, 100, 113, 119, 120, 122, 123, 147, 156, 157, 171, 172, 173, 174, 203, 204, 213, 214, 216, 217, 218, 219, 220, 221, 226, 234, 235, 236, 241, 273, 274, 279, 287, 298, 301, 303, 308, 313, 314, 315, 316, 343, 344, 345, 352, 353, 354, 355, 356, 358, 361, 368, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395, 396, 397, 401, 405, 406, 407, 412, 422, 423, 424, 425, 426, 428, 430, 431, 447, 450, 456, 457, 462, 465, 472, 475, 477, 479, 480, 482, 486, 492, 493, 495, 496, 499, 501, 502, 503, 506], "cannot": [19, 20, 22, 23, 26, 27, 28, 399, 466], "cap": 303, "capabl": [10, 31, 53, 100, 145, 146, 420, 421, 424, 428, 429, 430, 431], "capac": [42, 43, 44, 50, 54, 100, 105, 106, 107, 108, 110, 111, 119, 127, 132, 136, 137, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 188, 199, 212], "captur": [16, 31, 55, 57, 59, 61, 65, 100, 105, 126, 127, 128, 175, 180, 182, 183, 184, 185, 186, 187, 190, 209, 238, 313, 314, 315, 329], "cardin": [100, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175], "care": 55, "carefulli": [370, 394], "cartesian": 475, "case": [3, 24, 101, 113, 115, 223, 226, 227, 228, 241, 297, 299, 300, 301, 302, 304, 320, 335, 336, 337, 351, 352, 353, 354, 355, 356, 368, 376, 383, 388, 390, 396, 413, 414, 419, 433, 438, 446, 448, 451, 464, 474, 477, 487, 488, 489, 506], "cast": 425, "categor": [276, 358], "categori": [7, 106, 107, 148, 149, 150, 151, 152, 153, 154, 155, 358, 393], "caus": [3, 25, 370, 381, 389, 391], "causal": [233, 311], "cautiou": [0, 10], "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 105, 209, 223, 224, 226, 228, 229, 233, 234, 235, 236, 248, 250, 258, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 286, 295, 296, 298, 299, 300, 305, 307, 311, 316, 318, 329, 331, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 358, 371, 372, 373, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 390, 410, 411, 412, 415, 417, 419, 450], "ceil": 432, "center": [273, 274, 279, 308, 389, 497, 506], "centercrop": [505, 506], "certain": [19, 224, 233, 248, 307, 311, 329, 364, 377, 384, 385, 395, 446, 448], "cfg": [114, 117, 118], "chain": [16, 22, 23, 221, 495, 506], "challeng": [7, 100, 126], "cham": 100, "chanc": [500, 501, 503], "chang": [10, 253, 273, 274, 335, 376, 390, 394, 396, 398, 407, 478, 480, 492, 500, 506], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 74, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 169, 171, 172, 173, 174, 179, 180, 181, 192, 203, 234, 235, 236, 238, 243, 244, 245, 257, 258, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 313, 314, 315, 323, 324, 339, 340, 341, 342, 343, 344, 345, 348, 351, 352, 353, 354, 355, 356, 498, 500, 504], "character": [156, 157], "check": [16, 395, 407, 497, 499], "checkpoint": 380, "chen": [55, 100], "choic": [121, 123, 475], "choleski": 21, "chollet": 100, "choos": [100, 464, 494], "chosen": [318, 319, 370, 494], "christian": 100, "christoph": 8, "chu": 100, "chun": 100, "chunk": 473, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 211, 212, 213, 230, 241, 252, 256, 368, 380, 397, 398, 506], "classic": 104, "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "classifi": [29, 88, 89, 90, 101, 102, 103, 104, 105, 147, 158, 175, 192, 203, 205, 207], "clean": 397, "cleaner": [1, 412], "cleanli": 105, "cleanup": 394, "clear": [216, 422, 423, 427], "clf_in_featur": 101, "clf_layer": 101, "clip": [279, 299, 303, 390, 432], "clockwis": 279, "close": [22, 25, 304, 333, 389], "closer": 297, "closur": [369, 380], "cloth": 7, "cnn": [31, 57, 59, 61, 100], "co": [100, 371, 432, 452], "coars": 100, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 100, "coatnet_1": 100, "coatnet_2": 100, "coatnet_3": 100, "coatnet_4": 100, "coatnet_5": 100, "coatnet_6": 100, "coatnet_7": 100, "code": [10, 16, 23, 217, 219, 221, 394, 395, 397, 406], "coeffici": [27, 74, 278, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "col": 238, "collaps": 10, "collect": [4, 17, 207, 217, 218, 220, 221, 380], "color": [500, 506], "colorjitt": 506, "column": [19, 20, 22, 26, 27, 28, 213, 238, 316, 424, 472, 475], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 91, 97, 98, 100, 105, 123, 127, 179, 207, 218, 221, 223, 224, 280, 281, 282, 286, 287, 298, 316, 319, 326, 334, 368, 387, 388, 447, 456, 462, 467, 506], "combined_dataset": [0, 1], "common": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 238, 279, 380, 393, 506], "commonli": [111, 112, 113, 115, 116, 117, 118, 121, 123, 224, 229, 230, 231, 234, 236, 241, 248, 255, 257, 260, 274, 276, 279, 286, 295, 296, 299, 300, 303, 306, 311, 315, 333, 336, 337, 351, 352, 353, 354, 355, 356, 358, 360, 396, 428, 484, 496, 497, 498, 499, 501, 502, 503, 506], "compact": [45, 46, 48, 53, 96, 108, 121, 131, 132], "compar": [31, 44, 45, 68, 100, 108, 125, 133, 156, 157, 205, 406, 485], "compat": [4, 10, 11, 16, 17, 175, 326, 330, 346, 368, 396, 406, 427, 465, 496, 506], "competit": [46, 52, 53], "complet": [210, 360, 361, 363], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 99, 106, 107, 122, 125, 126, 127, 128, 129, 133, 134, 135, 147, 150, 153, 154, 167, 169, 187, 212, 213, 214, 216, 217, 218, 221, 227, 233, 279, 289, 293, 294, 295, 296, 302, 311, 354, 356, 368, 375, 380, 384, 385, 386, 387, 388, 390, 393, 399, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 438, 463, 464, 474, 496, 506], "complex64": 393, "compon": [25, 88, 89, 90, 91, 97, 98, 99, 108, 109, 210, 215, 218, 380, 407, 506], "compos": [5, 6, 7, 8, 105, 203, 313, 314, 315, 351, 352, 353, 354, 355, 356, 368, 494, 506], "compound": 75, "comprehens": [3, 62], "compris": [156, 157], "compromis": [120, 123], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 93, 96, 100, 105, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 134, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 179, 180, 199, 200, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 262, 263, 264, 265, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 369, 371, 372, 373, 374, 375, 376, 378, 380, 381, 389, 394, 395, 396, 397, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 475, 477, 479, 486, 496, 506], "computation": [3, 13, 25, 148, 299, 300, 326], "compute_grad": 466, "compute_loss": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "concat": 310, "concaten": [0, 234, 235, 236, 310, 419, 472, 473, 485, 493], "concept": [25, 100, 112, 207, 419], "concis": [10, 11, 13, 15], "concurr": 394, "cond": 494, "condit": [18, 19, 22, 494], "confer": 100, "config": 192, "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 206, 212, 220, 280, 281, 282, 311, 393], "confirm": 16, "conjunct": [238, 337], "connect": [29, 40, 69, 70, 71, 72, 73, 74, 75, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 250, 286, 287, 313, 314, 315, 331, 362, 364], "consecut": 192, "consid": [3, 22, 25, 69, 119, 120, 121, 123, 221, 291, 292, 295, 296, 316, 368, 390, 393, 395, 422, 423, 488, 489, 506], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 102, 103, 104, 147, 214, 263, 264, 265, 287, 310, 348, 349, 350, 360, 362, 364, 404, 406, 477, 497, 504, 506], "consistent_tensor": 406, "consol": 213, "constant": [251, 252, 257, 258, 260, 261, 262, 290, 304, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 360, 362, 364, 378, 382, 383, 384, 385, 386, 387, 388, 389, 425, 426, 464, 474, 477], "constant_pad": 477, "constrain": [46, 48, 51, 121], "constraint": [1, 13, 31, 111, 113, 120, 134, 287, 326], "construct": [16, 70, 71, 72, 73, 92, 106, 107, 108, 123, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 193, 194, 195, 196, 210, 218, 368, 421, 479, 486, 488, 489], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 70, 71, 72, 73, 84, 85, 86, 87, 106, 107, 108, 109, 110, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 179, 193, 194, 195, 196], "consumpt": 123, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 97, 101, 147, 158, 159, 160, 161, 162, 163, 164, 165, 175, 192, 213, 215, 217, 218, 219, 220, 221, 230, 233, 238, 248, 250, 251, 252, 256, 274, 276, 278, 333, 334, 337, 369, 408, 409, 410, 411, 413, 414, 415, 416, 418, 420, 423, 427, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 466, 468, 471, 475, 483, 487], "content": [207, 279], "context": [100, 105, 186, 188, 189, 273, 394, 395, 397, 407], "contextmanag": 394, "contextu": [66, 67, 68, 126, 182, 183, 184, 185], "contigu": [240, 319, 478], "continu": [301, 373, 378, 403, 443], "contract": [11, 13], "contrast": [210, 343, 344, 345, 506], "contribut": [240, 278, 318, 321, 322, 323, 324, 351, 354, 355, 356, 381, 387, 460], "control": [10, 15, 31, 40, 125, 126, 158, 287, 297, 335, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 406, 407, 425, 496, 506], "conv": [97, 100, 165, 280, 281, 282, 340, 341], "conv1": [102, 103, 104, 221, 313, 314, 315, 351, 352, 353, 354, 355, 356], "conv1d": [237, 247, 280, 283, 317, 328, 351, 354], "conv1dmodel": 313, "conv2": [102, 103, 104, 221, 313, 314, 315], "conv2d": [218, 221, 237, 247, 281, 284, 317, 326, 328, 340, 352, 355, 368], "conv2dmodel": 314, "conv3d": [237, 247, 282, 285, 317, 328, 341, 353, 356], "conv3dmodel": 315, "conv_bia": [280, 281, 282], "conv_config": 192, "conv_lay": [101, 218], "convblock": 368, "convbnrelu1d": 288, "convbnrelu2d": 288, "convbnrelu3d": 288, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 464], "convent": [11, 412], "converg": [25, 308, 370, 371, 372, 374, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 498], "convers": [334, 337, 500, 506], "convert": [5, 6, 7, 8, 55, 192, 214, 216, 230, 276, 306, 475, 495, 496, 500, 506], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "convnetwork": 218, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 100, "convnext_larg": 100, "convnext_smal": 100, "convnext_tini": 100, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 100, "convnext_v2_bas": 100, "convnext_v2_femto": 100, "convnext_v2_hug": 100, "convnext_v2_larg": 100, "convnext_v2_nano": 100, "convnext_v2_pico": 100, "convnext_v2_tini": 100, "convnext_xlarg": 100, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 97, 101, 102, 103, 104, 105, 111, 113, 117, 118, 119, 120, 121, 122, 123, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 179, 192, 203, 205, 206, 218, 234, 235, 236, 238, 280, 281, 282, 283, 284, 285, 286, 287, 313, 314, 315, 316, 352, 353, 355, 356, 457, 477], "convolv": [234, 235, 236, 313, 314, 315], "cooldown": 377, "coordin": [273, 274, 470, 475, 476], "copi": [10, 465, 490], "core": [0, 1, 2, 3, 55, 215, 368, 369, 393, 407, 506], "corinna": 8, "corner": [273, 274, 278, 366, 497, 499], "correct": [217, 334, 337, 384, 385, 386, 387, 388, 474, 482, 488, 489, 496], "correctli": [25, 215, 217, 218, 219, 220, 221, 334, 337, 406, 465, 466], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 114, 115, 117, 118, 156, 157, 176, 177, 178, 182, 183, 184, 185, 191, 217, 219, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 248, 250, 276, 278, 299, 302, 306, 329, 331, 339, 340, 341, 343, 344, 345, 352, 353, 358, 381, 389, 391, 393, 399, 410, 411, 413, 414, 417, 437, 442, 443, 444, 445, 452, 454, 464, 465, 466, 472, 476, 477, 479, 481, 486, 490, 493], "cort": 8, "cosh": [432, 453, 459], "cosin": [371, 434, 439, 440, 452], "cosineannealinglr": 379, "cost": [65, 100, 111, 113, 114, 120, 121, 123, 134, 158, 283, 284, 285, 394], "could": 215, "count": [100, 114, 131, 132, 133, 135, 136, 137, 209, 213, 371, 376, 394, 464, 467, 469, 470], "counterclockwis": [279, 502], "cover": [17, 234, 235, 236], "coverag": [105, 263, 264, 265], "cpu": [11, 16, 214, 216, 393, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 476], "craft": 16, "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 98, 99, 102, 103, 104, 113, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 192, 193, 194, 195, 196, 204, 205, 206, 211, 212, 213, 214, 215, 218, 221, 273, 287, 303, 310, 360, 361, 362, 363, 364, 368, 396, 397, 398, 406, 420, 424, 425, 426, 427, 428, 429, 430, 431, 465, 475, 485, 495, 506], "creation": [84, 85, 86, 87, 218, 221, 394, 506], "criterion": [333, 334, 335, 336, 337], "critic": [25, 121, 136, 380, 406], "crop": [497, 499, 506], "cross": [55, 100, 180, 251, 252, 333, 334, 360, 361, 362], "cross_entropi": [247, 254], "crossattent": 55, "crossentropyloss": [328, 338], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 100, "crossvit_15_dagg": 100, "crossvit_18": 100, "crossvit_18_dagg": 100, "crossvit_9": 100, "crossvit_9_dagg": 100, "crossvit_bas": 100, "crossvit_smal": 100, "crossvit_tini": 100, "crucial": [10, 370], "cube": 432, "cumul": [224, 298], "current": [215, 371, 372, 373, 374, 375, 376, 377, 378, 381, 384, 390, 395, 464], "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 96, 98, 99, 101, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 205, 206, 214, 217, 218, 219, 220, 221, 279, 280, 281, 282, 297, 301, 316, 360, 368, 372, 375, 394, 406, 424, 427, 483], "custom_config": 192, "custom_decod": 360, "custom_encod": 360, "custom_lenet": 101, "customiz": [131, 506], "custommodul": 214, "customnetwork": 217, "customparametermodel": [219, 220], "cut": 122, "cv": 207, "cvf": 100, "cvpr": 100, "cvt": [66, 67, 68], "cvt_13": 100, "cvt_21": 100, "cvt_w24": 100, "cvtspec": 65, "cycl": 372, "cycle_momentum": 372, "cyclic": [371, 372, 481], "cycliclr": 379, "d": [31, 100, 233, 236, 245, 265, 268, 272, 282, 311, 316, 341, 345, 346, 350, 353, 356, 396, 421, 450, 471, 476, 502], "d_": [209, 236, 265, 268, 272, 310, 315, 350, 353, 356, 360, 361, 362, 363, 364], "d_1": [13, 14, 15, 326, 346], "d_2": [13, 14, 15, 326, 346], "d_h": [310, 316, 362, 364], "d_k": [31, 55, 105], "d_model": [197, 210, 211, 212, 360, 361, 362, 363, 364], "d_n": [13, 14, 15, 326, 346], "d_out": [236, 268, 272], "d_w": 316, "dag": 16, "dai": 100, "dampen": [381, 389, 391], "data": [4, 5, 6, 7, 8, 10, 16, 23, 100, 187, 207, 209, 214, 216, 220, 231, 234, 236, 238, 244, 245, 250, 276, 279, 280, 281, 282, 287, 302, 308, 313, 314, 315, 331, 345, 351, 353, 356, 363, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 406, 407, 408, 409, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 450, 457, 463, 464, 465, 469, 477, 478, 479, 480, 482, 483, 484, 486, 495, 496, 499, 500, 501, 502, 503, 506], "data_dtyp": 393, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 84, 85, 86, 87, 102, 103, 104, 105, 106, 107, 110, 111, 114, 119, 126, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 279, 383, 495, 497, 506], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 416, "debug": [16, 213, 221, 395, 404, 506], "decai": [319, 370, 371, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "decim": 450, "declar": [13, 14, 15, 326], "decod": [210, 360, 361, 362], "decoder_lay": [361, 362], "decoderlay": 361, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "decor": [159, 160, 161, 162, 163, 164, 397, 398], "decoupl": [100, 382, 383, 385, 386, 387, 388], "decreas": [372, 377, 384, 385, 390], "deep": [1, 3, 4, 10, 14, 16, 94, 95, 97, 100, 126, 147, 148, 149, 150, 152, 153, 159, 160, 161, 162, 163, 164, 166, 167, 170, 207, 209, 257, 298, 304, 326, 368, 370, 406, 427, 483, 488, 489, 495, 496, 506], "deepen": 135, "deeper": [67, 89, 91, 99, 100, 106, 107, 125, 128, 133, 136, 147, 154, 187, 188, 304], "defdefault": [1, 5, 6, 7, 8, 14, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 226, 230, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 301, 306, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 387, 395, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 438, 446, 447, 448, 450, 456, 461, 462, 463, 464, 466, 467, 469, 470, 472, 475, 477, 479, 481, 482, 483, 485, 487, 488, 489, 490, 491, 493, 496, 500, 501, 503], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 75, 88, 89, 90, 91, 97, 98, 99, 101, 113, 123, 138, 147, 165, 176, 177, 178, 192, 217, 218, 219, 220, 221, 241, 298, 300, 303, 307, 333, 334, 335, 336, 337, 351, 366, 368, 370, 372, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 403, 417, 423, 438, 461, 495, 506], "definit": [16, 18, 280, 281, 282, 506], "degre": [279, 502, 506], "delai": 381, "deliv": [16, 121, 122, 137], "delta": [13, 230, 253, 306, 326, 335, 382], "delta_": [13, 230, 306, 326], "demand": [110, 122, 135, 136], "demonstr": [17, 171, 172, 173, 174, 179, 207, 368], "demystifi": 16, "denomin": [257, 258, 260, 261, 280, 281, 282, 339, 340, 341, 342, 343, 344, 345, 346, 360, 362, 364, 382, 383, 384, 385, 386, 387, 388, 389, 409], "denot": [23, 145, 146, 305, 310, 313, 314, 315, 318, 321, 322, 323, 324, 461], "dens": [69, 70, 71, 72, 73, 100, 180, 182, 183, 184, 185, 241, 276, 358, 383], "densenet": [70, 71, 72, 73, 286], "densenet_121": 100, "densenet_169": 100, "densenet_201": 100, "densenet_264": 100, "densiti": [224, 298, 469, 470, 471], "depend": [11, 16, 23, 24, 31, 100, 105, 113, 126, 127, 180, 182, 183, 184, 185, 186, 187, 209, 220, 251, 252, 253, 255, 256, 278, 313, 410, 419, 421, 446, 448, 479, 486, 487, 499, 500, 504], "deploy": [123, 131, 134], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 92, 100, 105, 106, 107, 108, 109, 110, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 218, 236, 241, 245, 265, 268, 272, 315, 320, 341, 345, 350, 353, 356], "depth_coef": 74, "depthseparableconv1d": 288, "depthseparableconv2d": 288, "depthseparableconv3d": 288, "depthwis": [31, 40, 65, 66, 67, 68, 92, 100, 111, 203, 234, 235, 236, 283, 284, 285], "depthwise_separ": [283, 284, 285], "der": 100, "deriv": [16, 25, 26, 230, 263, 264, 265, 298, 306, 308, 313, 314, 315, 329, 331, 398], "descend": [28, 482, 487], "descent": [381, 391], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "descript": [207, 506], "deseri": 214, "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 68, 84, 85, 86, 87, 89, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 113, 114, 119, 120, 121, 122, 123, 124, 126, 129, 136, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 180, 187, 188, 199, 203, 206, 207, 209, 216, 218, 219, 220, 221, 223, 228, 304, 318, 368, 506], "desir": [10, 15, 204, 214, 263, 264, 265, 319, 348, 349, 350, 366, 370, 425, 426, 461, 463], "despit": 262, "destin": 215, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 65, 126, 187, 213, 380, 406, 412], "detect": [100, 137, 186, 187, 188, 189, 190, 207, 377], "determin": [0, 17, 18, 19, 55, 101, 105, 156, 157, 263, 264, 265, 291, 292, 295, 296, 313, 314, 315, 348, 349, 350, 352, 353, 355, 356, 372, 389, 395, 399, 401, 402, 403, 405, 419, 422, 423, 483, 491, 497, 499], "determinist": 279, "develop": [10, 16, 114, 368, 406, 506], "deviat": [291, 293, 295, 495, 498, 506], "devic": [11, 112, 113, 119, 120, 214, 216, 393, 399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 443, 450, 463, 476], "diag": [25, 432], "diagon": [25, 26, 28, 421, 424, 460, 488, 489], "diagonaliz": 20, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 215, 217, 219, 326, 330, 369, 374], "dictionari": [101, 114, 121, 215, 216, 217, 219, 221, 369, 374], "differ": [0, 10, 14, 23, 55, 66, 67, 68, 88, 92, 100, 101, 113, 114, 120, 121, 124, 126, 127, 128, 129, 130, 171, 172, 173, 174, 179, 181, 190, 218, 221, 230, 248, 278, 287, 306, 329, 336, 370, 377, 380, 393, 396, 404, 406, 418, 431, 462, 484, 506], "differenti": [18, 27, 273, 274, 276, 298, 368, 399, 401, 402, 403, 405, 407, 420, 422, 423, 428, 430, 437, 443, 450, 476, 491, 494], "difficult": 128, "digit": [7, 8, 100, 104], "dilat": [234, 235, 236, 280, 281, 282, 283, 284, 285, 313, 314, 315, 316], "dilation_height": 238, "dilation_width": 238, "dim": [40, 41, 55, 92, 233, 262, 311, 334, 337, 481], "dim_feedforward": [210, 360, 362, 364], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 66, 67, 68, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 158, 175, 180, 181, 182, 183, 192, 197, 205, 210, 216, 230, 233, 248, 250, 257, 258, 260, 261, 262, 264, 265, 278, 286, 287, 306, 310, 311, 313, 314, 315, 316, 319, 326, 339, 340, 341, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 360, 362, 363, 364, 366, 396, 401, 405, 407, 411, 419, 422, 446, 447, 448, 456, 457, 460, 461, 462, 465, 466, 467, 471, 472, 476, 477, 479, 481, 484, 485, 486, 490, 492, 493, 497, 499, 504], "dimension": [10, 11, 23, 25, 26, 28, 92, 234, 235, 236, 266, 267, 268, 270, 271, 272, 287, 310, 313, 314, 315, 316, 322, 323, 324, 339, 340, 341, 343, 344, 345, 351, 352, 353, 354, 355, 356, 360, 362, 364, 396, 411, 412, 416, 419, 421, 442, 447, 456, 457, 460, 462, 468, 471, 478, 479, 484, 486, 488, 489], "diminish": [370, 383], "direct": [16, 20, 333, 334, 335, 336, 337, 381, 389, 390, 391, 481], "directli": [84, 85, 86, 87, 100, 217, 218, 219, 220, 278, 326, 366, 382, 383, 385, 386, 387, 388, 404, 406, 463, 490, 506], "directori": [3, 4, 5, 6, 7, 8], "disabl": [241, 319, 320, 395, 397], "discontinu": 451, "discrep": [333, 334, 337], "discret": [399, 402, 406, 443], "disk": 3, "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 213], "disrupt": 437, "distinct": [105, 114, 210], "distribut": [187, 224, 230, 240, 278, 291, 292, 293, 294, 295, 296, 298, 306, 313, 314, 315, 318, 319, 321, 322, 323, 324, 329, 331, 334, 337, 351, 352, 353, 399, 401, 402, 403, 405, 406, 447, 456, 460, 462, 482, 485, 498, 500, 501, 502, 503], "div": 432, "divers": [47, 100, 105, 279, 501, 503, 506], "diversifi": 506, "divid": [1, 25, 100, 105, 180, 181, 197, 198, 199, 200, 201, 202, 218, 221, 230, 234, 235, 236, 306, 333, 334, 335, 336, 337, 409, 466, 483, 498], "divis": [25, 234, 235, 236, 262, 310, 318, 321, 322, 323, 324, 360, 362, 364, 382, 383, 384, 385, 386, 387, 388, 389, 409, 483], "dl": 16, "do": [25, 27, 214, 217, 218, 219, 220, 239, 242, 243, 244, 368, 370, 388, 395, 397, 431, 460, 477], "do_ev": 213, "doc": 207, "document": [4, 100, 380, 406], "doe": [23, 24, 25, 26, 28, 210, 213, 214, 217, 218, 219, 220, 221, 262, 296, 377, 384, 385, 390, 394, 395, 397, 399, 401, 402, 403, 404, 405, 420, 421, 422, 423, 424, 428, 429, 430, 431, 464, 465, 474, 476, 480, 481, 491], "doi": 100, "domain": [4, 134], "dosovitskii": 100, "dot": [11, 13, 14, 15, 20, 23, 124, 125, 217, 218, 219, 220, 221, 233, 310, 311, 326, 346, 354, 355, 356, 411, 416, 419, 432, 467, 472, 485, 493], "down": [3, 368, 443, 504], "download": [4, 5, 6, 7, 8], "downsampl": 138, "draw": 207, "drawback": 223, "drawn": [401, 402, 403, 405, 406, 502], "drop": [40, 41, 92, 105, 240, 241, 318, 319, 320, 321, 322, 323, 324], "drop_block": [246, 247], "drop_path": [40, 41, 105, 246, 247, 320], "drop_path_r": [55, 75, 92, 124, 125, 180, 181], "drop_prob": 320, "drop_rat": [55, 92, 124, 125, 180, 181], "dropblock": [240, 325, 328], "dropout": [29, 55, 74, 75, 84, 85, 86, 87, 90, 92, 100, 105, 108, 109, 124, 125, 180, 181, 192, 197, 205, 210, 224, 233, 239, 243, 244, 245, 310, 311, 318, 319, 322, 323, 324, 360, 362, 364], "dropout1d": [246, 247, 325, 328], "dropout1dmodel": 322, "dropout2d": [246, 247, 325, 328], "dropout3d": [246, 247, 325, 328], "dropout_p": [233, 311], "dropout_prob": 90, "dropout_r": 197, "dropoutmodel": 321, "droppath": [325, 328], "dtype": [214, 216, 276, 358, 393, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 476, 491, 496], "due": [23, 25, 69, 110, 122, 234, 235, 302, 443, 502], "dummi": 213, "duplic": [10, 15, 217, 219], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 75, 88, 89, 90, 100, 125, 147, 214, 215, 216, 217, 218, 219, 220, 221, 230, 239, 240, 241, 242, 243, 244, 245, 257, 260, 279, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 366, 368, 370, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 397, 407, 408, 437, 443, 446, 447, 448, 456, 462, 474, 481, 496, 499, 502, 506], "dy": [226, 301], "dynam": [0, 2, 3, 16, 31, 100, 175, 179, 215, 218, 219, 220, 221, 263, 264, 265, 287, 319, 346, 348, 349, 350, 370, 374, 375, 377, 383, 388, 393, 395], "dynamicnetwork": 218, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 101, 102, 103, 104, 110, 138, 180, 181, 192, 214, 230, 287, 305, 306, 307, 310, 318, 334, 369, 382, 389, 390, 393, 407, 424, 425, 440, 442, 444, 453, 459, 460, 467, 500], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 69, 75, 92, 100, 101, 105, 111, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 205, 207, 210, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 248, 250, 257, 260, 263, 264, 265, 273, 274, 276, 286, 287, 299, 302, 306, 310, 313, 314, 315, 316, 318, 321, 322, 323, 324, 329, 331, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 399, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 427, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 464, 466, 467, 471, 472, 475, 476, 477, 479, 481, 482, 483, 485, 486, 490, 493, 495, 496, 497, 498, 499, 500, 502, 504, 506], "earli": [31, 100, 388], "earlier": 114, "eas": 4, "easi": [2, 3, 4, 10, 159, 160, 161, 162, 163, 164, 216, 217, 219], "easier": [3, 217, 218, 221], "easili": [4, 114, 216, 220, 506], "eccv": 100, "economi": 28, "edg": [16, 113, 122, 131, 469, 470, 471, 477], "edu": [5, 6], "educ": 207, "effect": [14, 55, 57, 59, 61, 65, 100, 109, 186, 190, 209, 217, 218, 219, 220, 221, 230, 234, 235, 236, 238, 297, 298, 302, 305, 306, 308, 339, 340, 341, 343, 344, 345, 346, 366, 370, 371, 372, 377, 395, 396, 472, 493], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 66, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 100, 105, 108, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 198, 201, 203, 238, 283, 284, 285, 299, 300, 303, 326, 334, 368, 370, 371], "efficientnet": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "efficientnet_b0": 100, "efficientnet_b1": 100, "efficientnet_b2": 100, "efficientnet_b3": 100, "efficientnet_b4": 100, "efficientnet_b5": 100, "efficientnet_b6": 100, "efficientnet_b7": 100, "efficientnet_v2": [84, 85, 86, 87], "efficientnet_v2_": 100, "efficientnet_v2_l": 100, "efficientnet_v2_m": 100, "efficientnet_v2_xl": 100, "efficientnetv2": 100, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 326, "einstein": [10, 11, 13, 14, 15, 326], "einsum": 12, "either": [16, 250, 366, 397, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 463, 475, 494], "element": [0, 10, 13, 15, 25, 26, 90, 100, 216, 220, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 276, 280, 281, 282, 283, 284, 285, 286, 299, 300, 302, 306, 307, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 333, 334, 335, 336, 337, 346, 351, 352, 353, 354, 355, 356, 396, 399, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 424, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 464, 468, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 494], "elementwise_affin": 346, "elimin": [13, 15], "elsewher": [354, 355, 356, 424], "elu": [225, 247, 309, 328], "elumodel": 297, "embed": [55, 57, 59, 61, 66, 67, 68, 105, 109, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 197, 233, 247, 277, 310, 311, 328, 359, 360, 362, 363, 364, 490], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 106, 107, 108, 109, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 310, 360, 361, 362, 363, 364], "embedding_dim": [197, 276, 358], "embedding_lay": 358, "embedding_matrix": 276, "emphas": [114, 121], "emploi": [31, 55, 57, 59, 61, 75, 122], "empti": [215, 221, 432, 466], "empty_lik": 432, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 66, 67, 68, 74, 98, 100, 105, 108, 124, 125, 130, 134, 138, 175, 176, 177, 178, 180, 182, 183, 191, 207, 209, 215, 216, 217, 218, 219, 220, 233, 241, 302, 310, 311, 313, 314, 315, 329, 331, 360, 362, 364, 368, 380, 393, 394, 395, 399, 401, 402, 403, 405, 407, 425, 495], "encapsul": [16, 311, 368, 393, 407], "enclos": [394, 397], "encod": [31, 55, 100, 197, 210, 334, 337, 360, 361, 362, 363, 364, 393], "encoder_lay": [363, 364], "encoderlay": 363, "encompass": 74, "encourag": [240, 319, 321, 322, 323, 324, 333, 334, 337, 384], "end": [24, 137, 223, 226, 227, 228, 241, 273, 297, 299, 300, 301, 302, 304, 320, 335, 336, 337, 351, 352, 353, 354, 355, 356, 388, 390, 413, 414, 416, 420, 427, 433, 438, 446, 448, 451, 464, 467, 474, 477, 487, 488, 489, 506], "enforc": [13, 215, 217, 219, 326, 361, 362, 363, 364], "engin": [16, 25, 407], "enhanc": [31, 41, 42, 57, 59, 61, 65, 66, 67, 68, 90, 91, 92, 98, 99, 100, 103, 106, 107, 112, 122, 123, 129, 132, 145, 146, 156, 157, 171, 172, 173, 174, 179, 181, 190, 205, 206, 217, 219, 287, 303, 374, 506], "enough": 16, "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 75, 84, 85, 86, 87, 105, 127, 189, 214, 215, 216, 217, 218, 219, 220, 221, 230, 233, 262, 263, 264, 265, 276, 280, 281, 282, 301, 306, 311, 318, 319, 320, 321, 322, 323, 324, 326, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 358, 368, 369, 370, 381, 382, 384, 385, 387, 388, 389, 390, 391, 395, 396, 399, 401, 402, 403, 404, 405, 406, 417, 427, 437, 447, 456, 462, 464, 465, 466, 474, 477, 481, 482, 487, 488, 489, 496, 497, 498, 499, 500, 504, 506], "entir": [3, 16, 241, 243, 244, 245, 320, 323, 324, 406], "entri": [75, 101, 117, 118, 474, 481, 484], "entropi": [251, 252, 333, 334], "environ": [16, 46, 48, 117, 118, 121, 407], "ep": [20, 131, 132, 133, 135, 136, 137, 240, 251, 252, 257, 258, 260, 261, 262, 280, 281, 282, 319, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 377, 382, 383, 384, 385, 386, 387, 388, 389], "epoch": [1, 3, 16, 370, 371, 372, 373, 374, 375, 376, 377, 378], "epsilon": [31, 258, 262, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 382, 383, 384, 385, 386, 387, 388, 389], "equal": [23, 278, 351, 352, 353, 427, 437, 443, 464, 466, 483, 497, 499], "equat": [20, 25, 27], "equival": [11, 412, 460, 478, 490], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 75, 215, 218, 219, 220, 221, 224, 253, 255, 298, 320, 326, 333, 334, 335, 336, 368, 369, 427, 465], "escap": 372, "especi": [3, 16, 110, 217, 219, 220, 305, 396, 404, 495, 496, 500, 506], "essenti": [1, 3, 17, 23, 25, 97, 235, 238, 368, 404, 406, 446, 495, 496, 500, 506], "estim": [336, 384, 385, 386, 387, 388, 389, 394], "et": [55, 89, 100, 105, 209, 360], "eta": 390, "eta_": [371, 372, 377, 390], "eta_0": [371, 373, 375, 376, 378], "eta_min": 371, "eta_t": [371, 372, 373, 375, 376, 377, 378], "etc": [10, 69, 75, 114, 138, 333, 366, 496], "euclidean": [24, 262], "european": 100, "eval": [16, 320, 407], "evalu": [215, 257, 260, 318, 319, 320, 321, 322, 323, 324, 339, 340, 341, 343, 344, 345, 397, 407, 450, 506], "evaluate_model": 377, "even": [382, 394, 397, 420, 421, 424, 428, 429, 430, 431], "evenli": [263, 264, 265, 348, 349, 350, 420, 427, 466, 483], "everi": [1, 16, 373, 378, 394, 506], "everywher": 451, "exact": [215, 218, 461, 500, 502], "exactli": [221, 273], "exampl": [4, 16, 370, 412], "exc_typ": 397, "exc_valu": 397, "excel": [91, 121, 126, 127], "except": [0, 11, 137, 394, 397, 451, 467, 472, 493], "exchang": 55, "excit": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 286], "exclud": [488, 489], "exclus": [402, 405, 420], "exdb": 8, "execut": [16, 218, 394, 397, 407], "exist": [15, 27, 217, 219, 221, 398, 426, 467], "exit": 394, "exp": [223, 228, 229, 231, 297, 304, 432], "exp_rang": 372, "expand": [4, 10, 15, 50, 100, 238, 465, 479, 486], "expans": [10, 13, 15, 54, 92, 114, 117, 118, 124, 125, 130, 131, 132, 133, 135, 136, 137], "expansion_factor": 113, "expect": [18, 218, 221, 241, 310, 318, 320, 321, 322, 323, 324, 346, 360, 361, 362, 363, 364, 368], "expens": 3, "experi": [16, 114, 404, 406, 506], "experiment": [16, 406], "explan": [23, 25, 29, 40, 192, 205, 263, 264, 265, 348, 349, 350, 381], "explicit": [13, 14, 15, 221, 326], "explicitli": [15, 16, 100, 217, 219, 407, 419, 425], "explod": [304, 339, 340, 341], "explor": [16, 120, 368, 406], "expon": [23, 262, 417], "exponenti": [223, 228, 230, 297, 304, 306, 318, 373, 375, 384, 385, 386, 387, 388, 442], "exponentiallr": [370, 379], "expos": [16, 394], "express": [10, 11, 13, 15, 43, 106, 107, 108, 126], "extend": [4, 55, 100, 138, 158, 175, 181, 188, 316, 419], "extens": [100, 380], "extern": [4, 394], "extra": [54, 87, 122, 188, 465], "extract": [31, 57, 59, 61, 66, 67, 68, 88, 94, 97, 100, 125, 126, 129, 147, 158, 175, 187, 188, 189, 191, 203, 207, 238, 315, 316, 351, 353, 393, 398, 421, 446, 448, 487, 488, 489, 491, 497, 499], "extractor": [101, 102, 103, 104, 203], "extrem": [25, 100, 148, 187, 199, 274], "extrema": 273, "ey": 432, "f": [1, 4, 5, 6, 7, 8, 16, 100, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 303, 306, 360, 362, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 394], "f_1": 286, "f_2": 286, "facilit": [10, 14, 88, 217, 221, 230, 306, 313, 314, 315, 368, 380, 498, 506], "factor": [74, 90, 114, 124, 223, 233, 234, 235, 236, 238, 286, 295, 296, 310, 311, 366, 370, 372, 373, 375, 376, 377, 378, 381, 388, 389, 390, 391, 464], "factori": 204, "failur": [217, 218, 219, 220, 368], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 74, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 147, 180, 181, 213, 214, 215, 216, 233, 239, 241, 242, 243, 244, 245, 257, 260, 273, 274, 278, 289, 291, 292, 293, 294, 295, 296, 310, 311, 313, 314, 315, 320, 329, 331, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 389, 395, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 446, 447, 448, 456, 462, 463, 464, 469, 470, 471, 474, 482, 491, 494, 496], "famili": [54, 100, 114, 132, 136, 137, 188, 398], "fan": [100, 291, 292, 295, 296], "fan_in": [291, 292], "fan_out": [291, 292], "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": 388, "faster": [100, 125, 370, 383, 387, 397], "fc": [16, 97, 147, 158, 165, 175, 218, 286, 314, 315, 351, 352, 353, 354, 355, 356], "fc1": [16, 103, 104, 213, 217, 221, 298, 299, 300, 302, 303, 304, 305, 307, 308, 331], "fc2": [16, 103, 104, 213, 217, 221, 298, 299, 300, 302, 304, 305, 307, 308, 331], "fc3": 104, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 88, 91, 92, 94, 97, 100, 101, 102, 103, 104, 105, 110, 123, 124, 125, 126, 127, 128, 129, 130, 133, 137, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 175, 176, 177, 178, 187, 188, 189, 191, 192, 203, 205, 206, 207, 240, 248, 250, 257, 258, 280, 281, 282, 286, 287, 315, 319, 321, 322, 323, 324, 329, 331, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 368, 383], "feature_extractor": 101, "fed": [3, 506], "feed": [3, 506], "feedforward": [197, 210, 213, 360, 362, 364], "femto": [48, 100], "fergu": [100, 205], "fetch": 0, "few": 213, "fewer": [1, 100, 134, 139, 140, 141, 142, 143, 144, 465, 490], "field": [5, 6, 8, 100, 105, 134, 175, 179, 207, 287], "file": [3, 398], "fill": [289, 293, 294, 401, 402, 403, 405, 425, 426, 428, 429, 430, 431], "fill_valu": [425, 426], "filter": [75, 100, 114, 205, 234, 235, 236, 238, 280, 281, 282, 314, 315], "filter_height": 238, "filter_s": 238, "filter_width": 238, "final": [40, 55, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 197, 210, 217, 218, 219, 220, 221, 233, 287, 310, 360, 361, 363, 394, 407, 495, 506], "find": [27, 446, 448, 476, 487], "fine": [55, 100, 105, 120, 123, 286, 506], "finer": 125, "finest": 126, "first": [5, 6, 7, 8, 20, 101, 180, 181, 182, 183, 205, 213, 218, 219, 248, 286, 329, 370, 384, 385, 386, 387, 388, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 457, 466, 470, 475, 487, 491, 493, 495, 496, 506], "fit": [15, 368], "fix": [100, 134, 180, 218, 373, 376, 378, 407, 477], "flag": [16, 394, 397, 464], "flat": [100, 180], "flatten": [13, 97, 101, 221, 238, 316, 416, 473, 478, 479, 481, 491], "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 88, 97, 98, 99, 100, 101, 114, 115, 138, 147, 171, 172, 173, 174, 179, 192, 203, 217, 218, 219, 220, 221, 326, 366, 368, 375, 380, 407, 419, 428, 429, 496, 506], "flexibli": 14, "flip": [501, 503, 506], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 74, 75, 90, 92, 105, 111, 115, 124, 125, 126, 127, 128, 129, 130, 180, 181, 197, 210, 214, 216, 223, 226, 233, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 257, 258, 260, 261, 262, 276, 279, 280, 281, 282, 289, 293, 294, 295, 296, 297, 301, 310, 311, 318, 319, 320, 321, 322, 323, 324, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 362, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 399, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 438, 450, 463, 469, 470, 471, 474, 496, 498, 500, 501, 502, 503], "float32": [214, 216, 393, 407, 420, 421, 424, 425, 426, 428, 430, 463, 496], "float64": [393, 431, 463, 496], "floor": [378, 432], "flop": [100, 209, 394, 482], "flow": [31, 91, 97, 100, 165, 221, 240, 296, 298, 305, 308, 313, 314, 315, 329, 331, 395, 437, 474], "fluctuat": 372, "fly": [2, 3], "fn": 397, "fname": 3, "focu": 31, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 105, 106, 107, 108, 109, 117, 118, 171, 172, 173, 174, 179, 192, 203, 205, 210, 213, 223, 224, 226, 227, 228, 229, 230, 231, 233, 248, 250, 278, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 318, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 398, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 446, 448, 457, 465, 475, 480, 490, 497, 498, 499, 500, 501, 502, 503, 506], "footprint": 109, "foral": [361, 363], "forc": [16, 240], "form": [16, 26, 55, 287, 361, 363, 416, 469, 471, 475, 479, 486, 506], "format": [2, 3, 5, 6, 7, 8, 213, 273, 334, 337, 496], "formul": [224, 262], "formula": [20, 28, 230, 263, 264, 265, 306, 307, 335, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 412, 462, 500], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 205, 213, 214, 215, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394], "foundat": [16, 97, 114, 165, 215, 368, 380], "four": [70, 71, 72, 73, 105, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 477], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 105, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 241, 248, 250, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 362, 364, 371, 382, 383, 384, 385, 386, 387, 388, 389, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467, 472, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 492, 493, 494, 498], "frame": 245, "framework": [4, 10, 16, 207, 334, 337, 339, 340, 341, 343, 344, 345, 369, 380, 506], "free": [16, 393, 464], "frequent": [334, 337], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 240, 248, 257, 260, 273, 274, 276, 278, 280, 281, 282, 286, 287, 289, 291, 292, 293, 294, 295, 296, 303, 310, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 361, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 396, 398, 399, 401, 402, 403, 405, 406, 407, 412, 413, 414, 418, 419, 421, 446, 447, 448, 456, 462, 464, 467, 472, 475, 476, 479, 483, 484, 485, 486, 487, 491, 493, 494, 497, 498, 499, 500, 501, 502, 503, 506], "fu": 100, "full": [16, 28, 115, 117, 118, 197, 210, 432], "full_lik": 432, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 69, 70, 71, 72, 73, 74, 75, 97, 100, 101, 102, 103, 104, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 250, 286, 287, 331, 406, 407, 482], "func": 398, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 92, 215, 217, 218, 219, 220, 221, 280, 281, 282, 286, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 318, 319, 321, 322, 323, 324, 326, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 360, 362, 364, 368, 371, 372, 374, 375, 378, 380, 406, 495, 506], "fundament": [233, 250, 331, 407, 496], "further": [14, 42, 43, 44, 45, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 113, 115, 116, 117, 118, 120, 122, 145, 146, 189, 406, 447, 456, 462], "fuse": [31, 100, 175, 394], "fusion": [55, 176, 177, 178], "futur": [233, 311, 330, 363, 364], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 110, 138, 180, 181, 192, 273, 286, 287, 318, 369, 382, 389, 393, 407, 425, 467, 500], "g_": 383, "g_t": 389, "gain": [295, 296], "gamma": [258, 339, 340, 341, 342, 343, 344, 345, 346, 370, 372, 373, 374, 376, 378], "gamma_c": [258, 342], "gap": [147, 158, 175, 286], "gaussian": [224, 298], "gelu": [65, 105, 225, 247, 309, 328], "gelunetwork": 298, "gener": [11, 16, 25, 42, 47, 51, 207, 210, 213, 241, 273, 274, 279, 316, 318, 319, 321, 322, 323, 324, 344, 360, 385, 387, 388, 394, 399, 401, 402, 403, 404, 405, 406, 411, 419, 420, 422, 423, 427, 475, 499, 500, 501, 503, 506], "geoffrei": [5, 6], "geometr": 443, "geq": 488, "get": [5, 6, 7, 8], "get_lr": [371, 372, 373, 374, 375, 376, 377, 378], "git": 16, "github": [7, 16], "give": [381, 389], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 211, 238, 262, 273, 276, 310, 311, 316, 326, 333, 334, 337, 369, 393, 395, 399, 425, 429, 431, 474, 482, 483, 487, 495, 500, 501, 503, 506], "global": [0, 55, 57, 59, 61, 65, 66, 67, 68, 74, 100, 105, 124, 126, 129, 130, 134, 147, 158, 165, 175, 180, 182, 183, 184, 185, 187, 188, 189, 258, 286, 342, 394, 395, 397, 404, 406], "global_response_norm": [247, 259], "globalresponsenorm": [328, 347], "go": [10, 89, 100], "goal": [333, 334, 337], "googlenet": [89, 100], "gpu": [11, 100, 110, 214, 216, 393, 399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464], "grad": [11, 16, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 238, 241, 248, 250, 273, 274, 278, 283, 284, 285, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 369, 380, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 501, 503, 504], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 91, 97, 100, 214, 216, 274, 316, 319, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 397, 399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 443, 450, 463, 464, 476, 491, 496], "gradual": [370, 371, 373], "grain": [55, 100, 105, 286], "graph": [16, 296, 394, 397, 407, 420, 421, 424, 428, 429, 430, 431, 496], "grayscal": [7, 8, 101, 102, 103, 104, 500, 506], "great": 129, "greater": [50, 128, 437, 466], "green": 500, "grid": [100, 105, 273, 274, 437, 475], "grid_sampl": [247, 273, 275], "grid_window_s": 105, "gridattent": 105, "grn": 342, "groundbreak": 100, "group": [100, 114, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 218, 234, 235, 236, 280, 281, 282, 287, 313, 314, 315, 369, 370, 380], "group1": 218, "group2": 218, "groupedconvblock": 158, "grow": 16, "growth_rat": [69, 70, 71, 72, 73], "guarante": 404, "h": [10, 13, 14, 15, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 199, 233, 235, 236, 238, 240, 244, 245, 258, 264, 265, 267, 268, 271, 272, 273, 278, 279, 281, 282, 286, 310, 311, 326, 340, 341, 342, 344, 345, 349, 350, 353, 356, 360, 362, 364, 497, 499], "h_": [235, 236, 264, 265, 267, 268, 271, 272, 278, 314, 315, 316, 349, 350, 352, 353, 355, 356], "h_in": 274, "h_out": [235, 236, 267, 268, 271, 272, 274], "h_stack": 472, "ha": [0, 20, 42, 55, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 213, 221, 234, 235, 236, 280, 281, 282, 303, 307, 333, 334, 339, 340, 341, 343, 344, 345, 346, 366, 369, 380, 407, 412, 437, 443, 450, 460, 465, 467, 472, 476, 485, 491, 493, 500], "hackabl": 16, "haip": 100, "half": [372, 454], "han": 7, "hand": 27, "handl": [0, 3, 10, 16, 25, 187, 209, 215, 217, 218, 219, 220, 221, 276, 334, 337, 368, 380, 393, 419], "handwritten": [7, 8, 104], "hang": 100, "hard": [117, 118, 300], "hard_sigmoid": 299, "hardsigmoid": [300, 309, 328], "hardswish": [309, 328], "hardwar": 110, "hashabl": 407, "hat": [31, 384, 385, 386, 387, 388], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 216, 218, 220, 221, 235, 236, 240, 262, 276, 296, 358, 368, 424, 428, 429, 430, 431, 446, 448, 467, 472, 474, 475, 484, 485, 490, 491, 493, 498, 504], "he": 100, "head": [31, 40, 55, 66, 67, 68, 92, 105, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 203, 210, 233, 310, 311, 360, 362, 364], "head_dim": 55, "head_fn": 92, "heapsort": 482, "heart": 16, "height": [31, 203, 235, 236, 238, 244, 245, 258, 264, 265, 267, 268, 271, 272, 274, 278, 279, 287, 314, 315, 316, 340, 341, 342, 344, 345, 349, 350, 352, 353, 355, 356, 366, 497, 499, 504], "help": [31, 57, 59, 61, 65, 90, 226, 228, 245, 276, 297, 301, 303, 304, 308, 339, 340, 341, 351, 352, 354, 355, 358, 370, 372, 377, 378, 381, 384, 385, 387, 395, 396, 457], "henc": 480, "here": [3, 18, 215, 248, 368, 380, 396, 406, 495, 496, 506], "hidden": [29, 55, 105, 126, 127, 128, 129, 180, 181, 197, 205, 210, 218], "hidden_s": 218, "hierarch": [40, 41, 57, 59, 61, 100, 124, 125, 126, 127, 128, 129, 130, 131, 136, 180, 181, 218, 221, 368], "hierarchi": 314, "hierarchicalnetwork": 218, "high": [11, 43, 49, 50, 68, 84, 85, 86, 87, 94, 100, 105, 106, 107, 110, 113, 121, 122, 125, 127, 135, 136, 137, 155, 170, 179, 187, 188, 189, 199, 200, 370, 402, 405, 419], "higher": [50, 75, 111, 119, 158, 187, 334, 337, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 411, 412, 416, 419, 442, 457], "highest": [54, 110, 122, 402], "highli": [16, 31, 46, 54, 100, 116, 126, 186, 209, 375], "highlight": [286, 354, 355, 356], "hinton": [5, 6], "hist": [469, 470, 471], "histogram": [470, 471, 473], "histogram2d": 473, "histogramdd": 473, "histor": 383, "histori": [399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 428, 429, 430, 431], "hold": [114, 217, 218, 219, 220], "horizont": [472, 485, 501, 506], "hot": [334, 337], "how": [2, 3, 13, 15, 126, 171, 172, 173, 174, 179, 218, 221, 273, 274, 326, 368, 506], "howard": 100, "howev": [214, 296, 443], "hstack": 473, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [100, 286], "huang": 100, "huber": [253, 335], "huber_loss": [247, 254], "huberloss": [328, 338], "huberregressionmodel": 335, "hue": 506, "huge": [49, 100, 126], "human": 207, "hybrid": [65, 100, 122, 123], "hyperbol": [231, 308, 440, 453, 459], "hyperparamet": [124, 139, 140, 141, 142, 143, 144, 147, 158, 204, 211, 369, 381], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "i_": 419, "i_0": 419, "i_1": [13, 14, 15, 326, 419], "i_2": [13, 14, 15, 326], "i_k": [15, 419], "i_m": [13, 15, 326], "iccv": 100, "iclr": 100, "idea": 100, "ideal": [43, 47, 51, 110, 111, 114, 123, 126, 221], "ident": [22, 23, 92, 100, 273, 274, 279, 320, 328, 332, 404, 406, 424, 480], "identifi": [207, 219], "idx": [2, 3, 464], "ieee": [100, 286], "ignor": [360, 361, 362, 363, 364, 464], "ii": 460, "ij": [11, 31, 230, 278, 306, 410, 411, 412, 416, 475, 488, 489], "ik": [11, 410, 411, 412], "ill": [19, 25], "ilsvrc": 100, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "image_dir": 3, "image_path": 3, "image_s": [197, 198, 199, 200, 201, 202], "imagedataset": 3, "imageio": 3, "imagenet": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 156, 157, 171, 172, 173, 174, 179], "imbal": [334, 337], "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202], "imgclf": [65, 92], "impact": [100, 387], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 74, 88, 89, 90, 91, 92, 98, 99, 100, 101, 111, 112, 113, 124, 125, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 180, 197, 203, 205, 208, 209, 210, 215, 238, 241, 274, 283, 284, 285, 287, 310, 311, 316, 320, 342, 362, 364, 369, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 472, 493, 500], "impli": [313, 314], "implicit": [316, 425], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "improp": [10, 218, 221, 406], "improv": [31, 40, 57, 59, 61, 65, 67, 75, 89, 90, 91, 95, 97, 99, 100, 105, 123, 125, 132, 134, 138, 147, 158, 171, 172, 173, 174, 175, 180, 181, 188, 189, 191, 205, 212, 240, 241, 257, 276, 279, 286, 298, 304, 308, 326, 358, 370, 371, 372, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 499, 502, 506], "imread": 3, "in1_featur": [248, 329], "in2_featur": [248, 329], "in_channel": [31, 55, 65, 105, 106, 107, 108, 109, 110, 124, 125, 131, 132, 133, 134, 135, 136, 137, 147, 180, 181, 197, 218, 221, 280, 281, 282, 283, 284, 285, 286, 287, 313, 314, 315, 340, 341, 351, 352, 353, 354, 355, 356, 368], "in_featur": [217, 218, 221, 250, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 314, 315, 318, 321, 322, 329, 331, 333, 334, 335, 336, 337, 339, 343, 346, 351, 352, 353, 354, 355, 356], "incept": [89, 90, 91, 92, 97, 98, 99], "inception_next": 92, "inception_next_atto": 100, "inception_next_bas": 100, "inception_next_smal": 100, "inception_next_tini": 100, "inception_resnet_v1": 100, "inception_resnet_v2": 100, "inception_v1": 100, "inception_v3": 100, "inception_v4": 100, "inceptionnext": [93, 94, 95, 96], "inceptionresnet": [98, 99], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 66, 67, 68, 88, 89, 90, 98, 101, 105, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 204, 205, 210, 213, 215, 216, 218, 220, 221, 278, 280, 281, 282, 283, 284, 285, 362, 364, 366, 368, 369, 374, 380, 387, 394, 406, 412, 477, 488, 489], "inclus": [216, 219, 402, 405, 427], "incom": [250, 331], "incompat": 465, "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 100, 116, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 188, 190, 298], "increas": [43, 44, 105, 108, 110, 111, 119, 122, 126, 127, 129, 132, 137, 158, 159, 160, 161, 162, 163, 164, 175, 212, 234, 235, 236, 238, 279, 372, 377, 383, 390, 396, 472, 493, 500, 501, 503, 506], "independ": [55, 218, 234, 235, 236, 310, 318, 321, 322, 323, 324, 346, 412, 423, 498, 500, 502, 504], "index": [0, 2, 5, 6, 7, 8, 10, 13, 258, 276, 326, 342, 358, 371, 372, 373, 374, 375, 376, 378, 396, 407, 420, 421, 424, 443, 464, 475, 476, 480], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 66, 67, 68, 130, 145, 146, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 213, 216, 218, 220, 221, 252, 256, 276, 334, 337, 351, 358, 360, 361, 362, 363, 364, 376, 393, 395, 407, 464, 476, 482, 487, 494, 497, 499], "individu": [3, 218, 221, 335, 346, 380, 383, 390], "induc": [228, 304], "induct": [57, 59, 61, 65, 100], "inf": 458, "infer": [125, 171, 172, 173, 174, 179, 218, 221, 393, 397], "infin": [26, 28, 386], "inform": [31, 55, 100, 126, 182, 183, 184, 185, 190, 207, 209, 213, 214, 286, 374, 380, 382], "infti": [24, 388], "inherit": [1, 381, 389, 391], "init": 290, "initi": [1, 16, 31, 40, 69, 92, 97, 105, 109, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 186, 187, 188, 189, 193, 194, 195, 196, 204, 211, 214, 216, 217, 218, 219, 220, 221, 287, 289, 291, 292, 293, 294, 295, 296, 310, 313, 314, 315, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 346, 358, 362, 364, 366, 368, 369, 371, 373, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 401, 404, 405, 406, 420, 424, 427, 428, 429, 430, 431, 463], "initial_accumulator_valu": 383, "inner": [410, 419, 432], "innov": [113, 123], "inputinput1": 329, "input2": 329, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 205, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 342, 348, 349, 350, 358, 466, 482, 487, 488, 489], "input_1": 248, "input_2": 248, "input_data": [297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 321, 322, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356], "input_indic": [276, 358], "input_s": [218, 220, 306, 334, 337], "input_shap": 213, "input_tensor": [55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 214, 217, 218, 219, 220, 221, 230, 240, 241, 262, 283, 284, 285, 286, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 366, 368, 497, 498, 499, 500, 501, 502, 503, 504], "insert": 464, "insid": [3, 394, 395], "insight": 100, "inspect": [16, 215, 216, 221, 369], "inspir": [10, 13, 15, 16, 40, 100], "instabl": [25, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 109, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 211, 212, 213, 215, 216, 217, 219, 220, 221, 260, 303, 343, 344, 345, 346, 360, 361, 363, 369, 393, 397, 398, 463, 479, 486, 506], "instance_norm": [247, 259, 343, 344, 345], "instancenorm1d": [328, 347], "instancenorm1dmodel": 343, "instancenorm2d": [328, 347], "instancenorm3d": [328, 347], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 74, 84, 85, 86, 87, 92, 93, 94, 95, 96, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 171, 172, 173, 174, 179, 182, 183, 184, 185, 190, 191, 198, 199, 200, 201, 202, 398], "instead": [57, 59, 61, 213, 217, 218, 219, 220, 221, 291, 292, 295, 296, 358, 360, 362, 364, 384, 385, 386, 422, 423], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 216, 230, 233, 234, 235, 236, 238, 240, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 296, 306, 310, 311, 313, 314, 315, 316, 319, 326, 329, 331, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 388, 390, 393, 398, 399, 401, 402, 403, 404, 405, 407, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 438, 446, 447, 448, 450, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 504], "int32": [358, 464, 476], "int64": [393, 407], "integ": [1, 3, 23, 165, 192, 234, 235, 236, 264, 265, 310, 313, 314, 315, 316, 346, 349, 350, 352, 353, 354, 355, 356, 401, 402, 403, 405, 406, 419, 422, 428, 430, 437, 443, 447, 450, 456, 461, 462, 471, 477, 479, 480, 483, 486], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 65, 66, 67, 68, 100, 105, 122, 138, 210, 216, 218, 220, 221, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 326, 329, 331, 351, 352, 353, 354, 355, 356, 407], "intellig": [100, 207, 286], "intend": [10, 127, 214, 219, 220], "intens": [25, 69, 148, 498, 500], "interact": [105, 180, 248, 329, 368, 406], "interdepend": 100, "interfac": [2, 16, 215, 218, 380], "interfer": [395, 490], "intermedi": [25, 126, 145, 146, 286, 360, 362, 364, 407], "intern": [16, 100, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 217, 218, 219, 220, 221, 334, 337, 368, 419, 497, 498, 499, 500, 501, 502, 503, 504], "interpol": [247, 274, 277, 366, 427, 504], "interpret": [10, 100, 207, 230, 306, 467], "interv": [376, 378, 401, 405, 420], "introduc": [41, 57, 59, 61, 65, 75, 89, 90, 100, 105, 111, 112, 113, 124, 125, 133, 158, 191, 209, 227, 286, 298, 302, 303, 305, 308, 318, 321, 322, 323, 324, 360, 499, 502, 506], "introspect": [16, 221], "intuit": [10, 13, 16, 217, 219, 368, 506], "inv": 21, "inv_a": 22, "invari": [352, 355], "invers": [19, 22, 23, 25, 372, 383, 434, 435, 436], "invert": [19, 22, 23, 27, 100, 112, 113, 116], "invit": 16, "invok": 398, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 175, 207, 223, 224, 226, 227, 228, 229, 231, 248, 250, 278, 313, 314, 315, 326, 329, 331, 399, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 431, 442, 444, 445, 446, 448, 452, 454, 475, 477, 479, 486], "is_all_fre": 407, "is_bit_fre": 393, "is_caus": [233, 311, 363, 364], "is_fre": 407, "is_leaf": 407, "isn": 16, "issu": [3, 16, 304, 339, 340, 341, 384, 385], "item": [7, 16, 336], "iter": [0, 1, 2, 3, 214, 215, 218, 220, 361, 363, 369, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 420], "ith": [230, 306], "its": [4, 16, 23, 25, 29, 41, 100, 110, 114, 122, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 176, 177, 178, 205, 213, 214, 217, 218, 219, 220, 234, 235, 236, 238, 273, 279, 287, 296, 298, 302, 307, 319, 354, 355, 356, 368, 369, 382, 390, 394, 395, 396, 398, 420, 422, 423, 430, 437, 443, 446, 448, 450, 463, 465, 480, 482, 483, 490, 498, 501, 503, 506], "itself": [18, 23, 217, 218, 219, 220, 370, 397], "j": [8, 10, 13, 14, 15, 31, 230, 276, 286, 306, 326, 339, 340, 341, 343, 344, 345, 351, 352, 354, 355, 358, 475, 485, 488, 489, 497, 499], "j_": 419, "j_1": [13, 15, 326], "j_2": [13, 15, 326], "j_k": [15, 419], "j_n": [13, 15, 326], "jie": 100, "jk": [11, 411], "join": [3, 467], "json": 398, "k": [23, 31, 55, 100, 105, 125, 233, 234, 310, 311, 313, 334, 340, 341, 344, 345, 351, 354, 355, 364, 410, 411, 419, 421, 424, 467, 483, 487], "k_2": 55, "k_d": [236, 315, 353, 356], "k_h": [235, 236, 314, 315, 316, 352, 353, 356], "k_i": 310, "k_j": 31, "k_w": [235, 236, 314, 315, 316, 352, 353, 356], "kaim": [100, 291, 292, 295, 296], "kaiming_norm": 290, "kaiming_uniform": 290, "kalenichenko": 100, "karen": 100, "kashif": 7, "kdim": 310, "keep": [215, 241, 302, 382, 394, 450, 464, 480, 488, 489], "keep_grad": [216, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 496], "keep_var": 215, "keepdim": [24, 446, 447, 448, 456, 462], "kei": [16, 55, 65, 105, 114, 124, 130, 131, 132, 133, 135, 136, 137, 180, 181, 207, 215, 217, 219, 221, 233, 310, 311, 364, 369], "kept": [447, 456, 462], "kernel": [100, 101, 102, 103, 104, 114, 117, 118, 175, 176, 177, 178, 179, 205, 234, 235, 236, 238, 263, 264, 265, 266, 267, 268, 270, 271, 272, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 316, 348, 349, 350, 352, 353, 356, 394], "kernel_s": [113, 117, 118, 175, 176, 177, 178, 218, 221, 266, 267, 268, 270, 271, 272, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 316, 326, 340, 341, 351, 352, 353, 354, 355, 356], "keyerror": 215, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 206, 215, 330], "kind": [464, 482], "kj": [410, 412], "known": 100, "kriz": [5, 6], "krizhevski": [5, 6, 100], "kroneck": [13, 230, 306, 326], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 215, 330, 398], "l": [18, 25, 84, 100, 200, 233, 234, 243, 263, 266, 270, 280, 286, 311, 316, 318, 321, 322, 323, 324, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 363, 364, 457, 465], "l1": 262, "l2": [262, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "l_": [209, 234, 263, 266, 270, 313, 348, 351, 354, 360], "l_k": 310, "l_m": [361, 362], "l_out": [234, 266, 270], "l_q": 310, "l_t": [360, 361, 362], "l_v": 310, "label": [4, 5, 6, 7, 8, 11, 90, 207, 333, 334, 337], "lambd": 381, "lambda": [20, 228, 304, 375, 381, 385], "lambda_1": 20, "lambda_2": 20, "lambda_fn": 375, "lambda_i": 20, "lambda_n": 20, "lambdalr": 379, "languag": [4, 313, 329, 351, 354, 360], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 69, 84, 87, 100, 105, 106, 107, 110, 113, 117, 119, 122, 123, 126, 127, 137, 148, 149, 150, 153, 166, 167, 183, 187, 188, 189, 198, 199, 200, 283, 284, 285, 303, 335, 368, 381, 384, 385, 386, 389, 390, 391], "larger": [42, 55, 58, 67, 68, 74, 75, 105, 106, 107, 147, 175, 188, 212, 217, 219, 234, 235, 236, 238, 240, 319, 381, 413, 466, 477, 497, 499, 504], "largest": [54, 126, 137, 187, 446, 487], "last": [1, 230, 261, 306, 371, 372, 373, 374, 375, 376, 378, 411, 412, 419, 464, 466, 467, 482, 501, 503], "last_channel": 113, "last_epoch": [371, 372, 373, 374, 375, 376, 378], "last_lr": [370, 371, 372, 373, 374, 375, 376, 377, 378], "later": [31, 100], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 187, 188, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 215, 217, 218, 221, 230, 241, 250, 257, 260, 261, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 306, 311, 313, 314, 315, 320, 329, 330, 331, 337, 346, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 406, 477, 496], "layer1": 398, "layer2": 398, "layer_group": 218, "layer_norm": [247, 259, 346], "layer_norm_ep": [360, 362, 364], "layer_scale_init": 40, "layer_sequ": [218, 221], "layernorm": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 328, 347, 360, 361, 362, 363, 364], "layernormmodel": 346, "lceil": 437, "le": 100, "lead": [10, 16, 218, 221, 262, 298, 343, 344, 345, 346, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 406, 465], "leaf": 407, "leaki": [226, 301], "leaky_relu": [225, 247, 301], "leakyrelu": [309, 328], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 75, 94, 95, 100, 105, 126, 130, 158, 159, 160, 161, 162, 163, 164, 205, 206, 207, 209, 217, 218, 219, 220, 227, 230, 286, 297, 301, 302, 306, 313, 314, 315, 321, 322, 323, 324, 326, 329, 331, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 404, 427, 483, 488, 489, 495, 496, 506], "learnabl": [31, 55, 180, 181, 214, 215, 216, 257, 258, 260, 261, 280, 281, 282, 310, 313, 314, 315, 329, 331, 339, 340, 341, 342, 343, 344, 345, 346, 364, 368], "least": [25, 26, 28, 366, 460, 488, 489], "lecun": [8, 100], "left": [23, 24, 25, 28, 31, 55, 105, 224, 230, 262, 298, 306, 310, 316, 333, 334, 335, 337, 339, 340, 341, 343, 344, 345, 346, 354, 355, 356, 362, 364, 457, 464, 497, 499], "leftarrow": 387, "len": [0, 1, 2, 3, 475], "lenet": [102, 103, 104], "lenet_1": 100, "lenet_4": 100, "lenet_5": 100, "length": [55, 105, 218, 233, 234, 243, 263, 266, 270, 313, 330, 339, 343, 348, 351, 354, 363, 364, 464, 477, 498], "leq": [299, 300, 335, 376, 388, 417, 438, 489], "lerp": 278, "less": [0, 223, 226, 253, 297, 301, 334, 335, 337, 427, 443], "let": [20, 419, 464], "level": [97, 105, 126, 127, 128, 129, 316], "leverag": [13, 14, 15, 16, 27, 31, 91, 92, 99, 100, 119, 122, 131, 134, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186, 187, 203, 207, 287, 368], "lfloor": [316, 378, 443], "li": [100, 134], "librari": [3, 10, 16, 17, 215, 368, 369, 380, 398, 406, 407, 506], "lie": 399, "lightweight": [16, 52, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 109, 112, 117, 118, 130, 134, 139, 140, 141, 142, 143, 144, 151, 168, 184, 185, 191, 202, 287, 300, 303], "like": [13, 14, 15, 16, 57, 59, 61, 75, 97, 100, 114, 122, 159, 160, 161, 162, 163, 164, 176, 177, 178, 189, 207, 210, 214, 215, 218, 221, 234, 240, 295, 296, 304, 318, 319, 326, 339, 340, 341, 343, 344, 345, 395, 396, 426, 463, 496, 506], "likelihood": [256, 334, 337], "limit": [45, 52, 117, 118, 119, 121, 213, 303, 382, 438], "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 397], "linear": [11, 16, 17, 18, 25, 26, 27, 92, 100, 105, 112, 116, 125, 131, 132, 133, 134, 135, 136, 137, 165, 213, 217, 218, 219, 221, 223, 224, 226, 227, 228, 241, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 315, 316, 318, 320, 321, 322, 329, 330, 333, 334, 335, 336, 337, 339, 343, 346, 351, 352, 353, 354, 355, 356, 360, 362, 364, 370, 398, 424], "linearli": 335, "linguist": 207, "linspac": 432, "linspace_tensor": 427, "list": [0, 1, 16, 31, 40, 41, 55, 66, 67, 68, 75, 92, 101, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 147, 158, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 213, 214, 216, 217, 218, 219, 220, 261, 287, 330, 346, 369, 371, 372, 373, 374, 375, 376, 377, 378, 399, 401, 402, 403, 405, 407, 419, 421, 422, 423, 425, 426, 428, 429, 430, 431, 461, 465, 470, 471, 480, 483, 484, 492, 495], "listdir": 3, "liter": [14, 147, 214, 216, 251, 252, 253, 255, 256, 274, 278, 280, 281, 282, 283, 284, 285, 287, 291, 292, 313, 314, 315, 333, 334, 335, 336, 337, 366, 372, 377, 393, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 475, 482], "liu": 100, "ln": 417, "load": [3, 4, 5, 6, 7, 8, 214, 215, 216, 369, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398], "load_state_dict": [215, 369, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 65, 66, 67, 68, 100, 105, 124, 126, 129, 180, 181, 182, 183, 184, 185, 207, 238, 313, 316, 372], "locat": [100, 274, 278, 482], "log": [181, 256, 333, 334, 337, 371, 372, 373, 374, 375, 376, 377, 378, 432, 445, 464], "log2": 432, "log_2": 445, "log_softmax": 337, "logarithm": [417, 442, 444, 445], "logic": [3, 348, 349, 350, 368, 369, 443], "logit": [29, 40, 205, 230, 306, 334, 394], "logsoftmax": [334, 337], "long": [31, 105, 127, 209, 273, 387, 461], "lookup": [276, 358], "loop": [1, 13, 14, 15, 16, 218, 326, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "loss": [16, 25, 217, 218, 219, 220, 221, 230, 251, 252, 253, 255, 256, 273, 297, 298, 301, 302, 304, 305, 306, 308, 318, 321, 322, 323, 324, 330, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 482, 487], "low": [97, 112, 117, 118, 121, 402, 405], "lower": [18, 111, 294, 316, 361, 362, 363, 364, 372, 381, 389, 390, 391, 405, 438, 471, 488, 489], "lower_triangular": 488, "lowest": 402, "lp": 262, "lr": [16, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "lr_lambda": 375, "lr_schedul": 379, "lrschedul": 379, "ls_init_valu": 92, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 400, 432, 473, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "m": [85, 100, 192, 209, 217, 218, 221, 310, 352, 353, 355, 356, 360, 361, 364, 376, 384, 385, 386, 387, 388, 419, 424, 488, 489], "m1": 16, "m2": 16, "m3": 16, "m_": [384, 385, 386, 387, 388, 488, 489], "m_m": 362, "m_t": [362, 387, 388], "maaten": 100, "mac": 16, "machin": [3, 7, 8, 25, 100, 207, 210, 286, 360, 384, 396, 404], "magnitud": [241, 276, 358, 389, 390, 506], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 121, 218, 220, 262, 279, 320, 326, 335, 370, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 406, 466, 490, 500, 506], "main": [26, 97, 218, 421, 424, 488, 489], "maintain": [25, 31, 41, 46, 55, 64, 66, 67, 68, 84, 85, 86, 87, 95, 100, 108, 111, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 214, 215, 217, 218, 219, 221, 228, 241, 291, 292, 295, 296, 297, 298, 304, 318, 320, 321, 322, 323, 324, 339, 340, 341, 343, 344, 345, 384, 389, 497, 500, 504], "major": 16, "make": [1, 3, 10, 31, 43, 44, 47, 48, 88, 97, 100, 101, 110, 112, 114, 116, 117, 118, 120, 121, 123, 126, 135, 147, 182, 183, 184, 185, 186, 190, 191, 198, 201, 207, 218, 221, 305, 334, 335, 346, 352, 355, 368, 383, 384, 385, 386, 396, 398, 406, 412, 475, 483, 495, 506], "manag": [215, 217, 218, 219, 220, 221, 368, 380, 394, 395, 397, 398, 406], "manhattan": 24, "mani": 213, "manipul": [10, 13, 217, 219, 506], "manner": [10, 13, 14, 180, 218, 221, 393], "manual": [10, 251, 252, 256, 316, 333, 334, 337], "map": [13, 15, 92, 100, 105, 145, 146, 147, 158, 168, 175, 215, 229, 231, 240, 258, 274, 286, 305, 308, 320, 326, 342, 358, 394, 466, 482], "mark": 474, "marri": 100, "mask": [100, 214, 233, 310, 311, 318, 321, 322, 323, 324, 360, 361, 362, 363, 364, 474, 488, 489, 494], "masked_fil": 473, "match": [10, 11, 15, 16, 27, 55, 215, 218, 221, 233, 251, 253, 255, 261, 280, 281, 282, 319, 358, 369, 419, 426, 442, 465, 479, 480, 483, 486, 492, 498, 506], "math": [310, 439, 452, 458], "mathbb": [310, 483], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 203, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 248, 250, 273, 278, 283, 284, 285, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 313, 314, 315, 318, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 410, 411, 412, 416, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 467, 472, 477, 478, 479, 480, 484, 485, 486, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504], "mathcal": [291, 293, 295, 318, 321, 322, 323, 324, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 464], "mathemat": [16, 22, 280, 281, 282, 499, 501, 502, 503], "mathrm": [25, 450], "matmul": [316, 419, 432], "matric": [17, 19, 20, 22, 25, 27, 28, 273, 310, 364, 410, 411, 412, 424, 475, 488, 489], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 238, 248, 273, 276, 316, 330, 331, 358, 368, 410, 419, 457, 475], "matrix_pow": 21, "matthew": 100, "max": [10, 24, 165, 192, 227, 262, 270, 271, 272, 276, 299, 300, 302, 303, 354, 355, 356, 358, 371, 372, 377, 386, 413, 432, 438, 469], "max_lr": 372, "max_norm": [276, 358], "max_pool": [354, 355, 356], "max_pool1d": [247, 269], "max_pool2d": [247, 269], "max_pool3d": [247, 269], "max_valu": 438, "maxim": [3, 49, 122], "maximum": [24, 110, 302, 303, 354, 355, 356, 371, 372, 384, 386, 432, 438, 446, 469, 502], "maxpool": [29, 205], "maxpool1d": [328, 357], "maxpool1dmodel": 354, "maxpool2d": [218, 221, 314, 328, 357], "maxpool2dmodel": 355, "maxpool3d": [315, 328, 357], "maxpool3dmodel": 356, "maxvit": [106, 107, 108, 109, 110], "maxvit_bas": 100, "maxvit_larg": [100, 107], "maxvit_smal": 100, "maxvit_tini": [100, 108], "maxvit_xlarg": 100, "mbconv": 105, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 145, 146, 213, 214, 228, 234, 235, 236, 239, 251, 252, 253, 255, 256, 257, 260, 280, 281, 282, 293, 297, 298, 299, 301, 302, 304, 305, 308, 315, 318, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 377, 384, 385, 386, 387, 388, 389, 395, 403, 432, 438, 442, 444, 445, 446, 448, 452, 454, 456, 460, 461, 462, 495, 498, 506], "meaning": [14, 221], "measur": [333, 334, 336, 337], "mechan": [31, 55, 65, 66, 67, 68, 100, 105, 125, 126, 127, 128, 129, 134, 145, 146, 165, 175, 179, 181, 182, 183, 184, 185, 186, 189, 190, 197, 209, 210, 220, 248, 310, 466], "media": 100, "medium": [48, 52, 56, 85, 100, 119, 120, 123, 128], "meet": 100, "mem_is_caus": [361, 362], "mem_key_padding_mask": [360, 361, 362], "mem_mask": [360, 361, 362], "membership": 333, "memori": [2, 3, 16, 69, 134, 360, 361, 362, 397, 422, 423], "merg": [13, 326], "mergesort": [464, 482], "meshgrid": 473, "metal": [393, 407], "method": [3, 10, 14, 16, 17, 22, 75, 165, 203, 204, 217, 218, 219, 220, 221, 251, 252, 253, 255, 256, 274, 291, 292, 295, 296, 333, 334, 335, 336, 337, 366, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 406], "metric": 377, "mha": 310, "mid": [95, 201], "mid_channel": [117, 118], "middl": [106, 107, 396], "might": 368, "migrat": 16, "mileston": 376, "mimic": 426, "min": [299, 300, 303, 371, 372, 377, 414, 432, 438, 469], "min_lr": 377, "min_valu": 438, "mind": [0, 3, 218, 221, 397, 450], "mingx": 100, "mini": 1, "minim": [4, 93, 100, 113, 221, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 380], "minima": 372, "minimalist": 16, "minimum": [371, 372, 377, 432, 438, 448, 469], "minu": 305, "mirror": [429, 431], "mismatch": [10, 13, 15, 75, 105, 215, 326, 368, 369], "miss": [215, 368], "mitig": [226, 297, 301, 304, 339, 340, 341], "mix": [92, 394, 397], "mixer": 92, "mlp": [16, 55, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 287], "mlp_dim": 197, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181], "mlx": [110, 393, 407, 425, 464], "mnist": [4, 7, 9, 102, 103], "mnist_train": [4, 8], "mobil": [100, 111, 112, 113, 114, 116, 117, 118, 121, 131], "mobilenet": [112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 303], "mobilenet_v2": 100, "mobilenet_v3": [117, 118], "mobilenet_v3_larg": 100, "mobilenet_v3_smal": 100, "mobilenet_v4": [119, 120, 121, 122, 123], "mobilenet_v4_conv_larg": 100, "mobilenet_v4_conv_medium": 100, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 100, "mobilenet_v4_hybrid_medium": 100, "mobilenetv2": [100, 112], "mobilenetv3": [100, 113, 117, 118], "mode": [16, 245, 257, 260, 273, 274, 278, 291, 292, 318, 320, 321, 322, 323, 324, 366, 372, 377, 407, 477], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 230, 233, 240, 276, 279, 280, 281, 282, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 320, 321, 322, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 398, 406, 437, 495, 496, 506], "model_b0": 74, "model_b7": 74, "model_kwarg": 213, "model_tini": 92, "moder": [44, 48, 96, 120, 135, 169], "modern": [16, 40, 41, 92, 100], "modif": [204, 221], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 147, 203, 206, 217, 218, 219, 220, 289, 291, 292, 293, 294, 295, 296, 318, 370, 395, 404, 407, 464, 472, 474, 481, 490, 493], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 88, 91, 92, 97, 98, 99, 100, 101, 105, 111, 112, 113, 114, 123, 124, 125, 147, 158, 165, 175, 180, 181, 192, 203, 205, 206, 210, 213, 214, 216, 217, 218, 219, 220, 221, 241, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 369, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 406, 496, 506], "modular": [3, 16, 207, 210, 215, 218, 221, 368, 506], "moduledict": [218, 219, 221, 222], "modulelist": [220, 221, 222], "moment": [384, 385, 386, 387, 388], "momentum": [257, 260, 280, 281, 282, 339, 340, 341, 343, 344, 345, 372, 381, 387, 389, 391], "momentum_decai": 387, "monitor": 377, "monoton": 307, "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 68, 106, 107, 108, 127, 128, 129, 133, 147, 154, 187, 188, 190, 191, 212, 217, 218, 221, 240, 283, 284, 285, 297, 321, 322, 323, 324, 360, 368, 369, 380, 381, 382, 385, 386, 389, 390, 391, 403, 412, 419, 460, 485, 488, 489, 506], "most": [17, 47, 100, 126, 207, 355, 496, 497, 506], "mostli": 450, "move": [16, 381, 389], "mse": [253, 255, 335, 336], "mse_loss": [16, 247, 254], "mseloss": [328, 338], "mu": [31, 293, 339, 340, 341, 343, 344, 345, 346, 462], "mu_c": 498, "mu_i": [343, 344, 345], "much": [126, 506], "mul": 415, "multi": [3, 4, 11, 55, 57, 59, 61, 66, 67, 68, 92, 98, 100, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 189, 190, 191, 197, 210, 230, 233, 252, 256, 287, 306, 310, 334, 337, 360, 362, 364, 394, 407, 447, 456, 462], "multi_conv": [55, 57, 59, 61], "multidimension": [401, 405, 422], "multiheadattent": [312, 328], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 147, 165, 179, 207, 219, 220, 221, 238, 278, 279, 286, 287, 310, 316, 318, 321, 322, 323, 324, 326, 334, 337, 361, 363, 368, 370, 373, 377, 396, 399, 401, 402, 403, 405, 410, 415, 419, 422, 423, 457, 466, 483, 490, 495, 500, 506], "multipli": [23, 115, 220, 250, 331, 366, 376, 377, 378, 390, 416, 432, 445], "multisteplr": 379, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 213, 215, 217, 218, 219, 220, 221, 241, 261, 310, 318, 320, 321, 322, 323, 324, 337, 358, 360, 362, 364, 366, 369, 374, 399, 460, 465, 466, 467, 472, 474, 477, 479, 480, 483, 485, 486, 488, 489, 493, 497, 498, 499, 500, 501, 503], "mx": [393, 407], "my_simple_model": 398, "mymodel": [215, 216, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "myoptim": [369, 380], "n": [13, 23, 24, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 209, 217, 218, 221, 233, 234, 235, 236, 238, 240, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 286, 291, 293, 295, 310, 311, 313, 314, 315, 316, 323, 324, 329, 331, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 419, 424, 447, 450, 460, 462, 464, 471, 476], "n1": 24, "nabla": 490, "nabla_": [382, 383, 384, 385, 386, 387, 388, 390], "nabla_t": 388, "nadam": 392, "nair": [5, 6], "name": [10, 13, 14, 15, 100, 209, 213, 215, 217, 219, 221, 326, 398], "nan": [26, 28], "nano": [51, 100], "natur": [25, 313, 329, 351, 354, 360, 417, 442, 443, 444], "ndarrai": [16, 214, 216, 399, 407, 421, 423, 426, 429, 431, 463], "ndim": [26, 28, 216, 407], "ne": 23, "nearest": [274, 278, 366, 443, 450], "nearli": 407, "necessari": [4, 5, 6, 7, 8, 16, 25, 472, 493], "need": [2, 4, 14, 15, 123, 209, 218, 219, 220, 230, 329, 360, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 422, 423, 495, 496, 506], "neg": [23, 25, 28, 223, 256, 279, 297, 301, 302, 304, 334, 337, 390, 450, 464, 467, 494], "negative_slop": [226, 301], "neglect": 220, "neighbor": [274, 278], "neq": 24, "nest": [213, 218, 221, 368, 394, 397], "nestedmodel": 213, "nesterov": 387, "net": [100, 205], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 97, 100, 104, 111, 114, 115, 119, 122, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 192, 197, 206, 207, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 248, 250, 257, 274, 279, 286, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 351, 352, 353, 354, 355, 356, 358, 360, 362, 364, 368, 369, 380, 381, 389, 391, 405, 406, 407, 420, 428, 430, 446, 448, 477, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 74, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 104, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 227, 228, 229, 230, 231, 234, 235, 236, 241, 248, 250, 257, 279, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 351, 352, 353, 354, 355, 356, 358, 368, 369, 380, 381, 389, 391, 405, 406, 407, 420, 428, 430, 446, 448, 477, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "neuralnetwork": [299, 300, 302, 307], "neuron": 301, "never": [464, 500], "new": [11, 15, 215, 216, 223, 224, 226, 227, 228, 229, 231, 248, 250, 278, 287, 291, 292, 293, 294, 295, 296, 369, 374, 377, 397, 398, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 426, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 465, 467, 472, 474, 477, 479, 480, 481, 485, 486, 488, 489, 492, 493, 494], "new_tensor": 457, "next": [221, 495], "nll": 256, "nll_loss": [247, 254], "nllloss": [328, 338], "nlp": [207, 276, 358], "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 131, 132, 133, 135, 136, 137, 147, 158, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 205, 213, 222, 225, 232, 237, 246, 249, 254, 259, 269, 275, 277, 288, 290, 309, 312, 317, 325, 327, 328, 332, 338, 347, 357, 359, 365, 367, 369, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 496, 506], "no_grad": [16, 395], "node": [16, 407], "nois": [28, 406], "non": [20, 23, 25, 28, 100, 105, 220, 224, 226, 227, 273, 291, 292, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 318, 321, 322, 323, 324, 360, 361, 362, 363, 364, 384, 385, 417, 419, 437, 438, 443, 450, 476, 491], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 24, 31, 55, 65, 74, 75, 88, 92, 97, 101, 111, 112, 113, 114, 124, 125, 138, 147, 180, 181, 203, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 241, 248, 250, 251, 252, 253, 255, 256, 257, 260, 261, 276, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 469, 470, 472, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504], "nonzero": 473, "norm": [17, 21, 55, 65, 105, 108, 109, 124, 125, 180, 181, 262, 276, 358, 361, 363, 386], "norm_first": [360, 362, 364], "norm_lay": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "norm_layer_tf": 105, "norm_typ": [276, 358], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 100, 105, 124, 125, 131, 132, 133, 135, 136, 137, 165, 180, 181, 186, 187, 188, 189, 190, 191, 224, 228, 230, 231, 240, 257, 258, 260, 261, 273, 274, 276, 280, 281, 282, 290, 291, 295, 298, 304, 306, 318, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 361, 362, 363, 364, 389, 403, 406, 469, 470, 471, 495, 505, 506], "normalized_shap": [261, 346], "notat": [10, 11, 13, 14, 15, 326], "note": [234, 318], "noth": [239, 242, 243, 244], "notimplementederror": [2, 215, 369], "notin": 438, "nov": 100, "novel": [7, 100, 105], "now": 16, "np": [147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 214, 216, 286, 334, 337, 358, 393, 407, 412, 419, 420, 421, 424, 428, 430, 431, 457, 463, 496], "npy": [5, 6, 7, 8], "num": [361, 363, 427], "num_block": 31, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 306, 334, 337], "num_decoder_lay": [210, 360], "num_embed": [276, 358], "num_encoder_lay": [210, 360], "num_featur": [221, 280, 281, 282, 339, 340, 341, 343, 344, 345], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 210, 310, 360, 361, 362, 363, 364], "num_init_featur": [69, 70, 71, 72, 73], "num_lay": [197, 361, 363], "num_paramet": 220, "num_stag": 125, "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 216, 218, 220, 221, 233, 234, 235, 236, 238, 243, 244, 245, 248, 250, 252, 256, 257, 258, 260, 263, 264, 265, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 305, 310, 313, 314, 315, 316, 326, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 371, 372, 376, 377, 378, 381, 393, 401, 404, 405, 407, 417, 420, 422, 424, 427, 446, 447, 448, 450, 461, 462, 466, 467, 469, 470, 471, 472, 476, 477, 479, 480, 481, 484, 486, 487, 493, 498, 500, 501, 503, 506], "numer": [14, 22, 25, 240, 251, 252, 257, 258, 260, 261, 262, 280, 281, 282, 303, 319, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 360, 362, 364, 382, 383, 384, 385, 386, 387, 388, 389, 407, 409, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 463, 496], "numpi": [16, 214, 216, 334, 337, 393, 407, 412, 425, 457, 460, 465, 477, 479, 486, 496, 506], "o": [3, 209, 310, 353, 356, 428, 429, 464], "object": [1, 3, 17, 55, 100, 105, 175, 186, 187, 188, 189, 190, 207, 215, 219, 220, 336, 368, 393, 394, 408, 409, 413, 414, 415, 418, 463], "observ": 384, "obtain": [1, 105], "occur": [15, 279, 394, 397, 398, 467], "occurr": 23, "odot": [318, 321, 322, 323, 324], "off": [44, 120, 395], "offer": [4, 10, 41, 42, 44, 54, 68, 95, 106, 107, 110, 120, 128, 129, 131, 133, 198, 368, 380, 406, 464, 506], "offset": 424, "often": [23, 156, 157, 234, 235, 236, 238, 274, 276, 319, 334, 337, 420, 430, 496, 500, 504, 506], "old": 377, "older": 387, "one": [0, 11, 14, 171, 172, 173, 174, 179, 207, 220, 221, 230, 234, 250, 266, 270, 280, 281, 282, 304, 305, 306, 313, 322, 334, 337, 339, 343, 351, 354, 366, 369, 394, 396, 397, 403, 418, 425, 426, 429, 446, 448, 468, 478, 485, 490, 496], "ones": [16, 248, 250, 313, 314, 315, 331, 339, 340, 341, 343, 344, 345, 346, 368, 424, 425, 429, 432, 466], "ones_lik": 432, "onli": [213, 273, 274, 278, 299, 302, 318, 319, 321, 322, 323, 324, 333, 334, 337, 339, 340, 341, 343, 344, 345, 346, 354, 355, 356, 390, 394, 395, 420, 438, 446, 448, 457, 460, 464, 477, 478, 480, 481, 484, 487, 488, 489], "onto": [26, 28], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 105, 134, 145, 146, 165, 166, 167, 168, 169, 170, 214, 215, 218, 223, 224, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 241, 245, 248, 250, 263, 264, 265, 266, 267, 268, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 329, 330, 331, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 368, 394, 395, 396, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 422, 423, 428, 430, 442, 444, 445, 446, 447, 448, 450, 452, 454, 456, 457, 460, 462, 467, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 496, 498, 504], "operand": 407, "operatornam": [23, 25, 310, 360, 361, 362, 363, 364, 464], "opposit": [381, 481], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 69, 75, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 112, 113, 117, 118, 120, 121, 122, 123, 126, 186, 187, 214, 216, 219, 220, 238, 313, 314, 315, 358, 368, 371, 372, 373, 374, 375, 376, 377, 378], "optimizer_st": [369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 226, 230, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 301, 306, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 389, 391, 399, 401, 402, 403, 405, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 438, 446, 447, 448, 450, 456, 461, 462, 463, 464, 466, 467, 469, 470, 471, 475, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 496, 500, 501, 503], "ord": [24, 262], "order": [1, 3, 10, 16, 24, 28, 217, 218, 219, 220, 221, 419, 461, 464, 482, 487, 491, 495], "ordered_dict": 221, "ordereddict": [215, 217, 218, 221], "organ": [55, 217, 218, 219, 221, 398], "orient": 506, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 90, 100, 104, 180, 181, 191, 239, 279, 286, 308, 394, 437, 443, 464, 466, 477, 478, 479, 480, 481, 482, 486, 487, 491, 492, 504], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [381, 389, 391], "other": [2, 3, 22, 57, 59, 61, 90, 99, 101, 104, 120, 124, 214, 215, 218, 221, 291, 292, 318, 319, 368, 369, 395, 406, 420, 422, 428, 430, 460, 475, 487, 506], "otherwis": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 223, 226, 227, 228, 230, 241, 297, 299, 300, 301, 302, 304, 306, 320, 321, 322, 323, 324, 335, 351, 352, 353, 354, 355, 356, 361, 363, 369, 390, 398, 413, 414, 446, 448, 474, 487, 488, 489, 491], "otim": [25, 248, 329], "out": [0, 3, 4, 10, 16, 223, 224, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 291, 292, 295, 296, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 362, 381, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 464, 467, 468, 472, 477, 478, 479, 480, 484, 485, 486, 488, 489, 492, 493, 494], "out_channel": [101, 113, 117, 118, 218, 221, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 340, 341, 351, 352, 353, 354, 355, 356, 368], "out_featur": [217, 218, 221, 248, 250, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 314, 315, 318, 321, 322, 329, 331, 333, 334, 335, 336, 337, 339, 343, 346, 351, 352, 353, 354, 355, 356], "outcom": [500, 501, 503], "outer": [11, 432], "outlier": [253, 335], "outputoutput_height": 238, "output_lay": [218, 221], "output_s": [218, 263, 264, 265, 348, 349, 350], "output_width": 238, "output_with_norm": [276, 358], "output_with_pad": [276, 358], "outsid": [0, 320, 394], "over": [0, 1, 2, 3, 11, 14, 17, 112, 122, 145, 146, 175, 205, 215, 218, 220, 230, 263, 264, 265, 286, 306, 313, 314, 315, 334, 337, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 370, 372, 378, 381, 382, 383, 384, 385, 401, 405, 419, 446, 447, 448, 456, 460, 462, 500, 501, 503], "overal": [203, 241], "overdetermin": 25, "overfit": [1, 29, 205, 242, 245, 319, 321, 322, 323, 324, 381, 384, 389, 391], "overhead": [100, 113, 286], "overlap": [100, 105], "overli": 303, "overrid": [2, 3, 55, 108, 109, 120, 121, 122, 180, 181, 464], "overridden": [215, 369], "overshoot": 370, "overwrit": [217, 219], "own": [4, 16, 217, 218, 219, 220, 234, 235, 236, 296, 368, 498], "p": [24, 25, 74, 216, 219, 220, 239, 240, 241, 242, 243, 244, 245, 262, 276, 316, 318, 319, 321, 322, 323, 324, 351, 354, 355, 358, 500, 501, 503, 506], "p_d": [353, 356], "p_h": [316, 352, 353, 356], "p_w": [316, 352, 353, 356], "packag": [2, 3, 4, 10, 17, 207, 368, 380, 398, 404, 406, 496, 506], "pad": [101, 218, 221, 234, 235, 236, 238, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 316, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 473], "pad_after_dim1": 477, "pad_after_dim2": 477, "pad_before_dim1": 477, "pad_before_dim2": 477, "pad_width": 477, "padding_height": 238, "padding_idx": [276, 358], "padding_mod": 274, "padding_width": 238, "pair": 248, "panda": [16, 100], "pang": 100, "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 134], "paradigm": 100, "parallel": [1, 3, 55, 100, 175, 209, 310], "param": [215, 216, 219, 220, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "param1": 215, "param_dict": 219, "param_group": [369, 380], "param_groups_setup": 369, "param_list": 220, "param_s": 398, "paramet": [0, 2, 16, 100, 102, 103, 104, 209, 215, 368, 369, 370, 380, 406, 506], "parameter": 114, "parameterdict": 222, "parameterlist": 222, "parent": [16, 368, 407], "pars": 393, "part": [214, 215, 296, 358, 368, 395, 406, 420, 421, 424, 428, 429, 430, 431, 466, 483, 488, 489, 496, 506], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 223, 224, 226, 227, 228, 229, 230, 231, 248, 250, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467, 472, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 492, 493, 494], "particip": [16, 216, 496], "particular": [217, 219], "particularli": [25, 55, 57, 59, 61, 105, 112, 120, 159, 160, 161, 162, 163, 164, 218, 219, 220, 221, 230, 240, 250, 280, 281, 282, 283, 284, 285, 306, 331, 334, 337, 343, 344, 345, 346, 371, 385, 395, 398, 427, 443, 495], "partit": [105, 437, 483], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 205, 213, 215, 216, 217, 218, 219, 220, 221, 273, 278, 280, 281, 282, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 314, 315, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 394, 407, 425, 426, 427, 447, 456, 460, 461, 462, 464, 467, 472, 478, 480, 484, 488, 489, 493, 496, 506], "past": [381, 382, 384, 389], "patch": [55, 57, 59, 61, 100, 105, 124, 125, 180, 181, 197, 198, 199, 200, 201, 202, 238, 316, 352], "patch_norm": [180, 181], "patch_siz": [55, 124, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 197, 198, 199, 200, 201, 202], "path": [3, 5, 6, 7, 8, 40, 41, 55, 92, 105, 125, 241, 320], "pathwai": 100, "patienc": 377, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 100, 227, 286, 302, 313, 314, 315, 326], "pedagog": 16, "penal": [381, 389, 391], "penalti": [382, 383, 384, 385, 386, 387, 388], "penros": 25, "per": [1, 13, 109, 113, 125, 131, 132, 133, 135, 136, 137, 159, 160, 161, 162, 163, 164, 176, 177, 178, 233, 263, 310, 316, 326, 343, 344, 345, 346, 348, 364, 372, 465], "perceptron": 92, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 66, 67, 68, 75, 84, 85, 86, 87, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 114, 115, 116, 120, 121, 122, 123, 126, 127, 128, 129, 131, 134, 155, 171, 172, 173, 174, 175, 181, 187, 188, 189, 192, 201, 205, 207, 212, 215, 216, 220, 224, 233, 234, 235, 236, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 313, 314, 315, 316, 318, 321, 322, 323, 324, 326, 329, 330, 331, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 366, 369, 370, 374, 377, 394, 395, 404, 406, 408, 409, 412, 415, 418, 419, 442, 446, 448, 450, 456, 461, 465, 483, 494, 495, 497, 499, 504, 506], "period": 371, "permut": [13, 326, 419, 461], "persist": [214, 399, 401, 402, 403, 405, 422, 423], "perturb": [20, 27, 28, 506], "phase": 31, "phi": [224, 298], "pi": [224, 298, 371, 439, 452, 458], "pick": [274, 464], "pico": [52, 100], "piecewis": [299, 300], "pil": [496, 506], "pinv": 21, "pioneer": 100, "pip": 16, "pipelin": [5, 6, 7, 8, 326, 406, 495, 496, 498], "pixel": [5, 6, 7, 8, 273, 274, 278, 366, 498, 500], "place": [289, 291, 292, 293, 294, 295, 296, 407, 450, 474, 481], "placehold": [215, 330], "placement": [16, 407], "plai": 406, "platform": 393, "plot": 475, "point": [4, 279, 376, 394, 395], "pointwis": [283, 284, 285], "pool": [10, 29, 100, 101, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 263, 264, 265, 266, 267, 268, 270, 271, 272, 286, 287, 314, 315, 348, 349, 350, 351, 352, 353, 354, 355, 356, 446, 448], "pool1": 221, "pool2": 221, "poorli": 22, "popul": 215, "popular": [4, 100], "portion": [466, 488, 489, 506], "pose": 25, "posit": [1, 18, 23, 31, 100, 180, 181, 197, 210, 215, 221, 233, 279, 297, 301, 302, 304, 311, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 390, 396, 417, 466, 474, 479, 482, 486, 487, 494, 499], "possibl": 506, "potenti": [25, 330, 389, 484], "power": [10, 16, 23, 51, 100, 110, 112, 117, 118, 125, 126, 128, 132, 135, 138, 186, 199, 286, 326, 370, 396, 432, 450, 495, 496, 506], "pp": [100, 209], "practic": [25, 95, 334, 337], "practition": 506, "pre": [31, 84, 85, 86, 87, 100, 148, 152, 153], "preactbottleneck": [148, 152, 153], "preced": [100, 216, 366], "precis": [136, 393, 425, 450], "preconfigur": [76, 77, 78, 79, 80, 81, 82, 83, 98, 99, 109], "pred": [16, 397], "predecessor": [41, 125], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 182, 183, 184, 185, 186, 188, 189, 190, 191, 198, 199, 200, 201, 202, 207, 218, 304, 358, 370, 393], "predict": [55, 100, 180, 182, 183, 184, 185, 203, 207, 333, 334, 336, 337], "prefer": 378, "prefix": [215, 398], "prepar": [3, 396, 477, 479, 486, 496, 506], "prepend": [215, 465], "preprint": 100, "preprocess": [3, 4, 238, 279, 406, 450, 495, 496, 506], "present": [333, 334, 335, 337, 339, 340, 341, 343, 344, 345, 346, 352], "preserv": [14, 100, 126, 239, 241, 274, 279, 318, 320, 420, 421, 424, 428, 429, 430, 431, 447, 456, 457, 462, 464, 466, 481, 491], "preset": [4, 106, 107, 108, 109], "prevent": [1, 10, 16, 105, 217, 218, 219, 220, 221, 233, 242, 245, 262, 303, 311, 319, 321, 322, 323, 324, 333, 334, 363, 364, 370, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397], "previou": [100, 381, 390, 394, 397], "previous": [374, 384], "primarili": 221, "principl": 100, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504], "print_grad": 407, "prior": 394, "priorit": [117, 118, 122, 287, 299], "prob": 399, "probabilist": 406, "probabl": [74, 90, 124, 180, 181, 197, 210, 224, 230, 233, 239, 240, 241, 242, 243, 244, 245, 251, 298, 306, 310, 311, 318, 319, 320, 321, 322, 323, 324, 333, 334, 337, 360, 362, 364, 399, 469, 471, 500, 501, 503, 506], "problem": [25, 26, 28, 100, 226, 297, 301, 388], "proceed": 100, "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 98, 100, 105, 124, 145, 146, 147, 175, 180, 204, 205, 209, 220, 234, 235, 236, 260, 279, 280, 281, 282, 286, 287, 304, 308, 313, 315, 329, 339, 340, 341, 343, 344, 345, 346, 351, 353, 354, 356, 360, 361, 363, 381, 475, 496, 497, 498, 499, 504, 506], "produc": [16, 29, 205, 213, 263, 264, 265, 286, 313, 314, 315, 348, 349, 350, 394, 404, 406], "product": [11, 26, 28, 124, 125, 233, 300, 305, 307, 310, 311, 329, 346, 368, 410, 411, 415, 416, 419], "profil": 394, "program": [395, 406], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "project": [26, 28, 55, 57, 59, 61, 65, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 180, 181, 210, 310], "projector": 25, "promin": [351, 353, 354, 355, 356], "promot": [221, 334, 337, 368], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 100, 215, 221, 248, 250, 273, 278, 286, 352, 353, 389, 390, 399, 410, 411, 412, 416, 419, 446, 448, 464, 466, 475, 476, 477, 480, 482, 487, 490, 491, 492], "proper": [276, 466, 487], "properli": [0, 220, 230, 306, 368, 370], "properti": [17, 19, 22, 23, 224, 228, 239, 298, 304, 318, 383, 388, 394], "proport": [5, 6, 7, 8, 462], "proportion": 504, "propos": 134, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 97, 100, 101, 114, 120, 123, 126, 128, 129, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 180, 181, 189, 192, 197, 199, 200, 203, 204, 206, 207, 210, 215, 217, 218, 219, 220, 224, 233, 250, 264, 265, 276, 279, 311, 326, 333, 334, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 366, 368, 369, 370, 374, 375, 380, 381, 382, 389, 391, 395, 404, 406, 407, 412, 420, 429, 446, 448, 461, 463, 471, 479, 484, 486, 506], "pseudo": [22, 25], "purpos": [42, 47, 51, 401, 405, 420, 428, 430], "pvt": [125, 126, 127, 128, 129, 130], "pvt_huge": 100, "pvt_larg": 100, "pvt_medium": 100, "pvt_small": 100, "pvt_tini": 100, "pvt_v2": [131, 132, 133, 134, 135, 136, 137], "pvt_v2_b0": 100, "pvt_v2_b1": 100, "pvt_v2_b2": [100, 134], "pvt_v2_b2_li": 100, "pvt_v2_b3": 100, "pvt_v2_b4": 100, "pvt_v2_b5": 100, "pvtv2": [100, 131, 132, 133, 134, 135, 136, 137], "pypi": 16, "pyramid": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137], "python": [16, 393, 407, 425], "pytorch": [16, 463], "q": [26, 55, 100, 105, 125, 233, 310, 311, 364], "q_1": 55, "q_i": [31, 310], "qk": [31, 55, 105, 362, 364], "qk_scale": [55, 124, 125, 180, 181], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "qr": 21, "quad": [25, 55, 276, 310, 333, 334, 335, 336, 337, 354, 355, 356, 361, 363, 408, 409, 413, 414, 415, 418, 488, 489, 497], "quadrat": [125, 134, 335], "qualifi": 377, "quanfu": 100, "queri": [55, 65, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 233, 310, 311, 364], "quick": 394, "quickli": 370, "quicksort": [464, 482], "quoc": 100, "quotient": 409, "r": [14, 15, 26, 31, 100, 273, 274, 310, 483, 500, 501, 502, 503], "r_t": 388, "radam": 392, "radix": [138, 139, 140, 141, 142, 143, 144, 145, 146, 464], "rais": [0, 1, 2, 11, 215, 368, 369, 417, 465], "rameswar": 100, "rand": [400, 406], "randint": [400, 406], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 105, 106, 107, 108, 109, 110, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 233, 283, 284, 285, 286, 287, 310, 311, 326, 360, 361, 362, 363, 364, 368, 400, 404, 406], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 203, 233, 283, 284, 285, 286, 287, 310, 320, 326, 358, 360, 361, 362, 363, 364, 499, 500, 501, 502, 503, 506], "random_integ": 406, "random_tensor": 406, "randomcrop": [505, 506], "randomgrayscal": [505, 506], "randomhorizontalflip": [505, 506], "randomli": [1, 239, 241, 242, 243, 244, 245, 279, 318, 321, 322, 323, 324, 499, 500, 501, 502, 503, 506], "randomnoisedataset": [0, 1, 2], "randomrot": [505, 506], "randomverticalflip": 505, "rang": [0, 1, 16, 17, 31, 44, 53, 100, 105, 123, 127, 147, 155, 190, 209, 220, 229, 231, 234, 235, 241, 252, 256, 273, 274, 296, 303, 305, 308, 320, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 389, 391, 399, 402, 427, 434, 435, 438, 469, 470, 471, 498, 502, 506], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 74, 75, 92, 105, 124, 125, 180, 181, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "rather": [7, 13, 15, 219, 220, 326, 376, 385, 480], "ratio": [55, 74, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 165, 180, 181, 286, 287, 504], "ravel": 473, "raw": [230, 306, 334, 407], "rceil": 437, "rcond": 25, "re": [16, 216], "reach": 376, "readabl": [10, 16, 217, 218, 219, 221, 326, 368], "readi": [3, 171, 172, 173, 174, 179, 207, 210], "real": [25, 28, 112, 305], "rearrang": [12, 238, 327, 328], "reassembl": 100, "recalibr": [100, 166, 168, 169, 171, 172, 173, 174, 286], "receiv": [354, 355, 356, 477, 487, 488, 489], "recent": 389, "recept": [100, 105, 134, 175, 179, 287], "reciproc": [25, 432, 444, 445, 454], "recogn": 55, "recognit": [100, 104, 128, 145, 146, 180, 182, 183, 184, 185, 191, 314], "recommend": [16, 110], "reconstruct": 482, "rectangular": 424, "rectif": 388, "rectifi": [226, 227, 301, 302, 388], "recurr": [209, 218, 346], "recurs": [213, 215], "red": 500, "reduc": [12, 29, 31, 65, 100, 111, 125, 134, 147, 158, 175, 192, 205, 283, 284, 285, 286, 339, 340, 341, 343, 344, 345, 351, 352, 353, 354, 355, 356, 370, 373, 376, 377, 378, 387, 390, 397, 446, 447, 448, 456, 462, 500], "reducelronplateau": 379, "reduct": [10, 11, 14, 28, 74, 100, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 165, 251, 252, 253, 255, 256, 286, 287, 333, 334, 335, 336, 337, 371, 377, 378, 419, 446, 448], "reevalu": 369, "refer": [4, 57, 59, 61, 134, 215, 406, 421, 424, 426, 467], "refin": [100, 189, 370], "reflect": [127, 273, 274, 395], "regardless": [25, 478], "region": [236, 240, 263, 264, 265, 278, 299, 319, 349, 350, 477, 497, 506], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 120, 156, 157, 159, 160, 161, 162, 163, 164, 204, 214, 215, 216, 220, 368, 398, 407], "register_buff": 214, "register_hook": 407, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 211, 212], "register_paramet": 215, "registr": [16, 215, 368], "registri": [159, 160, 161, 162, 163, 164, 398], "registry_path": 398, "regress": [4, 255, 335, 336], "regul": [276, 358], "regular": [25, 29, 40, 74, 75, 90, 180, 181, 205, 241, 245, 311, 319, 321, 322, 323, 324, 376, 378, 381, 382, 383, 386, 387, 388, 389, 391], "reimagin": 100, "rel": [31, 100, 180, 181, 370, 377, 464], "relat": [424, 428], "relationship": [31, 126, 128, 504], "relev": [278, 381, 389, 391], "reli": 240, "reliabl": [5, 6, 7, 8], "reliant": [321, 322, 323, 324], "relu": [16, 29, 100, 165, 192, 205, 213, 217, 218, 219, 221, 223, 225, 226, 247, 280, 281, 282, 286, 287, 291, 292, 295, 296, 297, 301, 303, 307, 309, 313, 314, 315, 328, 329, 330, 331, 360, 362, 364], "relu1": 221, "relu2": 221, "relu3": 221, "relu6": [309, 328], "remain": [5, 6, 7, 8, 16, 53, 214, 241, 261, 318, 320, 321, 322, 323, 324, 358, 390], "rememb": 406, "remov": [398, 484, 490], "reorder": [10, 13, 326, 457, 481], "rep": 486, "repeat": [11, 12, 473, 475, 486], "repetit": [10, 15, 479, 486], "replac": [7, 57, 59, 61, 209, 360, 406, 474, 500], "replic": [15, 16, 316, 361, 363, 465], "repr": 393, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 66, 67, 68, 101, 114, 124, 130, 139, 140, 141, 142, 143, 144, 215, 216, 221, 248, 250, 257, 260, 261, 273, 276, 313, 314, 315, 326, 329, 331, 334, 337, 346, 358, 361, 369, 378, 380, 381, 387, 388, 389, 390, 391, 393, 399, 408, 409, 415, 418, 421, 447, 460, 461, 462, 470, 471, 475, 476, 497, 499, 501, 502, 503, 504], "represent": [31, 100, 108, 125, 126, 127, 128, 129, 132, 136, 137, 138, 145, 146, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 197, 210, 276, 286, 352, 355, 358, 369], "reproduc": [399, 401, 402, 403, 404, 405, 406, 506], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 96, 109, 113, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 175, 200, 202, 212, 214, 217, 221, 223, 224, 226, 227, 228, 229, 231, 248, 250, 278, 286, 287, 296, 330, 334, 337, 368, 376, 395, 397, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 465, 467, 472, 474, 475, 477, 478, 479, 480, 484, 485, 486, 492, 493, 496, 497, 504], "requires_grad": [16, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 238, 248, 250, 273, 274, 276, 278, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 366, 368, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 472, 474, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496], "rescal": [251, 252, 256, 333, 334, 337], "research": [16, 368], "reset": [216, 371, 404, 407], "reshap": [10, 13, 165, 250, 314, 315, 326, 366, 396, 419, 457, 473, 478], "resid": 407, "residu": [91, 97, 98, 99, 100, 105, 112, 113, 116, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 362, 364], "residualblock": 147, "resili": 390, "resiz": [278, 495, 505, 506], "resnest": [139, 140, 141, 142, 143, 144, 145, 146], "resnest_101": 100, "resnest_14": 100, "resnest_200": 100, "resnest_26": 100, "resnest_269": 100, "resnest_50": 100, "resnest_50_1s4x24d": 100, "resnest_50_4s2x40d": 100, "resnet": [57, 59, 61, 97, 98, 99, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 175, 176, 177, 178, 286], "resnet_1001": 100, "resnet_101": 100, "resnet_152": 100, "resnet_18": 100, "resnet_200": 100, "resnet_269": 100, "resnet_34": 100, "resnet_50": 100, "resnet_arg": 175, "resnext": [159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179], "resnext_101_32x16d": 100, "resnext_101_32x32d": 100, "resnext_101_32x4d": 100, "resnext_101_32x8d": 100, "resnext_101_64x4d": 100, "resnext_50_32x4d": 100, "resolut": [31, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 105, 106, 107, 110, 125, 126, 134, 171, 172, 173, 174, 179, 181, 407], "resolv": [13, 14, 15, 326, 393], "resourc": [16, 45, 46, 48, 49, 52, 53, 93, 100, 113, 117, 118, 119, 120, 121, 122, 123, 200], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 101, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 248, 250, 273, 278, 287, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 438, 442, 444, 445, 446, 447, 448, 452, 454, 456, 460, 461, 462, 475, 477, 479, 486, 500], "respons": [100, 171, 172, 173, 174, 217, 258, 342, 380], "rest": [488, 489], "restor": [286, 374, 394, 397], "restructur": 480, "result": [10, 11, 13, 15, 18, 22, 23, 25, 100, 215, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 248, 250, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 279, 287, 299, 303, 306, 310, 320, 326, 368, 369, 395, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 463, 467, 469, 471, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 491, 492, 493, 496, 499, 500, 506], "resum": [371, 372, 373, 374, 375, 376, 377, 378, 380], "retain": [100, 125, 216, 240, 319, 407, 420, 425, 426, 430, 446, 447, 448, 456, 462, 466, 474, 488, 489, 496], "retent": 496, "rethink": 100, "retriev": [0, 2, 217, 219, 220, 276, 487], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 97, 101, 109, 110, 121, 123, 165, 214, 215, 217, 218, 219, 220, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 320, 321, 322, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 361, 363, 368, 369, 374, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 398, 495, 506], "return_invers": 491, "reus": [100, 496], "reusabl": [221, 320, 368, 495], "revers": [16, 221, 407, 461, 482, 501, 503], "revolution": 100, "rfloor": [316, 378, 443], "rgb": [5, 6, 31, 65, 89, 90, 91, 98, 99, 109, 110, 124, 180, 181], "rho": 382, "rho_": 388, "rho_t": 388, "rich": [16, 136], "richer": 126, "right": [23, 24, 25, 27, 28, 31, 55, 105, 224, 230, 262, 298, 306, 310, 316, 333, 334, 335, 337, 339, 340, 341, 343, 344, 345, 346, 354, 355, 356, 362, 364, 457, 464, 497], "rightarrow": [13, 310, 326, 483], "rmsprop": 392, "rob": 100, "robust": [42, 47, 94, 121, 190, 191, 240, 279, 318, 321, 322, 323, 324, 335, 368, 382, 499, 500, 502, 506], "roland": 7, "role": [406, 506], "roll": 473, "root": [4, 5, 6, 7, 8, 383, 389, 454], "rotat": [247, 277, 502, 506], "rotated_imag": 279, "round": [432, 437, 443], "rout": [354, 355, 356, 487], "row": [19, 20, 22, 27, 250, 276, 424, 475, 476, 482, 488, 489, 493], "rprop": 392, "rule": [15, 16, 22, 23, 326, 396, 408, 409, 413, 414, 415, 417, 418, 425], "run": [16, 214, 257, 260, 280, 281, 282, 339, 340, 341, 343, 344, 345, 382, 394, 404, 406], "running_mean": [214, 257, 260, 339, 340, 341, 343, 344, 345], "running_var": [257, 260, 339, 340, 341, 343, 344, 345], "runtim": [11, 75, 218, 221, 320, 368, 427], "s_": 390, "s_1": [419, 483], "s_2": 483, "s_d": [353, 356], "s_h": [316, 352, 353, 356], "s_i": 483, "s_k": 419, "s_n": 483, "s_w": [316, 352, 353, 356], "safe": [394, 397], "safeguard": 262, "sain": 100, "same": [19, 20, 22, 23, 27, 133, 230, 239, 240, 241, 242, 243, 244, 245, 257, 258, 260, 261, 262, 264, 265, 279, 280, 281, 282, 283, 284, 285, 287, 303, 313, 314, 315, 318, 321, 322, 323, 324, 330, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 390, 393, 399, 404, 406, 412, 423, 426, 429, 431, 437, 442, 443, 446, 447, 448, 450, 457, 464, 467, 472, 474, 478, 480, 482, 484, 485, 488, 489, 491, 493, 498], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 179, 263, 264, 265, 273, 274, 291, 292, 293, 294, 295, 296, 318, 321, 322, 323, 324, 329, 331, 334, 337, 346, 348, 349, 350, 399, 403, 406, 427, 471, 497, 499, 501, 502, 503, 504], "sandbox": 16, "sandler": 100, "satisfi": [18, 20, 27, 483], "satur": [297, 506], "save": [2, 214, 216, 369, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 398], "scalabl": [3, 47, 74, 100, 159, 160, 161, 162, 163, 164, 181, 203, 368], "scalar": [16, 19, 24, 251, 252, 253, 255, 256, 399, 407, 425, 426, 474], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 66, 67, 68, 69, 74, 75, 92, 98, 100, 102, 103, 104, 105, 106, 107, 110, 111, 115, 119, 120, 122, 123, 124, 125, 126, 130, 134, 137, 138, 145, 146, 148, 149, 150, 153, 166, 167, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 223, 228, 230, 233, 241, 257, 258, 260, 261, 276, 286, 287, 295, 296, 297, 299, 301, 304, 305, 306, 308, 310, 311, 318, 320, 321, 322, 323, 324, 334, 339, 340, 341, 342, 343, 344, 345, 346, 358, 366, 372, 375, 381, 383, 384, 385, 406, 462, 504], "scale_by_keep": [241, 320], "scale_factor": 366, "scale_fn": 372, "scaled_dot_product_attent": [232, 247], "scaleddotproductattent": [312, 328], "scenario": [45, 50, 52, 120, 121, 122, 123, 134, 219, 220, 346, 371, 372, 378, 385, 386, 496, 500], "schedul": [319, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381], "scientif": 396, "score": [147, 158, 175, 230, 233, 311, 334, 419], "scratch": 16, "script": 406, "se": [74, 100, 166, 167, 168, 169, 170, 171, 172, 173, 174], "se_resnet_101": 100, "se_resnet_152": 100, "se_resnet_18": 100, "se_resnet_34": 100, "se_resnet_50": 100, "se_resnext_101_32x4d": 100, "se_resnext_101_32x8d": 100, "se_resnext_101_64x4d": 100, "se_resnext_50_32x4d": 100, "se_scal": 74, "seamless": [0, 1, 3, 4, 14, 326, 368, 406], "seamlessli": [3, 4, 10, 13, 15, 17, 216, 218, 221, 368, 506], "search": 100, "second": [20, 125, 136, 218, 219, 248, 286, 329, 384, 385, 386, 387, 388, 396, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 457, 472, 475, 487, 503], "section": 412, "see": [16, 412], "seed": [399, 400, 401, 402, 403, 405, 406, 506], "seek": [16, 123], "seen": 382, "segment": [100, 137, 186, 187, 188, 189, 190, 191], "select": [14, 15, 100, 175, 176, 177, 178, 179, 278, 286, 287, 354, 356, 372, 456, 464, 487, 494], "selectivekernel": 288, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 66, 67, 68, 74, 75, 88, 92, 97, 100, 101, 111, 112, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 165, 180, 181, 192, 197, 205, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 228, 241, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 319, 320, 321, 322, 326, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 364, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 398, 407, 474, 481, 495, 496], "selfattent": 364, "selu": [225, 239, 247, 309, 318, 328], "selunetwork": 304, "semant": [55, 135], "semodul": 288, "senet": [166, 167, 168, 169, 170, 171, 172, 173, 174], "sens": 207, "sensit": [253, 335, 339, 340, 341], "sentenc": 207, "sentiment": [4, 207], "separ": [0, 55, 100, 111, 145, 146, 203, 234, 235, 236, 283, 284, 285, 343, 344, 345], "seq_len": [233, 310, 311, 360, 361, 362, 363, 364], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "sequenti": [29, 97, 101, 165, 192, 203, 205, 209, 213, 217, 218, 222, 234, 280, 281, 282, 326, 330, 361, 363, 495, 506], "seri": [88, 102, 103, 105, 133, 135, 175, 234, 280, 313, 351, 354], "serial": [214, 215, 380], "serv": [3, 7, 16, 69, 97, 165, 192, 210, 215, 217, 218, 219, 220, 221, 368, 390, 407, 496], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 120, 121, 126, 145, 146, 156, 157, 171, 172, 173, 174, 179, 213, 216, 220, 233, 234, 235, 236, 276, 301, 302, 304, 311, 313, 314, 315, 318, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 358, 369, 384, 385, 389, 399, 401, 402, 403, 404, 405, 406, 420, 422, 423, 425, 426, 430, 431, 446, 448, 463, 464, 474, 488, 489, 491, 496, 500, 506], "setup": [4, 108, 109, 159, 160, 161, 162, 163, 164], "sever": [25, 313, 314, 315, 351, 352, 353, 354, 355, 356, 495, 506], "sgd": [16, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 388, 392], "sgn": 24, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 107, 108, 109, 110, 113, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 209, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 372, 396, 399, 401, 402, 403, 405, 406, 407, 410, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 437, 438, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 457, 461, 462, 464, 465, 467, 468, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 491, 493, 497, 498, 499, 500, 501, 502, 503, 504, 506], "shapelik": 402, "share": [55, 100], "sharp": 372, "shen": 286, "shift": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 257, 258, 260, 261, 299, 339, 340, 341, 342, 343, 344, 345, 346, 481], "shorthand": 412, "should": [13, 14, 15, 16, 101, 214, 273, 326, 360, 361, 362, 363, 364, 376, 399, 401, 402, 403, 405, 407, 422, 423, 434, 435, 460, 465, 477, 495], "show": [274, 395, 398], "shown": [55, 307, 404], "shrink": 382, "shuffl": [1, 2, 3], "side": [27, 218, 221, 234, 235, 236, 266, 267, 268, 270, 271, 272, 280, 281, 282, 313, 314, 315, 316, 351, 352, 353, 354, 355, 356], "sigma": [25, 31, 286, 291, 293, 295, 305, 307, 339, 340, 341, 343, 344, 345, 346, 461], "sigma_c": 498, "sigma_i": 25, "sigmoid": [225, 247, 286, 291, 292, 295, 296, 299, 300, 307, 309, 328, 333], "sigmoidnetwork": 305, "sign": [23, 335, 390, 432], "signal": [280, 313, 314, 315, 339, 343, 351, 352, 353, 354, 355, 356], "signific": 43, "significantli": [100, 110, 112, 134, 135, 136, 137, 158, 188, 286, 495], "silicon": [16, 110, 393], "sim": [318, 321, 322, 323, 324], "similar": [10, 57, 59, 61, 207, 291, 292, 412, 425, 457, 463, 465, 477, 490], "similarli": [28, 460], "simonyan": 100, "simpl": [3, 4, 16, 213, 221, 234, 235, 236, 248, 250, 266, 267, 268, 270, 271, 272, 298, 299, 300, 302, 303, 304, 305, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 410, 411, 416, 495], "simplebinaryclassificationmodel": 333, "simpleblock": 241, "simpleclassificationmodel": [334, 337], "simplegelumodel": 298, "simplehardsigmoidmodel": 299, "simplehardswishmodel": 300, "simpleleakyrelumodel": 301, "simplemodel": [213, 303, 320, 331, 398], "simpleregressionmodel": 336, "simplerelumodel": 302, "simpleselumodel": 304, "simplesigmoidmodel": 305, "simpleswishmodel": 307, "simpletanhmodel": 308, "simpli": [16, 395, 460, 461, 480], "simplic": [100, 299, 302], "simplifi": [4, 13, 15, 84, 85, 86, 87, 100, 102, 204, 221, 280, 281, 282, 326], "simul": [213, 506], "simultan": [55, 279], "sin": [432, 439], "sinc": [23, 26, 217, 218, 219, 220, 234, 235, 236, 296, 395, 399, 403, 457, 475, 494, 506], "sine": [435, 452, 453], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 147, 230, 280, 281, 282, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 316, 334, 346, 352, 353, 354, 355, 356, 361, 362, 363, 364, 369, 394, 401, 405, 422, 427, 467, 484, 498, 500, 506], "singleton": [15, 346], "singular": [19, 22, 23, 25, 27, 28], "sinh": [432, 440, 459], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 92, 95, 100, 101, 102, 103, 104, 105, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 205, 210, 211, 212, 213, 216, 218, 233, 234, 235, 236, 238, 240, 243, 244, 245, 251, 252, 253, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 310, 313, 314, 315, 316, 319, 326, 329, 331, 333, 334, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 363, 364, 366, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 402, 405, 406, 407, 446, 447, 448, 456, 462, 465, 466, 467, 472, 483, 484, 492, 493, 497, 499, 504, 506], "size_or_sect": 483, "sk": [100, 175, 176, 177, 178, 179, 287], "sk_resnet_18": 100, "sk_resnet_34": 100, "sk_resnet_50": 100, "sk_resnext_50_32x4d": 100, "skblock": 175, "skip": [100, 397], "sknet": [176, 177, 178, 179], "slice": [248, 407, 460, 464, 490, 491], "slide": [238, 316, 351, 353, 354, 356], "slight": 286, "slightli": 506, "slope": [226, 297, 301], "slow": [3, 388], "small": [25, 44, 46, 48, 51, 63, 84, 85, 86, 87, 94, 95, 100, 102, 103, 104, 109, 113, 117, 118, 121, 129, 184, 185, 190, 191, 201, 202, 226, 240, 251, 252, 257, 258, 260, 261, 262, 301, 304, 319, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 352, 355, 360, 362, 364, 370, 382, 383, 384, 385, 386, 387, 388, 389, 390], "smaller": [10, 45, 55, 57, 59, 61, 64, 68, 84, 85, 86, 87, 100, 119, 205, 218, 221, 368, 383, 384, 414, 464, 466, 497, 499, 504], "smallest": [437, 448, 487], "smooth": [90, 224, 297, 298, 307, 373, 381, 389, 506], "smoother": [373, 381], "so": [217, 218, 219, 220, 279, 368, 388, 394, 397, 422, 423, 437, 443, 450, 495], "softmax": [31, 55, 105, 225, 233, 247, 287, 309, 310, 311, 328, 334, 362, 364], "softmaxmodel": 306, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [223, 241, 242, 279, 318, 320, 321, 322, 339, 340, 341, 343, 344, 345, 383, 384, 385, 466], "sometim": 396, "sophist": [218, 221], "sort": [16, 473, 487, 491], "sourc": [210, 211, 212, 233, 360, 406], "space": [20, 26, 28, 57, 59, 61, 105, 181, 210, 234, 235, 236, 238, 263, 264, 265, 280, 281, 282, 283, 284, 285, 313, 314, 315, 316, 348, 349, 350, 420, 427, 506], "span": 4, "spars": [383, 384], "spatial": [29, 31, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 158, 175, 186, 192, 205, 240, 258, 273, 274, 281, 286, 314, 315, 316, 339, 340, 341, 343, 344, 345, 346, 352, 353, 354, 355, 356, 366, 437, 475], "spatial_dim": 286, "spatio": 315, "spec": 65, "special": [0, 1, 25, 214, 215, 216, 318, 406], "specif": [4, 11, 65, 70, 71, 72, 73, 84, 85, 86, 87, 97, 111, 119, 120, 121, 122, 123, 145, 146, 156, 157, 217, 218, 219, 220, 221, 287, 296, 318, 321, 322, 323, 324, 343, 344, 345, 358, 368, 369, 376, 395, 406, 422, 446, 448, 474, 479, 486], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 66, 67, 68, 69, 75, 101, 114, 115, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 206, 213, 218, 230, 238, 245, 251, 252, 253, 255, 256, 261, 262, 263, 264, 265, 274, 276, 278, 279, 286, 306, 310, 313, 314, 315, 316, 326, 333, 334, 335, 336, 337, 346, 348, 349, 350, 352, 353, 354, 355, 356, 358, 366, 369, 372, 376, 393, 401, 402, 403, 404, 405, 407, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 438, 446, 447, 448, 450, 456, 457, 461, 462, 463, 464, 465, 466, 467, 470, 472, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 502, 504, 506], "speech": [207, 343], "speed": [117, 118, 299, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397], "split": [4, 100, 138, 145, 146, 310, 466, 467, 472, 473, 490, 493], "split_tensor": 483, "springer": 100, "sqrt": [31, 55, 105, 224, 233, 258, 291, 292, 295, 296, 298, 310, 311, 339, 340, 341, 342, 343, 344, 345, 346, 362, 364, 382, 383, 384, 385, 387, 388, 389, 432, 434, 435], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 240, 253, 255, 319, 335, 336, 382, 383, 384, 389, 432, 454], "squaredataset": [0, 1, 2, 3], "squeez": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 286, 473, 490], "sr_ratio": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "sra": 100, "src": [209, 360, 363, 364], "src_key_pad": 363, "src_key_padding_mask": [360, 364], "src_mask": [360, 363, 364], "src_vocab_s": [210, 211, 212], "stabil": [22, 25, 31, 100, 105, 240, 251, 252, 257, 258, 260, 261, 262, 276, 280, 281, 282, 303, 319, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 362, 364, 370, 381, 382, 383, 384, 385, 386, 387, 388, 389, 498], "stabl": [190, 291, 292, 295, 296, 318, 334, 381, 385, 386, 389, 390, 391, 482], "stack": [15, 221, 287, 360, 361, 363, 470, 472, 473, 493, 506], "stage": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 92, 100, 105, 106, 107, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "stage1": 165, "stage2": 165, "stage3": 165, "stage4": 165, "stall": 377, "stand": 134, "standalon": 303, "standard": [16, 42, 47, 57, 59, 61, 94, 119, 122, 147, 156, 157, 210, 211, 224, 226, 283, 284, 285, 291, 293, 295, 297, 298, 301, 318, 360, 390, 394, 403, 406, 412, 495, 498, 506], "start": [1, 3, 10, 370, 381, 383, 390, 407, 420, 427, 497, 499], "state": [49, 100, 199, 214, 215, 216, 218, 221, 369, 374, 394, 395, 397, 404], "state_dict": [215, 216, 369, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "statement": [394, 397], "static": 221, "statist": [25, 239, 257, 260], "std": [5, 6, 7, 8, 293, 495, 498, 506], "stem": [97, 100, 105, 138, 147, 158, 175], "stem_typ": 147, "stem_width": [138, 139, 140, 141, 142, 143, 144, 147], "step": [10, 16, 31, 216, 238, 287, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 420, 495, 496], "step_siz": [370, 372, 374, 378, 390], "step_size_down": 372, "step_size_up": 372, "steplr": [370, 374, 379], "still": [52, 382], "stn": 274, "stochast": [40, 41, 55, 74, 75, 92, 105, 124, 180, 181, 241, 320, 381, 391], "stochastic_depth": 74, "stop": [377, 420, 427], "storag": [217, 219], "store": [2, 4, 5, 6, 7, 8, 16, 147, 158, 175, 214, 215, 216, 217, 218, 219, 220, 286, 348, 349, 350, 397, 497, 498, 499, 500, 501, 502, 503, 504], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 114, 147, 192, 215, 217, 219, 221, 251, 252, 253, 255, 256, 274, 278, 326, 366, 369, 372, 374, 377, 398, 407, 475], "straight": 464, "straightforward": [391, 395, 408], "strategi": [31, 100, 122, 189, 274, 370, 374, 380], "streamlin": [2, 3, 100], "strength": [31, 319], "strict": [215, 369], "stride": [57, 59, 61, 75, 101, 102, 103, 104, 113, 114, 117, 118, 218, 221, 234, 235, 236, 238, 263, 264, 265, 266, 267, 268, 270, 271, 272, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 316, 348, 349, 350, 351, 352, 353, 354, 355, 356], "stride_height": 238, "stride_width": 238, "strike": [47, 114, 121], "string": [10, 11, 13, 14, 15, 215, 217, 219, 221, 313, 314, 315, 326, 369, 393], "strong": [31, 128, 131, 134, 198], "stronger": [108, 129, 133, 189], "structur": [0, 10, 14, 26, 31, 75, 100, 113, 181, 203, 214, 215, 218, 240, 319, 326, 368, 369, 398, 407, 424, 496], "student": 16, "studi": 16, "style": [10, 16, 97, 260, 343, 344, 407, 475], "sub": [217, 218, 219, 220, 221, 368, 432, 466, 483, 490, 497, 499], "subclass": [1, 2, 3, 16, 215, 216, 217, 368, 369, 374], "sublay": [213, 360, 362, 364], "submodul": [213, 215, 368], "subscript": 11, "subsequ": [218, 221, 296, 406], "subset": [145, 146, 321, 322], "subspac": 310, "substanti": 200, "subtract": [418, 498], "suffer": 383, "suffix": 134, "suit": [52, 70, 71, 72, 73, 90, 111, 119, 120, 122, 134, 135, 137, 175, 191, 198, 291, 292, 295, 296, 370], "suitabl": [42, 44, 45, 48, 50, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 102, 103, 104, 106, 107, 109, 110, 112, 117, 118, 120, 123, 126, 131, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 182, 183, 184, 185, 201, 211, 335, 383, 384, 401], "sum": [10, 11, 14, 16, 24, 217, 218, 219, 220, 221, 230, 233, 251, 252, 253, 255, 256, 262, 273, 274, 287, 306, 316, 333, 334, 335, 336, 337, 383, 407, 408, 411, 416, 419, 432, 460, 462, 465, 467, 472, 475, 479, 482, 483, 486, 487, 493], "sum_": [13, 14, 23, 31, 230, 258, 306, 326, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 376, 410, 411, 419, 447, 456, 460, 462, 465, 475, 479], "sum_i": [24, 416], "sum_j": [11, 416], "sum_k": 412, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 74, 156, 157, 203, 207, 351, 352, 353], "summari": [156, 157, 171, 172, 173, 174, 179], "summat": [10, 11, 13, 14, 15, 23, 376], "sun": 286, "super": [16, 213, 214, 215, 216, 217, 218, 219, 220, 241, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 318, 320, 321, 322, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 368, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398], "superior": [54, 100, 189], "supplementari": 122, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 115, 124, 147, 217, 218, 219, 220, 221, 233, 274, 278, 279, 311, 316, 358, 366, 368, 380, 387, 406, 407, 408, 409, 412, 413, 414, 415, 417, 418, 421, 424, 438, 444, 445, 447, 452, 454, 456, 460, 461, 462, 464, 467, 475, 480, 482, 483, 496, 506], "suppos": 506, "sure": [368, 506], "svd": [21, 25], "swap": [13, 326], "swapax": 432, "swin": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "swin_bas": 100, "swin_larg": 100, "swin_smal": 100, "swin_tini": 100, "swin_v2": 181, "swin_v2_bas": 100, "swin_v2_giant": 100, "swin_v2_hug": 100, "swin_v2_larg": 100, "swin_v2_smal": 100, "swin_v2_tini": 100, "swintransform": [182, 183, 184, 185], "swintransformer_v2": [186, 187, 188, 189, 190, 191], "swish": [117, 118, 309, 328], "symbol": [13, 14, 15, 326], "symmetr": [18, 263, 264, 265, 295, 296, 308], "syntax": [1, 10, 13, 14, 15, 326, 397, 412], "system": [16, 17, 18, 25, 26, 27, 100, 121, 209, 274, 395, 407, 475], "systemat": [100, 506], "szegedi": [89, 100], "t": [10, 16, 25, 31, 55, 100, 105, 273, 274, 360, 361, 362, 364, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 407, 412, 425, 426, 463, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "t0": 381, "t1": [407, 463], "t2": [407, 463], "t_": [361, 371], "t_0": 361, "t_cpu": 407, "t_i": 361, "t_max": 371, "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 74, 358], "tabular": 4, "tailor": [4, 113, 121, 139, 140, 141, 142, 143, 144, 368, 506], "take": [26, 351, 352, 353, 354, 355, 356, 366, 375, 394, 397, 495], "taken": 460, "tan": [100, 432], "tangent": [231, 308, 436, 458, 459], "tanh": [101, 218, 221, 224, 225, 247, 291, 292, 295, 296, 298, 309, 328, 432], "tanhnetwork": 308, "target": [5, 6, 7, 8, 52, 210, 211, 212, 221, 251, 252, 253, 255, 256, 263, 264, 265, 273, 278, 333, 334, 335, 336, 337, 348, 349, 350, 360, 361, 362, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 426, 465, 490, 497, 499, 504], "target_tensor": [333, 334, 335, 336, 337], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 203, 207, 210, 211, 212, 229, 230, 235, 248, 251, 252, 255, 256, 286, 287, 305, 306, 313, 314, 315, 333, 334, 335, 336, 337, 343, 344, 345, 351, 353, 354, 356, 360, 384, 396, 406, 424, 427, 506], "teach": 207, "techniqu": [18, 22, 40, 75, 92, 100, 122, 186, 188, 191, 205, 241, 257, 318, 319, 321, 322, 323, 324, 343, 344, 345, 370, 380, 504, 506], "templat": 210, "tempor": [313, 315, 353, 356], "temporarili": [394, 397], "ten": 450, "tensortensordot": 432, "term": [13, 25, 53, 131, 132, 133, 135, 136, 137, 248, 280, 281, 282, 283, 284, 285, 310, 360, 362, 364, 381, 385, 387, 388, 389, 391], "test": [4, 5, 6, 7, 8, 427], "test_backward": 213, "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 105, 147, 158, 175, 176, 177, 178, 203, 207, 217, 223, 226, 227, 228, 230, 233, 234, 235, 236, 241, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 310, 311, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 333, 334, 335, 336, 337, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 372, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 407, 408, 409, 411, 413, 414, 415, 417, 418, 419, 433, 437, 438, 443, 446, 447, 448, 450, 451, 456, 457, 462, 464, 465, 467, 472, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 499, 501, 502, 503], "tgt": [209, 360, 361, 362], "tgt_is_caus": [361, 362], "tgt_key_padding_mask": [360, 361, 362], "tgt_mask": [360, 361, 362], "tgt_vocab_s": [210, 211, 212], "th": [248, 333, 334, 336, 337, 343, 344, 345, 413, 414, 417], "than": [0, 1, 7, 13, 15, 219, 220, 223, 226, 253, 283, 284, 285, 297, 301, 307, 326, 335, 369, 376, 385, 419, 427, 437, 443, 460, 465, 466, 477, 485, 490, 497, 499, 504], "thei": [0, 28, 55, 100, 214, 218, 220, 221, 274, 310, 475, 480, 497, 499, 506], "them": [3, 10, 16, 100, 215, 220, 238, 316, 381, 396, 467, 485, 490, 495, 498, 506], "therebi": [318, 352, 353, 355, 356], "theta": [273, 274, 381, 382, 502], "theta_": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "theta_t": [388, 389], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 89, 90, 91, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 134, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 198, 199, 200, 201, 202, 203, 210, 213, 214, 216, 218, 219, 220, 221, 227, 229, 230, 231, 234, 235, 236, 238, 240, 241, 248, 250, 263, 273, 276, 278, 279, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 337, 339, 340, 341, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 358, 368, 370, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 402, 403, 404, 406, 407, 411, 412, 416, 420, 422, 425, 426, 428, 429, 430, 431, 437, 438, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 457, 460, 461, 462, 463, 464, 465, 466, 474, 476, 477, 479, 480, 481, 482, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "third": [135, 136, 137, 273], "those": [102, 103, 104, 220, 296, 487], "thread": 394, "three": [28, 104, 236, 265, 268, 272, 280, 281, 282, 315, 324, 341, 345, 350, 353, 356], "threshold": [25, 253, 335, 377], "threshold_mod": 377, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 88, 97, 100, 101, 114, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 204, 205, 207, 217, 218, 221, 240, 248, 250, 273, 274, 278, 286, 287, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 331, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 394, 399, 403, 410, 411, 416, 475, 476, 478, 480, 484, 487, 488, 489, 491, 492, 506], "throughout": [180, 181, 197, 210, 228, 496], "ti": [100, 202], "tier": 49, "tight": 134, "tile": [15, 473], "time": [0, 3, 16, 23, 102, 103, 104, 112, 234, 280, 301, 304, 310, 313, 351, 352, 353, 354, 355, 356, 361, 363, 370, 377, 381, 382, 383, 384, 385, 389, 391, 479, 486], "tini": [44, 45, 53, 64, 92, 96, 100, 109, 130], "tinynet": 16, "to_tensor": [5, 6, 7, 8], "togeth": [221, 495, 506], "toggl": [394, 397], "token": [55, 92, 100, 125, 132, 358], "token_mix": 92, "too": [16, 370, 390], "tool": [3, 368, 370, 394, 396, 406, 495, 506], "top": [18, 19, 20, 26, 28, 49, 233, 248, 250, 278, 310, 311, 313, 314, 315, 329, 331, 419, 487, 497, 499], "topk": 473, "topk_indic": 487, "topolog": 16, "torch": [192, 316, 463], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 211, 212, 213, 216, 310, 326, 394, 407, 480], "total_op": 394, "totensor": [495, 506], "touch": 16, "trace": [17, 432], "traceback": 397, "track": [16, 280, 281, 282, 339, 340, 341, 343, 344, 345, 368, 394, 395, 397, 399, 401, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 457, 463, 464, 465, 474, 476, 482, 491, 496], "track_running_stat": [280, 281, 282, 339, 340, 341, 343, 344, 345], "trade": [44, 120], "tradit": [7, 10, 31, 55, 65, 100, 123, 209, 382, 383, 386, 387, 388], "trail": 261, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 75, 88, 89, 90, 100, 105, 171, 172, 173, 174, 179, 209, 210, 213, 214, 215, 218, 220, 221, 230, 239, 240, 241, 242, 243, 244, 245, 257, 260, 276, 279, 298, 301, 304, 305, 306, 308, 318, 319, 320, 321, 322, 323, 324, 339, 340, 341, 343, 344, 345, 358, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 437, 443, 495, 498, 499, 500, 501, 502, 503, 506], "trainabl": [213, 339, 340, 341, 343, 344, 345, 358, 368], "transact": 286, "transfer": [260, 343, 344], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "transform_pipelin": [495, 506], "transformed_imag": [495, 506], "transformer_bas": 209, "transformer_big": 209, "transformer_decod": 361, "transformer_encod": 363, "transformerdecod": [328, 360, 365], "transformerdecoderlay": [328, 360, 361, 365], "transformerencod": [328, 360, 365], "transformerencoderlay": [328, 360, 363, 365], "transit": [31, 69, 335], "translat": [207, 210, 273, 352, 355, 360], "transpar": 16, "transpos": [13, 18, 432], "transposit": [11, 13, 326], "treat": [0, 214, 346, 368], "triangular": [18, 26, 361, 362, 363, 364, 372, 488, 489], "triangular2": 372, "tril": 473, "triu": 473, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 117, 118, 131, 132, 133, 134, 135, 136, 137, 138, 180, 181, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 238, 239, 241, 242, 243, 244, 245, 248, 250, 257, 260, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 389, 393, 395, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496], "truli": 16, "truncat": 213, "truncate_from": 213, "try": 0, "tu": [100, 105], "tune": [120, 123, 506], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 69, 105, 147, 213, 215, 216, 234, 235, 236, 238, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 313, 314, 315, 316, 330, 346, 349, 350, 351, 352, 353, 354, 355, 356, 366, 384, 385, 386, 387, 388, 390, 401, 402, 403, 405, 407, 419, 422, 425, 428, 430, 446, 447, 448, 456, 462, 465, 466, 467, 469, 470, 471, 472, 475, 477, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 497, 498, 499, 504], "twice": 477, "two": [19, 20, 22, 23, 25, 26, 28, 102, 103, 104, 105, 113, 145, 146, 176, 192, 234, 235, 236, 248, 267, 271, 286, 287, 314, 323, 329, 340, 344, 352, 355, 364, 384, 385, 386, 387, 388, 390, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 457, 460, 466, 475, 483, 487], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 92, 101, 105, 124, 125, 138, 147, 165, 175, 180, 181, 207, 214, 215, 216, 248, 329, 360, 362, 364, 393, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 475, 496], "typeerror": [0, 1, 2, 215, 369], "typic": [16, 17, 31, 66, 114, 120, 147, 158, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 214, 230, 239, 240, 279, 286, 303, 304, 306, 319, 320, 337, 339, 340, 341, 343, 344, 345, 380, 381, 389, 391, 492, 496, 498, 502, 504, 506], "u": [25, 28, 292, 294, 296], "u_": 386, "ultra": [46, 153, 187], "unbind": 473, "unbound": 490, "unchang": [16, 214, 245, 297, 301, 302, 304, 318, 321, 322, 323, 324, 330, 478, 484], "uncontract": 419, "uncontrol": 16, "undefin": 417, "under": [159, 160, 161, 162, 163, 164, 368], "underbrac": 23, "underdetermin": 25, "undergo": [241, 364, 506], "underli": [0, 84, 85, 86, 87, 89, 90, 91, 98, 99, 407, 457, 463, 472, 478, 480, 493], "understand": [16, 66, 67, 68, 100, 135, 136, 188, 205, 207, 213, 221, 506], "understood": 13, "unexpect": [10, 215, 218, 221, 262, 406], "unfold": [237, 247, 317, 328], "unifi": [0, 16, 393], "uniform": [290, 292, 296, 313, 314, 315, 329, 331, 400, 401, 402, 406, 426, 500, 501, 502, 503], "uniformli": [401, 405], "uniniti": [422, 423], "unintend": [10, 14], "union": 192, "uniqu": [18, 25, 27, 217, 219, 358, 473], "unit": [29, 101, 205, 223, 224, 226, 227, 228, 291, 292, 295, 296, 297, 298, 301, 302, 304, 318], "unless": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 394, 464], "unlik": [31, 65, 100, 180, 214, 217, 218, 219, 220, 226, 297, 301, 318, 346, 382, 383, 385, 386, 387, 388, 390], "unnecessari": 10, "unpad": 477, "unseen": 506, "unspecifi": [393, 425], "unsqueez": 473, "unstabl": 22, "unsur": 10, "until": 16, "up": [100, 369, 374, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 437, 502, 504], "updat": [4, 41, 214, 220, 221, 318, 321, 322, 323, 324, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397], "upon": [41, 90, 100, 113, 114, 189, 191, 217, 218, 219, 220], "upper": [26, 294, 372, 390, 405, 437, 438, 471, 488, 489], "upper_triangular": 489, "upsampl": [328, 367], "upstream": 16, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 65, 69, 74, 75, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 191, 202, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 248, 250, 255, 257, 258, 260, 262, 264, 265, 273, 274, 276, 278, 279, 280, 281, 282, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 366, 368, 369, 370, 371, 373, 375, 376, 378, 380, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 442, 443, 446, 447, 448, 450, 456, 457, 462, 464, 469, 471, 474, 475, 477, 479, 482, 483, 484, 486, 488, 489, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 69, 105, 203, 218, 221, 241, 283, 284, 285, 311, 319, 369, 380, 394, 397, 427, 497, 498, 499, 500, 501, 502, 503, 504], "use_aux": [88, 89, 90], "use_h": [117, 118], "use_s": [117, 118], "user": [1, 2, 3, 4, 16, 123, 217, 218, 219, 220, 368, 375, 383, 495, 496, 506], "usual": [274, 334], "util": [3, 17, 31, 114, 130, 176, 177, 178, 189, 219, 220, 240, 368, 406], "v": [16, 20, 25, 28, 31, 55, 100, 105, 125, 233, 310, 311, 362, 364, 384, 385, 387, 388, 421], "v1": [88, 89, 97, 98, 99, 100, 111, 112], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 75, 84, 85, 86, 87, 97, 99, 100, 112, 113, 116, 125, 131, 132, 133, 135, 136, 137, 186, 187, 188, 189, 190, 191], "v3": [88, 90, 91, 100, 113, 117, 118], "v4": [88, 91, 100, 114, 120, 121, 122, 123], "v_": [381, 384, 385, 387, 388, 389, 391], "v_2": 55, "v_i": 310, "v_stack": 493, "v_t": [388, 389], "val": 289, "val_loss": 377, "valid": [11, 280, 281, 282, 283, 284, 285, 287, 313, 314, 315, 377, 461], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 66, 67, 68, 92, 110, 111, 114, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 156, 157, 180, 181, 213, 215, 217, 219, 221, 223, 226, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 273, 274, 278, 279, 280, 281, 282, 286, 289, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 308, 310, 311, 318, 319, 320, 321, 322, 323, 324, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 366, 370, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 399, 401, 402, 403, 404, 405, 406, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 437, 438, 441, 442, 443, 444, 445, 446, 448, 451, 452, 454, 455, 464, 467, 469, 470, 474, 477, 478, 480, 482, 487, 491, 492, 494, 498, 500, 501, 503], "valuabl": 406, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 369], "van": 100, "vanish": [100, 297, 304, 339, 340, 341], "var": 432, "varepsilon": 262, "vari": [40, 175, 218, 220, 263, 278, 348, 372, 502], "variabl": [215, 221, 263, 264, 265, 330, 348, 349, 350, 368, 395, 422, 499, 502], "varianc": [228, 239, 257, 260, 280, 281, 282, 291, 292, 295, 296, 304, 318, 339, 340, 341, 343, 344, 345, 346, 384, 385, 386, 387, 388, 403, 462, 502, 506], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 93, 94, 95, 96, 106, 107, 108, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 176, 177, 178, 179, 187, 192, 193, 194, 195, 196, 212, 384, 385, 386], "variat": [283, 284, 285, 343, 344, 345, 499, 506], "varieti": [4, 97, 138, 406, 506], "variou": [7, 10, 13, 14, 31, 69, 88, 98, 99, 100, 101, 114, 115, 123, 124, 207, 302, 380, 406, 427, 446, 448, 477, 496], "vasudevan": 100, "vaswani": [209, 360], "vdim": 310, "vdot": 416, "vector": [15, 20, 25, 26, 27, 28, 248, 250, 276, 310, 329, 331, 358, 410, 411, 412, 416], "veloc": [381, 389, 391], "verbos": [13, 371, 372, 373, 374, 375, 376, 377, 378], "veri": [25, 48, 100, 126, 150, 152, 382], "verifi": 10, "versa": 390, "versatil": [31, 100, 123, 406, 475], "version": [16, 28, 40, 88, 92, 97, 101, 102, 103, 120, 125, 127, 134, 316, 326, 389, 416, 481, 500], "vertic": [485, 493, 503], "vgg": 192, "vggnet": [193, 194, 195, 196], "vggnet_11": 100, "vggnet_13": 100, "vggnet_16": 100, "vggnet_19": 100, "via": [3, 4, 16, 105, 123, 175, 407], "vice": 390, "video": [207, 236, 245, 282, 315, 345, 353, 356], "view": [97, 101, 218, 352, 353, 354, 355, 356, 464, 465, 480, 490], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "visual": [55, 109, 133, 205, 207], "vit": [31, 65, 180, 198, 199, 200, 201, 202], "vit_bas": 100, "vit_hug": 100, "vit_larg": 100, "vit_smal": 100, "vit_tini": 100, "vocabulari": [210, 211, 212, 358], "vol": 100, "vollgraf": 7, "volumetr": [236, 245, 282, 315, 345, 353, 356], "vstack": 473, "w": [10, 13, 14, 15, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 235, 236, 238, 240, 244, 245, 248, 250, 258, 264, 265, 267, 268, 271, 272, 273, 274, 278, 279, 281, 282, 286, 310, 313, 314, 315, 326, 329, 331, 340, 341, 342, 344, 345, 349, 350, 353, 356, 497, 499], "w24": [68, 100], "w_": [235, 236, 264, 265, 267, 268, 271, 272, 278, 314, 315, 316, 349, 350, 352, 353, 355, 356], "w_1": [362, 364], "w_2": [362, 364], "w_in": 274, "w_k": [31, 55, 105], "w_out": [235, 236, 267, 268, 271, 272, 274], "w_q": [55, 105], "w_v": [55, 105], "wa": [16, 89, 318, 321, 322, 323, 324, 394], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 207, 326, 395, 480], "wait": 377, "wang": 100, "want": [0, 495, 497], "warn": [217, 219, 310, 464], "we": [3, 396, 475], "wei": 100, "weight": [55, 100, 105, 124, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 180, 181, 233, 234, 235, 236, 248, 250, 251, 252, 256, 257, 260, 261, 276, 278, 286, 287, 291, 292, 295, 296, 310, 311, 313, 314, 315, 318, 319, 321, 322, 323, 324, 329, 331, 333, 334, 337, 339, 340, 341, 343, 344, 345, 346, 358, 360, 361, 362, 363, 364, 368, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 401, 406], "weight1": 219, "weight2": 219, "weight_decai": [381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "weihao": 100, "weinberg": 100, "well": [52, 70, 71, 72, 73, 75, 90, 120, 134, 135, 175, 191, 198, 291, 292, 316], "wenhai": 100, "were": 221, "weyand": 100, "what": [13, 15, 326], "whatev": 394, "when": [0, 1, 3, 10, 14, 16, 23, 55, 74, 100, 215, 218, 220, 221, 223, 226, 234, 235, 236, 276, 297, 320, 330, 339, 340, 341, 343, 344, 345, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 390, 394, 395, 397, 398, 406, 417, 426, 464, 465, 495, 497], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 100, 117, 118, 119, 120, 121, 122, 134, 136, 203, 207, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 241, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 406, 407, 408, 409, 413, 414, 415, 417, 418, 422, 423, 437, 438, 442, 443, 444, 445, 446, 447, 448, 452, 454, 456, 460, 461, 462, 466, 467, 473, 474, 476, 477, 479, 483, 486, 488, 489, 490, 495, 496, 497, 498, 499, 500, 501, 502, 503], "wherev": 474, "whether": [1, 16, 19, 31, 55, 74, 88, 89, 90, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 138, 180, 181, 215, 216, 291, 292, 320, 389, 395, 399, 401, 402, 403, 405, 407, 422, 423, 425, 426, 446, 447, 448, 456, 462, 482, 491, 494], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 65, 75, 91, 99, 100, 105, 111, 112, 114, 115, 119, 125, 129, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 193, 194, 195, 196, 210, 215, 217, 219, 221, 226, 230, 253, 262, 279, 283, 284, 285, 287, 297, 298, 301, 303, 306, 308, 318, 335, 337, 339, 340, 341, 343, 344, 345, 346, 358, 362, 364, 376, 378, 384, 385, 387, 389, 395, 401, 402, 405, 419, 434, 435, 436, 439, 440, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 458, 459, 460, 462, 464, 465, 466, 467, 476, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 494, 496, 497, 499, 500, 501, 502, 503, 504, 506], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 68, 84, 85, 86, 87, 95, 99, 100, 108, 111, 121, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 200, 207, 218, 221, 239, 240, 298, 302, 303, 320, 361, 368, 371, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 457, 474, 480, 485, 500, 506], "who": [217, 218, 219, 220], "whose": [28, 371, 372, 373, 374, 375, 376, 377, 378, 423, 426, 429, 431, 433, 438, 442, 451, 457, 464], "wide": [4, 5, 6, 8, 17, 25, 53, 100, 123, 147, 155, 156, 157, 190, 227, 302, 313, 314, 334], "wide_resnet_101": 100, "wide_resnet_50": 100, "wider": [44, 156, 157, 234, 235], "wideresnet": 100, "width": [31, 62, 74, 75, 100, 108, 109, 110, 111, 115, 138, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 203, 235, 236, 238, 244, 245, 258, 264, 265, 267, 268, 271, 272, 274, 278, 279, 287, 314, 315, 316, 340, 341, 342, 344, 345, 349, 350, 352, 353, 355, 356, 366, 393, 497, 499, 504], "width_coef": 74, "width_multipli": [111, 115], "window": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 266, 267, 268, 270, 271, 272, 351, 352, 353, 354, 355, 356, 382, 446, 448], "windows_s": [180, 181], "wise": [10, 15, 100, 105, 169, 171, 172, 173, 174, 223, 224, 226, 227, 228, 229, 230, 231, 241, 280, 281, 282, 286, 300, 306, 307, 318, 320, 321, 322, 323, 324, 368, 396, 408, 409, 412, 413, 414, 415, 417, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 449, 451, 452, 453, 454, 455, 458, 459, 460, 472, 482, 493, 494], "within": [2, 100, 180, 197, 207, 210, 213, 214, 217, 218, 219, 220, 221, 231, 278, 279, 296, 298, 299, 300, 302, 304, 305, 307, 308, 313, 314, 315, 316, 318, 321, 322, 326, 330, 333, 334, 335, 336, 337, 339, 340, 341, 343, 346, 351, 352, 353, 354, 355, 356, 380, 394, 420, 438, 502, 506], "without": [10, 16, 100, 158, 217, 218, 219, 248, 250, 313, 314, 315, 329, 331, 394, 395, 398, 446, 478, 480, 492], "word": [100, 276, 358], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "workflow": [14, 406, 506], "world": 207, "worth": 100, "would": [464, 482], "wrap": [3, 368, 370, 394, 397, 407, 463], "wrapper": 368, "wu": 100, "www": [5, 6], "x": [11, 16, 17, 27, 31, 97, 100, 101, 105, 165, 192, 203, 213, 214, 215, 217, 218, 219, 220, 221, 230, 241, 248, 250, 262, 273, 274, 279, 283, 284, 285, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 362, 363, 364, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 399, 401, 402, 403, 405, 422, 423, 437, 442, 443, 450, 464, 466, 469, 471, 474, 475, 476, 481, 482, 483, 487, 488, 489, 490, 491, 497, 498, 499, 500, 501, 502, 503, 504], "x1": 329, "x2": 329, "x_": [31, 258, 334, 337, 342, 363, 475], "x_0": 363, "x_1": 55, "x_2": 55, "x_c": [334, 337], "x_i": [262, 333, 363, 407, 437, 443, 450, 487], "x_k": 334, "x_test": 16, "x_train": 16, "xavier": [291, 292, 295, 296], "xavier_norm": 290, "xavier_uniform": 290, "xiao": 7, "xie": 100, "xl": [87, 100], "xlarg": [54, 100, 110], "xmax": 470, "xmin": 470, "xy": 475, "x\u2081": 329, "x\u2082": 329, "y": [11, 16, 31, 100, 203, 217, 218, 219, 220, 221, 262, 273, 279, 283, 284, 285, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 399, 401, 402, 403, 405, 407, 422, 423, 474, 475, 481, 490, 491, 500], "y0": 490, "y1": [466, 490], "y2": [466, 490], "y_": [31, 258, 334, 337, 342, 475], "y_c": [334, 337], "y_i": [262, 333], "y_train": 16, "yann": [8, 100], "yet": [16, 51, 53, 108, 121, 274, 396], "yield": [0, 1, 215, 464], "ymax": 470, "ymin": 470, "you": [0, 13, 15, 16, 113, 209, 213, 218, 220, 221, 316, 326, 360, 368, 380, 394, 395, 406, 422, 423, 424, 431, 461, 463, 464, 495, 497, 506], "your": [10, 16, 113, 121, 368, 380, 395, 406, 506], "yu": 100, "z": [11, 16, 100, 362, 364, 423, 430, 431, 464], "zalandoresearch": 7, "ze": 100, "zeiler": [100, 205], "zero": [23, 25, 26, 90, 213, 223, 226, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 262, 266, 267, 268, 270, 271, 272, 273, 274, 276, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 304, 310, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 346, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 369, 382, 383, 384, 385, 386, 387, 388, 389, 422, 423, 424, 425, 431, 432, 437, 438, 443, 450, 451, 476, 477, 487, 488, 489, 494], "zero_grad": [16, 216, 369, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 407], "zeros_lik": [423, 432], "zhang": 100, "zhmoginov": 100, "zhu": 100, "zhuang": 100, "zihang": 100, "zisserman": 100, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "Object detection", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": [396, 464], "1d": 396, "2": 396, "2d": 396, "3": 396, "It": 395, "The": 16, "ab": 433, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "activ": [225, 247, 309, 328], "ad": 396, "adadelta": 382, "adagrad": 383, "adam": 384, "adamax": 386, "adamw": 385, "adaptive_avg_pool1d": 263, "adaptive_avg_pool2d": 264, "adaptive_avg_pool3d": 265, "adaptiveavgpool1d": 348, "adaptiveavgpool2d": 349, "adaptiveavgpool3d": 350, "add": 408, "addit": [25, 310], "advanc": [238, 506], "advantag": [10, 13, 14, 15, 326], "affine_grid": 273, "alexnet": [29, 30, 100], "algebra": 21, "algorithm": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "align": [16, 396], "alpha_dropout": 239, "alphadropout": 318, "also": 380, "anoth": 463, "arang": 420, "arcco": 434, "architectur": [29, 31, 40, 55, 102, 103, 104, 105, 156, 157, 205], "arcsin": 435, "arctan": 436, "argsort": 464, "ascend": 464, "asgd": 381, "attent": [232, 233, 247, 287, 312, 328], "attribut": [5, 6, 7, 8, 29, 97, 101, 147, 158, 165, 175, 192, 203, 205, 214, 216, 217, 218, 219, 220, 221, 280, 281, 282, 283, 284, 285, 286, 297, 298, 301, 302, 304, 305, 306, 308, 313, 314, 315, 318, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 393, 407, 497, 498, 499, 500, 501, 502, 503, 504], "autodiff": 16, "automat": 16, "avg_pool1d": 266, "avg_pool2d": 267, "avg_pool3d": 268, "avgpool1d": 351, "avgpool2d": 352, "avgpool3d": 353, "axi": [396, 457], "backend": 16, "backpropag": 407, "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 240, 248, 250, 273, 278, 286, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467, 472, 475, 477, 478, 479, 480, 484, 485, 486, 488, 489, 490, 492, 493], "base": [379, 407], "basic": 16, "batch_norm": 257, "batchnorm": 288, "batchnorm1d": 339, "batchnorm2d": 340, "batchnorm3d": 341, "bceloss": 333, "behavior": [263, 264, 265, 348, 349, 350], "benefit": [394, 397], "bernoulli": 399, "between": [16, 407], "bilinear": [248, 329], "binari": 432, "binary_cross_entropi": 251, "bottleneck": [117, 118], "broadcast": [396, 465], "broadcast_to": 465, "buffer": 214, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 238, 240, 241, 248, 250, 263, 264, 265, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467, 472, 475, 477, 478, 479, 480, 484, 485, 486, 488, 489, 490, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504], "captur": 398, "ceil": 437, "centercrop": 497, "choleski": 18, "chunk": 466, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 138, 147, 158, 165, 175, 180, 181, 192, 197, 203, 205, 210, 214, 215, 216, 217, 218, 219, 220, 221, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 407, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "classif": 100, "clip": 438, "co": 439, "coatnet": [31, 100], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "compon": [3, 368], "compos": 495, "comput": [207, 466, 474, 481, 482, 487], "concatdataset": [0, 1], "concaten": 467, "conclus": [3, 10, 13, 14, 15, 16, 326, 368, 370, 395, 396, 406, 496, 506], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 74, 106, 107, 108, 109, 110, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146], "constant": 289, "contain": 222, "contract": 419, "conv": 288, "conv1d": [234, 313], "conv2d": [235, 314], "conv3d": [236, 315], "convbnrelu1d": 280, "convbnrelu2d": 281, "convbnrelu3d": 282, "convnext": [40, 100], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [100, 237, 247, 288, 317, 328], "core": 16, "cosh": 440, "cosineannealinglr": 371, "count_flop": 394, "creat": [216, 407, 463], "cross_entropi": 252, "crossentropyloss": 334, "crossvit": [55, 100], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "cube": 441, "custom": [1, 2, 3, 215, 369, 380, 506], "cvt": [65, 100], "cvt_13": 66, "cvt_21": 67, "cvt_w24": 68, "cycliclr": 372, "d": 464, "dagger": [57, 59, 61], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 215, 369, 380], "definit": [13, 14, 15, 262, 326], "densenet": [69, 100], "densenet_121": 70, "densenet_169": 71, "densenet_201": 72, "densenet_264": 73, "depthseparableconv1d": 283, "depthseparableconv2d": 284, "depthseparableconv3d": 285, "depthwis": 288, "descend": 464, "descript": [159, 160, 161, 162, 163, 164, 176, 177, 178, 398], "design": 16, "det": 19, "detail": [25, 55, 105, 119, 120, 121, 122, 123, 156, 157, 310, 360, 361, 362, 363, 364], "detect": 208, "devic": [16, 407], "diag": 421, "differ": 210, "differenti": 16, "dilat": 238, "div": 409, "dot": 410, "drop_block": 240, "drop_path": 241, "dropblock": 319, "dropout": [242, 246, 247, 321, 325, 328], "dropout1d": [243, 322], "dropout2d": [244, 323], "dropout3d": [245, 324], "droppath": 320, "dtype": 407, "duplic": 464, "educ": 16, "efficientnet": [74, 100], "efficientnet_b0": 76, "efficientnet_b1": 77, "efficientnet_b2": 78, "efficientnet_b3": 79, "efficientnet_b4": 80, "efficientnet_b5": 81, "efficientnet_b6": 82, "efficientnet_b7": 83, "efficientnet_v2": 75, "efficientnet_v2_": 86, "efficientnet_v2_l": 84, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 87, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 327, 328], "einsum": 11, "elu": [223, 297], "embed": [276, 358], "empti": 422, "empty_lik": 423, "enabl": 16, "enhanc": 125, "evalu": 16, "examplexcit": 288, "exp": 442, "exponentiallr": 373, "express": [258, 437, 443, 450, 483], "ey": 424, "fashionmnist": 7, "featur": [4, 17, 171, 172, 173, 174, 179, 380, 406, 506], "flatten": 468, "floor": 443, "flop": 464, "formula": [371, 372, 373, 375, 376, 377, 378], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 203, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 238, 241, 248, 250, 263, 264, 265, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 467, 472, 475, 477, 478, 479, 480, 484, 485, 486, 488, 489, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504], "free": 407, "from": [210, 463], "full": 425, "full_lik": 426, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 211, 212, 213, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 292, 293, 294, 295, 296, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "fuse": 288, "futur": 4, "gelu": [224, 298], "gener": [400, 432], "get": 380, "global_response_norm": 258, "globalresponsenorm": 342, "gpu": [16, 407], "grad_en": 395, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 240, 248, 250, 273, 278, 286, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 318, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 472, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494], "grid_sampl": 274, "hardsigmoid": 299, "hardswish": 300, "heapsort": 464, "histogram": 469, "histogram2d": 470, "histogramdd": 471, "hook": [16, 407], "how": [16, 395], "hstack": 472, "huber_loss": 253, "huberloss": 335, "hybrid": 31, "hyperparamet": [145, 146], "ident": 330, "imag": [9, 100, 505], "implement": [55, 105], "incept": [88, 100], "inception_next_atto": 93, "inception_next_bas": 94, "inception_next_smal": 95, "inception_next_tini": 96, "inception_resnet_v1": 98, "inception_resnet_v2": 99, "inception_v1": 89, "inception_v3": 90, "inception_v4": 91, "inceptionnext": [92, 100], "inceptionresnet": 97, "infer": 407, "init": [289, 291, 292, 293, 294, 295, 296], "initi": 290, "inner": 411, "input": 463, "inspect": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "instal": 16, "instance_norm": 260, "instancenorm1d": 343, "instancenorm2d": 344, "instancenorm3d": 345, "integr": [3, 368, 406, 506], "interpol": 278, "inv": 22, "kaiming_norm": 291, "kaiming_uniform": 292, "kei": [3, 4, 125, 171, 172, 173, 174, 179, 368, 380, 406, 506], "kernel": [288, 464], "lambdalr": 375, "languag": 207, "layer": [139, 140, 141, 142, 143, 144, 288, 309, 312, 317, 325, 327, 328, 332, 338, 347, 357, 359, 365, 367], "layer_norm": 261, "layernorm": 346, "leaky_relu": 226, "leakyrelu": 301, "learn": 406, "lenet": [100, 101], "lenet_1": 102, "lenet_4": 103, "lenet_5": 104, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 247, 249, 250, 328, 331, 332], "linspac": 427, "list": 463, "load": 1, "log": 444, "log2": 445, "loss": [247, 254, 328, 338], "lr": 379, "lr_schedul": [370, 371, 372, 373, 374, 375, 376, 377, 378], "lrschedul": 374, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 207, 247, 368, 380, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 506], "lucid\u00b2": 16, "masked_fil": 474, "mathemat": [13, 14, 15, 55, 105, 258, 262, 310, 326, 360, 361, 362, 363, 364, 371, 372, 373, 375, 376, 377, 378, 407, 437, 443, 450, 483], "matmul": 412, "matrix": 412, "matrix_pow": 23, "max": 446, "max_pool1d": 270, "max_pool2d": 271, "max_pool3d": 272, "maximum": 413, "maxpool1d": 354, "maxpool2d": 355, "maxpool3d": 356, "maxvit": [100, 105], "maxvit_bas": [106, 107], "maxvit_smal": 108, "maxvit_tini": 109, "maxvit_xlarg": 110, "mean": 447, "mechan": [233, 287], "meshgrid": 475, "metadata": 398, "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 97, 101, 192, 215, 216, 360, 361, 362, 363, 364, 369, 371, 372, 373, 374, 375, 376, 377, 378, 393, 407], "min": 448, "minimum": 414, "mlx": 16, "mnist": 8, "mobilenet": [100, 111, 115], "mobilenet_v2": [112, 116], "mobilenet_v3": 113, "mobilenet_v3_larg": 117, "mobilenet_v3_smal": 118, "mobilenet_v4": 114, "mobilenet_v4_conv_larg": 119, "mobilenet_v4_conv_medium": 120, "mobilenet_v4_conv_smal": 121, "mobilenet_v4_hybrid_larg": 122, "mobilenet_v4_hybrid_medium": 123, "model": [106, 107, 108, 109, 110, 207, 213, 368], "modul": [215, 328], "moduledict": 217, "modulelist": 218, "more": 406, "move": 407, "mse_loss": 255, "mseloss": 336, "multiheadattent": 310, "multipl": [0, 412], "multipli": 415, "multisteplr": 376, "nadam": 387, "natur": 207, "network": 16, "neural": 16, "new": 396, "newaxi": 396, "nll_loss": 256, "nllloss": 337, "nn": [16, 210, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 368], "no_grad": 397, "nonzero": 476, "norm": 24, "normal": [247, 259, 262, 293, 328, 347, 498], "note": [11, 274, 425, 426], "number": 400, "numer": 393, "object": 208, "ones": 428, "ones_lik": 429, "oper": [21, 412, 432], "optim": [369, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "option": 310, "organ": 368, "other": 16, "outer": 416, "overview": [3, 4, 10, 88, 89, 90, 91, 97, 98, 99, 101, 102, 103, 104, 111, 112, 113, 114, 119, 120, 121, 122, 123, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 310, 360, 361, 362, 363, 364, 368, 370, 380, 394, 397, 406, 506], "pad": 477, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "parameterdict": 219, "parameterlist": 220, "pass": 203, "perform": [407, 464], "pinv": 25, "pipelin": [3, 506], "pitfal": 395, "pool": [247, 269, 328, 357], "potenti": 395, "power": 417, "process": [207, 276], "properti": [216, 407], "pvt": [100, 124], "pvt_huge": 126, "pvt_larg": 127, "pvt_medium": 128, "pvt_small": 129, "pvt_tini": 130, "pvt_v2": 125, "pvt_v2_b0": 131, "pvt_v2_b1": 132, "pvt_v2_b2": 133, "pvt_v2_b2_li": 134, "pvt_v2_b3": 135, "pvt_v2_b4": 136, "pvt_v2_b5": 137, "pyramid": 100, "qr": 26, "radam": 388, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 401, "randint": 402, "randn": 403, "random": [399, 400, 401, 402, 403, 404, 405, 406], "randomcrop": 499, "randomgrayscal": 500, "randomhorizontalflip": 501, "randomrot": 502, "randomverticalflip": 503, "ravel": 478, "rcnn": 208, "rearrang": [10, 13, 326], "reciproc": 449, "reduc": [10, 14], "reducelronplateau": 377, "refer": [5, 6, 7, 8, 286, 380], "register_model": 398, "regular": 240, "relu": [227, 288, 302], "relu6": 303, "repeat": [10, 15, 479], "represent": [55, 105, 393, 407], "reshap": 480, "resiz": 504, "resnest": [100, 138], "resnest_101": 139, "resnest_14": 140, "resnest_200": 141, "resnest_26": 142, "resnest_269": 143, "resnest_50": 144, "resnest_50_1s4x24d": 145, "resnest_50_4s2x40d": 146, "resnet": [100, 147], "resnet_1001": 148, "resnet_101": 149, "resnet_152": 150, "resnet_18": 151, "resnet_200": 152, "resnet_269": 153, "resnet_34": 154, "resnet_50": 155, "resnext": [100, 158], "resnext_101_32x16d": 159, "resnext_101_32x32d": 160, "resnext_101_32x4d": 161, "resnext_101_32x8d": 162, "resnext_101_64x4d": 163, "resnext_50_32x4d": 164, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 211, 212, 213, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 287, 289, 291, 292, 293, 294, 295, 296, 303, 326, 358, 394, 395, 397, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "rmsprop": 389, "roll": 481, "rotat": 279, "round": 450, "rprop": 390, "rule": [412, 419, 457, 465], "scaled_dot_product_attent": 233, "scaleddotproductattent": 311, "schedul": 379, "se_resnet_101": 166, "se_resnet_152": 167, "se_resnet_18": 168, "se_resnet_34": 169, "se_resnet_50": 170, "se_resnext_101_32x4d": 171, "se_resnext_101_32x8d": 172, "se_resnext_101_64x4d": 173, "se_resnext_50_32x4d": 174, "see": 380, "seed": 404, "select": 288, "selectivekernel": 287, "selu": [228, 304], "semodul": 286, "senet": [100, 165], "separ": 288, "sequenc": 209, "sequenti": 221, "sgd": 391, "shape": 16, "sigmoid": [229, 305], "sign": 451, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "sin": 452, "sinh": 453, "sk_resnet_18": 176, "sk_resnet_34": 177, "sk_resnet_50": 178, "sk_resnext_50_32x4d": 179, "sknet": [100, 175], "softmax": [230, 306], "solv": 27, "sort": [464, 482], "spars": [328, 359], "spatial": [247, 275], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64], "split": 483, "sqrt": 454, "squar": 455, "squeez": [288, 484], "stabl": 464, "stack": 485, "start": 380, "state": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "steplr": 378, "sub": 418, "sum": 456, "summar": 213, "summari": 213, "svd": 28, "swap": 457, "swapax": 457, "swin": 100, "swin_bas": 182, "swin_larg": 183, "swin_smal": 184, "swin_tini": 185, "swin_v2_bas": 186, "swin_v2_giant": 187, "swin_v2_hug": 188, "swin_v2_larg": 189, "swin_v2_smal": 190, "swin_v2_tini": 191, "swintransform": 180, "swintransformer_v2": 181, "swish": 307, "switch": 16, "tabl": 213, "tan": 458, "tanh": [231, 308, 459], "tensor": [16, 396, 407, 419, 432, 463, 473], "tensordot": 419, "tile": 486, "topk": 487, "totensor": 496, "trace": 460, "track": 407, "train": 16, "transform": [100, 209, 210, 328, 360, 365, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "transformer_bas": 211, "transformer_big": 212, "transformerdecod": 361, "transformerdecoderlay": 362, "transformerencod": 363, "transformerencoderlay": 364, "transpos": 461, "tril": 488, "triu": 489, "unari": 432, "unbind": 490, "unfold": [238, 316], "uniform": [294, 405], "uniqu": 491, "unsqueez": 492, "upsampl": 366, "us": [1, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 407, 463], "usag": [4, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 119, 120, 121, 122, 123, 171, 172, 173, 174, 179, 214, 279, 310, 360, 361, 362, 363, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 393, 395, 396, 475, 495, 496, 506], "util": [247, 277, 473], "valu": 483, "var": 462, "variant": [57, 59, 61], "verif": 16, "vggnet": [100, 192], "vggnet_11": 193, "vggnet_13": 194, "vggnet_16": 195, "vggnet_19": 196, "vision": [100, 207, 328, 367], "visual": 100, "vit": [100, 197], "vit_bas": 198, "vit_hug": 199, "vit_larg": 200, "vit_smal": 201, "vit_tini": 202, "vstack": 493, "weight": 290, "where": 494, "wide_resnet_101": 156, "wide_resnet_50": 157, "work": [4, 395], "xavier_norm": 295, "xavier_uniform": 296, "xception": [100, 203, 204], "zero": 430, "zeros_lik": 431, "zfnet": [100, 205, 206]}})