Search.setIndex({"alltitles": {"@ Operator": [[221, "operator"]], "Activation Functions": [[82, null]], "Activation Layers": [[149, null], [160, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[208, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[93, "advanced-example-with-dilation"]], "Advanced Features": [[289, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[192, "algorithm"], [193, "algorithm"], [194, "algorithm"], [195, "algorithm"], [196, "algorithm"], [197, "algorithm"], [198, "algorithm"], [199, "algorithm"], [200, "algorithm"], [201, "algorithm"], [202, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [67, "architecture"]], "Architecture Details": [[43, "architecture-details"], [44, "architecture-details"]], "Attention Mechanism": [[131, "attention-mechanism"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [45, "attributes"], [52, "attributes"], [58, "attributes"], [62, "attributes"], [67, "attributes"], [71, "attributes"], [73, "attributes"], [74, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [179, "attributes"], [180, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [216, "attributes"], [280, "attributes"], [281, "attributes"], [282, "attributes"], [283, "attributes"], [284, "attributes"], [285, "attributes"], [286, "attributes"], [287, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"]], "Behavior": [[114, "behavior"], [115, "behavior"], [116, "behavior"], [179, "behavior"], [180, "behavior"], [181, "behavior"]], "Benefits": [[206, "benefits"]], "Binary Functions": [[237, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [45, "class-signature"], [52, "class-signature"], [58, "class-signature"], [62, "class-signature"], [67, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [75, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [190, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [216, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [189, "conclusion"], [204, "conclusion"], [205, "conclusion"], [206, "conclusion"], [215, "conclusion"], [279, "conclusion"], [289, "conclusion"]], "Containers": [[79, null]], "Conv-BatchNorm-ReLU": [[132, null]], "ConvNets": [[29, null], [69, "convnets"]], "Convolution Functions": [[92, null], [100, null]], "Convolution Layers": [[153, null], [160, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[263, null]], "Creating a Parameter": [[73, null]], "Creating a tensor with gradient tracking": [[216, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[289, "custom-pipelines"]], "Defining a Custom Optimizer": [[191, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[72, null]], "Defining a custom optimizer": [[190, null]], "Description": [[46, "description"], [47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [59, "description"], [60, "description"], [61, "description"], [207, "description"]], "Dropout Functions": [[99, null], [100, null]], "Dropout Layers": [[159, null], [160, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [93, "example"], [189, null], [189, null], [189, null], [204, "example"], [206, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [215, null], [215, null], [215, null], [228, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [247, "example"], [249, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [264, "example"], [266, "example"], [270, "example"], [272, "example"], [273, "example"], [274, "example"], [276, "example"], [277, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[205, null]], "Example 2: Adding a new axis to a 2D tensor": [[205, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[205, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [126, "example-usage"], [278, "example-usage"], [279, "example-usage"], [289, "example-usage"]], "Example Use Cases": [[208, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [101, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [133, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [207, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [246, "examples"], [248, "examples"], [250, "examples"], [263, "examples"], [265, "examples"], [268, "examples"], [269, "examples"], [271, "examples"], [275, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [34, "forward-calculation"], [45, "forward-calculation"], [52, "forward-calculation"], [58, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [93, "forward-calculation"], [101, "forward-calculation"], [103, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [125, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [264, "forward-calculation"], [266, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [68, "function-signature"], [70, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [101, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [125, "function-signature"], [126, "function-signature"], [133, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [204, "function-signature"], [206, "function-signature"], [207, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"]], "Fused Layers": [[132, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[191, "getting-started"]], "How It Works": [[204, "how-it-works"], [206, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[288, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[216, null]], "Inspecting Optimizer State": [[191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null]], "Integration with lucid": [[3, "integration-with-lucid"], [189, "integration-with-lucid"], [215, "integration-with-lucid"], [289, "integration-with-lucid"]], "Iterating through a tensor": [[216, null]], "Key Components": [[3, "key-components"], [189, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [191, "key-features"], [215, "key-features"]], "Key Transformations": [[289, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[215, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[100, null], [102, null]], "Linear Layers": [[160, null], [164, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[100, null], [107, null]], "Loss Layers": [[160, null], [170, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[221, "matrix-multiplication-rules"]], "Metadata Captured": [[207, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [62, "methods"], [72, "methods"], [73, "methods"], [190, "methods"], [216, "methods"]], "Modules": [[160, null]], "Normalization Functions": [[100, null], [111, null]], "Normalization Layers": [[160, null], [178, null]], "Notes": [[7, "notes"]], "Optimizers": [[203, null]], "Organizing Models": [[189, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [35, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [53, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [57, "overview"], [189, "overview"], [191, "overview"], [215, "overview"], [289, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [70, "parameters"], [71, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [133, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [206, "parameters"], [207, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"]], "Performing backpropagation": [[216, null]], "Pooling Functions": [[100, null], [120, null]], "Pooling Layers": [[160, null], [188, null]], "Potential Pitfalls": [[204, "potential-pitfalls"], [206, "potential-pitfalls"]], "Properties": [[73, "properties"], [216, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[209, null]], "References": [[5, "references"], [130, "references"], [191, "references"]], "ResNeXt": [[45, null]], "ResNet": [[34, null]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [68, "returns"], [70, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [101, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [125, "returns"], [126, "returns"], [131, "returns"], [133, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [204, "returns"], [206, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"]], "SENet": [[52, null]], "SKNet": [[58, null]], "See Also": [[191, "see-also"]], "Selective Kernel": [[132, null]], "Squeeze-and-Excitation": [[132, null]], "Summary Table": [[70, "summary-table"]], "Tensor Generating Functions": [[237, null]], "Tensor Operations": [[237, null]], "Tensor Utilites": [[267, null]], "Type Definitions": [[208, "type-definitions"]], "Unary Functions": [[237, null]], "Usage": [[4, "usage"], [71, "usage"], [126, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [268, "usage"], [278, "usage"], [279, "usage"], [289, "usage"]], "Use another Tensor as input": [[263, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[192, null]], "Using the Adadelta Optimizer": [[193, null]], "Using the Adagrad Optimizer": [[194, null]], "Using the Adam Optimizer": [[195, null]], "Using the AdamW Optimizer": [[196, null]], "Using the Adamax Optimizer": [[197, null]], "Using the NAdam Optimizer": [[198, null]], "Using the RAdam Optimizer": [[199, null]], "Using the RMSprop Optimizer": [[200, null]], "Using the Rprop Optimizer": [[201, null]], "Using the SGD Optimizer": [[202, null]], "Utility Functions": [[100, null], [124, null]], "VGGNet": [[62, null]], "Weight Initializations": [[134, null]], "Why Use Type Aliases?": [[208, null]], "ZFNet": [[67, null]], "activation Functions": [[100, null]], "alexnet": [[21, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[27, null]], "inception_resnet_v2": [[28, null]], "inception_v1": [[23, null]], "inception_v3": [[24, null]], "inception_v4": [[25, null]], "lenet_1": [[31, null]], "lenet_4": [[32, null]], "lenet_5": [[33, null]], "lucid.Tensor": [[216, null]], "lucid.abs": [[238, null]], "lucid.add": [[217, null]], "lucid.arange": [[228, null]], "lucid.arccos": [[239, null]], "lucid.arcsin": [[240, null]], "lucid.arctan": [[241, null]], "lucid.clip": [[242, null]], "lucid.concatenate": [[264, null]], "lucid.cos": [[243, null]], "lucid.cosh": [[244, null]], "lucid.cube": [[245, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[229, null]], "lucid.div": [[218, null]], "lucid.dot": [[219, null]], "lucid.empty": [[230, null]], "lucid.empty_like": [[231, null]], "lucid.exp": [[246, null]], "lucid.eye": [[232, null]], "lucid.flatten": [[265, null]], "lucid.grad_enabled": [[204, null]], "lucid.hstack": [[266, null]], "lucid.inner": [[220, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[247, null]], "lucid.matmul": [[221, null]], "lucid.max": [[248, null]], "lucid.maximum": [[222, null]], "lucid.mean": [[249, null]], "lucid.meshgrid": [[268, null]], "lucid.min": [[250, null]], "lucid.minimum": [[223, null]], "lucid.models": [[69, null]], "lucid.mul": [[224, null]], "lucid.newaxis": [[205, null]], "lucid.nn": [[189, null]], "lucid.nn.functional": [[100, null]], "lucid.no_grad": [[206, null]], "lucid.ones": [[233, null]], "lucid.ones_like": [[234, null]], "lucid.optim": [[191, null]], "lucid.outer": [[225, null]], "lucid.pad": [[269, null]], "lucid.power": [[226, null]], "lucid.random": [[215, null]], "lucid.random.rand": [[210, null]], "lucid.random.randint": [[211, null]], "lucid.random.randn": [[212, null]], "lucid.random.seed": [[213, null]], "lucid.random.uniform": [[214, null]], "lucid.ravel": [[270, null]], "lucid.reciprocal": [[251, null]], "lucid.register_model": [[207, null]], "lucid.repeat": [[271, null]], "lucid.reshape": [[272, null]], "lucid.sign": [[252, null]], "lucid.sin": [[253, null]], "lucid.sinh": [[254, null]], "lucid.sqrt": [[255, null]], "lucid.square": [[256, null]], "lucid.squeeze": [[273, null]], "lucid.stack": [[274, null]], "lucid.sub": [[227, null]], "lucid.sum": [[257, null]], "lucid.tan": [[258, null]], "lucid.tanh": [[259, null]], "lucid.tensor": [[263, null]], "lucid.tile": [[275, null]], "lucid.trace": [[260, null]], "lucid.transforms": [[289, null]], "lucid.transpose": [[261, null]], "lucid.types": [[208, null]], "lucid.unsqueeze": [[276, null]], "lucid.var": [[262, null]], "lucid.vstack": [[277, null]], "lucid.zeros": [[235, null]], "lucid.zeros_like": [[236, null]], "models.sk_resnet_18": [[59, null]], "models.sk_resnet_34": [[60, null]], "models.sk_resnet_50": [[61, null]], "models.summarize": [[70, null]], "nn.AdaptiveAvgPool1d": [[179, null]], "nn.AdaptiveAvgPool2d": [[180, null]], "nn.AdaptiveAvgPool3d": [[181, null]], "nn.AlphaDropout": [[154, null]], "nn.AvgPool1d": [[182, null]], "nn.AvgPool2d": [[183, null]], "nn.AvgPool3d": [[184, null]], "nn.BCELoss": [[165, null]], "nn.BatchNorm1d": [[171, null]], "nn.BatchNorm2d": [[172, null]], "nn.BatchNorm3d": [[173, null]], "nn.Bilinear": [[161, null]], "nn.Buffer": [[71, null]], "nn.Conv1d": [[150, null]], "nn.Conv2d": [[151, null]], "nn.Conv3d": [[152, null]], "nn.ConvBNReLU1d": [[127, null]], "nn.ConvBNReLU2d": [[128, null]], "nn.ConvBNReLU3d": [[129, null]], "nn.CrossEntropyLoss": [[166, null]], "nn.Dropout": [[155, null]], "nn.Dropout1d": [[156, null]], "nn.Dropout2d": [[157, null]], "nn.Dropout3d": [[158, null]], "nn.ELU": [[141, null]], "nn.GELU": [[142, null]], "nn.HuberLoss": [[167, null]], "nn.Identity": [[162, null]], "nn.InstanceNorm1d": [[174, null]], "nn.InstanceNorm2d": [[175, null]], "nn.InstanceNorm3d": [[176, null]], "nn.LayerNorm": [[177, null]], "nn.LeakyReLU": [[143, null]], "nn.Linear": [[163, null]], "nn.MSELoss": [[168, null]], "nn.MaxPool1d": [[185, null]], "nn.MaxPool2d": [[186, null]], "nn.MaxPool3d": [[187, null]], "nn.Module": [[72, null]], "nn.ModuleDict": [[74, null]], "nn.ModuleList": [[75, null]], "nn.NLLLoss": [[169, null]], "nn.Parameter": [[73, null]], "nn.ParameterDict": [[76, null]], "nn.ParameterList": [[77, null]], "nn.ReLU": [[144, null]], "nn.SELU": [[145, null]], "nn.SEModule": [[130, null]], "nn.SelectiveKernel": [[131, null]], "nn.Sequential": [[78, null]], "nn.Sigmoid": [[146, null]], "nn.Softmax": [[147, null]], "nn.Tanh": [[148, null]], "nn.functional.adaptive_avg_pool1d": [[114, null]], "nn.functional.adaptive_avg_pool2d": [[115, null]], "nn.functional.adaptive_avg_pool3d": [[116, null]], "nn.functional.alpha_dropout": [[94, null]], "nn.functional.avg_pool1d": [[117, null]], "nn.functional.avg_pool2d": [[118, null]], "nn.functional.avg_pool3d": [[119, null]], "nn.functional.batch_norm": [[110, null]], "nn.functional.bilinear": [[101, null]], "nn.functional.binary_cross_entropy": [[104, null]], "nn.functional.conv1d": [[89, null]], "nn.functional.conv2d": [[90, null]], "nn.functional.conv3d": [[91, null]], "nn.functional.cross_entropy": [[105, null]], "nn.functional.dropout": [[95, null]], "nn.functional.dropout1d": [[96, null]], "nn.functional.dropout2d": [[97, null]], "nn.functional.dropout3d": [[98, null]], "nn.functional.elu": [[80, null]], "nn.functional.gelu": [[81, null]], "nn.functional.huber_loss": [[106, null]], "nn.functional.instance_norm": [[112, null]], "nn.functional.interpolate": [[125, null]], "nn.functional.layer_norm": [[113, null]], "nn.functional.leaky_relu": [[83, null]], "nn.functional.linear": [[103, null]], "nn.functional.max_pool1d": [[121, null]], "nn.functional.max_pool2d": [[122, null]], "nn.functional.max_pool3d": [[123, null]], "nn.functional.mse_loss": [[108, null]], "nn.functional.nll_loss": [[109, null]], "nn.functional.relu": [[84, null]], "nn.functional.rotate": [[126, null]], "nn.functional.selu": [[85, null]], "nn.functional.sigmoid": [[86, null]], "nn.functional.softmax": [[87, null]], "nn.functional.tanh": [[88, null]], "nn.functional.unfold": [[93, null]], "nn.init.constant": [[133, null]], "nn.init.kaiming_normal": [[135, null]], "nn.init.kaiming_uniform": [[136, null]], "nn.init.normal": [[137, null]], "nn.init.uniform": [[138, null]], "nn.init.xavier_normal": [[139, null]], "nn.init.xavier_uniform": [[140, null]], "optim.ASGD": [[192, null]], "optim.Adadelta": [[193, null]], "optim.Adagrad": [[194, null]], "optim.Adam": [[195, null]], "optim.AdamW": [[196, null]], "optim.Adamax": [[197, null]], "optim.NAdam": [[198, null]], "optim.Optimizer": [[190, null]], "optim.RAdam": [[199, null]], "optim.RMSprop": [[200, null]], "optim.Rprop": [[201, null]], "optim.SGD": [[202, null]], "resnet_1001": [[35, null]], "resnet_101": [[36, null]], "resnet_152": [[37, null]], "resnet_18": [[38, null]], "resnet_200": [[39, null]], "resnet_269": [[40, null]], "resnet_34": [[41, null]], "resnet_50": [[42, null]], "resnext_101_32x16d": [[46, null]], "resnext_101_32x32d": [[47, null]], "resnext_101_32x4d": [[48, null]], "resnext_101_32x8d": [[49, null]], "resnext_101_64x4d": [[50, null]], "resnext_50_32x4d": [[51, null]], "se_resnet_101": [[53, null]], "se_resnet_152": [[54, null]], "se_resnet_18": [[55, null]], "se_resnet_34": [[56, null]], "se_resnet_50": [[57, null]], "transforms.CenterCrop": [[280, null]], "transforms.Compose": [[278, null]], "transforms.Normalize": [[281, null]], "transforms.RandomCrop": [[282, null]], "transforms.RandomGrayscale": [[283, null]], "transforms.RandomHorizontalFlip": [[284, null]], "transforms.RandomRotation": [[285, null]], "transforms.RandomVerticalFlip": [[286, null]], "transforms.Resize": [[287, null]], "transforms.ToTensor": [[279, null]], "vggnet_11": [[63, null]], "vggnet_13": [[64, null]], "vggnet_16": [[65, null]], "vggnet_19": [[66, null]], "wide_resnet_101": [[43, null]], "wide_resnet_50": [[44, null]], "zfnet": [[68, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[238, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[193, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[194, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[195, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[197, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[196, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[179, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[180, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[181, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[217, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[154, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[228, "lucid.arange", false]], "arccos() (in module lucid)": [[239, "lucid.arccos", false]], "arcsin() (in module lucid)": [[240, "lucid.arcsin", false]], "arctan() (in module lucid)": [[241, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[192, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[182, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[183, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[184, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[171, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[172, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[173, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[165, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[161, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[71, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[280, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[242, "lucid.clip", false]], "compose (class in lucid.transforms)": [[278, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[264, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[133, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[150, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[151, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[152, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[127, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[128, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[129, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[243, "lucid.cos", false]], "cosh() (in module lucid)": [[244, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[166, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[245, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[229, "lucid.diag", false]], "div() (in module lucid)": [[218, "lucid.div", false]], "dot() (in module lucid)": [[219, "lucid.dot", false]], "dropout (class in lucid.nn)": [[155, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[156, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[157, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[158, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[141, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[230, "lucid.empty", false]], "empty_like() (in module lucid)": [[231, "lucid.empty_like", false]], "exp() (in module lucid)": [[246, "lucid.exp", false]], "eye() (in module lucid)": [[232, "lucid.eye", false]], "flatten() (in module lucid)": [[265, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[142, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[204, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[266, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[167, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[162, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[220, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[174, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[175, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[176, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[135, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[136, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[177, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[143, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[163, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[247, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[221, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[248, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[122, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[222, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[185, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[186, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[187, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[249, "lucid.mean", false]], "meshgrid() (in module lucid)": [[268, "lucid.meshgrid", false]], "min() (in module lucid)": [[250, "lucid.min", false]], "minimum() (in module lucid)": [[223, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[72, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[74, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[75, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[168, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[224, "lucid.mul", false]], "nadam (class in lucid.optim)": [[198, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[169, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[206, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[137, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[281, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[233, "lucid.ones", false]], "ones_like() (in module lucid)": [[234, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[190, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[225, "lucid.outer", false]], "pad() (in module lucid)": [[269, "lucid.pad", false]], "parameter (class in lucid.nn)": [[73, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[76, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[77, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[226, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[199, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[210, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[211, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[212, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[282, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[283, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[284, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[285, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[286, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[270, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[251, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[207, "lucid.register_model", false]], "relu (class in lucid.nn)": [[144, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[271, "lucid.repeat", false]], "reshape() (in module lucid)": [[272, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[287, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[34, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[35, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[36, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[37, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[38, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[39, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[40, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[41, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[42, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[45, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[46, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[47, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[48, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[49, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[50, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[51, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[200, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[201, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[53, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[54, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[55, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[56, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[57, "lucid.models.se_resnet_50", false]], "seed() (in module lucid.random)": [[213, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[131, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[145, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[130, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[52, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[78, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[202, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[146, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[252, "lucid.sign", false]], "sin() (in module lucid)": [[253, "lucid.sin", false]], "sinh() (in module lucid)": [[254, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[59, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[60, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[61, "lucid.models.sk_resnet_50", false]], "sknet (class in lucid.models)": [[58, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[147, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[255, "lucid.sqrt", false]], "square() (in module lucid)": [[256, "lucid.square", false]], "squeeze() (in module lucid)": [[273, "lucid.squeeze", false]], "stack() (in module lucid)": [[274, "lucid.stack", false]], "sub() (in module lucid)": [[227, "lucid.sub", false]], "sum() (in module lucid)": [[257, "lucid.sum", false]], "summarize() (in module lucid.models)": [[70, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[258, "lucid.tan", false]], "tanh (class in lucid.nn)": [[148, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[259, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[216, "lucid.Tensor", false]], "tensor() (in module lucid)": [[263, "lucid.tensor", false]], "tile() (in module lucid)": [[275, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[279, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[260, "lucid.trace", false]], "transpose() (in module lucid)": [[261, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[138, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[214, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[276, "lucid.unsqueeze", false]], "var() (in module lucid)": [[262, "lucid.var", false]], "vggnet (class in lucid.models)": [[62, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[63, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[64, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[65, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[66, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[277, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[43, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[44, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[139, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[140, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[235, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[236, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[67, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[68, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[216, 1, 1, "", "Tensor"], [238, 2, 1, "", "abs"], [217, 2, 1, "", "add"], [228, 2, 1, "", "arange"], [239, 2, 1, "", "arccos"], [240, 2, 1, "", "arcsin"], [241, 2, 1, "", "arctan"], [242, 2, 1, "", "clip"], [264, 2, 1, "", "concatenate"], [243, 2, 1, "", "cos"], [244, 2, 1, "", "cosh"], [245, 2, 1, "", "cube"], [229, 2, 1, "", "diag"], [218, 2, 1, "", "div"], [219, 2, 1, "", "dot"], [230, 2, 1, "", "empty"], [231, 2, 1, "", "empty_like"], [246, 2, 1, "", "exp"], [232, 2, 1, "", "eye"], [265, 2, 1, "", "flatten"], [204, 2, 1, "", "grad_enabled"], [266, 2, 1, "", "hstack"], [220, 2, 1, "", "inner"], [247, 2, 1, "", "log"], [221, 2, 1, "", "matmul"], [248, 2, 1, "", "max"], [222, 2, 1, "", "maximum"], [249, 2, 1, "", "mean"], [268, 2, 1, "", "meshgrid"], [250, 2, 1, "", "min"], [223, 2, 1, "", "minimum"], [224, 2, 1, "", "mul"], [206, 2, 1, "", "no_grad"], [233, 2, 1, "", "ones"], [234, 2, 1, "", "ones_like"], [225, 2, 1, "", "outer"], [269, 2, 1, "", "pad"], [226, 2, 1, "", "power"], [270, 2, 1, "", "ravel"], [251, 2, 1, "", "reciprocal"], [207, 2, 1, "", "register_model"], [271, 2, 1, "", "repeat"], [272, 2, 1, "", "reshape"], [252, 2, 1, "", "sign"], [253, 2, 1, "", "sin"], [254, 2, 1, "", "sinh"], [255, 2, 1, "", "sqrt"], [256, 2, 1, "", "square"], [273, 2, 1, "", "squeeze"], [274, 2, 1, "", "stack"], [227, 2, 1, "", "sub"], [257, 2, 1, "", "sum"], [258, 2, 1, "", "tan"], [259, 2, 1, "", "tanh"], [263, 2, 1, "", "tensor"], [275, 2, 1, "", "tile"], [260, 2, 1, "", "trace"], [261, 2, 1, "", "transpose"], [276, 2, 1, "", "unsqueeze"], [262, 2, 1, "", "var"], [277, 2, 1, "", "vstack"], [235, 2, 1, "", "zeros"], [236, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [45, 1, 1, "", "ResNeXt"], [34, 1, 1, "", "ResNet"], [52, 1, 1, "", "SENet"], [58, 1, 1, "", "SKNet"], [62, 1, 1, "", "VGGNet"], [67, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [35, 2, 1, "", "resnet_1001"], [36, 2, 1, "", "resnet_101"], [37, 2, 1, "", "resnet_152"], [38, 2, 1, "", "resnet_18"], [39, 2, 1, "", "resnet_200"], [40, 2, 1, "", "resnet_269"], [41, 2, 1, "", "resnet_34"], [42, 2, 1, "", "resnet_50"], [46, 2, 1, "", "resnext_101_32x16d"], [47, 2, 1, "", "resnext_101_32x32d"], [48, 2, 1, "", "resnext_101_32x4d"], [49, 2, 1, "", "resnext_101_32x8d"], [50, 2, 1, "", "resnext_101_64x4d"], [51, 2, 1, "", "resnext_50_32x4d"], [53, 2, 1, "", "se_resnet_101"], [54, 2, 1, "", "se_resnet_152"], [55, 2, 1, "", "se_resnet_18"], [56, 2, 1, "", "se_resnet_34"], [57, 2, 1, "", "se_resnet_50"], [59, 2, 1, "", "sk_resnet_18"], [60, 2, 1, "", "sk_resnet_34"], [61, 2, 1, "", "sk_resnet_50"], [70, 2, 1, "", "summarize"], [63, 2, 1, "", "vggnet_11"], [64, 2, 1, "", "vggnet_13"], [65, 2, 1, "", "vggnet_16"], [66, 2, 1, "", "vggnet_19"], [43, 2, 1, "", "wide_resnet_101"], [44, 2, 1, "", "wide_resnet_50"], [68, 2, 1, "", "zfnet"]], "lucid.nn": [[179, 1, 1, "", "AdaptiveAvgPool1d"], [180, 1, 1, "", "AdaptiveAvgPool2d"], [181, 1, 1, "", "AdaptiveAvgPool3d"], [154, 1, 1, "", "AlphaDropout"], [182, 1, 1, "", "AvgPool1d"], [183, 1, 1, "", "AvgPool2d"], [184, 1, 1, "", "AvgPool3d"], [165, 1, 1, "", "BCELoss"], [171, 1, 1, "", "BatchNorm1d"], [172, 1, 1, "", "BatchNorm2d"], [173, 1, 1, "", "BatchNorm3d"], [161, 1, 1, "", "Bilinear"], [71, 1, 1, "", "Buffer"], [150, 1, 1, "", "Conv1d"], [151, 1, 1, "", "Conv2d"], [152, 1, 1, "", "Conv3d"], [127, 1, 1, "", "ConvBNReLU1d"], [128, 1, 1, "", "ConvBNReLU2d"], [129, 1, 1, "", "ConvBNReLU3d"], [166, 1, 1, "", "CrossEntropyLoss"], [155, 1, 1, "", "Dropout"], [156, 1, 1, "", "Dropout1d"], [157, 1, 1, "", "Dropout2d"], [158, 1, 1, "", "Dropout3d"], [141, 1, 1, "", "ELU"], [142, 1, 1, "", "GELU"], [167, 1, 1, "", "HuberLoss"], [162, 1, 1, "", "Identity"], [174, 1, 1, "", "InstanceNorm1d"], [175, 1, 1, "", "InstanceNorm2d"], [176, 1, 1, "", "InstanceNorm3d"], [177, 1, 1, "", "LayerNorm"], [143, 1, 1, "", "LeakyReLU"], [163, 1, 1, "", "Linear"], [168, 1, 1, "", "MSELoss"], [185, 1, 1, "", "MaxPool1d"], [186, 1, 1, "", "MaxPool2d"], [187, 1, 1, "", "MaxPool3d"], [72, 1, 1, "", "Module"], [74, 1, 1, "", "ModuleDict"], [75, 1, 1, "", "ModuleList"], [169, 1, 1, "", "NLLLoss"], [73, 1, 1, "", "Parameter"], [76, 1, 1, "", "ParameterDict"], [77, 1, 1, "", "ParameterList"], [144, 1, 1, "", "ReLU"], [145, 1, 1, "", "SELU"], [130, 1, 1, "", "SEModule"], [131, 1, 1, "", "SelectiveKernel"], [78, 1, 1, "", "Sequential"], [146, 1, 1, "", "Sigmoid"], [147, 1, 1, "", "Softmax"], [148, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[114, 2, 1, "", "adaptive_avg_pool1d"], [115, 2, 1, "", "adaptive_avg_pool2d"], [116, 2, 1, "", "adaptive_avg_pool3d"], [94, 2, 1, "", "alpha_dropout"], [117, 2, 1, "", "avg_pool1d"], [118, 2, 1, "", "avg_pool2d"], [119, 2, 1, "", "avg_pool3d"], [110, 2, 1, "", "batch_norm"], [101, 2, 1, "", "bilinear"], [104, 2, 1, "", "binary_cross_entropy"], [89, 2, 1, "", "conv1d"], [90, 2, 1, "", "conv2d"], [91, 2, 1, "", "conv3d"], [105, 2, 1, "", "cross_entropy"], [95, 2, 1, "", "dropout"], [96, 2, 1, "", "dropout1d"], [97, 2, 1, "", "dropout2d"], [98, 2, 1, "", "dropout3d"], [80, 2, 1, "", "elu"], [81, 2, 1, "", "gelu"], [106, 2, 1, "", "huber_loss"], [112, 2, 1, "", "instance_norm"], [125, 2, 1, "", "interpolate"], [113, 2, 1, "", "layer_norm"], [83, 2, 1, "", "leaky_relu"], [103, 2, 1, "", "linear"], [121, 2, 1, "", "max_pool1d"], [122, 2, 1, "", "max_pool2d"], [123, 2, 1, "", "max_pool3d"], [108, 2, 1, "", "mse_loss"], [109, 2, 1, "", "nll_loss"], [84, 2, 1, "", "relu"], [126, 2, 1, "", "rotate"], [85, 2, 1, "", "selu"], [86, 2, 1, "", "sigmoid"], [87, 2, 1, "", "softmax"], [88, 2, 1, "", "tanh"], [93, 2, 1, "", "unfold"]], "lucid.nn.init": [[133, 2, 1, "", "constant"], [135, 2, 1, "", "kaiming_normal"], [136, 2, 1, "", "kaiming_uniform"], [137, 2, 1, "", "normal"], [138, 2, 1, "", "uniform"], [139, 2, 1, "", "xavier_normal"], [140, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[192, 1, 1, "", "ASGD"], [193, 1, 1, "", "Adadelta"], [194, 1, 1, "", "Adagrad"], [195, 1, 1, "", "Adam"], [196, 1, 1, "", "AdamW"], [197, 1, 1, "", "Adamax"], [198, 1, 1, "", "NAdam"], [190, 1, 1, "", "Optimizer"], [199, 1, 1, "", "RAdam"], [200, 1, 1, "", "RMSprop"], [201, 1, 1, "", "Rprop"], [202, 1, 1, "", "SGD"]], "lucid.random": [[210, 2, 1, "", "rand"], [211, 2, 1, "", "randint"], [212, 2, 1, "", "randn"], [213, 2, 1, "", "seed"], [214, 2, 1, "", "uniform"]], "lucid.transforms": [[280, 1, 1, "", "CenterCrop"], [278, 1, 1, "", "Compose"], [281, 1, 1, "", "Normalize"], [282, 1, 1, "", "RandomCrop"], [283, 1, 1, "", "RandomGrayscale"], [284, 1, 1, "", "RandomHorizontalFlip"], [285, 1, 1, "", "RandomRotation"], [286, 1, 1, "", "RandomVerticalFlip"], [287, 1, 1, "", "Resize"], [279, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 69, 70, 71, 72, 73, 74, 76, 77, 78, 114, 115, 116, 131, 166, 169, 179, 180, 181, 182, 185, 186, 189, 190, 191, 205, 207, 221, 229, 247, 249, 257, 260, 262, 263, 273, 279, 281, 289], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 52, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 266, 269, 270, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289], "000": [5, 230, 231], "0000": [166, 167, 169], "0001": 192, "000e": [230, 231], "001": [192, 195, 196, 198, 199, 202], "002": [197, 198], "004": 198, "005": 143, "01": [83, 143, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "01051757": 212, "016": [35, 69], "0205": 166, "0217": 166, "0227": 166, "024": [57, 69], "026": [46, 69], "028": [51, 69], "0299": 166, "032": [42, 69], "044715": [81, 142], "0450": 166, "0451": 166, "047": [64, 69], "04719755": 239, "0474259": 86, "0480": 166, "05": [110, 112, 113, 127, 128, 129, 143, 171, 172, 173, 174, 175, 176, 177], "0507": [85, 145], "06": [193, 201], "069": [40, 69], "07": [104, 105, 165, 166], "0700": 166, "0706508": 148, "071": [35, 69], "0721": 166, "073": [61, 69], "0794": 169, "08": [195, 196, 197, 198, 199, 200], "0802": 169, "08333333": 16, "085537": 246, "088": [57, 69], "0900": [147, 166], "0986": [87, 147], "09861229": 247, "0992": 166, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 52, 58, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 62, 67, 68, 69, 70, 74, 75, 78, 90, 91, 101, 103, 114, 150, 151, 152, 157, 158, 161, 163, 172, 173, 175, 179, 183, 184, 186, 194, 207, 211, 214, 215, 218, 221, 224, 225, 241, 257, 280, 282, 283, 285], "100": [21, 63, 64, 65, 66, 69, 207, 289], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "1000000": 192, "1001": [35, 69, 166], "1003": 166, "1007": 69, "101": [36, 43, 46, 47, 48, 49, 50, 53, 69], "1014": 85, "102": [40, 69], "1025": [75, 78], "1026": [75, 78], "1027": [75, 78], "10499": 86, "1050": 146, "1054": 169, "1056": [75, 78], "10590": 69, "1097": 69, "11": [38, 55, 62, 63, 69, 101, 150, 151, 152, 157, 161, 172, 173, 175, 183, 184, 186, 221, 280, 281, 282, 283, 285], "1105": 69, "1109": 69, "1111": 165, "1134": 101, "114b": 283, "119": 101, "1192": [86, 87, 147], "12": [31, 32, 76, 101, 116, 150, 151, 152, 157, 158, 161, 172, 173, 175, 181, 183, 184, 186, 221, 225, 226, 280, 282, 283, 285], "120": [30, 33], "123": [135, 136, 137, 138, 139, 140, 213, 214], "124": [135, 136, 139, 140], "125": 184, "1250": 167, "126": [43, 69], "128": [27, 34, 43, 44, 62, 69, 78, 131, 278, 289], "128x128": [278, 289], "13": [23, 62, 64, 69, 101, 150, 151, 152, 161, 173, 183, 184, 186, 221, 280, 282, 283, 285], "132": [63, 69], "133": [64, 69], "138": [65, 69], "14": [150, 151, 152, 157, 158, 161, 173, 183, 184, 186, 208, 221, 225, 280, 282, 283, 285], "1409": 69, "143": [66, 69], "145": 101, "149": [35, 69], "15": [0, 101, 150, 151, 152, 161, 173, 183, 184, 186, 221, 225, 260, 280, 282, 283, 285, 289], "1513": 169, "152": [37, 54, 69], "155": 221, "1556": 69, "1588": [81, 142], "16": [30, 33, 46, 52, 62, 65, 69, 75, 76, 78, 115, 116, 127, 128, 129, 130, 131, 150, 151, 152, 157, 158, 161, 172, 173, 180, 181, 183, 184, 186, 189, 221, 225, 255, 280, 282, 283, 285], "160": [36, 69], "16227766": 17, "16425": 169, "1643": 165, "166": 221, "17": [150, 151, 152, 161, 173, 184, 220, 280, 282, 283, 285], "170": 101, "17520119": 254, "177": [48, 69], "18": [32, 38, 55, 59, 69, 150, 151, 152, 157, 161, 173, 184, 224, 225, 280, 282, 283, 285], "1800": 166, "19": [62, 66, 69, 90, 91, 101, 151, 152, 173, 219, 221], "192": [31, 32, 37, 69], "194": [46, 69], "1966": [87, 146, 147], "1998": [69, 166], "1_53": 69, "1d": [89, 114, 117, 121, 127, 171, 174, 179, 214, 221, 229, 260, 268, 269, 270, 271, 275], "1e": [104, 105, 110, 112, 113, 127, 128, 129, 165, 166, 171, 172, 173, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1e6": 192, "1st": [20, 67], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 38, 55, 59, 67, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "20": [0, 5, 74, 75, 78, 151, 152, 157, 173, 225, 246], "200": [39, 69], "2011": 130, "2012": 69, "2014": 69, "2015": 69, "2016": 69, "2017": 69, "2018": [69, 130], "2019": 69, "2023": 130, "2039": 169, "204": 152, "21": [41, 56, 69, 76, 101, 151, 152, 173, 225], "211": 221, "22": [27, 69, 101, 151, 152, 157, 173, 219, 221], "2231": [166, 169], "224": [20, 34, 44, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 67, 69], "2247": [171, 172, 173, 174, 175, 176, 177], "224x224": 23, "226": 221, "22752314": 212, "2278": 69, "23": [36, 43, 46, 47, 48, 49, 50, 53, 151, 152, 173], "2324": [69, 145], "234": [135, 136, 137, 138, 139, 140, 214], "24": [39, 101, 115, 151, 152, 157, 173, 180, 225], "240": [66, 69], "2424": [87, 147], "2447": 147, "246": [31, 69], "25": [0, 42, 51, 59, 69, 86, 146, 152, 168, 173, 183, 184, 218, 251, 262], "2500": [165, 167, 169], "2512": 141, "2547": 145, "256": [34, 62], "26": [76, 103, 152, 163, 173, 225], "26325684": 212, "2689": [87, 146, 147], "269": [40, 69], "27": [101, 150, 152, 173, 245], "272": [50, 69], "276": [135, 136, 139, 140], "28": [31, 32, 57, 69, 101, 152, 225], "28x28": [5, 31, 32], "29": 152, "299": 69, "299r": 283, "299x299": [24, 25, 27, 28], "2_i": [174, 175, 176], "2d": [90, 97, 115, 118, 122, 128, 172, 175, 180, 221, 229, 232, 260, 265, 268, 269, 271, 275, 285], "2e": 197, "2nd": [20, 67], "2x2": [93, 280, 282], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 81, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287], "30": [24, 40, 69, 75, 126, 152, 285], "3026": 169, "31": [101, 152, 221], "310": [230, 231], "31622777": 17, "319": 69, "32": [33, 46, 47, 48, 49, 51, 69, 75, 78, 101, 103, 115, 127, 128, 129, 130, 131, 151, 152, 163, 180, 189, 219, 220, 225], "321": [135, 136, 139, 140], "326": [53, 69], "32x16d": 69, "32x32": [30, 33], "32x32d": 69, "32x4d": 69, "32x8d": 69, "33": [75, 78, 103, 152, 163], "33333333": 16, "336": [49, 63, 69], "34": [41, 56, 60, 69, 75, 78, 101, 152, 221, 225], "342": [135, 136, 139, 140], "345": [135, 136, 137, 138, 139, 140, 214], "35": [28, 69, 75, 78, 152], "352": [23, 69], "3567": [165, 169], "357": [65, 68, 69], "36": [37, 39, 54, 152], "3679": [80, 85, 141], "368": [59, 61, 69], "37": 150, "372": 101, "375": 168, "3750": 167, "378": [32, 69], "38344152": 210, "38629436": 247, "389056": 246, "392": [24, 69], "393": [23, 69], "3935": 141, "3d": [91, 98, 116, 119, 123, 129, 152, 173, 176, 181], "3x3": [69, 215], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 56, 57, 60, 61, 69, 70, 76, 78, 89, 90, 91, 93, 96, 97, 98, 101, 103, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 195, 199, 200, 202, 205, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 236, 242, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287], "40": [25, 69], "400": 33, "4044": 165, "4076": 166, "4096": [20, 67], "41421356": 9, "416": [40, 69], "41666667": 16, "41808962": 212, "419974": 88, "4199743": 148, "42": [101, 130, 208, 215], "421": [135, 136, 139, 140], "423": [135, 136, 137, 138], "42718872": 17, "4278": 69, "4284": 69, "4286": 165, "43": [219, 221], "4323": 141, "4375": 167, "43758721": 210, "44": [36, 48, 69], "4472136": 11, "4495": [173, 176], "45": [60, 69, 101, 126, 285], "4545": 154, "455": [50, 69], "468": [47, 69], "47112767": 241, "472": [47, 69], "48": [40, 103, 163], "49": [53, 69], "4979": 141, "4x4": 287, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 58, 59, 60, 61, 67, 69, 70, 72, 73, 74, 75, 76, 78, 81, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 106, 108, 110, 112, 113, 114, 117, 118, 125, 127, 128, 129, 131, 133, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 186, 187, 201, 205, 208, 211, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 248, 249, 250, 251, 252, 257, 260, 261, 262, 263, 266, 268, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "50": [34, 42, 44, 51, 57, 61, 69, 103, 163, 201, 219, 221, 283, 284, 286, 289], "5000": [165, 167, 169], "510": 69, "5108": 169, "512": [28, 34, 38, 60, 69], "519": 69, "52359878": 240, "53": [101, 220], "530": [47, 69], "543": [135, 136, 137, 138, 139, 140, 214], "54308063": 244, "544": [65, 69], "545": 226, "5455": 154, "549": [36, 69], "557": [42, 69], "563": [135, 136, 139, 140], "57": [61, 69, 101], "57079633": [239, 240], "57366333": 213, "586": [25, 69], "587g": 283, "592": [55, 69], "5987": 69, "5995": 69, "5th": [20, 67], "6": [8, 16, 20, 30, 33, 34, 41, 42, 44, 51, 56, 57, 60, 61, 67, 76, 77, 89, 90, 91, 93, 98, 101, 103, 114, 136, 140, 150, 151, 152, 155, 156, 157, 158, 161, 163, 165, 171, 172, 173, 174, 175, 176, 177, 179, 183, 184, 186, 187, 193, 201, 205, 208, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 234, 236, 248, 249, 250, 257, 260, 261, 262, 263, 266, 271, 272, 277, 279, 280, 281, 282, 283, 285, 287], "60": [37, 69], "6052": 169, "6065": 141, "608": [68, 69], "61": [21, 33, 69], "6124": [171, 172, 173, 174, 175, 176, 177], "62": [68, 69, 101], "62686041": 254, "630": 69, "6321": [80, 141], "63245553": 17, "64": [34, 39, 50, 58, 62, 69, 75, 78, 101, 130, 131], "645": 69, "64589411": 210, "647": [59, 69], "64x4d": 69, "654": [135, 136, 137, 138, 139, 140, 214], "657": [135, 136, 139, 140], "6590": [87, 147], "66": [54, 69], "6652": 147, "66666667": 16, "6667": 165, "667": [66, 69], "6682": 165, "669": [39, 69], "67": 221, "672": [41, 69], "67326": 145, "6733": 85, "678": [135, 136, 137, 138, 139, 140], "68811989": 212, "689": [38, 69], "69314718": 247, "696": [43, 69], "7": [15, 62, 76, 89, 90, 91, 93, 98, 101, 103, 104, 105, 114, 131, 142, 145, 146, 148, 150, 151, 152, 157, 158, 161, 163, 165, 166, 168, 172, 173, 175, 176, 179, 183, 184, 186, 187, 208, 211, 214, 217, 219, 220, 221, 225, 227, 229, 246, 249, 257, 260, 261, 262, 275, 279, 280, 281, 282, 283, 285, 287], "70": 5, "7001": 166, "704": [48, 69], "706": [33, 69], "70710678": [11, 253], "7132": 69, "7141": 69, "7147": 169, "7182818": 246, "726791": 69, "7311": [87, 146, 147], "739": [27, 69], "74": 221, "75": [103, 163, 168, 192], "7581": 85, "76159416": 259, "7616": [88, 148], "76219569": 244, "7635": 145, "770": 69, "772": 226, "778": [55, 69], "78": [44, 69], "78357324": 212, "78539816": 241, "791": [49, 69], "79172504": 210, "792": [46, 69], "797": [41, 69], "7x7": 67, "8": [14, 18, 34, 37, 40, 46, 47, 48, 49, 50, 51, 54, 59, 60, 61, 70, 75, 76, 78, 89, 90, 91, 93, 98, 101, 103, 104, 114, 115, 116, 127, 128, 129, 130, 142, 145, 146, 148, 150, 151, 152, 155, 156, 157, 158, 161, 163, 165, 168, 172, 173, 175, 176, 179, 180, 181, 183, 184, 186, 187, 195, 196, 197, 198, 199, 200, 208, 211, 218, 219, 220, 221, 225, 226, 228, 229, 245, 249, 257, 260, 261, 262, 279, 280, 281, 282, 283, 285, 287], "80": 5, "8005": 166, "808": [37, 69], "817": [24, 69], "818": 69, "8182": 154, "82": 101, "821": [54, 69], "83": [50, 69], "833": 69, "84": [30, 32, 33], "840": [21, 69], "8413": [81, 142], "847": [28, 69], "848": [54, 64, 69], "8584": 145, "86": 69, "863": [63, 69], "864": [39, 69], "868": [56, 69], "872": [53, 69], "876": [135, 136, 139, 140, 214], "88": [49, 69], "8808": [87, 146, 147], "886": [43, 69], "887": 226, "891773": 210, "89442719": 11, "895": [60, 69], "9": [0, 1, 3, 5, 18, 69, 90, 93, 101, 103, 114, 150, 151, 152, 157, 161, 163, 165, 172, 173, 175, 179, 183, 184, 186, 192, 193, 195, 196, 197, 198, 199, 200, 202, 208, 211, 214, 217, 221, 225, 226, 227, 229, 255, 256, 279, 280, 281, 282, 283, 285], "904": [51, 69], "90709145": 213, "9091": 154, "9120": 169, "9163": 169, "94": 35, "9486833": 17, "949e": [230, 231], "9526": 86, "9545": 142, "958": [56, 69], "96366276": 210, "9640": 148, "96402758": 259, "973": [44, 69], "978": 69, "984": [25, 69], "99": 200, "9957": 169, "99734545": 213, "999": [0, 195, 196, 197, 198, 199], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 103, 104, 105, 109, 110, 112, 113, 125, 131, 154, 155, 156, 157, 158, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285], "As": 213, "Be": 0, "By": [0, 2, 3, 7, 35, 36, 37, 38, 39, 40, 41, 42, 73, 126, 189, 199, 205, 210, 211, 212, 214, 279, 289], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 78, 80, 81, 83, 84, 85, 86, 88, 101, 103, 125, 135, 136, 139, 140, 145, 150, 151, 152, 161, 163, 171, 172, 173, 174, 175, 176, 189, 191, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 253, 255, 257, 260, 261, 262, 269, 271, 273, 275, 276, 289], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 70, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 98, 101, 103, 110, 112, 115, 116, 125, 126, 127, 128, 129, 131, 135, 136, 150, 151, 152, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 195, 196, 200, 201, 207, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 287], "In": [3, 7, 16, 89, 90, 91, 166, 169, 204, 205, 206, 278, 289], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 55, 62, 69, 72, 74, 75, 76, 77, 78, 98, 101, 125, 126, 127, 128, 129, 130, 142, 144, 148, 161, 162, 165, 166, 167, 168, 169, 179, 180, 181, 189, 190, 191, 192, 198, 200, 201, 202, 205, 213, 217, 218, 219, 222, 223, 224, 226, 227, 248, 250, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279], "Its": [18, 215], "Near": 16, "No": 93, "Not": 162, "One": [31, 289], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "There": 272, "These": [4, 7, 8, 11, 14, 17, 19, 43, 44, 59, 60, 61, 69, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 201, 208, 215, 289], "To": [3, 69, 191, 212, 215, 230, 231, 268, 289], "With": [3, 93, 279, 289], "_": [14, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 88, 103, 125, 172, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 192, 193, 195, 196, 197, 198, 200, 202, 219, 220, 221, 225, 260, 261, 280, 281, 282, 284, 285, 286], "_1": [11, 74, 75, 76, 77, 78, 101, 161, 225, 264, 266, 277], "_2": [11, 74, 75, 76, 77, 78, 101, 161, 225, 264, 266, 277], "__call__": [1, 72], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 62, 67, 70, 71, 72, 73, 74, 75, 76, 77, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 216, 278, 279], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 190, "__setattr__": 72, "_activ": 87, "_arraylik": [208, 229, 231, 234, 236], "_arraylikeint": 269, "_arrayorscalar": [71, 73, 208, 216, 263], "_base_dtyp": [228, 230, 233, 235], "_c": 281, "_decai": 198, "_fanmod": [135, 136], "_grad_en": [204, 206], "_i": [11, 15, 87, 101, 147, 168, 171, 177, 182, 185, 219, 220, 222, 223, 225, 226, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 271, 273, 276, 277], "_in": [135, 136, 139, 140], "_j": [87, 147, 182, 185, 225, 249, 257, 261, 262], "_k": 274, "_left": 125, "_make_lay": 62, "_modul": 72, "_n": [11, 74, 75, 76, 77, 78, 264, 266, 277], "_numpyarrai": 208, "_out": [135, 136, 139, 140, 271, 275], "_p": 15, "_pad": 269, "_paddingstr": [127, 128, 129, 150, 151, 152], "_paramet": 72, "_reductiontyp": [104, 105, 106, 108, 109, 165, 166, 167, 168, 169], "_right": 125, "_scalar": [133, 137, 138, 139, 140, 208, 228, 242], "_seresnetbottleneck": [53, 54, 57], "_seresnetmodul": [55, 56], "_shapelik": [70, 113, 177, 208, 211, 233, 235, 272, 273, 276], "_size": [114, 115, 116], "_skresnetmodul": [59, 60, 61], "_slope": 143, "_statedict": 190, "_t": [199, 200], "_tensor": [71, 73, 229, 263], "_tensorop": 216, "_u": 16, "_v": 16, "_valu": [242, 269], "_width": 269, "a_i": [222, 223, 226], "aaai": 69, "ab": 237, "abc": [2, 190], "abil": [7, 69, 289], "about": [7, 70], "abov": [7, 204, 206, 213, 229, 232], "absolut": [14, 15, 106, 197, 238], "abstract": [2, 3, 189, 190, 191, 192, 200, 202], "abstractmethod": 190, "acceler": [69, 145, 171, 172, 173, 192, 198, 200, 202], "accept": [162, 210, 216], "access": [0, 2, 3, 4, 5, 46, 47, 48, 49, 50, 51, 71, 73, 74, 75, 76, 77, 78, 272], "accord": [125, 150, 151, 152, 161, 163, 166, 169, 193, 194, 195, 196, 197, 198, 199, 261], "accordingli": 10, "account": [14, 16, 17], "accumul": [192, 193, 194, 217, 218, 222, 223, 224, 227], "accur": 54, "accuraci": [57, 69], "achiev": [45, 46, 47, 48, 49, 50, 51, 69, 89, 90, 91, 114, 179, 180, 181, 198, 284, 286], "across": [0, 71, 75, 78, 113, 114, 115, 116, 139, 140, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 208, 210, 211, 212, 213, 214, 215, 230, 231, 249, 262], "act": 196, "activ": [7, 20, 35, 39, 40, 52, 62, 67, 69, 74, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 165, 166, 169, 171, 172, 173, 177, 248, 250], "actual": [73, 165, 166, 168, 169, 216, 282], "ad": [34, 72, 74, 75, 76, 77, 78, 89, 90, 91, 101, 103, 104, 105, 110, 112, 113, 117, 118, 119, 121, 122, 123, 127, 128, 129, 150, 151, 152, 165, 166, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 207, 276, 289], "adadelta": 203, "adagrad": [193, 203], "adam": [196, 197, 198, 199, 203], "adamax": 203, "adamw": 203, "adapt": [20, 22, 30, 53, 55, 58, 59, 60, 61, 62, 67, 69, 114, 115, 116, 130, 131, 179, 180, 181, 193, 194, 195, 198, 199, 200, 201], "adaptive_avg_pool1d": [100, 120, 179], "adaptive_avg_pool2d": [100, 120, 180], "adaptive_avg_pool3d": [100, 120, 181], "adaptiveavgpool1d": [160, 188], "adaptiveavgpool2d": [20, 52, 62, 67, 160, 188], "adaptiveavgpool3d": [160, 188], "add": [4, 72, 74, 75, 78, 101, 103, 150, 151, 152, 161, 163, 177, 190, 192, 195, 200, 202, 205, 237, 269, 276], "add_modul": [72, 78], "add_param_group": 190, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 72, 75, 78, 101, 103, 110, 112, 161, 163, 171, 172, 173, 174, 175, 176, 192, 198, 205, 215, 217, 274], "addition": 198, "address": [166, 169, 195, 196, 199], "adjust": [27, 58, 114, 115, 116, 131, 154, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 191, 195, 199, 200, 201, 266, 277], "advanc": [3, 16, 39, 69, 75, 78, 89, 90, 91, 114, 115, 116, 179, 180, 181, 189, 192], "advantag": [28, 206], "affect": [204, 270, 273, 278], "affin": [127, 128, 129, 171, 172, 173, 174, 175, 176, 177, 285], "after": [14, 20, 67, 73, 74, 75, 76, 77, 78, 98, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 196, 206, 216, 217, 218, 222, 223, 224, 226, 227, 269, 279], "afterward": 206, "aggreg": [69, 131, 225, 271, 275], "aim": [4, 7], "al": [23, 69], "alex": 69, "alexnet": [29, 67, 69], "algebra": [7, 8, 232], "algorithm": [7, 14, 16, 17, 190, 191, 215], "align": [18, 125, 220, 221], "align_corn": 125, "all": [0, 3, 4, 7, 17, 72, 74, 75, 76, 77, 78, 90, 91, 114, 115, 116, 118, 119, 122, 123, 125, 128, 129, 131, 143, 144, 152, 179, 180, 181, 183, 184, 187, 189, 190, 191, 192, 195, 200, 201, 202, 226, 248, 249, 250, 257, 260, 262, 264, 265, 266, 271, 273, 274, 275, 277, 280, 281, 289], "allevi": [69, 80], "alloc": [230, 231], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 34, 45, 58, 69, 73, 74, 75, 76, 77, 78, 80, 83, 84, 87, 91, 93, 126, 131, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 189, 193, 194, 205, 228, 233, 235, 236, 261, 263, 268, 278, 279, 289], "along": [87, 125, 131, 147, 220, 221, 225, 248, 249, 250, 257, 260, 262, 264, 266, 268, 271, 274, 275, 276, 277, 284, 286], "alongsid": 71, "alpha": [80, 83, 85, 94, 141, 145, 154, 192, 200], "alpha_dropout": [99, 100, 154], "alphadropout": [159, 160], "alphadropoutmodel": 154, "alreadi": 207, "also": [70, 80, 81, 83, 84, 85, 86, 88, 101, 103, 125, 198, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277], "alter": [78, 272], "altern": [1, 142, 193, 221], "alwai": [73, 270, 283, 284, 286], "among": [24, 131], "amount": [89, 90, 91, 117, 118, 119, 121, 122, 123, 198], "amsgrad": [195, 196], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 115, 116, 125, 126, 131, 139, 140, 141, 146, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 198, 200, 206, 207, 208, 216, 221, 229, 232, 242, 249, 257, 262, 264, 271, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "analog": [271, 275], "analysi": [4, 130, 150, 151, 152, 176, 182, 184, 185, 187], "andrew": 69, "angl": [126, 285], "ani": [0, 1, 2, 3, 14, 16, 21, 34, 58, 68, 71, 72, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 88, 94, 95, 101, 103, 110, 112, 146, 177, 189, 190, 204, 206, 207, 213, 216, 228, 229, 230, 232, 233, 234, 235, 236, 248, 250, 261, 263, 264, 265, 266, 269, 271, 274, 275, 276, 277, 278, 289], "anoth": [77, 227, 234, 236, 279, 289], "api": [4, 179, 180, 181, 289], "appear": 190, "append": [75, 77, 78], "appli": [2, 4, 5, 7, 14, 20, 45, 58, 67, 69, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 127, 128, 129, 130, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 196, 197, 198, 199, 221, 269, 271, 278, 281, 283, 284, 285, 286, 287, 289], "applic": [4, 16, 27, 28, 89, 112, 150, 151, 152, 161, 163, 215, 228, 235, 269, 287], "approach": [3, 26, 78, 196], "appropri": [16, 69, 72, 76, 78, 150, 151, 152, 154, 155, 156, 166, 183, 184, 204, 206], "approx": 85, "approxim": [16, 81, 142, 183, 186], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 69, 71, 72, 73, 74, 75, 76, 77, 78, 87, 89, 90, 91, 93, 101, 103, 115, 116, 125, 130, 131, 135, 136, 138, 139, 140, 147, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 238, 242, 246, 248, 249, 250, 251, 252, 257, 260, 261, 264, 268, 271, 272, 275, 278, 279, 280, 282, 283, 287, 289], "arang": 237, "arbitrari": [75, 162, 230, 231, 242, 247, 249, 253, 255, 257, 261, 262], "arcco": 237, "arch": 207, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 74, 75, 76, 77, 78, 81, 130, 144, 161, 162, 189, 207], "arcsin": 237, "arctan": 237, "area": 125, "arg": [72, 162, 207, 230], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 72, 78, 162, 210, 230, 261], "around": [11, 126, 148], "arr": [208, 264, 266, 274, 277], "arrai": [7, 71, 73, 205, 208, 216, 221, 229, 234, 236, 263, 270, 271, 279, 289], "art": 69, "artifici": 69, "arxiv": 69, "asarrai": 208, "asgd": 203, "aspect": 287, "assign": [72, 74, 76, 78, 125, 166, 169], "assist": [22, 23, 24], "associ": [76, 77], "assum": [0, 1, 190, 191, 204], "attempt": [74, 78], "attent": [58, 77, 101, 130], "attribut": 72, "audio": 150, "augment": [3, 4, 55, 126, 215, 271, 275, 278, 282, 283, 284, 285, 286, 289], "autodiff": 7, "autograd": 189, "automat": [4, 7, 73, 74, 75, 76, 77, 189, 210, 211, 212, 214, 216, 230, 231, 236, 268, 279], "auxiliari": [22, 23, 24, 71], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 45, 52, 58, 62, 67, 71, 114, 115, 116, 117, 118, 119, 125, 130, 131, 168, 179, 180, 181, 182, 183, 184, 192, 193, 195, 200, 249], "avg_down": 34, "avg_pool": [182, 183, 184], "avg_pool1d": [100, 120], "avg_pool2d": [100, 120], "avg_pool3d": [100, 120], "avgpool": [20, 52, 62, 67, 131], "avgpool1d": [160, 188], "avgpool1dmodel": 182, "avgpool2d": [160, 188], "avgpool2dmodel": 183, "avgpool3d": [160, 188], "avgpool3dmodel": 184, "avoid": [2, 3, 16, 76, 206], "ax": [8, 205, 248, 249, 250, 257, 261, 262, 271, 273, 275], "axi": [87, 147, 220, 221, 248, 249, 250, 257, 262, 264, 266, 268, 269, 271, 273, 274, 275, 276, 277, 284, 286], "b": [8, 18, 101, 103, 138, 150, 151, 152, 161, 163, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 264, 266, 274, 277, 283], "b_i": [222, 223, 226], "back": [125, 183, 184, 207, 220, 225, 271, 275], "backbon": [59, 60, 61], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 206, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 246, 248, 250, 263, 269, 271, 275, 279], "backward": [7, 71, 73, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 216, 279], "balanc": [46, 47, 48, 49, 50, 51, 167], "bar": 192, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 45, 46, 47, 48, 49, 50, 51, 58, 62, 69, 72, 74, 75, 76, 77, 93, 101, 114, 115, 116, 131, 154, 166, 167, 179, 180, 181, 189, 190, 191, 192, 196, 200, 201, 202, 217, 218, 222, 223, 224, 226, 227, 236, 246, 247, 248, 250, 261, 268, 269, 282, 283, 284, 285, 286], "base_width": [43, 44, 45, 58], "basic": [7, 20, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 67, 70, 89, 90, 91, 114, 115, 116, 127, 128, 129, 130, 135, 136, 139, 140, 179, 180, 181, 280, 281, 282, 283, 284, 285, 286, 287], "basicblock": [34, 38, 41], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 52, 89, 90, 91, 93, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 150, 151, 152, 161, 163, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 199, 221, 280, 281, 282, 283, 285, 287], "batch_norm": [100, 111, 171, 172, 173], "batch_norm1": 78, "batch_norm2": 78, "batch_siz": [1, 2, 3, 131], "batchnorm": [127, 128, 129], "batchnorm1d": [127, 160, 178], "batchnorm1dmodel": 171, "batchnorm2d": [78, 128, 160, 178], "batchnorm2dmodel": 172, "batchnorm3d": [129, 160, 178], "batchnorm3dmodel": 173, "bceloss": [160, 170], "becaus": [2, 211], "becom": [15, 72, 193, 201], "befor": [14, 52, 70, 73, 192, 198, 206, 213, 269, 281, 289], "begin": [1, 15, 80, 83, 84, 85, 141, 143, 144, 145, 167, 168, 169, 182, 183, 184, 185, 186, 187, 199, 201, 205, 215, 222, 223, 225, 238, 242, 248, 250, 252, 269], "behav": [167, 260], "behavior": [69, 75, 78, 204, 215, 221, 231, 289], "being": [77, 126, 154, 155, 156, 157, 158, 199, 204, 206, 264, 266, 277], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 221, 229, 232], "benchmark": 5, "benefici": 78, "benefit": [80, 189, 198, 208], "bernoulli": [154, 155, 156, 157, 158], "best": [135, 136, 139, 140], "beta": [171, 172, 173, 174, 175, 176, 177, 195, 196, 197, 198, 199], "beta1": [195, 196, 197, 198, 199], "beta2": [195, 196, 197, 198, 199], "beta_1": [195, 196, 197, 198, 199], "beta_2": [195, 196, 197, 198, 199], "better": [13, 67, 69, 81, 135, 136, 139, 140, 174, 175, 176, 189, 196, 198, 200, 281], "between": [46, 47, 48, 49, 50, 51, 72, 89, 90, 91, 93, 101, 106, 127, 128, 129, 131, 150, 151, 152, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 169, 192, 200, 201, 202, 215, 217, 218, 221, 224, 227, 228, 262, 283, 284, 286, 287], "beyond": [7, 75], "bia": [89, 90, 91, 101, 103, 110, 112, 113, 127, 128, 129, 150, 151, 152, 161, 163, 171, 172, 173, 174, 175, 176, 177, 195, 196, 197, 198, 199], "bias": [150, 151, 152, 163, 177, 189], "bias1": 76, "bias2": 76, "bilinear": [100, 102, 125, 160, 164], "bilinearmodel": 161, "binari": [86, 104, 146, 154, 155, 156, 157, 158, 165], "binary_cross_entropi": [100, 107], "block": [26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 72, 93, 127, 128, 129, 131, 150, 151, 152, 206], "block1": [70, 189], "block2": [70, 189], "block_arg": 34, "blue": 283, "bmatrix": 225, "bn": [127, 128, 129], "bn_affin": [127, 128, 129], "bool": [1, 5, 19, 22, 23, 24, 34, 70, 72, 73, 94, 95, 96, 97, 98, 110, 112, 125, 127, 128, 129, 150, 151, 152, 161, 163, 171, 172, 173, 174, 175, 176, 177, 195, 196, 200, 204, 210, 211, 212, 214, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 250, 257, 262, 263, 279], "both": [89, 103, 115, 117, 121, 127, 142, 150, 151, 180, 182, 183, 185, 186, 219, 220, 221, 225, 229, 268, 287], "bottleneck": [34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 130], "bottom": 125, "bound": [136, 138, 140, 201, 214], "box": 4, "branch": [22, 23, 24, 69, 131], "break": 189, "brief": 289, "bright": 289, "broadcast": [157, 158, 249, 257, 262, 272, 276], "buffer": [192, 198, 200, 202], "build": [7, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 58, 59, 60, 61, 69, 72, 75, 78, 189, 289], "built": [3, 7, 35, 39, 40, 78, 189], "burg": 5, "c": [5, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 93, 96, 97, 98, 105, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 130, 157, 158, 166, 169, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 205, 266, 277, 281], "c_": [150, 151, 152], "c_in": [89, 90, 91, 127, 128, 129], "c_out": [89, 90, 91], "calcul": [0, 1, 7, 8, 73, 193, 194, 197, 198, 199, 206, 211, 216], "calculu": [9, 16], "call": [1, 72, 204, 207, 217, 218, 221, 222, 223, 224, 226, 227], "callabl": [190, 207, 278], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 34, 43, 44, 70, 71, 73, 74, 75, 76, 77, 78, 83, 89, 90, 91, 126, 131, 142, 143, 148, 150, 151, 152, 174, 175, 176, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 214, 215, 216, 221, 230, 231, 232, 233, 235, 236, 249, 257, 262, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 282, 284, 285, 286, 289], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 228, 229, 232, 233, 234, 235, 236], "capac": [43, 44, 45, 46, 47, 48, 49, 50, 51, 69], "captur": [58, 69, 93, 150, 151, 152, 161], "cardin": [45, 46, 47, 48, 49, 50, 51, 58, 69], "care": 206, "cartesian": 268, "case": [3, 15, 30, 80, 83, 84, 85, 141, 143, 144, 145, 167, 168, 169, 182, 183, 184, 185, 186, 187, 189, 194, 199, 201, 205, 222, 223, 238, 242, 248, 250, 252, 269, 289], "categori": [35, 36, 37, 38, 39, 40, 41, 42], "caus": [3, 16, 192, 200, 202], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 80, 81, 83, 85, 86, 89, 90, 91, 101, 103, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 130, 139, 140, 142, 146, 154, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 201, 219, 220, 221, 224, 226], "center": [126, 148, 200, 280, 289], "centercrop": [288, 289], "central": 208, "certain": [10, 81, 101, 161, 195, 196, 204, 248, 250], "chain": [13, 14, 78, 278, 289], "challeng": 69, "cham": 69, "chanc": [283, 284, 286], "chang": [106, 167, 201, 205, 206, 207, 270, 272, 276, 283, 289], "channel": [30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 51, 56, 62, 69, 89, 90, 91, 93, 96, 97, 98, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 157, 158, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 281, 283, 287], "character": [43, 44], "check": [204, 280, 282], "checkpoint": 191, "choic": 268, "choleski": 12, "choos": 69, "chosen": 154, "christian": 69, "christoph": 5, "clariti": 208, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 87, 105, 109, 189, 191, 207, 229, 232, 263, 289], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 86, 87, 104, 105, 109, 146, 147, 165, 166, 169], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 34, 45, 58, 62, 67], "cleaner": [1, 206, 221], "clear": [73, 216, 230, 231], "clearli": 208, "clf_in_featur": 30, "clf_layer": 30, "clip": [126, 201, 237], "clockwis": 126, "close": [13, 16, 145, 165, 200], "closer": 141, "closur": [190, 191], "cnn": 69, "co": [237, 253], "code": [14, 74, 76, 78, 204, 206, 208, 215], "coeffici": [18, 125, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "col": 93, "collect": [4, 8, 69, 74, 75, 77, 78, 191], "color": [283, 289], "colorjitt": 289, "column": [10, 11, 13, 17, 18, 19, 70, 93, 232, 266, 268], "com": 5, "combin": [1, 3, 25, 26, 27, 69, 75, 78, 80, 81, 127, 128, 129, 130, 131, 142, 166, 189, 198, 199, 249, 257, 262, 264, 289], "combined_dataset": [0, 1], "common": [93, 126, 191, 289], "commonli": [7, 81, 86, 87, 88, 89, 91, 101, 108, 110, 112, 126, 130, 139, 140, 147, 152, 165, 168, 169, 182, 183, 184, 185, 186, 187, 205, 208, 233, 273, 279, 280, 281, 282, 284, 285, 286, 289], "compar": [43, 44, 67, 215, 274], "compat": [4, 8, 58, 162, 177, 189, 205, 215, 279, 289], "complex": [2, 3, 7, 11, 28, 34, 37, 40, 41, 54, 56, 70, 74, 75, 78, 84, 144, 185, 187, 189, 191, 289], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 72, 75, 191, 216, 289], "compos": [5, 150, 151, 152, 182, 183, 184, 185, 186, 187, 189, 289], "comprehens": 3, "compris": [43, 44], "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 46, 47, 48, 49, 50, 51, 52, 69, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 101, 103, 104, 105, 106, 108, 109, 110, 112, 114, 115, 116, 125, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 200, 204, 205, 206, 208, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 269, 271, 275, 279, 289], "computation": [3, 16, 35], "compute_loss": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "concaten": [0, 89, 90, 91, 266, 267, 274, 277], "concept": [7, 16, 69], "condit": [9, 10, 13], "confer": 69, "config": 62, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 77, 127, 128, 129], "conjunct": [93, 169], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 67, 69, 103, 130, 131, 150, 151, 152, 163], "consecut": 62, "consid": [3, 13, 16, 78, 135, 136, 139, 140, 189, 201, 204, 230, 231, 289], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 34, 71, 114, 115, 116, 131, 179, 180, 181, 208, 213, 215, 269, 280, 287, 289], "consistent_tensor": 215, "consol": 70, "constant": [104, 105, 110, 112, 113, 134, 145, 165, 166, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200, 208, 269], "constant_pad": 269, "constraint": [1, 131], "construct": [7, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 75, 189, 229, 271, 275], "constructor": [43, 44, 63, 64, 65, 66], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 45, 46, 47, 48, 49, 50, 51, 52, 58, 62, 70, 72, 74, 75, 76, 77, 78, 87, 93, 101, 103, 104, 105, 109, 125, 165, 166, 169, 190, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 231, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 268], "content": 126, "context": [204, 206], "contextmanag": 206, "contigu": 270, "continu": [143, 212], "contrast": [174, 175, 176, 289], "contribut": [125, 154, 155, 156, 157, 158, 182, 185, 186, 187, 192, 198, 260], "control": [45, 131, 141, 167, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 215, 279, 289], "conv": [26, 52, 127, 128, 129, 172, 173], "conv1": [31, 32, 33, 78, 150, 151, 152, 182, 183, 184, 185, 186, 187], "conv1d": [92, 100, 127, 153, 160, 182, 185], "conv1dmodel": 150, "conv2": [31, 32, 33, 78, 150, 151, 152], "conv2d": [75, 78, 92, 100, 128, 153, 160, 172, 183, 186, 189], "conv2dmodel": 151, "conv3d": [92, 100, 129, 153, 160, 173, 184, 187], "conv3dmodel": 152, "conv_bia": [127, 128, 129], "conv_config": 62, "conv_lay": [30, 75], "convblock": 189, "convbnrelu1d": 132, "convbnrelu2d": 132, "convbnrelu3d": 132, "conveni": [4, 21, 68], "convent": 221, "converg": [16, 148, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 281], "convers": [166, 169, 283, 289], "convert": [5, 62, 71, 73, 87, 147, 216, 268, 278, 279, 283, 289], "convnetwork": 75, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 51, 52, 58, 62, 67, 68, 69, 75, 89, 90, 91, 93, 127, 128, 129, 130, 131, 150, 151, 152, 183, 184, 186, 187, 269], "convolv": [89, 90, 91, 150, 151, 152], "coordin": 268, "core": [0, 1, 2, 3, 72, 189, 190, 216, 289], "corinna": 5, "corner": [125, 280, 282], "correct": [74, 166, 169, 195, 196, 197, 198, 199, 279], "correctli": [16, 72, 74, 75, 76, 77, 78, 166, 169, 215], "correspond": [0, 1, 2, 5, 11, 43, 44, 59, 60, 61, 74, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 103, 125, 144, 147, 161, 163, 171, 172, 173, 174, 175, 176, 183, 184, 192, 200, 202, 219, 220, 222, 223, 226, 246, 247, 253, 255, 266, 269, 271, 275, 277], "cort": 5, "cosh": [237, 254, 259], "cosin": [239, 243, 244, 253], "cost": [45, 69], "could": 72, "count": [69, 70, 264], "counterclockwis": [126, 285], "cover": [8, 89, 90, 91], "coverag": [114, 115, 116], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 131, 189, 205, 207, 215, 228, 232, 233, 234, 235, 236, 268, 274, 278, 289], "creation": [75, 78, 289], "criterion": [165, 166, 167, 168, 169], "critic": [16, 191, 215], "crop": [280, 282, 289], "cross": [104, 105, 165, 166], "cross_entropi": [100, 107], "crossentropyloss": [160, 170], "cube": 237, "cumul": [81, 142], "current": [72, 192, 195, 201, 204], "custom": [4, 7, 20, 21, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 55, 56, 57, 62, 67, 68, 71, 74, 75, 76, 77, 78, 126, 127, 128, 129, 141, 143, 189, 215, 232], "custom_config": 62, "custom_lenet": 30, "customiz": 289, "custommodul": 71, "customnetwork": 74, "customparametermodel": [76, 77], "cvpr": 69, "d": [69, 91, 98, 116, 119, 123, 129, 173, 176, 177, 181, 184, 187, 205, 229, 285], "d_": [91, 116, 119, 123, 152, 181, 184, 187], "d_1": 177, "d_2": 177, "d_n": 177, "d_out": [91, 119, 123], "dampen": [192, 200, 202], "data": [4, 5, 7, 14, 71, 73, 77, 88, 89, 91, 93, 97, 98, 103, 126, 127, 128, 129, 131, 144, 148, 150, 151, 152, 163, 176, 182, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 215, 216, 217, 218, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 269, 270, 271, 272, 273, 275, 278, 279, 282, 283, 284, 285, 286, 289], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 126, 194, 206, 278, 280, 289], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 225, "debug": [70, 78, 204, 213, 289], "decai": [192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": [46, 47, 48, 49, 50, 51, 207], "decoupl": [193, 194, 196, 197, 198, 199], "decreas": [195, 196, 201], "deep": [1, 3, 4, 7, 26, 34, 35, 36, 37, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 57, 69, 110, 142, 145, 189, 215, 278, 279, 289], "deeper": [7, 23, 25, 28, 34, 41, 69, 145], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 87, 89, 90, 91, 94, 95, 96, 97, 98, 104, 105, 106, 108, 109, 110, 112, 113, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 143, 147, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 190, 191, 198, 204, 210, 211, 212, 214, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 250, 257, 261, 262, 263, 264, 266, 268, 269, 271, 274, 277, 279, 283, 284, 286], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 52, 59, 60, 61, 62, 74, 75, 76, 77, 78, 142, 165, 166, 167, 168, 169, 182, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 211, 212, 226, 231, 242, 261, 278, 289], "definit": [7, 9, 127, 128, 129, 289], "degre": [126, 285, 289], "delai": 192, "delta": [87, 106, 147, 167, 193], "delta_": [87, 147], "demonstr": [7, 8, 69, 189, 208], "denomin": [110, 112, 113, 127, 128, 129, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200, 218], "denot": [14, 146, 150, 151, 152, 154, 155, 156, 157, 158, 261], "dens": [7, 194], "dense1": 7, "dense2": 7, "densenet": 130, "densiti": [81, 142], "depend": [7, 14, 15, 77, 104, 105, 106, 108, 109, 125, 150, 219, 229, 248, 250, 271, 275, 282, 283, 287], "depth": [75, 91, 98, 116, 119, 123, 152, 173, 176, 181, 184, 187], "depthwis": [89, 90, 91], "deriv": [16, 17, 87, 114, 115, 116, 142, 147, 148, 150, 151, 152, 161, 163, 207], "descend": 19, "descent": [7, 192, 202], "describ": [10, 11], "descript": 289, "deseri": 71, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 53, 56, 68, 69, 73, 75, 76, 77, 78, 80, 85, 145, 154, 189, 208, 289], "desir": [71, 114, 115, 116, 179, 180, 181, 261, 263], "destin": 72, "det": [8, 12], "det_a": 10, "detail": [7, 70, 191, 215, 221], "detect": 69, "determin": [0, 7, 8, 9, 10, 30, 43, 44, 114, 115, 116, 135, 136, 139, 140, 150, 151, 152, 179, 180, 181, 183, 184, 186, 187, 200, 204, 210, 211, 212, 214, 230, 231, 280, 282], "determinist": 126, "develop": [7, 189, 215, 289], "deviat": [135, 137, 139, 278, 281, 289], "diag": [16, 237], "diagon": [16, 17, 19, 229, 232, 260], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 34, 43, 44, 46, 47, 48, 49, 50, 51, 59, 60, 61, 68, 72, 74, 76, 162, 190], "dictionari": [30, 72, 73, 74, 76, 78, 190], "differ": [0, 14, 22, 30, 75, 78, 87, 101, 125, 131, 147, 161, 168, 191, 205, 213, 215, 227, 236, 262, 273, 289], "differenti": [7, 9, 18, 142, 189, 210, 211, 212, 214, 216, 228, 230, 231, 233, 235], "digit": [5, 33, 69], "dilat": [89, 90, 91, 127, 128, 129, 150, 151, 152], "dilation_height": 93, "dilation_width": 93, "dim": [166, 169], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 34, 45, 58, 62, 67, 69, 73, 87, 101, 103, 110, 112, 113, 115, 116, 125, 130, 131, 147, 150, 151, 152, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 205, 208, 210, 214, 216, 220, 230, 248, 249, 250, 257, 260, 261, 262, 264, 266, 269, 271, 273, 274, 275, 276, 277, 280, 282, 287], "dimension": [14, 16, 17, 19, 89, 90, 91, 117, 118, 119, 121, 122, 123, 131, 150, 151, 152, 156, 157, 158, 171, 172, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 205, 220, 221, 225, 229, 246, 249, 257, 260, 262, 265, 270, 271, 273, 275], "diminish": 194, "direct": [11, 165, 166, 167, 168, 169, 192, 200, 201, 202], "directli": [74, 75, 76, 77, 125, 193, 194, 196, 197, 198, 199, 213, 215, 263, 289], "directori": [3, 4, 5], "disabl": [204, 206], "discontinu": 252, "discrep": [165, 166, 169], "discret": [211, 215], "disk": 3, "displai": [21, 68, 70], "distribut": [81, 87, 125, 135, 136, 137, 138, 139, 140, 142, 147, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 166, 169, 182, 183, 184, 210, 211, 212, 214, 215, 249, 257, 260, 262, 274, 281, 283, 284, 285, 286], "div": 237, "divers": [126, 284, 286, 289], "diversifi": 289, "divid": [1, 16, 75, 78, 87, 89, 90, 91, 147, 165, 166, 167, 168, 169, 218, 281], "divis": [7, 16, 89, 90, 91, 154, 155, 156, 157, 158, 193, 194, 195, 196, 197, 198, 199, 200, 218], "do": [16, 18, 71, 74, 75, 76, 77, 94, 95, 96, 97, 189, 199, 204, 236, 260, 269], "document": [4, 7, 69, 191, 208, 215], "doe": [7, 14, 15, 16, 17, 19, 70, 71, 74, 75, 76, 77, 78, 140, 195, 196, 201, 204, 206, 210, 211, 212, 213, 214, 228, 229, 230, 231, 232, 233, 234, 235, 236, 272], "doesn": 206, "doi": 69, "domain": 4, "don": 206, "dot": [11, 14, 74, 75, 76, 77, 78, 177, 185, 186, 187, 220, 225, 237, 264, 266, 274, 277], "down": [3, 189, 287], "download": [4, 5], "drawback": 80, "drawn": [210, 211, 212, 214, 215, 285], "drop": [154, 155, 156, 157, 158], "dropout": [20, 24, 62, 67, 69, 81, 94, 96, 97, 98, 154, 156, 157, 158], "dropout1d": [99, 100, 159, 160], "dropout1dmodel": 156, "dropout2d": [99, 100, 159, 160], "dropout3d": [99, 100, 159, 160], "dropout_prob": 24, "dropoutmodel": 155, "dtype": [71, 73, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 279], "due": [14, 16, 89, 90, 144, 285], "dummi": 70, "duplic": [74, 76], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 34, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 98, 110, 112, 126, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 216, 217, 248, 249, 250, 257, 262, 279, 282, 285, 289], "dy": [83, 143], "dynam": [0, 2, 3, 58, 69, 72, 75, 76, 77, 78, 114, 115, 116, 131, 177, 179, 180, 181, 194, 199, 204], "dynamicnetwork": 75, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 62, 71, 87, 131, 146, 147, 154, 166, 190, 193, 200, 201, 232, 244, 246, 247, 254, 259, 260, 264, 283], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 67, 69, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 103, 110, 112, 114, 115, 116, 130, 131, 144, 147, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 268, 269, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289], "earli": 199, "eas": [4, 7], "easi": [2, 3, 4, 7, 46, 47, 48, 49, 50, 51, 73, 74, 76], "easier": [3, 74, 75, 78], "easili": [4, 73, 77, 289], "eccv": 69, "economi": 19, "edg": 269, "educ": [7, 69], "effect": [69, 74, 75, 76, 77, 78, 87, 89, 90, 91, 93, 141, 142, 144, 146, 147, 148, 171, 172, 173, 174, 175, 176, 177, 204, 205, 206, 266, 277], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 45, 46, 47, 48, 49, 50, 51, 69, 93, 166, 189, 206], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [103, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 263, 268], "element": [0, 16, 17, 24, 73, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 127, 128, 129, 130, 144, 147, 150, 151, 152, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 177, 182, 183, 184, 185, 186, 187, 205, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 268, 269, 271, 272, 273, 275], "elementwise_affin": 177, "elsewher": [185, 186, 187, 232], "elu": [82, 100, 149, 160], "elumodel": 141, "empti": [72, 78, 237], "empty_lik": 237, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 58, 59, 60, 61, 69, 72, 73, 74, 75, 76, 77, 144, 150, 151, 152, 161, 163, 189, 191, 204, 206, 210, 211, 212, 214, 216, 278], "encapsul": [189, 216], "encod": [166, 169], "encourag": [155, 156, 157, 158, 165, 166, 169, 195], "end": [15, 80, 83, 84, 85, 141, 143, 144, 145, 167, 168, 169, 182, 183, 184, 185, 186, 187, 199, 201, 222, 223, 225, 228, 238, 242, 248, 250, 252, 264, 269, 289], "enforc": [72, 74, 76], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 43, 44, 67, 68, 69, 74, 76, 131, 289], "ensur": [3, 5, 16, 17, 18, 71, 72, 73, 74, 75, 76, 77, 78, 87, 114, 115, 116, 127, 128, 129, 143, 147, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 226, 249, 257, 262, 269, 279, 280, 281, 282, 283, 287, 289], "enter": 206, "entir": [3, 96, 97, 98, 157, 158, 215], "entri": [30, 273], "entropi": [104, 105, 165, 166], "environ": 7, "ep": [104, 105, 110, 112, 113, 127, 128, 129, 165, 166, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200], "epoch": [1, 3], "epsilon": [165, 166, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200], "equal": [14, 125, 182, 183, 184, 280, 282], "equat": [11, 16, 18], "equival": [221, 260, 270], "error": [0, 3, 11, 13, 72, 75, 76, 77, 78, 81, 106, 108, 142, 165, 166, 167, 168, 189, 190, 206, 208], "especi": [3, 74, 76, 77, 146, 205, 206, 208, 213, 278, 279, 283, 289], "essenti": [1, 3, 7, 8, 14, 16, 26, 90, 93, 189, 213, 215, 248, 278, 279, 283, 289], "estim": [168, 195, 196, 197, 198, 199, 200], "et": [23, 69], "eta": 201, "eta_": 201, "etc": [165, 279], "euclidean": 15, "european": 69, "evalu": [72, 110, 112, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 289], "even": [193, 206, 228, 229, 232, 233, 234, 235, 236], "evenli": [114, 115, 116, 179, 180, 181, 228], "everi": [1, 289], "everywher": 252, "exact": [72, 75, 261, 283, 285], "exactli": 78, "exampl": [4, 221], "excel": 25, "except": [0, 252, 264, 266, 277], "excit": [52, 55, 69, 130], "exclus": [211, 214, 228], "exdb": 5, "execut": [75, 206], "exist": [18, 74, 76, 78, 207, 264], "exit": 206, "exp": [80, 85, 86, 88, 141, 145, 237], "expand": [4, 93, 271, 275], "expect": [9, 75, 78, 154, 155, 156, 157, 158, 177, 189, 208], "expens": 3, "experi": [7, 213, 215, 289], "experiment": 215, "explan": [14, 16, 20, 62, 67, 114, 115, 116, 179, 180, 181, 192], "explicit": 78, "explicitli": [69, 74, 76], "explod": [145, 171, 172, 173], "explor": [189, 215], "expon": [14, 226], "exponenti": [80, 85, 87, 141, 145, 147, 154, 195, 196, 197, 198, 199, 246], "extend": [4, 45, 58], "extens": [69, 191], "extern": [4, 7], "extract": [22, 26, 34, 45, 58, 69, 93, 152, 182, 184, 207, 229, 248, 250, 280, 282], "extractor": [30, 31, 32, 33], "extrem": [16, 35, 69], "ey": 237, "f": [1, 4, 5, 7, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 147], "f_1": 130, "f_2": 130, "facilit": [22, 74, 78, 87, 147, 150, 151, 152, 189, 191, 281, 289], "factor": [24, 80, 89, 90, 91, 93, 130, 139, 140, 192, 199, 200, 201, 202, 208], "failur": [74, 75, 76, 77, 189], "fals": [1, 5, 19, 34, 70, 71, 72, 73, 94, 95, 96, 97, 98, 110, 112, 125, 133, 135, 136, 137, 138, 139, 140, 150, 151, 152, 161, 163, 195, 196, 200, 204, 210, 211, 212, 214, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 250, 257, 262, 263, 279], "famili": 207, "fan": [135, 136, 139, 140], "fan_in": [135, 136], "fan_out": [135, 136], "fast": 199, "faster": [194, 198, 206], "fc": [26, 34, 45, 52, 58, 75, 130, 151, 152, 182, 183, 184, 185, 186, 187], "fc1": [32, 33, 70, 74, 78, 142, 144, 145, 146, 148, 163], "fc2": [32, 33, 70, 74, 78, 142, 144, 145, 146, 148, 163], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 61, 62, 67, 68, 69, 101, 103, 110, 127, 128, 129, 130, 131, 152, 155, 156, 157, 158, 161, 163, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 194], "feature_extractor": 30, "fed": [3, 289], "feed": [3, 216, 289], "feedforward": 70, "fergu": [67, 69], "fetch": 0, "few": 70, "fewer": 1, "field": [5, 58, 69, 131], "file": [3, 207], "fill": [133, 137, 138, 210, 211, 212, 214, 233, 234, 235, 236], "filter": [67, 69, 89, 90, 91, 93, 127, 128, 129, 151, 152], "filter_height": 93, "filter_s": 93, "filter_width": 93, "final": [22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 74, 75, 76, 77, 78, 131, 278, 289], "find": [18, 248, 250], "fine": [130, 289], "finish": 206, "first": [5, 11, 30, 67, 70, 75, 76, 101, 130, 161, 195, 196, 197, 198, 199, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 268, 277, 278, 279, 289], "fit": 189, "fix": [75, 269], "flatten": [26, 30, 78, 93, 225, 267, 270, 271], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 34, 62, 69, 74, 75, 76, 77, 78, 189, 191, 208, 233, 234, 279, 289], "flip": [284, 286, 289], "float": [2, 5, 24, 71, 73, 80, 83, 94, 95, 96, 97, 98, 104, 105, 106, 110, 112, 113, 126, 127, 128, 129, 133, 137, 138, 139, 140, 141, 143, 154, 155, 156, 157, 158, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 214, 216, 228, 231, 242, 263, 281, 283, 284, 285, 286], "float32": [71, 73, 216, 228, 229, 232, 233, 235, 263, 279], "float64": [236, 263, 279], "flow": [25, 26, 52, 69, 78, 140, 142, 146, 148, 150, 151, 152, 161, 163, 204], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 62, 67, 70, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 248, 250, 268, 272, 280, 281, 282, 283, 284, 285, 286, 289], "form": [17, 131, 225, 268, 271, 275, 289], "format": [2, 3, 5, 70, 166, 169, 279], "formul": 81, "formula": [11, 19, 87, 114, 115, 116, 147, 167, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 221, 262, 283], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 67, 70, 71, 72, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "found": 7, "foundat": [26, 52, 72, 189, 191, 216], "four": 269, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 114, 115, 116, 117, 118, 119, 121, 122, 123, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281], "frame": 98, "framework": [4, 7, 69, 166, 169, 171, 172, 173, 174, 175, 176, 190, 191, 289], "frequent": [166, 169], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 93, 101, 110, 112, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 221, 222, 223, 227, 229, 248, 249, 250, 257, 262, 264, 266, 268, 271, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 289], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 67, 69, 103, 130, 131, 163, 215], "func": 207, "function": [3, 4, 5, 7, 8, 72, 74, 75, 76, 77, 78, 127, 128, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 189, 191, 208, 215, 278, 289], "fundament": [7, 103, 163, 279], "further": [7, 215, 249, 257, 262], "fuse": 58, "fusion": [59, 60, 61], "futur": 162, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 62, 130, 131, 154, 190, 193, 200, 264, 283], "g_": 194, "g_t": 200, "gain": [139, 140], "gamma": [171, 172, 173, 174, 175, 176, 177], "gap": [34, 45, 58, 130], "gaussian": [81, 142], "gelu": [82, 100, 149, 160], "gelunetwork": 142, "gener": [16, 70, 126, 154, 155, 156, 157, 158, 175, 196, 198, 199, 206, 210, 211, 212, 213, 214, 215, 220, 228, 230, 231, 268, 282, 283, 284, 286, 289], "get": 5, "give": [7, 192, 200], "given": [10, 11, 14, 16, 17, 19, 93, 165, 166, 169, 190, 204, 234, 236, 278, 283, 284, 286, 289], "global": [0, 34, 45, 52, 58, 130, 204, 206, 213, 215], "go": [23, 69], "goal": [165, 166, 169], "googlenet": [23, 69], "gpu": 69, "grad": [71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 101, 103, 125, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 190, 191, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 284, 286, 287], "grad_output": 14, "gradient": [7, 8, 25, 26, 69, 71, 73, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 210, 211, 212, 214, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 279], "grain": 130, "graph": [7, 140, 216, 228, 229, 232, 233, 234, 235, 236, 279], "grayscal": [5, 30, 31, 32, 33, 283, 289], "greater": 242, "green": 283, "grid": 268, "groundbreak": 69, "group": [45, 46, 47, 48, 49, 50, 51, 58, 69, 75, 89, 90, 91, 127, 128, 129, 131, 150, 151, 152, 190, 191], "group1": 75, "group2": 75, "groupedconvblock": 45, "guarante": 213, "h": [34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 90, 91, 93, 97, 98, 115, 116, 118, 119, 122, 123, 125, 126, 128, 129, 130, 172, 173, 175, 176, 180, 181, 184, 187, 280, 282], "h_": [90, 91, 115, 116, 118, 119, 122, 123, 125, 151, 152, 180, 181, 183, 184, 186, 187], "h_out": [90, 91, 118, 119, 122, 123], "h_stack": 266, "ha": [0, 11, 70, 78, 89, 90, 91, 127, 128, 129, 165, 166, 171, 172, 173, 174, 175, 176, 177, 190, 191, 221, 260, 264, 266, 274, 277, 283], "half": 255, "hand": 18, "handl": [0, 3, 7, 16, 72, 74, 75, 76, 77, 78, 166, 169, 189, 191, 206], "handwritten": [5, 33], "hardwar": 7, "hat": [195, 196, 197, 198, 199], "have": [0, 1, 10, 11, 13, 16, 17, 19, 73, 75, 77, 78, 90, 91, 140, 189, 232, 233, 234, 235, 236, 248, 250, 264, 266, 268, 273, 274, 277, 281, 287], "he": 69, "height": [90, 91, 93, 97, 98, 115, 116, 118, 119, 122, 123, 125, 126, 131, 151, 152, 172, 173, 175, 176, 180, 181, 183, 184, 186, 187, 280, 282, 287], "help": [7, 24, 83, 85, 98, 141, 143, 145, 148, 171, 172, 173, 182, 183, 185, 186, 192, 195, 196, 198, 204, 205, 206, 208], "henc": 272, "here": [3, 9, 72, 101, 189, 191, 205, 206, 208, 215, 278, 279, 289], "hidden": [20, 67, 75], "hidden_s": 75, "hierarch": [75, 78, 189], "hierarchi": 151, "hierarchicalnetwork": 75, "high": [7, 42, 57, 211, 214], "higher": [45, 166, 169, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 220, 221, 225, 246], "highest": 211, "highli": 69, "highlight": [130, 185, 186, 187], "hint": 208, "histor": 194, "histori": [210, 211, 212, 214, 228, 229, 230, 231, 232, 233, 234, 235, 236], "hold": [74, 75, 76, 77], "horizont": [266, 274, 284, 289], "hot": [166, 169], "how": [2, 3, 7, 75, 78, 189, 208, 289], "howev": [71, 140], "hstack": 267, "http": 5, "hu": [69, 130], "huber": [106, 167], "huber_loss": [100, 107], "huberloss": [160, 170], "huberregressionmodel": 167, "hue": 289, "hyperbol": [88, 148, 244, 254, 259], "hyperparamet": [34, 45, 190, 192], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "iccv": 69, "ideal": [7, 78], "ident": [13, 14, 69, 126, 160, 164, 213, 215, 232, 272], "identifi": 76, "idx": [2, 3], "ieee": [69, 130], "ii": 260, "ij": [87, 125, 147, 219, 220, 221, 225, 268], "ik": [219, 220, 221], "ill": [10, 16], "ilsvrc": 69, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 68, 69, 90, 112, 126, 128, 130, 151, 175, 268, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [43, 44, 69], "imbal": [166, 169], "impact": [69, 198], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 34, 43, 44, 46, 47, 48, 49, 50, 51, 52, 67, 69, 72, 93, 131, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 266, 277, 283], "impli": [150, 151], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 44, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "improp": [75, 78, 215], "improv": [23, 24, 25, 26, 28, 34, 45, 58, 67, 69, 110, 126, 130, 142, 145, 148, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 282, 285, 289], "imread": 3, "in1_featur": [101, 161], "in2_featur": [101, 161], "in_channel": [34, 75, 78, 127, 128, 129, 130, 131, 150, 151, 152, 172, 173, 182, 183, 184, 185, 186, 187, 189], "in_featur": [74, 75, 78, 103, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 174, 177, 182, 183, 184, 185, 186, 187], "incept": [23, 24, 25, 26, 27, 28, 29, 69], "inception_resnet_v1": 69, "inception_resnet_v2": 69, "inception_v1": 69, "inception_v3": 69, "inception_v4": 69, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 62, 67, 70, 72, 73, 75, 77, 78, 125, 127, 128, 129, 189, 190, 191, 198, 208, 215, 221, 269], "inclus": [73, 76, 211, 214], "incom": [103, 163], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 45, 52, 53, 54, 55, 56, 57, 58, 69, 142], "increas": [45, 46, 47, 48, 49, 50, 51, 58, 89, 90, 91, 93, 126, 194, 201, 205, 266, 277, 283, 284, 286, 289], "independ": [75, 89, 90, 91, 154, 155, 156, 157, 158, 177, 221, 231, 281, 283, 285, 287], "index": [0, 2, 5, 205, 228, 229, 232, 268, 272], "indexerror": 0, "indic": [0, 1, 62, 70, 73, 75, 77, 78, 105, 109, 166, 169, 182, 204, 216, 280, 282], "individu": [3, 75, 78, 167, 177, 191, 194, 201], "induc": [85, 145], "inf": 258, "infer": [75, 78, 206], "infin": [17, 19, 197], "inform": [7, 69, 70, 71, 130, 191, 193, 206], "infti": [15, 199], "inherit": [1, 192, 200, 202], "init": 134, "initi": [1, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 71, 73, 74, 75, 76, 77, 78, 131, 133, 135, 136, 137, 138, 139, 140, 150, 151, 152, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 177, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 213, 214, 215, 228, 232, 233, 234, 235, 236, 263], "initial_accumulator_valu": 194, "inner": [7, 219, 237], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 45, 58, 67, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 215, 216, 217, 219, 220, 221, 225, 229, 231, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "input1": 161, "input2": 161, "input_": [20, 67, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 179, 180, 181], "input_1": 101, "input_2": 101, "input_data": [141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187], "input_s": [75, 77, 147, 166, 169], "input_shap": 70, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 71, 74, 75, 76, 77, 78, 87, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 280, 281, 282, 283, 284, 285, 286, 287], "insid": [3, 204, 206], "insight": [7, 69], "inspect": [72, 73, 78, 190], "instabl": [16, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 68, 70, 72, 73, 74, 76, 77, 78, 112, 174, 175, 176, 177, 190, 207, 263, 271, 275, 289], "instance_norm": [100, 111, 174, 175, 176], "instancenorm1d": [160, 178], "instancenorm1dmodel": 174, "instancenorm2d": [160, 178], "instancenorm3d": [160, 178], "instanti": [2, 207], "instead": [7, 70, 74, 75, 76, 77, 78, 135, 136, 139, 140, 195, 196, 197, 206, 208, 230, 231], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 87, 89, 90, 91, 93, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 137, 138, 139, 140, 147, 150, 151, 152, 161, 163, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 198, 199, 201, 207, 210, 211, 212, 213, 214, 216, 228, 229, 230, 232, 233, 235, 242, 248, 249, 250, 257, 261, 262, 263, 264, 269, 271, 272, 273, 274, 275, 276, 280, 282, 287], "integ": [1, 3, 14, 52, 62, 89, 90, 91, 115, 116, 150, 151, 152, 177, 180, 181, 183, 184, 185, 186, 187, 208, 211, 212, 214, 215, 230, 233, 235, 249, 257, 261, 262, 269, 271, 272, 275], "integr": [1, 2, 4, 5, 8, 69, 73, 75, 77, 78, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 161, 163, 182, 183, 184, 185, 186, 187], "intellig": [69, 130], "intend": [71, 76, 77], "intens": [16, 35, 281, 283], "intent": 208, "interact": [101, 161, 189, 215], "interdepend": 69, "interfac": [2, 72, 75, 191], "interfer": [204, 206], "intermedi": [16, 130], "intern": [35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 69, 74, 75, 76, 77, 78, 166, 169, 189, 280, 281, 282, 283, 284, 285, 286, 287], "interpol": [100, 124, 287], "interpret": [69, 87, 147, 208, 264], "interv": [210, 214, 228], "introduc": [23, 24, 45, 69, 84, 130, 142, 144, 146, 148, 154, 155, 156, 157, 158, 282, 285, 289], "introspect": 78, "intuit": [7, 74, 76, 189, 289], "inv": 12, "inv_a": 13, "invari": [183, 186], "invers": [7, 10, 13, 14, 16, 194, 239, 240, 241], "invert": [10, 13, 14, 18], "invok": 207, "involv": [9, 10, 11, 13, 16, 17, 19, 58, 80, 81, 83, 84, 85, 86, 88, 101, 103, 125, 150, 151, 152, 161, 163, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236, 246, 247, 248, 250, 253, 255, 268, 269, 271, 275], "is_leaf": 216, "issu": [3, 145, 171, 172, 173, 195, 196], "item": 168, "iter": [0, 1, 2, 3, 71, 72, 75, 77, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 228], "ith": [87, 147], "its": [4, 14, 16, 20, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 55, 56, 57, 59, 60, 61, 67, 69, 70, 71, 74, 75, 76, 77, 89, 90, 91, 93, 126, 131, 140, 142, 144, 185, 186, 187, 189, 190, 193, 201, 204, 205, 206, 207, 228, 230, 231, 235, 248, 250, 263, 272, 281, 284, 286, 289], "itself": [9, 14, 74, 75, 76, 77], "j": [5, 87, 130, 147, 171, 172, 173, 174, 175, 176, 182, 183, 185, 186, 268, 274, 280, 282], "jie": 69, "jk": 220, "join": [3, 264], "json": 207, "k": [14, 89, 150, 166, 172, 173, 175, 176, 182, 185, 186, 219, 220, 229, 232, 264], "k_d": [91, 152, 184, 187], "k_h": [90, 91, 151, 152, 183, 184, 187], "k_w": [90, 91, 151, 152, 183, 184, 187], "kaim": [69, 135, 136, 139, 140], "kaiming_norm": 134, "kaiming_uniform": 134, "karen": 69, "keep": [72, 144, 193, 206, 272], "keep_grad": [73, 210, 211, 212, 214, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 279], "keep_var": 72, "keepdim": [248, 249, 250, 257, 262], "kei": [69, 72, 74, 76, 78, 190], "kept": [249, 257, 262], "kernel": [30, 31, 32, 33, 58, 59, 60, 61, 67, 69, 89, 90, 91, 93, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 150, 151, 152, 179, 180, 181, 183, 184, 187], "kernel_s": [58, 59, 60, 61, 75, 78, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 150, 151, 152, 172, 173, 182, 183, 184, 185, 186, 187], "keyerror": 72, "keyword": [21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 72, 162], "kj": [219, 221], "known": 69, "krizhevski": 69, "kroneck": [87, 147], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 72, 162, 207], "l": [9, 16, 89, 96, 114, 117, 121, 127, 130, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179], "l2": [192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "l_": [89, 114, 117, 121, 150, 179, 182, 185], "l_out": [89, 117, 121], "label": [4, 5, 24, 165, 166, 169], "lambd": 192, "lambda": [11, 85, 145, 192, 196], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 150, 161, 182, 185], "larg": [0, 3, 16, 35, 36, 37, 40, 53, 54, 69, 167, 189, 192, 195, 196, 197, 200, 201, 202, 206], "larger": [34, 58, 74, 76, 89, 90, 91, 93, 192, 222, 269, 280, 282, 287], "largest": 248, "last": [1, 87, 113, 147, 220, 221, 264, 284, 286], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 74, 75, 78, 87, 103, 110, 112, 113, 127, 128, 129, 130, 131, 135, 136, 139, 140, 147, 150, 151, 152, 161, 162, 163, 169, 177, 182, 183, 184, 185, 186, 187, 189, 215, 269, 279], "layer1": 207, "layer2": 207, "layer_group": 75, "layer_norm": [100, 111, 177], "layer_sequ": [75, 78], "layernorm": [160, 178], "layernormmodel": 177, "lead": [75, 78, 142, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215], "leaf": 216, "leaki": [83, 143], "leaky_relu": [82, 100, 143], "leakyrelu": [149, 160], "learn": [1, 3, 4, 5, 7, 14, 16, 45, 46, 47, 48, 49, 50, 51, 67, 68, 69, 74, 75, 76, 77, 84, 87, 130, 141, 143, 144, 147, 150, 151, 152, 155, 156, 157, 158, 161, 163, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 213, 278, 279, 289], "learnabl": [71, 72, 73, 110, 112, 113, 127, 128, 129, 150, 151, 152, 161, 163, 171, 172, 173, 174, 175, 176, 177, 189], "least": [16, 17, 19, 260], "lecun": [5, 69], "left": [14, 15, 16, 19, 81, 87, 142, 147, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 185, 186, 187, 280, 282], "leftarrow": 198, "len": [0, 1, 2, 3, 268], "lenet": [29, 31, 32, 33, 69], "lenet_1": 69, "lenet_4": 69, "lenet_5": 69, "length": [75, 89, 96, 114, 117, 121, 150, 162, 171, 174, 179, 182, 185, 269, 281], "leq": [167, 199, 226, 242], "lerp": 125, "less": [0, 80, 83, 106, 141, 143, 166, 167, 169, 242], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 46, 47, 48, 49, 50, 51, 69, 131, 189], "li": 69, "librari": [3, 7, 8, 72, 189, 190, 191, 207, 208, 215, 216, 289], "lightweight": [7, 38, 55, 131], "like": [7, 26, 46, 47, 48, 49, 50, 51, 59, 60, 61, 69, 71, 72, 75, 78, 89, 139, 140, 145, 154, 171, 172, 173, 174, 175, 176, 204, 205, 208, 263, 279, 289], "likelihood": [109, 166, 169], "limit": [70, 193, 242], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 52, 70, 74, 75, 76, 78, 80, 81, 83, 84, 85, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 161, 162, 165, 166, 167, 168, 169, 171, 174, 177, 182, 183, 184, 185, 186, 187, 207, 232], "linearli": 167, "list": [0, 1, 30, 34, 45, 52, 58, 62, 70, 71, 73, 74, 75, 76, 77, 113, 131, 162, 177, 190, 208, 210, 211, 212, 214, 216, 229, 230, 231, 233, 234, 235, 236, 261, 272, 273, 276, 278], "listdir": 3, "liter": [34, 104, 105, 106, 108, 109, 125, 127, 128, 129, 131, 135, 136, 150, 151, 152, 165, 166, 167, 168, 169, 268], "ln": 226, "load": [3, 4, 5, 71, 72, 73, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "load_state_dict": [72, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "loader": [1, 2, 3], "local": [69, 93, 150], "locat": [69, 125], "log": [109, 165, 166, 169, 237], "log_softmax": 169, "logarithm": [226, 246, 247], "logic": [3, 179, 180, 181, 189, 190], "logit": [20, 67, 87, 147, 166], "logsoftmax": [166, 169], "long": [198, 261], "loop": [1, 75, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "loss": [7, 16, 74, 75, 76, 77, 78, 87, 104, 105, 106, 108, 109, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "low": [7, 26, 211, 214], "lower": [9, 138, 192, 200, 201, 202, 214], "lowest": 211, "lr": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 237, 267, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "m": [62, 74, 75, 78, 183, 184, 186, 187, 195, 196, 197, 198, 199, 232], "m_": [195, 196, 197, 198, 199], "m_t": [198, 199], "machin": [3, 5, 7, 16, 130, 195, 205, 213], "magnitud": [200, 201, 289], "mai": [3, 7, 11, 13, 16, 75, 77, 126, 167, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 215, 283, 289], "main": [7, 17, 26, 75, 229, 232], "maintain": [16, 45, 46, 47, 48, 49, 50, 51, 71, 72, 74, 75, 76, 78, 85, 135, 136, 139, 140, 141, 142, 145, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 195, 200, 280, 283, 287], "make": [1, 3, 7, 22, 26, 30, 34, 69, 75, 78, 146, 166, 167, 177, 183, 186, 189, 194, 195, 196, 197, 205, 207, 215, 216, 221, 268, 278, 289], "manag": [7, 72, 74, 75, 76, 77, 78, 189, 191, 204, 206, 207, 215], "manhattan": 15, "mani": 70, "manipul": [7, 74, 76, 289], "manner": [75, 78], "manual": [104, 105, 109, 165, 166, 169, 206], "map": [34, 45, 55, 58, 69, 72, 86, 88, 130, 146, 148], "mask": [71, 154, 155, 156, 157, 158], "match": [18, 72, 75, 78, 104, 106, 108, 113, 127, 128, 129, 190, 246, 271, 272, 275, 276, 281, 289], "math": [243, 253, 258], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 219, 220, 221, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287], "mathcal": [135, 137, 139, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177], "mathemat": [13, 127, 128, 129, 282, 284, 285, 286], "mathrm": 16, "matmul": 237, "matric": [8, 10, 11, 13, 16, 18, 19, 219, 220, 221, 232, 268], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 93, 101, 162, 163, 189, 219, 268], "matrix_pow": 12, "matthew": 69, "max": [15, 52, 62, 84, 121, 122, 123, 144, 185, 186, 187, 197, 222, 237, 242], "max_pool": [185, 186, 187], "max_pool1d": [100, 120], "max_pool2d": [100, 120], "max_pool3d": [100, 120], "max_valu": 242, "maxim": 3, "maximum": [15, 144, 185, 186, 187, 195, 197, 237, 242, 248, 285], "maxpool": [20, 67], "maxpool1d": [160, 188], "maxpool1dmodel": 185, "maxpool2d": [75, 78, 151, 160, 188], "maxpool2dmodel": 186, "maxpool3d": [152, 160, 188], "maxpool3dmodel": 187, "mean": [5, 17, 70, 71, 85, 89, 90, 91, 94, 104, 105, 106, 108, 109, 110, 112, 127, 128, 129, 137, 141, 142, 143, 144, 145, 146, 148, 152, 154, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 195, 196, 197, 198, 199, 200, 204, 212, 237, 242, 246, 247, 248, 250, 253, 255, 257, 260, 261, 262, 278, 281, 289], "meaning": [78, 208], "measur": [165, 166, 168, 169], "mechan": [7, 52, 58, 77, 101], "membership": 165, "memori": [2, 3, 206, 230, 231], "meshgrid": 267, "method": [3, 7, 8, 13, 52, 74, 75, 76, 77, 78, 104, 105, 106, 108, 109, 135, 136, 139, 140, 165, 166, 167, 168, 169, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 215], "middl": 205, "might": 189, "min": [223, 237, 242], "min_valu": 242, "mind": [0, 3, 7, 75, 78, 206], "mini": 1, "minim": [4, 7, 78, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 191], "minimalist": 7, "minimum": [237, 242, 250], "minu": 146, "mirror": [234, 236], "mismatch": [72, 189, 190], "miss": [72, 189], "mitig": [83, 141, 143, 145, 171, 172, 173], "mlp": 131, "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 98, 110, 112, 125, 135, 136, 154, 155, 156, 157, 158, 269], "model": [1, 3, 4, 7, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 87, 126, 127, 128, 129, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 215, 278, 279, 289], "moder": 56, "modern": 69, "modif": [78, 206], "modifi": [21, 34, 68, 74, 75, 76, 77, 133, 135, 136, 137, 138, 139, 140, 154, 204, 206, 213, 266, 277], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 45, 52, 58, 62, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 215, 279, 289], "modular": [3, 7, 69, 72, 75, 78, 189, 289], "moduledict": [75, 76, 78, 79], "modulelist": [77, 78, 79], "moment": [195, 196, 197, 198, 199], "momentum": [110, 112, 127, 128, 129, 171, 172, 173, 174, 175, 176, 192, 198, 200, 202], "momentum_decai": 198, "moor": 16, "more": [3, 4, 7, 11, 34, 41, 74, 75, 78, 141, 155, 156, 157, 158, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 212, 221, 260, 274, 289], "most": [8, 69, 186, 279, 280, 289], "move": [192, 200], "mse": [106, 108, 167, 168], "mse_loss": [100, 107], "mseloss": [160, 170], "mu": [137, 171, 172, 173, 174, 175, 176, 177, 262], "mu_c": 281, "mu_i": [174, 175, 176], "much": 289, "mul": 237, "multi": [3, 4, 27, 58, 59, 60, 61, 69, 87, 105, 109, 131, 147, 166, 169, 249, 257, 262], "multidimension": [210, 214, 230], "multipl": [1, 3, 7, 8, 14, 18, 20, 34, 52, 76, 77, 78, 93, 125, 126, 130, 131, 154, 155, 156, 157, 158, 166, 169, 189, 205, 210, 211, 212, 214, 219, 224, 230, 231, 278, 283, 289], "multipli": [14, 77, 103, 163, 201, 224, 225], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 70, 72, 74, 75, 76, 77, 78, 113, 154, 155, 156, 157, 158, 169, 190, 206, 260, 264, 266, 269, 271, 272, 274, 275, 277, 280, 281, 282, 283, 284, 286], "my_simple_model": 207, "mymodel": [72, 73, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "myoptim": [190, 191], "n": [14, 15, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 69, 74, 75, 78, 89, 90, 91, 93, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 137, 139, 150, 151, 152, 157, 158, 161, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 232, 249, 260, 262], "n1": 15, "nabla_": [193, 194, 195, 196, 197, 198, 199, 201], "nabla_t": 199, "nadam": 203, "name": [69, 70, 72, 74, 76, 78, 207, 208], "nan": [17, 19], "natur": [16, 69, 150, 161, 182, 185, 226, 246, 247], "ndarrai": [71, 73, 208, 216, 229, 231, 234, 236, 263], "ndim": [17, 19, 73, 216], "ne": 14, "nearest": 125, "necessari": [4, 5, 16, 206, 266, 277], "need": [2, 4, 75, 76, 77, 87, 161, 189, 206, 230, 231, 278, 279, 289], "neg": [14, 16, 19, 80, 109, 126, 141, 143, 144, 145, 166, 169, 201, 264], "negative_slop": [83, 143], "neglect": 77, "neighbor": 125, "neq": 15, "nest": [70, 75, 78, 189], "nestedmodel": 70, "nesterov": 198, "net": [67, 69], "network": [3, 4, 7, 20, 21, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 110, 126, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 200, 202, 214, 215, 216, 228, 233, 235, 248, 250, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "neural": [3, 4, 7, 20, 21, 26, 33, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 110, 126, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 200, 202, 214, 215, 216, 228, 233, 235, 248, 250, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "neuralnetwork": 144, "neuron": 143, "never": 283, "new": [72, 73, 80, 81, 83, 84, 85, 86, 88, 101, 103, 125, 131, 135, 136, 137, 138, 139, 140, 190, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 266, 269, 271, 272, 274, 275, 276, 277], "next": [78, 278], "nll": 109, "nll_loss": [100, 107], "nllloss": [160, 170], "nn": [5, 7, 20, 22, 26, 30, 34, 45, 52, 58, 62, 67, 70, 79, 82, 92, 99, 102, 107, 111, 120, 124, 132, 134, 149, 153, 159, 160, 164, 170, 178, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 279, 289], "no_grad": 204, "node": 216, "nois": [19, 215], "non": [11, 14, 16, 19, 77, 81, 83, 84, 135, 136, 141, 142, 143, 144, 145, 146, 148, 154, 155, 156, 157, 158, 195, 196, 206, 226, 242], "none": [0, 1, 2, 5, 22, 26, 30, 34, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 126, 127, 128, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287], "norm": [8, 12, 197], "normal": [5, 52, 81, 85, 87, 88, 110, 112, 113, 127, 128, 129, 134, 135, 139, 142, 145, 147, 154, 171, 172, 173, 174, 175, 176, 177, 200, 212, 215, 278, 288, 289], "normalized_shap": [113, 177], "note": [89, 154], "noth": [94, 95, 96, 97], "notimplementederror": [2, 72, 190], "notin": 242, "nov": 69, "novel": 69, "np": [34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 71, 73, 130, 166, 169, 208, 216, 221, 228, 229, 232, 233, 235, 236, 247, 263, 279], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 147, 166, 169], "num_featur": [78, 127, 128, 129, 171, 172, 173, 174, 175, 176], "num_paramet": 77, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 75, 77, 78, 89, 90, 91, 93, 96, 97, 98, 101, 103, 105, 109, 110, 112, 114, 115, 116, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 140, 146, 150, 151, 152, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 192, 210, 213, 214, 216, 226, 228, 230, 232, 248, 249, 250, 261, 262, 264, 266, 269, 271, 272, 273, 275, 277, 281, 283, 284, 286, 289], "numer": [13, 16, 104, 105, 110, 112, 113, 127, 128, 129, 165, 166, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200, 208, 218, 228, 233, 235], "numpi": [7, 71, 73, 166, 169, 208, 216, 221, 229, 232, 247, 260, 263, 269, 271, 275, 279, 289], "o": [3, 184, 187, 233, 234], "object": [1, 3, 8, 58, 69, 72, 76, 77, 168, 189, 206, 217, 218, 222, 223, 224, 227, 263], "observ": 195, "obtain": 1, "occur": [126, 206, 207, 264], "occurr": 14, "odot": [154, 155, 156, 157, 158], "off": 204, "offer": [4, 7, 189, 191, 215, 289], "offset": 232, "often": [14, 43, 44, 89, 90, 91, 93, 166, 169, 228, 235, 279, 283, 287, 289], "older": 198, "onc": 206, "one": [0, 77, 78, 87, 89, 103, 117, 121, 127, 128, 129, 145, 146, 147, 150, 156, 166, 169, 171, 174, 182, 185, 190, 205, 208, 212, 227, 234, 248, 250, 265, 270, 274, 279], "ones": [101, 103, 150, 151, 152, 163, 171, 172, 173, 174, 175, 176, 177, 189, 232, 234, 237], "ones_lik": 237, "onli": [7, 70, 125, 144, 154, 155, 156, 157, 158, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 185, 186, 187, 201, 204, 228, 242, 248, 250, 260, 269, 270, 272, 273], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 52, 53, 54, 55, 56, 57, 71, 72, 75, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 98, 101, 103, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 204, 205, 206, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 246, 247, 248, 249, 250, 253, 255, 257, 260, 262, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 287], "operatornam": [14, 16], "opposit": 192, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 71, 73, 76, 77, 93, 150, 151, 152, 189, 206], "optimizer_st": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 87, 90, 91, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 143, 147, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 190, 192, 200, 202, 210, 211, 212, 214, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 250, 257, 261, 262, 263, 264, 268, 271, 273, 274, 279, 283, 284, 286], "ord": 15, "order": [1, 3, 15, 19, 74, 75, 76, 77, 78, 261, 278], "ordered_dict": 78, "ordereddict": [72, 74, 75, 78], "organ": [74, 75, 76, 78, 207], "orient": 289, "origin": [24, 33, 94, 126, 130, 148, 269, 270, 271, 272, 275, 276, 287], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [192, 200, 202], "other": [2, 3, 7, 13, 24, 28, 30, 33, 71, 72, 75, 78, 135, 136, 154, 189, 190, 204, 206, 215, 216, 228, 230, 233, 235, 260, 268, 289], "otherwis": [35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 80, 83, 84, 85, 87, 141, 143, 144, 145, 147, 155, 156, 157, 158, 167, 182, 183, 184, 185, 186, 187, 190, 201, 207, 222, 223, 248, 250], "otim": [16, 101, 161], "out": [0, 3, 4, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 135, 136, 139, 140, 150, 151, 152, 154, 155, 156, 157, 158, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277], "out_channel": [30, 75, 78, 127, 128, 129, 131, 150, 151, 152, 172, 173, 182, 183, 184, 185, 186, 187, 189], "out_featur": [74, 75, 78, 101, 103, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 174, 177, 182, 183, 184, 185, 186, 187], "outcom": [283, 284, 286], "outer": 237, "outlier": [106, 167], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 103, 114, 115, 116, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 246, 247, 248, 249, 250, 253, 255, 257, 260, 261, 262, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "output_height": 93, "output_lay": [75, 78], "output_s": [75, 114, 115, 116, 179, 180, 181], "output_width": 93, "outsid": 0, "over": [0, 1, 2, 3, 8, 58, 67, 72, 75, 77, 87, 114, 115, 116, 130, 147, 150, 151, 152, 166, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 210, 214, 248, 249, 250, 257, 260, 262, 283, 284, 286], "overdetermin": 16, "overfit": [1, 20, 67, 95, 98, 155, 156, 157, 158, 192, 195, 200, 202], "overhead": 130, "overrid": [2, 3], "overridden": [72, 190], "overwrit": [74, 76], "own": [4, 74, 75, 76, 77, 89, 90, 91, 140, 189, 281], "p": [15, 16, 73, 76, 77, 94, 95, 96, 97, 98, 154, 155, 156, 157, 158, 182, 185, 186, 283, 284, 286, 289], "p_d": [184, 187], "p_h": [183, 184, 187], "p_w": [183, 184, 187], "packag": [2, 3, 4, 8, 69, 189, 191, 207, 213, 215, 279, 289], "pad": [30, 75, 78, 89, 90, 91, 93, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 150, 151, 152, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 267], "pad_after_dim1": 269, "pad_after_dim2": 269, "pad_before_dim1": 269, "pad_before_dim2": 269, "pad_width": 269, "padding_height": 93, "padding_width": 93, "pair": 101, "paper": 23, "parallel": [1, 3, 58, 69], "param": [72, 73, 76, 77, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "param1": 72, "param_dict": 76, "param_group": [190, 191], "param_groups_setup": 190, "param_list": 77, "param_s": 207, "paramet": [0, 2, 7, 31, 32, 33, 69, 72, 189, 190, 191, 208, 215, 289], "parameterdict": 79, "parameterlist": 79, "parent": 189, "part": [71, 72, 140, 189, 204, 206, 215, 228, 229, 232, 233, 234, 235, 236, 279, 289], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "particip": [73, 279], "particular": [74, 76], "particularli": [7, 16, 46, 47, 48, 49, 50, 51, 75, 76, 77, 78, 87, 103, 127, 128, 129, 147, 163, 166, 169, 174, 175, 176, 177, 196, 204, 207, 278], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 125, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 189, 208, 216, 249, 257, 260, 261, 262, 264, 266, 270, 272, 273, 277, 279, 289], "past": [192, 193, 195, 200], "patch": [93, 183], "path": [3, 5], "pathwai": 69, "pattern": [69, 84, 130, 144, 150, 151, 152], "penal": [192, 200, 202], "penalti": [193, 194, 195, 196, 197, 198, 199], "penros": 16, "per": [1, 46, 47, 48, 49, 50, 51, 59, 60, 61, 114, 174, 175, 176, 177, 179], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 42, 58, 62, 67, 69, 72, 73, 77, 81, 89, 90, 91, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 204, 206, 213, 215, 217, 218, 221, 224, 227, 246, 248, 250, 257, 261, 278, 280, 282, 287, 289], "permut": 261, "persist": [71, 210, 211, 212, 214, 230, 231], "perturb": [11, 18, 19, 289], "phi": [81, 142], "pi": [81, 142, 243, 253, 258], "pil": [279, 289], "pinv": 12, "pioneer": 69, "pipelin": [5, 215, 278, 279, 281], "pixel": [5, 125, 281, 283], "place": [133, 135, 136, 137, 138, 139, 140], "placehold": [72, 162], "plai": [208, 215], "plot": 268, "point": [4, 126, 204], "pool": [20, 30, 31, 32, 33, 34, 45, 52, 58, 62, 67, 69, 114, 115, 116, 117, 118, 119, 121, 122, 123, 130, 131, 151, 152, 179, 180, 181, 182, 183, 184, 185, 186, 187, 248, 250], "pool1": 78, "pool2": 78, "poorli": 13, "popul": 72, "popular": [4, 69], "portion": 289, "pose": 16, "posit": [1, 9, 14, 72, 78, 126, 141, 143, 144, 145, 182, 183, 184, 185, 186, 187, 201, 205, 226, 271, 275, 282], "possibl": [7, 289], "potenti": [16, 162, 200, 273], "power": [7, 14, 69, 130, 205, 206, 237, 278, 279, 289], "pp": 69, "practic": [16, 166, 169], "practition": 289, "pre": [35, 39, 40], "preactbottleneck": [35, 39, 40], "preced": [73, 216], "preconfigur": [27, 28], "predefin": [4, 69, 75, 145], "predict": [165, 166, 168, 169], "prefix": [72, 207], "prepar": [3, 205, 269, 271, 275, 279, 289], "prepend": 72, "preprint": 69, "preprocess": [3, 4, 93, 126, 215, 278, 279, 289], "present": [165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 183], "preserv": [94, 126, 154, 228, 229, 232, 233, 234, 235, 236, 249, 257, 262], "preset": 4, "prevent": [1, 74, 75, 76, 77, 78, 95, 98, 155, 156, 157, 158, 165, 166, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206], "previou": [192, 201, 206], "previous": 195, "primari": [7, 208], "primarili": 78, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287], "priorit": 131, "probabilist": 215, "probabl": [24, 81, 87, 94, 95, 96, 97, 98, 104, 142, 147, 154, 155, 156, 157, 158, 165, 166, 169, 283, 284, 286, 289], "problem": [16, 17, 19, 69, 83, 141, 143, 199], "proceed": 69, "process": [2, 3, 4, 14, 17, 19, 20, 27, 34, 58, 67, 69, 77, 89, 90, 91, 112, 126, 127, 128, 129, 130, 131, 145, 148, 150, 152, 161, 171, 172, 173, 174, 175, 176, 177, 182, 184, 185, 187, 192, 208, 268, 279, 280, 281, 282, 287, 289], "produc": [20, 67, 70, 114, 115, 116, 130, 150, 151, 152, 179, 180, 181, 213, 215], "product": [7, 17, 19, 146, 161, 177, 189, 219, 220, 224, 225], "program": [204, 215], "progress": 194, "project": [17, 19], "projector": 16, "promin": [182, 184, 185, 186, 187], "promot": [78, 166, 169, 189], "propag": [10, 11, 13, 16, 17, 18, 19, 72, 78, 101, 103, 125, 130, 183, 184, 200, 201, 219, 220, 221, 225, 248, 250, 268, 269, 272, 276], "properli": [0, 77, 87, 147, 189], "properti": [8, 10, 13, 14, 81, 85, 94, 142, 145, 154, 194, 199], "proport": [5, 262], "proportion": 287, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 34, 62, 68, 69, 72, 74, 75, 76, 77, 81, 103, 115, 116, 126, 165, 166, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 200, 202, 204, 206, 208, 213, 215, 216, 221, 228, 234, 248, 250, 261, 263, 271, 273, 275, 289], "pseudo": [13, 16], "purpos": [210, 214, 228, 233, 235], "python": 208, "pytorch": 263, "q": 17, "qr": 12, "quad": [16, 165, 166, 167, 168, 169, 185, 186, 187, 217, 218, 222, 223, 224, 227, 280], "quadrat": 167, "quotient": 218, "r": [17, 283, 284, 285, 286], "r_t": 199, "radam": 203, "rais": [0, 1, 2, 72, 189, 190, 226], "rand": [209, 215], "randint": [209, 215], "randn": [20, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 67, 130, 131, 189, 209, 213, 215], "random": [1, 2, 3, 34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 130, 131, 282, 283, 284, 285, 286, 289], "random_integ": 215, "random_tensor": 215, "randomcrop": [288, 289], "randomgrayscal": [288, 289], "randomhorizontalflip": [288, 289], "randomli": [1, 94, 95, 96, 97, 98, 126, 154, 155, 156, 157, 158, 282, 283, 284, 285, 286, 289], "randomnoisedataset": [0, 1, 2], "randomrot": [288, 289], "randomverticalflip": 288, "rang": [0, 1, 8, 34, 42, 69, 77, 86, 88, 89, 90, 105, 109, 140, 146, 148, 192, 200, 202, 211, 239, 240, 242, 281, 285, 289], "rank": 16, "rate": [190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "rather": [76, 77, 196, 272], "ratio": [52, 130, 131, 287], "ravel": 267, "raw": [87, 147, 166, 208], "re": [73, 206], "readabl": [74, 75, 76, 78, 189, 208], "readi": [3, 7, 69], "real": [16, 19, 146], "rearrang": 93, "recalibr": [53, 55, 56, 69, 130], "receiv": [185, 186, 187, 269], "recent": 200, "recept": [58, 69, 131], "reciproc": [16, 237, 247, 255], "recognit": [33, 69, 151], "rectangular": 232, "rectif": 199, "rectifi": [83, 84, 143, 144, 199], "recurr": [75, 177], "recurs": [70, 72], "red": 283, "reduc": [20, 34, 45, 58, 62, 67, 69, 130, 171, 172, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 198, 201, 206, 208, 248, 249, 250, 257, 262, 283], "reduct": [19, 52, 104, 105, 106, 108, 109, 130, 131, 165, 166, 167, 168, 169, 248, 250], "reevalu": 190, "refer": [4, 7, 72, 215, 229, 232, 264], "reflect": 204, "regardless": [16, 270], "region": [91, 114, 115, 116, 125, 180, 181, 269, 280, 289], "regist": [43, 44, 46, 47, 48, 49, 50, 51, 71, 72, 73, 77, 189, 207], "register_buff": 71, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68], "register_paramet": 72, "registr": [72, 189], "registri": [46, 47, 48, 49, 50, 51, 207], "registry_path": 207, "regress": [4, 108, 167, 168], "regular": [16, 20, 24, 67, 98, 155, 156, 157, 158, 192, 193, 194, 197, 198, 199, 200, 202], "relat": [206, 232, 233], "relationship": 287, "relev": [125, 192, 200, 202], "reli": 206, "reliabl": 5, "reliant": [155, 156, 157, 158], "relu": [7, 20, 52, 62, 67, 69, 70, 74, 75, 76, 78, 80, 82, 83, 100, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 143, 149, 150, 151, 152, 160, 161, 162, 163], "relu1": 78, "relu2": 78, "relu3": 78, "remain": [5, 71, 113, 154, 155, 156, 157, 158, 201], "rememb": 215, "remov": [207, 273], "rep": 275, "repeat": [267, 268, 275], "repetit": [271, 275], "replac": [215, 283], "repres": [13, 15, 19, 30, 72, 73, 78, 101, 103, 110, 112, 113, 150, 151, 152, 161, 163, 166, 169, 177, 190, 191, 192, 198, 199, 200, 201, 202, 208, 217, 218, 224, 227, 229, 249, 260, 261, 262, 268, 280, 282, 284, 285, 286, 287], "represent": [43, 44, 46, 47, 48, 49, 50, 51, 58, 69, 130, 183, 186, 190], "reproduc": [210, 211, 212, 213, 214, 215, 289], "requir": [2, 3, 4, 7, 46, 47, 48, 49, 50, 51, 58, 71, 74, 78, 80, 81, 83, 84, 85, 86, 88, 101, 103, 125, 130, 131, 140, 162, 166, 169, 189, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 287], "requires_grad": [71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 101, 103, 125, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279], "rescal": [104, 105, 109, 165, 166, 169], "research": 189, "reset": [73, 213, 216], "reshap": [7, 52, 103, 151, 152, 205, 208, 267, 270], "residu": [25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 55, 56, 57, 69], "residualblock": 34, "resili": 201, "resiz": [125, 278, 288, 289], "resnet": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 130], "resnet_1001": 69, "resnet_101": 69, "resnet_152": 69, "resnet_18": 69, "resnet_200": 69, "resnet_269": 69, "resnet_34": 69, "resnet_50": 69, "resnet_arg": 58, "resnext": [29, 46, 47, 48, 49, 50, 51, 69], "resnext_101_32x16d": 69, "resnext_101_32x32d": 69, "resnext_101_32x4d": 69, "resnext_101_32x8d": 69, "resnext_101_64x4d": 69, "resnext_50_32x4d": 69, "resourc": 206, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 62, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 242, 246, 247, 248, 249, 250, 253, 255, 257, 260, 261, 262, 268, 269, 271, 275, 283], "respons": [69, 74, 191], "restor": [130, 206], "restructur": 272, "result": [9, 13, 14, 16, 69, 72, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 103, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 131, 147, 189, 190, 204, 206, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 289], "resum": 191, "retain": [73, 216, 228, 235, 248, 249, 250, 257, 262, 279], "retent": 279, "retriev": [0, 2, 74, 76, 77], "return": [0, 1, 2, 3, 5, 7, 26, 30, 52, 71, 72, 74, 75, 76, 77, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 278, 289], "reus": 279, "reusabl": [78, 189, 278], "revers": [7, 78, 261, 284, 286], "revert": 206, "revolution": 69, "rgb": [23, 24, 25, 27, 28], "rho": 193, "rho_": 199, "rho_t": 199, "right": [14, 15, 16, 18, 19, 81, 87, 142, 147, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 185, 186, 187, 280], "risk": 208, "rmsprop": 203, "rob": 69, "robust": [126, 154, 155, 156, 157, 158, 167, 189, 193, 282, 283, 285, 289], "role": [208, 215, 289], "root": [4, 5, 194, 200, 255], "rotat": [100, 124, 285, 289], "rotated_imag": 126, "rout": [185, 186, 187], "routin": 7, "row": [10, 11, 13, 18, 103, 232, 268, 277], "rprop": 203, "rule": [13, 14, 205, 217, 218, 222, 223, 224, 226, 227], "run": [7, 71, 110, 112, 127, 128, 129, 171, 172, 173, 174, 175, 176, 193, 206, 213, 215], "running_mean": [71, 110, 112, 171, 172, 173, 174, 175, 176], "running_var": [110, 112, 171, 172, 173, 174, 175, 176], "runtim": [75, 78, 189], "s_": 201, "s_d": [184, 187], "s_h": [183, 184, 187], "s_w": [183, 184, 187], "sain": 69, "same": [10, 11, 13, 14, 18, 87, 94, 95, 96, 97, 98, 110, 112, 113, 115, 116, 126, 127, 128, 129, 131, 150, 151, 152, 154, 155, 156, 157, 158, 162, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 201, 213, 215, 221, 231, 234, 236, 246, 248, 249, 250, 264, 266, 270, 272, 273, 274, 277, 281], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 114, 115, 116, 135, 136, 137, 138, 139, 140, 154, 155, 156, 157, 158, 161, 163, 166, 169, 177, 179, 180, 181, 212, 215, 280, 282, 284, 285, 286, 287], "satisfi": [9, 11, 18], "satur": [141, 289], "save": [2, 71, 73, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207], "scalabl": [3, 46, 47, 48, 49, 50, 51, 69, 189], "scalar": [10, 15, 104, 105, 106, 108, 109, 208], "scale": [11, 16, 27, 31, 32, 33, 35, 36, 37, 40, 53, 54, 58, 59, 60, 61, 69, 80, 85, 87, 110, 112, 113, 130, 131, 139, 140, 141, 143, 145, 146, 147, 148, 154, 155, 156, 157, 158, 166, 171, 172, 173, 174, 175, 176, 177, 192, 194, 195, 196, 208, 215, 262, 287], "scenario": [76, 77, 177, 196, 197, 279, 283], "schedul": 192, "scientif": 205, "score": [34, 45, 58, 87, 166], "scratch": 7, "script": 215, "se": [53, 54, 55, 56, 57, 69], "se_resnet_101": 69, "se_resnet_152": 69, "se_resnet_18": 69, "se_resnet_34": 69, "se_resnet_50": 69, "seamless": [0, 1, 3, 4, 189, 215], "seamlessli": [3, 4, 8, 73, 75, 78, 189, 208, 289], "second": [11, 75, 76, 101, 130, 161, 195, 196, 197, 198, 199, 205, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 266, 268, 286], "section": 221, "see": [7, 221], "seed": [209, 210, 211, 212, 214, 215, 289], "seen": 193, "select": [58, 59, 60, 61, 69, 125, 130, 131, 185, 187, 257], "selectivekernel": 132, "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 52, 62, 67, 70, 71, 72, 73, 74, 75, 76, 77, 85, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 268, 278, 279], "selu": [82, 94, 100, 149, 154, 160], "selunetwork": 145, "semodul": 132, "senet": [29, 53, 54, 55, 56, 57, 69], "sensit": [106, 167, 171, 172, 173], "sentiment": 4, "separ": [0, 89, 90, 91, 174, 175, 176], "sequenc": [14, 34, 45, 58, 74, 76, 89, 228, 264, 266, 269, 271, 274, 275, 277, 278], "sequenti": [20, 26, 30, 52, 62, 67, 70, 74, 75, 79, 89, 127, 128, 129, 162, 278, 289], "seri": [22, 31, 32, 58, 89, 127, 150, 182, 185], "serial": [71, 72, 191], "serv": [3, 26, 52, 62, 72, 74, 75, 76, 77, 78, 189, 201, 279], "set": [3, 4, 5, 43, 44, 70, 73, 77, 89, 90, 91, 143, 144, 145, 150, 151, 152, 154, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 190, 195, 196, 200, 210, 211, 212, 213, 214, 215, 216, 228, 230, 231, 235, 236, 242, 248, 250, 263, 279, 283, 289], "setup": [4, 7, 46, 47, 48, 49, 50, 51], "sever": [16, 150, 151, 152, 182, 183, 184, 185, 186, 187, 206, 278, 289], "sgd": [7, 192, 199, 203], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 205, 208, 210, 211, 212, 214, 215, 216, 219, 230, 231, 232, 233, 234, 235, 236, 242, 247, 248, 249, 250, 253, 255, 257, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289], "shapelik": 211, "share": 69, "shen": 130, "shift": [110, 112, 113, 171, 172, 173, 174, 175, 176, 177], "shorthand": 221, "should": [30, 71, 206, 210, 211, 212, 214, 230, 231, 239, 240, 260, 269, 278], "show": [204, 207], "showcas": 7, "shown": 213, "shrink": 193, "shuffl": [1, 2, 3], "side": [18, 75, 78, 89, 90, 91, 117, 118, 119, 121, 122, 123, 127, 128, 129, 150, 151, 152, 182, 183, 184, 185, 186, 187, 206], "sigma": [16, 130, 135, 137, 139, 146, 171, 172, 173, 174, 175, 176, 177, 261], "sigma_c": 281, "sigma_i": 16, "sigmoid": [82, 100, 130, 135, 136, 139, 140, 149, 160, 165], "sigmoidnetwork": 146, "sign": [14, 167, 201, 237], "signal": [127, 150, 151, 152, 171, 174, 182, 183, 184, 185, 186, 187], "signific": 206, "significantli": [45, 69, 130, 278], "sim": [154, 155, 156, 157, 158], "similar": [7, 135, 136, 221, 247, 263, 269], "similarli": [19, 260], "simonyan": 69, "simpl": [3, 4, 7, 70, 78, 89, 90, 91, 101, 103, 117, 118, 119, 121, 122, 123, 142, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 219, 220, 225, 278], "simplebinaryclassificationmodel": 165, "simpleclassificationmodel": [166, 169], "simplegelumodel": 142, "simpleleakyrelumodel": 143, "simplemodel": [7, 70, 163, 207], "simpleregressionmodel": 168, "simplerelumodel": 144, "simpleselumodel": 145, "simplesigmoidmodel": 146, "simpletanhmodel": 148, "simpli": [204, 260, 261, 272], "simplic": [69, 144], "simplifi": [4, 31, 78, 127, 128, 129], "simul": [70, 289], "simultan": 126, "sin": [237, 243], "sinc": [14, 17, 74, 75, 76, 77, 89, 90, 91, 140, 204, 206, 212, 268, 289], "sine": [240, 253, 254], "singl": [0, 4, 14, 17, 19, 34, 87, 127, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 166, 177, 183, 184, 185, 186, 187, 190, 208, 214, 230, 264, 273, 281, 283, 289], "singleton": 177, "singular": [10, 13, 14, 16, 18, 19], "sinh": [237, 244, 259], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 34, 58, 67, 69, 70, 73, 75, 89, 90, 91, 93, 96, 97, 98, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 150, 151, 152, 161, 163, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 211, 214, 215, 216, 248, 249, 250, 257, 262, 264, 266, 273, 276, 277, 280, 282, 287, 289], "sk": [58, 59, 60, 61, 69, 131], "sk_resnet_18": 69, "sk_resnet_34": 69, "sk_resnet_50": 69, "skblock": 58, "skip": [69, 206], "sknet": [29, 59, 60, 61, 69], "slice": [101, 260], "slide": [93, 182, 184, 185, 187], "slight": 130, "slightli": 289, "slope": [83, 141, 143], "slow": [3, 199], "small": [16, 31, 32, 33, 69, 83, 104, 105, 110, 112, 113, 143, 145, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 183, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201], "smaller": [67, 69, 75, 78, 189, 194, 195, 223, 280, 282, 287], "smallest": 250, "smooth": [24, 81, 141, 142, 192, 200, 289], "smoother": 192, "so": [74, 75, 76, 77, 126, 189, 199, 230, 231, 278], "softmax": [82, 100, 131, 149, 160, 166], "softmaxmodel": 147, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [80, 95, 126, 154, 155, 156, 171, 172, 173, 174, 175, 176, 194, 195, 196, 206, 208], "sometim": 205, "sophist": [75, 78], "sourc": 215, "space": [11, 17, 19, 89, 90, 91, 93, 114, 115, 116, 127, 128, 129, 150, 151, 152, 179, 180, 181, 228, 289], "span": 4, "spars": [194, 195], "spatial": [20, 34, 45, 58, 62, 67, 69, 128, 130, 151, 152, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 268], "spatial_dim": 130, "spatio": 152, "special": [0, 1, 7, 16, 71, 72, 73, 154, 215], "specif": [4, 7, 26, 43, 44, 74, 75, 76, 77, 78, 131, 140, 154, 155, 156, 157, 158, 174, 175, 176, 189, 190, 204, 215, 230, 248, 250, 271, 275], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 70, 75, 87, 93, 98, 104, 105, 106, 108, 109, 113, 114, 115, 116, 125, 126, 130, 147, 150, 151, 152, 165, 166, 167, 168, 169, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 208, 210, 211, 212, 213, 214, 226, 228, 229, 230, 231, 232, 233, 235, 236, 242, 248, 249, 250, 257, 261, 262, 263, 264, 266, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 287, 289], "speech": 174, "speed": [192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "split": [4, 264, 266, 277], "springer": 69, "sqrt": [81, 135, 136, 139, 140, 142, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 196, 198, 199, 200, 237, 239, 240], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 106, 108, 167, 168, 193, 194, 195, 200, 237, 255], "squaredataset": [0, 1, 2, 3], "squeez": [52, 55, 69, 130, 267], "stabil": [13, 16, 69, 104, 105, 110, 112, 113, 127, 128, 129, 165, 166, 171, 172, 173, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 281], "stabl": [135, 136, 139, 140, 154, 166, 192, 196, 197, 200, 201, 202], "stack": [78, 131, 266, 267, 277, 289], "stage": [34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61], "stage1": 52, "stage2": 52, "stage3": 52, "stage4": 52, "standard": [34, 43, 44, 81, 83, 135, 137, 139, 141, 142, 143, 154, 201, 212, 215, 221, 278, 281, 289], "start": [1, 3, 192, 194, 201, 228, 280, 282], "state": [69, 71, 72, 73, 75, 78, 190, 204, 206, 213], "state_dict": [72, 73, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "static": 78, "statist": [16, 94, 110, 112], "std": [5, 137, 278, 281, 289], "stem": [26, 34, 45, 58], "stem_typ": 34, "stem_width": 34, "step": [73, 93, 131, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 228, 278, 279], "step_siz": 201, "still": 193, "stochast": [7, 192, 202], "stop": 228, "storag": [74, 76, 216], "store": [2, 4, 5, 34, 45, 58, 71, 72, 73, 74, 75, 76, 77, 130, 179, 180, 181, 206, 216, 280, 281, 282, 283, 284, 285, 286, 287], "str": [5, 34, 62, 72, 74, 76, 78, 104, 105, 106, 108, 109, 125, 190, 207, 268], "straightforward": [202, 204, 217], "strategi": 191, "streamlin": [2, 3], "strict": [72, 190], "stride": [30, 31, 32, 33, 75, 78, 89, 90, 91, 93, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 150, 151, 152, 179, 180, 181, 182, 183, 184, 185, 186, 187], "stride_height": 93, "stride_width": 93, "string": [72, 74, 76, 78, 150, 151, 152, 190], "structur": [0, 7, 17, 71, 72, 75, 189, 190, 207, 208, 232, 279], "style": [26, 112, 174, 175, 268], "sub": [74, 75, 76, 77, 78, 189, 237, 280, 282], "sub_tensor": 216, "subclass": [1, 2, 3, 7, 72, 73, 74, 189, 190], "sublay": 70, "submodul": [70, 72, 189], "subsequ": [75, 78, 140, 215], "subset": [155, 156], "subtract": [7, 227, 281], "suffer": 194, "suit": [24, 58, 135, 136, 139, 140], "suitabl": [26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 69, 167, 194, 195, 210], "sum": [15, 74, 75, 76, 77, 78, 87, 104, 105, 106, 108, 109, 131, 147, 165, 166, 167, 168, 169, 194, 217, 220, 225, 237, 260, 262, 264, 266, 268, 271, 275, 277], "sum_": [14, 87, 147, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 219, 220, 249, 257, 260, 262, 268, 271], "sum_i": [15, 225], "sum_j": 225, "sum_k": 221, "summar": [43, 44, 182, 183, 184], "summari": [43, 44], "summat": 14, "sun": 130, "super": [7, 70, 71, 72, 73, 74, 75, 76, 77, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 34, 74, 75, 76, 77, 78, 125, 126, 189, 191, 198, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 229, 232, 242, 247, 249, 253, 255, 257, 260, 261, 262, 264, 268, 272, 279, 289], "suppos": 289, "sure": [189, 289], "svd": [12, 16], "symmetr": [9, 114, 115, 116, 139, 140, 148], "syntax": [1, 221], "system": [8, 9, 16, 17, 18, 69, 204, 268], "systemat": 289, "szegedi": [23, 69], "t": [16, 69, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 216, 221, 263, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "t0": 192, "t1": 263, "t2": 263, "tabular": 4, "tailor": [4, 189, 289], "take": [17, 182, 183, 184, 185, 186, 187, 206, 278], "taken": 260, "tan": 237, "tangent": [88, 148, 241, 258, 259], "tanh": [75, 78, 81, 82, 100, 135, 136, 139, 140, 142, 149, 160, 237], "tanhnetwork": 148, "target": [5, 78, 104, 105, 106, 108, 109, 114, 115, 116, 125, 165, 166, 167, 168, 169, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 280, 282, 287], "target_tensor": [165, 166, 167, 168, 169], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 69, 86, 87, 90, 101, 104, 105, 108, 109, 130, 131, 146, 147, 150, 151, 152, 165, 166, 167, 168, 169, 174, 175, 176, 182, 184, 185, 187, 195, 205, 215, 232, 289], "techniqu": [9, 13, 67, 110, 154, 155, 156, 157, 158, 174, 175, 176, 191, 287, 289], "tempor": [150, 152, 184, 187], "temporarili": 206, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 204, 206, 208, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "term": [16, 101, 127, 128, 129, 192, 196, 198, 199, 200, 202], "test": [4, 5], "test_backward": 70, "test_siz": 5, "text": [4, 10, 14, 15, 34, 45, 58, 59, 60, 61, 74, 80, 83, 84, 85, 87, 89, 90, 91, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 217, 218, 220, 222, 223, 224, 226, 227, 238, 242, 248, 249, 250, 252, 257, 262, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 282, 284, 285, 286], "th": [101, 165, 166, 168, 169, 174, 175, 176, 222, 223, 226], "than": [0, 1, 76, 77, 80, 83, 106, 141, 143, 167, 190, 196, 242, 260, 269, 274, 280, 282, 287], "thei": [0, 7, 19, 69, 71, 75, 77, 78, 208, 268, 272, 280, 282, 289], "them": [3, 72, 77, 93, 192, 205, 264, 274, 278, 281, 289], "therebi": [154, 183, 184, 186, 187], "theta": [192, 193, 285], "theta_": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "theta_t": [199, 200], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 69, 70, 71, 73, 75, 76, 77, 78, 84, 86, 87, 88, 89, 90, 91, 93, 101, 103, 114, 125, 126, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 220, 221, 225, 228, 230, 233, 234, 235, 236, 242, 246, 247, 248, 249, 250, 253, 255, 257, 260, 261, 262, 263, 269, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "thing": 206, "those": [7, 31, 32, 33, 77, 140], "three": [19, 33, 91, 116, 119, 123, 127, 128, 129, 152, 158, 173, 176, 181, 184, 187], "threshold": [16, 106, 167], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 67, 74, 75, 78, 101, 103, 125, 130, 131, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 212, 219, 220, 225, 268, 270, 272, 273, 276, 289], "throughout": [85, 279], "tile": 267, "time": [0, 3, 14, 31, 32, 33, 89, 127, 143, 145, 150, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 200, 202, 206, 271, 275], "to_tensor": 5, "togeth": [78, 278, 289], "too": 201, "tool": [3, 7, 189, 205, 215, 278, 289], "top": [9, 10, 11, 17, 19, 101, 103, 125, 150, 151, 152, 161, 163, 280, 282], "torch": [62, 263], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 73, 216, 272], "totensor": [278, 289], "trace": [8, 237], "track": [7, 127, 128, 129, 171, 172, 173, 174, 175, 176, 189, 204, 206, 210, 211, 212, 214, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 279], "track_running_stat": [127, 128, 129, 171, 172, 173, 174, 175, 176], "tradit": [193, 194, 197, 198, 199], "trail": 113, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 69, 70, 71, 72, 75, 77, 78, 87, 94, 95, 96, 97, 98, 110, 112, 126, 142, 143, 145, 146, 147, 148, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 278, 281, 282, 283, 284, 285, 286, 289], "trainabl": [70, 171, 172, 173, 174, 175, 176, 189], "transact": 130, "transfer": [112, 174, 175], "transform": [2, 4, 5, 7, 11, 69, 76, 101, 103, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 205, 268], "transform_pipelin": [278, 289], "transformed_imag": [278, 289], "transit": 167, "translat": [183, 186], "transpos": [7, 9, 237], "treat": [0, 71, 177, 189], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 101, 103, 110, 112, 125, 127, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 190, 195, 196, 200, 204, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279], "truncat": 70, "truncate_from": 70, "try": 0, "tune": 289, "tupl": [2, 3, 5, 11, 17, 19, 34, 70, 72, 73, 89, 90, 91, 93, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 150, 151, 152, 162, 177, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 198, 199, 201, 208, 210, 211, 212, 214, 216, 230, 233, 235, 248, 249, 250, 257, 262, 264, 266, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 287], "twice": 269, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 59, 62, 89, 90, 91, 101, 118, 122, 130, 131, 151, 157, 161, 172, 175, 183, 186, 195, 196, 197, 198, 199, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 260, 268], "type": [34, 52, 58, 71, 72, 73, 101, 161, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 263, 268, 279], "typeerror": [0, 1, 2, 72, 190], "typic": [8, 34, 45, 58, 71, 87, 94, 126, 130, 145, 147, 169, 171, 172, 173, 174, 175, 176, 191, 192, 200, 202, 206, 208, 276, 279, 281, 285, 287, 289], "u": [16, 19, 136, 138, 140], "u_": 197, "ultra": 40, "unchang": [71, 98, 141, 143, 144, 145, 154, 155, 156, 157, 158, 162, 270, 273], "undefin": 226, "under": [46, 47, 48, 49, 50, 51, 189], "underbrac": 14, "underdetermin": 16, "undergo": 289, "underli": [0, 7, 23, 24, 25, 27, 28, 263, 266, 270, 272, 277], "understand": [7, 67, 69, 70, 78, 289], "unexpect": [72, 75, 78, 215], "unfold": [92, 100], "unifi": 0, "uniform": [134, 136, 140, 150, 151, 152, 161, 163, 209, 210, 211, 215, 283, 284, 285, 286], "uniformli": [210, 214], "uniniti": [230, 231], "unintend": 206, "union": 62, "uniqu": [9, 16, 18, 74, 76], "unit": [20, 30, 67, 80, 81, 83, 84, 85, 135, 136, 139, 140, 141, 142, 143, 144, 145, 154], "unless": [35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 216], "unlik": [71, 74, 75, 76, 77, 83, 141, 143, 154, 177, 193, 194, 196, 197, 198, 199, 201], "unnecessari": 206, "unpad": 269, "unseen": 289, "unsqueez": 267, "unstabl": 13, "up": [190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 285, 287], "updat": [4, 71, 77, 78, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206], "upon": [24, 69, 74, 75, 76, 77], "upper": [17, 138, 201, 214], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 101, 103, 108, 110, 112, 115, 116, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 246, 248, 249, 250, 257, 262, 268, 269, 271, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "usag": [3, 8, 75, 78, 190, 191, 280, 281, 282, 283, 284, 285, 286, 287], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 74, 75, 76, 77, 189, 194, 278, 279, 289], "usual": 166, "util": [3, 7, 8, 59, 60, 61, 76, 77, 189, 215], "v": [11, 16, 19, 195, 196, 198, 199, 229], "v1": [22, 23, 26, 27, 28, 69], "v2": [26, 28, 69], "v3": [22, 24, 25, 69], "v4": [22, 25, 69], "v_": [192, 195, 196, 198, 199, 200, 202], "v_stack": 277, "v_t": [199, 200], "val": 133, "valid": [127, 128, 129, 131, 150, 151, 152, 261], "valu": [7, 10, 14, 15, 16, 19, 43, 44, 70, 72, 74, 76, 78, 80, 83, 86, 87, 88, 89, 90, 91, 93, 104, 105, 106, 108, 109, 110, 112, 113, 114, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208, 210, 211, 212, 213, 214, 215, 228, 229, 230, 231, 232, 238, 239, 240, 242, 245, 246, 247, 248, 250, 252, 253, 255, 256, 264, 269, 270, 272, 276, 281, 283, 284, 286], "valuabl": 215, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 190], "vanish": [69, 141, 145, 171, 172, 173], "var": 237, "vari": [58, 75, 77, 114, 125, 179, 285], "variabl": [72, 78, 114, 115, 116, 162, 179, 180, 181, 189, 204, 206, 210, 230, 282, 285], "varianc": [85, 94, 110, 112, 127, 128, 129, 135, 136, 139, 140, 145, 154, 171, 172, 173, 174, 175, 176, 177, 195, 196, 197, 198, 199, 212, 262, 285, 289], "variant": [43, 44, 59, 60, 61, 62, 63, 64, 65, 66, 195, 196, 197], "variat": [174, 175, 176, 282, 289], "varieti": [4, 26, 215, 289], "variou": [22, 27, 28, 30, 69, 144, 191, 215, 248, 250, 269, 279], "vdot": 225, "vector": [11, 16, 17, 18, 19, 101, 103, 161, 163, 219, 220, 221, 225], "veloc": [192, 200, 202], "veri": [16, 37, 39, 69, 193], "versa": 201, "versatil": [215, 268], "version": [19, 22, 26, 30, 31, 32, 200, 225, 283], "vertic": [274, 277, 286], "vgg": 62, "vggnet": [29, 63, 64, 65, 66, 69], "vggnet_11": 69, "vggnet_13": 69, "vggnet_16": 69, "vggnet_19": 69, "via": [3, 4, 58], "vice": 201, "video": [91, 98, 129, 152, 176, 184, 187], "view": [26, 30, 75, 183, 184, 185, 186, 187, 272], "vision": [34, 69, 90, 151, 161, 289], "visual": [67, 69], "vol": 69, "volumetr": [91, 98, 129, 152, 176, 184, 187], "vstack": 267, "w": [34, 46, 47, 48, 49, 50, 51, 59, 60, 61, 90, 91, 93, 97, 98, 101, 103, 115, 116, 118, 119, 122, 123, 125, 126, 128, 129, 130, 150, 151, 152, 161, 163, 172, 173, 175, 176, 180, 181, 184, 187, 280, 282], "w_": [90, 91, 115, 116, 118, 119, 122, 123, 125, 151, 152, 180, 181, 183, 184, 186, 187], "w_out": [90, 91, 118, 119, 122, 123], "wa": [23, 154, 155, 156, 157, 158, 206], "wai": [1, 21, 68, 204, 206, 272], "wang": 69, "want": [0, 7, 278, 280], "warn": [74, 76], "we": [3, 7, 205, 268], "weight": [35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 69, 89, 90, 91, 101, 103, 104, 105, 109, 110, 112, 113, 125, 130, 131, 135, 136, 139, 140, 150, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 210, 215], "weight1": 76, "weight2": 76, "weight_decai": [192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "well": [24, 58, 135, 136], "were": 78, "what": 206, "when": [0, 1, 3, 7, 14, 72, 75, 77, 78, 80, 83, 89, 90, 91, 141, 162, 171, 172, 173, 174, 175, 176, 190, 193, 201, 204, 206, 207, 208, 215, 226, 278, 280], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 215, 217, 218, 222, 223, 224, 226, 227, 230, 231, 242, 246, 247, 248, 249, 250, 253, 255, 257, 260, 261, 262, 264, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286], "whether": [1, 10, 22, 23, 24, 72, 73, 135, 136, 200, 204, 210, 211, 212, 214, 216, 230, 231, 248, 249, 250, 257, 262], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 58, 63, 64, 65, 66, 69, 72, 74, 76, 78, 83, 87, 106, 126, 131, 141, 142, 143, 147, 148, 154, 167, 169, 171, 172, 173, 174, 175, 176, 177, 195, 196, 198, 200, 204, 206, 208, 210, 211, 214, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 264, 271, 272, 274, 276, 279, 280, 282, 283, 284, 285, 286, 287, 289], "while": [7, 28, 45, 46, 47, 48, 49, 50, 51, 69, 75, 78, 94, 142, 144, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 272, 274, 283, 289], "who": [7, 74, 75, 76, 77], "whose": [19, 231, 234, 236, 238, 242, 246, 252], "wide": [4, 5, 8, 16, 34, 42, 43, 44, 69, 84, 144, 150, 151, 166], "wide_resnet_101": 69, "wide_resnet_50": 69, "wider": [43, 44, 89, 90], "wideresnet": 69, "width": [43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 90, 91, 93, 97, 98, 115, 116, 118, 119, 122, 123, 125, 126, 131, 151, 152, 172, 173, 175, 176, 180, 181, 183, 184, 186, 187, 280, 282, 287], "window": [117, 118, 119, 121, 122, 123, 182, 183, 184, 185, 186, 187, 193, 248, 250], "wise": [56, 69, 80, 81, 83, 84, 85, 86, 87, 88, 127, 128, 129, 130, 147, 154, 155, 156, 157, 158, 189, 205, 217, 218, 221, 222, 223, 224, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 258, 259, 260, 266, 277], "within": [2, 69, 70, 71, 74, 75, 76, 77, 78, 88, 125, 126, 140, 142, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 191, 206, 228, 242, 285, 289], "without": [7, 45, 74, 75, 76, 101, 103, 150, 151, 152, 161, 163, 204, 207, 248, 270, 272, 276], "won": 206, "work": [1, 2, 3, 7, 9, 205, 208], "workflow": [215, 289], "workload": 7, "wrap": [3, 189, 206, 263], "wrapper": 189, "x": [7, 8, 18, 26, 30, 52, 62, 69, 70, 71, 72, 74, 75, 76, 77, 78, 87, 101, 103, 126, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 214, 230, 231, 246, 268, 280, 281, 282, 283, 284, 285, 286, 287], "x1": 161, "x2": 161, "x_": [166, 169, 268], "x_c": [166, 169], "x_i": 165, "x_k": 166, "xavier": [135, 136, 139, 140], "xavier_norm": 134, "xavier_uniform": 134, "xie": 69, "xy": 268, "x\u2081": 161, "x\u2082": 161, "y": [74, 75, 76, 77, 78, 126, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 210, 211, 212, 214, 230, 231, 268, 283], "y_": [166, 169, 268], "y_c": [166, 169], "y_i": 165, "yann": [5, 69], "yet": [7, 205], "yield": [0, 1, 72, 206], "you": [0, 70, 75, 77, 78, 189, 191, 204, 206, 215, 230, 231, 232, 236, 261, 263, 278, 280, 289], "your": [189, 191, 204, 206, 215, 289], "z": [231, 235, 236], "zeiler": [67, 69], "zero": [14, 16, 17, 24, 70, 80, 83, 89, 90, 91, 94, 95, 96, 97, 98, 117, 118, 119, 121, 122, 123, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 154, 155, 156, 157, 158, 177, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 230, 231, 232, 236, 237, 242, 252, 269], "zero_grad": [73, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 216], "zeros_lik": [231, 237], "zfnet": [29, 69], "zhang": 69, "zisserman": 69, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "SKNet", "models.sk_resnet_18", "models.sk_resnet_34", "models.sk_resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 205, "1d": 205, "2": 205, "2d": 205, "3": 205, "It": [204, 206], "ab": 238, "activ": [82, 100, 149, 160], "ad": 205, "adadelta": 193, "adagrad": 194, "adam": 195, "adamax": 197, "adamw": 196, "adaptive_avg_pool1d": 114, "adaptive_avg_pool2d": 115, "adaptive_avg_pool3d": 116, "adaptiveavgpool1d": 179, "adaptiveavgpool2d": 180, "adaptiveavgpool3d": 181, "add": 217, "addit": 16, "admonit": 208, "advanc": [93, 289], "alexnet": [20, 21], "algebra": 12, "algorithm": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "alias": 208, "align": 205, "alpha_dropout": 94, "alphadropout": 154, "also": 191, "anoth": 263, "arang": 228, "arcco": 239, "architectur": [20, 31, 32, 33, 43, 44, 67], "arcsin": 240, "arctan": 241, "asgd": 192, "attent": 131, "attribut": [5, 20, 26, 30, 34, 45, 52, 58, 62, 67, 71, 73, 74, 75, 76, 77, 78, 127, 128, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 216, 280, 281, 282, 283, 284, 285, 286, 287], "avg_pool1d": 117, "avg_pool2d": 118, "avg_pool3d": 119, "avgpool1d": 182, "avgpool2d": 183, "avgpool3d": 184, "axi": 205, "backpropag": 216, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 130, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "batch_norm": 110, "batchnorm": 132, "batchnorm1d": 171, "batchnorm2d": 172, "batchnorm3d": 173, "bceloss": 165, "behavior": [114, 115, 116, 179, 180, 181], "benefit": 206, "bilinear": [101, 161], "binari": 237, "binary_cross_entropi": 104, "broadcast": 205, "buffer": 71, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 52, 58, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 101, 103, 114, 115, 116, 125, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287], "captur": 207, "case": 208, "centercrop": 280, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 45, 52, 58, 62, 67, 71, 72, 73, 74, 75, 76, 77, 78, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 216, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "clip": 242, "co": 243, "combin": 0, "compon": [3, 7, 189], "compos": 278, "concatdataset": [0, 1], "concaten": 264, "conclus": [3, 7, 189, 204, 205, 206, 215, 279, 289], "constant": 133, "contain": 79, "conv": 132, "conv1d": [89, 150], "conv2d": [90, 151], "conv3d": [91, 152], "convbnrelu1d": 127, "convbnrelu2d": 128, "convbnrelu3d": 129, "convnet": [29, 69], "convolut": [92, 100, 153, 160], "core": 7, "cosh": 244, "creat": [73, 216, 263], "cross_entropi": 105, "crossentropyloss": 166, "cube": 245, "custom": [1, 2, 3, 72, 190, 191, 289], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 72, 190, 191], "definit": 208, "descript": [46, 47, 48, 49, 50, 51, 59, 60, 61, 207], "det": 10, "detail": [16, 43, 44], "diag": 229, "dilat": 93, "div": 218, "dot": 219, "dropout": [95, 99, 100, 155, 159, 160], "dropout1d": [96, 156], "dropout2d": [97, 157], "dropout3d": [98, 158], "eig": 11, "elu": [80, 141], "empti": 230, "empty_lik": 231, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289], "excit": 132, "exp": 246, "ey": 232, "featur": [4, 7, 8, 191, 215, 289], "flatten": 265, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 52, 58, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 101, 103, 114, 115, 116, 125, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287], "from": 263, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 133, 135, 136, 137, 138, 139, 140, 204, 206, 207, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "fuse": 132, "futur": 4, "gelu": [81, 142], "gener": [209, 237], "get": 191, "grad_en": 204, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 101, 103, 125, 130, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "guidelin": 208, "how": [204, 206], "hstack": 266, "huber_loss": 106, "huberloss": 167, "ident": 162, "imag": [6, 288], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 216, "init": [133, 135, 136, 137, 138, 139, 140], "initi": 134, "inner": 220, "input": 263, "inspect": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "instance_norm": 112, "instancenorm1d": 174, "instancenorm2d": 175, "instancenorm3d": 176, "integr": [3, 189, 215, 289], "interpol": 125, "inv": 13, "iter": 216, "kaiming_norm": 135, "kaiming_uniform": 136, "kei": [3, 4, 7, 189, 191, 215, 289], "kernel": 132, "layer": [132, 149, 153, 159, 160, 164, 170, 178, 188], "layer_norm": 113, "layernorm": 177, "leaky_relu": 83, "leakyrelu": 143, "learn": 215, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 100, 102, 103, 160, 163, 164], "list": 263, "load": 1, "log": 247, "loss": [100, 107, 160, 170], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 69, 100, 189, 191, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289], "matmul": 221, "matrix": 221, "matrix_pow": 14, "max": 248, "max_pool1d": 121, "max_pool2d": 122, "max_pool3d": 123, "maximum": 222, "maxpool1d": 185, "maxpool2d": 186, "maxpool3d": 187, "mean": 249, "mechan": 131, "meshgrid": 268, "metadata": 207, "method": [0, 1, 2, 5, 26, 30, 62, 72, 73, 190, 216], "min": 250, "minimum": 223, "mnist": 5, "model": [59, 60, 61, 69, 70, 189], "modul": [72, 160], "moduledict": 74, "modulelist": 75, "more": 215, "mse_loss": 108, "mseloss": 168, "mul": 224, "multipl": [0, 221], "nadam": 198, "new": 205, "newaxi": 205, "nll_loss": 109, "nllloss": 169, "nn": [71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "no_grad": 206, "norm": 15, "normal": [100, 111, 137, 160, 178, 281], "note": 7, "number": 209, "ones": 233, "ones_lik": 234, "oper": [12, 221, 237], "optim": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "organ": 189, "outer": 225, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 189, 191, 215, 289], "pad": 269, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "parameterdict": 76, "parameterlist": 77, "perform": 216, "pinv": 16, "pipelin": [3, 289], "pitfal": [204, 206], "pool": [100, 120, 160, 188], "potenti": [204, 206], "power": 226, "properti": [73, 216], "qr": 17, "radam": 199, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 210, "randint": 211, "randn": 212, "random": [209, 210, 211, 212, 213, 214, 215], "randomcrop": 282, "randomgrayscal": 283, "randomhorizontalflip": 284, "randomrot": 285, "randomverticalflip": 286, "ravel": 270, "reciproc": 251, "refer": [5, 130, 191], "register_model": 207, "relu": [84, 132, 144], "repeat": 271, "reshap": 272, "resiz": 287, "resnet": 34, "resnet_1001": 35, "resnet_101": 36, "resnet_152": 37, "resnet_18": 38, "resnet_200": 39, "resnet_269": 40, "resnet_34": 41, "resnet_50": 42, "resnext": 45, "resnext_101_32x16d": 46, "resnext_101_32x32d": 47, "resnext_101_32x4d": 48, "resnext_101_32x8d": 49, "resnext_101_64x4d": 50, "resnext_50_32x4d": 51, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 131, 133, 135, 136, 137, 138, 139, 140, 204, 206, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "rmsprop": 200, "rotat": 126, "rprop": 201, "rule": 221, "se_resnet_101": 53, "se_resnet_152": 54, "se_resnet_18": 55, "se_resnet_34": 56, "se_resnet_50": 57, "see": 191, "seed": 213, "select": 132, "selectivekernel": 131, "selu": [85, 145], "semodul": 130, "senet": 52, "sequenti": 78, "sgd": 202, "sigmoid": [86, 146], "sign": 252, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "sin": 253, "sinh": 254, "sk_resnet_18": 59, "sk_resnet_34": 60, "sk_resnet_50": 61, "sknet": 58, "slice": 216, "softmax": [87, 147], "solv": 18, "sqrt": 255, "squar": 256, "squeez": [132, 273], "stack": 274, "start": 191, "state": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "sub": 227, "sum": 257, "summar": 70, "summari": 70, "svd": 19, "tabl": 70, "tan": 258, "tanh": [88, 148, 259], "tensor": [205, 216, 237, 263, 267], "through": 216, "tile": 275, "totensor": 279, "trace": 260, "track": 216, "transform": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "transpos": 261, "type": 208, "unari": 237, "unfold": 93, "uniform": [138, 214], "unsqueez": 276, "us": [1, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 263], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 71, 126, 204, 205, 206, 208, 268, 278, 279, 289], "util": [100, 124], "utilit": 267, "var": 262, "vggnet": 62, "vggnet_11": 63, "vggnet_13": 64, "vggnet_16": 65, "vggnet_19": 66, "vstack": 277, "weight": 134, "why": 208, "wide_resnet_101": 43, "wide_resnet_50": 44, "work": [4, 204, 206], "xavier_norm": 139, "xavier_uniform": 140, "zero": 235, "zeros_lik": 236, "zfnet": [67, 68]}})