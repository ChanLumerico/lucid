Search.setIndex({"alltitles": {"@ Operator": [[348, "operator"]], "Activation Functions": [[177, null], [199, null]], "Activation Layers": [[257, null], [275, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[258, "additional-options"]], "Admonitions and Usage Guidelines": [[334, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[190, "advanced-example-with-dilation"]], "Advanced Features": [[423, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [273, "advantages"]], "AlexNet": [[28, null]], "Algorithm": [[318, "algorithm"], [319, "algorithm"], [320, "algorithm"], [321, "algorithm"], [322, "algorithm"], [323, "algorithm"], [324, "algorithm"], [325, "algorithm"], [326, "algorithm"], [327, "algorithm"], [328, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[184, null], [199, null]], "Attention Layers": [[260, null], [275, null]], "Attention Mechanism": [[185, "attention-mechanism"], [235, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [166, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"], [231, "attributes"], [232, "attributes"], [233, "attributes"], [234, "attributes"], [245, "attributes"], [246, "attributes"], [249, "attributes"], [250, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [256, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [265, "attributes"], [267, "attributes"], [268, "attributes"], [269, "attributes"], [270, "attributes"], [271, "attributes"], [276, "attributes"], [277, "attributes"], [278, "attributes"], [280, "attributes"], [281, "attributes"], [282, "attributes"], [283, "attributes"], [284, "attributes"], [286, "attributes"], [287, "attributes"], [288, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [295, "attributes"], [296, "attributes"], [297, "attributes"], [298, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [343, "attributes"], [414, "attributes"], [415, "attributes"], [416, "attributes"], [417, "attributes"], [418, "attributes"], [419, "attributes"], [420, "attributes"], [421, "attributes"]], "Axis Swapping Rules": [[386, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [370, "backward-gradient-calculation"], [371, "backward-gradient-calculation"], [372, "backward-gradient-calculation"], [373, "backward-gradient-calculation"], [374, "backward-gradient-calculation"], [375, "backward-gradient-calculation"], [376, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [378, "backward-gradient-calculation"], [379, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [381, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [399, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [402, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"]], "Behavior": [[214, "behavior"], [215, "behavior"], [216, "behavior"], [295, "behavior"], [296, "behavior"], [297, "behavior"]], "Benefits": [[332, "benefits"]], "Binary Functions": [[365, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[393, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [160, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [232, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [258, "class-signature"], [259, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [265, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [273, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [286, "class-signature"], [287, "class-signature"], [288, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [305, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [313, "class-signature"], [316, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [343, "class-signature"], [412, "class-signature"], [413, "class-signature"], [414, "class-signature"], [415, "class-signature"], [416, "class-signature"], [417, "class-signature"], [418, "class-signature"], [419, "class-signature"], [420, "class-signature"], [421, "class-signature"]], "CoAtNet": [[30, null]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [273, "conclusion"], [315, "conclusion"], [330, "conclusion"], [331, "conclusion"], [332, "conclusion"], [342, "conclusion"], [413, "conclusion"], [423, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[174, null]], "Conv-BatchNorm-ReLU": [[236, null]], "ConvNeXt": [[39, null]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null], [154, "convnets"]], "Convolution Functions": [[189, null], [199, null]], "Convolution Layers": [[264, null], [275, null]], "Core Components": [[15, "core-components"]], "Create a Tensor from a list": [[392, null]], "Creating a Parameter": [[168, null]], "Creating a tensor with gradient tracking": [[343, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[423, "custom-pipelines"]], "Defining a Custom Optimizer": [[317, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[167, null]], "Defining a custom optimizer": [[316, null]], "DenseNet": [[54, null]], "Depthwise Separable Convolution": [[236, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [333, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[198, null], [199, null]], "Dropout Layers": [[272, null], [275, null]], "EfficientNet": [[59, null]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[274, null], [275, null]], "Embedding Process": [[224, "embedding-process"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [190, "example"], [315, null], [315, null], [315, null], [330, "example"], [332, "example"], [335, "example"], [337, "example"], [338, "example"], [339, "example"], [340, "example"], [341, "example"], [342, null], [342, null], [342, null], [355, "example"], [356, "example"], [357, "example"], [358, "example"], [359, "example"], [361, "example"], [362, "example"], [363, "example"], [364, "example"], [366, "example"], [367, "example"], [368, "example"], [369, "example"], [370, "example"], [371, "example"], [372, "example"], [373, "example"], [375, "example"], [377, "example"], [379, "example"], [380, "example"], [381, "example"], [382, "example"], [383, "example"], [384, "example"], [385, "example"], [387, "example"], [388, "example"], [389, "example"], [390, "example"], [391, "example"], [394, "example"], [395, "example"], [397, "example"], [401, "example"], [403, "example"], [405, "example"], [406, "example"], [408, "example"], [409, "example"], [410, "example"], [411, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[331, null]], "Example 2: Adding a new axis to a 2D tensor": [[331, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[331, null]], "Example Usage": [[15, "example-usage"], [74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [227, "example-usage"], [412, "example-usage"], [413, "example-usage"], [423, "example-usage"]], "Example Use Cases": [[334, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [175, "examples"], [176, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [200, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [226, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [259, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [273, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [305, "examples"], [313, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [333, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [360, "examples"], [374, "examples"], [376, "examples"], [378, "examples"], [386, "examples"], [392, "examples"], [393, "examples"], [396, "examples"], [399, "examples"], [400, "examples"], [402, "examples"], [404, "examples"], [407, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [417, "examples"], [418, "examples"], [419, "examples"], [420, "examples"], [421, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [190, "forward-calculation"], [193, "forward-calculation"], [200, "forward-calculation"], [202, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [226, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [259, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [375, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [387, "forward-calculation"], [388, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [391, "forward-calculation"], [395, "forward-calculation"], [397, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"]], "Forward Method": [[307, "forward-method"], [308, "forward-method"], [309, "forward-method"], [310, "forward-method"], [311, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [175, "function-signature"], [176, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [200, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [226, "function-signature"], [227, "function-signature"], [237, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [330, "function-signature"], [332, "function-signature"], [333, "function-signature"], [335, "function-signature"], [337, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [344, "function-signature"], [345, "function-signature"], [346, "function-signature"], [347, "function-signature"], [348, "function-signature"], [349, "function-signature"], [350, "function-signature"], [351, "function-signature"], [352, "function-signature"], [353, "function-signature"], [354, "function-signature"], [355, "function-signature"], [356, "function-signature"], [357, "function-signature"], [358, "function-signature"], [359, "function-signature"], [360, "function-signature"], [361, "function-signature"], [362, "function-signature"], [363, "function-signature"], [364, "function-signature"], [366, "function-signature"], [367, "function-signature"], [368, "function-signature"], [369, "function-signature"], [370, "function-signature"], [371, "function-signature"], [372, "function-signature"], [373, "function-signature"], [374, "function-signature"], [375, "function-signature"], [376, "function-signature"], [377, "function-signature"], [378, "function-signature"], [379, "function-signature"], [380, "function-signature"], [381, "function-signature"], [382, "function-signature"], [383, "function-signature"], [384, "function-signature"], [385, "function-signature"], [386, "function-signature"], [387, "function-signature"], [388, "function-signature"], [389, "function-signature"], [390, "function-signature"], [391, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [406, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"]], "Fused Layers": [[236, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[317, "getting-started"]], "Gradient Computation": [[394, "gradient-computation"]], "How It Works": [[330, "how-it-works"], [332, "how-it-works"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[422, null]], "Inception": [[73, null]], "InceptionNeXt": [[77, null]], "InceptionResNet": [[82, null]], "Indexing and slicing": [[343, null]], "Inspecting Optimizer State": [[317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null]], "Integration with lucid": [[3, "integration-with-lucid"], [315, "integration-with-lucid"], [342, "integration-with-lucid"], [423, "integration-with-lucid"]], "Iterating through a tensor": [[343, null]], "Key Components": [[3, "key-components"], [315, "key-components"]], "Key Features": [[4, "key-features"], [15, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [317, "key-features"], [342, "key-features"]], "Key Transformations": [[423, "key-transformations"]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[86, null]], "Learn More": [[342, null]], "Limitations": [[15, "limitations"]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[199, null], [201, null]], "Linear Layers": [[275, null], [279, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[199, null], [206, null]], "Loss Layers": [[275, null], [285, null]], "Lucid": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [273, "mathematical-definition"]], "Mathematical Details": [[258, "mathematical-details"], [307, "mathematical-details"], [308, "mathematical-details"], [309, "mathematical-details"], [310, "mathematical-details"], [311, "mathematical-details"]], "Mathematical Expression": [[210, "mathematical-expression"], [404, "mathematical-expression"]], "Matrix Multiplication Rules": [[348, "matrix-multiplication-rules"]], "Metadata Captured": [[333, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [167, "methods"], [168, "methods"], [316, "methods"], [343, "methods"]], "MobileNet": [[90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[275, null]], "Normalization Functions": [[199, null], [211, null]], "Normalization Layers": [[275, null], [294, null]], "Notes": [[15, "notes"]], "Optimizers": [[329, null]], "Organizing Models": [[315, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [15, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [258, "overview"], [307, "overview"], [308, "overview"], [309, "overview"], [310, "overview"], [311, "overview"], [315, "overview"], [317, "overview"], [342, "overview"], [423, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [200, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [256, "parameters"], [258, "parameters"], [259, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [273, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [305, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [313, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [332, "parameters"], [333, "parameters"], [335, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"]], "Performing backpropagation": [[343, null]], "Pooling Functions": [[199, null], [220, null]], "Pooling Layers": [[275, null], [304, null]], "Potential Pitfalls": [[330, "potential-pitfalls"], [332, "potential-pitfalls"]], "Properties": [[168, "properties"], [343, "properties"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[336, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [234, "references"], [317, "references"]], "Regularization": [[192, "regularization"]], "ResNeSt": [[103, null]], "ResNeXt": [[123, null]], "ResNet": [[112, null]], "Return Values": [[404, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [175, "returns"], [176, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [200, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [226, "returns"], [227, "returns"], [235, "returns"], [237, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [251, "returns"], [273, "returns"], [305, "returns"], [330, "returns"], [332, "returns"], [335, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [344, "returns"], [345, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [354, "returns"], [355, "returns"], [356, "returns"], [357, "returns"], [358, "returns"], [359, "returns"], [360, "returns"], [361, "returns"], [362, "returns"], [363, "returns"], [364, "returns"], [366, "returns"], [367, "returns"], [368, "returns"], [369, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [375, "returns"], [376, "returns"], [377, "returns"], [378, "returns"], [379, "returns"], [380, "returns"], [381, "returns"], [382, "returns"], [383, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [393, "returns"], [394, "returns"], [395, "returns"], [396, "returns"], [397, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"]], "SENet": [[130, null]], "SKNet": [[140, null]], "See Also": [[317, "see-also"]], "Selective Kernel": [[236, null]], "Sparse Layers": [[275, null], [306, null]], "Squeeze-and-Excitation": [[236, null]], "Summary Table": [[155, "summary-table"]], "Tensor Generating Functions": [[365, null]], "Tensor Operations": [[365, null]], "Tensor Utilites": [[398, null]], "Transformer": [[156, null]], "Transformer Layers": [[275, null], [312, null]], "Transformers": [[154, "transformers"], [159, null]], "Type Definitions": [[334, "type-definitions"]], "Unary Functions": [[365, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [166, "usage"], [227, "usage"], [330, "usage"], [331, "usage"], [332, "usage"], [399, "usage"], [412, "usage"], [413, "usage"], [423, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [258, "usage-example"], [307, "usage-example"], [308, "usage-example"], [309, "usage-example"], [310, "usage-example"], [311, "usage-example"]], "Use another Tensor as input": [[392, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[318, null]], "Using the Adadelta Optimizer": [[319, null]], "Using the Adagrad Optimizer": [[320, null]], "Using the Adam Optimizer": [[321, null]], "Using the AdamW Optimizer": [[322, null]], "Using the Adamax Optimizer": [[323, null]], "Using the NAdam Optimizer": [[324, null]], "Using the RAdam Optimizer": [[325, null]], "Using the RMSprop Optimizer": [[326, null]], "Using the Rprop Optimizer": [[327, null]], "Using the SGD Optimizer": [[328, null]], "Utility Functions": [[199, null], [225, null]], "VGGNet": [[145, null]], "ViT": [[160, null]], "Vision Layers": [[275, null], [314, null]], "Weight Initializations": [[238, null]], "Why Use Type Aliases?": [[334, null]], "Xception": [[150, null]], "ZFNet": [[152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lucid.Tensor": [[343, null]], "lucid.abs": [[366, null]], "lucid.add": [[344, null]], "lucid.arange": [[355, null]], "lucid.arccos": [[367, null]], "lucid.arcsin": [[368, null]], "lucid.arctan": [[369, null]], "lucid.broadcast_to": [[393, null]], "lucid.chunk": [[394, null]], "lucid.clip": [[370, null]], "lucid.concatenate": [[395, null]], "lucid.cos": [[371, null]], "lucid.cosh": [[372, null]], "lucid.cube": [[373, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[356, null]], "lucid.div": [[345, null]], "lucid.dot": [[346, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[357, null]], "lucid.empty_like": [[358, null]], "lucid.exp": [[374, null]], "lucid.eye": [[359, null]], "lucid.flatten": [[396, null]], "lucid.grad_enabled": [[330, null]], "lucid.hstack": [[397, null]], "lucid.inner": [[347, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[360, null]], "lucid.log": [[375, null]], "lucid.matmul": [[348, null]], "lucid.max": [[376, null]], "lucid.maximum": [[349, null]], "lucid.mean": [[377, null]], "lucid.meshgrid": [[399, null]], "lucid.min": [[378, null]], "lucid.minimum": [[350, null]], "lucid.models": [[154, null]], "lucid.mul": [[351, null]], "lucid.newaxis": [[331, null]], "lucid.nn": [[315, null]], "lucid.nn.functional": [[199, null]], "lucid.no_grad": [[332, null]], "lucid.ones": [[361, null]], "lucid.ones_like": [[362, null]], "lucid.optim": [[317, null]], "lucid.outer": [[352, null]], "lucid.pad": [[400, null]], "lucid.power": [[353, null]], "lucid.random": [[342, null]], "lucid.random.bernoulli": [[335, null]], "lucid.random.rand": [[337, null]], "lucid.random.randint": [[338, null]], "lucid.random.randn": [[339, null]], "lucid.random.seed": [[340, null]], "lucid.random.uniform": [[341, null]], "lucid.ravel": [[401, null]], "lucid.reciprocal": [[379, null]], "lucid.register_model": [[333, null]], "lucid.repeat": [[402, null]], "lucid.reshape": [[403, null]], "lucid.sign": [[380, null]], "lucid.sin": [[381, null]], "lucid.sinh": [[382, null]], "lucid.split": [[404, null]], "lucid.sqrt": [[383, null]], "lucid.square": [[384, null]], "lucid.squeeze": [[405, null]], "lucid.stack": [[406, null]], "lucid.sub": [[354, null]], "lucid.sum": [[385, null]], "lucid.swapaxes": [[386, null]], "lucid.tan": [[387, null]], "lucid.tanh": [[388, null]], "lucid.tensor": [[392, null]], "lucid.tile": [[407, null]], "lucid.trace": [[389, null]], "lucid.transforms": [[423, null]], "lucid.transpose": [[390, null]], "lucid.tril": [[408, null]], "lucid.triu": [[409, null]], "lucid.types": [[334, null]], "lucid.unsqueeze": [[410, null]], "lucid.var": [[391, null]], "lucid.vstack": [[411, null]], "lucid.zeros": [[363, null]], "lucid.zeros_like": [[364, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[295, null]], "nn.AdaptiveAvgPool2d": [[296, null]], "nn.AdaptiveAvgPool3d": [[297, null]], "nn.AlphaDropout": [[265, null]], "nn.AvgPool1d": [[298, null]], "nn.AvgPool2d": [[299, null]], "nn.AvgPool3d": [[300, null]], "nn.BCELoss": [[280, null]], "nn.BatchNorm1d": [[286, null]], "nn.BatchNorm2d": [[287, null]], "nn.BatchNorm3d": [[288, null]], "nn.Bilinear": [[276, null]], "nn.Buffer": [[166, null]], "nn.Conv1d": [[261, null]], "nn.Conv2d": [[262, null]], "nn.Conv3d": [[263, null]], "nn.ConvBNReLU1d": [[228, null]], "nn.ConvBNReLU2d": [[229, null]], "nn.ConvBNReLU3d": [[230, null]], "nn.CrossEntropyLoss": [[281, null]], "nn.DepthSeparableConv1d": [[231, null]], "nn.DepthSeparableConv2d": [[232, null]], "nn.DepthSeparableConv3d": [[233, null]], "nn.DropBlock": [[266, null]], "nn.DropPath": [[267, null]], "nn.Dropout": [[268, null]], "nn.Dropout1d": [[269, null]], "nn.Dropout2d": [[270, null]], "nn.Dropout3d": [[271, null]], "nn.ELU": [[245, null]], "nn.Embedding": [[305, null]], "nn.GELU": [[246, null]], "nn.GlobalResponseNorm": [[289, null]], "nn.HardSigmoid": [[247, null]], "nn.HardSwish": [[248, null]], "nn.HuberLoss": [[282, null]], "nn.Identity": [[277, null]], "nn.InstanceNorm1d": [[290, null]], "nn.InstanceNorm2d": [[291, null]], "nn.InstanceNorm3d": [[292, null]], "nn.LayerNorm": [[293, null]], "nn.LeakyReLU": [[249, null]], "nn.Linear": [[278, null]], "nn.MSELoss": [[283, null]], "nn.MaxPool1d": [[301, null]], "nn.MaxPool2d": [[302, null]], "nn.MaxPool3d": [[303, null]], "nn.Module": [[167, null]], "nn.ModuleDict": [[169, null]], "nn.ModuleList": [[170, null]], "nn.MultiHeadAttention": [[258, null]], "nn.NLLLoss": [[284, null]], "nn.Parameter": [[168, null]], "nn.ParameterDict": [[171, null]], "nn.ParameterList": [[172, null]], "nn.ReLU": [[250, null]], "nn.ReLU6": [[251, null]], "nn.Rearrange": [[273, null]], "nn.SELU": [[252, null]], "nn.SEModule": [[234, null]], "nn.ScaledDotProductAttention": [[259, null]], "nn.SelectiveKernel": [[235, null]], "nn.Sequential": [[173, null]], "nn.Sigmoid": [[253, null]], "nn.Softmax": [[254, null]], "nn.Swish": [[255, null]], "nn.Tanh": [[256, null]], "nn.Transformer": [[307, null]], "nn.TransformerDecoder": [[308, null]], "nn.TransformerDecoderLayer": [[309, null]], "nn.TransformerEncoder": [[310, null]], "nn.TransformerEncoderLayer": [[311, null]], "nn.Upsample": [[313, null]], "nn.functional.adaptive_avg_pool1d": [[214, null]], "nn.functional.adaptive_avg_pool2d": [[215, null]], "nn.functional.adaptive_avg_pool3d": [[216, null]], "nn.functional.alpha_dropout": [[191, null]], "nn.functional.avg_pool1d": [[217, null]], "nn.functional.avg_pool2d": [[218, null]], "nn.functional.avg_pool3d": [[219, null]], "nn.functional.batch_norm": [[209, null]], "nn.functional.bilinear": [[200, null]], "nn.functional.binary_cross_entropy": [[203, null]], "nn.functional.conv1d": [[186, null]], "nn.functional.conv2d": [[187, null]], "nn.functional.conv3d": [[188, null]], "nn.functional.cross_entropy": [[204, null]], "nn.functional.drop_block": [[192, null]], "nn.functional.drop_path": [[193, null]], "nn.functional.dropout": [[194, null]], "nn.functional.dropout1d": [[195, null]], "nn.functional.dropout2d": [[196, null]], "nn.functional.dropout3d": [[197, null]], "nn.functional.elu": [[175, null]], "nn.functional.embedding": [[224, null]], "nn.functional.gelu": [[176, null]], "nn.functional.global_response_norm": [[210, null]], "nn.functional.huber_loss": [[205, null]], "nn.functional.instance_norm": [[212, null]], "nn.functional.interpolate": [[226, null]], "nn.functional.layer_norm": [[213, null]], "nn.functional.leaky_relu": [[178, null]], "nn.functional.linear": [[202, null]], "nn.functional.max_pool1d": [[221, null]], "nn.functional.max_pool2d": [[222, null]], "nn.functional.max_pool3d": [[223, null]], "nn.functional.mse_loss": [[207, null]], "nn.functional.nll_loss": [[208, null]], "nn.functional.relu": [[179, null]], "nn.functional.rotate": [[227, null]], "nn.functional.scaled_dot_product_attention": [[185, null]], "nn.functional.selu": [[180, null]], "nn.functional.sigmoid": [[181, null]], "nn.functional.softmax": [[182, null]], "nn.functional.tanh": [[183, null]], "nn.functional.unfold": [[190, null]], "nn.init.constant": [[237, null]], "nn.init.kaiming_normal": [[239, null]], "nn.init.kaiming_uniform": [[240, null]], "nn.init.normal": [[241, null]], "nn.init.uniform": [[242, null]], "nn.init.xavier_normal": [[243, null]], "nn.init.xavier_uniform": [[244, null]], "optim.ASGD": [[318, null]], "optim.Adadelta": [[319, null]], "optim.Adagrad": [[320, null]], "optim.Adam": [[321, null]], "optim.AdamW": [[322, null]], "optim.Adamax": [[323, null]], "optim.NAdam": [[324, null]], "optim.Optimizer": [[316, null]], "optim.RAdam": [[325, null]], "optim.RMSprop": [[326, null]], "optim.Rprop": [[327, null]], "optim.SGD": [[328, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[414, null]], "transforms.Compose": [[412, null]], "transforms.Normalize": [[415, null]], "transforms.RandomCrop": [[416, null]], "transforms.RandomGrayscale": [[417, null]], "transforms.RandomHorizontalFlip": [[418, null]], "transforms.RandomRotation": [[419, null]], "transforms.RandomVerticalFlip": [[420, null]], "transforms.Resize": [[421, null]], "transforms.ToTensor": [[413, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[161, null]], "vit_huge": [[162, null]], "vit_large": [[163, null]], "vit_small": [[164, null]], "vit_tiny": [[165, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/index", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/index.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[366, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[319, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[320, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[321, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[323, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[322, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[214, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[216, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[295, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[296, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[297, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[344, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[191, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[265, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[355, "lucid.arange", false]], "arccos() (in module lucid)": [[367, "lucid.arccos", false]], "arcsin() (in module lucid)": [[368, "lucid.arcsin", false]], "arctan() (in module lucid)": [[369, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[318, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[217, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[219, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[298, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[299, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[300, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[209, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[286, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[287, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[288, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[280, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[335, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[276, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[200, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[203, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[393, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[166, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[414, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[394, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[370, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[412, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[395, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[237, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[261, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[186, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[262, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[187, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[263, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[188, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[228, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[229, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[230, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[371, "lucid.cos", false]], "cosh() (in module lucid)": [[372, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[204, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[281, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[373, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[231, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[232, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[233, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[356, "lucid.diag", false]], "div() (in module lucid)": [[345, "lucid.div", false]], "dot() (in module lucid)": [[346, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[192, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[193, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[266, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[268, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[194, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[269, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[195, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[270, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[196, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[271, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[197, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[267, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[245, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[175, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[305, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[357, "lucid.empty", false]], "empty_like() (in module lucid)": [[358, "lucid.empty_like", false]], "exp() (in module lucid)": [[374, "lucid.exp", false]], "eye() (in module lucid)": [[359, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[396, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[246, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[176, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[210, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[289, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[330, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[247, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[248, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[397, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[205, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[282, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[277, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[347, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[212, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[290, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[291, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[292, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[239, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[240, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[213, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[293, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[178, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[249, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[278, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[202, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[360, "lucid.linspace", false]], "log() (in module lucid)": [[375, "lucid.log", false]], "lucid": [[15, "module-lucid", false]], "matmul() (in module lucid)": [[348, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[376, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[349, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[301, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[302, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[303, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[377, "lucid.mean", false]], "meshgrid() (in module lucid)": [[399, "lucid.meshgrid", false]], "min() (in module lucid)": [[378, "lucid.min", false]], "minimum() (in module lucid)": [[350, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[167, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[169, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[170, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[207, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[283, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[351, "lucid.mul", false]], "multiheadattention (class in lucid.nn)": [[258, "lucid.nn.MultiHeadAttention", false]], "nadam (class in lucid.optim)": [[324, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[208, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[284, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[332, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[241, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[415, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[361, "lucid.ones", false]], "ones_like() (in module lucid)": [[362, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[316, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[352, "lucid.outer", false]], "pad() (in module lucid)": [[400, "lucid.pad", false]], "parameter (class in lucid.nn)": [[168, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[171, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[172, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[353, "lucid.power", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[325, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[337, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[338, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[339, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[416, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[417, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[418, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[419, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[420, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[401, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[273, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[379, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "register_model() (in module lucid)": [[333, "lucid.register_model", false]], "relu (class in lucid.nn)": [[250, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[179, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[251, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[402, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[403, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[421, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[326, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[327, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[185, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[259, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[340, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[235, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[252, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[234, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[173, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[328, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[253, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[181, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[380, "lucid.sign", false]], "sin() (in module lucid)": [[381, "lucid.sin", false]], "sinh() (in module lucid)": [[382, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[254, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[182, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[404, "lucid.split", false]], "sqrt() (in module lucid)": [[383, "lucid.sqrt", false]], "square() (in module lucid)": [[384, "lucid.square", false]], "squeeze() (in module lucid)": [[405, "lucid.squeeze", false]], "stack() (in module lucid)": [[406, "lucid.stack", false]], "sub() (in module lucid)": [[354, "lucid.sub", false]], "sum() (in module lucid)": [[385, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[386, "lucid.swapaxes", false]], "swish (class in lucid.nn)": [[255, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[387, "lucid.tan", false]], "tanh (class in lucid.nn)": [[256, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[388, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[183, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[343, "lucid.Tensor", false]], "tensor() (in module lucid)": [[392, "lucid.tensor", false]], "tile() (in module lucid)": [[407, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[413, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[389, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[307, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[308, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[309, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[310, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[311, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[390, "lucid.transpose", false]], "tril() (in module lucid)": [[408, "lucid.tril", false]], "triu() (in module lucid)": [[409, "lucid.triu", false]], "unfold() (in module lucid.nn.functional)": [[190, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[242, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[341, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[410, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[313, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[391, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[160, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[161, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[162, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[163, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[164, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[165, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[411, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[243, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[244, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[363, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[364, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[343, 1, 1, "", "Tensor"], [366, 2, 1, "", "abs"], [344, 2, 1, "", "add"], [355, 2, 1, "", "arange"], [367, 2, 1, "", "arccos"], [368, 2, 1, "", "arcsin"], [369, 2, 1, "", "arctan"], [393, 2, 1, "", "broadcast_to"], [394, 2, 1, "", "chunk"], [370, 2, 1, "", "clip"], [395, 2, 1, "", "concatenate"], [371, 2, 1, "", "cos"], [372, 2, 1, "", "cosh"], [373, 2, 1, "", "cube"], [356, 2, 1, "", "diag"], [345, 2, 1, "", "div"], [346, 2, 1, "", "dot"], [357, 2, 1, "", "empty"], [358, 2, 1, "", "empty_like"], [374, 2, 1, "", "exp"], [359, 2, 1, "", "eye"], [396, 2, 1, "", "flatten"], [330, 2, 1, "", "grad_enabled"], [397, 2, 1, "", "hstack"], [347, 2, 1, "", "inner"], [360, 2, 1, "", "linspace"], [375, 2, 1, "", "log"], [348, 2, 1, "", "matmul"], [376, 2, 1, "", "max"], [349, 2, 1, "", "maximum"], [377, 2, 1, "", "mean"], [399, 2, 1, "", "meshgrid"], [378, 2, 1, "", "min"], [350, 2, 1, "", "minimum"], [351, 2, 1, "", "mul"], [332, 2, 1, "", "no_grad"], [361, 2, 1, "", "ones"], [362, 2, 1, "", "ones_like"], [352, 2, 1, "", "outer"], [400, 2, 1, "", "pad"], [353, 2, 1, "", "power"], [401, 2, 1, "", "ravel"], [379, 2, 1, "", "reciprocal"], [333, 2, 1, "", "register_model"], [402, 2, 1, "", "repeat"], [403, 2, 1, "", "reshape"], [380, 2, 1, "", "sign"], [381, 2, 1, "", "sin"], [382, 2, 1, "", "sinh"], [404, 2, 1, "", "split"], [383, 2, 1, "", "sqrt"], [384, 2, 1, "", "square"], [405, 2, 1, "", "squeeze"], [406, 2, 1, "", "stack"], [354, 2, 1, "", "sub"], [385, 2, 1, "", "sum"], [386, 2, 1, "", "swapaxes"], [387, 2, 1, "", "tan"], [388, 2, 1, "", "tanh"], [392, 2, 1, "", "tensor"], [407, 2, 1, "", "tile"], [389, 2, 1, "", "trace"], [390, 2, 1, "", "transpose"], [408, 2, 1, "", "tril"], [409, 2, 1, "", "triu"], [410, 2, 1, "", "unsqueeze"], [391, 2, 1, "", "var"], [411, 2, 1, "", "vstack"], [363, 2, 1, "", "zeros"], [364, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [160, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [161, 2, 1, "", "vit_base"], [162, 2, 1, "", "vit_huge"], [163, 2, 1, "", "vit_large"], [164, 2, 1, "", "vit_small"], [165, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[295, 1, 1, "", "AdaptiveAvgPool1d"], [296, 1, 1, "", "AdaptiveAvgPool2d"], [297, 1, 1, "", "AdaptiveAvgPool3d"], [265, 1, 1, "", "AlphaDropout"], [298, 1, 1, "", "AvgPool1d"], [299, 1, 1, "", "AvgPool2d"], [300, 1, 1, "", "AvgPool3d"], [280, 1, 1, "", "BCELoss"], [286, 1, 1, "", "BatchNorm1d"], [287, 1, 1, "", "BatchNorm2d"], [288, 1, 1, "", "BatchNorm3d"], [276, 1, 1, "", "Bilinear"], [166, 1, 1, "", "Buffer"], [261, 1, 1, "", "Conv1d"], [262, 1, 1, "", "Conv2d"], [263, 1, 1, "", "Conv3d"], [228, 1, 1, "", "ConvBNReLU1d"], [229, 1, 1, "", "ConvBNReLU2d"], [230, 1, 1, "", "ConvBNReLU3d"], [281, 1, 1, "", "CrossEntropyLoss"], [231, 1, 1, "", "DepthSeparableConv1d"], [232, 1, 1, "", "DepthSeparableConv2d"], [233, 1, 1, "", "DepthSeparableConv3d"], [266, 1, 1, "", "DropBlock"], [267, 1, 1, "", "DropPath"], [268, 1, 1, "", "Dropout"], [269, 1, 1, "", "Dropout1d"], [270, 1, 1, "", "Dropout2d"], [271, 1, 1, "", "Dropout3d"], [245, 1, 1, "", "ELU"], [305, 1, 1, "", "Embedding"], [246, 1, 1, "", "GELU"], [289, 1, 1, "", "GlobalResponseNorm"], [247, 1, 1, "", "HardSigmoid"], [248, 1, 1, "", "HardSwish"], [282, 1, 1, "", "HuberLoss"], [277, 1, 1, "", "Identity"], [290, 1, 1, "", "InstanceNorm1d"], [291, 1, 1, "", "InstanceNorm2d"], [292, 1, 1, "", "InstanceNorm3d"], [293, 1, 1, "", "LayerNorm"], [249, 1, 1, "", "LeakyReLU"], [278, 1, 1, "", "Linear"], [283, 1, 1, "", "MSELoss"], [301, 1, 1, "", "MaxPool1d"], [302, 1, 1, "", "MaxPool2d"], [303, 1, 1, "", "MaxPool3d"], [167, 1, 1, "", "Module"], [169, 1, 1, "", "ModuleDict"], [170, 1, 1, "", "ModuleList"], [258, 1, 1, "", "MultiHeadAttention"], [284, 1, 1, "", "NLLLoss"], [168, 1, 1, "", "Parameter"], [171, 1, 1, "", "ParameterDict"], [172, 1, 1, "", "ParameterList"], [250, 1, 1, "", "ReLU"], [251, 1, 1, "", "ReLU6"], [273, 1, 1, "", "Rearrange"], [252, 1, 1, "", "SELU"], [234, 1, 1, "", "SEModule"], [259, 1, 1, "", "ScaledDotProductAttention"], [235, 1, 1, "", "SelectiveKernel"], [173, 1, 1, "", "Sequential"], [253, 1, 1, "", "Sigmoid"], [254, 1, 1, "", "Softmax"], [255, 1, 1, "", "Swish"], [256, 1, 1, "", "Tanh"], [307, 1, 1, "", "Transformer"], [308, 1, 1, "", "TransformerDecoder"], [309, 1, 1, "", "TransformerDecoderLayer"], [310, 1, 1, "", "TransformerEncoder"], [311, 1, 1, "", "TransformerEncoderLayer"], [313, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[214, 2, 1, "", "adaptive_avg_pool1d"], [215, 2, 1, "", "adaptive_avg_pool2d"], [216, 2, 1, "", "adaptive_avg_pool3d"], [191, 2, 1, "", "alpha_dropout"], [217, 2, 1, "", "avg_pool1d"], [218, 2, 1, "", "avg_pool2d"], [219, 2, 1, "", "avg_pool3d"], [209, 2, 1, "", "batch_norm"], [200, 2, 1, "", "bilinear"], [203, 2, 1, "", "binary_cross_entropy"], [186, 2, 1, "", "conv1d"], [187, 2, 1, "", "conv2d"], [188, 2, 1, "", "conv3d"], [204, 2, 1, "", "cross_entropy"], [192, 2, 1, "", "drop_block"], [193, 2, 1, "", "drop_path"], [194, 2, 1, "", "dropout"], [195, 2, 1, "", "dropout1d"], [196, 2, 1, "", "dropout2d"], [197, 2, 1, "", "dropout3d"], [175, 2, 1, "", "elu"], [224, 2, 1, "", "embedding"], [176, 2, 1, "", "gelu"], [210, 2, 1, "", "global_response_norm"], [205, 2, 1, "", "huber_loss"], [212, 2, 1, "", "instance_norm"], [226, 2, 1, "", "interpolate"], [213, 2, 1, "", "layer_norm"], [178, 2, 1, "", "leaky_relu"], [202, 2, 1, "", "linear"], [221, 2, 1, "", "max_pool1d"], [222, 2, 1, "", "max_pool2d"], [223, 2, 1, "", "max_pool3d"], [207, 2, 1, "", "mse_loss"], [208, 2, 1, "", "nll_loss"], [179, 2, 1, "", "relu"], [227, 2, 1, "", "rotate"], [185, 2, 1, "", "scaled_dot_product_attention"], [180, 2, 1, "", "selu"], [181, 2, 1, "", "sigmoid"], [182, 2, 1, "", "softmax"], [183, 2, 1, "", "tanh"], [190, 2, 1, "", "unfold"]], "lucid.nn.init": [[237, 2, 1, "", "constant"], [239, 2, 1, "", "kaiming_normal"], [240, 2, 1, "", "kaiming_uniform"], [241, 2, 1, "", "normal"], [242, 2, 1, "", "uniform"], [243, 2, 1, "", "xavier_normal"], [244, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[318, 1, 1, "", "ASGD"], [319, 1, 1, "", "Adadelta"], [320, 1, 1, "", "Adagrad"], [321, 1, 1, "", "Adam"], [322, 1, 1, "", "AdamW"], [323, 1, 1, "", "Adamax"], [324, 1, 1, "", "NAdam"], [316, 1, 1, "", "Optimizer"], [325, 1, 1, "", "RAdam"], [326, 1, 1, "", "RMSprop"], [327, 1, 1, "", "Rprop"], [328, 1, 1, "", "SGD"]], "lucid.random": [[335, 2, 1, "", "bernoulli"], [337, 2, 1, "", "rand"], [338, 2, 1, "", "randint"], [339, 2, 1, "", "randn"], [340, 2, 1, "", "seed"], [341, 2, 1, "", "uniform"]], "lucid.transforms": [[414, 1, 1, "", "CenterCrop"], [412, 1, 1, "", "Compose"], [415, 1, 1, "", "Normalize"], [416, 1, 1, "", "RandomCrop"], [417, 1, 1, "", "RandomGrayscale"], [418, 1, 1, "", "RandomHorizontalFlip"], [419, 1, 1, "", "RandomRotation"], [420, 1, 1, "", "RandomVerticalFlip"], [421, 1, 1, "", "Resize"], [413, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 96, 97, 102, 104, 105, 106, 107, 108, 109, 154, 155, 156, 160, 164, 166, 167, 168, 169, 171, 172, 173, 185, 214, 215, 216, 235, 259, 281, 284, 295, 296, 297, 298, 301, 302, 307, 315, 316, 317, 331, 333, 348, 356, 375, 377, 385, 386, 389, 391, 392, 405, 413, 415, 423], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 86, 94, 130, 154, 156, 160, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423], "000": [5, 6, 7, 8, 157, 158, 357, 358], "0000": [281, 282, 284], "0001": 318, "000e": [357, 358], "001": [318, 321, 322, 324, 325, 328], "002": [323, 324], "004": 324, "005": 249, "008": [94, 154], "00808": 154, "01": [178, 249, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328], "01051757": 339, "011": [37, 154], "013": [57, 154], "016": [113, 154], "0205": 281, "0217": 281, "0227": 281, "024": [100, 135, 154], "026": [124, 154], "028": [129, 154], "0299": 281, "032": [69, 120, 154], "03545": 154, "044715": [176, 246], "0450": 281, "0451": 281, "046": [67, 154], "047": [147, 154], "04719755": 367, "0474259": 181, "048": [137, 154], "0480": 281, "04861": 154, "05": [209, 212, 213, 228, 229, 230, 249, 286, 287, 288, 290, 291, 292, 293, 307, 309, 311], "050": [154, 164], "0507": [180, 252], "06": [39, 77, 210, 289, 319, 327], "066": [51, 154], "069": [107, 118, 154], "07": [192, 203, 204, 266, 280, 281], "070": [102, 154], "0700": 281, "0706508": 256, "071": [113, 154], "0721": 281, "073": [143, 154], "07722396": 255, "0794": 284, "08": [321, 322, 323, 324, 325, 326], "0802": 284, "083": [81, 154], "08333333": 24, "085537": 374, "088": [135, 154], "08955": 154, "0900": [254, 281], "096": [33, 151, 154], "0986": [182, 254], "09861229": 375, "0992": 281, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 154, 155, 156, 160, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "10": [0, 1, 2, 3, 5, 6, 7, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 154, 155, 169, 170, 173, 187, 188, 200, 202, 214, 258, 261, 262, 263, 270, 271, 276, 278, 287, 288, 291, 295, 299, 300, 302, 307, 308, 309, 310, 311, 320, 333, 338, 341, 342, 345, 348, 351, 352, 360, 369, 385, 414, 416, 417, 419], "100": [6, 29, 69, 70, 71, 72, 146, 147, 148, 149, 154, 333, 423], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165], "1000000": 318, "1001": [113, 154, 281], "1003": 281, "1007": 154, "10096": 154, "101": [103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138, 154], "10106": 154, "1014": 180, "102": [118, 154], "1024": [33, 38, 158, 273], "1025": [170, 173], "1026": [170, 173], "1027": [170, 173], "10499": 181, "1050": 253, "1054": 284, "1056": [170, 173], "10590": 154, "107": [38, 154], "108": [70, 154], "1097": 154, "11": [102, 116, 133, 145, 146, 154, 200, 261, 262, 263, 270, 276, 287, 288, 291, 299, 300, 302, 348, 414, 415, 416, 417, 419], "110": [108, 154], "1105": 154, "1109": 154, "111": [63, 154], "1111": 280, "112": [96, 109, 154], "1134": 200, "114b": 417, "119": 200, "1192": [181, 182, 254], "12": [35, 36, 54, 55, 56, 57, 58, 64, 87, 88, 154, 157, 158, 160, 171, 200, 216, 261, 262, 263, 270, 271, 276, 287, 288, 291, 297, 299, 300, 302, 348, 352, 353, 414, 416, 417, 419], "120": [69, 86, 89, 96, 97, 154], "12000": [157, 158], "121": [54, 55, 154], "123": [239, 240, 241, 242, 243, 244, 340, 341], "124": [36, 154, 239, 240, 243, 244], "125": 300, "1250": 282, "1251": 154, "1258": 154, "126": [121, 154], "128": [30, 33, 39, 44, 67, 83, 112, 121, 122, 145, 154, 173, 235, 412, 423], "1280": [36, 92], "128x128": [412, 423], "13": [74, 145, 147, 154, 200, 261, 262, 263, 276, 288, 299, 300, 302, 348, 414, 416, 417, 419], "1314": 154, "132": [146, 154], "1324": 154, "133": [147, 154], "136": [71, 102, 154], "138": [148, 154], "14": [32, 33, 34, 56, 105, 154, 261, 262, 263, 270, 271, 276, 288, 299, 300, 302, 334, 348, 352, 414, 416, 417, 419], "1409": 154, "143": [149, 154], "144": 97, "145": 200, "148": [43, 154], "149": [56, 113, 154], "15": [0, 50, 154, 200, 261, 262, 263, 276, 288, 299, 300, 302, 348, 352, 389, 414, 416, 417, 419, 423], "1513": 284, "152": [101, 115, 132, 154], "1536": [34, 35, 37], "155": 348, "1556": 154, "156": [78, 154], "157": [34, 154], "1588": [176, 246], "16": [54, 55, 86, 89, 92, 96, 97, 124, 130, 145, 148, 154, 160, 161, 162, 163, 164, 165, 170, 171, 173, 185, 215, 216, 228, 229, 230, 234, 235, 258, 259, 261, 262, 263, 270, 271, 273, 276, 287, 288, 296, 297, 299, 300, 302, 307, 308, 309, 310, 311, 315, 348, 352, 383, 414, 416, 417, 419], "160": [96, 114, 154], "16227766": 25, "16425": 284, "1643": 280, "166": 348, "167": 248, "169": [54, 56, 154], "16x16": 154, "17": [107, 154, 261, 262, 263, 276, 288, 300, 347, 414, 416, 417, 419], "170": 200, "1704": 154, "174": [31, 154], "17520119": 382, "177": [126, 154], "18": [88, 116, 133, 141, 154, 261, 262, 263, 270, 276, 288, 300, 351, 352, 414, 416, 417, 419], "1800": 281, "184": 96, "18877099": 255, "19": [65, 145, 149, 154, 187, 188, 200, 262, 263, 288, 346, 348], "192": [31, 32, 34, 35, 37, 39, 40, 77, 87, 88, 115, 154], "194": [124, 154], "196": [53, 154], "1966": [182, 253, 254], "197": [42, 49, 154], "198": [96, 154], "199": [154, 162], "1998": [154, 281], "1_53": 154, "1d": [186, 214, 217, 221, 228, 231, 286, 290, 295, 341, 348, 356, 389, 399, 400, 401, 402, 407], "1e": [39, 77, 192, 203, 204, 209, 210, 212, 213, 228, 229, 230, 266, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 307, 309, 311, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "1e6": 318, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 154, 155, 166, 167, 168, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "20": [0, 5, 6, 7, 8, 57, 154, 169, 170, 173, 262, 263, 270, 288, 308, 309, 352, 374], "200": [96, 106, 117, 154], "2004": 154, "201": [57, 106, 154], "2011": 234, "2012": 154, "2014": 154, "2015": 154, "2016": 154, "2017": [154, 307], "2018": [154, 234], "2019": 154, "2020": 154, "2021": 154, "2022": 154, "2023": [154, 234], "2024": 154, "2039": 284, "204": 263, "2048": [36, 37, 38, 156, 307, 309, 311], "21": [71, 119, 134, 154, 171, 200, 262, 263, 288, 352], "210": [72, 154], "211": 348, "213": [154, 158], "21841": [48, 53], "22": [83, 151, 154, 164, 200, 262, 263, 270, 288, 346, 348], "2201": 154, "221": [72, 154], "2231": [281, 284], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 154, 160, 161, 162, 163, 164, 165], "2247": [286, 287, 288, 290, 291, 292, 293], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 348, "22752314": 339, "2278": 154, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 262, 263, 288], "2301": 154, "232": [94, 138, 154], "2324": [154, 252], "233": [47, 154], "234": [239, 240, 241, 242, 243, 244, 341], "235": [64, 154], "237": [154, 158], "238": [97, 154], "23840584": 255, "24": [54, 55, 92, 96, 97, 106, 110, 117, 200, 215, 262, 263, 270, 288, 296, 352], "240": [32, 47, 96, 97, 149, 154], "240x240": 59, "2424": [182, 254], "2447": 254, "246": [87, 154], "24d": 110, "25": [0, 110, 120, 129, 141, 154, 181, 193, 253, 263, 283, 288, 299, 300, 345, 360, 379, 391], "2500": [280, 282, 284], "2512": 245, "2547": 252, "256": [30, 33, 36, 38, 39, 112, 145], "26": [107, 154, 171, 202, 263, 278, 288, 352], "260": 154, "260x260": 59, "26325684": 339, "264": [58, 154], "2689": [182, 253, 254], "26894142": 255, "269": [108, 118, 154], "27": [31, 109, 139, 154, 200, 261, 263, 288, 373], "272": [128, 154], "274": [104, 144, 154], "276": [239, 240, 243, 244], "277": [35, 154], "28": [35, 36, 44, 52, 81, 87, 88, 135, 154, 200, 263, 352], "280": [51, 154], "288": [97, 106, 154], "289": [48, 61, 154], "28x28": [7, 8, 87, 88], "29": [144, 154, 263], "299": [150, 154], "299r": 417, "299x299": [75, 76, 83, 84], "2_i": [290, 291, 292], "2d": [187, 196, 215, 218, 222, 229, 232, 287, 291, 296, 348, 356, 359, 386, 389, 396, 399, 400, 402, 407, 419], "2e": 323, "2nd": [28, 152], "2x": 111, "2x2": [190, 414, 416], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 160, 166, 167, 168, 170, 171, 172, 173, 176, 181, 182, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "30": [66, 75, 108, 111, 118, 154, 170, 227, 263, 419], "300": 154, "300x300": 59, "301": [35, 154], "302": [70, 154], "3026": 284, "304": [154, 163], "3072": [38, 160], "30823025": 255, "31": [200, 263, 348], "310": [357, 358], "31622777": 25, "319": 154, "32": [30, 54, 56, 57, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 154, 170, 173, 200, 202, 215, 228, 229, 230, 234, 235, 262, 263, 273, 278, 296, 315, 346, 347, 352], "320": [107, 154], "321": [239, 240, 243, 244], "326": [131, 154, 163], "32x16d": 154, "32x32": [5, 6, 86, 89], "32x32d": 154, "32x4d": [136, 139, 144, 154], "32x8d": [137, 154], "33": [58, 154, 170, 173, 202, 263, 278], "330": [32, 154], "33333333": 24, "336": [37, 42, 127, 146, 154], "337": [58, 154], "34": [119, 134, 142, 154, 170, 173, 200, 263, 348, 352], "342": [239, 240, 243, 244], "344": [65, 154], "345": [239, 240, 241, 242, 243, 244, 341], "35": [84, 154, 170, 173, 263], "350": [53, 154], "352": [74, 154], "355": [68, 154], "3567": [280, 284], "357": [148, 153, 154], "36": [106, 115, 117, 132, 263], "3679": [175, 180, 245], "368": [141, 143, 154], "36th": 154, "37": [101, 154, 261], "370": [63, 154], "372": 200, "375": 283, "3750": 282, "37754067": 255, "378": [88, 154], "380": 154, "380x380": 59, "38344152": 337, "384": [31, 32, 34, 35, 37, 39, 40, 77], "38629436": 375, "389056": 374, "38th": 154, "392": [75, 154], "393": [66, 74, 154], "3935": 245, "3965": 154, "3977": 154, "3d": [188, 197, 216, 219, 223, 230, 233, 263, 288, 292, 297], "3x3": [154, 342], "4": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 154, 155, 171, 173, 185, 186, 187, 188, 190, 192, 193, 195, 196, 197, 200, 202, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 318, 321, 325, 326, 328, 331, 334, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 362, 364, 370, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "40": [76, 92, 96, 97, 111, 154], "400": [45, 89, 154, 162], "4044": 280, "4076": 281, "4096": [28, 152], "40d": 111, "41421356": 17, "416": [118, 136, 154, 165], "41666667": 24, "417": [111, 154], "41808962": 339, "419974": 183, "4199743": 256, "42": [37, 38, 200, 234, 334, 342], "421": [239, 240, 243, 244], "423": [239, 240, 241, 242], "42718872": 25, "4278": 154, "4284": 154, "4286": 280, "43": [67, 154, 346, 348], "431": [80, 154], "432": [66, 154], "4323": 245, "4375": 282, "43758721": 337, "44": [114, 126, 154], "440": [71, 154], "4472136": 19, "448": [68, 154], "4495": [288, 292], "45": [142, 154, 200, 227, 419], "4510": 154, "4520": 154, "4545": 265, "455": [128, 154], "456": 154, "456x456": 59, "46": [43, 154], "464": [41, 111, 154], "468": [125, 154], "4700": 154, "4708": 154, "47112767": 369, "472": [125, 154, 158], "48": [54, 57, 58, 97, 104, 108, 118, 136, 154, 202, 278], "480": [56, 96, 154], "481": [96, 154], "483": [109, 154], "49": [80, 131, 154], "496": [52, 154], "4979": 245, "4s2x40d": [111, 154], "4x": 110, "4x4": 421, "5": [1, 2, 12, 13, 15, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 154, 155, 165, 167, 168, 169, 170, 171, 173, 176, 181, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 207, 209, 212, 213, 214, 217, 218, 224, 226, 228, 229, 230, 235, 237, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 298, 299, 300, 302, 303, 307, 309, 311, 327, 331, 334, 335, 338, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 364, 366, 367, 368, 376, 377, 378, 379, 380, 385, 386, 389, 390, 391, 392, 397, 399, 403, 404, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "50": [5, 6, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 154, 202, 278, 327, 346, 348, 360, 417, 418, 420, 423], "5000": [156, 280, 282, 284], "504": [95, 154], "50_1s4x24d": 154, "510": 154, "5108": 284, "512": [30, 33, 36, 38, 39, 84, 99, 112, 116, 142, 154, 156, 157, 258, 307, 308, 309, 310, 311], "516": [33, 154], "519": 154, "520": [78, 154], "52359878": 368, "528": 154, "528x528": 59, "53": [32, 154, 200, 347], "530": [125, 154], "536": [64, 154], "537": [97, 154], "543": [239, 240, 241, 242, 243, 244, 341], "54308063": 372, "544": [80, 148, 154, 157], "545": 353, "5455": 265, "549": [114, 154], "55": [70, 154], "557": [120, 154], "558": [37, 154], "559": [139, 154], "560": [62, 105, 154], "563": [239, 240, 243, 244], "567": [154, 161], "5672": 154, "568": [72, 154], "5683": 154, "569": [137, 154], "57": [143, 154, 200], "57079633": [367, 368], "5720": 154, "5730": 154, "57366333": 340, "576": 97, "584": [154, 157], "586": [76, 154], "587g": 417, "589": [44, 154], "590": [98, 154], "591": [41, 154], "592": [133, 154], "5987": 154, "5995": 154, "5998": 154, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 154, 156, 171, 172, 186, 187, 188, 190, 192, 197, 200, 202, 210, 214, 224, 240, 244, 247, 251, 261, 262, 263, 266, 268, 269, 270, 271, 276, 278, 280, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 300, 302, 303, 307, 308, 310, 319, 327, 331, 334, 341, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 376, 377, 378, 385, 386, 389, 390, 391, 392, 394, 397, 402, 403, 404, 408, 409, 411, 413, 414, 415, 416, 417, 419, 421], "60": [5, 6, 115, 154], "600": [59, 154], "6008": 154, "600x600": 59, "6052": 284, "6065": 245, "608": [36, 153, 154], "61": [29, 89, 154], "6105": 154, "611": [105, 154], "6114": 154, "6124": [286, 287, 288, 290, 291, 292, 293], "617": [69, 154], "62": [153, 154, 157, 200], "623": [50, 154], "62686041": 382, "630": 154, "632": [35, 154, 162, 163], "6321": [175, 245], "63245553": 25, "635": [52, 154], "636": [61, 154], "64": [30, 39, 54, 58, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 154, 170, 173, 200, 234, 235], "640": [48, 65, 154], "645": 154, "64589411": 337, "647": [141, 154], "64x4d": [138, 154], "654": [239, 240, 241, 242, 243, 244, 341], "656": [34, 154, 161], "657": [239, 240, 243, 244], "6590": [182, 254], "66": [68, 132, 154], "660": [48, 154], "664": [154, 164], "6652": 254, "66666667": 24, "6667": 280, "667": [149, 154], "6682": 280, "669": [117, 154], "67": 348, "672": [96, 119, 154], "67326": 252, "6733": 180, "676": [110, 154], "678": [239, 240, 241, 242, 243, 244], "688": [38, 154], "68811989": 339, "689": [116, 154], "69314718": 375, "696": [121, 154], "7": [10, 13, 23, 38, 55, 62, 145, 154, 171, 186, 187, 188, 190, 192, 197, 200, 202, 203, 204, 214, 224, 235, 246, 251, 252, 253, 256, 261, 262, 263, 266, 270, 271, 276, 278, 280, 281, 283, 287, 288, 291, 292, 295, 299, 300, 302, 303, 334, 335, 338, 341, 344, 346, 347, 348, 352, 354, 356, 360, 374, 377, 385, 386, 389, 390, 391, 404, 407, 408, 409, 413, 414, 415, 416, 417, 419, 421], "70": [7, 8, 106, 154], "7001": 281, "704": [58, 126, 154], "706": [89, 154], "70710678": [19, 381], "708": [45, 154], "7132": 154, "7141": 154, "7147": 284, "715": [99, 154], "717": [46, 154, 165], "7182818": 374, "72": [92, 96, 97], "726791": 154, "7311": [182, 253, 254], "739": [83, 154], "74": 348, "748": [79, 154], "75": [202, 278, 283, 318, 360], "755": [101, 154], "7581": 180, "760": [104, 144, 154], "76159416": [255, 388], "7616": [183, 256], "76219569": 372, "7635": 252, "767": [42, 154], "768": [31, 32, 34, 35, 37, 39, 40, 77, 160], "770": [36, 154], "772": 353, "774": [100, 154], "778": [133, 154], "78": [122, 154], "78357324": 339, "78539816": 369, "790": [34, 154], "791": [127, 154], "79172504": 337, "792": [124, 154], "795": [62, 154], "797": [119, 154], "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 170, 171, 173, 185, 186, 187, 188, 190, 192, 197, 200, 202, 203, 214, 215, 216, 224, 228, 229, 230, 234, 246, 247, 252, 253, 256, 258, 259, 261, 262, 263, 266, 268, 269, 270, 271, 276, 278, 280, 283, 287, 288, 291, 292, 295, 296, 297, 299, 300, 302, 303, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 334, 335, 338, 345, 346, 347, 348, 352, 353, 355, 356, 373, 377, 385, 386, 389, 390, 391, 404, 408, 409, 413, 414, 415, 416, 417, 419, 421], "80": [5, 6, 7, 8, 96], "800": [46, 50, 154], "8005": 281, "808": [115, 154], "817": [75, 154], "818": 154, "8182": 265, "82": [33, 154, 200], "821": [132, 154], "83": [128, 154], "832": [81, 154], "833": 154, "84": [86, 88, 89], "840": [29, 49, 79, 154], "8413": [176, 246], "847": [84, 154], "848": [132, 147, 154], "856": [55, 154], "85772238": 255, "8584": 252, "86": [79, 154, 161], "862": [151, 154], "863": [146, 154], "864": [98, 117, 154], "868": [134, 154], "872": [95, 110, 131, 154], "876": [239, 240, 243, 244, 341], "88": [41, 46, 97, 127, 138, 154], "8808": [182, 253, 254], "884": [43, 154], "886": [121, 154], "887": 353, "891773": 337, "89442719": 19, "895": [142, 154], "896": [139, 154], "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 99, 154, 187, 190, 192, 200, 202, 214, 224, 261, 262, 263, 266, 270, 276, 278, 280, 287, 288, 291, 295, 299, 300, 302, 318, 319, 321, 322, 323, 324, 325, 326, 328, 334, 335, 338, 341, 344, 348, 352, 353, 354, 356, 383, 384, 408, 409, 413, 414, 415, 416, 417, 419], "904": [129, 154], "90709145": 340, "9091": 265, "9120": 284, "9163": 284, "928": [57, 154], "929": [108, 154], "93": [137, 154], "94": 113, "944": [31, 154], "9486833": 25, "949e": [357, 358], "9526": 181, "9545": 246, "955": [136, 154], "956": [49, 154], "958": [134, 154], "96": [31, 32, 39, 40, 77, 97], "960": 96, "96366276": 337, "9640": 256, "96402758": 388, "968": [53, 154], "973": [122, 154], "978": [38, 55, 154], "984": [76, 138, 154], "99": 326, "9957": 284, "99734545": 340, "999": [0, 321, 322, 323, 324, 325], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 154, 167, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 208, 209, 210, 212, 213, 226, 235, 259, 265, 266, 268, 269, 270, 271, 273, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 305, 307, 308, 309, 310, 311, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 334, 335, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 419], "As": 340, "At": 313, "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 168, 227, 315, 325, 331, 335, 337, 338, 339, 341, 413, 423], "For": [2, 3, 4, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 173, 175, 176, 178, 179, 180, 181, 183, 200, 202, 226, 239, 240, 243, 244, 252, 261, 262, 263, 276, 278, 286, 287, 288, 290, 291, 292, 315, 317, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 374, 375, 376, 377, 378, 381, 383, 385, 386, 389, 390, 391, 400, 402, 405, 407, 410, 423], "If": [0, 1, 2, 5, 6, 7, 8, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 167, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 183, 185, 186, 187, 188, 193, 197, 200, 202, 209, 212, 215, 216, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 258, 259, 261, 262, 263, 267, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 321, 322, 326, 327, 333, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 417, 418, 420, 421], "In": [3, 15, 24, 186, 187, 188, 281, 284, 330, 331, 332, 412, 423], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 154, 167, 169, 170, 171, 172, 173, 193, 197, 200, 224, 226, 227, 228, 229, 230, 234, 246, 247, 250, 251, 256, 258, 259, 267, 273, 276, 277, 280, 281, 282, 283, 284, 295, 296, 297, 305, 307, 308, 310, 313, 315, 316, 317, 318, 324, 326, 327, 328, 331, 340, 344, 345, 346, 349, 350, 351, 353, 354, 360, 376, 378, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413], "Its": [26, 342], "Near": 24, "No": [190, 193], "Not": 277, "One": [87, 423], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "There": 403, "These": [4, 10, 15, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 265, 268, 269, 270, 271, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 327, 334, 342, 423], "To": [3, 154, 317, 335, 339, 342, 357, 358, 399, 423], "With": [3, 154, 190, 193, 413, 423], "_": [12, 13, 14, 22, 169, 170, 172, 173, 175, 176, 178, 179, 180, 181, 183, 202, 224, 226, 273, 287, 288, 290, 291, 292, 298, 299, 300, 301, 302, 303, 305, 318, 319, 321, 322, 323, 324, 326, 328, 346, 347, 348, 352, 389, 390, 408, 409, 414, 415, 416, 418, 419, 420], "_1": [19, 169, 170, 171, 172, 173, 200, 276, 352, 395, 397, 411], "_2": [19, 169, 170, 171, 172, 173, 200, 276, 352, 395, 397, 411], "__call__": [1, 167], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 166, 167, 168, 169, 170, 171, 172, 193, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 273, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 343, 412, 413], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 316, "__setattr__": 167, "_activ": 182, "_arraylik": [334, 356, 358, 362, 364], "_arraylikeint": 400, "_arrayorscalar": [166, 168, 334, 335, 343, 392], "_base_activ": 86, "_base_dtyp": [355, 357, 360, 361, 363], "_block": 266, "_c": 415, "_decai": 324, "_einopspattern": [12, 13, 14, 273], "_fanmod": [239, 240], "_grad_en": [330, 332], "_i": [19, 23, 182, 193, 200, 254, 267, 283, 286, 293, 298, 301, 346, 347, 349, 350, 352, 353, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 397, 402, 405, 410, 411], "_in": [239, 240, 243, 244], "_interpolatetyp": 313, "_j": [182, 254, 298, 301, 352, 377, 385, 390, 391], "_k": 406, "_layer": [308, 310], "_left": 226, "_make_lay": 145, "_mlphead": 77, "_modul": 167, "_n": [19, 169, 170, 171, 172, 173, 395, 397, 411], "_numpyarrai": 334, "_out": [239, 240, 243, 244, 402, 407], "_p": [23, 224, 305], "_pad": 400, "_paddingstr": [228, 229, 230, 231, 232, 233, 261, 262, 263], "_paramet": 167, "_reducestr": 13, "_reductiontyp": [203, 204, 205, 207, 208, 280, 281, 282, 283, 284], "_resnestbottleneck": 103, "_right": 226, "_scalar": [185, 237, 241, 242, 243, 244, 259, 334, 355, 360, 370], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 213, 293, 334, 338, 361, 363, 393, 403, 405, 410], "_size": [214, 215, 216, 266], "_skresnetmodul": [141, 142, 143], "_slope": 249, "_statedict": 316, "_t": [325, 326], "_tensor": [166, 168, 258, 307, 309, 311, 356, 392], "_tensorop": 343, "_u": 24, "_v": 24, "_valu": [370, 400], "_weight": 305, "_width": 400, "a_": [30, 309], "a_1": [258, 404], "a_2": 404, "a_h": 258, "a_i": [258, 349, 350, 353, 404], "a_k": 404, "aaai": 154, "ab": 365, "abc": [2, 316], "abil": [15, 154, 423], "about": [10, 15, 155], "abov": [15, 330, 332, 340, 356, 359, 408], "absolut": [22, 23, 30, 205, 323, 366], "abstract": [2, 3, 315, 316, 317, 318, 326, 328], "abstractmethod": 316, "abund": [48, 101], "acceler": [154, 252, 286, 287, 288, 318, 324, 326, 328], "accept": [277, 337, 343], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 166, 168, 169, 170, 171, 172, 173, 403], "accord": [12, 14, 193, 226, 261, 262, 263, 273, 276, 278, 281, 284, 319, 320, 321, 322, 323, 324, 325, 390, 393], "accordingli": [18, 386], "account": [22, 24, 25, 255], "accumul": [318, 319, 320, 344, 345, 349, 350, 351, 354, 393], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 90, 91, 92, 98, 99, 100, 101, 102, 135, 154, 161, 162, 163], "achiev": [12, 123, 124, 125, 126, 127, 128, 129, 154, 186, 187, 188, 214, 273, 295, 296, 297, 324, 418, 420], "across": [0, 5, 6, 10, 12, 13, 30, 39, 52, 94, 154, 166, 170, 173, 210, 213, 214, 215, 216, 243, 244, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 334, 335, 337, 338, 339, 340, 341, 342, 357, 358, 377, 391], "act": 322, "activ": [15, 28, 39, 86, 96, 97, 113, 117, 118, 130, 145, 152, 154, 169, 173, 175, 176, 178, 179, 180, 181, 182, 183, 191, 228, 229, 230, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 268, 269, 270, 271, 280, 281, 284, 286, 287, 288, 293, 307, 309, 311, 376, 378], "actual": [168, 280, 281, 283, 284, 343, 416], "ad": [14, 54, 92, 112, 167, 169, 170, 171, 172, 173, 186, 187, 188, 192, 200, 202, 203, 204, 209, 210, 212, 213, 217, 218, 219, 221, 222, 223, 228, 229, 230, 258, 261, 262, 263, 266, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 333, 410, 423], "adadelta": 329, "adagrad": [319, 329], "adam": [154, 322, 323, 324, 325, 329], "adamax": 329, "adamw": 329, "adapt": [10, 28, 73, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 214, 215, 216, 234, 235, 295, 296, 297, 319, 320, 321, 324, 325, 326, 327], "adaptive_avg_pool1d": [199, 220, 295], "adaptive_avg_pool2d": [199, 220, 296], "adaptive_avg_pool3d": [199, 220, 297], "adaptiveavgpool1d": [275, 304], "adaptiveavgpool2d": [28, 130, 145, 152, 275, 304], "adaptiveavgpool3d": [275, 304], "add": [4, 167, 169, 170, 173, 200, 202, 258, 261, 262, 263, 276, 278, 293, 316, 318, 321, 326, 328, 331, 365, 400, 410], "add_bias_kv": 258, "add_modul": [167, 173], "add_param_group": 316, "add_zero_attn": 258, "addit": [4, 15, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 162, 163, 164, 165, 167, 170, 173, 200, 202, 209, 212, 276, 278, 286, 287, 288, 290, 291, 292, 318, 324, 331, 342, 344, 406], "addition": 324, "address": [281, 284, 321, 322, 325], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 214, 215, 216, 235, 265, 266, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 317, 321, 325, 326, 327, 397, 411], "advanc": [3, 24, 60, 77, 91, 101, 117, 154, 170, 173, 186, 187, 188, 214, 215, 216, 295, 296, 297, 315, 318], "advantag": [84, 332], "affect": [330, 401, 405, 412], "affin": [228, 229, 230, 286, 287, 288, 290, 291, 292, 293, 419], "after": [10, 14, 22, 28, 96, 97, 152, 168, 169, 170, 171, 172, 173, 197, 234, 235, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 262, 263, 265, 268, 269, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 307, 309, 311, 322, 332, 343, 344, 345, 349, 350, 351, 353, 354, 360, 400, 404, 413], "afterward": 332, "aggreg": [10, 154, 235, 352, 402, 407], "aim": [4, 15], "al": [74, 154, 307], "alex": [5, 6, 154], "alexei": 154, "alexnet": [85, 152, 154], "algebra": [15, 16, 359], "algorithm": [7, 15, 22, 24, 25, 316, 317, 342], "align": [10, 26, 101, 226, 313, 347, 348, 386], "align_corn": [226, 313], "all": [0, 3, 4, 15, 25, 59, 154, 167, 169, 170, 171, 172, 173, 187, 188, 214, 215, 216, 218, 219, 222, 223, 226, 229, 230, 235, 249, 250, 258, 263, 295, 296, 297, 299, 300, 303, 307, 315, 316, 317, 318, 321, 326, 327, 328, 353, 376, 377, 378, 385, 389, 391, 395, 396, 397, 402, 405, 406, 407, 408, 409, 411, 414, 415, 423], "allevi": [154, 175], "alloc": [357, 358], "allow": [0, 1, 3, 4, 10, 12, 15, 24, 25, 84, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 154, 168, 169, 170, 171, 172, 173, 175, 178, 179, 182, 188, 190, 227, 235, 245, 246, 249, 252, 253, 254, 256, 259, 261, 262, 263, 273, 305, 313, 315, 319, 320, 331, 355, 361, 363, 364, 386, 390, 392, 399, 412, 413, 423], "along": [10, 13, 14, 182, 226, 235, 254, 347, 348, 352, 376, 377, 378, 385, 389, 391, 393, 394, 395, 397, 399, 402, 404, 406, 407, 410, 411, 418, 420], "alongsid": 166, "alpha": [175, 178, 180, 191, 245, 252, 265, 318, 326], "alpha_dropout": [198, 199, 265], "alphadropout": [272, 275], "alphadropoutmodel": 265, "alreadi": 333, "also": [155, 175, 176, 178, 179, 180, 181, 183, 200, 202, 226, 324, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 393, 395, 397, 400, 401, 402, 403, 405, 406, 407, 410, 411], "alter": [173, 403], "altern": [1, 246, 319, 348], "alwai": [10, 168, 401, 417, 418, 420], "among": [75, 235], "amount": [186, 187, 188, 217, 218, 219, 221, 222, 223, 231, 232, 233, 324], "ampl": 98, "amsgrad": [321, 322], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 176, 186, 187, 188, 190, 191, 194, 195, 196, 197, 200, 215, 216, 224, 226, 227, 231, 232, 233, 235, 243, 244, 245, 251, 253, 258, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 276, 278, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 310, 311, 316, 317, 318, 321, 324, 326, 332, 333, 334, 343, 348, 356, 359, 370, 377, 385, 391, 393, 395, 402, 404, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "analog": [402, 407], "analysi": [4, 234, 261, 262, 263, 292, 298, 300, 301, 303], "andreetto": 154, "andrew": 154, "angl": [227, 419], "ani": [0, 1, 2, 3, 12, 22, 24, 29, 112, 140, 151, 153, 166, 167, 168, 169, 171, 172, 175, 176, 178, 179, 180, 181, 183, 191, 194, 200, 202, 209, 212, 253, 273, 293, 315, 316, 330, 332, 333, 340, 343, 355, 356, 357, 359, 361, 362, 363, 364, 376, 378, 390, 392, 395, 396, 397, 400, 402, 406, 407, 410, 411, 412, 423], "anoth": [93, 172, 354, 362, 364, 413, 423], "api": [4, 295, 296, 297, 423], "appear": 316, "append": [170, 172, 173, 258], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 15, 22, 28, 30, 39, 59, 60, 77, 123, 140, 150, 152, 154, 156, 160, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 210, 228, 229, 230, 234, 235, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 318, 319, 320, 322, 323, 324, 325, 348, 400, 402, 408, 409, 412, 415, 417, 418, 419, 420, 421, 423], "applic": [4, 10, 13, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 154, 165, 186, 212, 261, 262, 263, 276, 278, 342, 355, 363, 400, 404, 408, 409, 421], "approach": [3, 10, 12, 14, 82, 173, 273, 322], "appropri": [24, 92, 96, 97, 154, 167, 171, 173, 193, 261, 262, 263, 265, 268, 269, 281, 299, 300, 330, 332], "approx": 180, "approxim": [24, 176, 246, 247, 248, 299, 302], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 98, 100, 101, 154, 166, 167, 168, 169, 170, 171, 172, 173, 182, 186, 187, 188, 190, 193, 200, 202, 210, 215, 216, 224, 226, 231, 232, 233, 234, 235, 239, 240, 242, 243, 244, 247, 254, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 278, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 311, 313, 315, 318, 321, 322, 324, 325, 326, 327, 328, 330, 332, 333, 334, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 366, 370, 374, 376, 377, 378, 379, 380, 385, 386, 389, 390, 393, 394, 395, 399, 402, 403, 404, 407, 408, 409, 412, 413, 414, 416, 417, 421, 423], "arang": 365, "arbitrari": [170, 277, 357, 358, 370, 375, 377, 381, 383, 385, 390, 391], "arcco": 365, "arch": 333, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 176, 234, 247, 248, 250, 255, 258, 259, 273, 276, 277, 307, 315, 333], "arcsin": 365, "arctan": 365, "area": [226, 313], "arg": [167, 277, 333, 357], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 167, 173, 277, 337, 357, 390], "around": [19, 227, 256], "arr": [334, 395, 397, 406, 411], "arrai": [15, 166, 168, 331, 334, 343, 348, 356, 362, 364, 392, 401, 402, 413, 423], "art": [48, 154, 162], "artifici": 154, "arxiv": 154, "asarrai": 334, "asgd": 329, "ashish": 154, "aspect": 421, "assign": [167, 169, 171, 173, 226, 281, 284], "assist": [73, 74, 75], "associ": [171, 172], "assum": [0, 1, 160, 161, 162, 163, 164, 165, 316, 317, 330], "attempt": [169, 173], "attend": [185, 259, 308, 310, 311], "attent": [30, 103, 110, 111, 140, 154, 156, 160, 172, 200, 234, 258, 259, 307, 308, 309, 310, 311], "attn": [185, 259], "attn_mask": [185, 259], "atto": [45, 78, 154], "attribut": 167, "audio": 261, "augment": [3, 4, 133, 227, 342, 402, 407, 412, 416, 417, 418, 419, 420, 423], "autodiff": 15, "autoencod": 154, "autograd": 315, "automat": [4, 15, 168, 169, 170, 171, 172, 315, 335, 337, 338, 339, 341, 343, 357, 358, 364, 399, 413], "autoregress": [185, 259], "auxiliari": [73, 74, 75, 166], "avail": [4, 5, 6, 7, 8, 15], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 166, 214, 215, 216, 217, 218, 219, 226, 234, 235, 283, 295, 296, 297, 298, 299, 300, 318, 319, 321, 326, 377], "avg_down": 112, "avg_pool": [298, 299, 300], "avg_pool1d": [199, 220], "avg_pool2d": [199, 220], "avg_pool3d": [199, 220], "avgpool": [28, 130, 145, 152, 235], "avgpool1d": [275, 304], "avgpool1dmodel": 298, "avgpool2d": [275, 304], "avgpool2dmodel": 299, "avgpool3d": [275, 304], "avgpool3dmodel": 300, "avoid": [2, 3, 12, 13, 24, 60, 171, 273, 332, 360], "ax": [10, 12, 13, 14, 16, 273, 331, 376, 377, 378, 385, 386, 390, 391, 393, 402, 405, 407], "axi": [13, 23, 182, 254, 347, 348, 376, 377, 378, 385, 391, 394, 395, 397, 399, 400, 402, 404, 405, 406, 407, 410, 411, 418, 420], "axis1": 386, "axis2": 386, "b": [12, 13, 14, 16, 26, 30, 154, 161, 200, 202, 242, 261, 262, 263, 273, 276, 278, 331, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 393, 395, 397, 399, 406, 411, 417], "b0": [59, 61, 154], "b1": [59, 62, 154], "b2": [59, 63, 154], "b3": [59, 64, 154], "b4": [59, 65, 154], "b5": [59, 66, 154], "b6": [59, 67, 154], "b7": [59, 68, 154], "b_": 30, "b_1": [309, 311], "b_2": [309, 311], "b_i": [349, 350, 353], "b_k": 258, "b_v": 258, "back": [226, 258, 299, 300, 333, 347, 352, 394, 402, 407], "backbon": [141, 142, 143], "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 154, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 200, 202, 226, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 315, 332, 339, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 374, 376, 378, 392, 393, 394, 400, 402, 407, 408, 409, 413], "backward": [15, 166, 168, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 343, 360, 394, 413], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 161, 164, 282], "bar": 318, "base": [3, 12, 13, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 154, 156, 157, 161, 165, 167, 169, 170, 171, 172, 185, 190, 200, 214, 215, 216, 235, 259, 265, 273, 281, 282, 295, 296, 297, 315, 316, 317, 318, 322, 326, 327, 328, 335, 344, 345, 349, 350, 351, 353, 354, 364, 374, 375, 376, 378, 390, 399, 400, 404, 416, 417, 418, 419, 420], "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "basic": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 185, 186, 187, 188, 192, 193, 214, 215, 216, 224, 228, 229, 230, 231, 232, 233, 234, 239, 240, 243, 244, 259, 266, 295, 296, 297, 305, 360, 393, 414, 415, 416, 417, 418, 419, 420, 421], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 185, 186, 187, 188, 190, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 258, 259, 261, 262, 263, 276, 278, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 325, 348, 386, 414, 415, 416, 417, 419, 421], "batch_norm": [199, 211, 286, 287, 288], "batch_norm1": 173, "batch_norm2": 173, "batch_siz": [1, 2, 3, 150, 235], "batch_tensor": 386, "batchnorm": [228, 229, 230], "batchnorm1d": [228, 275, 294], "batchnorm1dmodel": 286, "batchnorm2d": [173, 229, 275, 294], "batchnorm2dmodel": 287, "batchnorm3d": [230, 275, 294], "batchnorm3dmodel": 288, "bceloss": [275, 285], "becaus": [2, 338], "becom": [23, 167, 319, 327], "been": 255, "befor": [10, 14, 22, 30, 130, 155, 168, 185, 259, 307, 309, 311, 318, 324, 332, 340, 400, 415, 423], "begin": [1, 23, 175, 178, 179, 180, 193, 245, 247, 248, 249, 250, 252, 267, 282, 283, 284, 298, 299, 300, 301, 302, 303, 325, 327, 331, 342, 349, 350, 352, 366, 370, 376, 378, 380, 400, 408, 409], "behav": [267, 282, 389], "behavior": [10, 154, 170, 173, 185, 259, 330, 342, 348, 358, 423], "being": [172, 227, 265, 268, 269, 270, 271, 325, 330, 332, 394, 395, 397, 411], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 348, 356, 359, 409], "benchmark": [5, 6, 7, 8, 101], "benefici": 173, "benefit": [102, 175, 315, 324, 334], "bernoulli": [265, 268, 269, 270, 271, 336], "best": [101, 239, 240, 243, 244], "beta": [210, 286, 287, 288, 289, 290, 291, 292, 293, 321, 322, 323, 324, 325], "beta1": [321, 322, 323, 324, 325], "beta2": [321, 322, 323, 324, 325], "beta_1": [321, 322, 323, 324, 325], "beta_2": [321, 322, 323, 324, 325], "beta_c": [210, 289], "better": [21, 100, 152, 154, 176, 239, 240, 243, 244, 255, 266, 290, 291, 292, 315, 322, 324, 326, 415], "between": [43, 46, 50, 69, 70, 71, 72, 81, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 161, 164, 167, 186, 187, 188, 190, 200, 205, 228, 229, 230, 231, 232, 233, 235, 251, 261, 262, 263, 265, 268, 269, 270, 271, 276, 280, 281, 282, 283, 284, 318, 326, 327, 328, 342, 344, 345, 348, 351, 354, 355, 360, 391, 417, 418, 420, 421], "beyond": [10, 15, 170], "bia": [30, 186, 187, 188, 200, 202, 209, 212, 213, 228, 229, 230, 231, 232, 233, 258, 261, 262, 263, 276, 278, 286, 287, 288, 290, 291, 292, 293, 307, 309, 311, 321, 322, 323, 324, 325], "bias": [261, 262, 263, 278, 293, 315], "bias1": 171, "bias2": 171, "big": [154, 231, 232, 233], "bilinear": [199, 201, 226, 275, 279, 313], "bilinearmodel": 276, "binari": [181, 203, 253, 265, 268, 269, 270, 271, 280], "binary_cross_entropi": [199, 206], "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 160, 167, 190, 192, 193, 228, 229, 230, 235, 261, 262, 263, 266, 332], "block1": [155, 315], "block2": [155, 315], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [192, 266], "block_typ": 30, "blue": 417, "bmatrix": 352, "bn": [228, 229, 230], "bn_affin": [228, 229, 230], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 167, 168, 185, 191, 193, 194, 195, 196, 197, 209, 212, 226, 228, 229, 230, 231, 232, 233, 258, 259, 261, 262, 263, 267, 276, 278, 286, 287, 288, 290, 291, 292, 293, 307, 308, 309, 310, 311, 313, 321, 322, 326, 330, 335, 337, 338, 339, 341, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 376, 377, 378, 385, 391, 392, 413], "boost": 98, "both": [30, 93, 186, 202, 215, 217, 221, 228, 246, 255, 261, 262, 296, 298, 299, 301, 302, 311, 313, 346, 347, 348, 352, 356, 399, 404, 421], "bottleneck": [54, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 154, 234], "bottleneck_cfg": 92, "bottom": 226, "bound": [240, 242, 244, 327, 341], "box": 4, "branch": [73, 74, 75, 154, 235], "break": [10, 315], "brief": 423, "bright": 423, "bring": [10, 273], "broadcast": [14, 270, 271, 377, 385, 391, 403, 410], "broadcast_to": 398, "budget": 50, "buffer": [318, 324, 326, 328], "build": [15, 40, 60, 84, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 154, 156, 167, 170, 173, 315, 423], "built": [3, 15, 113, 117, 118, 173, 315], "burg": 8, "c": [5, 6, 8, 12, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 190, 192, 195, 196, 197, 204, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 234, 270, 271, 273, 281, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 331, 397, 411, 415], "c_": [261, 262, 263], "c_in": [186, 187, 188, 228, 229, 230], "c_out": [186, 187, 188], "calcul": [0, 1, 15, 16, 168, 313, 319, 320, 323, 324, 325, 332, 338, 343], "calculu": [17, 24], "call": [1, 167, 330, 333, 344, 345, 348, 349, 350, 351, 353, 354], "callabl": [307, 309, 311, 316, 333, 412], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 154, 155, 166, 168, 169, 170, 171, 172, 173, 178, 186, 187, 188, 193, 227, 235, 246, 249, 251, 256, 261, 262, 263, 290, 291, 292, 299, 300, 301, 302, 303, 305, 308, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 334, 341, 342, 343, 348, 357, 358, 359, 361, 363, 364, 377, 385, 386, 391, 393, 397, 399, 400, 402, 403, 407, 410, 411, 412, 413, 416, 418, 419, 420, 423], "cannot": [18, 19, 21, 22, 25, 26, 27, 335, 394], "cap": 251, "capabl": [10, 15, 30, 52, 110, 111, 355, 356, 359, 361, 362, 363, 364], "capac": [41, 42, 43, 49, 53, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 158, 162], "captur": [30, 140, 154, 190, 261, 262, 263, 276], "cardin": [103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 154], "care": 332, "cartesian": 399, "case": [3, 23, 86, 92, 94, 175, 178, 179, 180, 193, 245, 247, 248, 249, 250, 252, 267, 282, 283, 284, 298, 299, 300, 301, 302, 303, 315, 320, 325, 327, 331, 349, 350, 366, 370, 376, 378, 380, 400, 408, 409, 423], "categor": [224, 305], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 305], "caus": [3, 24, 318, 326, 328], "causal": [185, 259], "cautiou": [0, 10], "cdot": [17, 18, 21, 22, 23, 26, 175, 176, 178, 180, 181, 185, 186, 187, 188, 200, 202, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 234, 243, 244, 246, 247, 248, 253, 255, 259, 265, 276, 278, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 305, 319, 320, 321, 322, 323, 324, 325, 327, 346, 347, 348, 351, 353], "center": [227, 256, 326, 414, 423], "centercrop": [422, 423], "central": 334, "certain": [18, 176, 185, 200, 255, 259, 276, 311, 321, 322, 330, 376, 378], "cfg": [93, 96, 97], "chain": [21, 22, 173, 412, 423], "challeng": [7, 154], "cham": 154, "chanc": [417, 418, 420], "chang": [10, 205, 282, 327, 331, 332, 333, 401, 403, 410, 417, 423], "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 154, 186, 187, 188, 190, 195, 196, 197, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 261, 262, 263, 270, 271, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 415, 417, 421], "character": [121, 122], "check": [330, 414, 416], "checkpoint": 317, "chen": 154, "choic": [100, 102, 399], "choleski": 20, "chollet": 154, "choos": 154, "chosen": [265, 266], "christian": 154, "christoph": 8, "chu": 154, "chunk": 398, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14, 334], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 165, 182, 193, 204, 208, 315, 317, 333, 356, 359, 360, 392, 423], "classic": 89, "classif": [4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 181, 182, 203, 204, 208, 253, 254, 280, 281, 284], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 332, 348], "clear": [168, 343, 357, 358, 360], "clearli": 334, "clf_in_featur": 86, "clf_layer": 86, "clip": [227, 247, 251, 327, 365], "clockwis": 227, "close": [21, 24, 252, 280, 326], "closer": 245, "closur": [316, 317], "cloth": 7, "cnn": [30, 154], "co": [154, 365, 381], "coatnet": [31, 32, 33, 34, 35, 36, 37, 38, 85, 154], "coatnet_0": 154, "coatnet_1": 154, "coatnet_2": 154, "coatnet_3": 154, "coatnet_4": 154, "coatnet_5": 154, "coatnet_6": 154, "coatnet_7": 154, "code": [10, 22, 169, 171, 173, 330, 332, 334, 342], "coeffici": [26, 59, 226, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "col": 190, "collaps": 10, "collect": [4, 16, 154, 169, 170, 172, 173, 317], "color": [417, 423], "colorjitt": 423, "column": [18, 19, 21, 25, 26, 27, 155, 190, 359, 397, 399], "com": [7, 8], "combin": [1, 3, 12, 30, 76, 82, 83, 102, 144, 154, 170, 173, 175, 176, 228, 229, 230, 234, 235, 246, 266, 273, 281, 315, 324, 325, 377, 385, 391, 395, 423], "combined_dataset": [0, 1], "common": [190, 227, 317, 423], "commonli": [15, 90, 91, 92, 94, 95, 96, 97, 100, 102, 176, 181, 182, 183, 186, 188, 193, 200, 207, 209, 212, 224, 227, 234, 243, 244, 247, 248, 251, 254, 259, 263, 280, 283, 284, 298, 299, 300, 301, 302, 303, 305, 307, 331, 334, 361, 405, 413, 414, 415, 416, 418, 419, 420, 423], "compact": [44, 45, 47, 52, 81, 100], "compar": [30, 43, 44, 121, 122, 152, 154, 342, 406], "compat": [4, 10, 16, 140, 273, 277, 293, 315, 331, 342, 360, 393, 413, 423], "competit": [45, 51, 52], "complet": [156, 307, 308, 310], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 169, 170, 173, 179, 250, 301, 303, 315, 317, 423], "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 167, 170, 317, 343, 423], "compos": [5, 6, 7, 8, 150, 261, 262, 263, 298, 299, 300, 301, 302, 303, 315, 423], "compound": 60, "comprehens": 3, "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 154, 162, 163, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 214, 215, 216, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 315, 316, 317, 318, 326, 330, 331, 332, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 399, 400, 402, 407, 413, 423], "computation": [3, 12, 24, 113, 247, 248, 273], "compute_grad": 394, "compute_loss": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "concat": 258, "concaten": [0, 186, 187, 188, 258, 397, 398, 406, 411], "concept": [15, 24, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": 154, "config": 145, "configur": [29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 161, 162, 163, 164, 165, 172, 228, 229, 230, 259], "conjunct": [190, 284], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 202, 234, 235, 261, 262, 263, 278, 309, 311], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 173, 239, 240, 243, 244, 315, 327, 330, 357, 358, 408, 409, 423], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 166, 214, 215, 216, 235, 258, 295, 296, 297, 307, 309, 311, 334, 340, 342, 400, 414, 421, 423], "consistent_tensor": 342, "consol": 155, "constant": [203, 204, 209, 210, 212, 213, 238, 252, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 334, 400], "constant_pad": 400, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 235, 273], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 170, 315, 356, 402, 407, 408, 409], "constructor": [31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 167, 169, 170, 171, 172, 173, 182, 185, 190, 200, 202, 203, 204, 208, 224, 226, 280, 281, 284, 316, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358, 360, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 394, 396, 399, 404], "content": 227, "context": [154, 330, 332], "contextmanag": 332, "contigu": [192, 266, 401], "continu": [249, 339], "contract": 12, "contrast": [156, 290, 291, 292, 423], "contribut": [192, 226, 265, 268, 269, 270, 271, 298, 301, 302, 303, 318, 324, 389], "control": [10, 14, 30, 39, 123, 235, 245, 282, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 342, 413, 423], "conv": [77, 82, 130, 154, 228, 229, 230, 287, 288], "conv1": [87, 88, 89, 173, 261, 262, 263, 298, 299, 300, 301, 302, 303], "conv1d": [189, 199, 228, 231, 264, 275, 298, 301], "conv1dmodel": 261, "conv2": [87, 88, 89, 173, 261, 262, 263], "conv2d": [170, 173, 189, 199, 229, 232, 264, 273, 275, 287, 299, 302, 315], "conv2dmodel": 262, "conv3d": [189, 199, 230, 233, 264, 275, 288, 300, 303], "conv3dmodel": 263, "conv_bia": [228, 229, 230], "conv_config": 145, "conv_lay": [86, 170], "convblock": 315, "convbnrelu1d": 236, "convbnrelu2d": 236, "convbnrelu3d": 236, "conveni": [4, 29, 153], "convent": 348, "converg": [24, 256, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 415], "convers": [281, 284, 417, 423], "convert": [5, 6, 7, 8, 145, 166, 168, 182, 224, 254, 343, 399, 412, 413, 417, 423], "convnetwork": 170, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 85, 154], "convnext_bas": 154, "convnext_larg": 154, "convnext_smal": 154, "convnext_tini": 154, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 154, "convnext_v2_bas": 154, "convnext_v2_femto": 154, "convnext_v2_hug": 154, "convnext_v2_larg": 154, "convnext_v2_nano": 154, "convnext_v2_pico": 154, "convnext_v2_tini": 154, "convnext_xlarg": 154, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 170, 186, 187, 188, 190, 228, 229, 230, 231, 232, 233, 234, 235, 261, 262, 263, 299, 300, 302, 303, 386, 400], "convolv": [186, 187, 188, 261, 262, 263], "coordin": 399, "copi": [10, 393], "core": [0, 1, 2, 3, 167, 315, 316, 343, 423], "corinna": 8, "corner": [226, 313, 414, 416], "correct": [169, 281, 284, 321, 322, 323, 324, 325, 408, 409, 413], "correctli": [24, 167, 169, 170, 171, 172, 173, 281, 284, 342, 393, 394], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 169, 171, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 200, 202, 224, 226, 247, 250, 254, 276, 278, 286, 287, 288, 290, 291, 292, 299, 300, 305, 318, 326, 328, 335, 346, 347, 349, 350, 353, 374, 375, 381, 383, 393, 394, 397, 400, 402, 407, 411], "cort": 8, "cosh": [365, 382, 388], "cosin": [367, 371, 372, 381], "cost": [90, 92, 93, 99, 100, 102, 123, 154, 231, 232, 233], "could": 167, "count": [93, 154, 155, 395], "counterclockwis": [227, 419], "cover": [16, 186, 187, 188], "coverag": [214, 215, 216], "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 166, 167, 170, 173, 235, 251, 258, 307, 308, 309, 310, 311, 315, 331, 333, 342, 355, 359, 360, 361, 362, 363, 364, 393, 399, 406, 412, 423], "creation": [69, 70, 71, 72, 170, 173, 423], "criterion": [280, 281, 282, 283, 284], "critic": [24, 100, 317, 342], "crop": [414, 416, 423], "cross": [203, 204, 280, 281, 307, 308, 309], "cross_entropi": [199, 206], "crossentropyloss": [275, 285], "crucial": 10, "cube": 365, "cumul": [176, 246], "current": [167, 318, 321, 327, 330], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 227, 228, 229, 230, 245, 249, 307, 315, 342, 359, 360, 404], "custom_config": 145, "custom_decod": 307, "custom_encod": 307, "custom_lenet": 86, "customiz": 423, "custommodul": 166, "customnetwork": 169, "customparametermodel": [171, 172], "cut": 101, "cvf": 154, "cvpr": 154, "d": [30, 154, 185, 188, 197, 216, 219, 223, 230, 259, 288, 292, 293, 297, 300, 303, 331, 356, 419], "d_": [188, 216, 219, 223, 258, 263, 297, 300, 303, 307, 308, 309, 310, 311], "d_1": [12, 13, 14, 273, 293], "d_2": [12, 13, 14, 273, 293], "d_h": [258, 309, 311], "d_k": 30, "d_model": [156, 157, 158, 160, 307, 308, 309, 310, 311], "d_n": [12, 13, 14, 273, 293], "d_out": [188, 219, 223], "dai": 154, "dampen": [318, 326, 328], "data": [4, 5, 6, 7, 8, 10, 15, 22, 154, 166, 168, 172, 183, 186, 188, 190, 196, 197, 202, 224, 227, 228, 229, 230, 235, 250, 256, 261, 262, 263, 278, 292, 298, 300, 303, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 342, 343, 344, 345, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 386, 392, 393, 400, 401, 402, 403, 404, 405, 407, 412, 413, 416, 417, 418, 419, 420, 423], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 227, 320, 332, 412, 414, 423], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 352, "debug": [155, 173, 330, 340, 423], "decai": [266, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "declar": [12, 13, 14, 273], "decod": [156, 307, 308, 309], "decoder_lay": [308, 309], "decoderlay": 308, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 333], "decoupl": [154, 319, 320, 322, 323, 324, 325], "decreas": [321, 322, 327], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 209, 246, 252, 273, 315, 342, 360, 404, 408, 409, 412, 413, 423], "deeper": [15, 74, 76, 84, 112, 119, 154, 252], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 273, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 207, 208, 209, 210, 212, 213, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 249, 254, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 317, 324, 330, 335, 337, 338, 339, 341, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 376, 377, 378, 385, 390, 391, 392, 394, 395, 397, 399, 400, 402, 404, 406, 408, 409, 411, 413, 417, 418, 420], "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 169, 170, 171, 172, 173, 193, 246, 248, 251, 255, 280, 281, 282, 283, 284, 298, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 338, 339, 353, 358, 370, 390, 412, 423], "definit": [15, 17, 228, 229, 230, 423], "degre": [227, 419, 423], "delai": 318, "deliv": [100, 101], "delta": [12, 182, 205, 254, 273, 282, 319], "delta_": [12, 182, 254, 273], "demand": 101, "demonstr": [15, 16, 136, 137, 138, 139, 144, 154, 315, 334], "denomin": [209, 210, 212, 213, 228, 229, 230, 286, 287, 288, 289, 290, 291, 292, 293, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 345], "denot": [22, 110, 111, 253, 258, 261, 262, 263, 265, 268, 269, 270, 271, 390], "dens": [15, 54, 55, 56, 57, 58, 154, 193, 224, 305, 320], "dense1": 15, "dense2": 15, "densenet": [55, 56, 57, 58, 85, 154, 234], "densenet_121": 154, "densenet_169": 154, "densenet_201": 154, "densenet_264": 154, "densiti": [176, 246], "depend": [15, 22, 23, 30, 92, 154, 172, 203, 204, 205, 207, 208, 226, 261, 346, 356, 376, 378, 402, 407, 416, 417, 421], "deploy": 102, "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 98, 154, 160, 170, 188, 193, 197, 216, 219, 223, 263, 267, 288, 292, 297, 300, 303], "depth_coef": 59, "depthseparableconv1d": 236, "depthseparableconv2d": 236, "depthseparableconv3d": 236, "depthwis": [30, 39, 77, 90, 150, 154, 186, 187, 188, 231, 232, 233], "depthwise_separ": [231, 232, 233], "der": 154, "deriv": [24, 25, 182, 214, 215, 216, 246, 254, 256, 261, 262, 263, 276, 278, 333], "descend": 27, "descent": [15, 318, 328], "describ": [10, 18, 19], "descript": 423, "deseri": 166, "design": [3, 4, 13, 15, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 162, 168, 170, 171, 172, 173, 175, 180, 252, 265, 315, 334, 423], "desir": [10, 14, 151, 166, 214, 215, 216, 266, 295, 296, 297, 313, 390, 392], "destin": 167, "det": [16, 20], "det_a": 18, "detail": [15, 155, 317, 342, 348], "detect": 154, "determin": [0, 15, 16, 17, 18, 86, 121, 122, 214, 215, 216, 239, 240, 243, 244, 261, 262, 263, 295, 296, 297, 299, 300, 302, 303, 326, 330, 335, 337, 338, 339, 341, 357, 358, 404, 414, 416], "determinist": 227, "develop": [10, 15, 93, 315, 342, 423], "deviat": [239, 241, 243, 412, 415, 423], "devic": [91, 92, 98, 99], "diag": [24, 365], "diagon": [24, 25, 27, 356, 359, 389, 408, 409], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 161, 162, 163, 164, 165, 167, 169, 171, 273, 277, 316], "dictionari": [86, 93, 100, 167, 168, 169, 171, 173, 316], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 170, 173, 182, 200, 226, 235, 254, 276, 283, 317, 331, 340, 342, 354, 364, 391, 405, 423], "differenti": [15, 17, 26, 224, 246, 315, 335, 337, 338, 339, 341, 343, 355, 357, 358, 361, 363], "digit": [7, 8, 89, 154], "dilat": [186, 187, 188, 228, 229, 230, 231, 232, 233, 261, 262, 263], "dilation_height": 190, "dilation_width": 190, "dim": [39, 40, 77, 185, 259, 281, 284], "dim_feedforward": [156, 307, 309, 311], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 112, 123, 140, 145, 152, 154, 156, 160, 168, 182, 185, 200, 202, 209, 210, 212, 213, 215, 216, 226, 234, 235, 254, 258, 259, 261, 262, 263, 266, 273, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 303, 307, 309, 310, 311, 313, 331, 334, 337, 341, 343, 347, 357, 376, 377, 378, 385, 386, 389, 390, 391, 393, 394, 395, 397, 400, 402, 405, 406, 407, 410, 411, 414, 416, 421], "dimension": [10, 22, 24, 25, 27, 77, 186, 187, 188, 217, 218, 219, 221, 222, 223, 235, 258, 261, 262, 263, 269, 270, 271, 286, 287, 288, 290, 291, 292, 298, 299, 300, 301, 302, 303, 307, 309, 311, 331, 347, 348, 352, 356, 374, 377, 385, 386, 389, 391, 396, 401, 402, 405, 407, 408, 409], "diminish": 320, "direct": [19, 280, 281, 282, 283, 284, 318, 326, 327, 328], "directli": [69, 70, 71, 72, 154, 169, 170, 171, 172, 226, 273, 313, 319, 320, 322, 323, 324, 325, 340, 342, 392, 423], "directori": [3, 4, 5, 6, 7, 8], "disabl": [193, 266, 267, 330, 332], "discontinu": 380, "discrep": [280, 281, 284], "discret": [335, 338, 342], "disk": 3, "displai": [29, 153, 155], "distinct": [93, 156], "distribut": [176, 182, 192, 226, 239, 240, 241, 242, 243, 244, 246, 254, 261, 262, 263, 265, 266, 268, 269, 270, 271, 276, 278, 281, 284, 298, 299, 300, 335, 337, 338, 339, 341, 342, 377, 385, 389, 391, 406, 415, 417, 418, 419, 420], "div": 365, "divers": [46, 154, 227, 418, 420, 423], "diversifi": 423, "divid": [1, 24, 154, 160, 161, 162, 163, 164, 165, 170, 173, 182, 186, 187, 188, 254, 280, 281, 282, 283, 284, 345, 394, 404, 415], "divis": [15, 24, 186, 187, 188, 258, 265, 268, 269, 270, 271, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 345, 404], "do": [24, 26, 166, 169, 170, 171, 172, 191, 194, 195, 196, 315, 325, 330, 364, 389, 400], "document": [4, 15, 154, 317, 334, 342], "doe": [15, 22, 23, 24, 25, 27, 155, 156, 166, 169, 170, 171, 172, 173, 244, 321, 322, 327, 330, 332, 335, 337, 338, 339, 340, 341, 355, 356, 357, 358, 359, 361, 362, 363, 364, 393, 403], "doesn": 332, "doi": 154, "domain": 4, "don": 332, "dosovitskii": 154, "dot": [12, 13, 14, 19, 22, 169, 170, 171, 172, 173, 185, 258, 259, 273, 293, 301, 302, 303, 347, 352, 365, 395, 397, 406, 411], "down": [3, 315, 421], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 175, "drawn": [337, 338, 339, 341, 342, 419], "drop": [39, 40, 77, 192, 193, 265, 266, 267, 268, 269, 270, 271], "drop_block": [198, 199], "drop_path": [39, 40, 198, 199, 267], "drop_path_r": [60, 77], "drop_prob": 267, "drop_rat": 77, "dropblock": [192, 272, 275], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 145, 152, 154, 156, 160, 176, 185, 191, 195, 196, 197, 258, 259, 265, 266, 269, 270, 271, 307, 309, 311], "dropout1d": [198, 199, 272, 275], "dropout1dmodel": 269, "dropout2d": [198, 199, 272, 275], "dropout3d": [198, 199, 272, 275], "dropout_p": [185, 259], "dropout_prob": 75, "dropout_r": 160, "dropoutmodel": 268, "droppath": [272, 275], "dtype": [166, 168, 224, 305, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 392, 413], "due": [22, 24, 54, 101, 186, 187, 250, 419], "dummi": 155, "duplic": [10, 14, 169, 171], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 112, 154, 166, 167, 168, 169, 170, 171, 172, 173, 182, 191, 192, 193, 194, 195, 196, 197, 209, 212, 227, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 343, 344, 376, 377, 378, 385, 391, 413, 416, 419, 423], "dy": [178, 249], "dynam": [0, 2, 3, 30, 140, 144, 154, 167, 170, 171, 172, 173, 214, 215, 216, 235, 266, 293, 295, 296, 297, 320, 325, 330], "dynamicnetwork": 170, "e": [0, 10, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 166, 182, 235, 253, 254, 255, 258, 265, 281, 316, 319, 326, 327, 359, 372, 374, 375, 382, 388, 389, 395, 417], "each": [1, 2, 3, 4, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 154, 156, 160, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 200, 202, 209, 212, 214, 215, 216, 224, 234, 235, 247, 250, 254, 258, 261, 262, 263, 265, 268, 269, 270, 271, 276, 278, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 335, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 394, 395, 397, 399, 400, 402, 404, 406, 407, 411, 412, 413, 414, 415, 416, 417, 419, 421, 423], "earli": [30, 154, 325], "earlier": 93, "eas": [4, 15], "easi": [2, 3, 4, 10, 15, 124, 125, 126, 127, 128, 129, 168, 169, 171], "easier": [3, 169, 170, 173], "easili": [4, 93, 168, 172, 423], "eccv": 154, "economi": 27, "edg": [92, 101, 400], "edu": [5, 6], "educ": [15, 154], "effect": [13, 154, 169, 170, 171, 172, 173, 182, 186, 187, 188, 190, 245, 246, 250, 253, 254, 256, 286, 287, 288, 290, 291, 292, 293, 313, 330, 331, 332, 397, 411], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 161, 164, 190, 231, 232, 233, 247, 248, 251, 273, 281, 315, 332], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 154], "efficientnet_b0": 154, "efficientnet_b1": 154, "efficientnet_b2": 154, "efficientnet_b3": 154, "efficientnet_b4": 154, "efficientnet_b5": 154, "efficientnet_b6": 154, "efficientnet_b7": 154, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 154, "efficientnet_v2_l": 154, "efficientnet_v2_m": 154, "efficientnet_v2_xl": 154, "efficientnetv2": 154, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 273, "einstein": [10, 12, 13, 14, 273], "either": [202, 313, 334, 335, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 392, 399], "element": [0, 10, 12, 14, 24, 25, 75, 154, 168, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 224, 228, 229, 230, 231, 232, 233, 234, 247, 248, 250, 254, 255, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 293, 298, 299, 300, 301, 302, 303, 331, 335, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 396, 399, 400, 402, 403, 404, 405, 407, 408, 409], "elementwise_affin": 293, "elimin": [12, 14], "elsewher": [301, 302, 303, 359], "elu": [177, 199, 257, 275], "elumodel": 245, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 160, 185, 199, 225, 258, 259, 275, 306, 307, 309, 310, 311], "embed_dim": [258, 307, 308, 309, 310, 311], "embedding_dim": [160, 224, 305], "embedding_lay": 305, "embedding_matrix": 224, "emphas": [93, 100], "emploi": [30, 60, 101], "empti": [167, 173, 365, 394], "empty_lik": 365, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 15, 22, 27, 59, 83, 103, 140, 141, 142, 143, 154, 167, 168, 169, 170, 171, 172, 185, 193, 250, 258, 259, 261, 262, 263, 276, 278, 307, 309, 311, 315, 317, 330, 332, 335, 337, 338, 339, 341, 343, 412], "encapsul": [259, 315, 343], "encod": [30, 154, 156, 160, 281, 284, 307, 308, 309, 310, 311], "encoder_lay": [310, 311], "encoderlay": 310, "encompass": 59, "encourag": [192, 266, 268, 269, 270, 271, 280, 281, 284, 321], "end": [23, 175, 178, 179, 180, 193, 245, 247, 248, 249, 250, 252, 267, 282, 283, 284, 298, 299, 300, 301, 302, 303, 325, 327, 349, 350, 352, 355, 360, 366, 370, 376, 378, 380, 395, 400, 408, 409, 423], "enforc": [12, 167, 169, 171, 273, 308, 309, 310, 311], "engin": 24, "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 154, 169, 171, 235, 251, 423], "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 166, 167, 168, 169, 170, 171, 172, 173, 182, 185, 214, 215, 216, 224, 228, 229, 230, 249, 254, 259, 265, 266, 267, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 315, 316, 318, 319, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 353, 360, 377, 385, 391, 393, 394, 400, 408, 409, 413, 414, 415, 416, 417, 421, 423], "enter": 332, "entir": [3, 193, 195, 196, 197, 267, 270, 271, 342], "entri": [60, 86, 96, 97, 405], "entropi": [203, 204, 280, 281], "environ": [15, 45, 47, 96, 97, 100], "ep": [192, 203, 204, 209, 210, 212, 213, 228, 229, 230, 266, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 319, 320, 321, 322, 323, 324, 325, 326], "epoch": [1, 3], "epsilon": [30, 210, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 319, 320, 321, 322, 323, 324, 325, 326], "equal": [22, 226, 298, 299, 300, 360, 394, 404, 414, 416], "equat": [19, 24, 26], "equival": [348, 389, 401], "error": [0, 3, 10, 12, 14, 19, 21, 60, 167, 170, 171, 172, 173, 176, 205, 207, 246, 267, 273, 280, 281, 282, 283, 315, 316, 332, 334, 360, 393], "especi": [3, 169, 171, 172, 253, 331, 332, 334, 340, 412, 413, 417, 423], "essenti": [1, 3, 15, 16, 22, 24, 82, 187, 190, 315, 340, 342, 376, 412, 413, 417, 423], "estim": [283, 321, 322, 323, 324, 325, 326], "et": [74, 154, 307], "eta": 327, "eta_": 327, "etc": [10, 54, 60, 93, 103, 280, 313, 413], "euclidean": 23, "european": 154, "eval": 267, "evalu": [167, 209, 212, 265, 266, 267, 268, 269, 270, 271, 286, 287, 288, 290, 291, 292, 423], "even": [319, 332, 355, 356, 359, 361, 362, 363, 364], "evenli": [214, 215, 216, 295, 296, 297, 355, 360, 394, 404], "everi": [1, 423], "everywher": 380, "exact": [167, 170, 390, 417, 419], "exactli": 173, "exampl": [4, 348], "excel": [76, 100], "except": [0, 380, 395, 397, 411], "excit": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 234], "exclud": [408, 409], "exclus": [338, 341, 355], "exdb": 8, "execut": [170, 332], "exist": [14, 26, 169, 171, 173, 333, 395], "exit": 332, "exp": [175, 180, 181, 183, 245, 252, 365], "expand": [4, 10, 14, 49, 154, 190, 393, 402, 407], "expans": [10, 12, 14, 53, 77, 93, 96, 97], "expansion_factor": 92, "expect": [17, 170, 173, 193, 258, 265, 267, 268, 269, 270, 271, 293, 307, 308, 309, 310, 311, 315, 334], "expens": 3, "experi": [15, 93, 340, 342, 423], "experiment": 342, "explan": [22, 24, 28, 39, 145, 152, 214, 215, 216, 295, 296, 297, 318], "explicit": [12, 13, 14, 173, 273], "explicitli": [14, 154, 169, 171], "explod": [252, 286, 287, 288], "explor": [99, 315, 342], "expon": [22, 353], "exponenti": [175, 180, 182, 245, 252, 254, 265, 321, 322, 323, 324, 325, 374], "express": [10, 12, 14, 42], "extend": [4, 103, 123, 140, 154], "extens": [154, 317], "extern": [4, 15], "extra": [53, 72, 101, 393], "extract": [30, 73, 79, 82, 112, 123, 140, 150, 154, 190, 263, 298, 300, 333, 356, 376, 378, 408, 409, 414, 416], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 113, 154, 162], "ey": 365, "f": [1, 4, 5, 6, 7, 8, 15, 154, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 251, 254, 307, 309, 311], "f_1": 234, "f_2": 234, "facilit": [10, 13, 73, 169, 173, 182, 254, 261, 262, 263, 315, 317, 415, 423], "factor": [59, 75, 93, 175, 185, 186, 187, 188, 190, 234, 243, 244, 258, 259, 313, 318, 325, 326, 327, 328, 334], "factori": 151, "failur": [169, 170, 171, 172, 315], "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 166, 167, 168, 185, 191, 193, 194, 195, 196, 197, 209, 212, 226, 237, 239, 240, 241, 242, 243, 244, 258, 259, 261, 262, 263, 267, 276, 278, 307, 308, 309, 310, 311, 313, 321, 322, 326, 330, 335, 337, 338, 339, 341, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 376, 377, 378, 385, 391, 392, 413], "famili": [53, 93, 154, 333], "fan": [239, 240, 243, 244], "fan_in": [239, 240], "fan_out": [239, 240], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 325, "faster": [154, 320, 324, 332], "fc": [82, 112, 123, 130, 140, 170, 234, 262, 263, 298, 299, 300, 301, 302, 303], "fc1": [88, 89, 155, 169, 173, 246, 247, 248, 250, 251, 252, 253, 255, 256, 278], "fc2": [88, 89, 155, 169, 173, 246, 247, 248, 250, 252, 253, 255, 256, 278], "fc3": 89, "featur": [3, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 192, 200, 202, 209, 210, 228, 229, 230, 234, 235, 263, 266, 268, 269, 270, 271, 276, 278, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 315, 320], "feature_extractor": 86, "fed": [3, 423], "feed": [3, 343, 423], "feedforward": [155, 156, 160, 307, 309, 311], "femto": [47, 154], "fergu": [152, 154], "fetch": 0, "few": 155, "fewer": [1, 104, 105, 106, 107, 108, 109, 154, 393], "field": [5, 6, 8, 140, 144, 154, 235], "file": [3, 333], "fill": [237, 241, 242, 337, 338, 339, 341, 361, 362, 363, 364], "filter": [60, 93, 152, 154, 186, 187, 188, 190, 228, 229, 230, 262, 263], "filter_height": 190, "filter_s": 190, "filter_width": 190, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 160, 169, 170, 171, 172, 173, 185, 235, 258, 307, 308, 310, 412, 423], "find": [26, 376, 378], "fine": [99, 102, 234, 423], "finish": 332, "first": [5, 6, 7, 8, 19, 86, 152, 155, 170, 171, 200, 234, 276, 321, 322, 323, 324, 325, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 386, 394, 399, 411, 412, 413, 423], "fit": [14, 315], "fix": [154, 170, 400], "flatten": [12, 82, 86, 173, 190, 352, 398, 401, 402], "flexibl": [1, 3, 4, 10, 12, 14, 15, 40, 73, 82, 83, 84, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 154, 169, 170, 171, 172, 173, 273, 313, 315, 317, 334, 361, 362, 413, 423], "flexibli": 13, "flip": [418, 420, 423], "float": [2, 5, 6, 7, 8, 39, 40, 59, 60, 75, 77, 90, 94, 156, 160, 166, 168, 175, 178, 185, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 209, 210, 212, 213, 224, 227, 228, 229, 230, 237, 241, 242, 243, 244, 245, 249, 258, 259, 265, 266, 267, 268, 269, 270, 271, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 305, 307, 309, 311, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 341, 343, 355, 358, 360, 370, 392, 415, 417, 418, 419, 420], "float32": [166, 168, 343, 355, 356, 359, 360, 361, 363, 392, 413], "float64": [364, 392, 413], "flow": [30, 76, 82, 130, 154, 173, 192, 244, 246, 253, 256, 261, 262, 263, 276, 278, 330], "fly": [2, 3], "fname": 3, "focu": [15, 30], "focus": 15, "follow": [0, 12, 14, 15, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 175, 176, 178, 179, 180, 181, 182, 183, 185, 200, 202, 226, 228, 229, 230, 231, 232, 233, 234, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 376, 378, 386, 393, 399, 403, 414, 415, 416, 417, 418, 419, 420, 423], "foral": [308, 310], "forc": 192, "form": [25, 235, 308, 310, 352, 399, 402, 407, 423], "format": [2, 3, 5, 6, 7, 8, 155, 281, 284, 413], "formul": 176, "formula": [19, 27, 182, 214, 215, 216, 254, 255, 282, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 348, 391, 417], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 166, 167, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "found": 15, "foundat": [82, 93, 130, 167, 315, 317, 343], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 400], "frac": [13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 193, 200, 202, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 415], "frame": 197, "framework": [4, 10, 15, 154, 281, 284, 286, 287, 288, 290, 291, 292, 316, 317, 423], "frequent": [281, 284], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 166, 167, 168, 169, 170, 171, 172, 173, 190, 192, 200, 209, 212, 224, 226, 228, 229, 230, 234, 235, 237, 239, 240, 241, 242, 243, 244, 251, 258, 261, 262, 263, 265, 266, 268, 269, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 308, 310, 311, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 348, 349, 350, 354, 356, 376, 377, 378, 385, 391, 395, 397, 399, 402, 404, 405, 406, 407, 411, 414, 415, 416, 417, 418, 419, 420, 423], "full": [27, 94, 96, 97, 156, 160], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 202, 234, 235, 278, 342], "func": 333, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 167, 169, 170, 171, 172, 173, 228, 229, 230, 234, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 307, 309, 311, 315, 317, 334, 342, 412, 423], "fundament": [15, 185, 202, 278, 413], "further": [13, 15, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 342, 377, 385, 391], "fuse": [30, 140], "fusion": [141, 142, 143], "futur": [185, 259, 277, 310, 311], "g": [0, 10, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 234, 235, 265, 316, 319, 326, 395, 417], "g_": 320, "g_t": 326, "gain": [243, 244], "gamma": [210, 286, 287, 288, 289, 290, 291, 292, 293], "gamma_c": [210, 289], "gap": [112, 123, 140, 234], "gaussian": [176, 246], "gelu": [177, 199, 257, 275], "gelunetwork": 246, "gener": [24, 41, 46, 50, 155, 156, 193, 227, 265, 266, 268, 269, 270, 271, 291, 307, 322, 324, 325, 332, 335, 337, 338, 339, 340, 341, 342, 347, 355, 357, 358, 360, 399, 416, 417, 418, 420, 423], "geoffrei": [5, 6], "geq": 408, "get": [5, 6, 7, 8], "github": 7, "give": [15, 318, 326], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 190, 224, 258, 259, 273, 280, 281, 284, 316, 330, 335, 362, 364, 404, 412, 417, 418, 420, 423], "global": [0, 59, 112, 123, 130, 140, 154, 210, 234, 289, 330, 332, 340, 342], "global_response_norm": [199, 211], "globalresponsenorm": [275, 294], "go": [10, 74, 154], "goal": [280, 281, 284], "googlenet": [74, 154], "gpu": 154, "grad": [166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 190, 193, 200, 202, 226, 231, 232, 233, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 316, 317, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420, 421], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 154, 166, 168, 266, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 335, 337, 338, 339, 341, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 392, 413], "grain": 234, "graph": [15, 244, 343, 355, 356, 359, 361, 362, 363, 364, 413], "grayscal": [7, 8, 86, 87, 88, 89, 417, 423], "greater": [49, 370, 394], "green": 417, "grid": 399, "grn": 289, "groundbreak": 154, "group": [93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 170, 186, 187, 188, 228, 229, 230, 235, 261, 262, 263, 316, 317], "group1": 170, "group2": 170, "groupedconvblock": 123, "growth_rat": [54, 55, 56, 57, 58], "guarante": 340, "h": [10, 12, 13, 14, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 162, 185, 187, 188, 190, 192, 196, 197, 210, 215, 216, 218, 219, 222, 223, 226, 227, 229, 230, 234, 258, 259, 273, 287, 288, 289, 291, 292, 296, 297, 300, 303, 307, 309, 311, 414, 416], "h_": [187, 188, 215, 216, 218, 219, 222, 223, 226, 262, 263, 296, 297, 299, 300, 302, 303], "h_out": [187, 188, 218, 219, 222, 223], "h_stack": 397, "ha": [0, 19, 41, 155, 173, 186, 187, 188, 228, 229, 230, 251, 255, 280, 281, 286, 287, 288, 290, 291, 292, 293, 313, 316, 317, 348, 389, 393, 395, 397, 406, 411, 417], "half": 383, "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 154, 167, 169, 170, 171, 172, 173, 224, 281, 284, 315, 317, 332], "handwritten": [7, 8, 89], "hang": 154, "hard": [96, 97, 248], "hard_sigmoid": 247, "hardsigmoid": [248, 257, 275], "hardswish": [257, 275], "hardwar": 15, "hat": [30, 321, 322, 323, 324, 325], "have": [0, 1, 18, 19, 21, 24, 25, 27, 168, 170, 172, 173, 187, 188, 192, 224, 244, 305, 315, 359, 361, 362, 363, 364, 376, 378, 395, 397, 399, 405, 406, 411, 415, 421], "he": 154, "head": [30, 39, 77, 92, 150, 156, 160, 185, 258, 259, 307, 309, 311], "head_fn": 77, "height": [30, 150, 187, 188, 190, 196, 197, 210, 215, 216, 218, 219, 222, 223, 226, 227, 235, 262, 263, 287, 288, 289, 291, 292, 296, 297, 299, 300, 302, 303, 313, 414, 416, 421], "help": [15, 30, 75, 178, 180, 197, 224, 245, 249, 251, 252, 256, 286, 287, 288, 298, 299, 301, 302, 305, 318, 321, 322, 324, 330, 331, 332, 334, 386], "henc": 403, "here": [3, 17, 167, 200, 315, 317, 331, 332, 334, 342, 412, 413, 423], "hidden": [28, 152, 156, 160, 170], "hidden_s": 170, "hierarch": [39, 40, 154, 170, 173, 315], "hierarchi": 262, "hierarchicalnetwork": 170, "high": [15, 42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 162, 163, 338, 341], "higher": [49, 60, 90, 98, 123, 281, 284, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 347, 348, 352, 374, 386], "highest": [53, 101, 338], "highli": [30, 45, 53, 95, 154], "highlight": [234, 301, 302, 303], "hint": 334, "hinton": [5, 6], "histor": 320, "histori": [335, 337, 338, 339, 341, 355, 356, 357, 358, 359, 361, 362, 363, 364], "hold": [93, 169, 170, 171, 172], "horizont": [397, 406, 418, 423], "hot": [281, 284], "how": [2, 3, 12, 14, 15, 136, 137, 138, 139, 144, 170, 173, 273, 315, 334, 423], "howard": 154, "howev": [166, 244], "hstack": 398, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [154, 234], "huang": 154, "huber": [205, 282], "huber_loss": [199, 206], "huberloss": [275, 285], "huberregressionmodel": 282, "hue": 423, "huge": [48, 154], "hybrid": [101, 102, 154], "hyperbol": [183, 256, 372, 382, 388], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 316, 318], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "i_1": [12, 13, 14, 273], "i_2": [12, 13, 14, 273], "i_k": 14, "i_m": [12, 14, 273], "iccv": 154, "iclr": 154, "idea": 154, "ideal": [15, 42, 46, 50, 90, 93, 102, 173], "ident": [21, 22, 77, 154, 227, 267, 275, 279, 340, 342, 359, 403], "identifi": 171, "idx": [2, 3], "ieee": [154, 234], "ignor": [307, 308, 309, 310, 311], "ii": 389, "ij": [30, 182, 226, 254, 346, 347, 348, 352, 399, 408, 409], "ik": [346, 347, 348], "ill": [18, 24], "ilsvrc": 154, "imag": [3, 4, 5, 6, 7, 8, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 153, 154, 160, 161, 162, 163, 164, 165, 187, 212, 227, 229, 234, 262, 291, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "image_dir": 3, "image_path": 3, "image_s": [160, 161, 162, 163, 164, 165], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144, 154], "imbal": [281, 284], "img_siz": [30, 160, 161, 162, 163, 164, 165], "impact": [154, 324], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 154, 156, 160, 167, 190, 193, 231, 232, 233, 235, 258, 259, 267, 289, 309, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 397, 411, 417], "impli": [261, 262], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "improp": [10, 170, 173, 342], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 154, 158, 192, 193, 209, 224, 227, 234, 246, 252, 256, 273, 305, 318, 319, 320, 321, 322, 323, 324, 325, 326, 334, 416, 419, 423], "imread": 3, "in1_featur": [200, 276], "in2_featur": [200, 276], "in_channel": [30, 112, 160, 170, 173, 228, 229, 230, 231, 232, 233, 234, 235, 261, 262, 263, 287, 288, 298, 299, 300, 301, 302, 303, 315], "in_featur": [169, 170, 173, 202, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 262, 263, 265, 268, 269, 276, 278, 280, 281, 282, 283, 284, 286, 290, 293, 298, 299, 300, 301, 302, 303], "incept": [74, 75, 76, 77, 82, 83, 84, 85, 154], "inception_next": 77, "inception_next_atto": 154, "inception_next_bas": 154, "inception_next_smal": 154, "inception_next_tini": 154, "inception_resnet_v1": 154, "inception_resnet_v2": 154, "inception_v1": 154, "inception_v3": 154, "inception_v4": 154, "inceptionnext": [78, 79, 80, 81, 85, 154], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 160, 167, 168, 170, 172, 173, 226, 228, 229, 230, 231, 232, 233, 309, 311, 313, 315, 316, 317, 324, 334, 342, 348, 400, 408, 409], "inclus": [168, 171, 338, 341, 360], "incom": [202, 278], "incompat": 393, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 246], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 186, 187, 188, 190, 227, 320, 327, 331, 397, 411, 417, 418, 420, 423], "independ": [170, 186, 187, 188, 258, 265, 268, 269, 270, 271, 293, 348, 358, 415, 417, 419, 421], "index": [0, 2, 5, 6, 7, 8, 10, 12, 210, 224, 273, 289, 305, 331, 355, 356, 359, 399, 403], "indexerror": 0, "indic": [0, 1, 13, 14, 110, 111, 145, 155, 168, 170, 172, 173, 204, 208, 224, 281, 284, 298, 305, 307, 308, 309, 310, 311, 330, 343, 414, 416], "individu": [3, 170, 173, 282, 293, 317, 320, 327], "induc": [180, 252], "inf": 387, "infer": [136, 137, 138, 139, 144, 170, 173, 332], "infin": [25, 27, 323], "inform": [15, 30, 154, 155, 166, 234, 317, 319, 332], "infti": [23, 325], "inherit": [1, 318, 326, 328], "init": 238, "initi": [1, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 166, 168, 169, 170, 171, 172, 173, 235, 237, 239, 240, 241, 242, 243, 244, 258, 261, 262, 263, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 293, 305, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 337, 340, 341, 342, 355, 359, 360, 361, 362, 363, 364, 392], "initial_accumulator_valu": 320, "inner": [15, 346, 365], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 154, 155, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 334, 342, 343, 344, 346, 347, 348, 352, 356, 358, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "input1": 276, "input2": 276, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 289, 295, 296, 297, 305, 394, 408, 409], "input_1": 200, "input_2": 200, "input_data": [245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303], "input_indic": [224, 305], "input_s": [170, 172, 254, 281, 284], "input_shap": 155, "input_tensor": [15, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 166, 169, 170, 171, 172, 173, 182, 192, 193, 231, 232, 233, 234, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 313, 315, 414, 415, 416, 417, 418, 419, 420, 421], "insid": [3, 330, 332], "insight": [15, 154], "inspect": [167, 168, 173, 316], "inspir": [10, 12, 14, 39, 154], "instabl": [24, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "instal": 15, "instanc": [0, 1, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 212, 251, 290, 291, 292, 293, 307, 308, 310, 316, 333, 392, 402, 407, 423], "instance_norm": [199, 211, 290, 291, 292], "instancenorm1d": [275, 294], "instancenorm1dmodel": 290, "instancenorm2d": [275, 294], "instancenorm3d": [275, 294], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 161, 162, 163, 164, 165, 333], "instead": [15, 155, 169, 170, 171, 172, 173, 239, 240, 243, 244, 305, 307, 309, 311, 321, 322, 323, 332, 334, 357, 358], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 182, 185, 186, 187, 188, 190, 192, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 254, 258, 259, 261, 262, 263, 266, 273, 276, 278, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 321, 322, 323, 324, 325, 327, 333, 335, 337, 338, 339, 340, 341, 343, 355, 356, 357, 359, 360, 361, 363, 370, 376, 377, 378, 385, 386, 390, 391, 392, 393, 394, 395, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 421], "int32": 305, "integ": [1, 3, 22, 130, 145, 186, 187, 188, 215, 216, 258, 261, 262, 263, 293, 296, 297, 299, 300, 301, 302, 303, 334, 338, 339, 341, 342, 357, 361, 363, 377, 385, 390, 391, 400, 402, 403, 404, 407], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 16, 101, 103, 154, 156, 168, 170, 172, 173, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 273, 276, 278, 298, 299, 300, 301, 302, 303], "intellig": [154, 234], "intend": [10, 166, 171, 172], "intens": [24, 54, 113, 415, 417], "intent": 334, "interact": [200, 276, 315, 342], "interdepend": 154, "interfac": [2, 167, 170, 317], "interfer": [330, 332], "intermedi": [24, 110, 111, 234, 307, 309, 311], "intern": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 169, 170, 171, 172, 173, 281, 284, 315, 414, 415, 416, 417, 418, 419, 420, 421], "interpol": [199, 225, 313, 360, 421], "interpret": [10, 154, 182, 254, 334, 395], "interv": [337, 341, 355], "introduc": [40, 60, 74, 75, 90, 91, 92, 123, 154, 179, 234, 246, 250, 251, 253, 256, 265, 268, 269, 270, 271, 307, 416, 419, 423], "introspect": 173, "intuit": [10, 12, 15, 169, 171, 315, 423], "inv": 20, "inv_a": 21, "invari": [299, 302], "invers": [15, 18, 21, 22, 24, 320, 367, 368, 369], "invert": [18, 21, 22, 26, 91, 92, 95, 154], "invok": 333, "involv": [12, 14, 17, 18, 19, 21, 24, 25, 27, 140, 175, 176, 178, 179, 180, 181, 183, 200, 202, 226, 261, 262, 263, 273, 276, 278, 334, 335, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 374, 375, 376, 378, 381, 383, 399, 400, 402, 407], "is_caus": [185, 259, 310, 311], "is_leaf": 343, "issu": [3, 252, 286, 287, 288, 321, 322], "item": [7, 283], "iter": [0, 1, 2, 3, 166, 167, 170, 172, 308, 310, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 355], "ith": [182, 254], "its": [4, 22, 24, 28, 40, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 154, 155, 166, 169, 170, 171, 172, 186, 187, 188, 190, 227, 235, 244, 246, 250, 255, 266, 301, 302, 303, 315, 316, 319, 327, 330, 331, 332, 333, 355, 357, 358, 363, 376, 378, 392, 393, 403, 404, 415, 418, 420, 423], "itself": [17, 22, 169, 170, 171, 172], "j": [8, 10, 12, 13, 14, 30, 182, 224, 234, 254, 273, 286, 287, 288, 290, 291, 292, 298, 299, 301, 302, 305, 399, 406, 408, 409, 414, 416], "j_1": [12, 14, 273], "j_2": [12, 14, 273], "j_k": 14, "j_n": [12, 14, 273], "jie": 154, "jk": 347, "join": [3, 395], "json": 333, "k": [22, 30, 154, 185, 186, 258, 259, 261, 281, 287, 288, 291, 292, 298, 301, 302, 311, 346, 347, 356, 359, 395, 404], "k_d": [188, 263, 300, 303], "k_h": [187, 188, 262, 263, 299, 300, 303], "k_i": 258, "k_j": 30, "k_w": [187, 188, 262, 263, 299, 300, 303], "kaim": [154, 239, 240, 243, 244], "kaiming_norm": 238, "kaiming_uniform": 238, "kalenichenko": 154, "karen": 154, "kashif": 7, "kdim": 258, "keep": [167, 193, 250, 319, 332, 403, 408, 409], "keep_grad": [168, 335, 337, 338, 339, 341, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 392, 413], "keep_var": 167, "keepdim": [23, 376, 377, 378, 385, 391], "kei": [93, 154, 167, 169, 171, 173, 185, 258, 259, 311, 316], "kept": [377, 385, 391], "kernel": [86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 154, 186, 187, 188, 190, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 295, 296, 297, 299, 300, 303], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 170, 173, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 273, 287, 288, 298, 299, 300, 301, 302, 303], "keyerror": 167, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 167, 277], "kj": [346, 348], "known": 154, "kriz": [5, 6], "krizhevski": [5, 6, 154], "kroneck": [12, 182, 254, 273], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 162, 163, 164, 165, 167, 277, 333], "l": [17, 24, 69, 154, 163, 185, 186, 195, 214, 217, 221, 228, 234, 259, 265, 268, 269, 270, 271, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 310, 311, 386, 393], "l2": [318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "l_": [154, 186, 214, 217, 221, 261, 295, 298, 301, 307], "l_k": 258, "l_m": [308, 309], "l_out": [186, 217, 221], "l_q": 258, "l_t": [307, 308, 309], "l_v": 258, "label": [4, 5, 6, 7, 8, 75, 280, 281, 284], "lambd": 318, "lambda": [19, 180, 252, 318, 322], "lambda_1": 19, "lambda_2": 19, "lambda_i": 19, "lambda_n": 19, "languag": [4, 261, 276, 298, 301, 307], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 154, 161, 162, 163, 231, 232, 233, 251, 282, 315, 318, 321, 322, 323, 326, 327, 328, 332], "larger": [41, 59, 60, 112, 140, 158, 169, 171, 186, 187, 188, 190, 192, 266, 318, 349, 394, 400, 414, 416, 421], "largest": [53, 376], "last": [1, 182, 213, 254, 347, 348, 394, 395, 418, 420], "last_channel": 92, "later": [30, 154], "latest": 4, "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 160, 167, 169, 170, 173, 182, 193, 202, 209, 212, 213, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 254, 259, 261, 262, 263, 267, 276, 277, 278, 284, 293, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 315, 342, 400, 413], "layer1": 333, "layer2": 333, "layer_group": 170, "layer_norm": [199, 211, 293], "layer_norm_ep": [307, 309, 311], "layer_scale_init": 39, "layer_sequ": [170, 173], "layernorm": [275, 294, 307, 308, 309, 310, 311], "layernormmodel": 293, "le": 154, "lead": [10, 170, 173, 246, 290, 291, 292, 293, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 342, 393], "leaf": 343, "leaki": [178, 249], "leaky_relu": [177, 199, 249], "leakyrelu": [257, 275], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 169, 170, 171, 172, 179, 182, 234, 245, 249, 250, 254, 261, 262, 263, 268, 269, 270, 271, 273, 276, 278, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 340, 360, 404, 408, 409, 412, 413, 423], "learnabl": [30, 166, 167, 168, 209, 210, 212, 213, 228, 229, 230, 258, 261, 262, 263, 276, 278, 286, 287, 288, 289, 290, 291, 292, 293, 311, 315], "least": [24, 25, 27, 313, 389, 408, 409], "lecun": [8, 154], "left": [22, 23, 24, 27, 30, 176, 182, 246, 254, 258, 280, 281, 282, 284, 286, 287, 288, 290, 291, 292, 293, 301, 302, 303, 309, 311, 386, 414, 416], "leftarrow": 324, "len": [0, 1, 2, 3, 399], "lenet": [85, 87, 88, 89, 154], "lenet_1": 154, "lenet_4": 154, "lenet_5": 154, "length": [170, 185, 186, 195, 214, 217, 221, 261, 277, 286, 290, 295, 298, 301, 310, 311, 400, 415], "leq": [247, 248, 282, 325, 353, 370, 409], "lerp": 226, "less": [0, 175, 178, 205, 245, 249, 281, 282, 284, 360, 370], "let": 19, "level": [15, 82], "leverag": [12, 13, 14, 26, 30, 76, 77, 84, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 235, 315], "li": 154, "librari": [3, 10, 15, 16, 167, 315, 316, 317, 333, 334, 342, 343, 423], "lie": 335, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 165, 235, 248, 251], "like": [12, 13, 14, 15, 60, 82, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 166, 167, 170, 173, 186, 192, 243, 244, 252, 265, 266, 273, 286, 287, 288, 290, 291, 292, 330, 331, 334, 392, 413, 423], "likelihood": [208, 281, 284], "limit": [44, 51, 96, 97, 98, 100, 155, 251, 319, 370], "linalg": [15, 20], "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [15, 16, 17, 24, 25, 26, 77, 91, 95, 130, 154, 155, 169, 170, 171, 173, 175, 176, 178, 179, 180, 193, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 265, 267, 268, 269, 276, 277, 280, 281, 282, 283, 284, 286, 290, 293, 298, 299, 300, 301, 302, 303, 307, 309, 311, 333, 359], "linearli": 282, "linspac": 365, "linspace_tensor": 360, "list": [0, 1, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 166, 168, 169, 170, 171, 172, 213, 235, 277, 293, 316, 334, 335, 337, 338, 339, 341, 343, 356, 357, 358, 361, 362, 363, 364, 390, 393, 403, 404, 405, 410, 412], "listdir": 3, "liter": [13, 112, 203, 204, 205, 207, 208, 226, 228, 229, 230, 231, 232, 233, 235, 239, 240, 261, 262, 263, 280, 281, 282, 283, 284, 313, 399], "liu": 154, "ln": 353, "load": [3, 4, 5, 6, 7, 8, 166, 167, 168, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333], "load_state_dict": [167, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "loader": [1, 2, 3], "local": [30, 154, 190, 261], "locat": [154, 226], "log": [208, 280, 281, 284, 365], "log_softmax": 284, "logarithm": [353, 374, 375], "logic": [3, 295, 296, 297, 315, 316], "logit": [28, 39, 152, 182, 254, 281], "logsoftmax": [281, 284], "long": [30, 154, 324, 390], "lookup": [224, 305], "loop": [1, 12, 13, 14, 170, 273, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "loss": [15, 24, 169, 170, 171, 172, 173, 182, 203, 204, 205, 207, 208, 245, 246, 249, 250, 252, 253, 254, 256, 265, 268, 269, 270, 271, 277, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "low": [15, 82, 91, 96, 97, 100, 338, 341], "lower": [17, 90, 242, 308, 309, 310, 311, 318, 326, 327, 328, 341, 408, 409], "lower_triangular": 408, "lowest": 338, "lr": [316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 336, 365, 398, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "m": [70, 145, 154, 169, 170, 173, 258, 299, 300, 302, 303, 307, 308, 311, 321, 322, 323, 324, 325, 359, 408, 409], "m_": [321, 322, 323, 324, 325, 408, 409], "m_m": 309, "m_t": [309, 324, 325], "maaten": 154, "machin": [3, 7, 8, 15, 24, 154, 156, 234, 307, 321, 331, 340], "magnitud": [193, 224, 305, 326, 327, 423], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 170, 172, 227, 267, 273, 282, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 332, 342, 394, 417, 423], "main": [15, 25, 82, 170, 356, 359, 408, 409], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 166, 167, 169, 170, 171, 173, 180, 193, 239, 240, 243, 244, 245, 246, 252, 265, 267, 268, 269, 270, 271, 286, 287, 288, 290, 291, 292, 321, 326, 414, 417, 421], "make": [1, 3, 10, 15, 30, 42, 43, 46, 47, 73, 82, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 154, 161, 164, 170, 173, 253, 281, 282, 293, 299, 302, 315, 320, 321, 322, 323, 331, 333, 342, 343, 348, 399, 404, 412, 423], "manag": [15, 167, 169, 170, 171, 172, 173, 315, 317, 330, 332, 333, 342], "manhattan": 23, "mani": 155, "manipul": [10, 12, 15, 169, 171, 423], "manner": [10, 12, 13, 170, 173], "manual": [10, 203, 204, 208, 280, 281, 284, 332], "map": [12, 14, 77, 110, 111, 112, 123, 133, 140, 154, 167, 181, 183, 192, 210, 234, 253, 256, 267, 273, 289, 305, 394], "marri": 154, "mask": [154, 166, 185, 258, 259, 265, 268, 269, 270, 271, 307, 308, 309, 310, 311, 408, 409], "match": [10, 14, 26, 167, 170, 173, 185, 203, 205, 207, 213, 228, 229, 230, 266, 305, 316, 374, 393, 402, 403, 404, 407, 410, 415, 423], "math": [258, 371, 381, 387], "mathbb": [258, 404], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 200, 202, 226, 231, 232, 233, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 346, 347, 348, 352, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421], "mathcal": [239, 241, 243, 265, 268, 269, 270, 271, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293], "mathemat": [21, 228, 229, 230, 416, 418, 419, 420], "mathrm": 24, "matmul": 365, "matric": [16, 18, 19, 21, 24, 26, 27, 258, 311, 346, 347, 348, 359, 399, 408, 409], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 190, 200, 224, 277, 278, 305, 315, 346, 386, 399], "matrix_pow": 20, "matthew": 154, "max": [10, 23, 130, 145, 179, 221, 222, 223, 224, 247, 248, 250, 251, 301, 302, 303, 305, 323, 349, 365, 370], "max_norm": [224, 305], "max_pool": [301, 302, 303], "max_pool1d": [199, 220], "max_pool2d": [199, 220], "max_pool3d": [199, 220], "max_valu": 370, "maxim": [3, 48, 101], "maximum": [23, 250, 251, 301, 302, 303, 321, 323, 365, 370, 376, 419], "maxpool": [28, 152], "maxpool1d": [275, 304], "maxpool1dmodel": 301, "maxpool2d": [170, 173, 262, 275, 304], "maxpool2dmodel": 302, "maxpool3d": [263, 275, 304], "maxpool3dmodel": 303, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 166, 180, 186, 187, 188, 191, 203, 204, 205, 207, 208, 209, 212, 228, 229, 230, 241, 245, 246, 247, 249, 250, 252, 253, 256, 263, 265, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 321, 322, 323, 324, 325, 326, 330, 339, 365, 370, 374, 375, 376, 378, 381, 383, 385, 389, 390, 391, 412, 415, 423], "meaning": [13, 173, 334], "measur": [280, 281, 283, 284], "mechan": [15, 30, 110, 111, 130, 140, 144, 154, 156, 160, 172, 200, 258, 394], "medium": [47, 51, 70, 98, 99, 102, 154], "meet": 154, "mem_is_caus": [308, 309], "mem_key_padding_mask": [307, 308, 309], "mem_mask": [307, 308, 309], "membership": 280, "memori": [2, 3, 54, 307, 308, 309, 332, 357, 358], "merg": [12, 273], "meshgrid": 398, "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 169, 170, 171, 172, 173, 203, 204, 205, 207, 208, 239, 240, 243, 244, 280, 281, 282, 283, 284, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 342], "mha": 258, "mid": [80, 164], "mid_channel": [96, 97], "middl": 331, "might": 315, "min": [247, 248, 251, 350, 365, 370], "min_valu": 370, "mind": [0, 3, 15, 170, 173, 332], "mingx": 154, "mini": 1, "minim": [4, 15, 78, 92, 154, 173, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 317], "minimalist": 15, "minimum": [365, 370, 378], "minu": 253, "mirror": [362, 364], "mismatch": [10, 12, 14, 60, 167, 273, 315, 316], "miss": [167, 315], "mitig": [178, 245, 249, 252, 286, 287, 288], "mix": 77, "mixer": 77, "mlp": [77, 235], "mlp_dim": 160, "mlp_ratio": 77, "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [90, 91, 92, 93, 95, 96, 97, 100, 154], "mobilenet": [85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 154, 251], "mobilenet_v2": 154, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 154, "mobilenet_v3_smal": 154, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 154, "mobilenet_v4_conv_medium": 154, "mobilenet_v4_conv_smal": 154, "mobilenet_v4_hybrid_larg": 154, "mobilenet_v4_hybrid_medium": 154, "mobilenetv2": [91, 154], "mobilenetv3": [92, 96, 97, 154], "mode": [15, 197, 209, 212, 226, 239, 240, 265, 267, 268, 269, 270, 271, 313, 400], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 185, 192, 224, 227, 228, 229, 230, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 267, 268, 269, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 342, 412, 413, 423], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134], "modern": [39, 40, 77, 154], "modif": [151, 173, 332], "modifi": [29, 98, 112, 150, 153, 169, 170, 171, 172, 237, 239, 240, 241, 242, 243, 244, 265, 330, 332, 340, 397, 411], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 154, 155, 156, 166, 168, 169, 170, 171, 172, 173, 193, 228, 229, 230, 231, 232, 233, 234, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 342, 413, 423], "modular": [3, 15, 154, 156, 167, 170, 173, 315, 423], "moduledict": [170, 171, 173, 174], "modulelist": [172, 173, 174], "moment": [321, 322, 323, 324, 325], "momentum": [209, 212, 228, 229, 230, 286, 287, 288, 290, 291, 292, 318, 324, 326, 328], "momentum_decai": 324, "monoton": 255, "moor": 24, "more": [3, 4, 7, 10, 15, 19, 42, 112, 119, 158, 169, 170, 173, 192, 231, 232, 233, 245, 268, 269, 270, 271, 307, 315, 316, 317, 318, 319, 322, 323, 326, 327, 328, 339, 348, 389, 406, 408, 409, 423], "most": [16, 46, 154, 302, 413, 414, 423], "move": [318, 326], "mse": [205, 207, 282, 283], "mse_loss": [199, 206], "mseloss": [275, 285], "mu": [30, 241, 286, 287, 288, 290, 291, 292, 293, 391], "mu_c": 415, "mu_i": [290, 291, 292], "much": 423, "mul": 365, "multi": [3, 4, 77, 83, 140, 141, 142, 143, 154, 156, 160, 182, 185, 204, 208, 235, 254, 258, 281, 284, 307, 309, 311, 377, 385, 391], "multidimension": [337, 341, 357], "multiheadattent": [260, 275], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 171, 172, 173, 190, 226, 227, 234, 235, 258, 265, 268, 269, 270, 271, 273, 281, 284, 308, 310, 315, 331, 335, 337, 338, 339, 341, 346, 351, 357, 358, 386, 394, 404, 412, 417, 423], "multipli": [22, 94, 172, 202, 278, 313, 327, 351, 352], "must": [0, 1, 3, 17, 18, 19, 21, 22, 25, 26, 27, 155, 167, 169, 170, 171, 172, 173, 193, 213, 258, 265, 267, 268, 269, 270, 271, 284, 305, 307, 309, 311, 313, 316, 332, 335, 389, 393, 394, 395, 397, 400, 402, 403, 404, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 420], "my_simple_model": 333, "mymodel": [167, 168, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "myoptim": [316, 317], "n": [12, 22, 23, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 169, 170, 173, 185, 186, 187, 188, 190, 192, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 234, 239, 241, 243, 258, 259, 261, 262, 263, 270, 271, 276, 278, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 359, 377, 389, 391], "n1": 23, "nabla_": [319, 320, 321, 322, 323, 324, 325, 327], "nabla_t": 325, "nadam": 329, "nair": [5, 6], "name": [10, 12, 13, 14, 154, 155, 167, 169, 171, 173, 273, 333, 334], "nan": [25, 27], "nano": [50, 154], "natur": [24, 154, 261, 276, 298, 301, 307, 353, 374, 375], "ndarrai": [166, 168, 334, 335, 343, 356, 358, 362, 364, 392], "ndim": [25, 27, 168, 343], "ne": 22, "nearest": [226, 313], "necessari": [4, 5, 6, 7, 8, 24, 332, 397, 411], "need": [2, 4, 13, 14, 102, 154, 170, 171, 172, 182, 276, 307, 315, 332, 357, 358, 412, 413, 423], "neg": [22, 24, 27, 175, 208, 227, 245, 249, 250, 252, 281, 284, 327, 395], "negative_slop": [178, 249], "neglect": 172, "neighbor": 226, "neq": 23, "nest": [155, 170, 173, 315], "nestedmodel": 155, "nesterov": 324, "net": [152, 154], "network": [3, 4, 10, 13, 15, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 160, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 186, 187, 188, 192, 193, 200, 202, 209, 227, 234, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 298, 299, 300, 301, 302, 303, 305, 307, 309, 311, 315, 316, 317, 318, 326, 328, 341, 342, 343, 355, 361, 363, 376, 378, 400, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "neural": [3, 4, 10, 13, 15, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 89, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 186, 187, 188, 193, 200, 202, 209, 227, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 298, 299, 300, 301, 302, 303, 305, 315, 316, 317, 318, 326, 328, 341, 342, 343, 355, 361, 363, 376, 378, 400, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "neuralnetwork": [247, 248, 250, 255], "neuron": 249, "never": 417, "new": [14, 167, 168, 175, 176, 178, 179, 180, 181, 183, 200, 202, 226, 235, 239, 240, 241, 242, 243, 244, 316, 333, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 395, 397, 400, 402, 403, 406, 407, 408, 409, 410, 411], "new_tensor": 386, "next": [173, 412], "nll": 208, "nll_loss": [199, 206], "nllloss": [275, 285], "nlp": [224, 305], "nn": [5, 6, 7, 8, 15, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 174, 177, 184, 189, 198, 201, 206, 211, 220, 225, 236, 238, 257, 260, 264, 272, 274, 275, 279, 285, 294, 304, 306, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 413, 423], "no_grad": 330, "node": 343, "nois": [27, 342], "non": [19, 22, 24, 27, 172, 176, 178, 179, 239, 240, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 265, 268, 269, 270, 271, 307, 308, 309, 310, 311, 321, 322, 332, 353, 370], "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 193, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421], "norm": [16, 20, 224, 305, 308, 310, 323], "norm_first": [307, 309, 311], "norm_typ": [224, 305], "normal": [5, 6, 7, 8, 30, 39, 130, 154, 176, 180, 182, 183, 192, 209, 210, 212, 213, 224, 228, 229, 230, 238, 239, 243, 246, 252, 254, 265, 286, 287, 288, 289, 290, 291, 292, 293, 305, 307, 308, 309, 310, 311, 326, 339, 342, 412, 422, 423], "normalized_shap": [213, 293], "notat": [10, 12, 13, 14, 273], "note": [186, 265], "noth": [191, 194, 195, 196], "notimplementederror": [2, 167, 316], "notin": 370, "nov": 154, "novel": [7, 154], "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 166, 168, 234, 281, 284, 305, 334, 343, 348, 355, 356, 359, 361, 363, 364, 375, 386, 392, 413], "npy": [5, 6, 7, 8], "num": [308, 310, 360], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 254, 281, 284], "num_decoder_lay": [156, 307], "num_embed": [224, 305], "num_encoder_lay": [156, 307], "num_featur": [173, 228, 229, 230, 286, 287, 288, 290, 291, 292], "num_head": [30, 156, 160, 258, 307, 308, 309, 310, 311], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [160, 308, 310], "num_paramet": 172, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 168, 170, 172, 173, 185, 186, 187, 188, 190, 195, 196, 197, 200, 202, 204, 208, 209, 210, 212, 214, 215, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 253, 258, 261, 262, 263, 273, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 318, 337, 340, 341, 343, 353, 355, 357, 359, 360, 376, 377, 378, 390, 391, 394, 395, 397, 400, 402, 403, 405, 407, 411, 415, 417, 418, 420, 423], "numer": [13, 21, 24, 192, 203, 204, 209, 210, 212, 213, 228, 229, 230, 251, 266, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 334, 345, 355, 361, 363], "numpi": [15, 166, 168, 281, 284, 334, 343, 348, 356, 359, 360, 375, 386, 389, 392, 393, 400, 402, 407, 413, 423], "o": [3, 258, 300, 303, 361, 362], "object": [1, 3, 16, 140, 154, 167, 171, 172, 283, 315, 332, 344, 345, 349, 350, 351, 354, 392], "observ": 321, "obtain": 1, "occur": [14, 227, 332, 333, 395], "occurr": 22, "odot": [265, 268, 269, 270, 271], "off": [43, 99, 330], "offer": [4, 10, 15, 40, 41, 43, 53, 80, 99, 161, 315, 317, 342, 423], "offset": 359, "often": [22, 121, 122, 186, 187, 188, 190, 224, 266, 281, 284, 355, 363, 413, 417, 421, 423], "older": 324, "onc": 332, "one": [0, 13, 136, 137, 138, 139, 144, 172, 173, 182, 186, 202, 217, 221, 228, 229, 230, 252, 253, 254, 261, 269, 281, 284, 286, 290, 298, 301, 313, 316, 331, 334, 339, 354, 362, 376, 378, 396, 401, 406, 413], "ones": [200, 202, 261, 262, 263, 278, 286, 287, 288, 290, 291, 292, 293, 315, 359, 362, 365, 394], "ones_lik": 365, "onli": [15, 155, 226, 247, 250, 265, 266, 268, 269, 270, 271, 280, 281, 284, 286, 287, 288, 290, 291, 292, 293, 301, 302, 303, 327, 330, 355, 370, 376, 378, 386, 389, 400, 401, 403, 405, 408, 409], "onto": [25, 27], "openml": [5, 6, 7, 8], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 166, 167, 170, 175, 176, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 193, 197, 200, 202, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 315, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 361, 363, 374, 375, 376, 377, 378, 381, 383, 385, 386, 389, 391, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 421], "operatornam": [22, 24, 258, 307, 308, 309, 310, 311], "opposit": 318, "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 91, 92, 96, 97, 99, 100, 101, 102, 154, 166, 168, 171, 172, 190, 261, 262, 263, 305, 315, 332], "optimizer_st": [316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 182, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 249, 254, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 318, 326, 328, 335, 337, 338, 339, 341, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 376, 377, 378, 385, 390, 391, 392, 394, 395, 399, 402, 404, 405, 406, 408, 409, 413, 417, 418, 420], "ord": 23, "order": [1, 3, 10, 23, 27, 169, 170, 171, 172, 173, 390, 412], "ordered_dict": 173, "ordereddict": [167, 169, 170, 173], "organ": [169, 170, 171, 173, 333], "orient": 423, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 191, 227, 234, 256, 394, 400, 401, 402, 403, 407, 410, 421], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [318, 326, 328], "other": [2, 3, 15, 21, 75, 84, 86, 89, 99, 166, 167, 170, 173, 239, 240, 265, 266, 315, 316, 330, 332, 342, 343, 355, 357, 361, 363, 389, 399, 423], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 175, 178, 179, 180, 182, 193, 245, 247, 248, 249, 250, 252, 254, 267, 268, 269, 270, 271, 282, 298, 299, 300, 301, 302, 303, 308, 310, 316, 327, 333, 349, 350, 376, 378, 408, 409], "otim": [24, 200, 276], "out": [0, 3, 4, 10, 175, 176, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 239, 240, 243, 244, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 318, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 396, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411], "out_channel": [86, 92, 96, 97, 170, 173, 228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 287, 288, 298, 299, 300, 301, 302, 303, 315], "out_featur": [169, 170, 173, 200, 202, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 262, 263, 265, 268, 269, 276, 278, 280, 281, 282, 283, 284, 286, 290, 293, 298, 299, 300, 301, 302, 303], "outcom": [417, 418, 420], "outer": 365, "outlier": [205, 282], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 200, 202, 214, 215, 216, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 363, 364, 374, 375, 376, 377, 378, 381, 383, 385, 386, 389, 390, 391, 399, 400, 402, 404, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "output_height": 190, "output_lay": [170, 173], "output_s": [170, 214, 215, 216, 295, 296, 297], "output_width": 190, "output_with_norm": [224, 305], "output_with_pad": [224, 305], "outsid": [0, 267], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 167, 170, 172, 182, 214, 215, 216, 234, 254, 261, 262, 263, 281, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 318, 319, 320, 321, 322, 337, 341, 376, 377, 378, 385, 389, 391, 417, 418, 420], "overal": [150, 193], "overdetermin": 24, "overfit": [1, 28, 152, 194, 197, 266, 268, 269, 270, 271, 318, 321, 326, 328], "overhead": [92, 154, 234], "overli": 251, "overrid": [2, 3, 99, 100, 101], "overridden": [167, 316], "overwrit": [169, 171], "own": [4, 169, 170, 171, 172, 186, 187, 188, 244, 315, 415], "p": [23, 24, 59, 168, 171, 172, 191, 192, 193, 194, 195, 196, 197, 224, 265, 266, 268, 269, 270, 271, 298, 301, 302, 305, 417, 418, 420, 423], "p_d": [300, 303], "p_h": [299, 300, 303], "p_w": [299, 300, 303], "packag": [2, 3, 4, 10, 16, 154, 315, 317, 333, 340, 342, 413, 423], "pad": [86, 170, 173, 186, 187, 188, 190, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 287, 288, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 398], "pad_after_dim1": 400, "pad_after_dim2": 400, "pad_before_dim1": 400, "pad_before_dim2": 400, "pad_width": 400, "padding_height": 190, "padding_idx": [224, 305], "padding_width": 190, "pair": 200, "pang": 154, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74], "paradigm": 154, "parallel": [1, 3, 140, 154, 258], "param": [167, 168, 171, 172, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "param1": 167, "param_dict": 171, "param_group": [316, 317], "param_groups_setup": 316, "param_list": 172, "param_s": 333, "paramet": [0, 2, 15, 87, 88, 89, 154, 167, 315, 316, 317, 334, 342, 423], "parameter": 93, "parameterdict": 174, "parameterlist": 174, "parent": 315, "part": [166, 167, 244, 305, 315, 330, 332, 342, 355, 356, 359, 361, 362, 363, 364, 394, 404, 408, 409, 413, 423], "partial": [17, 18, 19, 21, 22, 23, 24, 26, 27, 175, 176, 178, 179, 180, 181, 182, 183, 200, 202, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411], "particip": [168, 413], "particular": [169, 171], "particularli": [15, 24, 91, 99, 124, 125, 126, 127, 128, 129, 170, 171, 172, 173, 182, 192, 202, 228, 229, 230, 231, 232, 233, 254, 278, 281, 284, 290, 291, 292, 293, 322, 330, 333, 360, 412], "partit": 404, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 167, 168, 169, 170, 171, 172, 173, 226, 228, 229, 230, 234, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 315, 334, 343, 360, 377, 385, 389, 390, 391, 395, 397, 401, 403, 405, 408, 409, 411, 413, 423], "past": [318, 319, 321, 326], "patch": [154, 160, 161, 162, 163, 164, 165, 190, 299], "patch_siz": [160, 161, 162, 163, 164, 165], "path": [3, 5, 6, 7, 8, 39, 40, 77, 193, 267], "pathwai": 154, "pattern": [10, 12, 13, 14, 30, 154, 179, 234, 250, 261, 262, 263, 273], "penal": [318, 326, 328], "penalti": [319, 320, 321, 322, 323, 324, 325], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 185, 214, 258, 273, 290, 291, 292, 293, 295, 311, 393], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 154, 158, 164, 167, 168, 172, 176, 185, 186, 187, 188, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 273, 276, 277, 278, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 316, 330, 332, 340, 342, 344, 345, 348, 351, 354, 374, 376, 378, 385, 390, 393, 404, 412, 414, 416, 421, 423], "permut": [12, 273, 390], "persist": [166, 335, 337, 338, 339, 341, 357, 358], "perturb": [19, 26, 27, 423], "phase": 30, "phi": [176, 246], "pi": [176, 246, 371, 381, 387], "pico": [51, 154], "piecewis": [247, 248], "pil": [413, 423], "pinv": 20, "pioneer": 154, "pipelin": [5, 6, 7, 8, 273, 342, 412, 413, 415], "pixel": [5, 6, 7, 8, 226, 313, 415, 417], "place": [237, 239, 240, 241, 242, 243, 244], "placehold": [167, 277], "plai": [334, 342], "plot": 399, "point": [4, 227, 330], "pointwis": [231, 232, 233], "pool": [10, 28, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 154, 214, 215, 216, 217, 218, 219, 221, 222, 223, 234, 235, 262, 263, 295, 296, 297, 298, 299, 300, 301, 302, 303, 376, 378], "pool1": 173, "pool2": 173, "poorli": 21, "popul": 167, "popular": [4, 154], "portion": [394, 408, 409, 423], "pose": 24, "posit": [1, 17, 22, 30, 154, 156, 160, 167, 173, 185, 227, 245, 249, 250, 252, 259, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 327, 331, 353, 394, 402, 407, 416], "possibl": [15, 423], "potenti": [24, 277, 326, 405], "power": [10, 15, 22, 50, 91, 96, 97, 103, 154, 162, 234, 273, 331, 332, 365, 412, 413, 423], "pp": 154, "practic": [24, 80, 281, 284], "practition": 423, "pre": [30, 69, 70, 71, 72, 113, 117, 118, 154], "preactbottleneck": [113, 117, 118], "preced": [154, 168, 313, 343], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "predecessor": 40, "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 161, 162, 163, 164, 165, 170, 252, 305], "predict": [150, 280, 281, 283, 284], "prefix": [167, 333], "prepar": [3, 331, 400, 402, 407, 413, 423], "prepend": [167, 393], "preprint": 154, "preprocess": [3, 4, 190, 227, 342, 412, 413, 423], "present": [280, 281, 282, 284, 286, 287, 288, 290, 291, 292, 293, 299], "preserv": [13, 154, 191, 193, 227, 265, 267, 355, 356, 359, 361, 362, 363, 364, 377, 385, 386, 391, 394], "preset": 4, "prevent": [1, 10, 169, 170, 171, 172, 173, 185, 194, 197, 251, 259, 266, 268, 269, 270, 271, 280, 281, 310, 311, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 332], "previou": [154, 318, 327, 332], "previous": 321, "primari": [15, 334], "primarili": 173, "principl": 154, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "priorit": [96, 97, 101, 235, 247], "prob": 335, "probabilist": 342, "probabl": [59, 75, 156, 160, 176, 182, 185, 191, 192, 193, 194, 195, 196, 197, 203, 246, 254, 258, 259, 265, 266, 267, 268, 269, 270, 271, 280, 281, 284, 307, 309, 311, 335, 417, 418, 420, 423], "problem": [24, 25, 27, 154, 178, 245, 249, 325], "proceed": 154, "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 110, 111, 112, 140, 151, 152, 154, 172, 186, 187, 188, 212, 227, 228, 229, 230, 234, 235, 252, 256, 261, 263, 276, 286, 287, 288, 290, 291, 292, 293, 298, 300, 301, 303, 307, 308, 310, 318, 334, 399, 413, 414, 415, 416, 421, 423], "produc": [28, 152, 155, 214, 215, 216, 234, 261, 262, 263, 295, 296, 297, 340, 342], "product": [15, 25, 27, 185, 248, 253, 255, 258, 259, 276, 293, 315, 346, 347, 351, 352], "program": [330, 342], "progress": [60, 320], "project": [25, 27, 156, 258], "projector": 24, "promin": [298, 300, 301, 302, 303], "promot": [173, 281, 284, 315], "propag": [18, 19, 21, 24, 25, 26, 27, 154, 167, 173, 200, 202, 226, 234, 299, 300, 326, 327, 335, 346, 347, 348, 352, 376, 378, 394, 399, 400, 403, 410], "proper": [224, 394], "properli": [0, 172, 182, 254, 315], "properti": [16, 18, 21, 22, 176, 180, 191, 246, 252, 265, 320, 325], "proport": [5, 6, 7, 8, 391], "proportion": 421, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 160, 162, 163, 167, 169, 170, 171, 172, 176, 185, 202, 215, 216, 224, 227, 259, 273, 280, 281, 282, 284, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 313, 315, 316, 317, 318, 319, 326, 328, 330, 332, 334, 340, 342, 343, 348, 355, 362, 376, 378, 390, 392, 402, 405, 407, 423], "pseudo": [21, 24], "purpos": [41, 46, 50, 337, 341, 355, 361, 363], "python": 334, "pytorch": 392, "q": [25, 154, 185, 258, 259, 311], "q_i": [30, 258], "qk": [30, 309, 311], "qr": 20, "quad": [24, 224, 258, 280, 281, 282, 283, 284, 301, 302, 303, 308, 310, 344, 345, 349, 350, 351, 354, 408, 409, 414], "quadrat": 282, "queri": [185, 258, 259, 311], "quoc": 154, "quotient": 345, "r": [13, 14, 25, 30, 154, 258, 404, 417, 418, 419, 420], "r_t": 325, "radam": 329, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 167, 315, 316, 353, 393], "rand": [336, 342], "randint": [336, 342], "randn": [12, 14, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 185, 231, 232, 233, 234, 235, 258, 259, 273, 307, 308, 309, 310, 311, 315, 336, 340, 342], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 185, 231, 232, 233, 234, 235, 258, 267, 273, 305, 307, 308, 309, 310, 311, 416, 417, 418, 419, 420, 423], "random_integ": 342, "random_tensor": 342, "randomcrop": [422, 423], "randomgrayscal": [422, 423], "randomhorizontalflip": [422, 423], "randomli": [1, 191, 193, 194, 195, 196, 197, 227, 265, 268, 269, 270, 271, 416, 417, 418, 419, 420, 423], "randomnoisedataset": [0, 1, 2], "randomrot": [422, 423], "randomverticalflip": 422, "rang": [0, 1, 16, 30, 43, 52, 102, 112, 120, 154, 172, 181, 183, 186, 187, 193, 204, 208, 244, 251, 253, 256, 267, 318, 326, 328, 335, 338, 360, 367, 368, 370, 415, 419, 423], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "rather": [7, 12, 14, 171, 172, 273, 322, 403], "ratio": [59, 77, 130, 234, 235, 421], "ravel": 398, "raw": [182, 254, 281, 334], "re": [168, 332], "readabl": [10, 169, 170, 171, 173, 273, 315, 334], "readi": [3, 15, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 253], "rearrang": [11, 190, 274, 275], "reassembl": 154, "recalibr": [131, 133, 134, 136, 137, 138, 139, 154, 234], "receiv": [301, 302, 303, 400, 408, 409], "recent": 326, "recept": [140, 144, 154, 235], "reciproc": [24, 365, 375, 383], "recognit": [89, 110, 111, 154, 262], "rectangular": 359, "rectif": 325, "rectifi": [178, 179, 249, 250, 325], "recurr": [154, 170, 293], "recurs": [155, 167], "red": 417, "reduc": [11, 28, 30, 90, 112, 123, 140, 145, 152, 154, 231, 232, 233, 234, 286, 287, 288, 290, 291, 292, 298, 299, 300, 301, 302, 303, 324, 327, 332, 334, 376, 377, 378, 385, 391, 417], "reduct": [10, 13, 27, 59, 130, 203, 204, 205, 207, 208, 234, 235, 280, 281, 282, 283, 284, 376, 378], "reevalu": 316, "refer": [4, 15, 167, 342, 356, 359, 395], "refin": 154, "reflect": 330, "regardless": [24, 401], "region": [188, 192, 214, 215, 216, 226, 247, 266, 296, 297, 400, 414, 423], "regist": [31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 166, 167, 168, 172, 315, 333], "register_buff": 166, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 161, 162, 163, 164, 165], "register_paramet": 167, "registr": [167, 315], "registri": [124, 125, 126, 127, 128, 129, 333], "registry_path": 333, "regress": [4, 207, 282, 283], "regul": [224, 305], "regular": [24, 28, 39, 59, 60, 75, 152, 193, 197, 259, 266, 268, 269, 270, 271, 318, 319, 320, 323, 324, 325, 326, 328], "reimagin": 154, "rel": [30, 154], "relat": [332, 359, 361], "relationship": [30, 421], "relev": [226, 318, 326, 328], "reli": [192, 332], "reliabl": [5, 6, 7, 8], "reliant": [268, 269, 270, 271], "relu": [15, 28, 130, 145, 152, 154, 155, 169, 170, 171, 173, 175, 177, 178, 199, 228, 229, 230, 234, 235, 239, 240, 243, 244, 245, 249, 251, 255, 257, 261, 262, 263, 275, 276, 277, 278, 307, 309, 311], "relu1": 173, "relu2": 173, "relu3": 173, "relu6": [257, 275], "remain": [5, 6, 7, 8, 52, 166, 193, 213, 265, 267, 268, 269, 270, 271, 305, 327], "rememb": 342, "remov": [333, 405], "reorder": [10, 12, 273, 386], "rep": 407, "repeat": [11, 398, 399, 407], "repetit": [10, 14, 402, 407], "replac": [7, 154, 307, 342, 417], "replic": [14, 308, 310, 393], "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 167, 168, 173, 200, 202, 209, 212, 213, 224, 261, 262, 263, 273, 276, 278, 281, 284, 293, 305, 308, 316, 317, 318, 324, 325, 326, 327, 328, 334, 335, 344, 345, 351, 354, 356, 377, 389, 390, 391, 399, 414, 416, 418, 419, 420, 421], "represent": [30, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 156, 160, 224, 234, 299, 302, 305, 316], "reproduc": [335, 337, 338, 339, 340, 341, 342, 423], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 163, 165, 166, 169, 173, 175, 176, 178, 179, 180, 181, 183, 200, 202, 226, 234, 235, 244, 277, 281, 284, 315, 330, 332, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 413, 414, 421], "requires_grad": [166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 190, 200, 202, 224, 226, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 313, 315, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413], "rescal": [203, 204, 208, 280, 281, 284], "research": 315, "reset": [168, 340, 343], "reshap": [10, 12, 15, 130, 202, 262, 263, 273, 313, 331, 334, 386, 398, 401], "residu": [76, 82, 83, 84, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 154, 309, 311], "residualblock": 112, "resili": 327, "resiz": [226, 412, 422, 423], "resnest": [85, 104, 105, 106, 107, 108, 109, 110, 111, 154], "resnest_101": 154, "resnest_14": 154, "resnest_200": 154, "resnest_26": 154, "resnest_269": 154, "resnest_50": 154, "resnest_50_1s4x24d": 154, "resnest_50_4s2x40d": 154, "resnet": [82, 83, 84, 85, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 234], "resnet_1001": 154, "resnet_101": 154, "resnet_152": 154, "resnet_18": 154, "resnet_200": 154, "resnet_269": 154, "resnet_34": 154, "resnet_50": 154, "resnet_arg": 140, "resnext": [85, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154], "resnext_101_32x16d": 154, "resnext_101_32x32d": 154, "resnext_101_32x4d": 154, "resnext_101_32x8d": 154, "resnext_101_64x4d": 154, "resnext_50_32x4d": 154, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 136, 137, 138, 139, 144, 154], "resolv": [12, 13, 14, 273], "resourc": [44, 45, 47, 48, 51, 52, 78, 92, 96, 97, 98, 99, 100, 101, 102, 154, 163, 332], "respect": [12, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 166, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 200, 202, 226, 235, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 370, 374, 375, 376, 377, 378, 381, 383, 385, 389, 390, 391, 399, 400, 402, 407, 417], "respons": [136, 137, 138, 139, 154, 169, 210, 289, 317], "rest": [408, 409], "restor": [234, 332], "restructur": 403, "result": [10, 12, 14, 17, 21, 22, 24, 154, 167, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 200, 202, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 235, 247, 251, 254, 258, 267, 273, 315, 316, 330, 332, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 416, 417, 423], "resum": 317, "retain": [168, 192, 266, 343, 355, 363, 376, 377, 378, 385, 391, 394, 408, 409, 413], "retent": 413, "rethink": 154, "retriev": [0, 2, 169, 171, 172, 224], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 166, 167, 169, 170, 171, 172, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 267, 268, 269, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 308, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 412, 423], "reus": [154, 413], "reusabl": [173, 267, 315, 412], "revers": [15, 173, 390, 418, 420], "revert": 332, "revolution": 154, "rgb": [5, 6, 30, 74, 75, 76, 83, 84], "rho": 319, "rho_": 325, "rho_t": 325, "right": [22, 23, 24, 26, 27, 30, 176, 182, 246, 254, 258, 280, 281, 282, 284, 286, 287, 288, 290, 291, 292, 293, 301, 302, 303, 309, 311, 386, 414], "rightarrow": [12, 258, 273, 404], "risk": 334, "rmsprop": 329, "rob": 154, "robust": [41, 46, 79, 100, 192, 227, 265, 268, 269, 270, 271, 282, 315, 319, 416, 417, 419, 423], "roland": 7, "role": [334, 342, 423], "root": [4, 5, 6, 7, 8, 320, 326, 383], "rotat": [199, 225, 419, 423], "rotated_imag": 227, "rout": [301, 302, 303], "routin": 15, "row": [18, 19, 21, 26, 202, 224, 359, 399, 408, 409, 411], "rprop": 329, "rule": [14, 21, 22, 273, 331, 344, 345, 349, 350, 351, 353, 354], "run": [15, 166, 209, 212, 228, 229, 230, 286, 287, 288, 290, 291, 292, 319, 332, 340, 342], "running_mean": [166, 209, 212, 286, 287, 288, 290, 291, 292], "running_var": [209, 212, 286, 287, 288, 290, 291, 292], "runtim": [60, 170, 173, 267, 315, 360], "s_": 327, "s_1": 404, "s_2": 404, "s_d": [300, 303], "s_h": [299, 300, 303], "s_i": 404, "s_n": 404, "s_w": [299, 300, 303], "sain": 154, "same": [18, 19, 21, 22, 26, 182, 191, 192, 193, 194, 195, 196, 197, 209, 210, 212, 213, 215, 216, 227, 228, 229, 230, 231, 232, 233, 235, 251, 261, 262, 263, 265, 268, 269, 270, 271, 277, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 327, 335, 340, 342, 348, 358, 362, 364, 374, 376, 377, 378, 386, 395, 397, 401, 403, 405, 406, 408, 409, 411, 415], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 214, 215, 216, 239, 240, 241, 242, 243, 244, 265, 268, 269, 270, 271, 276, 278, 281, 284, 293, 295, 296, 297, 335, 339, 342, 360, 414, 416, 418, 419, 420, 421], "sandler": 154, "satisfi": [17, 19, 26, 404], "satur": [245, 423], "save": [2, 166, 168, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333], "scalabl": [3, 46, 59, 124, 125, 126, 127, 128, 129, 150, 154, 315], "scalar": [18, 23, 203, 204, 205, 207, 208, 334, 335], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 154, 161, 162, 163, 164, 175, 180, 182, 185, 193, 209, 210, 212, 213, 224, 234, 235, 243, 244, 245, 247, 249, 252, 253, 254, 256, 258, 259, 265, 267, 268, 269, 270, 271, 281, 286, 287, 288, 289, 290, 291, 292, 293, 305, 313, 318, 320, 321, 322, 334, 342, 391, 421], "scale_by_keep": [193, 267], "scale_factor": 313, "scaled_dot_product_attent": [184, 199], "scaleddotproductattent": [260, 275], "scenario": [44, 49, 51, 99, 100, 101, 102, 171, 172, 293, 322, 323, 413, 417], "schedul": [266, 318], "scientif": 331, "score": [112, 123, 140, 182, 185, 259, 281], "scratch": 15, "script": 342, "se": [59, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "se_resnet_101": 154, "se_resnet_152": 154, "se_resnet_18": 154, "se_resnet_34": 154, "se_resnet_50": 154, "se_resnext_101_32x4d": 154, "se_resnext_101_32x8d": 154, "se_resnext_101_64x4d": 154, "se_resnext_50_32x4d": 154, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 273, 315, 342], "seamlessli": [3, 4, 10, 12, 14, 16, 168, 170, 173, 315, 334, 423], "search": 154, "second": [19, 170, 171, 200, 234, 276, 321, 322, 323, 324, 325, 331, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 386, 397, 399, 420], "section": 348, "see": [15, 348], "seed": [335, 336, 337, 338, 339, 341, 342, 423], "seek": 102, "seen": 319, "select": [13, 14, 140, 141, 142, 143, 144, 154, 226, 234, 235, 301, 303, 385], "selectivekernel": 236, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 160, 166, 167, 168, 169, 170, 171, 172, 180, 193, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 269, 273, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 412, 413], "selfattent": 311, "selu": [177, 191, 199, 257, 265, 275], "selunetwork": 252, "semodul": 236, "senet": [85, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "sensit": [205, 282, 286, 287, 288], "sentiment": 4, "separ": [0, 90, 110, 111, 150, 154, 186, 187, 188, 231, 232, 233, 290, 291, 292], "seq_len": [185, 258, 259, 307, 308, 309, 310, 311], "sequenc": [22, 112, 123, 140, 154, 156, 169, 171, 185, 186, 258, 305, 307, 308, 310, 311, 355, 360, 395, 397, 400, 402, 406, 407, 411, 412], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 169, 170, 174, 186, 228, 229, 230, 273, 277, 308, 310, 412, 423], "seri": [73, 87, 88, 140, 186, 228, 261, 298, 301], "serial": [166, 167, 317], "serv": [3, 7, 54, 82, 130, 145, 156, 167, 169, 170, 171, 172, 173, 315, 327, 413], "set": [3, 4, 5, 6, 7, 8, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 168, 172, 185, 186, 187, 188, 224, 249, 250, 252, 259, 261, 262, 263, 265, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 305, 316, 321, 322, 326, 335, 337, 338, 339, 340, 341, 342, 343, 355, 357, 358, 363, 364, 370, 376, 378, 392, 408, 409, 413, 417, 423], "setup": [4, 15, 124, 125, 126, 127, 128, 129], "sever": [24, 261, 262, 263, 298, 299, 300, 301, 302, 303, 332, 412, 423], "sgd": [15, 318, 325, 329], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 154, 155, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 315, 331, 334, 335, 337, 338, 339, 341, 342, 343, 346, 357, 358, 359, 361, 362, 363, 364, 370, 375, 376, 377, 378, 381, 383, 385, 386, 390, 391, 393, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 423], "shapelik": 338, "share": 154, "shen": 234, "shift": [209, 210, 212, 213, 247, 286, 287, 288, 289, 290, 291, 292, 293], "shorthand": 348, "should": [12, 13, 14, 86, 166, 273, 307, 308, 309, 310, 311, 332, 335, 337, 338, 339, 341, 357, 358, 367, 368, 389, 393, 400, 412], "show": [330, 333], "showcas": 15, "shown": [255, 340], "shrink": 319, "shuffl": [1, 2, 3], "side": [26, 170, 173, 186, 187, 188, 217, 218, 219, 221, 222, 223, 228, 229, 230, 261, 262, 263, 298, 299, 300, 301, 302, 303, 332], "sigma": [24, 30, 234, 239, 241, 243, 253, 255, 286, 287, 288, 290, 291, 292, 293, 390], "sigma_c": 415, "sigma_i": 24, "sigmoid": [177, 199, 234, 239, 240, 243, 244, 247, 248, 255, 257, 275, 280], "sigmoidnetwork": 253, "sign": [22, 282, 327, 365], "signal": [228, 261, 262, 263, 286, 290, 298, 299, 300, 301, 302, 303], "signific": [42, 332], "significantli": [91, 123, 154, 234, 412], "sim": [265, 268, 269, 270, 271], "similar": [10, 15, 239, 240, 348, 375, 386, 392, 393, 400], "similarli": [27, 389], "simonyan": 154, "simpl": [3, 4, 15, 155, 173, 186, 187, 188, 200, 202, 217, 218, 219, 221, 222, 223, 246, 247, 248, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 346, 347, 352, 412], "simplebinaryclassificationmodel": 280, "simpleblock": 193, "simpleclassificationmodel": [281, 284], "simplegelumodel": 246, "simplehardsigmoidmodel": 247, "simplehardswishmodel": 248, "simpleleakyrelumodel": 249, "simplemodel": [15, 155, 251, 267, 278, 333], "simpleregressionmodel": 283, "simplerelumodel": 250, "simpleselumodel": 252, "simplesigmoidmodel": 253, "simpleswishmodel": 255, "simpletanhmodel": 256, "simpli": [330, 389, 390, 403], "simplic": [154, 247, 250], "simplifi": [4, 12, 14, 69, 70, 71, 72, 87, 151, 154, 173, 228, 229, 230, 273], "simul": [155, 423], "simultan": 227, "sin": [365, 371], "sinc": [22, 25, 169, 170, 171, 172, 186, 187, 188, 244, 330, 332, 335, 339, 386, 399, 423], "sine": [368, 381, 382], "singl": [0, 4, 22, 25, 27, 112, 182, 228, 229, 230, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 281, 293, 299, 300, 301, 302, 303, 308, 309, 310, 311, 316, 334, 341, 357, 360, 395, 405, 415, 417, 423], "singleton": [14, 293], "singular": [18, 21, 22, 24, 26, 27], "sinh": [365, 372, 388], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 170, 185, 186, 187, 188, 190, 192, 195, 196, 197, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 258, 261, 262, 263, 266, 273, 276, 278, 280, 281, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 310, 311, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 338, 341, 342, 343, 376, 377, 378, 385, 391, 393, 394, 395, 397, 404, 405, 410, 411, 414, 416, 421, 423], "size_or_sect": 404, "sk": [140, 141, 142, 143, 144, 154, 235], "sk_resnet_18": 154, "sk_resnet_34": 154, "sk_resnet_50": 154, "sk_resnext_50_32x4d": 154, "skblock": 140, "skip": [154, 332], "sknet": [85, 141, 142, 143, 144, 154], "slice": [200, 389], "slide": [190, 298, 300, 301, 303], "slight": 234, "slightli": 423, "slope": [178, 245, 249], "slow": [3, 325], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 87, 88, 89, 92, 96, 97, 100, 154, 164, 165, 178, 192, 203, 204, 209, 210, 212, 213, 249, 252, 266, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 299, 302, 307, 309, 311, 319, 320, 321, 322, 323, 324, 325, 326, 327], "smaller": [10, 44, 69, 70, 71, 72, 98, 152, 154, 170, 173, 315, 320, 321, 350, 394, 414, 416, 421], "smallest": 378, "smooth": [75, 176, 245, 246, 255, 318, 326, 423], "smoother": 318, "so": [169, 170, 171, 172, 227, 315, 325, 357, 358, 412], "softmax": [30, 177, 185, 199, 235, 257, 258, 259, 275, 281, 309, 311], "softmaxmodel": 254, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [175, 193, 194, 227, 265, 267, 268, 269, 286, 287, 288, 290, 291, 292, 320, 321, 322, 332, 334, 394], "sometim": 331, "sophist": [170, 173], "sourc": [156, 157, 158, 185, 307, 342], "space": [19, 25, 27, 156, 186, 187, 188, 190, 214, 215, 216, 228, 229, 230, 231, 232, 233, 261, 262, 263, 295, 296, 297, 355, 360, 423], "span": 4, "spars": [320, 321], "spatial": [28, 30, 112, 123, 140, 145, 152, 154, 192, 210, 229, 234, 262, 263, 286, 287, 288, 290, 291, 292, 293, 299, 300, 301, 302, 303, 313, 399], "spatial_dim": 234, "spatio": 263, "special": [0, 1, 15, 24, 166, 167, 168, 265, 342], "specif": [4, 15, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 169, 170, 171, 172, 173, 235, 244, 265, 268, 269, 270, 271, 290, 291, 292, 305, 315, 316, 330, 342, 357, 376, 378, 402, 407], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 170, 182, 190, 197, 203, 204, 205, 207, 208, 213, 214, 215, 216, 224, 226, 227, 234, 254, 258, 261, 262, 263, 273, 280, 281, 282, 283, 284, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 313, 316, 334, 337, 338, 339, 340, 341, 353, 355, 356, 357, 358, 359, 360, 361, 363, 364, 370, 376, 377, 378, 385, 386, 390, 391, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 423], "speech": 290, "speed": [96, 97, 247, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "split": [4, 103, 110, 111, 154, 258, 394, 395, 397, 398, 411], "split_tensor": 404, "springer": 154, "sqrt": [30, 176, 185, 210, 239, 240, 243, 244, 246, 258, 259, 286, 287, 288, 289, 290, 291, 292, 293, 309, 311, 319, 320, 321, 322, 324, 325, 326, 365, 367, 368], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 160, 161, 162, 163, 164, 165, 192, 205, 207, 266, 282, 283, 319, 320, 321, 326, 365, 383], "squaredataset": [0, 1, 2, 3], "squeez": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 234, 398], "src": [154, 307, 310, 311], "src_key_pad": 310, "src_key_padding_mask": [307, 311], "src_mask": [307, 310, 311], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 154, 192, 203, 204, 209, 210, 212, 213, 224, 228, 229, 230, 251, 266, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 305, 307, 309, 311, 318, 319, 320, 321, 322, 323, 324, 325, 326, 415], "stabl": [239, 240, 243, 244, 265, 281, 318, 322, 323, 326, 327, 328], "stack": [14, 173, 235, 307, 308, 310, 397, 398, 411, 423], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 154], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "standalon": 251, "standard": [41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 176, 178, 231, 232, 233, 239, 241, 243, 245, 246, 249, 265, 307, 327, 339, 342, 348, 412, 415, 423], "start": [1, 3, 10, 318, 320, 327, 355, 360, 414, 416], "state": [48, 154, 162, 166, 167, 168, 170, 173, 316, 330, 332, 340], "state_dict": [167, 168, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "static": 173, "statist": [24, 191, 209, 212], "std": [5, 6, 7, 8, 241, 412, 415, 423], "stem": [82, 103, 112, 123, 140, 154], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 30, 168, 190, 235, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 355, 412, 413], "step_siz": 327, "still": [51, 319], "stochast": [15, 39, 40, 59, 60, 77, 193, 267, 318, 328], "stochastic_depth": 59, "stop": [355, 360], "storag": [169, 171, 343], "store": [2, 4, 5, 6, 7, 8, 112, 123, 140, 166, 167, 168, 169, 170, 171, 172, 234, 295, 296, 297, 332, 343, 414, 415, 416, 417, 418, 419, 420, 421], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 167, 169, 171, 173, 203, 204, 205, 207, 208, 226, 273, 313, 316, 333, 399], "straightforward": [328, 330, 344], "strategi": [30, 101, 154, 317], "streamlin": [2, 3, 154], "strength": [30, 266], "strict": [167, 316], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 170, 173, 186, 187, 188, 190, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 295, 296, 297, 298, 299, 300, 301, 302, 303], "stride_height": 190, "stride_width": 190, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 167, 169, 171, 173, 261, 262, 263, 273, 316], "strong": [30, 161], "structur": [0, 10, 13, 15, 25, 30, 60, 92, 150, 166, 167, 170, 192, 266, 273, 315, 316, 333, 334, 359, 413], "style": [10, 82, 212, 290, 291, 399], "sub": [169, 170, 171, 172, 173, 315, 365, 394, 404, 414, 416], "sub_tensor": 343, "subclass": [1, 2, 3, 15, 167, 168, 169, 315, 316], "sublay": [155, 307, 309, 311], "submodul": [155, 167, 315], "subsequ": [170, 173, 244, 342], "subset": [110, 111, 268, 269], "subspac": 258, "substanti": 163, "subtract": [15, 354, 415], "suffer": 320, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 161, 239, 240, 243, 244], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 154, 157, 164, 282, 320, 321, 337], "sum": [10, 13, 23, 169, 170, 171, 172, 173, 182, 185, 203, 204, 205, 207, 208, 235, 254, 280, 281, 282, 283, 284, 320, 344, 347, 352, 365, 389, 391, 393, 395, 397, 399, 402, 404, 407, 411], "sum_": [12, 13, 22, 30, 182, 210, 254, 273, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 346, 347, 377, 385, 389, 391, 393, 399, 402], "sum_i": [23, 352], "sum_j": 352, "sum_k": 348, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 298, 299, 300], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22], "sun": 234, "super": [15, 155, 166, 167, 168, 169, 170, 171, 172, 193, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 267, 268, 269, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333], "superior": [53, 154], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 169, 170, 171, 172, 173, 185, 226, 227, 259, 305, 313, 315, 317, 324, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354, 356, 359, 370, 375, 377, 381, 383, 385, 389, 390, 391, 395, 399, 403, 404, 413, 423], "suppos": 423, "sure": [315, 423], "svd": [20, 24], "swap": [12, 273], "swapax": 365, "swish": [96, 97, 257, 275], "symbol": [12, 13, 14, 273], "symmetr": [17, 214, 215, 216, 243, 244, 256], "syntax": [1, 10, 12, 13, 14, 273, 348], "system": [16, 17, 24, 25, 26, 100, 154, 330, 399], "systemat": [154, 423], "szegedi": [74, 154], "t": [10, 24, 30, 154, 307, 308, 309, 311, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 343, 348, 392, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "t0": 318, "t1": 392, "t2": 392, "t_": 308, "t_0": 308, "t_i": 308, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 305], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 315, 423], "take": [25, 298, 299, 300, 301, 302, 303, 313, 332, 412], "taken": 389, "tan": [154, 365], "tangent": [183, 256, 369, 387, 388], "tanh": [86, 170, 173, 176, 177, 199, 239, 240, 243, 244, 246, 257, 275, 365], "tanhnetwork": 256, "target": [5, 6, 7, 8, 51, 156, 157, 158, 173, 203, 204, 205, 207, 208, 214, 215, 216, 226, 280, 281, 282, 283, 284, 295, 296, 297, 307, 308, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 393, 414, 416, 421], "target_tensor": [280, 281, 282, 283, 284], "target_transform": [5, 6, 7, 8], "task": [4, 15, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 161, 162, 163, 164, 181, 182, 187, 200, 203, 204, 207, 208, 234, 235, 253, 254, 261, 262, 263, 280, 281, 282, 283, 284, 290, 291, 292, 298, 300, 301, 303, 307, 321, 331, 342, 359, 360, 423], "techniqu": [17, 21, 39, 60, 77, 101, 152, 154, 193, 209, 265, 266, 268, 269, 270, 271, 290, 291, 292, 317, 421, 423], "templat": 156, "tempor": [261, 263, 300, 303], "temporarili": 332, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 330, 332, 334, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "term": [12, 24, 52, 200, 228, 229, 230, 231, 232, 233, 258, 307, 309, 311, 318, 322, 324, 325, 326, 328], "test": [4, 5, 6, 7, 8, 360], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 169, 175, 178, 179, 180, 182, 185, 186, 187, 188, 193, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 280, 281, 282, 283, 284, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 338, 344, 345, 347, 349, 350, 351, 353, 354, 366, 370, 376, 377, 378, 380, 385, 386, 391, 393, 395, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 416, 418, 419, 420], "tgt": [154, 307, 308, 309], "tgt_is_caus": [308, 309], "tgt_key_padding_mask": [307, 308, 309], "tgt_mask": [307, 308, 309], "tgt_vocab_s": [156, 157, 158], "th": [200, 280, 281, 283, 284, 290, 291, 292, 349, 350, 353], "than": [0, 1, 7, 12, 14, 171, 172, 175, 178, 205, 231, 232, 233, 245, 249, 255, 273, 282, 316, 322, 360, 370, 389, 393, 394, 400, 406, 414, 416, 421], "thei": [0, 15, 27, 154, 166, 170, 172, 173, 258, 334, 399, 403, 414, 416, 423], "them": [3, 10, 154, 167, 172, 190, 318, 331, 395, 406, 412, 415, 423], "therebi": [265, 299, 300, 302, 303], "theta": [318, 319, 419], "theta_": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "theta_t": [325, 326], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 154, 155, 156, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 179, 181, 182, 183, 186, 187, 188, 190, 192, 193, 200, 202, 214, 224, 226, 227, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 284, 286, 287, 288, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 305, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 338, 339, 340, 342, 343, 347, 348, 352, 355, 357, 361, 362, 363, 364, 370, 374, 375, 376, 377, 378, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 400, 402, 403, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "thing": 332, "those": [15, 87, 88, 89, 172, 244], "three": [27, 89, 188, 216, 219, 223, 228, 229, 230, 263, 271, 288, 292, 297, 300, 303], "threshold": [24, 205, 282], "through": [0, 3, 4, 14, 15, 19, 24, 25, 27, 28, 39, 73, 82, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 154, 169, 170, 173, 192, 200, 202, 226, 234, 235, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 307, 308, 310, 311, 335, 339, 346, 347, 352, 399, 401, 403, 405, 408, 409, 410, 423], "throughout": [156, 160, 180, 413], "ti": [154, 165], "tier": 48, "tile": [14, 398], "time": [0, 3, 22, 87, 88, 89, 91, 186, 228, 249, 252, 258, 261, 298, 299, 300, 301, 302, 303, 308, 310, 318, 319, 320, 321, 322, 326, 328, 332, 402, 407], "tini": [43, 44, 52, 77, 81, 154], "to_tensor": [5, 6, 7, 8], "togeth": [173, 412, 423], "token": [77, 305], "token_mix": 77, "too": 327, "tool": [3, 15, 315, 331, 342, 412, 423], "top": [17, 18, 19, 25, 27, 48, 185, 200, 202, 226, 258, 259, 261, 262, 263, 276, 278, 414, 416], "torch": [145, 392], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 165, 168, 258, 273, 343, 403], "totensor": [412, 423], "trace": [16, 365], "track": [15, 228, 229, 230, 286, 287, 288, 290, 291, 292, 315, 330, 332, 335, 337, 338, 339, 341, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 386, 392, 393, 413], "track_running_stat": [228, 229, 230, 286, 287, 288, 290, 291, 292], "trade": [43, 99], "tradit": [7, 10, 30, 102, 154, 319, 320, 323, 324, 325], "trail": 213, "train": [1, 2, 3, 4, 5, 6, 7, 8, 15, 30, 39, 60, 73, 74, 75, 136, 137, 138, 139, 144, 154, 155, 156, 166, 167, 170, 172, 173, 182, 191, 192, 193, 194, 195, 196, 197, 209, 212, 224, 227, 246, 249, 252, 253, 254, 256, 265, 266, 267, 268, 269, 270, 271, 286, 287, 288, 290, 291, 292, 305, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 412, 415, 416, 417, 418, 419, 420, 423], "trainabl": [155, 286, 287, 288, 290, 291, 292, 305, 315], "transact": 234, "transfer": [212, 290, 291], "transform": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 157, 158, 160, 161, 162, 163, 164, 165, 171, 185, 200, 202, 258, 259, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 308, 309, 310, 311, 331, 386, 399], "transform_pipelin": [412, 423], "transformed_imag": [412, 423], "transformer_bas": 154, "transformer_big": 154, "transformer_decod": 308, "transformer_encod": 310, "transformerdecod": [275, 307, 312], "transformerdecoderlay": [275, 307, 308, 312], "transformerencod": [275, 307, 312], "transformerencoderlay": [275, 307, 310, 312], "transit": [30, 54, 282], "translat": [156, 299, 302, 307], "transpos": [12, 15, 17, 365], "transposit": [12, 273], "treat": [0, 166, 293, 315], "triangular": [17, 25, 308, 309, 310, 311, 408, 409], "tril": 398, "triu": 398, "true": [1, 2, 3, 4, 5, 6, 7, 8, 27, 73, 74, 75, 96, 97, 103, 155, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 190, 191, 193, 194, 195, 196, 197, 200, 202, 209, 212, 224, 226, 228, 229, 230, 231, 232, 233, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 313, 315, 316, 321, 322, 326, 330, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413], "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 423], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 167, 168, 186, 187, 188, 190, 213, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 261, 262, 263, 277, 293, 296, 297, 298, 299, 300, 301, 302, 303, 313, 321, 322, 323, 324, 325, 327, 334, 337, 338, 339, 341, 343, 357, 361, 363, 376, 377, 378, 385, 391, 393, 394, 395, 397, 399, 400, 403, 404, 405, 406, 410, 411, 414, 415, 416, 421], "twice": 400, "two": [15, 18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 186, 187, 188, 200, 218, 222, 234, 235, 262, 270, 276, 287, 291, 299, 302, 311, 321, 322, 323, 324, 325, 327, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 386, 389, 394, 399, 404], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 166, 167, 168, 200, 276, 307, 309, 311, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 392, 399, 413], "typeerror": [0, 1, 2, 167, 316], "typic": [16, 30, 93, 99, 112, 123, 140, 166, 182, 191, 192, 227, 234, 251, 252, 254, 266, 267, 284, 286, 287, 288, 290, 291, 292, 317, 318, 326, 328, 332, 334, 410, 413, 415, 419, 421, 423], "u": [24, 27, 240, 242, 244], "u_": 323, "ultra": [45, 118], "unchang": [166, 197, 245, 249, 250, 252, 265, 268, 269, 270, 271, 277, 401, 405], "undefin": 353, "under": [124, 125, 126, 127, 128, 129, 315], "underbrac": 22, "underdetermin": 24, "undergo": [193, 311, 423], "underli": [0, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 386, 392, 397, 401, 403, 411], "understand": [15, 152, 154, 155, 173, 423], "understood": 12, "unexpect": [10, 167, 170, 173, 342], "unfold": [189, 199], "unifi": 0, "uniform": [238, 240, 244, 261, 262, 263, 276, 278, 336, 337, 338, 342, 417, 418, 419, 420], "uniformli": [337, 341], "uniniti": [357, 358], "unintend": [10, 13, 332], "union": 145, "uniqu": [17, 24, 26, 169, 171, 305], "unit": [28, 86, 152, 175, 176, 178, 179, 180, 239, 240, 243, 244, 245, 246, 249, 250, 252, 265], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 343], "unlik": [30, 154, 166, 169, 170, 171, 172, 178, 245, 249, 265, 293, 319, 320, 322, 323, 324, 325, 327], "unnecessari": [10, 332], "unpad": 400, "unseen": 423, "unsqueez": 398, "unstabl": 21, "unsur": 10, "up": [316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 419, 421], "updat": [4, 40, 166, 172, 173, 265, 268, 269, 270, 271, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332], "upon": [40, 75, 92, 93, 154, 169, 170, 171, 172], "upper": [25, 242, 327, 341, 408, 409], "upper_triangular": 409, "upsampl": [275, 314], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 200, 202, 207, 209, 210, 212, 215, 216, 224, 226, 227, 228, 229, 230, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 313, 315, 316, 317, 330, 331, 332, 333, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 374, 376, 377, 378, 385, 386, 391, 399, 400, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 170, 173, 193, 231, 232, 233, 259, 266, 316, 317, 360, 414, 415, 416, 417, 418, 419, 420, 421], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 169, 170, 171, 172, 315, 320, 412, 413, 423], "usual": 281, "util": [3, 15, 16, 30, 93, 141, 142, 143, 171, 172, 192, 315, 342], "v": [19, 24, 27, 30, 154, 185, 258, 259, 309, 311, 321, 322, 324, 325, 356], "v1": [73, 74, 82, 83, 84, 90, 91, 154], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 154], "v3": [73, 75, 76, 85, 92, 96, 97, 154], "v4": [73, 76, 85, 93, 99, 100, 101, 102, 154], "v_": [318, 321, 322, 324, 325, 326, 328], "v_i": 258, "v_stack": 411, "v_t": [325, 326], "val": 237, "valid": [228, 229, 230, 231, 232, 233, 235, 261, 262, 263, 390], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 167, 169, 171, 173, 175, 178, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 226, 227, 228, 229, 230, 234, 237, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 256, 258, 259, 265, 266, 267, 268, 269, 270, 271, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 334, 335, 337, 338, 339, 340, 341, 342, 355, 356, 357, 358, 359, 360, 366, 367, 368, 370, 373, 374, 375, 376, 378, 380, 381, 383, 384, 395, 400, 401, 403, 410, 415, 417, 418, 420], "valuabl": 342, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 316], "van": 154, "vanish": [154, 245, 252, 286, 287, 288], "var": 365, "vari": [39, 140, 170, 172, 214, 226, 295, 419], "variabl": [167, 173, 214, 215, 216, 277, 295, 296, 297, 315, 330, 332, 337, 357, 416, 419], "varianc": [180, 191, 209, 212, 228, 229, 230, 239, 240, 243, 244, 252, 265, 286, 287, 288, 290, 291, 292, 293, 321, 322, 323, 324, 325, 339, 391, 419, 423], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 321, 322, 323], "variat": [231, 232, 233, 290, 291, 292, 416, 423], "varieti": [4, 82, 103, 342, 423], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 86, 93, 94, 102, 154, 250, 317, 342, 360, 376, 378, 400, 413], "vasudevan": 154, "vaswani": [154, 307], "vdim": 258, "vdot": 352, "vector": [14, 19, 24, 25, 26, 27, 200, 202, 224, 258, 276, 278, 305, 346, 347, 348, 352], "veloc": [318, 326, 328], "verbos": 12, "veri": [24, 47, 115, 117, 154, 319], "verifi": 10, "versa": 327, "versatil": [30, 102, 342, 399], "version": [27, 39, 73, 77, 82, 86, 87, 88, 99, 273, 326, 352, 417], "vertic": [406, 411, 420], "vgg": 145, "vggnet": [85, 146, 147, 148, 149, 154], "vggnet_11": 154, "vggnet_13": 154, "vggnet_16": 154, "vggnet_19": 154, "via": [3, 4, 102, 140], "vice": 327, "video": [188, 197, 230, 263, 292, 300, 303], "view": [82, 86, 170, 299, 300, 301, 302, 303, 393, 403], "vinod": [5, 6], "vision": [30, 90, 91, 95, 103, 112, 154, 160, 161, 162, 163, 164, 165, 187, 262, 276, 423], "visual": [152, 154], "vit": [30, 154, 159, 161, 162, 163, 164, 165], "vit_bas": 154, "vit_hug": 154, "vit_larg": 154, "vit_smal": 154, "vit_tini": 154, "vocabulari": [156, 157, 158, 305], "vol": 154, "vollgraf": 7, "volumetr": [188, 197, 230, 263, 292, 300, 303], "vstack": 398, "w": [10, 12, 13, 14, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 187, 188, 190, 192, 196, 197, 200, 202, 210, 215, 216, 218, 219, 222, 223, 226, 227, 229, 230, 234, 258, 261, 262, 263, 273, 276, 278, 287, 288, 289, 291, 292, 296, 297, 300, 303, 414, 416], "w_": [187, 188, 215, 216, 218, 219, 222, 223, 226, 262, 263, 296, 297, 299, 300, 302, 303], "w_1": [309, 311], "w_2": [309, 311], "w_k": 30, "w_out": [187, 188, 218, 219, 222, 223], "wa": [74, 265, 268, 269, 270, 271, 332], "wai": [1, 10, 12, 14, 29, 153, 273, 330, 332, 403], "wang": 154, "want": [0, 15, 412, 414], "warn": [169, 171, 258], "we": [3, 15, 331, 399], "wei": 154, "weight": [110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 185, 186, 187, 188, 200, 202, 203, 204, 208, 209, 212, 213, 224, 226, 234, 235, 239, 240, 243, 244, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 276, 278, 280, 281, 284, 286, 287, 288, 290, 291, 292, 293, 305, 307, 308, 309, 310, 311, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 337, 342], "weight1": 171, "weight2": 171, "weight_decai": [318, 319, 320, 321, 322, 323, 324, 325, 326, 328], "weihao": 154, "weinberg": 154, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 161, 239, 240], "were": 173, "weyand": 154, "what": [12, 14, 273, 332], "when": [0, 1, 3, 10, 13, 15, 22, 59, 154, 167, 170, 172, 173, 175, 178, 186, 187, 188, 224, 245, 267, 277, 286, 287, 288, 290, 291, 292, 313, 316, 319, 327, 330, 332, 333, 334, 342, 353, 393, 412, 414], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 96, 97, 98, 99, 100, 101, 150, 154, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 193, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 334, 342, 344, 345, 349, 350, 351, 353, 354, 357, 358, 370, 374, 375, 376, 377, 378, 381, 383, 385, 389, 390, 391, 394, 395, 400, 402, 404, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420], "whether": [1, 18, 30, 59, 73, 74, 75, 96, 97, 103, 167, 168, 239, 240, 267, 326, 330, 335, 337, 338, 339, 341, 343, 357, 358, 376, 377, 378, 385, 391], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 154, 156, 167, 169, 171, 173, 178, 182, 205, 227, 231, 232, 233, 235, 245, 246, 249, 251, 254, 256, 265, 282, 284, 286, 287, 288, 290, 291, 292, 293, 305, 309, 311, 321, 322, 324, 326, 330, 332, 334, 337, 338, 341, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 381, 382, 383, 385, 387, 388, 389, 391, 393, 394, 395, 402, 403, 404, 406, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 421, 423], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 163, 170, 173, 191, 192, 246, 250, 251, 267, 308, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 332, 386, 403, 406, 417, 423], "who": [15, 169, 170, 171, 172], "whose": [27, 358, 362, 364, 366, 370, 374, 380, 386], "wide": [4, 5, 6, 8, 16, 24, 52, 102, 112, 120, 121, 122, 154, 179, 250, 261, 262, 281], "wide_resnet_101": 154, "wide_resnet_50": 154, "wider": [43, 121, 122, 186, 187], "wideresnet": 154, "width": [30, 59, 60, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 154, 187, 188, 190, 196, 197, 210, 215, 216, 218, 219, 222, 223, 226, 227, 235, 262, 263, 287, 288, 289, 291, 292, 296, 297, 299, 300, 302, 303, 313, 414, 416, 421], "width_coef": 59, "width_multipli": [90, 94], "window": [217, 218, 219, 221, 222, 223, 298, 299, 300, 301, 302, 303, 319, 376, 378], "wise": [10, 14, 134, 136, 137, 138, 139, 154, 175, 176, 178, 179, 180, 181, 182, 183, 193, 228, 229, 230, 234, 248, 254, 255, 265, 267, 268, 269, 270, 271, 315, 331, 344, 345, 348, 349, 350, 351, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 380, 381, 382, 383, 384, 387, 388, 389, 397, 411], "within": [2, 154, 155, 156, 160, 166, 169, 170, 171, 172, 173, 183, 226, 227, 244, 246, 247, 248, 250, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 273, 277, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 298, 299, 300, 301, 302, 303, 317, 332, 355, 370, 419, 423], "without": [10, 15, 123, 169, 170, 171, 200, 202, 261, 262, 263, 276, 278, 330, 333, 376, 401, 403, 410], "won": 332, "word": [154, 224, 305], "work": [1, 2, 3, 10, 12, 13, 14, 15, 17, 273, 331, 334], "workflow": [13, 342, 423], "workload": 15, "worth": 154, "wrap": [3, 315, 332, 392], "wrapper": 315, "www": [5, 6], "x": [15, 16, 26, 30, 82, 86, 130, 145, 150, 154, 155, 166, 167, 169, 170, 171, 172, 173, 182, 193, 200, 202, 227, 231, 232, 233, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 309, 310, 311, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 335, 337, 338, 339, 341, 357, 358, 374, 394, 399, 404, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421], "x1": 276, "x2": 276, "x_": [30, 210, 281, 284, 289, 310, 399], "x_0": 310, "x_c": [281, 284], "x_i": [280, 310], "x_k": 281, "xavier": [239, 240, 243, 244], "xavier_norm": 238, "xavier_uniform": 238, "xception": [85, 154], "xiao": 7, "xie": 154, "xl": [72, 154], "xlarg": [53, 154], "xy": 399, "x\u2081": 276, "x\u2082": 276, "y": [30, 150, 154, 169, 170, 171, 172, 173, 227, 231, 232, 233, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 335, 337, 338, 339, 341, 357, 358, 399, 417], "y1": 394, "y2": 394, "y_": [30, 210, 281, 284, 289, 399], "y_c": [281, 284], "y_i": 280, "yann": [8, 154], "yet": [15, 50, 52, 100, 331], "yield": [0, 1, 167, 332], "you": [0, 12, 14, 92, 154, 155, 170, 172, 173, 273, 307, 315, 317, 330, 332, 342, 357, 358, 359, 364, 390, 392, 412, 414, 423], "your": [10, 92, 100, 315, 317, 330, 332, 342, 423], "yu": 154, "z": [154, 309, 311, 358, 363, 364], "zalandoresearch": 7, "ze": 154, "zeiler": [152, 154], "zero": [22, 24, 25, 75, 155, 175, 178, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 217, 218, 219, 221, 222, 223, 224, 237, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 258, 261, 262, 263, 265, 267, 268, 269, 270, 271, 293, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 357, 358, 359, 364, 365, 370, 380, 400, 408, 409], "zero_grad": [168, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 343], "zeros_lik": [358, 365], "zfnet": [85, 154], "zhang": 154, "zhmoginov": 154, "zhu": 154, "zhuang": 154, "zihang": 154, "zisserman": 154, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "Transformers", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 331, "1d": 331, "2": 331, "2d": 331, "3": 331, "It": [330, 332], "ab": 366, "activ": [177, 199, 257, 275], "ad": 331, "adadelta": 319, "adagrad": 320, "adam": 321, "adamax": 323, "adamw": 322, "adaptive_avg_pool1d": 214, "adaptive_avg_pool2d": 215, "adaptive_avg_pool3d": 216, "adaptiveavgpool1d": 295, "adaptiveavgpool2d": 296, "adaptiveavgpool3d": 297, "add": 344, "addit": [24, 258], "admonit": 334, "advanc": [190, 423], "advantag": [10, 12, 13, 14, 273], "alexnet": [28, 29], "algebra": 20, "algorithm": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "alias": 334, "align": 331, "alpha_dropout": 191, "alphadropout": 265, "also": 317, "anoth": 392, "arang": 355, "arcco": 367, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152], "arcsin": 368, "arctan": 369, "asgd": 318, "attent": [184, 185, 199, 235, 260, 275], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 166, 168, 169, 170, 171, 172, 173, 228, 229, 230, 231, 232, 233, 234, 245, 246, 249, 250, 252, 253, 254, 256, 261, 262, 263, 265, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 343, 414, 415, 416, 417, 418, 419, 420, 421], "avg_pool1d": 217, "avg_pool2d": 218, "avg_pool3d": 219, "avgpool1d": 298, "avgpool2d": 299, "avgpool3d": 300, "axi": [331, 386], "backpropag": 343, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 192, 200, 202, 226, 234, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411], "batch_norm": 209, "batchnorm": 236, "batchnorm1d": 286, "batchnorm2d": 287, "batchnorm3d": 288, "bceloss": 280, "behavior": [214, 215, 216, 295, 296, 297], "benefit": 332, "bernoulli": 335, "bilinear": [200, 276], "binari": 365, "binary_cross_entropi": 203, "bottleneck": [96, 97], "broadcast": [331, 393], "broadcast_to": 393, "buffer": 166, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 190, 192, 193, 200, 202, 214, 215, 216, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421], "captur": 333, "case": 334, "centercrop": 414, "choleski": 17, "chunk": 394, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 160, 166, 167, 168, 169, 170, 171, 172, 173, 228, 229, 230, 231, 232, 233, 234, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 343, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "clip": 370, "co": 371, "coatnet": 30, "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 15, 315], "compos": 412, "comput": 394, "concatdataset": [0, 1], "concaten": 395, "conclus": [3, 10, 12, 13, 14, 15, 273, 315, 330, 331, 332, 342, 413, 423], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 237, "contain": 174, "conv": 236, "conv1d": [186, 261], "conv2d": [187, 262], "conv3d": [188, 263], "convbnrelu1d": 228, "convbnrelu2d": 229, "convbnrelu3d": 230, "convnet": [85, 154], "convnext": 39, "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [189, 199, 236, 264, 275], "core": 15, "cosh": 372, "creat": [168, 343, 392], "cross_entropi": 204, "crossentropyloss": 281, "cube": 373, "custom": [1, 2, 3, 167, 316, 317, 423], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 167, 316, 317], "definit": [12, 13, 14, 273, 334], "densenet": 54, "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 231, "depthseparableconv2d": 232, "depthseparableconv3d": 233, "depthwis": 236, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 333], "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 258, 307, 308, 309, 310, 311], "diag": 356, "differ": 156, "dilat": 190, "div": 345, "dot": 346, "drop_block": 192, "drop_path": 193, "dropblock": 266, "dropout": [194, 198, 199, 268, 272, 275], "dropout1d": [195, 269], "dropout2d": [196, 270], "dropout3d": [197, 271], "droppath": 267, "efficientnet": 59, "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 274, 275], "elu": [175, 245], "embed": [224, 305], "empti": 357, "empty_lik": 358, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423], "excit": 236, "exp": 374, "express": [210, 404], "ey": 359, "fashionmnist": 7, "featur": [4, 15, 16, 136, 137, 138, 139, 144, 317, 342, 423], "flatten": 396, "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 190, 193, 200, 202, 214, 215, 216, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421], "from": [156, 392], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 237, 239, 240, 241, 242, 243, 244, 330, 332, 333, 335, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "fuse": 236, "futur": 4, "gelu": [176, 246], "gener": [336, 365], "get": 317, "global_response_norm": 210, "globalresponsenorm": 289, "grad_en": 330, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 192, 200, 202, 226, 234, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411], "guidelin": 334, "hardsigmoid": 247, "hardswish": 248, "how": [330, 332], "hstack": 397, "huber_loss": 205, "huberloss": 282, "hybrid": 30, "hyperparamet": [110, 111], "ident": 277, "imag": [9, 422], "incept": 73, "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": 77, "inceptionresnet": 82, "index": 343, "init": [237, 239, 240, 241, 242, 243, 244], "initi": 238, "inner": 347, "input": 392, "inspect": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "instance_norm": 212, "instancenorm1d": 290, "instancenorm2d": 291, "instancenorm3d": 292, "integr": [3, 315, 342, 423], "interpol": 226, "inv": 21, "iter": 343, "kaiming_norm": 239, "kaiming_uniform": 240, "kei": [3, 4, 15, 136, 137, 138, 139, 144, 315, 317, 342, 423], "kernel": 236, "layer": [104, 105, 106, 107, 108, 109, 236, 257, 260, 264, 272, 274, 275, 279, 285, 294, 304, 306, 312, 314], "layer_norm": 213, "layernorm": 293, "leaky_relu": 178, "leakyrelu": 249, "learn": 342, "lenet": 86, "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "limit": 15, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 199, 201, 202, 275, 278, 279], "linspac": 360, "list": 392, "load": 1, "log": 375, "loss": [199, 206, 275, 285], "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 199, 315, 317, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 423], "mathemat": [12, 13, 14, 210, 258, 273, 307, 308, 309, 310, 311, 404], "matmul": 348, "matrix": 348, "matrix_pow": 22, "max": 376, "max_pool1d": 221, "max_pool2d": 222, "max_pool3d": 223, "maximum": 349, "maxpool1d": 301, "maxpool2d": 302, "maxpool3d": 303, "mean": 377, "mechan": [185, 235], "meshgrid": 399, "metadata": 333, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 167, 168, 307, 308, 309, 310, 311, 316, 343], "min": 378, "minimum": 350, "mnist": 8, "mobilenet": [90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 315], "modul": [167, 275], "moduledict": 169, "modulelist": 170, "more": 342, "mse_loss": 207, "mseloss": 283, "mul": 351, "multiheadattent": 258, "multipl": [0, 348], "nadam": 324, "new": 331, "newaxi": 331, "nll_loss": 208, "nllloss": 284, "nn": [156, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 315], "no_grad": 332, "norm": 23, "normal": [199, 211, 241, 275, 294, 415], "note": 15, "number": 336, "ones": 361, "ones_lik": 362, "oper": [20, 348, 365], "optim": [316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "option": 258, "organ": 315, "outer": 352, "overview": [3, 4, 10, 15, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 258, 307, 308, 309, 310, 311, 315, 317, 342, 423], "pad": 400, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "parameterdict": 171, "parameterlist": 172, "pass": 150, "perform": 343, "pinv": 24, "pipelin": [3, 423], "pitfal": [330, 332], "pool": [199, 220, 275, 304], "potenti": [330, 332], "power": 353, "process": 224, "properti": [168, 343], "qr": 25, "radam": 325, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 337, "randint": 338, "randn": 339, "random": [335, 336, 337, 338, 339, 340, 341, 342], "randomcrop": 416, "randomgrayscal": 417, "randomhorizontalflip": 418, "randomrot": 419, "randomverticalflip": 420, "ravel": 401, "rearrang": [10, 12, 273], "reciproc": 379, "reduc": [10, 13], "refer": [5, 6, 7, 8, 234, 317], "register_model": 333, "regular": 192, "relu": [179, 236, 250], "relu6": 251, "repeat": [10, 14, 402], "reshap": 403, "resiz": 421, "resnest": 103, "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": 112, "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": 123, "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 165, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 235, 237, 239, 240, 241, 242, 243, 244, 251, 273, 305, 330, 332, 335, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "rmsprop": 326, "rotat": 227, "rprop": 327, "rule": [348, 386, 393], "scaled_dot_product_attent": 185, "scaleddotproductattent": 259, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 317, "seed": 340, "select": 236, "selectivekernel": 235, "selu": [180, 252], "semodul": 234, "senet": 130, "separ": 236, "sequenti": 173, "sgd": 328, "sigmoid": [181, 253], "sign": 380, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "sin": 381, "sinh": 382, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": 140, "slice": 343, "softmax": [182, 254], "solv": 26, "spars": [275, 306], "split": 404, "sqrt": 383, "squar": 384, "squeez": [236, 405], "stack": 406, "start": 317, "state": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "sub": 354, "sum": 385, "summar": 155, "summari": 155, "svd": 27, "swap": 386, "swapax": 386, "swish": 255, "tabl": 155, "tan": 387, "tanh": [183, 256, 388], "tensor": [331, 343, 365, 392, 398], "through": 343, "tile": 407, "totensor": 413, "trace": 389, "track": 343, "transform": [154, 156, 159, 275, 307, 312, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 308, "transformerdecoderlay": 309, "transformerencod": 310, "transformerencoderlay": 311, "transpos": 390, "tril": 408, "triu": 409, "type": 334, "unari": 365, "unfold": 190, "uniform": [242, 341], "unsqueez": 410, "upsampl": 313, "us": [1, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 392], "usag": [4, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 166, 227, 258, 307, 308, 309, 310, 311, 330, 331, 332, 334, 399, 412, 413, 423], "util": [199, 225], "utilit": 398, "valu": 404, "var": 391, "vggnet": 145, "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [275, 314], "vit": 160, "vit_bas": 161, "vit_hug": 162, "vit_larg": 163, "vit_smal": 164, "vit_tini": 165, "vstack": 411, "weight": 238, "why": 334, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 330, 332], "xavier_norm": 243, "xavier_uniform": 244, "xception": [150, 151], "zero": 363, "zeros_lik": 364, "zfnet": [152, 153]}})