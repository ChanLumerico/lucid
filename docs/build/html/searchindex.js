Search.setIndex({"alltitles": {"@ Operator": [[297, "operator"]], "Activation Functions": [[142, null]], "Activation Layers": [[219, null], [232, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[283, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[153, "advanced-example-with-dilation"]], "Advanced Features": [[366, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[267, "algorithm"], [268, "algorithm"], [269, "algorithm"], [270, "algorithm"], [271, "algorithm"], [272, "algorithm"], [273, "algorithm"], [274, "algorithm"], [275, "algorithm"], [276, "algorithm"], [277, "algorithm"]], "Architecture": [[23, "architecture"], [25, "architecture"], [68, "architecture"], [69, "architecture"], [70, "architecture"], [127, "architecture"]], "Architecture Details": [[96, "architecture-details"], [97, "architecture-details"]], "Attention Mechanism": [[197, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [63, "attributes"], [67, "attributes"], [87, "attributes"], [98, "attributes"], [105, "attributes"], [115, "attributes"], [120, "attributes"], [125, "attributes"], [127, "attributes"], [131, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [207, "attributes"], [208, "attributes"], [211, "attributes"], [212, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [218, "attributes"], [220, "attributes"], [221, "attributes"], [222, "attributes"], [224, "attributes"], [226, "attributes"], [227, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [243, "attributes"], [244, "attributes"], [245, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [255, "attributes"], [256, "attributes"], [257, "attributes"], [258, "attributes"], [259, "attributes"], [260, "attributes"], [292, "attributes"], [357, "attributes"], [358, "attributes"], [359, "attributes"], [360, "attributes"], [361, "attributes"], [362, "attributes"], [363, "attributes"], [364, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [349, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [354, "backward-gradient-calculation"]], "Behavior": [[177, "behavior"], [178, "behavior"], [179, "behavior"], [252, "behavior"], [253, "behavior"], [254, "behavior"]], "Benefits": [[281, "benefits"]], "Binary Functions": [[314, null]], "Bottleneck Configuration": [[76, "bottleneck-configuration"], [77, "bottleneck-configuration"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [26, "class-signature"], [40, "class-signature"], [45, "class-signature"], [46, "class-signature"], [59, "class-signature"], [63, "class-signature"], [67, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [78, "class-signature"], [87, "class-signature"], [98, "class-signature"], [105, "class-signature"], [115, "class-signature"], [120, "class-signature"], [125, "class-signature"], [127, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [243, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [257, "class-signature"], [258, "class-signature"], [259, "class-signature"], [260, "class-signature"], [262, "class-signature"], [265, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [277, "class-signature"], [292, "class-signature"], [355, "class-signature"], [356, "class-signature"], [357, "class-signature"], [358, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [264, "conclusion"], [279, "conclusion"], [280, "conclusion"], [281, "conclusion"], [291, "conclusion"], [356, "conclusion"], [366, "conclusion"]], "Configurations": [[45, "configurations"]], "Containers": [[139, null]], "Conv-BatchNorm-ReLU": [[198, null]], "ConvNeXt": [[25, null]], "ConvNeXt_V2": [[26, null]], "ConvNets": [[66, null], [129, "convnets"]], "Convolution Functions": [[152, null], [162, null]], "Convolution Layers": [[223, null], [232, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[340, null]], "Creating a Parameter": [[133, null]], "Creating a tensor with gradient tracking": [[292, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[366, "custom-pipelines"]], "Defining a Custom Optimizer": [[266, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[132, null]], "Defining a custom optimizer": [[265, null]], "DenseNet": [[40, null]], "Depthwise Separable Convolution": [[198, null]], "Description": [[99, "description"], [100, "description"], [101, "description"], [102, "description"], [103, "description"], [104, "description"], [116, "description"], [117, "description"], [118, "description"], [282, "description"]], "Dropout Functions": [[161, null], [162, null]], "Dropout Layers": [[231, null], [232, null]], "EfficientNet": [[45, null]], "EfficientNet Configurations": [[45, "id1"]], "EfficientNet_V2": [[46, null]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [74, "example"], [75, "example"], [153, "example"], [264, null], [264, null], [264, null], [279, "example"], [281, "example"], [284, "example"], [286, "example"], [287, "example"], [288, "example"], [289, "example"], [290, "example"], [291, null], [291, null], [291, null], [304, "example"], [305, "example"], [306, "example"], [307, "example"], [308, "example"], [310, "example"], [311, "example"], [312, "example"], [313, "example"], [315, "example"], [316, "example"], [317, "example"], [318, "example"], [319, "example"], [320, "example"], [321, "example"], [322, "example"], [324, "example"], [326, "example"], [328, "example"], [329, "example"], [330, "example"], [331, "example"], [332, "example"], [333, "example"], [334, "example"], [335, "example"], [336, "example"], [337, "example"], [338, "example"], [339, "example"], [341, "example"], [343, "example"], [347, "example"], [349, "example"], [350, "example"], [351, "example"], [353, "example"], [354, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[280, null]], "Example 2: Adding a new axis to a 2D tensor": [[280, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[280, null]], "Example Usage": [[10, "example-usage"], [60, "example-usage"], [61, "example-usage"], [62, "example-usage"], [64, "example-usage"], [65, "example-usage"], [67, "example-usage"], [68, "example-usage"], [69, "example-usage"], [70, "example-usage"], [111, "example-usage"], [112, "example-usage"], [113, "example-usage"], [114, "example-usage"], [119, "example-usage"], [189, "example-usage"], [355, "example-usage"], [356, "example-usage"], [366, "example-usage"]], "Example Use Cases": [[283, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [73, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [140, "examples"], [141, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [163, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [199, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [262, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [282, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [309, "examples"], [323, "examples"], [325, "examples"], [327, "examples"], [340, "examples"], [342, "examples"], [345, "examples"], [346, "examples"], [348, "examples"], [352, "examples"], [357, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [87, "forward-calculation"], [98, "forward-calculation"], [105, "forward-calculation"], [115, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [153, "forward-calculation"], [156, "forward-calculation"], [163, "forward-calculation"], [165, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [188, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [341, "forward-calculation"], [343, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"]], "Forward Pass": [[125, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [126, "function-signature"], [128, "function-signature"], [130, "function-signature"], [140, "function-signature"], [141, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [163, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [188, "function-signature"], [189, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [279, "function-signature"], [281, "function-signature"], [282, "function-signature"], [284, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [313, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"], [324, "function-signature"], [325, "function-signature"], [326, "function-signature"], [327, "function-signature"], [328, "function-signature"], [329, "function-signature"], [330, "function-signature"], [331, "function-signature"], [332, "function-signature"], [333, "function-signature"], [334, "function-signature"], [335, "function-signature"], [336, "function-signature"], [337, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [342, "function-signature"], [343, "function-signature"], [345, "function-signature"], [346, "function-signature"], [347, "function-signature"], [348, "function-signature"], [349, "function-signature"], [350, "function-signature"], [351, "function-signature"], [352, "function-signature"], [353, "function-signature"], [354, "function-signature"]], "Fused Layers": [[198, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[266, "getting-started"]], "How It Works": [[279, "how-it-works"], [281, "how-it-works"]], "Hyperparameter Configuration": [[85, "hyperparameter-configuration"], [86, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[365, null]], "Inception": [[59, null]], "InceptionResNet": [[63, null]], "Indexing and slicing": [[292, null]], "Inspecting Optimizer State": [[266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [277, null]], "Integration with lucid": [[3, "integration-with-lucid"], [264, "integration-with-lucid"], [291, "integration-with-lucid"], [366, "integration-with-lucid"]], "Iterating through a tensor": [[292, null]], "Key Components": [[3, "key-components"], [264, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [111, "key-features"], [112, "key-features"], [113, "key-features"], [114, "key-features"], [119, "key-features"], [266, "key-features"], [291, "key-features"]], "Key Transformations": [[366, "key-transformations"]], "Layer Configuration": [[79, "layer-configuration"], [80, "layer-configuration"], [81, "layer-configuration"], [82, "layer-configuration"], [83, "layer-configuration"], [84, "layer-configuration"]], "LeNet": [[67, null]], "Learn More": [[291, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[162, null], [164, null]], "Linear Layers": [[232, null], [236, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[162, null], [169, null]], "Loss Layers": [[232, null], [242, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Mathematical Expression": [[173, "mathematical-expression"]], "Matrix Multiplication Rules": [[297, "matrix-multiplication-rules"]], "Metadata Captured": [[282, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [63, "methods"], [67, "methods"], [120, "methods"], [132, "methods"], [133, "methods"], [265, "methods"], [292, "methods"]], "MobileNet": [[71, null]], "MobileNet_V2": [[72, null]], "MobileNet_V3": [[73, null]], "Modules": [[232, null]], "Normalization Functions": [[162, null], [174, null]], "Normalization Layers": [[232, null], [251, null]], "Notes": [[10, "notes"]], "Optimizers": [[278, null]], "Organizing Models": [[264, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [64, "overview"], [65, "overview"], [67, "overview"], [68, "overview"], [69, "overview"], [70, "overview"], [71, "overview"], [72, "overview"], [73, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [94, "overview"], [95, "overview"], [106, "overview"], [107, "overview"], [108, "overview"], [109, "overview"], [110, "overview"], [264, "overview"], [266, "overview"], [291, "overview"], [366, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [130, "parameters"], [131, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [140, "parameters"], [141, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [163, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [199, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [211, "parameters"], [212, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [262, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [281, "parameters"], [282, "parameters"], [284, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"]], "Performing backpropagation": [[292, null]], "Pooling Functions": [[162, null], [183, null]], "Pooling Layers": [[232, null], [261, null]], "Potential Pitfalls": [[279, "potential-pitfalls"], [281, "potential-pitfalls"]], "Properties": [[133, "properties"], [292, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[285, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [196, "references"], [266, "references"]], "Regularization": [[155, "regularization"]], "ResNeSt": [[78, null]], "ResNeXt": [[98, null]], "ResNet": [[87, null]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [126, "returns"], [128, "returns"], [130, "returns"], [140, "returns"], [141, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [163, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [188, "returns"], [189, "returns"], [197, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [213, "returns"], [279, "returns"], [281, "returns"], [284, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [331, "returns"], [332, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [343, "returns"], [345, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [354, "returns"]], "SENet": [[105, null]], "SKNet": [[115, null]], "See Also": [[266, "see-also"]], "Selective Kernel": [[198, null]], "Squeeze-and-Excitation": [[198, null]], "Summary Table": [[130, "summary-table"]], "Tensor Generating Functions": [[314, null]], "Tensor Operations": [[314, null]], "Tensor Utilites": [[344, null]], "Type Definitions": [[283, "type-definitions"]], "Unary Functions": [[314, null]], "Usage": [[4, "usage"], [55, "usage"], [56, "usage"], [57, "usage"], [58, "usage"], [131, "usage"], [189, "usage"], [279, "usage"], [280, "usage"], [281, "usage"], [345, "usage"], [355, "usage"], [356, "usage"], [366, "usage"]], "Use another Tensor as input": [[340, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[267, null]], "Using the Adadelta Optimizer": [[268, null]], "Using the Adagrad Optimizer": [[269, null]], "Using the Adam Optimizer": [[270, null]], "Using the AdamW Optimizer": [[271, null]], "Using the Adamax Optimizer": [[272, null]], "Using the NAdam Optimizer": [[273, null]], "Using the RAdam Optimizer": [[274, null]], "Using the RMSprop Optimizer": [[275, null]], "Using the Rprop Optimizer": [[276, null]], "Using the SGD Optimizer": [[277, null]], "Utility Functions": [[162, null], [187, null]], "VGGNet": [[120, null]], "Vision Layers": [[232, null], [263, null]], "Weight Initializations": [[200, null]], "Why Use Type Aliases?": [[283, null]], "Xception": [[125, null]], "ZFNet": [[127, null]], "activation Functions": [[162, null]], "alexnet": [[24, null]], "convnext_base": [[27, null]], "convnext_large": [[28, null]], "convnext_small": [[29, null]], "convnext_tiny": [[30, null]], "convnext_v2_atto": [[31, null]], "convnext_v2_base": [[32, null]], "convnext_v2_femto": [[33, null]], "convnext_v2_huge": [[34, null]], "convnext_v2_large": [[35, null]], "convnext_v2_nano": [[36, null]], "convnext_v2_pico": [[37, null]], "convnext_v2_tiny": [[38, null]], "convnext_xlarge": [[39, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[41, null]], "densenet_169": [[42, null]], "densenet_201": [[43, null]], "densenet_264": [[44, null]], "efficientnet_b0": [[47, null]], "efficientnet_b1": [[48, null]], "efficientnet_b2": [[49, null]], "efficientnet_b3": [[50, null]], "efficientnet_b4": [[51, null]], "efficientnet_b5": [[52, null]], "efficientnet_b6": [[53, null]], "efficientnet_b7": [[54, null]], "efficientnet_v2_l": [[55, null]], "efficientnet_v2_m": [[56, null]], "efficientnet_v2_s": [[57, null]], "efficientnet_v2_xl": [[58, null]], "inception_resnet_v1": [[64, null]], "inception_resnet_v2": [[65, null]], "inception_v1": [[60, null]], "inception_v3": [[61, null]], "inception_v4": [[62, null]], "lenet_1": [[68, null]], "lenet_4": [[69, null]], "lenet_5": [[70, null]], "lucid.Tensor": [[292, null]], "lucid.abs": [[315, null]], "lucid.add": [[293, null]], "lucid.arange": [[304, null]], "lucid.arccos": [[316, null]], "lucid.arcsin": [[317, null]], "lucid.arctan": [[318, null]], "lucid.clip": [[319, null]], "lucid.concatenate": [[341, null]], "lucid.cos": [[320, null]], "lucid.cosh": [[321, null]], "lucid.cube": [[322, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[305, null]], "lucid.div": [[294, null]], "lucid.dot": [[295, null]], "lucid.empty": [[306, null]], "lucid.empty_like": [[307, null]], "lucid.exp": [[323, null]], "lucid.eye": [[308, null]], "lucid.flatten": [[342, null]], "lucid.grad_enabled": [[279, null]], "lucid.hstack": [[343, null]], "lucid.inner": [[296, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.linspace": [[309, null]], "lucid.log": [[324, null]], "lucid.matmul": [[297, null]], "lucid.max": [[325, null]], "lucid.maximum": [[298, null]], "lucid.mean": [[326, null]], "lucid.meshgrid": [[345, null]], "lucid.min": [[327, null]], "lucid.minimum": [[299, null]], "lucid.models": [[129, null]], "lucid.mul": [[300, null]], "lucid.newaxis": [[280, null]], "lucid.nn": [[264, null]], "lucid.nn.functional": [[162, null]], "lucid.no_grad": [[281, null]], "lucid.ones": [[310, null]], "lucid.ones_like": [[311, null]], "lucid.optim": [[266, null]], "lucid.outer": [[301, null]], "lucid.pad": [[346, null]], "lucid.power": [[302, null]], "lucid.random": [[291, null]], "lucid.random.bernoulli": [[284, null]], "lucid.random.rand": [[286, null]], "lucid.random.randint": [[287, null]], "lucid.random.randn": [[288, null]], "lucid.random.seed": [[289, null]], "lucid.random.uniform": [[290, null]], "lucid.ravel": [[347, null]], "lucid.reciprocal": [[328, null]], "lucid.register_model": [[282, null]], "lucid.repeat": [[348, null]], "lucid.reshape": [[349, null]], "lucid.sign": [[329, null]], "lucid.sin": [[330, null]], "lucid.sinh": [[331, null]], "lucid.sqrt": [[332, null]], "lucid.square": [[333, null]], "lucid.squeeze": [[350, null]], "lucid.stack": [[351, null]], "lucid.sub": [[303, null]], "lucid.sum": [[334, null]], "lucid.tan": [[335, null]], "lucid.tanh": [[336, null]], "lucid.tensor": [[340, null]], "lucid.tile": [[352, null]], "lucid.trace": [[337, null]], "lucid.transforms": [[366, null]], "lucid.transpose": [[338, null]], "lucid.types": [[283, null]], "lucid.unsqueeze": [[353, null]], "lucid.var": [[339, null]], "lucid.vstack": [[354, null]], "lucid.zeros": [[312, null]], "lucid.zeros_like": [[313, null]], "mobilenet": [[74, null]], "mobilenet_v2": [[75, null]], "mobilenet_v3_large": [[76, null]], "mobilenet_v3_small": [[77, null]], "models.summarize": [[130, null]], "nn.AdaptiveAvgPool1d": [[252, null]], "nn.AdaptiveAvgPool2d": [[253, null]], "nn.AdaptiveAvgPool3d": [[254, null]], "nn.AlphaDropout": [[224, null]], "nn.AvgPool1d": [[255, null]], "nn.AvgPool2d": [[256, null]], "nn.AvgPool3d": [[257, null]], "nn.BCELoss": [[237, null]], "nn.BatchNorm1d": [[243, null]], "nn.BatchNorm2d": [[244, null]], "nn.BatchNorm3d": [[245, null]], "nn.Bilinear": [[233, null]], "nn.Buffer": [[131, null]], "nn.Conv1d": [[220, null]], "nn.Conv2d": [[221, null]], "nn.Conv3d": [[222, null]], "nn.ConvBNReLU1d": [[190, null]], "nn.ConvBNReLU2d": [[191, null]], "nn.ConvBNReLU3d": [[192, null]], "nn.CrossEntropyLoss": [[238, null]], "nn.DepthSeparableConv1d": [[193, null]], "nn.DepthSeparableConv2d": [[194, null]], "nn.DepthSeparableConv3d": [[195, null]], "nn.DropBlock": [[225, null]], "nn.DropPath": [[226, null]], "nn.Dropout": [[227, null]], "nn.Dropout1d": [[228, null]], "nn.Dropout2d": [[229, null]], "nn.Dropout3d": [[230, null]], "nn.ELU": [[207, null]], "nn.GELU": [[208, null]], "nn.GlobalResponseNorm": [[246, null]], "nn.HardSigmoid": [[209, null]], "nn.HardSwish": [[210, null]], "nn.HuberLoss": [[239, null]], "nn.Identity": [[234, null]], "nn.InstanceNorm1d": [[247, null]], "nn.InstanceNorm2d": [[248, null]], "nn.InstanceNorm3d": [[249, null]], "nn.LayerNorm": [[250, null]], "nn.LeakyReLU": [[211, null]], "nn.Linear": [[235, null]], "nn.MSELoss": [[240, null]], "nn.MaxPool1d": [[258, null]], "nn.MaxPool2d": [[259, null]], "nn.MaxPool3d": [[260, null]], "nn.Module": [[132, null]], "nn.ModuleDict": [[134, null]], "nn.ModuleList": [[135, null]], "nn.NLLLoss": [[241, null]], "nn.Parameter": [[133, null]], "nn.ParameterDict": [[136, null]], "nn.ParameterList": [[137, null]], "nn.ReLU": [[212, null]], "nn.ReLU6": [[213, null]], "nn.SELU": [[214, null]], "nn.SEModule": [[196, null]], "nn.SelectiveKernel": [[197, null]], "nn.Sequential": [[138, null]], "nn.Sigmoid": [[215, null]], "nn.Softmax": [[216, null]], "nn.Swish": [[217, null]], "nn.Tanh": [[218, null]], "nn.Upsample": [[262, null]], "nn.functional.adaptive_avg_pool1d": [[177, null]], "nn.functional.adaptive_avg_pool2d": [[178, null]], "nn.functional.adaptive_avg_pool3d": [[179, null]], "nn.functional.alpha_dropout": [[154, null]], "nn.functional.avg_pool1d": [[180, null]], "nn.functional.avg_pool2d": [[181, null]], "nn.functional.avg_pool3d": [[182, null]], "nn.functional.batch_norm": [[172, null]], "nn.functional.bilinear": [[163, null]], "nn.functional.binary_cross_entropy": [[166, null]], "nn.functional.conv1d": [[149, null]], "nn.functional.conv2d": [[150, null]], "nn.functional.conv3d": [[151, null]], "nn.functional.cross_entropy": [[167, null]], "nn.functional.drop_block": [[155, null]], "nn.functional.drop_path": [[156, null]], "nn.functional.dropout": [[157, null]], "nn.functional.dropout1d": [[158, null]], "nn.functional.dropout2d": [[159, null]], "nn.functional.dropout3d": [[160, null]], "nn.functional.elu": [[140, null]], "nn.functional.gelu": [[141, null]], "nn.functional.global_response_norm": [[173, null]], "nn.functional.huber_loss": [[168, null]], "nn.functional.instance_norm": [[175, null]], "nn.functional.interpolate": [[188, null]], "nn.functional.layer_norm": [[176, null]], "nn.functional.leaky_relu": [[143, null]], "nn.functional.linear": [[165, null]], "nn.functional.max_pool1d": [[184, null]], "nn.functional.max_pool2d": [[185, null]], "nn.functional.max_pool3d": [[186, null]], "nn.functional.mse_loss": [[170, null]], "nn.functional.nll_loss": [[171, null]], "nn.functional.relu": [[144, null]], "nn.functional.rotate": [[189, null]], "nn.functional.selu": [[145, null]], "nn.functional.sigmoid": [[146, null]], "nn.functional.softmax": [[147, null]], "nn.functional.tanh": [[148, null]], "nn.functional.unfold": [[153, null]], "nn.init.constant": [[199, null]], "nn.init.kaiming_normal": [[201, null]], "nn.init.kaiming_uniform": [[202, null]], "nn.init.normal": [[203, null]], "nn.init.uniform": [[204, null]], "nn.init.xavier_normal": [[205, null]], "nn.init.xavier_uniform": [[206, null]], "optim.ASGD": [[267, null]], "optim.Adadelta": [[268, null]], "optim.Adagrad": [[269, null]], "optim.Adam": [[270, null]], "optim.AdamW": [[271, null]], "optim.Adamax": [[272, null]], "optim.NAdam": [[273, null]], "optim.Optimizer": [[265, null]], "optim.RAdam": [[274, null]], "optim.RMSprop": [[275, null]], "optim.Rprop": [[276, null]], "optim.SGD": [[277, null]], "resnest_101": [[79, null]], "resnest_14": [[80, null]], "resnest_200": [[81, null]], "resnest_26": [[82, null]], "resnest_269": [[83, null]], "resnest_50": [[84, null]], "resnest_50_1s4x24d": [[85, null]], "resnest_50_4s2x40d": [[86, null]], "resnet_1001": [[88, null]], "resnet_101": [[89, null]], "resnet_152": [[90, null]], "resnet_18": [[91, null]], "resnet_200": [[92, null]], "resnet_269": [[93, null]], "resnet_34": [[94, null]], "resnet_50": [[95, null]], "resnext_101_32x16d": [[99, null]], "resnext_101_32x32d": [[100, null]], "resnext_101_32x4d": [[101, null]], "resnext_101_32x8d": [[102, null]], "resnext_101_64x4d": [[103, null]], "resnext_50_32x4d": [[104, null]], "se_resnet_101": [[106, null]], "se_resnet_152": [[107, null]], "se_resnet_18": [[108, null]], "se_resnet_34": [[109, null]], "se_resnet_50": [[110, null]], "se_resnext_101_32x4d": [[111, null]], "se_resnext_101_32x8d": [[112, null]], "se_resnext_101_64x4d": [[113, null]], "se_resnext_50_32x4d": [[114, null]], "sk_resnet_18": [[116, null]], "sk_resnet_34": [[117, null]], "sk_resnet_50": [[118, null]], "sk_resnext_50_32x4d": [[119, null]], "transforms.CenterCrop": [[357, null]], "transforms.Compose": [[355, null]], "transforms.Normalize": [[358, null]], "transforms.RandomCrop": [[359, null]], "transforms.RandomGrayscale": [[360, null]], "transforms.RandomHorizontalFlip": [[361, null]], "transforms.RandomRotation": [[362, null]], "transforms.RandomVerticalFlip": [[363, null]], "transforms.Resize": [[364, null]], "transforms.ToTensor": [[356, null]], "vggnet_11": [[121, null]], "vggnet_13": [[122, null]], "vggnet_16": [[123, null]], "vggnet_19": [[124, null]], "wide_resnet_101": [[96, null]], "wide_resnet_50": [[97, null]], "xception": [[126, null]], "zfnet": [[128, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[315, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[268, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[269, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[270, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[272, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[271, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[177, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[178, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[179, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[252, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[253, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[254, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[293, "lucid.add", false]], "alexnet (class in lucid.models)": [[23, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[24, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[154, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[224, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[304, "lucid.arange", false]], "arccos() (in module lucid)": [[316, "lucid.arccos", false]], "arcsin() (in module lucid)": [[317, "lucid.arcsin", false]], "arctan() (in module lucid)": [[318, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[267, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[181, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[182, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[255, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[256, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[257, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[172, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[243, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[244, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[245, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[237, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[284, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[233, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[163, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[166, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[131, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[357, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[12, "lucid.linalg.cholesky", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[319, "lucid.clip", false]], "compose (class in lucid.transforms)": [[355, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[341, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[199, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[220, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[149, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[221, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[150, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[222, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[151, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[190, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[191, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[192, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[25, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[27, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[28, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[29, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[30, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[26, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[31, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[32, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[33, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[34, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[35, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[36, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[37, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[38, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[39, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[320, "lucid.cos", false]], "cosh() (in module lucid)": [[321, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[167, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[238, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[322, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[40, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[41, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[42, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[43, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[44, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[193, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[194, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[195, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[13, "lucid.linalg.det", false]], "diag() (in module lucid)": [[305, "lucid.diag", false]], "div() (in module lucid)": [[294, "lucid.div", false]], "dot() (in module lucid)": [[295, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[155, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[156, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[225, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[227, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[157, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[228, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[158, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[229, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[159, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[230, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[160, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[226, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[45, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[47, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[48, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[49, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[50, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[51, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[52, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[53, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[54, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[46, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[55, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[56, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[57, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[58, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[14, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[207, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[140, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[306, "lucid.empty", false]], "empty_like() (in module lucid)": [[307, "lucid.empty_like", false]], "exp() (in module lucid)": [[323, "lucid.exp", false]], "eye() (in module lucid)": [[308, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[342, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[208, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[173, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[246, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[279, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[209, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[210, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[343, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[168, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[239, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[234, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[59, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[64, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[65, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[60, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[61, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[62, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[63, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[296, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[175, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[247, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[248, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[249, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[188, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[16, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[201, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[202, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[176, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[250, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[143, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[211, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[67, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[68, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[69, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[70, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[235, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[165, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[309, "lucid.linspace", false]], "log() (in module lucid)": [[324, "lucid.log", false]], "lucid": [[10, "module-lucid", false]], "matmul() (in module lucid)": [[297, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[17, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[325, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[184, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[185, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[186, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[298, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[258, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[259, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[260, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[326, "lucid.mean", false]], "meshgrid() (in module lucid)": [[345, "lucid.meshgrid", false]], "min() (in module lucid)": [[327, "lucid.min", false]], "minimum() (in module lucid)": [[299, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[71, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[74, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[72, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[75, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[73, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[76, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[77, "lucid.models.mobilenet_v3_small", false]], "module": [[10, "module-lucid", false]], "module (class in lucid.nn)": [[132, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[134, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[135, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[170, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[240, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[300, "lucid.mul", false]], "nadam (class in lucid.optim)": [[273, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[171, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[241, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[281, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[18, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[203, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[358, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[310, "lucid.ones", false]], "ones_like() (in module lucid)": [[311, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[265, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[301, "lucid.outer", false]], "pad() (in module lucid)": [[346, "lucid.pad", false]], "parameter (class in lucid.nn)": [[133, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[136, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[137, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[19, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[302, "lucid.power", false]], "qr() (in module lucid.linalg)": [[20, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[274, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[286, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[287, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[288, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[359, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[360, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[361, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[362, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[363, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[347, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[328, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[282, "lucid.register_model", false]], "relu (class in lucid.nn)": [[212, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[144, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[213, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[348, "lucid.repeat", false]], "reshape() (in module lucid)": [[349, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[364, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[78, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[79, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[80, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[81, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[82, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[83, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[84, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[85, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[86, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[87, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[88, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[89, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[90, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[91, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[92, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[93, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[94, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[95, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[98, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[99, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[100, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[101, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[102, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[103, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[104, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[275, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[189, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[276, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[106, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[107, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[108, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[109, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[110, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[111, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[112, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[113, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[114, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[289, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[197, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[214, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[196, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[105, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[138, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[277, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[215, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[146, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[329, "lucid.sign", false]], "sin() (in module lucid)": [[330, "lucid.sin", false]], "sinh() (in module lucid)": [[331, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[116, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[117, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[118, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[119, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[115, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[216, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[147, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[21, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[332, "lucid.sqrt", false]], "square() (in module lucid)": [[333, "lucid.square", false]], "squeeze() (in module lucid)": [[350, "lucid.squeeze", false]], "stack() (in module lucid)": [[351, "lucid.stack", false]], "sub() (in module lucid)": [[303, "lucid.sub", false]], "sum() (in module lucid)": [[334, "lucid.sum", false]], "summarize() (in module lucid.models)": [[130, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[22, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[217, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[335, "lucid.tan", false]], "tanh (class in lucid.nn)": [[218, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[336, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[148, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[292, "lucid.Tensor", false]], "tensor() (in module lucid)": [[340, "lucid.tensor", false]], "tile() (in module lucid)": [[352, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[356, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[337, "lucid.trace", false]], "transpose() (in module lucid)": [[338, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[153, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[204, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[290, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[353, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[262, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[339, "lucid.var", false]], "vggnet (class in lucid.models)": [[120, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[121, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[122, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[123, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[124, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[354, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[96, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[97, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[205, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[206, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[125, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[126, "lucid.models.xception", false]], "zeros() (in module lucid)": [[312, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[313, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[127, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[128, "lucid.models.zfnet", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[292, 1, 1, "", "Tensor"], [315, 2, 1, "", "abs"], [293, 2, 1, "", "add"], [304, 2, 1, "", "arange"], [316, 2, 1, "", "arccos"], [317, 2, 1, "", "arcsin"], [318, 2, 1, "", "arctan"], [319, 2, 1, "", "clip"], [341, 2, 1, "", "concatenate"], [320, 2, 1, "", "cos"], [321, 2, 1, "", "cosh"], [322, 2, 1, "", "cube"], [305, 2, 1, "", "diag"], [294, 2, 1, "", "div"], [295, 2, 1, "", "dot"], [306, 2, 1, "", "empty"], [307, 2, 1, "", "empty_like"], [323, 2, 1, "", "exp"], [308, 2, 1, "", "eye"], [342, 2, 1, "", "flatten"], [279, 2, 1, "", "grad_enabled"], [343, 2, 1, "", "hstack"], [296, 2, 1, "", "inner"], [309, 2, 1, "", "linspace"], [324, 2, 1, "", "log"], [297, 2, 1, "", "matmul"], [325, 2, 1, "", "max"], [298, 2, 1, "", "maximum"], [326, 2, 1, "", "mean"], [345, 2, 1, "", "meshgrid"], [327, 2, 1, "", "min"], [299, 2, 1, "", "minimum"], [300, 2, 1, "", "mul"], [281, 2, 1, "", "no_grad"], [310, 2, 1, "", "ones"], [311, 2, 1, "", "ones_like"], [301, 2, 1, "", "outer"], [346, 2, 1, "", "pad"], [302, 2, 1, "", "power"], [347, 2, 1, "", "ravel"], [328, 2, 1, "", "reciprocal"], [282, 2, 1, "", "register_model"], [348, 2, 1, "", "repeat"], [349, 2, 1, "", "reshape"], [329, 2, 1, "", "sign"], [330, 2, 1, "", "sin"], [331, 2, 1, "", "sinh"], [332, 2, 1, "", "sqrt"], [333, 2, 1, "", "square"], [350, 2, 1, "", "squeeze"], [351, 2, 1, "", "stack"], [303, 2, 1, "", "sub"], [334, 2, 1, "", "sum"], [335, 2, 1, "", "tan"], [336, 2, 1, "", "tanh"], [340, 2, 1, "", "tensor"], [352, 2, 1, "", "tile"], [337, 2, 1, "", "trace"], [338, 2, 1, "", "transpose"], [353, 2, 1, "", "unsqueeze"], [339, 2, 1, "", "var"], [354, 2, 1, "", "vstack"], [312, 2, 1, "", "zeros"], [313, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "ConvNeXt"], [26, 1, 1, "", "ConvNeXt_V2"], [40, 1, 1, "", "DenseNet"], [45, 1, 1, "", "EfficientNet"], [46, 1, 1, "", "EfficientNet_V2"], [59, 1, 1, "", "Inception"], [63, 1, 1, "", "InceptionResNet"], [67, 1, 1, "", "LeNet"], [71, 1, 1, "", "MobileNet"], [72, 1, 1, "", "MobileNet_V2"], [73, 1, 1, "", "MobileNet_V3"], [78, 1, 1, "", "ResNeSt"], [98, 1, 1, "", "ResNeXt"], [87, 1, 1, "", "ResNet"], [105, 1, 1, "", "SENet"], [115, 1, 1, "", "SKNet"], [120, 1, 1, "", "VGGNet"], [125, 1, 1, "", "Xception"], [127, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [27, 2, 1, "", "convnext_base"], [28, 2, 1, "", "convnext_large"], [29, 2, 1, "", "convnext_small"], [30, 2, 1, "", "convnext_tiny"], [31, 2, 1, "", "convnext_v2_atto"], [32, 2, 1, "", "convnext_v2_base"], [33, 2, 1, "", "convnext_v2_femto"], [34, 2, 1, "", "convnext_v2_huge"], [35, 2, 1, "", "convnext_v2_large"], [36, 2, 1, "", "convnext_v2_nano"], [37, 2, 1, "", "convnext_v2_pico"], [38, 2, 1, "", "convnext_v2_tiny"], [39, 2, 1, "", "convnext_xlarge"], [41, 2, 1, "", "densenet_121"], [42, 2, 1, "", "densenet_169"], [43, 2, 1, "", "densenet_201"], [44, 2, 1, "", "densenet_264"], [47, 2, 1, "", "efficientnet_b0"], [48, 2, 1, "", "efficientnet_b1"], [49, 2, 1, "", "efficientnet_b2"], [50, 2, 1, "", "efficientnet_b3"], [51, 2, 1, "", "efficientnet_b4"], [52, 2, 1, "", "efficientnet_b5"], [53, 2, 1, "", "efficientnet_b6"], [54, 2, 1, "", "efficientnet_b7"], [55, 2, 1, "", "efficientnet_v2_l"], [56, 2, 1, "", "efficientnet_v2_m"], [57, 2, 1, "", "efficientnet_v2_s"], [58, 2, 1, "", "efficientnet_v2_xl"], [64, 2, 1, "", "inception_resnet_v1"], [65, 2, 1, "", "inception_resnet_v2"], [60, 2, 1, "", "inception_v1"], [61, 2, 1, "", "inception_v3"], [62, 2, 1, "", "inception_v4"], [68, 2, 1, "", "lenet_1"], [69, 2, 1, "", "lenet_4"], [70, 2, 1, "", "lenet_5"], [74, 2, 1, "", "mobilenet"], [75, 2, 1, "", "mobilenet_v2"], [76, 2, 1, "", "mobilenet_v3_large"], [77, 2, 1, "", "mobilenet_v3_small"], [79, 2, 1, "", "resnest_101"], [80, 2, 1, "", "resnest_14"], [81, 2, 1, "", "resnest_200"], [82, 2, 1, "", "resnest_26"], [83, 2, 1, "", "resnest_269"], [84, 2, 1, "", "resnest_50"], [85, 2, 1, "", "resnest_50_1s4x24d"], [86, 2, 1, "", "resnest_50_4s2x40d"], [88, 2, 1, "", "resnet_1001"], [89, 2, 1, "", "resnet_101"], [90, 2, 1, "", "resnet_152"], [91, 2, 1, "", "resnet_18"], [92, 2, 1, "", "resnet_200"], [93, 2, 1, "", "resnet_269"], [94, 2, 1, "", "resnet_34"], [95, 2, 1, "", "resnet_50"], [99, 2, 1, "", "resnext_101_32x16d"], [100, 2, 1, "", "resnext_101_32x32d"], [101, 2, 1, "", "resnext_101_32x4d"], [102, 2, 1, "", "resnext_101_32x8d"], [103, 2, 1, "", "resnext_101_64x4d"], [104, 2, 1, "", "resnext_50_32x4d"], [106, 2, 1, "", "se_resnet_101"], [107, 2, 1, "", "se_resnet_152"], [108, 2, 1, "", "se_resnet_18"], [109, 2, 1, "", "se_resnet_34"], [110, 2, 1, "", "se_resnet_50"], [111, 2, 1, "", "se_resnext_101_32x4d"], [112, 2, 1, "", "se_resnext_101_32x8d"], [113, 2, 1, "", "se_resnext_101_64x4d"], [114, 2, 1, "", "se_resnext_50_32x4d"], [116, 2, 1, "", "sk_resnet_18"], [117, 2, 1, "", "sk_resnet_34"], [118, 2, 1, "", "sk_resnet_50"], [119, 2, 1, "", "sk_resnext_50_32x4d"], [130, 2, 1, "", "summarize"], [121, 2, 1, "", "vggnet_11"], [122, 2, 1, "", "vggnet_13"], [123, 2, 1, "", "vggnet_16"], [124, 2, 1, "", "vggnet_19"], [96, 2, 1, "", "wide_resnet_101"], [97, 2, 1, "", "wide_resnet_50"], [126, 2, 1, "", "xception"], [128, 2, 1, "", "zfnet"]], "lucid.nn": [[252, 1, 1, "", "AdaptiveAvgPool1d"], [253, 1, 1, "", "AdaptiveAvgPool2d"], [254, 1, 1, "", "AdaptiveAvgPool3d"], [224, 1, 1, "", "AlphaDropout"], [255, 1, 1, "", "AvgPool1d"], [256, 1, 1, "", "AvgPool2d"], [257, 1, 1, "", "AvgPool3d"], [237, 1, 1, "", "BCELoss"], [243, 1, 1, "", "BatchNorm1d"], [244, 1, 1, "", "BatchNorm2d"], [245, 1, 1, "", "BatchNorm3d"], [233, 1, 1, "", "Bilinear"], [131, 1, 1, "", "Buffer"], [220, 1, 1, "", "Conv1d"], [221, 1, 1, "", "Conv2d"], [222, 1, 1, "", "Conv3d"], [190, 1, 1, "", "ConvBNReLU1d"], [191, 1, 1, "", "ConvBNReLU2d"], [192, 1, 1, "", "ConvBNReLU3d"], [238, 1, 1, "", "CrossEntropyLoss"], [193, 1, 1, "", "DepthSeparableConv1d"], [194, 1, 1, "", "DepthSeparableConv2d"], [195, 1, 1, "", "DepthSeparableConv3d"], [225, 1, 1, "", "DropBlock"], [226, 1, 1, "", "DropPath"], [227, 1, 1, "", "Dropout"], [228, 1, 1, "", "Dropout1d"], [229, 1, 1, "", "Dropout2d"], [230, 1, 1, "", "Dropout3d"], [207, 1, 1, "", "ELU"], [208, 1, 1, "", "GELU"], [246, 1, 1, "", "GlobalResponseNorm"], [209, 1, 1, "", "HardSigmoid"], [210, 1, 1, "", "HardSwish"], [239, 1, 1, "", "HuberLoss"], [234, 1, 1, "", "Identity"], [247, 1, 1, "", "InstanceNorm1d"], [248, 1, 1, "", "InstanceNorm2d"], [249, 1, 1, "", "InstanceNorm3d"], [250, 1, 1, "", "LayerNorm"], [211, 1, 1, "", "LeakyReLU"], [235, 1, 1, "", "Linear"], [240, 1, 1, "", "MSELoss"], [258, 1, 1, "", "MaxPool1d"], [259, 1, 1, "", "MaxPool2d"], [260, 1, 1, "", "MaxPool3d"], [132, 1, 1, "", "Module"], [134, 1, 1, "", "ModuleDict"], [135, 1, 1, "", "ModuleList"], [241, 1, 1, "", "NLLLoss"], [133, 1, 1, "", "Parameter"], [136, 1, 1, "", "ParameterDict"], [137, 1, 1, "", "ParameterList"], [212, 1, 1, "", "ReLU"], [213, 1, 1, "", "ReLU6"], [214, 1, 1, "", "SELU"], [196, 1, 1, "", "SEModule"], [197, 1, 1, "", "SelectiveKernel"], [138, 1, 1, "", "Sequential"], [215, 1, 1, "", "Sigmoid"], [216, 1, 1, "", "Softmax"], [217, 1, 1, "", "Swish"], [218, 1, 1, "", "Tanh"], [262, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[177, 2, 1, "", "adaptive_avg_pool1d"], [178, 2, 1, "", "adaptive_avg_pool2d"], [179, 2, 1, "", "adaptive_avg_pool3d"], [154, 2, 1, "", "alpha_dropout"], [180, 2, 1, "", "avg_pool1d"], [181, 2, 1, "", "avg_pool2d"], [182, 2, 1, "", "avg_pool3d"], [172, 2, 1, "", "batch_norm"], [163, 2, 1, "", "bilinear"], [166, 2, 1, "", "binary_cross_entropy"], [149, 2, 1, "", "conv1d"], [150, 2, 1, "", "conv2d"], [151, 2, 1, "", "conv3d"], [167, 2, 1, "", "cross_entropy"], [155, 2, 1, "", "drop_block"], [156, 2, 1, "", "drop_path"], [157, 2, 1, "", "dropout"], [158, 2, 1, "", "dropout1d"], [159, 2, 1, "", "dropout2d"], [160, 2, 1, "", "dropout3d"], [140, 2, 1, "", "elu"], [141, 2, 1, "", "gelu"], [173, 2, 1, "", "global_response_norm"], [168, 2, 1, "", "huber_loss"], [175, 2, 1, "", "instance_norm"], [188, 2, 1, "", "interpolate"], [176, 2, 1, "", "layer_norm"], [143, 2, 1, "", "leaky_relu"], [165, 2, 1, "", "linear"], [184, 2, 1, "", "max_pool1d"], [185, 2, 1, "", "max_pool2d"], [186, 2, 1, "", "max_pool3d"], [170, 2, 1, "", "mse_loss"], [171, 2, 1, "", "nll_loss"], [144, 2, 1, "", "relu"], [189, 2, 1, "", "rotate"], [145, 2, 1, "", "selu"], [146, 2, 1, "", "sigmoid"], [147, 2, 1, "", "softmax"], [148, 2, 1, "", "tanh"], [153, 2, 1, "", "unfold"]], "lucid.nn.init": [[199, 2, 1, "", "constant"], [201, 2, 1, "", "kaiming_normal"], [202, 2, 1, "", "kaiming_uniform"], [203, 2, 1, "", "normal"], [204, 2, 1, "", "uniform"], [205, 2, 1, "", "xavier_normal"], [206, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[267, 1, 1, "", "ASGD"], [268, 1, 1, "", "Adadelta"], [269, 1, 1, "", "Adagrad"], [270, 1, 1, "", "Adam"], [271, 1, 1, "", "AdamW"], [272, 1, 1, "", "Adamax"], [273, 1, 1, "", "NAdam"], [265, 1, 1, "", "Optimizer"], [274, 1, 1, "", "RAdam"], [275, 1, 1, "", "RMSprop"], [276, 1, 1, "", "Rprop"], [277, 1, 1, "", "SGD"]], "lucid.random": [[284, 2, 1, "", "bernoulli"], [286, 2, 1, "", "rand"], [287, 2, 1, "", "randint"], [288, 2, 1, "", "randn"], [289, 2, 1, "", "seed"], [290, 2, 1, "", "uniform"]], "lucid.transforms": [[357, 1, 1, "", "CenterCrop"], [355, 1, 1, "", "Compose"], [358, 1, 1, "", "Normalize"], [359, 1, 1, "", "RandomCrop"], [360, 1, 1, "", "RandomGrayscale"], [361, 1, 1, "", "RandomHorizontalFlip"], [362, 1, 1, "", "RandomRotation"], [363, 1, 1, "", "RandomVerticalFlip"], [364, 1, 1, "", "Resize"], [356, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 57, 76, 77, 79, 80, 81, 82, 83, 84, 129, 130, 131, 132, 133, 134, 136, 137, 138, 177, 178, 179, 197, 238, 241, 252, 253, 254, 255, 258, 259, 264, 265, 266, 280, 282, 297, 305, 324, 326, 334, 337, 339, 340, 350, 356, 358, 366], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 45, 46, 55, 56, 57, 58, 61, 63, 67, 74, 105, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 338, 339, 340, 341, 343, 346, 347, 348, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366], "000": [5, 6, 7, 8, 306, 307], "0000": [238, 239, 241], "0001": 267, "000e": [306, 307], "001": [267, 270, 271, 273, 274, 277], "002": [272, 273], "004": 273, "005": 211, "008": [74, 129], "00808": 129, "01": [143, 211, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277], "01051757": 288, "013": [43, 129], "016": [88, 129], "0205": 238, "0217": 238, "0227": 238, "024": [110, 129], "026": [99, 129], "028": [104, 129], "0299": 238, "032": [55, 95, 129], "03545": 129, "044715": [141, 208], "0450": 238, "0451": 238, "046": [53, 129], "047": [122, 129], "04719755": 316, "0474259": 146, "048": [112, 129], "0480": 238, "04861": 129, "05": [172, 175, 176, 190, 191, 192, 211, 243, 244, 245, 247, 248, 249, 250], "0507": [145, 214], "06": [25, 173, 246, 268, 276], "066": [37, 129], "069": [82, 93, 129], "07": [155, 166, 167, 225, 237, 238], "0700": 238, "0706508": 218, "071": [88, 129], "0721": 238, "073": [118, 129], "07722396": 217, "0794": 241, "08": [270, 271, 272, 273, 274, 275], "0802": 241, "08333333": 19, "085537": 323, "088": [110, 129], "08955": 129, "0900": [216, 238], "096": [126, 129], "0986": [147, 216], "09861229": 324, "0992": 238, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 105, 111, 112, 113, 114, 115, 119, 120, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 40, 67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 120, 127, 128, 129, 130, 134, 135, 138, 150, 151, 163, 165, 177, 220, 221, 222, 229, 230, 233, 235, 244, 245, 248, 252, 256, 257, 259, 269, 282, 287, 290, 291, 294, 297, 300, 301, 309, 318, 334, 357, 359, 360, 362], "100": [6, 24, 55, 56, 57, 58, 121, 122, 123, 124, 129, 282, 366], "1000": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "1000000": 267, "1001": [88, 129, 238], "1003": 238, "1007": 129, "10096": 129, "101": [78, 79, 89, 96, 99, 100, 101, 102, 103, 106, 111, 112, 113, 129], "10106": 129, "1014": 145, "102": [93, 129], "1025": [135, 138], "1026": [135, 138], "1027": [135, 138], "10499": 146, "1050": 215, "1054": 241, "1056": [135, 138], "10590": 129, "108": [56, 129], "1097": 129, "11": [91, 108, 120, 121, 129, 163, 220, 221, 222, 229, 233, 244, 245, 248, 256, 257, 259, 297, 357, 358, 359, 360, 362], "110": [83, 129], "1105": 129, "1109": 129, "111": [49, 129], "1111": 237, "112": [76, 84, 129], "1134": 163, "114b": 360, "119": 163, "1192": [146, 147, 216], "12": [40, 41, 42, 43, 44, 50, 68, 69, 129, 136, 163, 179, 220, 221, 222, 229, 230, 233, 244, 245, 248, 254, 256, 257, 259, 297, 301, 302, 357, 359, 360, 362], "120": [55, 67, 70, 76, 77, 129], "121": [40, 41, 129], "123": [201, 202, 203, 204, 205, 206, 289, 290], "124": [201, 202, 205, 206], "125": 257, "1250": 239, "1251": 129, "1258": 129, "126": [96, 129], "128": [25, 30, 53, 64, 87, 96, 97, 120, 129, 138, 197, 355, 366], "1280": 73, "128x128": [355, 366], "13": [60, 120, 122, 129, 163, 220, 221, 222, 233, 245, 256, 257, 259, 297, 357, 359, 360, 362], "1314": 129, "132": [121, 129], "1324": 129, "133": [122, 129], "136": [57, 129], "138": [123, 129], "14": [42, 80, 129, 220, 221, 222, 229, 230, 233, 245, 256, 257, 259, 283, 297, 301, 357, 359, 360, 362], "1409": 129, "143": [124, 129], "144": 77, "145": 163, "148": [29, 129], "149": [42, 88, 129], "15": [0, 36, 129, 163, 220, 221, 222, 233, 245, 256, 257, 259, 297, 301, 337, 357, 359, 360, 362, 366], "1513": 241, "152": [90, 107, 129], "155": 297, "1556": 129, "1588": [141, 208], "16": [40, 41, 67, 70, 73, 76, 77, 99, 105, 120, 123, 129, 135, 136, 138, 178, 179, 190, 191, 192, 196, 197, 220, 221, 222, 229, 230, 233, 244, 245, 253, 254, 256, 257, 259, 264, 297, 301, 332, 357, 359, 360, 362], "160": [76, 89, 129], "16227766": 20, "16425": 241, "1643": 237, "166": 297, "167": 210, "169": [40, 42, 129], "17": [82, 129, 220, 221, 222, 233, 245, 257, 296, 357, 359, 360, 362], "170": 163, "1704": 129, "17520119": 331, "177": [101, 129], "18": [69, 91, 108, 116, 129, 220, 221, 222, 229, 233, 245, 257, 300, 301, 357, 359, 360, 362], "1800": 238, "184": 76, "18877099": 217, "19": [51, 120, 124, 129, 150, 151, 163, 221, 222, 245, 295, 297], "192": [25, 26, 68, 69, 90, 129], "194": [99, 129], "196": [39, 129], "1966": [147, 215, 216], "197": [28, 35, 129], "198": [76, 129], "1998": [129, 238], "1_53": 129, "1d": [149, 177, 180, 184, 190, 193, 243, 247, 252, 290, 297, 305, 337, 345, 346, 347, 348, 352], "1e": [25, 155, 166, 167, 172, 173, 175, 176, 190, 191, 192, 225, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "1e6": 267, "1s4x24d": 85, "1st": [23, 127], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 45, 46, 55, 56, 57, 58, 68, 69, 70, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91, 108, 116, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "20": [0, 5, 6, 7, 8, 43, 129, 134, 135, 138, 221, 222, 229, 245, 301, 323], "200": [76, 81, 92, 129], "2004": 129, "201": [43, 81, 129], "2011": 196, "2012": 129, "2014": 129, "2015": 129, "2016": 129, "2017": 129, "2018": [129, 196], "2019": 129, "2020": 129, "2021": 129, "2022": 129, "2023": [129, 196], "2039": 241, "204": 222, "21": [57, 94, 109, 129, 136, 163, 221, 222, 245, 301], "210": [58, 129], "211": 297, "21841": [34, 39], "22": [64, 126, 129, 163, 221, 222, 229, 245, 295, 297], "2201": 129, "221": [58, 129], "2231": [238, 241], "224": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129], "2247": [243, 244, 245, 247, 248, 249, 250], "224x224": [45, 60, 111, 112, 113, 114, 119], "226": 297, "22752314": 288, "2278": 129, "23": [79, 89, 96, 99, 100, 101, 102, 103, 106, 221, 222, 245], "2301": 129, "232": [74, 113, 129], "2324": [129, 214], "233": [33, 129], "234": [201, 202, 203, 204, 205, 206, 290], "235": [50, 129], "238": [77, 129], "23840584": 217, "24": [40, 41, 73, 76, 77, 81, 85, 92, 163, 178, 221, 222, 229, 245, 253, 301], "240": [33, 76, 77, 124, 129], "240x240": 45, "2424": [147, 216], "2447": 216, "246": [68, 129], "24d": 85, "25": [0, 85, 95, 104, 116, 129, 146, 156, 215, 222, 240, 245, 256, 257, 294, 309, 328, 339], "2500": [237, 239, 241], "2512": 207, "2547": 214, "256": [25, 87, 120], "26": [82, 129, 136, 165, 222, 235, 245, 301], "260": 129, "260x260": 45, "26325684": 288, "264": [44, 129], "2689": [147, 215, 216], "26894142": 217, "269": [83, 93, 129], "27": [84, 114, 129, 163, 220, 222, 245, 322], "272": [103, 129], "274": [79, 119, 129], "276": [201, 202, 205, 206], "28": [30, 38, 68, 69, 110, 129, 163, 222, 301], "280": [37, 129], "288": [77, 81, 129], "289": [34, 47, 129], "28x28": [7, 8, 68, 69], "29": [119, 129, 222], "299": [125, 129], "299r": 360, "299x299": [61, 62, 64, 65], "2_i": [247, 248, 249], "2d": [150, 159, 178, 181, 185, 191, 194, 244, 248, 253, 297, 305, 308, 337, 342, 345, 346, 348, 352, 362], "2e": 272, "2nd": [23, 127], "2x": 86, "2x2": [153, 357, 359], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 127, 129, 131, 132, 133, 135, 136, 137, 138, 141, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 168, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364], "30": [52, 61, 83, 86, 93, 129, 135, 189, 222, 362], "300": 129, "300x300": 45, "302": [56, 129], "3026": 241, "30823025": 217, "31": [163, 222, 297], "310": [306, 307], "31622777": 20, "319": 129, "32": [40, 42, 43, 70, 78, 79, 80, 81, 82, 83, 84, 99, 100, 101, 102, 104, 129, 135, 138, 163, 165, 178, 190, 191, 192, 196, 197, 221, 222, 235, 253, 264, 295, 296, 301], "320": [82, 129], "321": [201, 202, 205, 206], "326": [106, 129], "32x16d": 129, "32x32": [5, 6, 67, 70], "32x32d": 129, "32x4d": [111, 114, 119, 129], "32x8d": [112, 129], "33": [44, 129, 135, 138, 165, 222, 235], "33333333": 19, "336": [28, 102, 121, 129], "337": [44, 129], "34": [94, 109, 117, 129, 135, 138, 163, 222, 297, 301], "342": [201, 202, 205, 206], "344": [51, 129], "345": [201, 202, 203, 204, 205, 206, 290], "35": [65, 129, 135, 138, 222], "350": [39, 129], "352": [60, 129], "355": [54, 129], "3567": [237, 241], "357": [123, 128, 129], "36": [81, 90, 92, 107, 222], "3679": [140, 145, 207], "368": [116, 118, 129], "36th": 129, "37": 220, "370": [49, 129], "372": 163, "375": 240, "3750": 239, "37754067": 217, "378": [69, 129], "380": 129, "380x380": 45, "38344152": 286, "384": [25, 26], "38629436": 324, "389056": 323, "38th": 129, "392": [61, 129], "393": [52, 60, 129], "3935": 207, "3d": [151, 160, 179, 182, 186, 192, 195, 222, 245, 249, 254], "3x3": [129, 291], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 40, 45, 67, 68, 69, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 109, 110, 117, 118, 129, 130, 136, 138, 149, 150, 151, 153, 155, 156, 158, 159, 160, 163, 165, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 267, 270, 274, 275, 277, 280, 283, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 313, 319, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364], "40": [62, 73, 76, 77, 86, 129], "400": [31, 70, 129], "4044": 237, "4076": 238, "4096": [23, 127], "40d": 86, "41421356": 12, "416": [93, 111, 129], "41666667": 19, "417": [86, 129], "41808962": 288, "419974": 148, "4199743": 218, "42": [163, 196, 283, 291], "421": [201, 202, 205, 206], "423": [201, 202, 203, 204], "42718872": 20, "4278": 129, "4284": 129, "4286": 237, "43": [53, 129, 295, 297], "432": [52, 129], "4323": 207, "4375": 239, "43758721": 286, "44": [89, 101, 129], "440": [57, 129], "4472136": 14, "448": [54, 129], "4495": [245, 249], "45": [117, 129, 163, 189, 362], "4510": 129, "4520": 129, "4545": 224, "455": [103, 129], "456": 129, "456x456": 45, "46": [29, 129], "464": [27, 86, 129], "468": [100, 129], "4700": 129, "4708": 129, "47112767": 318, "472": [100, 129], "48": [40, 43, 44, 77, 79, 83, 93, 111, 129, 165, 235], "480": [42, 76, 129], "481": [76, 129], "483": [84, 129], "49": [106, 129], "496": [38, 129], "4979": 207, "4s2x40d": [86, 129], "4x": 85, "4x4": 364, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 25, 33, 45, 47, 61, 67, 68, 69, 70, 73, 76, 77, 115, 116, 117, 118, 127, 129, 130, 132, 133, 134, 135, 136, 138, 141, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 168, 170, 172, 175, 176, 177, 180, 181, 188, 190, 191, 192, 197, 199, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 276, 280, 283, 284, 287, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 313, 315, 316, 317, 325, 326, 327, 328, 329, 334, 337, 338, 339, 340, 343, 345, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "50": [5, 6, 78, 84, 85, 86, 87, 95, 97, 104, 110, 114, 118, 119, 129, 165, 235, 276, 295, 297, 309, 360, 361, 363, 366], "5000": [237, 239, 241], "504": [75, 129], "50_1s4x24d": 129, "510": 129, "5108": 241, "512": [25, 65, 87, 91, 117, 129], "519": 129, "52359878": 317, "528": 129, "528x528": 45, "53": [163, 296], "530": [100, 129], "536": [50, 129], "537": [77, 129], "543": [201, 202, 203, 204, 205, 206, 290], "54308063": 321, "544": [123, 129], "545": 302, "5455": 224, "549": [89, 129], "55": [56, 129], "557": [95, 129], "559": [114, 129], "560": [48, 80, 129], "563": [201, 202, 205, 206], "568": [58, 129], "569": [112, 129], "57": [118, 129, 163], "57079633": [316, 317], "57366333": 289, "576": 77, "586": [62, 129], "587g": 360, "589": [30, 129], "591": [27, 129], "592": [108, 129], "5987": 129, "5995": 129, "5th": [23, 127], "6": [11, 19, 23, 25, 40, 41, 42, 43, 44, 45, 67, 70, 78, 84, 87, 94, 95, 97, 104, 109, 110, 117, 118, 127, 136, 137, 149, 150, 151, 153, 155, 160, 163, 165, 173, 177, 202, 206, 209, 213, 220, 221, 222, 225, 227, 228, 229, 230, 233, 235, 237, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 259, 260, 268, 276, 280, 283, 290, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 325, 326, 327, 334, 337, 338, 339, 340, 343, 348, 349, 354, 356, 357, 358, 359, 360, 362, 364], "60": [5, 6, 90, 129], "600": [45, 129], "600x600": 45, "6052": 241, "6065": 207, "608": [128, 129], "61": [24, 70, 129], "6105": 129, "611": [80, 129], "6114": 129, "6124": [243, 244, 245, 247, 248, 249, 250], "617": [55, 129], "62": [128, 129, 163], "623": [36, 129], "62686041": 331, "630": 129, "6321": [140, 207], "63245553": 20, "635": [38, 129], "636": [47, 129], "64": [25, 40, 44, 73, 76, 78, 79, 80, 81, 82, 83, 84, 87, 92, 103, 115, 120, 129, 135, 138, 163, 196, 197], "640": [34, 51, 129], "645": 129, "64589411": 286, "647": [116, 129], "64x4d": [113, 129], "654": [201, 202, 203, 204, 205, 206, 290], "657": [201, 202, 205, 206], "6590": [147, 216], "66": [54, 107, 129], "660": [34, 129], "6652": 216, "66666667": 19, "6667": 237, "667": [124, 129], "6682": 237, "669": [92, 129], "67": 297, "672": [76, 94, 129], "67326": 214, "6733": 145, "676": [85, 129], "678": [201, 202, 203, 204, 205, 206], "68811989": 288, "689": [91, 129], "69314718": 324, "696": [96, 129], "7": [18, 41, 48, 120, 129, 136, 149, 150, 151, 153, 155, 160, 163, 165, 166, 167, 177, 197, 208, 213, 214, 215, 218, 220, 221, 222, 225, 229, 230, 233, 235, 237, 238, 240, 244, 245, 248, 249, 252, 256, 257, 259, 260, 283, 284, 287, 290, 293, 295, 296, 297, 301, 303, 305, 309, 323, 326, 334, 337, 338, 339, 352, 356, 357, 358, 359, 360, 362, 364], "70": [7, 8, 81, 129], "7001": 238, "704": [44, 101, 129], "706": [70, 129], "70710678": [14, 330], "708": [31, 129], "7132": 129, "7141": 129, "7147": 241, "717": [32, 129], "7182818": 323, "72": [73, 76, 77], "726791": 129, "7311": [147, 215, 216], "739": [64, 129], "74": 297, "75": [165, 235, 240, 267, 309], "7581": 145, "760": [79, 119, 129], "76159416": [217, 336], "7616": [148, 218], "76219569": 321, "7635": 214, "767": [28, 129], "768": [25, 26], "770": 129, "772": 302, "778": [108, 129], "78": [97, 129], "78357324": 288, "78539816": 318, "791": [102, 129], "79172504": 286, "792": [99, 129], "795": [48, 129], "797": [94, 129], "7x7": 127, "8": [17, 21, 40, 45, 83, 87, 90, 93, 99, 100, 101, 102, 103, 104, 107, 116, 117, 118, 130, 135, 136, 138, 149, 150, 151, 153, 155, 160, 163, 165, 166, 177, 178, 179, 190, 191, 192, 196, 208, 209, 214, 215, 218, 220, 221, 222, 225, 227, 228, 229, 230, 233, 235, 237, 240, 244, 245, 248, 249, 252, 253, 254, 256, 257, 259, 260, 270, 271, 272, 273, 274, 275, 283, 284, 287, 294, 295, 296, 297, 301, 302, 304, 305, 322, 326, 334, 337, 338, 339, 356, 357, 358, 359, 360, 362, 364], "80": [5, 6, 7, 8, 76], "800": [32, 36, 129], "8005": 238, "808": [90, 129], "817": [61, 129], "818": 129, "8182": 224, "82": 163, "821": [107, 129], "83": [103, 129], "833": 129, "84": [67, 69, 70], "840": [24, 35, 129], "8413": [141, 208], "847": [65, 129], "848": [107, 122, 129], "856": [41, 129], "85772238": 217, "8584": 214, "86": 129, "862": [126, 129], "863": [121, 129], "864": [92, 129], "868": [109, 129], "872": [75, 85, 106, 129], "876": [201, 202, 205, 206, 290], "88": [27, 32, 77, 102, 113, 129], "8808": [147, 215, 216], "884": [29, 129], "886": [96, 129], "887": 302, "891773": 286, "89442719": 14, "895": [117, 129], "896": [114, 129], "9": [0, 1, 3, 8, 21, 25, 26, 37, 49, 129, 150, 153, 155, 163, 165, 177, 220, 221, 222, 225, 229, 233, 235, 237, 244, 245, 248, 252, 256, 257, 259, 267, 268, 270, 271, 272, 273, 274, 275, 277, 283, 284, 287, 290, 293, 297, 301, 302, 303, 305, 332, 333, 356, 357, 358, 359, 360, 362], "904": [104, 129], "90709145": 289, "9091": 224, "9120": 241, "9163": 241, "928": [43, 129], "929": [83, 129], "93": [112, 129], "94": 88, "9486833": 20, "949e": [306, 307], "9526": 146, "9545": 208, "955": [111, 129], "956": [35, 129], "958": [109, 129], "96": [25, 26, 77], "960": 76, "96366276": 286, "9640": 218, "96402758": 336, "968": [39, 129], "973": [97, 129], "978": [41, 129], "984": [62, 113, 129], "99": 275, "9957": 241, "99734545": 289, "999": [0, 270, 271, 272, 273, 274], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 46, 63, 67, 71, 78, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 120, 121, 122, 123, 124, 129, 132, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 163, 165, 166, 167, 171, 172, 173, 175, 176, 188, 197, 224, 225, 227, 228, 229, 230, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 286, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 362], "As": 289, "At": 262, "Be": 0, "By": [0, 2, 3, 10, 88, 89, 90, 91, 92, 93, 94, 95, 133, 189, 264, 274, 280, 284, 286, 287, 288, 290, 356, 366], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 138, 140, 141, 143, 144, 145, 146, 148, 163, 165, 188, 201, 202, 205, 206, 214, 220, 221, 222, 233, 235, 243, 244, 245, 247, 248, 249, 264, 266, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 323, 324, 325, 326, 327, 330, 332, 334, 337, 338, 339, 346, 348, 350, 352, 353, 366], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 87, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 156, 160, 163, 165, 172, 175, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 202, 220, 221, 222, 226, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 270, 271, 275, 276, 282, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 360, 361, 363, 364], "In": [3, 10, 19, 149, 150, 151, 238, 241, 279, 280, 281, 355, 366], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 25, 26, 38, 41, 42, 43, 44, 59, 60, 61, 67, 68, 69, 70, 72, 73, 74, 87, 88, 89, 90, 91, 92, 93, 94, 95, 108, 120, 126, 129, 132, 134, 135, 136, 137, 138, 156, 160, 163, 188, 189, 190, 191, 192, 196, 208, 209, 212, 213, 218, 226, 233, 234, 237, 238, 239, 240, 241, 252, 253, 254, 262, 264, 265, 266, 267, 273, 275, 276, 277, 280, 289, 293, 294, 295, 298, 299, 300, 302, 303, 309, 325, 327, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356], "Its": [21, 291], "Near": 19, "No": [153, 156], "Not": 234, "One": [68, 366], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "There": 349, "These": [4, 10, 11, 14, 17, 20, 22, 55, 56, 57, 58, 96, 97, 116, 117, 118, 126, 129, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 276, 283, 291, 366], "To": [3, 129, 266, 284, 288, 291, 306, 307, 345, 366], "With": [3, 153, 156, 356, 366], "_": [17, 134, 135, 137, 138, 140, 141, 143, 144, 145, 146, 148, 165, 188, 244, 245, 247, 248, 249, 255, 256, 257, 258, 259, 260, 267, 268, 270, 271, 272, 273, 275, 277, 295, 296, 297, 301, 337, 338, 357, 358, 359, 361, 362, 363], "_1": [14, 134, 135, 136, 137, 138, 163, 233, 301, 341, 343, 354], "_2": [14, 134, 135, 136, 137, 138, 163, 233, 301, 341, 343, 354], "__call__": [1, 132], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 25, 26, 45, 46, 59, 63, 67, 71, 72, 73, 78, 120, 127, 130, 131, 132, 133, 134, 135, 136, 137, 156, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 292, 355, 356], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 265, "__setattr__": 132, "_activ": 147, "_arraylik": [283, 305, 307, 311, 313], "_arraylikeint": 346, "_arrayorscalar": [131, 133, 283, 284, 292, 340], "_base_activ": 67, "_base_dtyp": [304, 306, 309, 310, 312], "_block": 225, "_c": 358, "_decai": 273, "_fanmod": [201, 202], "_grad_en": [279, 281], "_i": [14, 18, 147, 156, 163, 216, 226, 240, 243, 250, 255, 258, 295, 296, 298, 299, 301, 302, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 348, 350, 353, 354], "_in": [201, 202, 205, 206], "_interpolatetyp": 262, "_j": [147, 216, 255, 258, 301, 326, 334, 338, 339], "_k": 351, "_left": 188, "_make_lay": 120, "_modul": 132, "_n": [14, 134, 135, 136, 137, 138, 341, 343, 354], "_numpyarrai": 283, "_out": [201, 202, 205, 206, 348, 352], "_p": 18, "_pad": 346, "_paddingstr": [190, 191, 192, 193, 194, 195, 220, 221, 222], "_paramet": 132, "_reductiontyp": [166, 167, 168, 170, 171, 237, 238, 239, 240, 241], "_resnestbottleneck": 78, "_right": 188, "_scalar": [199, 203, 204, 205, 206, 283, 304, 309, 319], "_seresnetbottleneck": [106, 107, 110], "_seresnetmodul": [108, 109], "_shapelik": [130, 176, 250, 283, 287, 310, 312, 349, 350, 353], "_size": [177, 178, 179, 225], "_skresnetmodul": [116, 117, 118], "_slope": 211, "_statedict": 265, "_t": [274, 275], "_tensor": [131, 133, 305, 340], "_tensorop": 292, "_u": 19, "_v": 19, "_valu": [319, 346], "_width": 346, "a_i": [298, 299, 302], "aaai": 129, "ab": 314, "abc": [2, 265], "abil": [10, 129, 366], "about": [10, 130], "abov": [10, 279, 281, 289, 305, 308], "absolut": [17, 18, 168, 272, 315], "abstract": [2, 3, 264, 265, 266, 267, 275, 277], "abstractmethod": 265, "abund": 34, "acceler": [129, 214, 243, 244, 245, 267, 273, 275, 277], "accept": [234, 286, 292], "access": [0, 2, 3, 4, 5, 6, 7, 8, 99, 100, 101, 102, 103, 104, 131, 133, 134, 135, 136, 137, 138, 349], "accord": [156, 188, 220, 221, 222, 233, 235, 238, 241, 268, 269, 270, 271, 272, 273, 274, 338], "accordingli": 13, "account": [17, 19, 20, 217], "accumul": [267, 268, 269, 293, 294, 298, 299, 300, 303], "accur": 107, "accuraci": [32, 34, 35, 36, 37, 55, 56, 57, 58, 71, 72, 73, 110, 129], "achiev": [98, 99, 100, 101, 102, 103, 104, 129, 149, 150, 151, 177, 252, 253, 254, 273, 361, 363], "across": [0, 5, 6, 25, 38, 74, 131, 135, 138, 173, 176, 177, 178, 179, 205, 206, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 283, 284, 286, 287, 288, 289, 290, 291, 306, 307, 326, 339], "act": 271, "activ": [10, 23, 25, 67, 76, 77, 88, 92, 93, 105, 120, 127, 129, 134, 138, 140, 141, 143, 144, 145, 146, 147, 148, 154, 190, 191, 192, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 227, 228, 229, 230, 237, 238, 241, 243, 244, 245, 250, 325, 327], "actual": [133, 237, 238, 240, 241, 292, 359], "ad": [40, 73, 87, 132, 134, 135, 136, 137, 138, 149, 150, 151, 155, 163, 165, 166, 167, 172, 173, 175, 176, 180, 181, 182, 184, 185, 186, 190, 191, 192, 220, 221, 222, 225, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 268, 269, 270, 271, 272, 273, 274, 275, 282, 353, 366], "adadelta": 278, "adagrad": [268, 278], "adam": [129, 271, 272, 273, 274, 278], "adamax": 278, "adamw": 278, "adapt": [23, 59, 67, 78, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 129, 177, 178, 179, 196, 197, 252, 253, 254, 268, 269, 270, 273, 274, 275, 276], "adaptive_avg_pool1d": [162, 183, 252], "adaptive_avg_pool2d": [162, 183, 253], "adaptive_avg_pool3d": [162, 183, 254], "adaptiveavgpool1d": [232, 261], "adaptiveavgpool2d": [23, 105, 120, 127, 232, 261], "adaptiveavgpool3d": [232, 261], "add": [4, 132, 134, 135, 138, 163, 165, 220, 221, 222, 233, 235, 250, 265, 267, 270, 275, 277, 280, 314, 346, 353], "add_modul": [132, 138], "add_param_group": 265, "addit": [4, 10, 17, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 132, 135, 138, 163, 165, 172, 175, 233, 235, 243, 244, 245, 247, 248, 249, 267, 273, 280, 291, 293, 351], "addition": 273, "address": [238, 241, 270, 271, 274], "adjust": [64, 71, 73, 74, 111, 112, 113, 114, 115, 119, 177, 178, 179, 197, 224, 225, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 266, 270, 274, 275, 276, 343, 354], "advanc": [3, 19, 46, 72, 92, 129, 135, 138, 149, 150, 151, 177, 178, 179, 252, 253, 254, 264, 267], "advantag": [65, 281], "affect": [279, 347, 350, 355], "affin": [190, 191, 192, 243, 244, 245, 247, 248, 249, 250, 362], "after": [17, 23, 76, 77, 127, 133, 134, 135, 136, 137, 138, 160, 196, 197, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 227, 228, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 271, 281, 292, 293, 294, 298, 299, 300, 302, 303, 309, 346, 356], "afterward": 281, "aggreg": [129, 197, 301, 348, 352], "aim": [4, 10], "al": [60, 129], "alex": [5, 6, 129], "alexnet": [66, 127, 129], "algebra": [10, 11, 308], "algorithm": [7, 10, 17, 19, 20, 265, 266, 291], "align": [21, 188, 262, 296, 297], "align_corn": [188, 262], "all": [0, 3, 4, 10, 20, 45, 129, 132, 134, 135, 136, 137, 138, 150, 151, 177, 178, 179, 181, 182, 185, 186, 188, 191, 192, 197, 211, 212, 222, 252, 253, 254, 256, 257, 260, 264, 265, 266, 267, 270, 275, 276, 277, 302, 325, 326, 327, 334, 337, 339, 341, 342, 343, 348, 350, 351, 352, 354, 357, 358, 366], "allevi": [129, 140], "alloc": [306, 307], "allow": [0, 1, 3, 4, 10, 19, 20, 65, 67, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 111, 112, 113, 114, 115, 119, 129, 133, 134, 135, 136, 137, 138, 140, 143, 144, 147, 151, 153, 189, 197, 207, 208, 211, 214, 215, 216, 218, 220, 221, 222, 262, 264, 268, 269, 280, 304, 310, 312, 313, 338, 340, 345, 355, 356, 366], "along": [147, 188, 197, 216, 296, 297, 301, 325, 326, 327, 334, 337, 339, 341, 343, 345, 348, 351, 352, 353, 354, 361, 363], "alongsid": 131, "alpha": [140, 143, 145, 154, 207, 214, 224, 267, 275], "alpha_dropout": [161, 162, 224], "alphadropout": [231, 232], "alphadropoutmodel": 224, "alreadi": 282, "also": [130, 140, 141, 143, 144, 145, 146, 148, 163, 165, 188, 273, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354], "alter": [138, 349], "altern": [1, 208, 268, 297], "alwai": [133, 347, 360, 361, 363], "among": [61, 197], "amount": [149, 150, 151, 180, 181, 182, 184, 185, 186, 193, 194, 195, 273], "amsgrad": [270, 271], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 141, 149, 150, 151, 153, 154, 157, 158, 159, 160, 163, 178, 179, 188, 189, 193, 194, 195, 197, 205, 206, 207, 213, 215, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 235, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 270, 273, 275, 281, 282, 283, 292, 297, 305, 308, 319, 326, 334, 339, 341, 348, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "analog": [348, 352], "analysi": [4, 196, 220, 221, 222, 249, 255, 257, 258, 260], "andreetto": 129, "andrew": 129, "angl": [189, 362], "ani": [0, 1, 2, 3, 17, 19, 24, 87, 115, 126, 128, 131, 132, 133, 134, 136, 137, 140, 141, 143, 144, 145, 146, 148, 154, 157, 163, 165, 172, 175, 215, 250, 264, 265, 279, 281, 282, 289, 292, 304, 305, 306, 308, 310, 311, 312, 313, 325, 327, 338, 340, 341, 342, 343, 346, 348, 351, 352, 353, 354, 355, 366], "anoth": [137, 303, 311, 313, 356, 366], "api": [4, 252, 253, 254, 366], "appear": 265, "append": [135, 137, 138], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 25, 45, 46, 98, 115, 125, 127, 129, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 173, 190, 191, 192, 196, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 267, 268, 269, 271, 272, 273, 274, 297, 346, 348, 355, 358, 360, 361, 362, 363, 364, 366], "applic": [4, 19, 27, 28, 29, 32, 34, 39, 40, 64, 65, 71, 72, 73, 75, 76, 77, 129, 149, 175, 220, 221, 222, 233, 235, 291, 304, 312, 346, 364], "approach": [3, 63, 138, 271], "appropri": [19, 73, 76, 77, 129, 132, 136, 138, 156, 220, 221, 222, 224, 227, 228, 238, 256, 257, 279, 281], "approx": 145, "approxim": [19, 141, 208, 209, 210, 256, 259], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 55, 56, 57, 58, 59, 60, 61, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 149, 150, 151, 153, 156, 163, 165, 173, 178, 179, 188, 193, 194, 195, 196, 197, 201, 202, 204, 205, 206, 209, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 267, 270, 271, 273, 274, 275, 276, 277, 279, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 309, 315, 319, 323, 325, 326, 327, 328, 329, 334, 337, 338, 341, 345, 348, 349, 352, 355, 356, 357, 359, 360, 364, 366], "arang": 314, "arbitrari": [135, 234, 306, 307, 319, 324, 326, 330, 332, 334, 338, 339], "arcco": 314, "arch": 282, "architectur": [24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137, 138, 141, 196, 209, 210, 212, 217, 233, 234, 264, 282], "arcsin": 314, "arctan": 314, "area": [188, 262], "arg": [132, 234, 282, 306], "argument": [3, 4, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 132, 138, 234, 286, 306, 338], "around": [14, 189, 218], "arr": [283, 341, 343, 351, 354], "arrai": [10, 131, 133, 280, 283, 292, 297, 305, 311, 313, 340, 347, 348, 356, 366], "art": [34, 129], "artifici": 129, "arxiv": 129, "asarrai": 283, "asgd": 278, "aspect": 364, "assign": [132, 134, 136, 138, 188, 238, 241], "assist": [59, 60, 61], "associ": [136, 137], "assum": [0, 1, 265, 266, 279], "attempt": [134, 138], "attent": [78, 85, 86, 115, 129, 137, 163, 196], "atto": [31, 129], "attribut": 132, "audio": 220, "augment": [3, 4, 108, 189, 291, 348, 352, 355, 359, 360, 361, 362, 363, 366], "autodiff": 10, "autoencod": 129, "autograd": 264, "automat": [4, 10, 133, 134, 135, 136, 137, 264, 284, 286, 287, 288, 290, 292, 306, 307, 313, 345, 356], "auxiliari": [59, 60, 61, 131], "avail": [4, 5, 6, 7, 8, 10], "avd": 78, "averag": [23, 68, 69, 70, 78, 87, 98, 105, 115, 120, 127, 131, 177, 178, 179, 180, 181, 182, 188, 196, 197, 240, 252, 253, 254, 255, 256, 257, 267, 268, 270, 275, 326], "avg_down": 87, "avg_pool": [255, 256, 257], "avg_pool1d": [162, 183], "avg_pool2d": [162, 183], "avg_pool3d": [162, 183], "avgpool": [23, 105, 120, 127, 197], "avgpool1d": [232, 261], "avgpool1dmodel": 255, "avgpool2d": [232, 261], "avgpool2dmodel": 256, "avgpool3d": [232, 261], "avgpool3dmodel": 257, "avoid": [2, 3, 19, 46, 136, 281, 309], "ax": [11, 280, 325, 326, 327, 334, 338, 339, 348, 350, 352], "axi": [18, 147, 216, 296, 297, 325, 326, 327, 334, 339, 341, 343, 345, 346, 348, 350, 351, 352, 353, 354, 361, 363], "b": [11, 21, 129, 163, 165, 204, 220, 221, 222, 233, 235, 280, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 341, 343, 351, 354, 360], "b0": [45, 47, 129], "b1": [45, 48, 129], "b2": [45, 49, 129], "b3": [45, 50, 129], "b4": [45, 51, 129], "b5": [45, 52, 129], "b6": [45, 53, 129], "b7": [45, 54, 129], "b_i": [298, 299, 302], "back": [188, 256, 257, 282, 296, 301, 348, 352], "backbon": [116, 117, 118], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 163, 165, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 264, 281, 288, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 323, 325, 327, 340, 346, 348, 352, 356], "backward": [10, 131, 133, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 292, 309, 356], "balanc": [29, 32, 33, 36, 46, 55, 56, 57, 58, 73, 99, 100, 101, 102, 103, 104, 129, 239], "bar": 267, "base": [3, 11, 16, 17, 20, 21, 27, 30, 32, 40, 59, 60, 61, 62, 63, 64, 65, 67, 78, 85, 86, 98, 99, 100, 101, 102, 103, 104, 115, 120, 125, 129, 132, 134, 135, 136, 137, 153, 163, 177, 178, 179, 197, 224, 238, 239, 252, 253, 254, 264, 265, 266, 267, 271, 275, 276, 277, 284, 293, 294, 298, 299, 300, 302, 303, 313, 323, 324, 325, 327, 338, 345, 346, 359, 360, 361, 362, 363], "base_width": [78, 79, 80, 81, 82, 83, 84, 96, 97, 98, 115], "basic": [10, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 125, 127, 130, 149, 150, 151, 155, 156, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 201, 202, 205, 206, 225, 252, 253, 254, 309, 357, 358, 359, 360, 361, 362, 363, 364], "basicblock": [87, 91, 94], "batch": [1, 2, 3, 11, 17, 20, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 64, 65, 105, 111, 112, 113, 114, 119, 149, 150, 151, 153, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 220, 221, 222, 233, 235, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 274, 297, 357, 358, 359, 360, 362, 364], "batch_norm": [162, 174, 243, 244, 245], "batch_norm1": 138, "batch_norm2": 138, "batch_siz": [1, 2, 3, 125, 197], "batchnorm": [190, 191, 192], "batchnorm1d": [190, 232, 251], "batchnorm1dmodel": 243, "batchnorm2d": [138, 191, 232, 251], "batchnorm2dmodel": 244, "batchnorm3d": [192, 232, 251], "batchnorm3dmodel": 245, "bceloss": [232, 242], "becaus": [2, 287], "becom": [18, 132, 268, 276], "been": 217, "befor": [17, 105, 130, 133, 267, 273, 281, 289, 346, 358, 366], "begin": [1, 18, 140, 143, 144, 145, 156, 207, 209, 210, 211, 212, 214, 226, 239, 240, 241, 255, 256, 257, 258, 259, 260, 274, 276, 280, 291, 298, 299, 301, 315, 319, 325, 327, 329, 346], "behav": [226, 239, 337], "behavior": [129, 135, 138, 279, 291, 297, 307, 366], "being": [137, 189, 224, 227, 228, 229, 230, 274, 279, 281, 341, 343, 354], "belong": 0, "below": [20, 60, 61, 62, 64, 65, 67, 68, 69, 70, 297, 305, 308], "benchmark": [5, 6, 7, 8], "benefici": 138, "benefit": [140, 264, 273, 283], "bernoulli": [224, 227, 228, 229, 230, 285], "best": [201, 202, 205, 206], "beta": [173, 243, 244, 245, 246, 247, 248, 249, 250, 270, 271, 272, 273, 274], "beta1": [270, 271, 272, 273, 274], "beta2": [270, 271, 272, 273, 274], "beta_1": [270, 271, 272, 273, 274], "beta_2": [270, 271, 272, 273, 274], "beta_c": [173, 246], "better": [16, 127, 129, 141, 201, 202, 205, 206, 217, 225, 247, 248, 249, 264, 271, 273, 275, 358], "between": [29, 32, 36, 55, 56, 57, 58, 99, 100, 101, 102, 103, 104, 129, 132, 149, 150, 151, 153, 163, 168, 190, 191, 192, 193, 194, 195, 197, 213, 220, 221, 222, 224, 227, 228, 229, 230, 233, 237, 238, 239, 240, 241, 267, 275, 276, 277, 291, 293, 294, 297, 300, 303, 304, 309, 339, 360, 361, 363, 364], "beyond": [10, 135], "bia": [149, 150, 151, 163, 165, 172, 175, 176, 190, 191, 192, 193, 194, 195, 220, 221, 222, 233, 235, 243, 244, 245, 247, 248, 249, 250, 270, 271, 272, 273, 274], "bias": [220, 221, 222, 235, 250, 264], "bias1": 136, "bias2": 136, "big": [193, 194, 195], "bilinear": [162, 164, 188, 232, 236, 262], "bilinearmodel": 233, "binari": [146, 166, 215, 224, 227, 228, 229, 230, 237], "binary_cross_entropi": [162, 169], "block": [40, 41, 42, 43, 44, 45, 46, 63, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 129, 132, 153, 155, 156, 190, 191, 192, 197, 220, 221, 222, 225, 281], "block1": [130, 264], "block2": [130, 264], "block_arg": [87, 105], "block_cfg": 46, "block_config": 40, "block_siz": [155, 225], "blue": 360, "bmatrix": 301, "bn": [190, 191, 192], "bn_affin": [190, 191, 192], "bool": [1, 5, 6, 7, 8, 18, 22, 45, 59, 60, 61, 78, 87, 130, 132, 133, 154, 156, 157, 158, 159, 160, 172, 175, 188, 190, 191, 192, 193, 194, 195, 220, 221, 222, 226, 233, 235, 243, 244, 245, 247, 248, 249, 250, 262, 270, 271, 275, 279, 284, 286, 287, 288, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 334, 339, 340, 356], "both": [149, 165, 178, 180, 184, 190, 208, 217, 220, 221, 253, 255, 256, 258, 259, 262, 295, 296, 297, 301, 305, 345, 364], "bottleneck": [40, 72, 73, 75, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 129, 196], "bottleneck_cfg": 73, "bottom": 188, "bound": [202, 204, 206, 276, 290], "box": 4, "branch": [59, 60, 61, 129, 197], "break": 264, "brief": 366, "bright": 366, "broadcast": [229, 230, 326, 334, 339, 349, 353], "budget": 36, "buffer": [267, 273, 275, 277], "build": [10, 26, 46, 65, 73, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 115, 116, 117, 118, 129, 132, 135, 138, 264, 366], "built": [3, 10, 88, 92, 93, 138, 264], "burg": 8, "c": [5, 6, 8, 87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 129, 153, 155, 158, 159, 160, 167, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 196, 229, 230, 238, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 343, 354, 358], "c_": [220, 221, 222], "c_in": [149, 150, 151, 190, 191, 192], "c_out": [149, 150, 151], "calcul": [0, 1, 10, 11, 133, 262, 268, 269, 272, 273, 274, 281, 287, 292], "calculu": [12, 19], "call": [1, 132, 279, 282, 293, 294, 297, 298, 299, 300, 302, 303], "callabl": [265, 282, 355], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 45, 73, 87, 96, 97, 111, 112, 113, 114, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 143, 149, 150, 151, 156, 189, 197, 208, 211, 213, 218, 220, 221, 222, 247, 248, 249, 256, 257, 258, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 283, 290, 291, 292, 297, 306, 307, 308, 310, 312, 313, 326, 334, 339, 343, 345, 346, 348, 349, 352, 353, 354, 355, 356, 359, 361, 362, 363, 366], "cannot": [13, 14, 16, 17, 20, 21, 22, 284], "cap": 213, "capabl": [10, 38, 85, 86, 304, 305, 308, 310, 311, 312, 313], "capac": [27, 28, 29, 35, 39, 71, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 119, 129], "captur": [115, 129, 153, 220, 221, 222, 233], "cardin": [78, 79, 80, 81, 82, 83, 84, 85, 86, 98, 99, 100, 101, 102, 103, 104, 115, 129], "care": 281, "cartesian": 345, "case": [3, 18, 67, 73, 74, 140, 143, 144, 145, 156, 207, 209, 210, 211, 212, 214, 226, 239, 240, 241, 255, 256, 257, 258, 259, 260, 264, 269, 274, 276, 280, 298, 299, 315, 319, 325, 327, 329, 346, 366], "categori": [7, 88, 89, 90, 91, 92, 93, 94, 95], "caus": [3, 19, 267, 275, 277], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 140, 141, 143, 145, 146, 149, 150, 151, 163, 165, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 196, 205, 206, 208, 209, 210, 215, 217, 224, 233, 235, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 276, 295, 296, 297, 300, 302], "center": [189, 218, 275, 357, 366], "centercrop": [365, 366], "central": 283, "certain": [13, 141, 163, 217, 233, 270, 271, 279, 325, 327], "cfg": [76, 77], "chain": [16, 17, 138, 355, 366], "challeng": [7, 129], "cham": 129, "chanc": [360, 361, 363], "chang": [168, 239, 276, 280, 281, 282, 347, 349, 353, 360, 366], "channel": [25, 26, 40, 45, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 109, 111, 112, 113, 114, 119, 120, 125, 129, 149, 150, 151, 153, 158, 159, 160, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 220, 221, 222, 229, 230, 243, 244, 245, 246, 247, 248, 249, 252, 255, 256, 257, 258, 259, 260, 358, 360, 364], "character": [96, 97], "check": [279, 357, 359], "checkpoint": 266, "chen": 129, "choic": 345, "choleski": 15, "chollet": 129, "choos": 129, "chosen": [224, 225], "christian": 129, "christoph": 8, "chu": 129, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 283, "class": [3, 4, 10, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 147, 156, 167, 171, 264, 266, 282, 305, 308, 309, 340, 366], "classic": 70, "classif": [4, 5, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 146, 147, 166, 167, 171, 215, 216, 237, 238, 241], "classifi": [23, 59, 60, 61, 67, 68, 69, 70, 87, 98, 115, 120, 125, 127], "cleaner": [1, 281, 297], "clear": [133, 292, 306, 307, 309], "clearli": 283, "clf_in_featur": 67, "clf_layer": 67, "clip": [189, 209, 213, 276, 314], "clockwis": 189, "close": [16, 19, 214, 237, 275], "closer": 207, "closur": [265, 266], "cloth": 7, "cnn": 129, "co": [129, 314, 330], "code": [17, 134, 136, 138, 279, 281, 283, 291], "coeffici": [21, 45, 188, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "col": 153, "collect": [4, 11, 129, 134, 135, 137, 138, 266], "color": [360, 366], "colorjitt": 366, "column": [13, 14, 16, 20, 21, 22, 130, 153, 308, 343, 345], "com": [7, 8], "combin": [1, 3, 62, 63, 64, 119, 129, 135, 138, 140, 141, 190, 191, 192, 196, 197, 208, 225, 238, 264, 273, 274, 326, 334, 339, 341, 366], "combined_dataset": [0, 1], "common": [153, 189, 266, 366], "commonli": [10, 71, 72, 73, 74, 75, 76, 77, 141, 146, 147, 148, 149, 151, 156, 163, 170, 172, 175, 189, 196, 205, 206, 209, 210, 213, 216, 222, 237, 240, 241, 255, 256, 257, 258, 259, 260, 280, 283, 310, 350, 356, 357, 358, 359, 361, 362, 363, 366], "compact": [30, 31, 33, 38], "compar": [29, 30, 96, 97, 127, 129, 291, 351], "compat": [4, 11, 115, 234, 250, 264, 280, 291, 309, 356, 366], "competit": [31, 37, 38], "complex": [2, 3, 10, 14, 28, 34, 39, 65, 87, 90, 93, 94, 107, 109, 130, 134, 135, 138, 144, 212, 258, 260, 264, 266, 366], "compon": [19, 59, 60, 61, 62, 63, 64, 65, 132, 135, 266, 292, 366], "compos": [5, 6, 7, 8, 125, 220, 221, 222, 255, 256, 257, 258, 259, 260, 264, 366], "compound": 46, "comprehens": 3, "compris": [96, 97], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 33, 34, 36, 37, 71, 73, 76, 77, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 119, 129, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 177, 178, 179, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 275, 279, 280, 281, 283, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 348, 352, 356, 366], "computation": [3, 19, 88, 209, 210], "compute_loss": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "concaten": [0, 149, 150, 151, 343, 344, 351, 354], "concept": [10, 19, 72, 129], "condit": [12, 13, 16], "confer": 129, "config": 120, "configur": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 73, 74, 75, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 126, 128, 137, 190, 191, 192], "conjunct": [153, 241], "connect": [23, 25, 40, 41, 42, 43, 44, 45, 46, 62, 63, 64, 65, 67, 68, 69, 70, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 120, 125, 127, 129, 165, 196, 197, 220, 221, 222, 235], "consecut": 120, "consid": [3, 16, 19, 40, 138, 201, 202, 205, 206, 264, 276, 279, 306, 307, 366], "consider": 19, "consist": [2, 4, 7, 23, 68, 69, 70, 87, 131, 177, 178, 179, 197, 252, 253, 254, 283, 289, 291, 346, 357, 364, 366], "consistent_tensor": 291, "consol": 130, "constant": [166, 167, 172, 173, 175, 176, 200, 214, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 275, 283, 346], "constant_pad": 346, "constrain": [31, 33, 36], "constraint": [1, 71, 73, 197], "construct": [10, 41, 42, 43, 44, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123, 124, 135, 264, 305, 348, 352], "constructor": [41, 42, 43, 44, 55, 56, 57, 58, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 96, 97, 111, 112, 113, 114, 119, 121, 122, 123, 124], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 63, 67, 87, 98, 99, 100, 101, 102, 103, 104, 105, 115, 120, 130, 132, 134, 135, 136, 137, 138, 147, 153, 163, 165, 166, 167, 171, 188, 237, 238, 241, 265, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 307, 309, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 345], "content": 189, "context": [279, 281], "contextmanag": 281, "contigu": [155, 225, 347], "continu": [211, 288], "contrast": [247, 248, 249, 366], "contribut": [155, 188, 224, 227, 228, 229, 230, 255, 258, 259, 260, 267, 273, 337], "control": [25, 98, 197, 207, 239, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 291, 356, 366], "conv": [63, 105, 190, 191, 192, 244, 245], "conv1": [68, 69, 70, 138, 220, 221, 222, 255, 256, 257, 258, 259, 260], "conv1d": [152, 162, 190, 193, 223, 232, 255, 258], "conv1dmodel": 220, "conv2": [68, 69, 70, 138, 220, 221, 222], "conv2d": [135, 138, 152, 162, 191, 194, 223, 232, 244, 256, 259, 264], "conv2dmodel": 221, "conv3d": [152, 162, 192, 195, 223, 232, 245, 257, 260], "conv3dmodel": 222, "conv_bia": [190, 191, 192], "conv_config": 120, "conv_lay": [67, 135], "convblock": 264, "convbnrelu1d": 198, "convbnrelu2d": 198, "convbnrelu3d": 198, "conveni": [4, 24, 128], "convent": 297, "converg": [19, 218, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 358], "convers": [238, 241, 360, 366], "convert": [5, 6, 7, 8, 120, 131, 133, 147, 216, 292, 345, 355, 356, 360, 366], "convnetwork": 135, "convnext": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 129], "convnext_bas": 129, "convnext_larg": 129, "convnext_smal": 129, "convnext_tini": 129, "convnext_v2": [31, 32, 33, 34, 35, 36, 37, 38], "convnext_v2_atto": 129, "convnext_v2_bas": 129, "convnext_v2_femto": 129, "convnext_v2_hug": 129, "convnext_v2_larg": 129, "convnext_v2_nano": 129, "convnext_v2_pico": 129, "convnext_v2_tini": 129, "convnext_xlarg": 129, "convolut": [23, 24, 25, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 63, 67, 68, 69, 70, 71, 73, 76, 77, 78, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 119, 120, 125, 127, 128, 129, 135, 149, 150, 151, 153, 190, 191, 192, 193, 194, 195, 196, 197, 220, 221, 222, 256, 257, 259, 260, 346], "convolv": [149, 150, 151, 220, 221, 222], "coordin": 345, "core": [0, 1, 2, 3, 132, 264, 265, 292, 366], "corinna": 8, "corner": [188, 262, 357, 359], "correct": [134, 238, 241, 270, 271, 272, 273, 274, 356], "correctli": [19, 132, 134, 135, 136, 137, 138, 238, 241, 291], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 74, 76, 77, 96, 97, 116, 117, 118, 134, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 163, 165, 188, 209, 212, 216, 233, 235, 243, 244, 245, 247, 248, 249, 256, 257, 267, 275, 277, 284, 295, 296, 298, 299, 302, 323, 324, 330, 332, 343, 346, 348, 352, 354], "cort": 8, "cosh": [314, 331, 336], "cosin": [316, 320, 321, 330], "cost": [71, 73, 98, 129, 193, 194, 195], "could": 132, "count": [129, 130, 341], "counterclockwis": [189, 362], "cover": [11, 149, 150, 151], "coverag": [177, 178, 179], "creat": [2, 3, 10, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 135, 138, 197, 213, 264, 280, 282, 291, 304, 308, 309, 310, 311, 312, 313, 345, 351, 355, 366], "creation": [55, 56, 57, 58, 135, 138, 366], "criterion": [237, 238, 239, 240, 241], "critic": [19, 266, 291], "crop": [357, 359, 366], "cross": [166, 167, 237, 238], "cross_entropi": [162, 169], "crossentropyloss": [232, 242], "cube": 314, "cumul": [141, 208], "current": [132, 267, 270, 276, 279], "custom": [4, 10, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 126, 127, 128, 131, 134, 135, 136, 137, 138, 189, 190, 191, 192, 207, 211, 264, 291, 308, 309], "custom_config": 120, "custom_lenet": 67, "customiz": 366, "custommodul": 131, "customnetwork": 134, "customparametermodel": [136, 137], "cvpr": 129, "d": [129, 151, 160, 179, 182, 186, 192, 245, 249, 250, 254, 257, 260, 280, 305, 362], "d_": [151, 179, 182, 186, 222, 254, 257, 260], "d_1": 250, "d_2": 250, "d_n": 250, "d_out": [151, 182, 186], "dampen": [267, 275, 277], "data": [4, 5, 6, 7, 8, 10, 17, 131, 133, 137, 148, 149, 151, 153, 159, 160, 165, 189, 190, 191, 192, 197, 212, 218, 220, 221, 222, 235, 249, 255, 257, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 291, 292, 293, 294, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 346, 347, 348, 349, 350, 352, 355, 356, 359, 360, 361, 362, 363, 366], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 28, 55, 56, 57, 58, 68, 69, 70, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 189, 269, 281, 355, 357, 366], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 301, "debug": [130, 138, 279, 289, 366], "decai": [225, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [99, 100, 101, 102, 103, 104, 282], "decoupl": [129, 268, 269, 271, 272, 273, 274], "decreas": [270, 271, 276], "deep": [1, 3, 4, 10, 63, 87, 88, 89, 90, 92, 93, 99, 100, 101, 102, 103, 104, 106, 107, 110, 129, 172, 208, 214, 264, 291, 309, 355, 356, 366], "deeper": [10, 60, 62, 65, 87, 94, 129, 214], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 170, 171, 172, 173, 175, 176, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 211, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 265, 266, 273, 279, 284, 286, 287, 288, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 334, 338, 339, 340, 341, 343, 345, 346, 348, 351, 354, 356, 360, 361, 363], "defin": [1, 3, 4, 10, 25, 40, 46, 59, 60, 61, 62, 63, 64, 65, 67, 73, 78, 87, 105, 116, 117, 118, 120, 134, 135, 136, 137, 138, 156, 208, 210, 213, 217, 237, 238, 239, 240, 241, 255, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 287, 288, 302, 307, 319, 338, 355, 366], "definit": [10, 12, 190, 191, 192, 366], "degre": [189, 362, 366], "delai": 267, "delta": [147, 168, 216, 239, 268], "delta_": [147, 216], "demonstr": [10, 11, 111, 112, 113, 114, 119, 129, 264, 283], "denomin": [172, 173, 175, 176, 190, 191, 192, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 275, 294], "denot": [17, 85, 86, 215, 220, 221, 222, 224, 227, 228, 229, 230, 338], "dens": [10, 40, 41, 42, 43, 44, 129, 156, 269], "dense1": 10, "dense2": 10, "densenet": [41, 42, 43, 44, 66, 129, 196], "densenet_121": 129, "densenet_169": 129, "densenet_201": 129, "densenet_264": 129, "densiti": [141, 208], "depend": [10, 17, 18, 73, 137, 166, 167, 168, 170, 171, 188, 220, 295, 305, 325, 327, 348, 352, 359, 360, 364], "depth": [25, 26, 27, 28, 29, 30, 39, 45, 46, 129, 135, 151, 156, 160, 179, 182, 186, 222, 226, 245, 249, 254, 257, 260], "depth_coef": 45, "depthseparableconv1d": 198, "depthseparableconv2d": 198, "depthseparableconv3d": 198, "depthwis": [25, 71, 125, 129, 149, 150, 151, 193, 194, 195], "depthwise_separ": [193, 194, 195], "der": 129, "deriv": [19, 20, 147, 177, 178, 179, 208, 216, 218, 220, 221, 222, 233, 235, 282], "descend": 22, "descent": [10, 267, 277], "describ": [13, 14], "descript": 366, "deseri": 131, "design": [3, 4, 10, 11, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 55, 56, 57, 58, 60, 61, 62, 68, 69, 70, 73, 88, 89, 90, 91, 92, 93, 94, 95, 106, 109, 125, 128, 129, 133, 135, 136, 137, 138, 140, 145, 214, 224, 264, 283, 366], "desir": [126, 131, 177, 178, 179, 225, 252, 253, 254, 262, 338, 340], "destin": 132, "det": [11, 15], "det_a": 13, "detail": [10, 130, 266, 291, 297], "detect": 129, "determin": [0, 10, 11, 12, 13, 67, 96, 97, 177, 178, 179, 201, 202, 205, 206, 220, 221, 222, 252, 253, 254, 256, 257, 259, 260, 275, 279, 284, 286, 287, 288, 290, 306, 307, 357, 359], "determinist": 189, "develop": [10, 264, 291, 366], "deviat": [201, 203, 205, 355, 358, 366], "devic": [72, 73], "diag": [19, 314], "diagon": [19, 20, 22, 305, 308, 337], "diagonaliz": 14, "dict": [24, 27, 28, 29, 30, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 116, 117, 118, 119, 126, 128, 132, 134, 136, 234, 265], "dictionari": [67, 132, 133, 134, 136, 138, 265], "differ": [0, 17, 59, 67, 73, 111, 112, 113, 114, 119, 135, 138, 147, 163, 188, 197, 216, 233, 240, 266, 280, 289, 291, 303, 313, 339, 350, 366], "differenti": [10, 12, 21, 208, 264, 284, 286, 287, 288, 290, 292, 304, 306, 307, 310, 312], "digit": [7, 8, 70, 129], "dilat": [149, 150, 151, 190, 191, 192, 193, 194, 195, 220, 221, 222], "dilation_height": 153, "dilation_width": 153, "dim": [25, 26, 238, 241], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 25, 27, 28, 29, 30, 39, 87, 98, 115, 120, 127, 129, 133, 147, 163, 165, 172, 173, 175, 176, 178, 179, 188, 196, 197, 216, 220, 221, 222, 225, 243, 244, 245, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 262, 280, 283, 286, 290, 292, 296, 306, 325, 326, 327, 334, 337, 338, 339, 341, 343, 346, 348, 350, 351, 352, 353, 354, 357, 359, 364], "dimension": [17, 19, 20, 22, 149, 150, 151, 180, 181, 182, 184, 185, 186, 197, 220, 221, 222, 228, 229, 230, 243, 244, 245, 247, 248, 249, 255, 256, 257, 258, 259, 260, 280, 296, 297, 301, 305, 323, 326, 334, 337, 339, 342, 347, 348, 350, 352], "diminish": 269, "direct": [14, 237, 238, 239, 240, 241, 267, 275, 276, 277], "directli": [55, 56, 57, 58, 129, 134, 135, 136, 137, 188, 262, 268, 269, 271, 272, 273, 274, 289, 291, 340, 366], "directori": [3, 4, 5, 6, 7, 8], "disabl": [156, 225, 226, 279, 281], "discontinu": 329, "discrep": [237, 238, 241], "discret": [284, 287, 291], "disk": 3, "displai": [24, 128, 130], "distribut": [141, 147, 155, 188, 201, 202, 203, 204, 205, 206, 208, 216, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 238, 241, 255, 256, 257, 284, 286, 287, 288, 290, 291, 326, 334, 337, 339, 351, 358, 360, 361, 362, 363], "div": 314, "divers": [32, 189, 361, 363, 366], "diversifi": 366, "divid": [1, 19, 129, 135, 138, 147, 149, 150, 151, 216, 237, 238, 239, 240, 241, 294, 358], "divis": [10, 19, 149, 150, 151, 224, 227, 228, 229, 230, 268, 269, 270, 271, 272, 273, 274, 275, 294], "do": [19, 21, 131, 134, 135, 136, 137, 154, 157, 158, 159, 264, 274, 279, 313, 337, 346], "document": [4, 10, 129, 266, 283, 291], "doe": [10, 17, 18, 19, 20, 22, 130, 131, 134, 135, 136, 137, 138, 206, 270, 271, 276, 279, 281, 284, 286, 287, 288, 289, 290, 304, 305, 306, 307, 308, 310, 311, 312, 313, 349], "doesn": 281, "doi": 129, "domain": 4, "don": 281, "dot": [14, 17, 134, 135, 136, 137, 138, 250, 258, 259, 260, 296, 301, 314, 341, 343, 351, 354], "down": [3, 264, 364], "download": [4, 5, 6, 7, 8], "downsampl": 78, "drawback": 140, "drawn": [286, 287, 288, 290, 291, 362], "drop": [25, 26, 155, 156, 224, 225, 226, 227, 228, 229, 230], "drop_block": [161, 162], "drop_path": [25, 26, 161, 162, 226], "drop_path_r": 46, "drop_prob": 226, "dropblock": [155, 231, 232], "dropout": [23, 45, 46, 55, 56, 57, 58, 61, 120, 127, 129, 141, 154, 158, 159, 160, 224, 225, 228, 229, 230], "dropout1d": [161, 162, 231, 232], "dropout1dmodel": 228, "dropout2d": [161, 162, 231, 232], "dropout3d": [161, 162, 231, 232], "dropout_prob": 61, "dropoutmodel": 227, "droppath": [231, 232], "dtype": [131, 133, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 356], "due": [17, 19, 40, 149, 150, 212, 362], "dummi": 130, "duplic": [134, 136], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 46, 59, 60, 61, 87, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 154, 155, 156, 157, 158, 159, 160, 172, 175, 189, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 292, 293, 325, 326, 327, 334, 339, 356, 359, 362, 366], "dy": [143, 211], "dynam": [0, 2, 3, 115, 119, 129, 132, 135, 136, 137, 138, 177, 178, 179, 197, 225, 250, 252, 253, 254, 269, 274, 279], "dynamicnetwork": 135, "e": [0, 13, 14, 16, 17, 20, 22, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 64, 65, 67, 68, 69, 70, 78, 120, 131, 147, 197, 215, 216, 217, 224, 238, 265, 268, 275, 276, 308, 321, 323, 324, 331, 336, 337, 341, 360], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 26, 40, 46, 67, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 120, 127, 129, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 163, 165, 172, 175, 177, 178, 179, 196, 197, 209, 212, 216, 220, 221, 222, 224, 227, 228, 229, 230, 233, 235, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 284, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 345, 346, 348, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366], "earli": 274, "eas": [4, 10], "easi": [2, 3, 4, 10, 99, 100, 101, 102, 103, 104, 133, 134, 136], "easier": [3, 134, 135, 138], "easili": [4, 133, 137, 366], "eccv": 129, "economi": 22, "edg": [73, 346], "edu": [5, 6], "educ": [10, 129], "effect": [129, 134, 135, 136, 137, 138, 147, 149, 150, 151, 153, 207, 208, 212, 215, 216, 218, 243, 244, 245, 247, 248, 249, 250, 262, 279, 280, 281, 343, 354], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 26, 29, 30, 31, 33, 36, 37, 38, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 72, 73, 75, 76, 77, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 119, 125, 129, 153, 193, 194, 195, 209, 210, 213, 238, 264, 281], "efficientnet": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 129], "efficientnet_b0": 129, "efficientnet_b1": 129, "efficientnet_b2": 129, "efficientnet_b3": 129, "efficientnet_b4": 129, "efficientnet_b5": 129, "efficientnet_b6": 129, "efficientnet_b7": 129, "efficientnet_v2": [55, 56, 57, 58], "efficientnet_v2_": 129, "efficientnet_v2_l": 129, "efficientnet_v2_m": 129, "efficientnet_v2_xl": 129, "efficientnetv2": 129, "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [165, 262, 283, 284, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 340, 345], "element": [0, 19, 20, 61, 129, 133, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 190, 191, 192, 193, 194, 195, 196, 209, 210, 212, 216, 217, 220, 221, 222, 224, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 250, 255, 256, 257, 258, 259, 260, 280, 284, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 345, 346, 348, 349, 350, 352], "elementwise_affin": 250, "elsewher": [258, 259, 260, 308], "elu": [142, 162, 219, 232], "elumodel": 207, "embed": [71, 72, 73, 75, 76, 77], "emploi": 46, "empti": [132, 138, 314], "empty_lik": 314, "enabl": [0, 1, 2, 3, 10, 17, 22, 45, 64, 78, 115, 116, 117, 118, 129, 132, 133, 134, 135, 136, 137, 156, 212, 220, 221, 222, 233, 235, 264, 266, 279, 281, 284, 286, 287, 288, 290, 292, 355], "encapsul": [264, 292], "encod": [238, 241], "encompass": 45, "encourag": [155, 225, 227, 228, 229, 230, 237, 238, 241, 270], "end": [18, 140, 143, 144, 145, 156, 207, 209, 210, 211, 212, 214, 226, 239, 240, 241, 255, 256, 257, 258, 259, 260, 274, 276, 298, 299, 301, 304, 309, 315, 319, 325, 327, 329, 341, 346, 366], "enforc": [132, 134, 136], "engin": 19, "enhanc": [26, 27, 61, 62, 64, 65, 69, 72, 85, 86, 96, 97, 111, 112, 113, 114, 119, 127, 128, 129, 134, 136, 197, 213, 366], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 46, 55, 56, 57, 58, 131, 132, 133, 134, 135, 136, 137, 138, 147, 177, 178, 179, 190, 191, 192, 211, 216, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 302, 309, 326, 334, 339, 346, 356, 357, 358, 359, 360, 364, 366], "enter": 281, "entir": [3, 156, 158, 159, 160, 226, 229, 230, 291], "entri": [46, 67, 76, 77, 350], "entropi": [166, 167, 237, 238], "environ": [10, 31, 33, 76, 77], "ep": [155, 166, 167, 172, 173, 175, 176, 190, 191, 192, 225, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 275], "epoch": [1, 3], "epsilon": [173, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 275], "equal": [17, 188, 255, 256, 257, 309, 357, 359], "equat": [14, 19, 21], "equival": [297, 337, 347], "error": [0, 3, 14, 16, 46, 132, 135, 136, 137, 138, 141, 168, 170, 208, 226, 237, 238, 239, 240, 264, 265, 281, 283, 309], "especi": [3, 134, 136, 137, 215, 280, 281, 283, 289, 355, 356, 360, 366], "essenti": [1, 3, 10, 11, 17, 19, 63, 150, 153, 264, 289, 291, 325, 355, 356, 360, 366], "estim": [240, 270, 271, 272, 273, 274, 275], "et": [60, 129], "eta": 276, "eta_": 276, "etc": [40, 46, 78, 237, 262, 356], "euclidean": 18, "european": 129, "eval": 226, "evalu": [132, 172, 175, 224, 225, 226, 227, 228, 229, 230, 243, 244, 245, 247, 248, 249, 366], "even": [268, 281, 304, 305, 308, 310, 311, 312, 313], "evenli": [177, 178, 179, 252, 253, 254, 304, 309], "everi": [1, 366], "everywher": 329, "exact": [132, 135, 338, 360, 362], "exactli": 138, "exampl": [4, 297], "excel": 62, "except": [0, 329, 341, 343, 354], "excit": [45, 73, 76, 77, 105, 108, 111, 112, 113, 114, 129, 196], "exclus": [287, 290, 304], "exdb": 8, "execut": [135, 281], "exist": [21, 134, 136, 138, 282, 341], "exit": 281, "exp": [140, 145, 146, 148, 207, 214, 314], "expand": [4, 35, 129, 153, 348, 352], "expans": [39, 76, 77], "expansion_factor": 73, "expect": [12, 135, 138, 156, 224, 226, 227, 228, 229, 230, 250, 264, 283], "expens": 3, "experi": [10, 289, 291, 366], "experiment": 291, "explan": [17, 19, 23, 25, 120, 127, 177, 178, 179, 252, 253, 254, 267], "explicit": 138, "explicitli": [129, 134, 136], "explod": [214, 243, 244, 245], "explor": [264, 291], "expon": [17, 302], "exponenti": [140, 145, 147, 207, 214, 216, 224, 270, 271, 272, 273, 274, 323], "express": 28, "extend": [4, 78, 98, 115, 129], "extens": [129, 266], "extern": [4, 10], "extra": [39, 58], "extract": [59, 63, 87, 98, 115, 125, 129, 153, 222, 255, 257, 282, 305, 325, 327, 357, 359], "extractor": [67, 68, 69, 70, 125], "extrem": [19, 88, 129], "ey": 314, "f": [1, 4, 5, 6, 7, 8, 10, 129, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 213, 216], "f_1": 196, "f_2": 196, "facilit": [59, 134, 138, 147, 216, 220, 221, 222, 264, 266, 358, 366], "factor": [45, 61, 140, 149, 150, 151, 153, 196, 205, 206, 262, 267, 274, 275, 276, 277, 283], "factori": 126, "failur": [134, 135, 136, 137, 264], "fals": [1, 5, 6, 7, 8, 18, 22, 45, 76, 77, 87, 130, 131, 132, 133, 154, 156, 157, 158, 159, 160, 172, 175, 188, 199, 201, 202, 203, 204, 205, 206, 220, 221, 222, 226, 233, 235, 262, 270, 271, 275, 279, 284, 286, 287, 288, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 334, 339, 340, 356], "famili": [39, 129, 282], "fan": [201, 202, 205, 206], "fan_in": [201, 202], "fan_out": [201, 202], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 274, "faster": [129, 269, 273, 281], "fc": [63, 87, 98, 105, 115, 135, 196, 221, 222, 255, 256, 257, 258, 259, 260], "fc1": [69, 70, 130, 134, 138, 208, 209, 210, 212, 213, 214, 215, 217, 218, 235], "fc2": [69, 70, 130, 134, 138, 208, 209, 210, 212, 214, 215, 217, 218, 235], "fc3": 70, "featur": [3, 23, 25, 28, 29, 39, 40, 59, 62, 63, 67, 68, 69, 70, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 115, 116, 117, 118, 120, 125, 127, 128, 129, 155, 163, 165, 172, 173, 190, 191, 192, 196, 197, 222, 225, 227, 228, 229, 230, 233, 235, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 264, 269], "feature_extractor": 67, "fed": [3, 366], "feed": [3, 292, 366], "feedforward": 130, "femto": [33, 129], "fergu": [127, 129], "fetch": 0, "few": 130, "fewer": [1, 79, 80, 81, 82, 83, 84, 129], "field": [5, 6, 8, 115, 119, 129, 197], "file": [3, 282], "fill": [199, 203, 204, 286, 287, 288, 290, 310, 311, 312, 313], "filter": [46, 127, 129, 149, 150, 151, 153, 190, 191, 192, 221, 222], "filter_height": 153, "filter_s": 153, "filter_width": 153, "final": [25, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 73, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 134, 135, 136, 137, 138, 197, 355, 366], "find": [21, 325, 327], "fine": [196, 366], "finish": 281, "first": [5, 6, 7, 8, 14, 67, 127, 130, 135, 136, 163, 196, 233, 270, 271, 272, 273, 274, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 345, 354, 355, 356, 366], "fit": 264, "fix": [135, 346], "flatten": [63, 67, 138, 153, 301, 344, 347, 348], "flexibl": [1, 3, 4, 10, 26, 59, 63, 64, 65, 67, 74, 78, 87, 111, 112, 113, 114, 119, 120, 125, 129, 134, 135, 136, 137, 138, 262, 264, 266, 283, 310, 311, 356, 366], "flip": [361, 363, 366], "float": [2, 5, 6, 7, 8, 25, 26, 45, 46, 61, 71, 74, 131, 133, 140, 143, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 172, 173, 175, 176, 189, 190, 191, 192, 199, 203, 204, 205, 206, 207, 211, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 290, 292, 304, 307, 309, 319, 340, 358, 360, 361, 362, 363], "float32": [131, 133, 292, 304, 305, 308, 309, 310, 312, 340, 356], "float64": [313, 340, 356], "flow": [62, 63, 105, 129, 138, 155, 206, 208, 215, 218, 220, 221, 222, 233, 235, 279], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 25, 41, 42, 43, 44, 45, 76, 77, 111, 112, 113, 114, 119, 120, 125, 127, 130, 140, 141, 143, 144, 145, 146, 147, 148, 163, 165, 188, 190, 191, 192, 193, 194, 195, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 325, 327, 345, 349, 357, 358, 359, 360, 361, 362, 363, 366], "forc": 155, "form": [20, 197, 301, 345, 348, 352, 366], "format": [2, 3, 5, 6, 7, 8, 130, 238, 241, 356], "formul": 141, "formula": [14, 22, 147, 177, 178, 179, 216, 217, 239, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 297, 339, 360], "forward": [10, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 120, 127, 130, 131, 132, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "found": 10, "foundat": [63, 105, 132, 264, 266, 292], "four": [41, 42, 43, 44, 79, 80, 81, 82, 83, 84, 346], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 165, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 268, 269, 270, 271, 272, 273, 274, 275, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358], "frame": 160, "framework": [4, 10, 129, 238, 241, 243, 244, 245, 247, 248, 249, 265, 266, 366], "frequent": [238, 241], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 153, 155, 163, 172, 175, 188, 190, 191, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 213, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 297, 298, 299, 303, 305, 325, 326, 327, 334, 339, 341, 343, 345, 348, 350, 351, 352, 354, 357, 358, 359, 360, 361, 362, 363, 366], "full": [22, 74, 76, 77], "full_matric": 22, "fulli": [4, 11, 23, 25, 40, 41, 42, 43, 44, 45, 46, 63, 67, 68, 69, 70, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 120, 125, 127, 129, 165, 196, 197, 235, 291], "func": 282, "function": [3, 4, 5, 6, 7, 8, 10, 11, 132, 134, 135, 136, 137, 138, 190, 191, 192, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 264, 266, 283, 291, 355, 366], "fundament": [10, 165, 235, 356], "further": [10, 27, 28, 29, 30, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 73, 74, 75, 76, 77, 85, 86, 291, 326, 334, 339], "fuse": 115, "fusion": [116, 117, 118], "futur": 234, "g": [0, 13, 14, 17, 20, 22, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 64, 65, 67, 68, 69, 70, 78, 120, 129, 196, 197, 224, 265, 268, 275, 341, 360], "g_": 269, "g_t": 275, "gain": [205, 206], "gamma": [173, 243, 244, 245, 246, 247, 248, 249, 250], "gamma_c": [173, 246], "gap": [87, 98, 115, 196], "gaussian": [141, 208], "gelu": [142, 162, 219, 232], "gelunetwork": 208, "gener": [19, 27, 32, 36, 130, 156, 189, 224, 225, 227, 228, 229, 230, 248, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 296, 304, 306, 307, 309, 345, 359, 360, 361, 363, 366], "geoffrei": [5, 6], "get": [5, 6, 7, 8], "github": 7, "give": [10, 267, 275], "given": [13, 14, 17, 19, 20, 22, 153, 237, 238, 241, 265, 279, 284, 311, 313, 355, 360, 361, 363, 366], "global": [0, 45, 87, 98, 105, 115, 173, 196, 246, 279, 281, 289, 291], "global_response_norm": [162, 174], "globalresponsenorm": [232, 251], "go": [60, 129], "goal": [237, 238, 241], "googlenet": [60, 129], "gpu": 129, "grad": [131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 153, 156, 163, 165, 188, 193, 194, 195, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 265, 266, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 361, 363, 364], "grad_output": 17, "gradient": [10, 11, 62, 63, 129, 131, 133, 225, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 284, 286, 287, 288, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 356], "grain": 196, "graph": [10, 206, 292, 304, 305, 308, 310, 311, 312, 313, 356], "grayscal": [7, 8, 67, 68, 69, 70, 360, 366], "greater": [35, 319], "green": 360, "grid": 345, "grn": 246, "groundbreak": 129, "group": [78, 85, 86, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 119, 129, 135, 149, 150, 151, 190, 191, 192, 197, 220, 221, 222, 265, 266], "group1": 135, "group2": 135, "groupedconvblock": 98, "growth_rat": [40, 41, 42, 43, 44], "guarante": 289, "h": [87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 129, 150, 151, 153, 155, 159, 160, 173, 178, 179, 181, 182, 185, 186, 188, 189, 191, 192, 196, 244, 245, 246, 248, 249, 253, 254, 257, 260, 357, 359], "h_": [150, 151, 178, 179, 181, 182, 185, 186, 188, 221, 222, 253, 254, 256, 257, 259, 260], "h_out": [150, 151, 181, 182, 185, 186], "h_stack": 343, "ha": [0, 14, 27, 130, 138, 149, 150, 151, 190, 191, 192, 213, 217, 237, 238, 243, 244, 245, 247, 248, 249, 250, 262, 265, 266, 297, 337, 341, 343, 351, 354, 360], "half": 332, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 132, 134, 135, 136, 137, 138, 238, 241, 264, 266, 281], "handwritten": [7, 8, 70], "hang": 129, "hard": [76, 77, 210], "hard_sigmoid": 209, "hardsigmoid": [210, 219, 232], "hardswish": [219, 232], "hardwar": 10, "hat": [270, 271, 272, 273, 274], "have": [0, 1, 13, 14, 16, 19, 20, 22, 133, 135, 137, 138, 150, 151, 155, 206, 264, 308, 310, 311, 312, 313, 325, 327, 341, 343, 345, 350, 351, 354, 358, 364], "he": 129, "head": [25, 73, 125], "height": [125, 150, 151, 153, 159, 160, 173, 178, 179, 181, 182, 185, 186, 188, 189, 197, 221, 222, 244, 245, 246, 248, 249, 253, 254, 256, 257, 259, 260, 262, 357, 359, 364], "help": [10, 61, 143, 145, 160, 207, 211, 213, 214, 218, 243, 244, 245, 255, 256, 258, 259, 267, 270, 271, 273, 279, 280, 281, 283], "henc": 349, "here": [3, 12, 132, 163, 264, 266, 280, 281, 283, 291, 355, 356, 366], "hidden": [23, 127, 135], "hidden_s": 135, "hierarch": [25, 26, 135, 138, 264], "hierarchi": 221, "hierarchicalnetwork": 135, "high": [10, 28, 34, 35, 55, 56, 57, 58, 73, 95, 110, 119, 287, 290], "higher": [35, 46, 71, 98, 238, 241, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 296, 297, 301, 323], "highest": [39, 287], "highli": [31, 39, 75, 129], "highlight": [196, 258, 259, 260], "hint": 283, "hinton": [5, 6], "histor": 269, "histori": [284, 286, 287, 288, 290, 304, 305, 306, 307, 308, 310, 311, 312, 313], "hold": [134, 135, 136, 137], "horizont": [343, 351, 361, 366], "hot": [238, 241], "how": [2, 3, 10, 111, 112, 113, 114, 119, 135, 138, 264, 283, 366], "howard": 129, "howev": [131, 206], "hstack": 344, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [129, 196], "huang": 129, "huber": [168, 239], "huber_loss": [162, 169], "huberloss": [232, 242], "huberregressionmodel": 239, "hue": 366, "huge": [34, 129], "hyperbol": [148, 218, 321, 331, 336], "hyperparamet": [79, 80, 81, 82, 83, 84, 87, 98, 126, 265, 267], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "iccv": 129, "idea": 129, "ideal": [10, 28, 32, 36, 71, 138], "ident": [16, 17, 129, 189, 226, 232, 236, 289, 291, 308, 349], "identifi": 136, "idx": [2, 3], "ieee": [129, 196], "ii": 337, "ij": [147, 188, 216, 295, 296, 297, 301, 345], "ik": [295, 296, 297], "ill": [13, 19], "ilsvrc": 129, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 128, 129, 150, 175, 189, 191, 196, 221, 248, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 71, 72, 73, 74, 75, 76, 77, 96, 97, 111, 112, 113, 114, 119, 129], "imbal": [238, 241], "impact": [129, 273], "implement": [2, 3, 10, 19, 23, 25, 40, 45, 59, 60, 61, 62, 64, 65, 67, 71, 72, 73, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 125, 127, 129, 132, 153, 156, 193, 194, 195, 197, 226, 246, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 343, 354, 360], "impli": [220, 221], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "improp": [135, 138, 291], "improv": [25, 46, 60, 61, 62, 63, 65, 78, 87, 98, 111, 112, 113, 114, 115, 127, 129, 155, 156, 172, 189, 196, 208, 214, 218, 267, 268, 269, 270, 271, 272, 273, 274, 275, 283, 359, 362, 366], "imread": 3, "in1_featur": [163, 233], "in2_featur": [163, 233], "in_channel": [87, 135, 138, 190, 191, 192, 193, 194, 195, 196, 197, 220, 221, 222, 244, 245, 255, 256, 257, 258, 259, 260, 264], "in_featur": [134, 135, 138, 165, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 247, 250, 255, 256, 257, 258, 259, 260], "incept": [60, 61, 62, 63, 64, 65, 66, 129], "inception_resnet_v1": 129, "inception_resnet_v2": 129, "inception_v1": 129, "inception_v3": 129, "inception_v4": 129, "inceptionresnet": [64, 65], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 25, 59, 60, 61, 64, 67, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 120, 126, 127, 130, 132, 133, 135, 137, 138, 188, 190, 191, 192, 193, 194, 195, 262, 264, 265, 266, 273, 283, 291, 297, 346], "inclus": [133, 136, 287, 290, 309], "incom": [165, 235], "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 75, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 129, 208], "increas": [28, 29, 71, 98, 99, 100, 101, 102, 103, 104, 115, 149, 150, 151, 153, 189, 269, 276, 280, 343, 354, 360, 361, 363, 366], "independ": [135, 149, 150, 151, 224, 227, 228, 229, 230, 250, 297, 307, 358, 360, 362, 364], "index": [0, 2, 5, 6, 7, 8, 173, 246, 280, 304, 305, 308, 345, 349], "indexerror": 0, "indic": [0, 1, 85, 86, 120, 130, 133, 135, 137, 138, 167, 171, 238, 241, 255, 279, 292, 357, 359], "individu": [3, 135, 138, 239, 250, 266, 269, 276], "induc": [145, 214], "inf": 335, "infer": [111, 112, 113, 114, 119, 135, 138, 281], "infin": [20, 22, 272], "inform": [10, 129, 130, 131, 196, 266, 268, 281], "infti": [18, 274], "inherit": [1, 267, 275, 277], "init": 200, "initi": [1, 25, 40, 63, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 126, 131, 133, 134, 135, 136, 137, 138, 197, 199, 201, 202, 203, 204, 205, 206, 220, 221, 222, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 286, 289, 290, 291, 304, 308, 309, 310, 311, 312, 313, 340], "initial_accumulator_valu": 269, "inner": [10, 295, 314], "innov": 73, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 111, 112, 113, 114, 115, 119, 125, 127, 129, 130, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 291, 292, 293, 295, 296, 297, 301, 305, 307, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "input1": 233, "input2": 233, "input_": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 127, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 246, 252, 253, 254], "input_1": 163, "input_2": 163, "input_data": [207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260], "input_s": [135, 137, 216, 238, 241], "input_shap": 130, "input_tensor": [10, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 131, 134, 135, 136, 137, 138, 147, 155, 156, 193, 194, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 264, 357, 358, 359, 360, 361, 362, 363, 364], "insid": [3, 279, 281], "insight": [10, 129], "inspect": [132, 133, 138, 265], "inspir": [25, 129], "instabl": [19, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "instal": 10, "instanc": [0, 1, 10, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 126, 128, 130, 132, 133, 134, 136, 137, 138, 175, 213, 247, 248, 249, 250, 265, 282, 340, 348, 352, 366], "instance_norm": [162, 174, 247, 248, 249], "instancenorm1d": [232, 251], "instancenorm1dmodel": 247, "instancenorm2d": [232, 251], "instancenorm3d": [232, 251], "instanti": [2, 45, 55, 56, 57, 58, 111, 112, 113, 114, 119, 282], "instead": [10, 130, 134, 135, 136, 137, 138, 201, 202, 205, 206, 270, 271, 272, 281, 283, 306, 307], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 147, 149, 150, 151, 153, 155, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 216, 220, 221, 222, 225, 233, 235, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 271, 272, 273, 274, 276, 282, 284, 286, 287, 288, 289, 290, 292, 304, 305, 306, 308, 309, 310, 312, 319, 325, 326, 327, 334, 338, 339, 340, 341, 346, 348, 349, 350, 351, 352, 353, 357, 359, 364], "integ": [1, 3, 17, 105, 120, 149, 150, 151, 178, 179, 220, 221, 222, 250, 253, 254, 256, 257, 258, 259, 260, 283, 287, 288, 290, 291, 306, 310, 312, 326, 334, 338, 339, 346, 348, 349, 352], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 78, 129, 133, 135, 137, 138, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 233, 235, 255, 256, 257, 258, 259, 260], "intellig": [129, 196], "intend": [131, 136, 137], "intens": [19, 40, 88, 358, 360], "intent": 283, "interact": [163, 233, 264, 291], "interdepend": 129, "interfac": [2, 132, 135, 266], "interfer": [279, 281], "intermedi": [19, 85, 86, 196], "intern": [88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 129, 134, 135, 136, 137, 138, 238, 241, 264, 357, 358, 359, 360, 361, 362, 363, 364], "interpol": [162, 187, 262, 309, 364], "interpret": [129, 147, 216, 283, 341], "interv": [286, 290, 304], "introduc": [26, 46, 60, 61, 71, 72, 73, 98, 129, 144, 196, 208, 212, 213, 215, 218, 224, 227, 228, 229, 230, 359, 362, 366], "introspect": 138, "intuit": [10, 134, 136, 264, 366], "inv": 15, "inv_a": 16, "invari": [256, 259], "invers": [10, 13, 16, 17, 19, 269, 316, 317, 318], "invert": [13, 16, 17, 21, 72, 73, 75, 129], "invok": 282, "involv": [12, 13, 14, 16, 19, 20, 22, 115, 140, 141, 143, 144, 145, 146, 148, 163, 165, 188, 220, 221, 222, 233, 235, 283, 284, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 323, 324, 325, 327, 330, 332, 345, 346, 348, 352], "is_leaf": 292, "issu": [3, 214, 243, 244, 245, 270, 271], "item": [7, 240], "iter": [0, 1, 2, 3, 131, 132, 135, 137, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304], "ith": [147, 216], "its": [4, 17, 19, 23, 26, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109, 110, 116, 117, 118, 127, 129, 130, 131, 134, 135, 136, 137, 149, 150, 151, 153, 189, 197, 206, 208, 212, 217, 225, 258, 259, 260, 264, 265, 268, 276, 279, 280, 281, 282, 304, 306, 307, 312, 325, 327, 340, 349, 358, 361, 363, 366], "itself": [12, 17, 134, 135, 136, 137], "j": [8, 147, 196, 216, 243, 244, 245, 247, 248, 249, 255, 256, 258, 259, 345, 351, 357, 359], "jie": 129, "jk": 296, "join": [3, 341], "json": 282, "k": [17, 129, 149, 220, 238, 244, 245, 248, 249, 255, 258, 259, 295, 296, 305, 308, 341], "k_d": [151, 222, 257, 260], "k_h": [150, 151, 221, 222, 256, 257, 260], "k_w": [150, 151, 221, 222, 256, 257, 260], "kaim": [129, 201, 202, 205, 206], "kaiming_norm": 200, "kaiming_uniform": 200, "kalenichenko": 129, "karen": 129, "kashif": 7, "keep": [132, 156, 212, 268, 281, 349], "keep_grad": [133, 284, 286, 287, 288, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 356], "keep_var": 132, "keepdim": [18, 325, 326, 327, 334, 339], "kei": [129, 132, 134, 136, 138, 265], "kept": [326, 334, 339], "kernel": [67, 68, 69, 70, 76, 77, 115, 116, 117, 118, 119, 127, 129, 149, 150, 151, 153, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 252, 253, 254, 256, 257, 260], "kernel_s": [73, 76, 77, 115, 116, 117, 118, 135, 138, 180, 181, 182, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 244, 245, 255, 256, 257, 258, 259, 260], "keyerror": 132, "keyword": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 128, 132, 234], "kj": [295, 297], "known": 129, "kriz": [5, 6], "krizhevski": [5, 6, 129], "kroneck": [147, 216], "kwarg": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 132, 234, 282], "l": [12, 19, 55, 129, 149, 158, 177, 180, 184, 190, 196, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252], "l2": [267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "l_": [149, 177, 180, 184, 220, 252, 255, 258], "l_out": [149, 180, 184], "label": [4, 5, 6, 7, 8, 61, 237, 238, 241], "lambd": 267, "lambda": [14, 145, 214, 267, 271], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 220, 233, 255, 258], "larg": [0, 3, 19, 28, 34, 35, 39, 40, 55, 58, 73, 76, 88, 89, 90, 93, 106, 107, 129, 193, 194, 195, 213, 239, 264, 267, 270, 271, 272, 275, 276, 277, 281], "larger": [27, 45, 46, 87, 115, 134, 136, 149, 150, 151, 153, 155, 225, 267, 298, 346, 357, 359, 364], "largest": [39, 325], "last": [1, 147, 176, 216, 296, 297, 341, 361, 363], "last_channel": 73, "latest": 4, "layer": [10, 23, 25, 26, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 129, 130, 132, 134, 135, 138, 147, 156, 165, 172, 175, 176, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 216, 220, 221, 222, 226, 233, 234, 235, 241, 250, 255, 256, 257, 258, 259, 260, 264, 291, 346, 356], "layer1": 282, "layer2": 282, "layer_group": 135, "layer_norm": [162, 174, 250], "layer_scale_init": 25, "layer_sequ": [135, 138], "layernorm": [232, 251], "layernormmodel": 250, "le": 129, "lead": [135, 138, 208, 247, 248, 249, 250, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 291], "leaf": 292, "leaki": [143, 211], "leaky_relu": [142, 162, 211], "leakyrelu": [219, 232], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 46, 98, 99, 100, 101, 102, 103, 104, 127, 128, 129, 134, 135, 136, 137, 144, 147, 196, 207, 211, 212, 216, 220, 221, 222, 227, 228, 229, 230, 233, 235, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 289, 309, 355, 356, 366], "learnabl": [131, 132, 133, 172, 173, 175, 176, 190, 191, 192, 220, 221, 222, 233, 235, 243, 244, 245, 246, 247, 248, 249, 250, 264], "least": [19, 20, 22, 262, 337], "lecun": [8, 129], "left": [17, 18, 19, 22, 141, 147, 208, 216, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 258, 259, 260, 357, 359], "leftarrow": 273, "len": [0, 1, 2, 3, 345], "lenet": [66, 68, 69, 70, 129], "lenet_1": 129, "lenet_4": 129, "lenet_5": 129, "length": [135, 149, 158, 177, 180, 184, 220, 234, 243, 247, 252, 255, 258, 346, 358], "leq": [209, 210, 239, 274, 302, 319], "lerp": 188, "less": [0, 140, 143, 168, 207, 211, 238, 239, 241, 309, 319], "let": 14, "level": [10, 63], "leverag": [21, 62, 65, 99, 100, 101, 102, 103, 104, 125, 129, 197, 264], "li": 129, "librari": [3, 10, 11, 132, 264, 265, 266, 282, 283, 291, 292, 366], "lie": 284, "lightweight": [10, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 72, 76, 77, 79, 80, 81, 82, 83, 84, 91, 108, 197, 210, 213], "like": [10, 46, 63, 99, 100, 101, 102, 103, 104, 116, 117, 118, 129, 131, 132, 135, 138, 149, 155, 205, 206, 214, 224, 225, 243, 244, 245, 247, 248, 249, 279, 280, 283, 340, 356, 366], "likelihood": [171, 238, 241], "limit": [30, 37, 76, 77, 130, 213, 268, 319], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 72, 75, 105, 129, 130, 134, 135, 136, 138, 140, 141, 143, 144, 145, 156, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 226, 227, 228, 233, 234, 237, 238, 239, 240, 241, 243, 247, 250, 255, 256, 257, 258, 259, 260, 282, 308], "linearli": 239, "linspac": 314, "linspace_tensor": 309, "list": [0, 1, 25, 26, 46, 67, 73, 78, 87, 98, 105, 115, 120, 130, 131, 133, 134, 135, 136, 137, 176, 197, 234, 250, 265, 283, 284, 286, 287, 288, 290, 292, 305, 306, 307, 310, 311, 312, 313, 338, 349, 350, 353, 355], "listdir": 3, "liter": [87, 166, 167, 168, 170, 171, 188, 190, 191, 192, 193, 194, 195, 197, 201, 202, 220, 221, 222, 237, 238, 239, 240, 241, 262, 345], "liu": 129, "ln": 302, "load": [3, 4, 5, 6, 7, 8, 131, 132, 133, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282], "load_state_dict": [132, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "loader": [1, 2, 3], "local": [129, 153, 220], "locat": [129, 188], "log": [171, 237, 238, 241, 314], "log_softmax": 241, "logarithm": [302, 323, 324], "logic": [3, 252, 253, 254, 264, 265], "logit": [23, 25, 127, 147, 216, 238], "logsoftmax": [238, 241], "long": [273, 338], "loop": [1, 135, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "loss": [10, 19, 134, 135, 136, 137, 138, 147, 166, 167, 168, 170, 171, 207, 208, 211, 212, 214, 215, 216, 218, 224, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "low": [10, 63, 72, 76, 77, 287, 290], "lower": [12, 71, 204, 267, 275, 276, 277, 290], "lowest": 287, "lr": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 314, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "m": [56, 120, 129, 134, 135, 138, 256, 257, 259, 260, 270, 271, 272, 273, 274, 308], "m_": [270, 271, 272, 273, 274], "m_t": [273, 274], "maaten": 129, "machin": [3, 7, 8, 10, 19, 129, 196, 270, 280, 289], "magnitud": [156, 275, 276, 366], "mai": [3, 10, 14, 16, 19, 135, 137, 189, 226, 239, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281, 291, 360, 366], "main": [10, 20, 63, 135, 305, 308], "maintain": [19, 26, 31, 55, 56, 57, 58, 71, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 119, 129, 131, 132, 134, 135, 136, 138, 145, 156, 201, 202, 205, 206, 207, 208, 214, 224, 226, 227, 228, 229, 230, 243, 244, 245, 247, 248, 249, 270, 275, 357, 360, 364], "make": [1, 3, 10, 28, 29, 32, 33, 59, 63, 67, 72, 75, 76, 77, 87, 129, 135, 138, 215, 238, 239, 250, 256, 259, 264, 269, 270, 271, 272, 280, 282, 291, 292, 297, 345, 355, 366], "manag": [10, 132, 134, 135, 136, 137, 138, 264, 266, 279, 281, 282, 291], "manhattan": 18, "mani": 130, "manipul": [10, 134, 136, 366], "manner": [135, 138], "manual": [166, 167, 171, 237, 238, 241, 281], "map": [85, 86, 87, 98, 108, 115, 129, 132, 146, 148, 155, 173, 196, 215, 218, 226, 246], "mask": [129, 131, 224, 227, 228, 229, 230], "match": [21, 132, 135, 138, 166, 168, 170, 176, 190, 191, 192, 225, 265, 323, 348, 349, 352, 353, 358, 366], "math": [320, 330, 335], "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 125, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 163, 165, 188, 193, 194, 195, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 295, 296, 297, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364], "mathcal": [201, 203, 205, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250], "mathemat": [16, 190, 191, 192, 359, 361, 362, 363], "mathrm": 19, "matmul": 314, "matric": [11, 13, 14, 16, 19, 21, 22, 295, 296, 297, 308, 345], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 153, 163, 234, 235, 264, 295, 345], "matrix_pow": 15, "matthew": 129, "max": [18, 105, 120, 144, 184, 185, 186, 209, 210, 212, 213, 258, 259, 260, 272, 298, 314, 319], "max_pool": [258, 259, 260], "max_pool1d": [162, 183], "max_pool2d": [162, 183], "max_pool3d": [162, 183], "max_valu": 319, "maxim": [3, 34], "maximum": [18, 212, 213, 258, 259, 260, 270, 272, 314, 319, 325, 362], "maxpool": [23, 127], "maxpool1d": [232, 261], "maxpool1dmodel": 258, "maxpool2d": [135, 138, 221, 232, 261], "maxpool2dmodel": 259, "maxpool3d": [222, 232, 261], "maxpool3dmodel": 260, "mean": [5, 6, 7, 8, 20, 85, 86, 130, 131, 145, 149, 150, 151, 154, 166, 167, 168, 170, 171, 172, 175, 190, 191, 192, 203, 207, 208, 209, 211, 212, 214, 215, 218, 222, 224, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 270, 271, 272, 273, 274, 275, 279, 288, 314, 319, 323, 324, 325, 327, 330, 332, 334, 337, 338, 339, 355, 358, 366], "meaning": [138, 283], "measur": [237, 238, 240, 241], "mechan": [10, 85, 86, 105, 115, 119, 137, 163], "medium": [33, 37, 56], "membership": 237, "memori": [2, 3, 40, 281, 306, 307], "meshgrid": 344, "method": [3, 10, 11, 16, 46, 105, 125, 126, 134, 135, 136, 137, 138, 166, 167, 168, 170, 171, 201, 202, 205, 206, 237, 238, 239, 240, 241, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 291], "mid_channel": [76, 77], "middl": 280, "might": 264, "min": [209, 210, 213, 299, 314, 319], "min_valu": 319, "mind": [0, 3, 10, 135, 138, 281], "mingx": 129, "mini": 1, "minim": [4, 10, 73, 129, 138, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 266], "minimalist": 10, "minimum": [314, 319, 327], "minu": 215, "mirror": [311, 313], "mismatch": [46, 132, 264, 265], "miss": [132, 264], "mitig": [143, 207, 211, 214, 243, 244, 245], "mlp": 197, "mnist": [4, 7, 9, 68, 69], "mnist_train": [4, 8], "mobil": [71, 72, 73, 75, 76, 77, 129], "mobilenet": [66, 72, 73, 75, 76, 77, 129, 213], "mobilenet_v2": 129, "mobilenet_v3": [76, 77], "mobilenet_v3_larg": 129, "mobilenet_v3_smal": 129, "mobilenetv2": [72, 129], "mobilenetv3": [73, 76, 77, 129], "mode": [10, 160, 172, 175, 188, 201, 202, 224, 226, 227, 228, 229, 230, 262, 346], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 147, 155, 189, 190, 191, 192, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 291, 355, 356, 366], "model_b0": 45, "model_b7": 45, "moder": [29, 33, 109], "modern": [25, 26, 129], "modif": [126, 138, 281], "modifi": [24, 87, 125, 128, 134, 135, 136, 137, 199, 201, 202, 203, 204, 205, 206, 224, 279, 281, 289, 343, 354], "modul": [5, 6, 7, 8, 10, 23, 24, 25, 26, 45, 46, 59, 62, 63, 64, 65, 67, 71, 72, 73, 87, 98, 105, 115, 120, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 156, 190, 191, 192, 193, 194, 195, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 291, 356, 366], "modular": [3, 10, 129, 132, 135, 138, 264, 366], "moduledict": [135, 136, 138, 139], "modulelist": [137, 138, 139], "moment": [270, 271, 272, 273, 274], "momentum": [172, 175, 190, 191, 192, 243, 244, 245, 247, 248, 249, 267, 273, 275, 277], "momentum_decai": 273, "monoton": 217, "moor": 19, "more": [3, 4, 7, 10, 14, 28, 87, 94, 134, 135, 138, 155, 193, 194, 195, 207, 227, 228, 229, 230, 264, 265, 266, 267, 268, 271, 272, 275, 276, 277, 288, 297, 337, 351, 366], "most": [11, 32, 129, 259, 356, 357, 366], "move": [267, 275], "mse": [168, 170, 239, 240], "mse_loss": [162, 169], "mseloss": [232, 242], "mu": [203, 243, 244, 245, 247, 248, 249, 250, 339], "mu_c": 358, "mu_i": [247, 248, 249], "much": 366, "mul": 314, "multi": [3, 4, 64, 115, 116, 117, 118, 129, 147, 167, 171, 197, 216, 238, 241, 326, 334, 339], "multidimension": [286, 290, 306], "multipl": [1, 3, 10, 11, 17, 21, 23, 87, 105, 119, 136, 137, 138, 153, 188, 189, 196, 197, 224, 227, 228, 229, 230, 238, 241, 264, 280, 284, 286, 287, 288, 290, 295, 300, 306, 307, 355, 360, 366], "multipli": [17, 74, 137, 165, 235, 262, 276, 300, 301], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 130, 132, 134, 135, 136, 137, 138, 156, 176, 224, 226, 227, 228, 229, 230, 241, 262, 265, 281, 284, 337, 341, 343, 346, 348, 349, 351, 352, 354, 357, 358, 359, 360, 361, 363], "my_simple_model": 282, "mymodel": [132, 133, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "myoptim": [265, 266], "n": [17, 18, 87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 129, 134, 135, 138, 149, 150, 151, 153, 155, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 196, 201, 203, 205, 220, 221, 222, 229, 230, 233, 235, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 308, 326, 337, 339], "n1": 18, "nabla_": [268, 269, 270, 271, 272, 273, 274, 276], "nabla_t": 274, "nadam": 278, "nair": [5, 6], "name": [129, 130, 132, 134, 136, 138, 282, 283], "nan": [20, 22], "nano": [36, 129], "natur": [19, 129, 220, 233, 255, 258, 302, 323, 324], "ndarrai": [131, 133, 283, 284, 292, 305, 307, 311, 313, 340], "ndim": [20, 22, 133, 292], "ne": 17, "nearest": [188, 262], "necessari": [4, 5, 6, 7, 8, 19, 281, 343, 354], "need": [2, 4, 135, 136, 137, 147, 233, 264, 281, 306, 307, 355, 356, 366], "neg": [17, 19, 22, 140, 171, 189, 207, 211, 212, 214, 238, 241, 276, 341], "negative_slop": [143, 211], "neglect": 137, "neighbor": 188, "neq": 18, "nest": [130, 135, 138, 264], "nestedmodel": 130, "nesterov": 273, "net": [127, 129], "network": [3, 4, 10, 23, 24, 25, 26, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 70, 71, 74, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 107, 108, 109, 110, 115, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 163, 165, 172, 189, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 275, 277, 290, 291, 292, 304, 310, 312, 325, 327, 346, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "neural": [3, 4, 10, 23, 24, 25, 45, 47, 48, 49, 50, 51, 52, 53, 54, 63, 70, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 165, 172, 189, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 275, 277, 290, 291, 292, 304, 310, 312, 325, 327, 346, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "neuralnetwork": [209, 210, 212, 217], "neuron": 211, "never": 360, "new": [132, 133, 140, 141, 143, 144, 145, 146, 148, 163, 165, 188, 197, 201, 202, 203, 204, 205, 206, 265, 282, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 343, 346, 348, 349, 351, 352, 353, 354], "next": [138, 355], "nll": 171, "nll_loss": [162, 169], "nllloss": [232, 242], "nn": [5, 6, 7, 8, 10, 23, 25, 26, 40, 45, 46, 59, 63, 67, 71, 72, 73, 87, 98, 105, 111, 112, 113, 114, 115, 119, 120, 127, 130, 139, 142, 152, 161, 164, 169, 174, 183, 187, 198, 200, 219, 223, 231, 232, 236, 242, 251, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 356, 366], "no_grad": 279, "node": 292, "nois": [22, 291], "non": [14, 17, 19, 22, 137, 141, 143, 144, 201, 202, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 224, 227, 228, 229, 230, 270, 271, 281, 302, 319], "none": [0, 1, 2, 5, 6, 7, 8, 18, 45, 46, 59, 63, 67, 71, 72, 73, 78, 87, 125, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 163, 165, 166, 167, 168, 170, 171, 172, 175, 176, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364], "norm": [11, 15, 272], "normal": [5, 6, 7, 8, 25, 105, 141, 145, 147, 148, 155, 172, 173, 175, 176, 190, 191, 192, 200, 201, 205, 208, 214, 216, 224, 243, 244, 245, 246, 247, 248, 249, 250, 275, 288, 291, 355, 365, 366], "normalized_shap": [176, 250], "note": [149, 224], "noth": [154, 157, 158, 159], "notimplementederror": [2, 132, 265], "notin": 319, "nov": 129, "novel": [7, 129], "np": [87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 131, 133, 196, 238, 241, 283, 292, 297, 304, 305, 308, 310, 312, 313, 324, 340, 356], "npy": [5, 6, 7, 8], "num": 309, "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 216, 238, 241], "num_featur": [138, 190, 191, 192, 243, 244, 245, 247, 248, 249], "num_init_featur": [40, 41, 42, 43, 44], "num_paramet": 137, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 137, 138, 149, 150, 151, 153, 158, 159, 160, 163, 165, 167, 171, 172, 173, 175, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 215, 220, 221, 222, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 259, 260, 267, 286, 289, 290, 292, 302, 304, 306, 308, 309, 325, 326, 327, 338, 339, 341, 343, 346, 348, 349, 350, 352, 354, 358, 360, 361, 363, 366], "numer": [16, 19, 155, 166, 167, 172, 173, 175, 176, 190, 191, 192, 213, 225, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 272, 273, 274, 275, 283, 294, 304, 310, 312], "numpi": [10, 131, 133, 238, 241, 283, 292, 297, 305, 308, 309, 324, 337, 340, 346, 348, 352, 356, 366], "o": [3, 257, 260, 310, 311], "object": [1, 3, 11, 115, 129, 132, 136, 137, 240, 264, 281, 293, 294, 298, 299, 300, 303, 340], "observ": 270, "obtain": 1, "occur": [189, 281, 282, 341], "occurr": 17, "odot": [224, 227, 228, 229, 230], "off": [29, 279], "offer": [4, 10, 26, 27, 29, 39, 264, 266, 291, 366], "offset": 308, "often": [17, 96, 97, 149, 150, 151, 153, 225, 238, 241, 304, 312, 356, 360, 364, 366], "older": 273, "onc": 281, "one": [0, 111, 112, 113, 114, 119, 137, 138, 147, 149, 165, 180, 184, 190, 191, 192, 214, 215, 216, 220, 228, 238, 241, 243, 247, 255, 258, 262, 265, 280, 283, 288, 303, 311, 325, 327, 342, 347, 351, 356], "ones": [163, 165, 220, 221, 222, 235, 243, 244, 245, 247, 248, 249, 250, 264, 308, 311, 314], "ones_lik": 314, "onli": [10, 130, 188, 209, 212, 224, 225, 227, 228, 229, 230, 237, 238, 241, 243, 244, 245, 247, 248, 249, 250, 258, 259, 260, 276, 279, 304, 319, 325, 327, 337, 346, 347, 349, 350], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 85, 86, 105, 106, 107, 108, 109, 110, 131, 132, 135, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 160, 163, 165, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 312, 323, 324, 325, 326, 327, 330, 332, 334, 337, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 364], "operatornam": [17, 19], "opposit": 267, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 30, 31, 34, 37, 39, 40, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 73, 76, 77, 129, 131, 133, 136, 137, 153, 220, 221, 222, 264, 281], "optimizer_st": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 211, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 265, 267, 275, 277, 284, 286, 287, 288, 290, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 334, 338, 339, 340, 341, 345, 348, 350, 351, 356, 360, 361, 363], "ord": 18, "order": [1, 3, 18, 22, 134, 135, 136, 137, 138, 338, 355], "ordered_dict": 138, "ordereddict": [132, 134, 135, 138], "organ": [134, 135, 136, 138, 282], "orient": 366, "origin": [26, 61, 70, 154, 189, 196, 218, 346, 347, 348, 349, 352, 353, 364], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [267, 275, 277], "other": [2, 3, 10, 16, 61, 65, 67, 70, 131, 132, 135, 138, 201, 202, 224, 225, 264, 265, 279, 281, 291, 292, 304, 306, 310, 312, 337, 345, 366], "otherwis": [88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 140, 143, 144, 145, 147, 156, 207, 209, 210, 211, 212, 214, 216, 226, 227, 228, 229, 230, 239, 255, 256, 257, 258, 259, 260, 265, 276, 282, 298, 299, 325, 327], "otim": [19, 163, 233], "out": [0, 3, 4, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 201, 202, 205, 206, 220, 221, 222, 224, 226, 227, 228, 229, 230, 252, 253, 254, 255, 256, 257, 258, 259, 260, 267, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354], "out_channel": [67, 73, 76, 77, 135, 138, 190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 244, 245, 255, 256, 257, 258, 259, 260, 264], "out_featur": [134, 135, 138, 163, 165, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 247, 250, 255, 256, 257, 258, 259, 260], "outcom": [360, 361, 363], "outer": 314, "outlier": [168, 239], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 163, 165, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 287, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 312, 313, 323, 324, 325, 326, 327, 330, 332, 334, 337, 338, 339, 345, 346, 348, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "output_height": 153, "output_lay": [135, 138], "output_s": [135, 177, 178, 179, 252, 253, 254], "output_width": 153, "outsid": [0, 226], "over": [0, 1, 2, 3, 11, 72, 85, 86, 115, 127, 132, 135, 137, 147, 177, 178, 179, 196, 216, 220, 221, 222, 238, 241, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 286, 290, 325, 326, 327, 334, 337, 339, 360, 361, 363], "overal": [125, 156], "overdetermin": 19, "overfit": [1, 23, 127, 157, 160, 225, 227, 228, 229, 230, 267, 270, 275, 277], "overhead": [73, 129, 196], "overli": 213, "overrid": [2, 3], "overridden": [132, 265], "overwrit": [134, 136], "own": [4, 134, 135, 136, 137, 149, 150, 151, 206, 264, 358], "p": [18, 19, 45, 133, 136, 137, 154, 155, 156, 157, 158, 159, 160, 224, 225, 227, 228, 229, 230, 255, 258, 259, 360, 361, 363, 366], "p_d": [257, 260], "p_h": [256, 257, 260], "p_w": [256, 257, 260], "packag": [2, 3, 4, 11, 129, 264, 266, 282, 289, 291, 356, 366], "pad": [67, 135, 138, 149, 150, 151, 153, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 244, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 344], "pad_after_dim1": 346, "pad_after_dim2": 346, "pad_before_dim1": 346, "pad_before_dim2": 346, "pad_width": 346, "padding_height": 153, "padding_width": 153, "pair": 163, "pang": 129, "paper": 60, "parallel": [1, 3, 115, 129], "param": [132, 133, 136, 137, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "param1": 132, "param_dict": 136, "param_group": [265, 266], "param_groups_setup": 265, "param_list": 137, "param_s": 282, "paramet": [0, 2, 10, 68, 69, 70, 129, 132, 264, 265, 266, 283, 291, 366], "parameterdict": 139, "parameterlist": 139, "parent": 264, "part": [131, 132, 206, 264, 279, 281, 291, 304, 305, 308, 310, 311, 312, 313, 356, 366], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 140, 141, 143, 144, 145, 146, 147, 148, 163, 165, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "particip": [133, 356], "particular": [134, 136], "particularli": [10, 19, 72, 99, 100, 101, 102, 103, 104, 135, 136, 137, 138, 147, 155, 165, 190, 191, 192, 193, 194, 195, 216, 235, 238, 241, 247, 248, 249, 250, 271, 279, 282, 309, 355], "pass": [2, 10, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 132, 133, 134, 135, 136, 137, 138, 188, 190, 191, 192, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 264, 283, 292, 309, 326, 334, 337, 338, 339, 341, 343, 347, 349, 350, 354, 356, 366], "past": [267, 268, 270, 275], "patch": [153, 256], "path": [3, 5, 6, 7, 8, 25, 26, 156, 226], "pathwai": 129, "pattern": [129, 144, 196, 212, 220, 221, 222], "penal": [267, 275, 277], "penalti": [268, 269, 270, 271, 272, 273, 274], "penros": 19, "per": [1, 73, 99, 100, 101, 102, 103, 104, 116, 117, 118, 177, 247, 248, 249, 250, 252], "perform": [3, 10, 11, 12, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 55, 56, 57, 58, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 95, 111, 112, 113, 114, 115, 120, 127, 129, 132, 133, 137, 141, 149, 150, 151, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 279, 281, 289, 291, 293, 294, 297, 300, 303, 323, 325, 327, 334, 338, 355, 357, 359, 364, 366], "permut": 338, "persist": [131, 284, 286, 287, 288, 290, 306, 307], "perturb": [14, 21, 22, 366], "phi": [141, 208], "pi": [141, 208, 320, 330, 335], "pico": [37, 129], "piecewis": [209, 210], "pil": [356, 366], "pinv": 15, "pioneer": 129, "pipelin": [5, 6, 7, 8, 291, 355, 356, 358], "pixel": [5, 6, 7, 8, 188, 262, 358, 360], "place": [199, 201, 202, 203, 204, 205, 206], "placehold": [132, 234], "plai": [283, 291], "plot": 345, "point": [4, 189, 279], "pointwis": [193, 194, 195], "pool": [23, 67, 68, 69, 70, 78, 87, 98, 105, 115, 120, 127, 129, 177, 178, 179, 180, 181, 182, 184, 185, 186, 196, 197, 221, 222, 252, 253, 254, 255, 256, 257, 258, 259, 260, 325, 327], "pool1": 138, "pool2": 138, "poorli": 16, "popul": 132, "popular": [4, 129], "portion": 366, "pose": 19, "posit": [1, 12, 17, 132, 138, 189, 207, 211, 212, 214, 255, 256, 257, 258, 259, 260, 276, 280, 302, 348, 352, 359], "possibl": [10, 366], "potenti": [19, 234, 275, 350], "power": [10, 17, 36, 72, 76, 77, 78, 129, 196, 280, 281, 314, 355, 356, 366], "pp": 129, "practic": [19, 238, 241], "practition": 366, "pre": [55, 56, 57, 58, 88, 92, 93], "preactbottleneck": [88, 92, 93], "preced": [129, 133, 262, 292], "preconfigur": [47, 48, 49, 50, 51, 52, 53, 54, 64, 65], "predecessor": 26, "predefin": [4, 129, 135, 214], "predict": [125, 237, 238, 240, 241], "prefix": [132, 282], "prepar": [3, 280, 346, 348, 352, 356, 366], "prepend": 132, "preprint": 129, "preprocess": [3, 4, 153, 189, 291, 355, 356, 366], "present": [237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 256], "preserv": [129, 154, 156, 189, 224, 226, 304, 305, 308, 310, 311, 312, 313, 326, 334, 339], "preset": 4, "prevent": [1, 134, 135, 136, 137, 138, 157, 160, 213, 225, 227, 228, 229, 230, 237, 238, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281], "previou": [129, 267, 276, 281], "previous": 270, "primari": [10, 283], "primarili": 138, "principl": 129, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364], "priorit": [76, 77, 197, 209], "prob": 284, "probabilist": 291, "probabl": [45, 61, 141, 147, 154, 155, 156, 157, 158, 159, 160, 166, 208, 216, 224, 225, 226, 227, 228, 229, 230, 237, 238, 241, 284, 360, 361, 363, 366], "problem": [19, 20, 22, 129, 143, 207, 211, 274], "proceed": 129, "process": [2, 3, 4, 17, 20, 22, 23, 25, 64, 85, 86, 87, 115, 126, 127, 129, 137, 149, 150, 151, 175, 189, 190, 191, 192, 196, 197, 214, 218, 220, 222, 233, 243, 244, 245, 247, 248, 249, 250, 255, 257, 258, 260, 267, 283, 345, 356, 357, 358, 359, 364, 366], "produc": [23, 127, 130, 177, 178, 179, 196, 220, 221, 222, 252, 253, 254, 289, 291], "product": [10, 20, 22, 210, 215, 217, 233, 250, 264, 295, 296, 300, 301], "program": [279, 291], "progress": [46, 269], "project": [20, 22], "projector": 19, "promin": [255, 257, 258, 259, 260], "promot": [138, 238, 241, 264], "propag": [13, 14, 16, 19, 20, 21, 22, 129, 132, 138, 163, 165, 188, 196, 256, 257, 275, 276, 284, 295, 296, 297, 301, 325, 327, 345, 346, 349, 353], "properli": [0, 137, 147, 216, 264], "properti": [11, 13, 16, 17, 141, 145, 154, 208, 214, 224, 269, 274], "proport": [5, 6, 7, 8, 339], "proportion": 364, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 27, 36, 38, 59, 60, 61, 63, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 120, 125, 126, 128, 129, 132, 134, 135, 136, 137, 141, 165, 178, 179, 189, 237, 238, 239, 241, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 275, 277, 279, 281, 283, 289, 291, 292, 297, 304, 311, 325, 327, 338, 340, 348, 350, 352, 366], "pseudo": [16, 19], "purpos": [27, 32, 36, 286, 290, 304, 310, 312], "python": 283, "pytorch": 340, "q": [20, 129], "qr": 15, "quad": [19, 237, 238, 239, 240, 241, 258, 259, 260, 293, 294, 298, 299, 300, 303, 357], "quadrat": 239, "quoc": 129, "quotient": 294, "r": [20, 129, 360, 361, 362, 363], "r_t": 274, "radam": 278, "radix": [78, 79, 80, 81, 82, 83, 84, 85, 86], "rais": [0, 1, 2, 132, 264, 265, 302], "rand": [285, 291], "randint": [285, 291], "randn": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 127, 193, 194, 195, 196, 197, 264, 285, 289, 291], "random": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 116, 117, 118, 119, 125, 193, 194, 195, 196, 197, 226, 359, 360, 361, 362, 363, 366], "random_integ": 291, "random_tensor": 291, "randomcrop": [365, 366], "randomgrayscal": [365, 366], "randomhorizontalflip": [365, 366], "randomli": [1, 154, 156, 157, 158, 159, 160, 189, 224, 227, 228, 229, 230, 359, 360, 361, 362, 363, 366], "randomnoisedataset": [0, 1, 2], "randomrot": [365, 366], "randomverticalflip": 365, "rang": [0, 1, 11, 29, 38, 87, 95, 129, 137, 146, 148, 149, 150, 156, 167, 171, 206, 213, 215, 218, 226, 267, 275, 277, 284, 287, 309, 316, 317, 319, 358, 362, 366], "rank": 19, "rasul": 7, "rate": [25, 26, 45, 46, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "rather": [7, 136, 137, 271, 349], "ratio": [45, 105, 196, 197, 364], "ravel": 344, "raw": [147, 216, 238, 283], "re": [133, 281], "readabl": [134, 135, 136, 138, 264, 283], "readi": [3, 10, 111, 112, 113, 114, 119, 129], "real": [19, 22, 72, 215], "rearrang": 153, "reassembl": 129, "recalibr": [106, 108, 109, 111, 112, 113, 114, 129, 196], "receiv": [258, 259, 260, 346], "recent": 275, "recept": [115, 119, 129, 197], "reciproc": [19, 314, 324, 332], "recognit": [70, 85, 86, 129, 221], "rectangular": 308, "rectif": 274, "rectifi": [143, 144, 211, 212, 274], "recurr": [135, 250], "recurs": [130, 132], "red": 360, "reduc": [23, 71, 87, 98, 115, 120, 127, 129, 193, 194, 195, 196, 243, 244, 245, 247, 248, 249, 255, 256, 257, 258, 259, 260, 273, 276, 281, 283, 325, 326, 327, 334, 339, 360], "reduct": [22, 45, 105, 166, 167, 168, 170, 171, 196, 197, 237, 238, 239, 240, 241, 325, 327], "reevalu": 265, "refer": [4, 10, 132, 291, 305, 308, 341], "reflect": 279, "regardless": [19, 347], "region": [151, 155, 177, 178, 179, 188, 209, 225, 253, 254, 346, 357, 366], "regist": [96, 97, 99, 100, 101, 102, 103, 104, 126, 131, 132, 133, 137, 264, 282], "register_buff": 131, "register_model": [24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123, 124, 126, 128], "register_paramet": 132, "registr": [132, 264], "registri": [99, 100, 101, 102, 103, 104, 282], "registry_path": 282, "regress": [4, 170, 239, 240], "regular": [19, 23, 25, 45, 46, 61, 127, 156, 160, 225, 227, 228, 229, 230, 267, 268, 269, 272, 273, 274, 275, 277], "reimagin": 129, "relat": [281, 308, 310], "relationship": 364, "relev": [188, 267, 275, 277], "reli": [155, 281], "reliabl": [5, 6, 7, 8], "reliant": [227, 228, 229, 230], "relu": [10, 23, 105, 120, 127, 129, 130, 134, 135, 136, 138, 140, 142, 143, 162, 190, 191, 192, 196, 197, 201, 202, 205, 206, 207, 211, 213, 217, 219, 220, 221, 222, 232, 233, 234, 235], "relu1": 138, "relu2": 138, "relu3": 138, "relu6": [219, 232], "remain": [5, 6, 7, 8, 38, 131, 156, 176, 224, 226, 227, 228, 229, 230, 276], "rememb": 291, "remov": [282, 350], "rep": 352, "repeat": [344, 345, 352], "repetit": [348, 352], "replac": [7, 291, 360], "repres": [7, 16, 18, 22, 67, 79, 80, 81, 82, 83, 84, 132, 133, 138, 163, 165, 172, 175, 176, 220, 221, 222, 233, 235, 238, 241, 250, 265, 266, 267, 273, 274, 275, 276, 277, 283, 284, 293, 294, 300, 303, 305, 326, 337, 338, 339, 345, 357, 359, 361, 362, 363, 364], "represent": [78, 85, 86, 96, 97, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 119, 129, 196, 256, 259, 265], "reproduc": [284, 286, 287, 288, 289, 290, 291, 366], "requir": [2, 3, 4, 10, 28, 34, 35, 73, 79, 80, 81, 82, 83, 84, 99, 100, 101, 102, 103, 104, 115, 131, 134, 138, 140, 141, 143, 144, 145, 146, 148, 163, 165, 188, 196, 197, 206, 234, 238, 241, 264, 279, 281, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 364], "requires_grad": [131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 153, 163, 165, 188, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 264, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356], "rescal": [166, 167, 171, 237, 238, 241], "research": 264, "reset": [133, 289, 292], "reshap": [10, 105, 165, 221, 222, 262, 280, 283, 344, 347], "residu": [62, 63, 64, 65, 72, 73, 75, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109, 110, 129], "residualblock": 87, "resili": 276, "resiz": [188, 355, 365, 366], "resnest": [66, 79, 80, 81, 82, 83, 84, 85, 86, 129], "resnest_101": 129, "resnest_14": 129, "resnest_200": 129, "resnest_26": 129, "resnest_269": 129, "resnest_50": 129, "resnest_50_1s4x24d": 129, "resnest_50_4s2x40d": 129, "resnet": [63, 64, 65, 66, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 115, 116, 117, 118, 129, 196], "resnet_1001": 129, "resnet_101": 129, "resnet_152": 129, "resnet_18": 129, "resnet_200": 129, "resnet_269": 129, "resnet_34": 129, "resnet_50": 129, "resnet_arg": 115, "resnext": [66, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 119, 129], "resnext_101_32x16d": 129, "resnext_101_32x32d": 129, "resnext_101_32x4d": 129, "resnext_101_32x8d": 129, "resnext_101_64x4d": 129, "resnext_50_32x4d": 129, "resolut": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 111, 112, 113, 114, 119, 129], "resourc": [30, 31, 33, 34, 37, 38, 73, 76, 77, 129, 281], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 67, 120, 131, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 163, 165, 188, 197, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 319, 323, 324, 325, 326, 327, 330, 332, 334, 337, 338, 339, 345, 346, 348, 352, 360], "respons": [111, 112, 113, 114, 129, 134, 173, 246, 266], "restor": [196, 281], "restructur": 349, "result": [12, 16, 17, 19, 129, 132, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 163, 165, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 197, 209, 213, 216, 226, 264, 265, 279, 281, 284, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 366], "resum": 266, "retain": [133, 155, 225, 292, 304, 312, 325, 326, 327, 334, 339, 356], "retent": 356, "rethink": 129, "retriev": [0, 2, 134, 136, 137], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 63, 67, 105, 131, 132, 134, 135, 136, 137, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 355, 366], "reus": [129, 356], "reusabl": [138, 226, 264, 355], "revers": [10, 138, 338, 361, 363], "revert": 281, "revolution": 129, "rgb": [5, 6, 60, 61, 62, 64, 65], "rho": 268, "rho_": 274, "rho_t": 274, "right": [17, 18, 19, 21, 22, 141, 147, 208, 216, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 258, 259, 260, 357], "risk": 283, "rmsprop": 278, "rob": 129, "robust": [27, 32, 155, 189, 224, 227, 228, 229, 230, 239, 264, 268, 359, 360, 362, 366], "roland": 7, "role": [283, 291, 366], "root": [4, 5, 6, 7, 8, 269, 275, 332], "rotat": [162, 187, 362, 366], "rotated_imag": 189, "rout": [258, 259, 260], "routin": 10, "row": [13, 14, 16, 21, 165, 308, 345, 354], "rprop": 278, "rule": [16, 17, 280, 293, 294, 298, 299, 300, 302, 303], "run": [10, 131, 172, 175, 190, 191, 192, 243, 244, 245, 247, 248, 249, 268, 281, 289, 291], "running_mean": [131, 172, 175, 243, 244, 245, 247, 248, 249], "running_var": [172, 175, 243, 244, 245, 247, 248, 249], "runtim": [46, 135, 138, 226, 264, 309], "s_": 276, "s_d": [257, 260], "s_h": [256, 257, 260], "s_w": [256, 257, 260], "sain": 129, "same": [13, 14, 16, 17, 21, 147, 154, 155, 156, 157, 158, 159, 160, 172, 173, 175, 176, 178, 179, 189, 190, 191, 192, 193, 194, 195, 197, 213, 220, 221, 222, 224, 227, 228, 229, 230, 234, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 276, 284, 289, 291, 297, 307, 311, 313, 323, 325, 326, 327, 341, 343, 347, 349, 350, 351, 354, 358], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 111, 112, 113, 114, 119, 177, 178, 179, 201, 202, 203, 204, 205, 206, 224, 227, 228, 229, 230, 233, 235, 238, 241, 250, 252, 253, 254, 284, 288, 291, 309, 357, 359, 361, 362, 363, 364], "sandler": 129, "satisfi": [12, 14, 21], "satur": [207, 366], "save": [2, 131, 133, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282], "scalabl": [3, 32, 45, 99, 100, 101, 102, 103, 104, 125, 129, 264], "scalar": [13, 18, 166, 167, 168, 170, 171, 283, 284], "scale": [14, 19, 25, 31, 33, 34, 35, 37, 39, 40, 45, 46, 64, 68, 69, 70, 71, 74, 78, 85, 86, 88, 89, 90, 93, 106, 107, 115, 116, 117, 118, 129, 140, 145, 147, 156, 172, 173, 175, 176, 196, 197, 205, 206, 207, 209, 211, 214, 215, 216, 218, 224, 226, 227, 228, 229, 230, 238, 243, 244, 245, 246, 247, 248, 249, 250, 262, 267, 269, 270, 271, 283, 291, 339, 364], "scale_by_keep": [156, 226], "scale_factor": 262, "scenario": [30, 35, 37, 136, 137, 250, 271, 272, 356, 360], "schedul": [225, 267], "scientif": 280, "score": [87, 98, 115, 147, 238], "scratch": 10, "script": 291, "se": [45, 106, 107, 108, 109, 110, 111, 112, 113, 114, 129], "se_resnet_101": 129, "se_resnet_152": 129, "se_resnet_18": 129, "se_resnet_34": 129, "se_resnet_50": 129, "se_resnext_101_32x4d": 129, "se_resnext_101_32x8d": 129, "se_resnext_101_64x4d": 129, "se_resnext_50_32x4d": 129, "se_scal": 45, "seamless": [0, 1, 3, 4, 264, 291], "seamlessli": [3, 4, 11, 133, 135, 138, 264, 283, 366], "search": 129, "second": [14, 135, 136, 163, 196, 233, 270, 271, 272, 273, 274, 280, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 343, 345, 363], "section": 297, "see": [10, 297], "seed": [284, 285, 286, 287, 288, 290, 291, 366], "seen": 268, "select": [115, 116, 117, 118, 119, 129, 188, 196, 197, 258, 260, 334], "selectivekernel": 198, "self": [0, 1, 2, 3, 10, 23, 45, 46, 59, 63, 67, 71, 72, 73, 78, 105, 120, 127, 130, 131, 132, 133, 134, 135, 136, 137, 145, 156, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 345, 355, 356], "selu": [142, 154, 162, 219, 224, 232], "selunetwork": 214, "semodul": 198, "senet": [66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 129], "sensit": [168, 239, 243, 244, 245], "sentiment": 4, "separ": [0, 71, 85, 86, 125, 129, 149, 150, 151, 193, 194, 195, 247, 248, 249], "sequenc": [17, 87, 98, 115, 134, 136, 149, 304, 309, 341, 343, 346, 348, 351, 352, 354, 355], "sequenti": [23, 63, 67, 105, 120, 125, 127, 130, 134, 135, 139, 149, 190, 191, 192, 234, 355, 366], "seri": [59, 68, 69, 115, 149, 190, 220, 255, 258], "serial": [131, 132, 266], "serv": [3, 7, 40, 63, 105, 120, 132, 134, 135, 136, 137, 138, 264, 276, 356], "set": [3, 4, 5, 6, 7, 8, 85, 86, 96, 97, 111, 112, 113, 114, 119, 130, 133, 137, 149, 150, 151, 211, 212, 214, 220, 221, 222, 224, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 265, 270, 271, 275, 284, 286, 287, 288, 289, 290, 291, 292, 304, 306, 307, 312, 313, 319, 325, 327, 340, 356, 360, 366], "setup": [4, 10, 99, 100, 101, 102, 103, 104], "sever": [19, 220, 221, 222, 255, 256, 257, 258, 259, 260, 281, 355, 366], "sgd": [10, 267, 274, 278], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 67, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 280, 283, 284, 286, 287, 288, 290, 291, 292, 295, 306, 307, 308, 310, 311, 312, 313, 319, 324, 325, 326, 327, 330, 332, 334, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 360, 361, 362, 363, 364, 366], "shapelik": 287, "share": 129, "shen": 196, "shift": [172, 173, 175, 176, 209, 243, 244, 245, 246, 247, 248, 249, 250], "shorthand": 297, "should": [67, 131, 281, 284, 286, 287, 288, 290, 306, 307, 316, 317, 337, 346, 355], "show": [279, 282], "showcas": 10, "shown": [217, 289], "shrink": 268, "shuffl": [1, 2, 3], "side": [21, 135, 138, 149, 150, 151, 180, 181, 182, 184, 185, 186, 190, 191, 192, 220, 221, 222, 255, 256, 257, 258, 259, 260, 281], "sigma": [19, 196, 201, 203, 205, 215, 217, 243, 244, 245, 247, 248, 249, 250, 338], "sigma_c": 358, "sigma_i": 19, "sigmoid": [142, 162, 196, 201, 202, 205, 206, 209, 210, 217, 219, 232, 237], "sigmoidnetwork": 215, "sign": [17, 239, 276, 314], "signal": [190, 220, 221, 222, 243, 247, 255, 256, 257, 258, 259, 260], "signific": [28, 281], "significantli": [72, 98, 129, 196, 355], "sim": [224, 227, 228, 229, 230], "similar": [10, 201, 202, 297, 324, 340, 346], "similarli": [22, 337], "simonyan": 129, "simpl": [3, 4, 10, 130, 138, 149, 150, 151, 163, 165, 180, 181, 182, 184, 185, 186, 208, 209, 210, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 295, 296, 301, 355], "simplebinaryclassificationmodel": 237, "simpleblock": 156, "simpleclassificationmodel": [238, 241], "simplegelumodel": 208, "simplehardsigmoidmodel": 209, "simplehardswishmodel": 210, "simpleleakyrelumodel": 211, "simplemodel": [10, 130, 213, 226, 235, 282], "simpleregressionmodel": 240, "simplerelumodel": 212, "simpleselumodel": 214, "simplesigmoidmodel": 215, "simpleswishmodel": 217, "simpletanhmodel": 218, "simpli": [279, 337, 338, 349], "simplic": [129, 209, 212], "simplifi": [4, 55, 56, 57, 58, 68, 126, 129, 138, 190, 191, 192], "simul": [130, 366], "simultan": 189, "sin": [314, 320], "sinc": [17, 20, 134, 135, 136, 137, 149, 150, 151, 206, 279, 281, 284, 288, 345, 366], "sine": [317, 330, 331], "singl": [0, 4, 17, 20, 22, 87, 147, 190, 191, 192, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 238, 250, 256, 257, 258, 259, 260, 265, 283, 290, 306, 309, 341, 350, 358, 360, 366], "singleton": 250, "singular": [13, 16, 17, 19, 21, 22], "sinh": [314, 321, 336], "size": [0, 1, 2, 3, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 67, 68, 69, 70, 74, 76, 77, 87, 115, 127, 129, 130, 133, 135, 149, 150, 151, 153, 155, 158, 159, 160, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 220, 221, 222, 225, 233, 235, 237, 238, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 287, 290, 291, 292, 325, 326, 327, 334, 339, 341, 343, 350, 353, 354, 357, 359, 364, 366], "sk": [115, 116, 117, 118, 119, 129, 197], "sk_resnet_18": 129, "sk_resnet_34": 129, "sk_resnet_50": 129, "sk_resnext_50_32x4d": 129, "skblock": 115, "skip": [129, 281], "sknet": [66, 116, 117, 118, 119, 129], "slice": [163, 337], "slide": [153, 255, 257, 258, 260], "slight": 196, "slightli": 366, "slope": [143, 207, 211], "slow": [3, 274], "small": [19, 29, 31, 33, 36, 55, 56, 57, 58, 68, 69, 70, 73, 76, 77, 129, 143, 155, 166, 167, 172, 173, 175, 176, 211, 214, 225, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 256, 259, 268, 269, 270, 271, 272, 273, 274, 275, 276], "smaller": [30, 55, 56, 57, 58, 127, 129, 135, 138, 264, 269, 270, 299, 357, 359, 364], "smallest": 327, "smooth": [61, 141, 207, 208, 217, 267, 275, 366], "smoother": 267, "so": [134, 135, 136, 137, 189, 264, 274, 306, 307, 355], "softmax": [142, 162, 197, 219, 232, 238], "softmaxmodel": 216, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [140, 156, 157, 189, 224, 226, 227, 228, 243, 244, 245, 247, 248, 249, 269, 270, 271, 281, 283], "sometim": 280, "sophist": [135, 138], "sourc": 291, "space": [14, 20, 22, 149, 150, 151, 153, 177, 178, 179, 190, 191, 192, 193, 194, 195, 220, 221, 222, 252, 253, 254, 304, 309, 366], "span": 4, "spars": [269, 270], "spatial": [23, 87, 98, 115, 120, 127, 129, 155, 173, 191, 196, 221, 222, 243, 244, 245, 247, 248, 249, 250, 256, 257, 258, 259, 260, 262, 345], "spatial_dim": 196, "spatio": 222, "special": [0, 1, 10, 19, 131, 132, 133, 224, 291], "specif": [4, 10, 41, 42, 43, 44, 55, 56, 57, 58, 63, 71, 85, 86, 96, 97, 134, 135, 136, 137, 138, 197, 206, 224, 227, 228, 229, 230, 247, 248, 249, 264, 265, 279, 291, 306, 325, 327, 348, 352], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 40, 46, 67, 74, 75, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 130, 135, 147, 153, 160, 166, 167, 168, 170, 171, 176, 177, 178, 179, 188, 189, 196, 216, 220, 221, 222, 237, 238, 239, 240, 241, 250, 252, 253, 254, 256, 257, 258, 259, 260, 262, 265, 283, 286, 287, 288, 289, 290, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 319, 325, 326, 327, 334, 338, 339, 340, 341, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 366], "speech": 247, "speed": [76, 77, 209, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "split": [4, 78, 85, 86, 129, 341, 343, 354], "springer": 129, "sqrt": [141, 173, 201, 202, 205, 206, 208, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 270, 271, 273, 274, 275, 314, 316, 317], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 155, 168, 170, 225, 239, 240, 268, 269, 270, 275, 314, 332], "squaredataset": [0, 1, 2, 3], "squeez": [45, 73, 76, 77, 105, 108, 111, 112, 113, 114, 129, 196, 344], "stabil": [16, 19, 129, 155, 166, 167, 172, 173, 175, 176, 190, 191, 192, 213, 225, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 267, 268, 269, 270, 271, 272, 273, 274, 275, 358], "stabl": [201, 202, 205, 206, 224, 238, 267, 271, 272, 275, 276, 277], "stack": [138, 197, 343, 344, 354, 366], "stage": [25, 26, 78, 79, 80, 81, 82, 83, 84, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 129], "stage1": 105, "stage2": 105, "stage3": 105, "stage4": 105, "standalon": 213, "standard": [27, 32, 87, 96, 97, 141, 143, 193, 194, 195, 201, 203, 205, 207, 208, 211, 224, 276, 288, 291, 297, 355, 358, 366], "start": [1, 3, 267, 269, 276, 304, 309, 357, 359], "state": [34, 129, 131, 132, 133, 135, 138, 265, 279, 281, 289], "state_dict": [132, 133, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "static": 138, "statist": [19, 154, 172, 175], "std": [5, 6, 7, 8, 203, 355, 358, 366], "stem": [63, 78, 87, 98, 115, 129], "stem_typ": 87, "stem_width": [78, 79, 80, 81, 82, 83, 84, 87], "step": [133, 153, 197, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 304, 355, 356], "step_siz": 276, "still": [37, 268], "stochast": [10, 25, 26, 45, 46, 156, 226, 267, 277], "stochastic_depth": 45, "stop": [304, 309], "storag": [134, 136, 292], "store": [2, 4, 5, 6, 7, 8, 87, 98, 115, 131, 132, 133, 134, 135, 136, 137, 196, 252, 253, 254, 281, 292, 357, 358, 359, 360, 361, 362, 363, 364], "str": [5, 6, 7, 8, 87, 120, 132, 134, 136, 138, 166, 167, 168, 170, 171, 188, 262, 265, 282, 345], "straightforward": [277, 279, 293], "strategi": 266, "streamlin": [2, 3, 129], "strength": 225, "strict": [132, 265], "stride": [46, 67, 68, 69, 70, 73, 76, 77, 135, 138, 149, 150, 151, 153, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 252, 253, 254, 255, 256, 257, 258, 259, 260], "stride_height": 153, "stride_width": 153, "strike": 32, "string": [132, 134, 136, 138, 220, 221, 222, 265], "structur": [0, 10, 20, 46, 73, 125, 131, 132, 135, 155, 225, 264, 265, 282, 283, 308, 356], "style": [63, 175, 247, 248, 345], "sub": [134, 135, 136, 137, 138, 264, 314, 357, 359], "sub_tensor": 292, "subclass": [1, 2, 3, 10, 132, 133, 134, 264, 265], "sublay": 130, "submodul": [130, 132, 264], "subsequ": [135, 138, 206, 291], "subset": [85, 86, 227, 228], "subtract": [10, 303, 358], "suffer": 269, "suit": [37, 41, 42, 43, 44, 61, 71, 115, 201, 202, 205, 206], "suitabl": [27, 29, 30, 33, 35, 47, 48, 49, 50, 51, 52, 53, 54, 63, 68, 69, 70, 72, 76, 77, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 110, 129, 239, 269, 270, 286], "sum": [18, 134, 135, 136, 137, 138, 147, 166, 167, 168, 170, 171, 197, 216, 237, 238, 239, 240, 241, 269, 293, 296, 301, 314, 337, 339, 341, 343, 345, 348, 352, 354], "sum_": [17, 147, 173, 216, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 295, 296, 326, 334, 337, 339, 345, 348], "sum_i": [18, 301], "sum_j": 301, "sum_k": 297, "summar": [45, 96, 97, 125, 255, 256, 257], "summari": [96, 97, 111, 112, 113, 114, 119], "summat": 17, "sun": 196, "super": [10, 130, 131, 132, 133, 134, 135, 136, 137, 156, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282], "superior": 39, "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 74, 87, 134, 135, 136, 137, 138, 188, 189, 262, 264, 266, 273, 291, 292, 293, 294, 297, 298, 299, 300, 302, 303, 305, 308, 319, 324, 326, 330, 332, 334, 337, 338, 339, 341, 345, 349, 356, 366], "suppos": 366, "sure": [264, 366], "svd": [15, 19], "swish": [76, 77, 219, 232], "symmetr": [12, 177, 178, 179, 205, 206, 218], "syntax": [1, 297], "system": [11, 12, 19, 20, 21, 129, 279, 345], "systemat": [129, 366], "szegedi": [60, 129], "t": [19, 129, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 292, 297, 340, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "t0": 267, "t1": 340, "t2": 340, "tabl": 45, "tabular": 4, "tailor": [4, 73, 79, 80, 81, 82, 83, 84, 264, 366], "take": [20, 255, 256, 257, 258, 259, 260, 262, 281, 355], "taken": 337, "tan": [129, 314], "tangent": [148, 218, 318, 335, 336], "tanh": [67, 135, 138, 141, 142, 162, 201, 202, 205, 206, 208, 219, 232, 314], "tanhnetwork": 218, "target": [5, 6, 7, 8, 37, 138, 166, 167, 168, 170, 171, 177, 178, 179, 188, 237, 238, 239, 240, 241, 252, 253, 254, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 357, 359, 364], "target_tensor": [237, 238, 239, 240, 241], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 129, 146, 147, 150, 163, 166, 167, 170, 171, 196, 197, 215, 216, 220, 221, 222, 237, 238, 239, 240, 241, 247, 248, 249, 255, 257, 258, 260, 270, 280, 291, 308, 309, 366], "techniqu": [12, 16, 25, 46, 127, 156, 172, 224, 225, 227, 228, 229, 230, 247, 248, 249, 266, 364, 366], "tempor": [220, 222, 257, 260], "temporarili": 281, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 87, 99, 100, 101, 102, 103, 104, 105, 116, 117, 118, 120, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 279, 281, 283, 284, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "term": [19, 38, 163, 190, 191, 192, 193, 194, 195, 267, 271, 273, 274, 275, 277], "test": [4, 5, 6, 7, 8, 309], "test_backward": 130, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 87, 98, 115, 116, 117, 118, 125, 134, 140, 143, 144, 145, 147, 149, 150, 151, 156, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 255, 256, 257, 258, 259, 260, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 287, 293, 294, 296, 298, 299, 300, 302, 303, 315, 319, 325, 326, 327, 329, 334, 339, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 359, 361, 362, 363], "th": [163, 237, 238, 240, 241, 247, 248, 249, 298, 299, 302], "than": [0, 1, 7, 136, 137, 140, 143, 168, 193, 194, 195, 207, 211, 217, 239, 265, 271, 309, 319, 337, 346, 351, 357, 359, 364], "thei": [0, 10, 22, 129, 131, 135, 137, 138, 283, 345, 349, 357, 359, 366], "them": [3, 129, 132, 137, 153, 267, 280, 341, 351, 355, 358, 366], "therebi": [224, 256, 257, 259, 260], "theta": [267, 268, 362], "theta_": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "theta_t": [274, 275], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 77, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 129, 130, 131, 133, 135, 136, 137, 138, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 163, 165, 177, 188, 189, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 291, 292, 296, 297, 301, 304, 306, 310, 311, 312, 313, 319, 323, 324, 325, 326, 327, 330, 332, 334, 337, 338, 339, 340, 346, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "thing": 281, "those": [10, 68, 69, 70, 137, 206], "three": [22, 70, 151, 179, 182, 186, 190, 191, 192, 222, 230, 245, 249, 254, 257, 260], "threshold": [19, 168, 239], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 25, 59, 63, 67, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 126, 127, 134, 135, 138, 155, 163, 165, 188, 196, 197, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 284, 288, 295, 296, 301, 345, 347, 349, 350, 353, 366], "throughout": [145, 356], "tier": 34, "tile": 344, "time": [0, 3, 17, 68, 69, 70, 72, 149, 190, 211, 214, 220, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 275, 277, 281, 348, 352], "tini": [29, 30, 38, 129], "to_tensor": [5, 6, 7, 8], "togeth": [138, 355, 366], "too": 276, "tool": [3, 10, 264, 280, 291, 355, 366], "top": [12, 13, 14, 20, 22, 34, 163, 165, 188, 220, 221, 222, 233, 235, 357, 359], "torch": [120, 340], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 133, 292, 349], "totensor": [355, 366], "trace": [11, 314], "track": [10, 190, 191, 192, 243, 244, 245, 247, 248, 249, 264, 279, 281, 284, 286, 287, 288, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 356], "track_running_stat": [190, 191, 192, 243, 244, 245, 247, 248, 249], "trade": 29, "tradit": [7, 129, 268, 269, 272, 273, 274], "trail": 176, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 46, 59, 60, 61, 111, 112, 113, 114, 119, 129, 130, 131, 132, 135, 137, 138, 147, 154, 155, 156, 157, 158, 159, 160, 172, 175, 189, 208, 211, 214, 215, 216, 218, 224, 225, 226, 227, 228, 229, 230, 243, 244, 245, 247, 248, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 355, 358, 359, 360, 361, 362, 363, 366], "trainabl": [130, 243, 244, 245, 247, 248, 249, 264], "transact": 196, "transfer": [175, 247, 248], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 25, 129, 136, 163, 165, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 280, 345], "transform_pipelin": [355, 366], "transformed_imag": [355, 366], "transit": [40, 239], "translat": [256, 259], "transpos": [10, 12, 314], "treat": [0, 131, 250, 264], "triangular": [12, 20], "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 59, 60, 61, 76, 77, 78, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 163, 165, 172, 175, 188, 190, 191, 192, 193, 194, 195, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 262, 264, 265, 270, 271, 275, 279, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356], "truncat": 130, "truncate_from": 130, "try": 0, "tune": 366, "tupl": [2, 3, 5, 6, 7, 8, 14, 18, 20, 22, 40, 87, 130, 132, 133, 149, 150, 151, 153, 176, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 220, 221, 222, 234, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 270, 271, 272, 273, 274, 276, 283, 286, 287, 288, 290, 292, 306, 310, 312, 325, 326, 327, 334, 339, 341, 343, 345, 346, 349, 350, 351, 353, 354, 357, 358, 359, 364], "twice": 346, "two": [10, 13, 14, 16, 17, 19, 20, 22, 68, 69, 70, 73, 85, 86, 116, 120, 149, 150, 151, 163, 181, 185, 196, 197, 221, 229, 233, 244, 248, 256, 259, 270, 271, 272, 273, 274, 276, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 337, 345], "type": [67, 78, 87, 105, 115, 131, 132, 133, 163, 233, 292, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 340, 345, 356], "typeerror": [0, 1, 2, 132, 265], "typic": [11, 87, 98, 115, 131, 147, 154, 155, 189, 196, 213, 214, 216, 225, 226, 241, 243, 244, 245, 247, 248, 249, 266, 267, 275, 277, 281, 283, 353, 356, 358, 362, 364, 366], "u": [19, 22, 202, 204, 206], "u_": 272, "ultra": [31, 93], "unchang": [131, 160, 207, 211, 212, 214, 224, 227, 228, 229, 230, 234, 347, 350], "undefin": 302, "under": [99, 100, 101, 102, 103, 104, 264], "underbrac": 17, "underdetermin": 19, "undergo": [156, 366], "underli": [0, 10, 55, 56, 57, 58, 60, 61, 62, 64, 65, 340, 343, 347, 349, 354], "understand": [10, 127, 129, 130, 138, 366], "unexpect": [132, 135, 138, 291], "unfold": [152, 162], "unifi": 0, "uniform": [200, 202, 206, 220, 221, 222, 233, 235, 285, 286, 287, 291, 360, 361, 362, 363], "uniformli": [286, 290], "uniniti": [306, 307], "unintend": 281, "union": 120, "uniqu": [12, 19, 21, 134, 136], "unit": [23, 67, 127, 140, 141, 143, 144, 145, 201, 202, 205, 206, 207, 208, 211, 212, 214, 224], "unless": [88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 292], "unlik": [131, 134, 135, 136, 137, 143, 207, 211, 224, 250, 268, 269, 271, 272, 273, 274, 276], "unnecessari": 281, "unpad": 346, "unseen": 366, "unsqueez": 344, "unstabl": 16, "up": [265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 362, 364], "updat": [4, 26, 131, 137, 138, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281], "upon": [26, 61, 73, 129, 134, 135, 136, 137], "upper": [20, 204, 276, 290], "upsampl": [232, 263], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 40, 45, 46, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 163, 165, 170, 172, 173, 175, 178, 179, 188, 189, 190, 191, 192, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 279, 280, 281, 282, 284, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 323, 325, 326, 327, 334, 339, 345, 346, 348, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "usag": [3, 11, 27, 28, 29, 30, 38, 39, 40, 125, 135, 138, 156, 193, 194, 195, 225, 265, 266, 309, 357, 358, 359, 360, 361, 362, 363, 364], "use_aux": [59, 60, 61], "use_h": [76, 77], "use_s": [76, 77], "user": [1, 2, 3, 4, 10, 134, 135, 136, 137, 264, 269, 355, 356, 366], "usual": 238, "util": [3, 10, 11, 116, 117, 118, 136, 137, 155, 264, 291], "v": [14, 19, 22, 129, 270, 271, 273, 274, 305], "v1": [59, 60, 63, 64, 65, 71, 72, 129], "v2": [31, 32, 33, 34, 35, 36, 37, 38, 46, 55, 56, 57, 58, 63, 65, 66, 72, 73, 75, 129], "v3": [59, 61, 62, 66, 73, 76, 77, 129], "v4": [59, 62, 129], "v_": [267, 270, 271, 273, 274, 275, 277], "v_stack": 354, "v_t": [274, 275], "val": 199, "valid": [190, 191, 192, 193, 194, 195, 197, 220, 221, 222, 338], "valu": [10, 13, 17, 18, 19, 22, 25, 71, 96, 97, 130, 132, 134, 136, 138, 140, 143, 146, 147, 148, 149, 150, 151, 153, 155, 156, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 188, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 218, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 287, 288, 289, 290, 291, 304, 305, 306, 307, 308, 309, 315, 316, 317, 319, 322, 323, 324, 325, 327, 329, 330, 332, 333, 341, 346, 347, 349, 353, 358, 360, 361, 363], "valuabl": 291, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 265], "van": 129, "vanish": [129, 207, 214, 243, 244, 245], "var": 314, "vari": [25, 115, 135, 137, 177, 188, 252, 362], "variabl": [132, 138, 177, 178, 179, 234, 252, 253, 254, 264, 279, 281, 286, 306, 359, 362], "varianc": [145, 154, 172, 175, 190, 191, 192, 201, 202, 205, 206, 214, 224, 243, 244, 245, 247, 248, 249, 250, 270, 271, 272, 273, 274, 288, 339, 362, 366], "variant": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 58, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 96, 97, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 270, 271, 272], "variat": [193, 194, 195, 247, 248, 249, 359, 366], "varieti": [4, 63, 78, 291, 366], "variou": [7, 40, 59, 64, 65, 67, 74, 129, 212, 266, 291, 309, 325, 327, 346, 356], "vasudevan": 129, "vdot": 301, "vector": [14, 19, 20, 21, 22, 163, 165, 233, 235, 295, 296, 297, 301], "veloc": [267, 275, 277], "veri": [19, 33, 90, 92, 129, 268], "versa": 276, "versatil": [291, 345], "version": [22, 25, 59, 63, 67, 68, 69, 275, 301, 360], "vertic": [351, 354, 363], "vgg": 120, "vggnet": [66, 121, 122, 123, 124, 129], "vggnet_11": 129, "vggnet_13": 129, "vggnet_16": 129, "vggnet_19": 129, "via": [3, 4, 115], "vice": 276, "video": [151, 160, 192, 222, 249, 257, 260], "view": [63, 67, 135, 256, 257, 258, 259, 260, 349], "vinod": [5, 6], "vision": [71, 72, 75, 78, 87, 129, 150, 221, 233, 366], "visual": [127, 129], "vol": 129, "vollgraf": 7, "volumetr": [151, 160, 192, 222, 249, 257, 260], "vstack": 344, "w": [87, 99, 100, 101, 102, 103, 104, 116, 117, 118, 129, 150, 151, 153, 155, 159, 160, 163, 165, 173, 178, 179, 181, 182, 185, 186, 188, 189, 191, 192, 196, 220, 221, 222, 233, 235, 244, 245, 246, 248, 249, 253, 254, 257, 260, 357, 359], "w_": [150, 151, 178, 179, 181, 182, 185, 186, 188, 221, 222, 253, 254, 256, 257, 259, 260], "w_out": [150, 151, 181, 182, 185, 186], "wa": [60, 224, 227, 228, 229, 230, 281], "wai": [1, 24, 128, 279, 281, 349], "wang": 129, "want": [0, 10, 355, 357], "warn": [134, 136], "we": [3, 10, 280, 345], "weight": [85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 129, 149, 150, 151, 163, 165, 166, 167, 171, 172, 175, 176, 188, 196, 197, 201, 202, 205, 206, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 235, 237, 238, 241, 243, 244, 245, 247, 248, 249, 250, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 286, 291], "weight1": 136, "weight2": 136, "weight_decai": [267, 268, 269, 270, 271, 272, 273, 274, 275, 277], "weinberg": 129, "well": [37, 41, 42, 43, 44, 46, 61, 115, 201, 202], "were": 138, "weyand": 129, "what": 281, "when": [0, 1, 3, 10, 17, 45, 132, 135, 137, 138, 140, 143, 149, 150, 151, 207, 226, 234, 243, 244, 245, 247, 248, 249, 262, 265, 268, 276, 279, 281, 282, 283, 291, 302, 355, 357], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 76, 77, 125, 129, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 291, 293, 294, 298, 299, 300, 302, 303, 306, 307, 319, 323, 324, 325, 326, 327, 330, 332, 334, 337, 338, 339, 341, 346, 348, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363], "whether": [1, 13, 45, 59, 60, 61, 76, 77, 78, 132, 133, 201, 202, 226, 275, 279, 284, 286, 287, 288, 290, 292, 306, 307, 325, 326, 327, 334, 339], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 46, 62, 65, 71, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 111, 112, 113, 114, 115, 119, 121, 122, 123, 124, 129, 132, 134, 136, 138, 143, 147, 168, 189, 193, 194, 195, 197, 207, 208, 211, 213, 216, 218, 224, 239, 241, 243, 244, 245, 247, 248, 249, 250, 270, 271, 273, 275, 279, 281, 283, 286, 287, 290, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 341, 348, 349, 351, 353, 356, 357, 359, 360, 361, 362, 363, 364, 366], "while": [10, 26, 31, 37, 38, 55, 56, 57, 58, 65, 71, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 119, 129, 135, 138, 154, 155, 208, 212, 213, 226, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 281, 349, 351, 360, 366], "who": [10, 134, 135, 136, 137], "whose": [22, 307, 311, 313, 315, 319, 323, 329], "wide": [4, 5, 6, 8, 11, 19, 38, 87, 95, 96, 97, 129, 144, 212, 220, 221, 238], "wide_resnet_101": 129, "wide_resnet_50": 129, "wider": [29, 96, 97, 149, 150], "wideresnet": 129, "width": [45, 46, 71, 74, 78, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 115, 125, 129, 150, 151, 153, 159, 160, 173, 178, 179, 181, 182, 185, 186, 188, 189, 197, 221, 222, 244, 245, 246, 248, 249, 253, 254, 256, 257, 259, 260, 262, 357, 359, 364], "width_coef": 45, "width_multipli": [71, 74], "window": [180, 181, 182, 184, 185, 186, 255, 256, 257, 258, 259, 260, 268, 325, 327], "wise": [109, 111, 112, 113, 114, 129, 140, 141, 143, 144, 145, 146, 147, 148, 156, 190, 191, 192, 196, 210, 216, 217, 224, 226, 227, 228, 229, 230, 264, 280, 293, 294, 297, 298, 299, 300, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 333, 335, 336, 337, 343, 354], "within": [2, 129, 130, 131, 134, 135, 136, 137, 138, 148, 188, 189, 206, 208, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 224, 227, 228, 234, 237, 238, 239, 240, 241, 243, 244, 245, 247, 250, 255, 256, 257, 258, 259, 260, 266, 281, 304, 319, 362, 366], "without": [10, 98, 134, 135, 136, 163, 165, 220, 221, 222, 233, 235, 279, 282, 325, 347, 349, 353], "won": 281, "work": [1, 2, 3, 10, 12, 280, 283], "workflow": [291, 366], "workload": 10, "wrap": [3, 264, 281, 340], "wrapper": 264, "www": [5, 6], "x": [10, 11, 21, 63, 67, 105, 120, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 147, 156, 163, 165, 189, 193, 194, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 286, 287, 288, 290, 306, 307, 323, 345, 357, 358, 359, 360, 361, 362, 363, 364], "x1": 233, "x2": 233, "x_": [173, 238, 241, 246, 345], "x_c": [238, 241], "x_i": 237, "x_k": 238, "xavier": [201, 202, 205, 206], "xavier_norm": 200, "xavier_uniform": 200, "xception": [66, 129], "xiao": 7, "xie": 129, "xl": [58, 129], "xlarg": [39, 129], "xy": 345, "x\u2081": 233, "x\u2082": 233, "y": [125, 129, 134, 135, 136, 137, 138, 189, 193, 194, 195, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 284, 286, 287, 288, 290, 306, 307, 345, 360], "y_": [173, 238, 241, 246, 345], "y_c": [238, 241], "y_i": 237, "yann": [8, 129], "yet": [10, 36, 38, 280], "yield": [0, 1, 132, 281], "you": [0, 73, 130, 135, 137, 138, 264, 266, 279, 281, 291, 306, 307, 308, 313, 338, 340, 355, 357, 366], "your": [73, 264, 266, 279, 281, 291, 366], "z": [129, 307, 312, 313], "zalandoresearch": 7, "ze": 129, "zeiler": [127, 129], "zero": [17, 19, 20, 61, 130, 140, 143, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 180, 181, 182, 184, 185, 186, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 214, 220, 221, 222, 224, 226, 227, 228, 229, 230, 250, 255, 256, 257, 258, 259, 260, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 306, 307, 308, 313, 314, 319, 329, 346], "zero_grad": [133, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 292], "zeros_lik": [307, 314], "zfnet": [66, 129], "zhang": 129, "zhmoginov": 129, "zhu": 129, "zhuang": 129, "zisserman": 129, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 280, "1d": 280, "2": 280, "2d": 280, "3": 280, "It": [279, 281], "ab": 315, "activ": [142, 162, 219, 232], "ad": 280, "adadelta": 268, "adagrad": 269, "adam": 270, "adamax": 272, "adamw": 271, "adaptive_avg_pool1d": 177, "adaptive_avg_pool2d": 178, "adaptive_avg_pool3d": 179, "adaptiveavgpool1d": 252, "adaptiveavgpool2d": 253, "adaptiveavgpool3d": 254, "add": 293, "addit": 19, "admonit": 283, "advanc": [153, 366], "alexnet": [23, 24], "algebra": 15, "algorithm": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "alias": 283, "align": 280, "alpha_dropout": 154, "alphadropout": 224, "also": 266, "anoth": 340, "arang": 304, "arcco": 316, "architectur": [23, 25, 68, 69, 70, 96, 97, 127], "arcsin": 317, "arctan": 318, "asgd": 267, "attent": 197, "attribut": [5, 6, 7, 8, 23, 63, 67, 87, 98, 105, 115, 120, 125, 127, 131, 133, 134, 135, 136, 137, 138, 190, 191, 192, 193, 194, 195, 196, 207, 208, 211, 212, 214, 215, 216, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 292, 357, 358, 359, 360, 361, 362, 363, 364], "avg_pool1d": 180, "avg_pool2d": 181, "avg_pool3d": 182, "avgpool1d": 255, "avgpool2d": 256, "avgpool3d": 257, "axi": 280, "backpropag": 292, "backward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 155, 163, 165, 188, 196, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "batch_norm": 172, "batchnorm": 198, "batchnorm1d": 243, "batchnorm2d": 244, "batchnorm3d": 245, "bceloss": 237, "behavior": [177, 178, 179, 252, 253, 254], "benefit": 281, "bernoulli": 284, "bilinear": [163, 233], "binari": 314, "binary_cross_entropi": 166, "bottleneck": [76, 77], "broadcast": 280, "buffer": 131, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 87, 98, 105, 115, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 153, 155, 156, 163, 165, 177, 178, 179, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364], "captur": 282, "case": 283, "centercrop": 357, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 26, 40, 45, 46, 59, 63, 67, 71, 72, 73, 78, 87, 98, 105, 115, 120, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 190, 191, 192, 193, 194, 195, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 292, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "clip": 319, "co": 320, "combin": 0, "compon": [3, 10, 264], "compos": 355, "concatdataset": [0, 1], "concaten": 341, "conclus": [3, 10, 264, 279, 280, 281, 291, 356, 366], "configur": [45, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86], "constant": 199, "contain": 139, "conv": 198, "conv1d": [149, 220], "conv2d": [150, 221], "conv3d": [151, 222], "convbnrelu1d": 190, "convbnrelu2d": 191, "convbnrelu3d": 192, "convnet": [66, 129], "convnext": 25, "convnext_bas": 27, "convnext_larg": 28, "convnext_smal": 29, "convnext_tini": 30, "convnext_v2": 26, "convnext_v2_atto": 31, "convnext_v2_bas": 32, "convnext_v2_femto": 33, "convnext_v2_hug": 34, "convnext_v2_larg": 35, "convnext_v2_nano": 36, "convnext_v2_pico": 37, "convnext_v2_tini": 38, "convnext_xlarg": 39, "convolut": [152, 162, 198, 223, 232], "core": 10, "cosh": 321, "creat": [133, 292, 340], "cross_entropi": 167, "crossentropyloss": 238, "cube": 322, "custom": [1, 2, 3, 132, 265, 266, 366], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 132, 265, 266], "definit": 283, "densenet": 40, "densenet_121": 41, "densenet_169": 42, "densenet_201": 43, "densenet_264": 44, "depthseparableconv1d": 193, "depthseparableconv2d": 194, "depthseparableconv3d": 195, "depthwis": 198, "descript": [99, 100, 101, 102, 103, 104, 116, 117, 118, 282], "det": 13, "detail": [19, 96, 97], "diag": 305, "dilat": 153, "div": 294, "dot": 295, "drop_block": 155, "drop_path": 156, "dropblock": 225, "dropout": [157, 161, 162, 227, 231, 232], "dropout1d": [158, 228], "dropout2d": [159, 229], "dropout3d": [160, 230], "droppath": 226, "efficientnet": 45, "efficientnet_b0": 47, "efficientnet_b1": 48, "efficientnet_b2": 49, "efficientnet_b3": 50, "efficientnet_b4": 51, "efficientnet_b5": 52, "efficientnet_b6": 53, "efficientnet_b7": 54, "efficientnet_v2": 46, "efficientnet_v2_": 57, "efficientnet_v2_l": 55, "efficientnet_v2_m": 56, "efficientnet_v2_xl": 58, "eig": 14, "elu": [140, 207], "empti": 306, "empty_lik": 307, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366], "excit": 198, "exp": 323, "express": 173, "ey": 308, "fashionmnist": 7, "featur": [4, 10, 11, 111, 112, 113, 114, 119, 266, 291, 366], "flatten": 342, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 87, 98, 105, 115, 125, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 153, 156, 163, 165, 177, 178, 179, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364], "from": 340, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 201, 202, 203, 204, 205, 206, 279, 281, 282, 284, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "fuse": 198, "futur": 4, "gelu": [141, 208], "gener": [285, 314], "get": 266, "global_response_norm": 173, "globalresponsenorm": 246, "grad_en": 279, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 155, 163, 165, 188, 196, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "guidelin": 283, "hardsigmoid": 209, "hardswish": 210, "how": [279, 281], "hstack": 343, "huber_loss": 168, "huberloss": 239, "hyperparamet": [85, 86], "ident": 234, "imag": [9, 365], "incept": 59, "inception_resnet_v1": 64, "inception_resnet_v2": 65, "inception_v1": 60, "inception_v3": 61, "inception_v4": 62, "inceptionresnet": 63, "index": 292, "init": [199, 201, 202, 203, 204, 205, 206], "initi": 200, "inner": 296, "input": 340, "inspect": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "instance_norm": 175, "instancenorm1d": 247, "instancenorm2d": 248, "instancenorm3d": 249, "integr": [3, 264, 291, 366], "interpol": 188, "inv": 16, "iter": 292, "kaiming_norm": 201, "kaiming_uniform": 202, "kei": [3, 4, 10, 111, 112, 113, 114, 119, 264, 266, 291, 366], "kernel": 198, "layer": [79, 80, 81, 82, 83, 84, 198, 219, 223, 231, 232, 236, 242, 251, 261, 263], "layer_norm": 176, "layernorm": 250, "leaky_relu": 143, "leakyrelu": 211, "learn": 291, "lenet": 67, "lenet_1": 68, "lenet_4": 69, "lenet_5": 70, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 162, 164, 165, 232, 235, 236], "linspac": 309, "list": 340, "load": 1, "log": 324, "loss": [162, 169, 232, 242], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 129, 162, 264, 266, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366], "mathemat": 173, "matmul": 297, "matrix": 297, "matrix_pow": 17, "max": 325, "max_pool1d": 184, "max_pool2d": 185, "max_pool3d": 186, "maximum": 298, "maxpool1d": 258, "maxpool2d": 259, "maxpool3d": 260, "mean": 326, "mechan": 197, "meshgrid": 345, "metadata": 282, "method": [0, 1, 2, 5, 6, 7, 8, 63, 67, 120, 132, 133, 265, 292], "min": 327, "minimum": 299, "mnist": 8, "mobilenet": [71, 74], "mobilenet_v2": [72, 75], "mobilenet_v3": 73, "mobilenet_v3_larg": 76, "mobilenet_v3_smal": 77, "model": [129, 130, 264], "modul": [132, 232], "moduledict": 134, "modulelist": 135, "more": 291, "mse_loss": 170, "mseloss": 240, "mul": 300, "multipl": [0, 297], "nadam": 273, "new": 280, "newaxi": 280, "nll_loss": 171, "nllloss": 241, "nn": [131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264], "no_grad": 281, "norm": 18, "normal": [162, 174, 203, 232, 251, 358], "note": 10, "number": 285, "ones": 310, "ones_lik": 311, "oper": [15, 297, 314], "optim": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "organ": 264, "outer": 301, "overview": [3, 4, 10, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 106, 107, 108, 109, 110, 264, 266, 291, 366], "pad": 346, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "parameterdict": 136, "parameterlist": 137, "pass": 125, "perform": 292, "pinv": 19, "pipelin": [3, 366], "pitfal": [279, 281], "pool": [162, 183, 232, 261], "potenti": [279, 281], "power": 302, "properti": [133, 292], "qr": 20, "radam": 274, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 286, "randint": 287, "randn": 288, "random": [284, 285, 286, 287, 288, 289, 290, 291], "randomcrop": 359, "randomgrayscal": 360, "randomhorizontalflip": 361, "randomrot": 362, "randomverticalflip": 363, "ravel": 347, "reciproc": 328, "refer": [5, 6, 7, 8, 196, 266], "register_model": 282, "regular": 155, "relu": [144, 198, 212], "relu6": 213, "repeat": 348, "reshap": 349, "resiz": 364, "resnest": 78, "resnest_101": 79, "resnest_14": 80, "resnest_200": 81, "resnest_26": 82, "resnest_269": 83, "resnest_50": 84, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 86, "resnet": 87, "resnet_1001": 88, "resnet_101": 89, "resnet_152": 90, "resnet_18": 91, "resnet_200": 92, "resnet_269": 93, "resnet_34": 94, "resnet_50": 95, "resnext": 98, "resnext_101_32x16d": 99, "resnext_101_32x32d": 100, "resnext_101_32x4d": 101, "resnext_101_32x8d": 102, "resnext_101_64x4d": 103, "resnext_50_32x4d": 104, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 197, 199, 201, 202, 203, 204, 205, 206, 213, 279, 281, 284, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "rmsprop": 275, "rotat": 189, "rprop": 276, "rule": 297, "se_resnet_101": 106, "se_resnet_152": 107, "se_resnet_18": 108, "se_resnet_34": 109, "se_resnet_50": 110, "se_resnext_101_32x4d": 111, "se_resnext_101_32x8d": 112, "se_resnext_101_64x4d": 113, "se_resnext_50_32x4d": 114, "see": 266, "seed": 289, "select": 198, "selectivekernel": 197, "selu": [145, 214], "semodul": 196, "senet": 105, "separ": 198, "sequenti": 138, "sgd": 277, "sigmoid": [146, 215], "sign": 329, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "sin": 330, "sinh": 331, "sk_resnet_18": 116, "sk_resnet_34": 117, "sk_resnet_50": 118, "sk_resnext_50_32x4d": 119, "sknet": 115, "slice": 292, "softmax": [147, 216], "solv": 21, "sqrt": 332, "squar": 333, "squeez": [198, 350], "stack": 351, "start": 266, "state": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "sub": 303, "sum": 334, "summar": 130, "summari": 130, "svd": 22, "swish": 217, "tabl": 130, "tan": 335, "tanh": [148, 218, 336], "tensor": [280, 292, 314, 340, 344], "through": 292, "tile": 352, "totensor": 356, "trace": 337, "track": 292, "transform": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "transpos": 338, "type": 283, "unari": 314, "unfold": 153, "uniform": [204, 290], "unsqueez": 353, "upsampl": 262, "us": [1, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 340], "usag": [4, 10, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 111, 112, 113, 114, 119, 131, 189, 279, 280, 281, 283, 345, 355, 356, 366], "util": [162, 187], "utilit": 344, "var": 339, "vggnet": 120, "vggnet_11": 121, "vggnet_13": 122, "vggnet_16": 123, "vggnet_19": 124, "vision": [232, 263], "vstack": 354, "weight": 200, "why": 283, "wide_resnet_101": 96, "wide_resnet_50": 97, "work": [4, 279, 281], "xavier_norm": 205, "xavier_uniform": 206, "xception": [125, 126], "zero": 312, "zeros_lik": 313, "zfnet": [127, 128]}})